

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jul 27 12:31:23 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F887 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  0105                     	;# 
   234  0107                     	;# 
   235  0108                     	;# 
   236  0109                     	;# 
   237  010C                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0185                     	;# 
   243  0187                     	;# 
   244  0188                     	;# 
   245  0189                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  000E                     	;# 
   264  000F                     	;# 
   265  0010                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0014                     	;# 
   270  0015                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001D                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0086                     	;# 
   286  0087                     	;# 
   287  0088                     	;# 
   288  0089                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  009F                     	;# 
   311  0105                     	;# 
   312  0107                     	;# 
   313  0108                     	;# 
   314  0109                     	;# 
   315  010C                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  0185                     	;# 
   321  0187                     	;# 
   322  0188                     	;# 
   323  0189                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  008F                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0095                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  0105                     	;# 
   390  0107                     	;# 
   391  0108                     	;# 
   392  0109                     	;# 
   393  010C                     	;# 
   394  010C                     	;# 
   395  010D                     	;# 
   396  010E                     	;# 
   397  010F                     	;# 
   398  0185                     	;# 
   399  0187                     	;# 
   400  0188                     	;# 
   401  0189                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404                           
   405                           	psect	strings
   406  1000                     __pstrings:
   407  1000                     stringtab:
   408  1000                     __stringtab:
   409                           
   410                           ;	String table - string pointers are 1 byte each
   411  1000  1BFF               	btfsc	btemp+1,7
   412  1001  280A               	ljmp	stringcode
   413  1002  1383               	bcf	3,7
   414  1003  187F               	btfsc	btemp+1,0
   415  1004  1783               	bsf	3,7
   416  1005  0800               	movf	0,w
   417  1006  0A84               	incf	4,f
   418  1007  1903               	skipnz
   419  1008  0AFF               	incf	btemp+1,f
   420  1009  0008               	return
   421  100A                     stringcode:
   422  100A                     stringdir:
   423  100A  3010               	movlw	high stringdir
   424  100B  008A               	movwf	10
   425  100C  0804               	movf	4,w
   426  100D  0A84               	incf	4,f
   427  100E  0782               	addwf	2,f
   428  100F                     __stringbase:
   429  100F  3400               	retlw	0
   430  1010                     __end_of__stringtab:
   431  1010                     __powers_:
   432  1010  3400               	retlw	0
   433  1011  3400               	retlw	0
   434  1012  3480               	retlw	128
   435  1013  343F               	retlw	63
   436  1014  3400               	retlw	0
   437  1015  3400               	retlw	0
   438  1016  3420               	retlw	32
   439  1017  3441               	retlw	65
   440  1018  3400               	retlw	0
   441  1019  3400               	retlw	0
   442  101A  34C8               	retlw	200
   443  101B  3442               	retlw	66
   444  101C  3400               	retlw	0
   445  101D  3400               	retlw	0
   446  101E  347A               	retlw	122
   447  101F  3444               	retlw	68
   448  1020  3400               	retlw	0
   449  1021  3440               	retlw	64
   450  1022  341C               	retlw	28
   451  1023  3446               	retlw	70
   452  1024  3400               	retlw	0
   453  1025  3450               	retlw	80
   454  1026  34C3               	retlw	195
   455  1027  3447               	retlw	71
   456  1028  3400               	retlw	0
   457  1029  3424               	retlw	36
   458  102A  3474               	retlw	116
   459  102B  3449               	retlw	73
   460  102C  3480               	retlw	128
   461  102D  3496               	retlw	150
   462  102E  3418               	retlw	24
   463  102F  344B               	retlw	75
   464  1030  3420               	retlw	32
   465  1031  34BC               	retlw	188
   466  1032  34BE               	retlw	190
   467  1033  344C               	retlw	76
   468  1034  3428               	retlw	40
   469  1035  346B               	retlw	107
   470  1036  346E               	retlw	110
   471  1037  344E               	retlw	78
   472  1038  34F9               	retlw	249
   473  1039  3402               	retlw	2
   474  103A  3415               	retlw	21
   475  103B  3450               	retlw	80
   476  103C  34EC               	retlw	236
   477  103D  3478               	retlw	120
   478  103E  34AD               	retlw	173
   479  103F  3460               	retlw	96
   480  1040  34CA               	retlw	202
   481  1041  34F2               	retlw	242
   482  1042  3449               	retlw	73
   483  1043  3471               	retlw	113
   484  1044                     __end_of__powers_:
   485  1044                     __npowers_:
   486  1044  3400               	retlw	0
   487  1045  3400               	retlw	0
   488  1046  3480               	retlw	128
   489  1047  343F               	retlw	63
   490  1048  34CD               	retlw	205
   491  1049  34CC               	retlw	204
   492  104A  34CC               	retlw	204
   493  104B  343D               	retlw	61
   494  104C  340A               	retlw	10
   495  104D  34D7               	retlw	215
   496  104E  3423               	retlw	35
   497  104F  343C               	retlw	60
   498  1050  346F               	retlw	111
   499  1051  3412               	retlw	18
   500  1052  3483               	retlw	131
   501  1053  343A               	retlw	58
   502  1054  3417               	retlw	23
   503  1055  34B7               	retlw	183
   504  1056  34D1               	retlw	209
   505  1057  3438               	retlw	56
   506  1058  34AC               	retlw	172
   507  1059  34C5               	retlw	197
   508  105A  3427               	retlw	39
   509  105B  3437               	retlw	55
   510  105C  34BD               	retlw	189
   511  105D  3437               	retlw	55
   512  105E  3486               	retlw	134
   513  105F  3435               	retlw	53
   514  1060  3495               	retlw	149
   515  1061  34BF               	retlw	191
   516  1062  34D6               	retlw	214
   517  1063  3433               	retlw	51
   518  1064  3477               	retlw	119
   519  1065  34CC               	retlw	204
   520  1066  342B               	retlw	43
   521  1067  3432               	retlw	50
   522  1068  345F               	retlw	95
   523  1069  3470               	retlw	112
   524  106A  3489               	retlw	137
   525  106B  3430               	retlw	48
   526  106C  34FF               	retlw	255
   527  106D  34E6               	retlw	230
   528  106E  34DB               	retlw	219
   529  106F  342E               	retlw	46
   530  1070  3408               	retlw	8
   531  1071  34E5               	retlw	229
   532  1072  343C               	retlw	60
   533  1073  341E               	retlw	30
   534  1074  3460               	retlw	96
   535  1075  3442               	retlw	66
   536  1076  34A2               	retlw	162
   537  1077  340D               	retlw	13
   538  1078                     __end_of__npowers_:
   539  1078                     _dpowers:
   540  1078  3401               	retlw	1
   541  1079  3400               	retlw	0
   542  107A  3400               	retlw	0
   543  107B  3400               	retlw	0
   544  107C  340A               	retlw	10
   545  107D  3400               	retlw	0
   546  107E  3400               	retlw	0
   547  107F  3400               	retlw	0
   548  1080  3464               	retlw	100
   549  1081  3400               	retlw	0
   550  1082  3400               	retlw	0
   551  1083  3400               	retlw	0
   552  1084  34E8               	retlw	232
   553  1085  3403               	retlw	3
   554  1086  3400               	retlw	0
   555  1087  3400               	retlw	0
   556  1088  3410               	retlw	16
   557  1089  3427               	retlw	39
   558  108A  3400               	retlw	0
   559  108B  3400               	retlw	0
   560  108C  34A0               	retlw	160
   561  108D  3486               	retlw	134
   562  108E  3401               	retlw	1
   563  108F  3400               	retlw	0
   564  1090  3440               	retlw	64
   565  1091  3442               	retlw	66
   566  1092  340F               	retlw	15
   567  1093  3400               	retlw	0
   568  1094  3480               	retlw	128
   569  1095  3496               	retlw	150
   570  1096  3498               	retlw	152
   571  1097  3400               	retlw	0
   572  1098  3400               	retlw	0
   573  1099  34E1               	retlw	225
   574  109A  34F5               	retlw	245
   575  109B  3405               	retlw	5
   576  109C  3400               	retlw	0
   577  109D  34CA               	retlw	202
   578  109E  349A               	retlw	154
   579  109F  343B               	retlw	59
   580  10A0                     __end_of_dpowers:
   581  0007                     _PORTCbits	set	7
   582  000B                     _INTCONbits	set	11
   583  0018                     _RCSTAbits	set	24
   584  0005                     _PORTA	set	5
   585  0019                     _TXREG	set	25
   586  001A                     _RCREG	set	26
   587  001E                     _ADRESH	set	30
   588  001F                     _ADCON0bits	set	31
   589  000C                     _PIR1bits	set	12
   590  0039                     _RC1	set	57
   591  0047                     _RD7	set	71
   592  0046                     _RD6	set	70
   593  0045                     _RD5	set	69
   594  0044                     _RD4	set	68
   595  0043                     _RD3	set	67
   596  0042                     _RD2	set	66
   597  0041                     _RD1	set	65
   598  0040                     _RD0	set	64
   599  0064                     _TXIF	set	100
   600  008C                     _PIE1bits	set	140
   601  009A                     _SPBRGH	set	154
   602  0099                     _SPBRG	set	153
   603  0098                     _TXSTAbits	set	152
   604  008F                     _OSCCONbits	set	143
   605  009F                     _ADCON1bits	set	159
   606  0089                     _TRISE	set	137
   607  0088                     _TRISD	set	136
   608  0085                     _TRISA	set	133
   609  0087                     _TRISCbits	set	135
   610  0086                     _TRISB	set	134
   611  0187                     _BAUDCTLbits	set	391
   612  0188                     _ANSEL	set	392
   613  0189                     _ANSELH	set	393
   614  10A0                     STR_2:
   615  10A0  3425               	retlw	37	;'%'
   616  10A1  3433               	retlw	51	;'3'
   617  10A2  342E               	retlw	46	;'.'
   618  10A3  3431               	retlw	49	;'1'
   619  10A4  3466               	retlw	102	;'f'
   620  10A5  3456               	retlw	86	;'V'
   621  10A6  3420               	retlw	32	;' '
   622  10A7  3425               	retlw	37	;'%'
   623  10A8  3433               	retlw	51	;'3'
   624  10A9  342E               	retlw	46	;'.'
   625  10AA  3432               	retlw	50	;'2'
   626  10AB  3466               	retlw	102	;'f'
   627  10AC  3456               	retlw	86	;'V'
   628  10AD  3420               	retlw	32	;' '
   629  10AE  3425               	retlw	37	;'%'
   630  10AF  3433               	retlw	51	;'3'
   631  10B0  342E               	retlw	46	;'.'
   632  10B1  3432               	retlw	50	;'2'
   633  10B2  3466               	retlw	102	;'f'
   634  10B3  3456               	retlw	86	;'V'
   635  10B4  3400               	retlw	0
   636  10B5                     STR_1:
   637  10B5  3420               	retlw	32	;' '
   638  10B6  3453               	retlw	83	;'S'
   639  10B7  3431               	retlw	49	;'1'
   640  10B8  343A               	retlw	58	;':'
   641  10B9  3420               	retlw	32	;' '
   642  10BA  3420               	retlw	32	;' '
   643  10BB  3420               	retlw	32	;' '
   644  10BC  3453               	retlw	83	;'S'
   645  10BD  3432               	retlw	50	;'2'
   646  10BE  343A               	retlw	58	;':'
   647  10BF  3420               	retlw	32	;' '
   648  10C0  3420               	retlw	32	;' '
   649  10C1  3453               	retlw	83	;'S'
   650  10C2  3433               	retlw	51	;'3'
   651  10C3  343A               	retlw	58	;':'
   652  10C4  3420               	retlw	32	;' '
   653  10C5  3420               	retlw	32	;' '
   654  10C6  3400               	retlw	0
   655                           
   656                           	psect	cinit
   657  000F                     start_initialization:	
   658                           ; #config settings
   659                           
   660  000F                     __initialization:
   661                           
   662                           ; Clear objects allocated to BANK1
   663  000F  1383               	bcf	3,7	;select IRP bank0
   664  0010  30D3               	movlw	low __pbssBANK1
   665  0011  0084               	movwf	4
   666  0012  30EC               	movlw	low (__pbssBANK1+25)
   667  0013  160A  158A  217E  120A  118A  	fcall	clear_ram0
   668                           
   669                           ; Clear objects allocated to BANK3
   670  0018  1783               	bsf	3,7	;select IRP bank2
   671  0019  3090               	movlw	low __pbssBANK3
   672  001A  0084               	movwf	4
   673  001B  309A               	movlw	low (__pbssBANK3+10)
   674  001C  160A  158A  217E  120A  118A  	fcall	clear_ram0
   675  0021                     end_of_initialization:	
   676                           ;End of C runtime variable initialization code
   677                           
   678  0021                     __end_of__initialization:
   679  0021  0183               	clrf	3
   680  0022  120A  158A  282F   	ljmp	_main	;jump to C main() function
   681                           
   682                           	psect	bssBANK1
   683  00D3                     __pbssBANK1:
   684  00D3                     _v33:
   685  00D3                     	ds	4
   686  00D7                     _v22:
   687  00D7                     	ds	4
   688  00DB                     _v11:
   689  00DB                     	ds	4
   690  00DF                     _V3:
   691  00DF                     	ds	1
   692  00E0                     _V2:
   693  00E0                     	ds	1
   694  00E1                     _V1:
   695  00E1                     	ds	1
   696  00E2                     _f1:
   697  00E2                     	ds	10
   698                           
   699                           	psect	bssBANK3
   700  0190                     __pbssBANK3:
   701  0190                     _f2:
   702  0190                     	ds	10
   703                           
   704                           	psect	clrtext
   705  197E                     clear_ram0:	
   706                           ;	Called with FSR containing the base address, and
   707                           ;	W with the last address+1
   708                           
   709  197E  0064               	clrwdt	;clear the watchdog before getting into this loop
   710  197F                     clrloop0:
   711  197F  0180               	clrf	0	;clear RAM location pointed to by FSR
   712  1980  0A84               	incf	4,f	;increment pointer
   713  1981  0604               	xorwf	4,w	;XOR with final address
   714  1982  1903               	btfsc	3,2	;have we reached the end yet?
   715  1983  3400               	retlw	0	;all done for this memory range, return
   716  1984  0604               	xorwf	4,w	;XOR again to restore value
   717  1985  297F               	goto	clrloop0	;do the next byte
   718                           
   719                           	psect	cstackBANK1
   720  00A0                     __pcstackBANK1:
   721  00A0                     ?___flsub:
   722  00A0                     ___flsub@a:	
   723                           ; 4 bytes @ 0x0
   724                           
   725                           
   726                           ; 4 bytes @ 0x0
   727  00A0                     	ds	4
   728  00A4                     ___flsub@b:
   729                           
   730                           ; 4 bytes @ 0x4
   731  00A4                     	ds	4
   732  00A8                     ?_sprintf:
   733  00A8                     sprintf@f:	
   734                           ; 2 bytes @ 0x8
   735                           
   736                           
   737                           ; 1 bytes @ 0x8
   738  00A8                     	ds	13
   739  00B5                     _sprintf$1239:
   740                           
   741                           ; 4 bytes @ 0x15
   742  00B5                     	ds	4
   743  00B9                     sprintf@ap:
   744                           
   745                           ; 1 bytes @ 0x19
   746  00B9                     	ds	1
   747  00BA                     sprintf@val:
   748                           
   749                           ; 4 bytes @ 0x1A
   750  00BA                     	ds	4
   751  00BE                     sprintf@flag:
   752                           
   753                           ; 2 bytes @ 0x1E
   754  00BE                     	ds	2
   755  00C0                     sprintf@width:
   756                           
   757                           ; 2 bytes @ 0x20
   758  00C0                     	ds	2
   759  00C2                     sprintf@tmpval:
   760                           
   761                           ; 4 bytes @ 0x22
   762  00C2                     	ds	4
   763  00C6                     sprintf@eexp:
   764                           
   765                           ; 2 bytes @ 0x26
   766  00C6                     	ds	2
   767  00C8                     sprintf@fval:
   768                           
   769                           ; 4 bytes @ 0x28
   770  00C8                     	ds	4
   771  00CC                     sprintf@sp:
   772                           
   773                           ; 1 bytes @ 0x2C
   774  00CC                     	ds	1
   775  00CD                     sprintf@prec:
   776                           
   777                           ; 2 bytes @ 0x2D
   778  00CD                     	ds	2
   779  00CF                     sprintf@c:
   780                           
   781                           ; 1 bytes @ 0x2F
   782  00CF                     	ds	1
   783  00D0                     ??_main:
   784                           
   785                           ; 1 bytes @ 0x30
   786  00D0                     	ds	3
   787                           
   788                           	psect	cstackCOMMON
   789  0070                     __pcstackCOMMON:
   790  0070                     ?_isdigit:
   791  0070                     ?_int_adc:	
   792                           ; 1 bit 
   793                           
   794  0070                     ??_int_adc:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0070                     ?_int_uart:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0070                     ??_int_uart:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0070                     ?_cfg_io:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     ?_cfg_clk:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ?_cfg_inte:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ?_cfg_adc:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ?_cfg_usart:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?_Lcd_Init:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_Lcd_Clear:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?_send_crct:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ?_send_char:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_isr:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_main:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?_Lcd_Port:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_Lcd_Cmd:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_Lcd_Write_Char:	
   843                           ; 1 bytes @ 0x0
   844                           
   845                           
   846                           ; 1 bytes @ 0x0
   847  0070                     	ds	1
   848  0071                     ??_isr:
   849                           
   850                           ; 1 bytes @ 0x1
   851  0071                     	ds	2
   852  0073                     ?___fleq:
   853  0073                     ?___flge:	
   854                           ; 1 bit 
   855                           
   856  0073                     ??_cfg_io:	
   857                           ; 1 bit 
   858                           
   859  0073                     ??_cfg_clk:	
   860                           ; 1 bytes @ 0x3
   861                           
   862  0073                     ??_cfg_inte:	
   863                           ; 1 bytes @ 0x3
   864                           
   865  0073                     ??_cfg_adc:	
   866                           ; 1 bytes @ 0x3
   867                           
   868  0073                     ??_cfg_usart:	
   869                           ; 1 bytes @ 0x3
   870                           
   871  0073                     ??_send_char:	
   872                           ; 1 bytes @ 0x3
   873                           
   874  0073                     ??_isdigit:	
   875                           ; 1 bytes @ 0x3
   876                           
   877  0073                     ??_Lcd_Port:	
   878                           ; 1 bytes @ 0x3
   879                           
   880  0073                     ?__Umul8_16:	
   881                           ; 1 bytes @ 0x3
   882                           
   883  0073                     ?___wmul:	
   884                           ; 2 bytes @ 0x3
   885                           
   886  0073                     ?___awmod:	
   887                           ; 2 bytes @ 0x3
   888                           
   889  0073                     ?___lwmod:	
   890                           ; 2 bytes @ 0x3
   891                           
   892  0073                     ?__tdiv_to_l_:	
   893                           ; 2 bytes @ 0x3
   894                           
   895  0073                     ?__div_to_l_:	
   896                           ; 4 bytes @ 0x3
   897                           
   898  0073                     ?___lldiv:	
   899                           ; 4 bytes @ 0x3
   900                           
   901  0073                     ?___flneg:	
   902                           ; 4 bytes @ 0x3
   903                           
   904  0073                     ?___llmod:	
   905                           ; 4 bytes @ 0x3
   906                           
   907  0073                     ?___xxtofl:	
   908                           ; 4 bytes @ 0x3
   909                           
   910  0073                     send_char@dato:	
   911                           ; 4 bytes @ 0x3
   912                           
   913  0073                     Lcd_Port@a:	
   914                           ; 1 bytes @ 0x3
   915                           
   916  0073                     __Umul8_16@multiplicand:	
   917                           ; 1 bytes @ 0x3
   918                           
   919  0073                     _isdigit$1052:	
   920                           ; 1 bytes @ 0x3
   921                           
   922  0073                     ___wmul@multiplier:	
   923                           ; 1 bytes @ 0x3
   924                           
   925  0073                     ___awmod@divisor:	
   926                           ; 2 bytes @ 0x3
   927                           
   928  0073                     ___lwmod@divisor:	
   929                           ; 2 bytes @ 0x3
   930                           
   931  0073                     ___lldiv@divisor:	
   932                           ; 2 bytes @ 0x3
   933                           
   934  0073                     __div_to_l_@f1:	
   935                           ; 4 bytes @ 0x3
   936                           
   937  0073                     ___fleq@ff1:	
   938                           ; 4 bytes @ 0x3
   939                           
   940  0073                     ___flge@ff1:	
   941                           ; 4 bytes @ 0x3
   942                           
   943  0073                     ___flneg@f1:	
   944                           ; 4 bytes @ 0x3
   945                           
   946  0073                     __tdiv_to_l_@f1:	
   947                           ; 4 bytes @ 0x3
   948                           
   949  0073                     ___llmod@divisor:	
   950                           ; 4 bytes @ 0x3
   951                           
   952  0073                     ___xxtofl@val:	
   953                           ; 4 bytes @ 0x3
   954                           
   955                           
   956                           ; 4 bytes @ 0x3
   957  0073                     	ds	1
   958  0074                     ??_send_crct:
   959  0074                     ??_Lcd_Cmd:	
   960                           ; 1 bytes @ 0x4
   961                           
   962  0074                     ??_Lcd_Write_Char:	
   963                           ; 1 bytes @ 0x4
   964                           
   965  0074                     isdigit@c:	
   966                           ; 1 bytes @ 0x4
   967                           
   968                           
   969                           ; 1 bytes @ 0x4
   970  0074                     	ds	1
   971  0075                     ??__Umul8_16:
   972  0075                     Lcd_Write_Char@a:	
   973                           ; 1 bytes @ 0x5
   974                           
   975  0075                     send_crct@i:	
   976                           ; 1 bytes @ 0x5
   977                           
   978  0075                     ___wmul@multiplicand:	
   979                           ; 2 bytes @ 0x5
   980                           
   981  0075                     ___awmod@dividend:	
   982                           ; 2 bytes @ 0x5
   983                           
   984  0075                     ___lwmod@dividend:	
   985                           ; 2 bytes @ 0x5
   986                           
   987                           
   988                           ; 2 bytes @ 0x5
   989  0075                     	ds	1
   990  0076                     ?_Lcd_Write_String:
   991  0076                     Lcd_Cmd@a:	
   992                           ; 1 bytes @ 0x6
   993                           
   994  0076                     Lcd_Write_String@a:	
   995                           ; 1 bytes @ 0x6
   996                           
   997                           
   998                           ; 2 bytes @ 0x6
   999  0076                     	ds	1
  1000  0077                     ??_Lcd_Init:
  1001  0077                     ??_Lcd_Clear:	
  1002                           ; 1 bytes @ 0x7
  1003                           
  1004  0077                     ?_Lcd_Set_Cursor:	
  1005                           ; 1 bytes @ 0x7
  1006                           
  1007  0077                     ??___wmul:	
  1008                           ; 1 bytes @ 0x7
  1009                           
  1010  0077                     ??___awmod:	
  1011                           ; 1 bytes @ 0x7
  1012                           
  1013  0077                     ??___flneg:	
  1014                           ; 1 bytes @ 0x7
  1015                           
  1016  0077                     ??___lwmod:	
  1017                           ; 1 bytes @ 0x7
  1018                           
  1019  0077                     ??___xxtofl:	
  1020                           ; 1 bytes @ 0x7
  1021                           
  1022  0077                     send_crct@st:	
  1023                           ; 1 bytes @ 0x7
  1024                           
  1025  0077                     Lcd_Set_Cursor@b:	
  1026                           ; 1 bytes @ 0x7
  1027                           
  1028  0077                     ___wmul@product:	
  1029                           ; 1 bytes @ 0x7
  1030                           
  1031  0077                     ___lldiv@dividend:	
  1032                           ; 2 bytes @ 0x7
  1033                           
  1034  0077                     __div_to_l_@f2:	
  1035                           ; 4 bytes @ 0x7
  1036                           
  1037  0077                     ___fleq@ff2:	
  1038                           ; 4 bytes @ 0x7
  1039                           
  1040  0077                     ___flge@ff2:	
  1041                           ; 4 bytes @ 0x7
  1042                           
  1043  0077                     __tdiv_to_l_@f2:	
  1044                           ; 4 bytes @ 0x7
  1045                           
  1046  0077                     ___llmod@dividend:	
  1047                           ; 4 bytes @ 0x7
  1048                           
  1049                           
  1050                           ; 4 bytes @ 0x7
  1051  0077                     	ds	1
  1052  0078                     ??_Lcd_Set_Cursor:
  1053  0078                     ??_Lcd_Write_String:	
  1054                           ; 1 bytes @ 0x8
  1055                           
  1056  0078                     ___awmod@counter:	
  1057                           ; 1 bytes @ 0x8
  1058                           
  1059  0078                     ___lwmod@counter:	
  1060                           ; 1 bytes @ 0x8
  1061                           
  1062                           
  1063                           ; 1 bytes @ 0x8
  1064  0078                     	ds	1
  1065  0079                     ??___lwdiv:
  1066  0079                     Lcd_Set_Cursor@a:	
  1067                           ; 1 bytes @ 0x9
  1068                           
  1069  0079                     ___awmod@sign:	
  1070                           ; 1 bytes @ 0x9
  1071                           
  1072                           
  1073                           ; 1 bytes @ 0x9
  1074  0079                     	ds	1
  1075  007A                     ??___awdiv:
  1076  007A                     Lcd_Set_Cursor@temp:	
  1077                           ; 1 bytes @ 0xA
  1078                           
  1079                           
  1080                           ; 1 bytes @ 0xA
  1081  007A                     	ds	1
  1082  007B                     ??___flsub:
  1083                           
  1084                           	psect	cstackBANK0
  1085  0020                     __pcstackBANK0:	
  1086                           ; 1 bytes @ 0xB
  1087                           
  1088  0020                     ??__tdiv_to_l_:
  1089  0020                     ??__div_to_l_:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0020                     ??___lldiv:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0020                     ??___fleq:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0020                     ??___flge:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0020                     ??___llmod:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104  0020                     ?___awdiv:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0020                     ?___lwdiv:	
  1108                           ; 2 bytes @ 0x0
  1109                           
  1110  0020                     ___xxtofl@sign:	
  1111                           ; 2 bytes @ 0x0
  1112                           
  1113  0020                     Lcd_Write_String@i:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0020                     ___awdiv@divisor:	
  1117                           ; 2 bytes @ 0x0
  1118                           
  1119  0020                     ___lwdiv@divisor:	
  1120                           ; 2 bytes @ 0x0
  1121                           
  1122  0020                     __Umul8_16@product:	
  1123                           ; 2 bytes @ 0x0
  1124                           
  1125                           
  1126                           ; 2 bytes @ 0x0
  1127  0020                     	ds	1
  1128  0021                     ___llmod@counter:
  1129  0021                     ___xxtofl@exp:	
  1130                           ; 1 bytes @ 0x1
  1131                           
  1132  0021                     ___lldiv@quotient:	
  1133                           ; 1 bytes @ 0x1
  1134                           
  1135  0021                     __div_to_l_@quot:	
  1136                           ; 4 bytes @ 0x1
  1137                           
  1138                           
  1139                           ; 4 bytes @ 0x1
  1140  0021                     	ds	1
  1141  0022                     ___awdiv@dividend:
  1142  0022                     ___lwdiv@dividend:	
  1143                           ; 2 bytes @ 0x2
  1144                           
  1145  0022                     __Umul8_16@word_mpld:	
  1146                           ; 2 bytes @ 0x2
  1147                           
  1148  0022                     ___xxtofl@arg:	
  1149                           ; 2 bytes @ 0x2
  1150                           
  1151                           
  1152                           ; 4 bytes @ 0x2
  1153  0022                     	ds	2
  1154  0024                     ___awdiv@counter:
  1155  0024                     __Umul8_16@multiplier:	
  1156                           ; 1 bytes @ 0x4
  1157                           
  1158  0024                     ___lwdiv@quotient:	
  1159                           ; 1 bytes @ 0x4
  1160                           
  1161  0024                     __tdiv_to_l_@quot:	
  1162                           ; 2 bytes @ 0x4
  1163                           
  1164                           
  1165                           ; 4 bytes @ 0x4
  1166  0024                     	ds	1
  1167  0025                     ___lldiv@counter:
  1168  0025                     ___awdiv@sign:	
  1169                           ; 1 bytes @ 0x5
  1170                           
  1171  0025                     __div_to_l_@cntr:	
  1172                           ; 1 bytes @ 0x5
  1173                           
  1174                           
  1175                           ; 1 bytes @ 0x5
  1176  0025                     	ds	1
  1177  0026                     __div_to_l_@exp1:
  1178  0026                     ___lwdiv@counter:	
  1179                           ; 1 bytes @ 0x6
  1180                           
  1181  0026                     ___awdiv@quotient:	
  1182                           ; 1 bytes @ 0x6
  1183                           
  1184                           
  1185                           ; 2 bytes @ 0x6
  1186  0026                     	ds	2
  1187  0028                     ?___flmul:
  1188  0028                     __tdiv_to_l_@cntr:	
  1189                           ; 4 bytes @ 0x8
  1190                           
  1191  0028                     ___flmul@b:	
  1192                           ; 1 bytes @ 0x8
  1193                           
  1194                           
  1195                           ; 4 bytes @ 0x8
  1196  0028                     	ds	1
  1197  0029                     __tdiv_to_l_@exp1:
  1198                           
  1199                           ; 1 bytes @ 0x9
  1200  0029                     	ds	3
  1201  002C                     ___flmul@a:
  1202                           
  1203                           ; 4 bytes @ 0xC
  1204  002C                     	ds	4
  1205  0030                     ??___flmul:
  1206                           
  1207                           ; 1 bytes @ 0x10
  1208  0030                     	ds	5
  1209  0035                     ___flmul@sign:
  1210                           
  1211                           ; 1 bytes @ 0x15
  1212  0035                     	ds	1
  1213  0036                     ___flmul@grs:
  1214                           
  1215                           ; 4 bytes @ 0x16
  1216  0036                     	ds	4
  1217  003A                     ___flmul@aexp:
  1218                           
  1219                           ; 1 bytes @ 0x1A
  1220  003A                     	ds	1
  1221  003B                     ___flmul@bexp:
  1222                           
  1223                           ; 1 bytes @ 0x1B
  1224  003B                     	ds	1
  1225  003C                     ___flmul@prod:
  1226                           
  1227                           ; 4 bytes @ 0x1C
  1228  003C                     	ds	4
  1229  0040                     ___flmul@temp:
  1230                           
  1231                           ; 2 bytes @ 0x20
  1232  0040                     	ds	2
  1233  0042                     ?_conv:
  1234  0042                     ?_fround:	
  1235                           ; 4 bytes @ 0x22
  1236                           
  1237  0042                     ?_scale:	
  1238                           ; 4 bytes @ 0x22
  1239                           
  1240                           
  1241                           ; 4 bytes @ 0x22
  1242  0042                     	ds	4
  1243  0046                     ??_conv:
  1244  0046                     ??_fround:	
  1245                           ; 1 bytes @ 0x26
  1246                           
  1247  0046                     ??_scale:	
  1248                           ; 1 bytes @ 0x26
  1249                           
  1250                           
  1251                           ; 1 bytes @ 0x26
  1252  0046                     	ds	4
  1253  004A                     conv@result:
  1254                           
  1255                           ; 4 bytes @ 0x2A
  1256  004A                     	ds	3
  1257  004D                     _fround$1237:
  1258                           
  1259                           ; 4 bytes @ 0x2D
  1260  004D                     	ds	1
  1261  004E                     conv@aa:
  1262                           
  1263                           ; 1 bytes @ 0x2E
  1264  004E                     	ds	2
  1265  0050                     _scale$1238:
  1266                           
  1267                           ; 4 bytes @ 0x30
  1268  0050                     	ds	1
  1269  0051                     _fround$1236:
  1270                           
  1271                           ; 4 bytes @ 0x31
  1272  0051                     	ds	3
  1273  0054                     scale@scl:
  1274                           
  1275                           ; 1 bytes @ 0x34
  1276  0054                     	ds	1
  1277  0055                     ?___fltol:
  1278  0055                     fround@prec:	
  1279                           ; 4 bytes @ 0x35
  1280                           
  1281  0055                     ___fltol@f1:	
  1282                           ; 1 bytes @ 0x35
  1283                           
  1284                           
  1285                           ; 4 bytes @ 0x35
  1286  0055                     	ds	1
  1287  0056                     ?___fladd:
  1288  0056                     ___fladd@b:	
  1289                           ; 4 bytes @ 0x36
  1290                           
  1291                           
  1292                           ; 4 bytes @ 0x36
  1293  0056                     	ds	3
  1294  0059                     ??___fltol:
  1295                           
  1296                           ; 1 bytes @ 0x39
  1297  0059                     	ds	1
  1298  005A                     ___fladd@a:
  1299                           
  1300                           ; 4 bytes @ 0x3A
  1301  005A                     	ds	4
  1302  005E                     ??___fladd:
  1303  005E                     ___fltol@sign1:	
  1304                           ; 1 bytes @ 0x3E
  1305                           
  1306                           
  1307                           ; 1 bytes @ 0x3E
  1308  005E                     	ds	1
  1309  005F                     ___fltol@exp1:
  1310                           
  1311                           ; 1 bytes @ 0x3F
  1312  005F                     	ds	7
  1313  0066                     ___fladd@signs:
  1314                           
  1315                           ; 1 bytes @ 0x46
  1316  0066                     	ds	1
  1317  0067                     ___fladd@aexp:
  1318                           
  1319                           ; 1 bytes @ 0x47
  1320  0067                     	ds	1
  1321  0068                     ___fladd@bexp:
  1322                           
  1323                           ; 1 bytes @ 0x48
  1324  0068                     	ds	1
  1325  0069                     ___fladd@grs:
  1326                           
  1327                           ; 1 bytes @ 0x49
  1328  0069                     	ds	1
  1329  006A                     ??_sprintf:
  1330                           
  1331                           ; 1 bytes @ 0x4A
  1332  006A                     	ds	5
  1333                           
  1334                           	psect	maintext
  1335  082F                     __pmaintext:	
  1336 ;;
  1337 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1338 ;;
  1339 ;; *************** function _main *****************
  1340 ;; Defined at:
  1341 ;;		line 126 in file "main.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : B00/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1355 ;;      Params:         0       0       0       0       0
  1356 ;;      Locals:         0       0       0       0       0
  1357 ;;      Temps:          0       0       3       0       0
  1358 ;;      Totals:         0       0       3       0       0
  1359 ;;Total ram usage:        3 bytes
  1360 ;; Hardware stack levels required when called:    6
  1361 ;; This function calls:
  1362 ;;		_Lcd_Clear
  1363 ;;		_Lcd_Init
  1364 ;;		_Lcd_Set_Cursor
  1365 ;;		_Lcd_Write_String
  1366 ;;		_cfg_adc
  1367 ;;		_cfg_clk
  1368 ;;		_cfg_inte
  1369 ;;		_cfg_io
  1370 ;;		_cfg_usart
  1371 ;;		_conv
  1372 ;;		_send_crct
  1373 ;;		_sprintf
  1374 ;; This function is called by:
  1375 ;;		Startup code after reset
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           
  1380                           ;psect for function _main
  1381  082F                     _main:
  1382  082F                     l3599:	
  1383                           ;incstack = 0
  1384                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1385                           
  1386                           
  1387                           ;main.c: 127:     cfg_io();
  1388  082F  160A  158A  21B7  120A  158A  	fcall	_cfg_io
  1389                           
  1390                           ;main.c: 128:     cfg_clk();
  1391  0834  160A  158A  2176  120A  158A  	fcall	_cfg_clk
  1392  0839                     l3601:
  1393                           
  1394                           ;main.c: 129:     cfg_inte();
  1395  0839  160A  158A  2186  120A  158A  	fcall	_cfg_inte
  1396  083E                     l3603:
  1397                           
  1398                           ;main.c: 130:     cfg_adc();
  1399  083E  160A  158A  21DF  120A  158A  	fcall	_cfg_adc
  1400  0843                     l3605:
  1401                           
  1402                           ;main.c: 131:     cfg_usart();
  1403  0843  160A  158A  21CA  120A  158A  	fcall	_cfg_usart
  1404  0848                     l3607:
  1405                           
  1406                           ;main.c: 133:     Lcd_Init();
  1407  0848  160A  158A  240A  120A  158A  	fcall	_Lcd_Init
  1408  084D                     l3609:
  1409                           
  1410                           ;main.c: 134:     ADCON0bits.GO = 1;
  1411  084D  1283               	bcf	3,5	;RP0=0, select bank0
  1412  084E  1303               	bcf	3,6	;RP1=0, select bank0
  1413  084F  149F               	bsf	31,1	;volatile
  1414  0850                     l3611:
  1415                           
  1416                           ;main.c: 141:       Lcd_Clear();
  1417  0850  160A  118A  20C7  120A  158A  	fcall	_Lcd_Clear
  1418  0855                     l3613:
  1419                           
  1420                           ;main.c: 142:       Lcd_Set_Cursor(1,1);
  1421  0855  01F7               	clrf	Lcd_Set_Cursor@b
  1422  0856  0AF7               	incf	Lcd_Set_Cursor@b,f
  1423  0857  3001               	movlw	1
  1424  0858  160A  158A  22A2  120A  158A  	fcall	_Lcd_Set_Cursor
  1425  085D                     l3615:
  1426                           
  1427                           ;main.c: 143:       Lcd_Write_String(" S1:   S2:  S3:  ");
  1428  085D  30A6               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1429  085E  00F6               	movwf	Lcd_Write_String@a
  1430  085F  3080               	movlw	128
  1431  0860  00F7               	movwf	Lcd_Write_String@a+1
  1432  0861  160A  158A  237E  120A  158A  	fcall	_Lcd_Write_String
  1433  0866                     l3617:
  1434                           
  1435                           ;main.c: 144:       v11 = conv(V1);
  1436  0866  1683               	bsf	3,5	;RP0=1, select bank1
  1437  0867  1303               	bcf	3,6	;RP1=0, select bank1
  1438  0868  0861               	movf	_V1^(0+128),w
  1439  0869  160A  158A  233E  120A  158A  	fcall	_conv
  1440  086E  1283               	bcf	3,5	;RP0=0, select bank0
  1441  086F  1303               	bcf	3,6	;RP1=0, select bank0
  1442  0870  0845               	movf	?_conv+3,w
  1443  0871  1683               	bsf	3,5	;RP0=1, select bank1
  1444  0872  1303               	bcf	3,6	;RP1=0, select bank1
  1445  0873  00DE               	movwf	(_v11+3)^(0+128)
  1446  0874  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0875  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0876  0844               	movf	?_conv+2,w
  1449  0877  1683               	bsf	3,5	;RP0=1, select bank1
  1450  0878  1303               	bcf	3,6	;RP1=0, select bank1
  1451  0879  00DD               	movwf	(_v11+2)^(0+128)
  1452  087A  1283               	bcf	3,5	;RP0=0, select bank0
  1453  087B  1303               	bcf	3,6	;RP1=0, select bank0
  1454  087C  0843               	movf	?_conv+1,w
  1455  087D  1683               	bsf	3,5	;RP0=1, select bank1
  1456  087E  1303               	bcf	3,6	;RP1=0, select bank1
  1457  087F  00DC               	movwf	(_v11+1)^(0+128)
  1458  0880  1283               	bcf	3,5	;RP0=0, select bank0
  1459  0881  1303               	bcf	3,6	;RP1=0, select bank0
  1460  0882  0842               	movf	?_conv,w
  1461  0883  1683               	bsf	3,5	;RP0=1, select bank1
  1462  0884  1303               	bcf	3,6	;RP1=0, select bank1
  1463  0885  00DB               	movwf	_v11^(0+128)
  1464  0886                     l3619:
  1465                           
  1466                           ;main.c: 145:       v22 = conv(V2);
  1467  0886  0860               	movf	_V2^(0+128),w
  1468  0887  160A  158A  233E  120A  158A  	fcall	_conv
  1469  088C  1283               	bcf	3,5	;RP0=0, select bank0
  1470  088D  1303               	bcf	3,6	;RP1=0, select bank0
  1471  088E  0845               	movf	?_conv+3,w
  1472  088F  1683               	bsf	3,5	;RP0=1, select bank1
  1473  0890  1303               	bcf	3,6	;RP1=0, select bank1
  1474  0891  00DA               	movwf	(_v22+3)^(0+128)
  1475  0892  1283               	bcf	3,5	;RP0=0, select bank0
  1476  0893  1303               	bcf	3,6	;RP1=0, select bank0
  1477  0894  0844               	movf	?_conv+2,w
  1478  0895  1683               	bsf	3,5	;RP0=1, select bank1
  1479  0896  1303               	bcf	3,6	;RP1=0, select bank1
  1480  0897  00D9               	movwf	(_v22+2)^(0+128)
  1481  0898  1283               	bcf	3,5	;RP0=0, select bank0
  1482  0899  1303               	bcf	3,6	;RP1=0, select bank0
  1483  089A  0843               	movf	?_conv+1,w
  1484  089B  1683               	bsf	3,5	;RP0=1, select bank1
  1485  089C  1303               	bcf	3,6	;RP1=0, select bank1
  1486  089D  00D8               	movwf	(_v22+1)^(0+128)
  1487  089E  1283               	bcf	3,5	;RP0=0, select bank0
  1488  089F  1303               	bcf	3,6	;RP1=0, select bank0
  1489  08A0  0842               	movf	?_conv,w
  1490  08A1  1683               	bsf	3,5	;RP0=1, select bank1
  1491  08A2  1303               	bcf	3,6	;RP1=0, select bank1
  1492  08A3  00D7               	movwf	_v22^(0+128)
  1493  08A4                     l3621:
  1494                           
  1495                           ;main.c: 146:       v33 = conv(V3);
  1496  08A4  085F               	movf	_V3^(0+128),w
  1497  08A5  160A  158A  233E  120A  158A  	fcall	_conv
  1498  08AA  1283               	bcf	3,5	;RP0=0, select bank0
  1499  08AB  1303               	bcf	3,6	;RP1=0, select bank0
  1500  08AC  0845               	movf	?_conv+3,w
  1501  08AD  1683               	bsf	3,5	;RP0=1, select bank1
  1502  08AE  1303               	bcf	3,6	;RP1=0, select bank1
  1503  08AF  00D6               	movwf	(_v33+3)^(0+128)
  1504  08B0  1283               	bcf	3,5	;RP0=0, select bank0
  1505  08B1  1303               	bcf	3,6	;RP1=0, select bank0
  1506  08B2  0844               	movf	?_conv+2,w
  1507  08B3  1683               	bsf	3,5	;RP0=1, select bank1
  1508  08B4  1303               	bcf	3,6	;RP1=0, select bank1
  1509  08B5  00D5               	movwf	(_v33+2)^(0+128)
  1510  08B6  1283               	bcf	3,5	;RP0=0, select bank0
  1511  08B7  1303               	bcf	3,6	;RP1=0, select bank0
  1512  08B8  0843               	movf	?_conv+1,w
  1513  08B9  1683               	bsf	3,5	;RP0=1, select bank1
  1514  08BA  1303               	bcf	3,6	;RP1=0, select bank1
  1515  08BB  00D4               	movwf	(_v33+1)^(0+128)
  1516  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  1517  08BD  1303               	bcf	3,6	;RP1=0, select bank0
  1518  08BE  0842               	movf	?_conv,w
  1519  08BF  1683               	bsf	3,5	;RP0=1, select bank1
  1520  08C0  1303               	bcf	3,6	;RP1=0, select bank1
  1521  08C1  00D3               	movwf	_v33^(0+128)
  1522  08C2                     l3623:
  1523                           
  1524                           ;main.c: 149:       Lcd_Set_Cursor(2,1);
  1525  08C2  01F7               	clrf	Lcd_Set_Cursor@b
  1526  08C3  0AF7               	incf	Lcd_Set_Cursor@b,f
  1527  08C4  3002               	movlw	2
  1528  08C5  160A  158A  22A2  120A  158A  	fcall	_Lcd_Set_Cursor
  1529  08CA                     l3625:
  1530                           
  1531                           ;main.c: 150:       sprintf(f1, "%3.1fV %3.2fV %3.2fV",v11, v22, v33);
  1532  08CA  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1533  08CB  1683               	bsf	3,5	;RP0=1, select bank1
  1534  08CC  1303               	bcf	3,6	;RP1=0, select bank1
  1535  08CD  00D0               	movwf	??_main^(0+128)
  1536  08CE  0850               	movf	??_main^(0+128),w
  1537  08CF  00A8               	movwf	sprintf@f^(0+128)
  1538  08D0  085E               	movf	(_v11+3)^(0+128),w
  1539  08D1  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1540  08D2  085D               	movf	(_v11+2)^(0+128),w
  1541  08D3  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1542  08D4  085C               	movf	(_v11+1)^(0+128),w
  1543  08D5  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1544  08D6  085B               	movf	_v11^(0+128),w
  1545  08D7  00A9               	movwf	(?_sprintf^(0+128)+1)
  1546  08D8  085A               	movf	(_v22+3)^(0+128),w
  1547  08D9  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1548  08DA  0859               	movf	(_v22+2)^(0+128),w
  1549  08DB  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1550  08DC  0858               	movf	(_v22+1)^(0+128),w
  1551  08DD  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1552  08DE  0857               	movf	_v22^(0+128),w
  1553  08DF  00AD               	movwf	(?_sprintf^(0+128)+5)
  1554  08E0  0856               	movf	(_v33+3)^(0+128),w
  1555  08E1  00B4               	movwf	((?_sprintf+3)^(0+128)+9)
  1556  08E2  0855               	movf	(_v33+2)^(0+128),w
  1557  08E3  00B3               	movwf	((?_sprintf+2)^(0+128)+9)
  1558  08E4  0854               	movf	(_v33+1)^(0+128),w
  1559  08E5  00B2               	movwf	((?_sprintf+1)^(0+128)+9)
  1560  08E6  0853               	movf	_v33^(0+128),w
  1561  08E7  00B1               	movwf	(?_sprintf^(0+128)+9)
  1562  08E8  30E2               	movlw	(low (_f1| 0))& (0+255)
  1563  08E9  160A  118A  24FC  120A  158A  	fcall	_sprintf
  1564  08EE                     l3627:
  1565                           
  1566                           ;main.c: 151:       Lcd_Write_String(f1);
  1567  08EE  30E2               	movlw	(low (_f1| 0))& (0+255)
  1568  08EF  00F6               	movwf	Lcd_Write_String@a
  1569  08F0  3000               	movlw	0
  1570  08F1  00F7               	movwf	Lcd_Write_String@a+1
  1571  08F2  160A  158A  237E  120A  158A  	fcall	_Lcd_Write_String
  1572  08F7                     l3629:
  1573                           
  1574                           ;main.c: 154:       TXREG = '\f';
  1575  08F7  300C               	movlw	12
  1576  08F8  1283               	bcf	3,5	;RP0=0, select bank0
  1577  08F9  1303               	bcf	3,6	;RP1=0, select bank0
  1578  08FA  0099               	movwf	25	;volatile
  1579  08FB                     l3631:
  1580                           
  1581                           ;main.c: 155:       send_crct(f1);
  1582  08FB  30E2               	movlw	(low (_f1| 0))& (0+255)
  1583  08FC  160A  158A  2281  120A  158A  	fcall	_send_crct
  1584  0901                     l3633:
  1585                           
  1586                           ;main.c: 158:       _delay((unsigned long)((100)*(8000000/4000.0)));
  1587  0901  3002               	movlw	2
  1588  0902  1683               	bsf	3,5	;RP0=1, select bank1
  1589  0903  1303               	bcf	3,6	;RP1=0, select bank1
  1590  0904  00D2               	movwf	(??_main^(0+128)+2)
  1591  0905  3004               	movlw	4
  1592  0906  00D1               	movwf	(??_main^(0+128)+1)
  1593  0907  30B9               	movlw	185
  1594  0908  00D0               	movwf	??_main^(0+128)
  1595  0909                     u5857:
  1596  0909  0BD0               	decfsz	??_main^(0+128),f
  1597  090A  2909               	goto	u5857
  1598  090B  0BD1               	decfsz	(??_main^(0+128)+1),f
  1599  090C  2909               	goto	u5857
  1600  090D  0BD2               	decfsz	(??_main^(0+128)+2),f
  1601  090E  2909               	goto	u5857
  1602  090F  2910               	nop2
  1603  0910                     l3635:
  1604                           
  1605                           ;main.c: 160:       if(ADCON0bits.GO == 0){
  1606  0910  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0911  1303               	bcf	3,6	;RP1=0, select bank0
  1608  0912  189F               	btfsc	31,1	;volatile
  1609  0913  2915               	goto	u5831
  1610  0914  2916               	goto	u5830
  1611  0915                     u5831:
  1612  0915  2850               	goto	l3611
  1613  0916                     u5830:
  1614  0916                     l3637:
  1615                           
  1616                           ;main.c: 161:         if (ADCON0bits.CHS == 5){
  1617  0916  0C1F               	rrf	31,w	;volatile
  1618  0917  1683               	bsf	3,5	;RP0=1, select bank1
  1619  0918  1303               	bcf	3,6	;RP1=0, select bank1
  1620  0919  00D0               	movwf	??_main^(0+128)
  1621  091A  0C50               	rrf	??_main^(0+128),w
  1622  091B  390F               	andlw	15
  1623  091C  3A05               	xorlw	5
  1624  091D  1D03               	skipz
  1625  091E  2920               	goto	u5841
  1626  091F  2921               	goto	u5840
  1627  0920                     u5841:
  1628  0920  2928               	goto	l3641
  1629  0921                     u5840:
  1630  0921                     l3639:
  1631                           
  1632                           ;main.c: 162:             ADCON0bits.CHS = 6;
  1633  0921  1283               	bcf	3,5	;RP0=0, select bank0
  1634  0922  1303               	bcf	3,6	;RP1=0, select bank0
  1635  0923  081F               	movf	31,w	;volatile
  1636  0924  39C3               	andlw	-61
  1637  0925  3818               	iorlw	24
  1638  0926  009F               	movwf	31	;volatile
  1639                           
  1640                           ;main.c: 163:         }
  1641  0927  292E               	goto	l3643
  1642  0928                     l3641:
  1643                           
  1644                           ;main.c: 165:             ADCON0bits.CHS = 5;
  1645  0928  1283               	bcf	3,5	;RP0=0, select bank0
  1646  0929  1303               	bcf	3,6	;RP1=0, select bank0
  1647  092A  081F               	movf	31,w	;volatile
  1648  092B  39C3               	andlw	-61
  1649  092C  3814               	iorlw	20
  1650  092D  009F               	movwf	31	;volatile
  1651  092E                     l3643:
  1652                           
  1653                           ;main.c: 167:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  1654  092E  3020               	movlw	32
  1655  092F  1683               	bsf	3,5	;RP0=1, select bank1
  1656  0930  1303               	bcf	3,6	;RP1=0, select bank1
  1657  0931  00D0               	movwf	??_main^(0+128)
  1658  0932                     u5867:
  1659  0932  0BD0               	decfsz	??_main^(0+128),f
  1660  0933  2932               	goto	u5867
  1661  0934  0000               	nop
  1662  0935                     l3645:
  1663                           
  1664                           ;main.c: 168:         ADCON0bits.GO = 1;
  1665  0935  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0936  1303               	bcf	3,6	;RP1=0, select bank0
  1667  0937  149F               	bsf	31,1	;volatile
  1668  0938  2850               	goto	l3611
  1669  0939  120A  118A  280C   	ljmp	start
  1670  093C                     __end_of_main:
  1671                           
  1672                           	psect	text1
  1673  14FC                     __ptext1:	
  1674 ;; *************** function _sprintf *****************
  1675 ;; Defined at:
  1676 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  sp              1    wreg     PTR unsigned char 
  1679 ;;		 -> f1(10), 
  1680 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1681 ;;		 -> STR_2(21), 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  sp              1   44[BANK1 ] PTR unsigned char 
  1684 ;;		 -> f1(10), 
  1685 ;;  fval            4   40[BANK1 ] PTR unsigned char 
  1686 ;;  tmpval          4   34[BANK1 ] struct .
  1687 ;;  val             4   26[BANK1 ] unsigned long 
  1688 ;;  prec            2   45[BANK1 ] int 
  1689 ;;  eexp            2   38[BANK1 ] int 
  1690 ;;  width           2   32[BANK1 ] int 
  1691 ;;  flag            2   30[BANK1 ] unsigned short 
  1692 ;;  cp              2    0        PTR const unsigned char 
  1693 ;;  len             2    0        unsigned int 
  1694 ;;  c               1   47[BANK1 ] unsigned char 
  1695 ;;  ap              1   25[BANK1 ] PTR void [1]
  1696 ;;		 -> ?_sprintf(2), 
  1697 ;;  d               1    0        unsigned char 
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  2    8[BANK1 ] int 
  1700 ;; Registers used:
  1701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1707 ;;      Params:         0       0      13       0       0
  1708 ;;      Locals:         0       0      27       0       0
  1709 ;;      Temps:          0       5       0       0       0
  1710 ;;      Totals:         0       5      40       0       0
  1711 ;;Total ram usage:       45 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    5
  1714 ;; This function calls:
  1715 ;;		___awdiv
  1716 ;;		___fladd
  1717 ;;		___fleq
  1718 ;;		___flge
  1719 ;;		___flmul
  1720 ;;		___flneg
  1721 ;;		___flsub
  1722 ;;		___fltol
  1723 ;;		___lldiv
  1724 ;;		___llmod
  1725 ;;		___wmul
  1726 ;;		___xxtofl
  1727 ;;		__div_to_l_
  1728 ;;		__tdiv_to_l_
  1729 ;;		_fround
  1730 ;;		_isdigit
  1731 ;;		_scale
  1732 ;; This function is called by:
  1733 ;;		_main
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           
  1738                           ;psect for function _sprintf
  1739  14FC                     _sprintf:
  1740                           
  1741                           ;incstack = 0
  1742                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1743                           ;sprintf@sp stored from wreg
  1744  14FC  1683               	bsf	3,5	;RP0=1, select bank1
  1745  14FD  1303               	bcf	3,6	;RP1=0, select bank1
  1746  14FE  00CC               	movwf	sprintf@sp^(0+128)
  1747  14FF                     l3321:
  1748                           
  1749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1750  14FF  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1751  1500  1283               	bcf	3,5	;RP0=0, select bank0
  1752  1501  1303               	bcf	3,6	;RP1=0, select bank0
  1753  1502  00EA               	movwf	??_sprintf
  1754  1503  086A               	movf	??_sprintf,w
  1755  1504  1683               	bsf	3,5	;RP0=1, select bank1
  1756  1505  1303               	bcf	3,6	;RP1=0, select bank1
  1757  1506  00B9               	movwf	sprintf@ap^(0+128)
  1758  1507                     L1:
  1759                           
  1760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1761  1507  120A  118A  2D80   	goto	l3571
  1762  150A                     l3323:
  1763                           
  1764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1765  150A  3025               	movlw	37
  1766  150B  064F               	xorwf	sprintf@c^(0+128),w
  1767  150C  1903               	btfsc	3,2
  1768  150D  2D0F               	goto	u5331
  1769  150E  2D10               	goto	u5330
  1770  150F                     u5331:
  1771  150F  2D24               	goto	l3329
  1772  1510                     u5330:
  1773  1510                     l3325:
  1774                           
  1775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1776  1510  084F               	movf	sprintf@c^(0+128),w
  1777  1511  1283               	bcf	3,5	;RP0=0, select bank0
  1778  1512  1303               	bcf	3,6	;RP1=0, select bank0
  1779  1513  00EA               	movwf	??_sprintf
  1780  1514  1683               	bsf	3,5	;RP0=1, select bank1
  1781  1515  1303               	bcf	3,6	;RP1=0, select bank1
  1782  1516  084C               	movf	sprintf@sp^(0+128),w
  1783  1517  0084               	movwf	4
  1784  1518  1283               	bcf	3,5	;RP0=0, select bank0
  1785  1519  1303               	bcf	3,6	;RP1=0, select bank0
  1786  151A  086A               	movf	??_sprintf,w
  1787  151B  1383               	bcf	3,7	;select IRP bank0
  1788  151C  0080               	movwf	0
  1789  151D                     l3327:
  1790  151D  3001               	movlw	1
  1791  151E  00EA               	movwf	??_sprintf
  1792  151F  086A               	movf	??_sprintf,w
  1793  1520  1683               	bsf	3,5	;RP0=1, select bank1
  1794  1521  1303               	bcf	3,6	;RP1=0, select bank1
  1795  1522  07CC               	addwf	sprintf@sp^(0+128),f
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1798  1523  2D07               	goto	L1
  1799  1524                     l3329:
  1800                           
  1801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1802  1524  01C0               	clrf	sprintf@width^(0+128)
  1803  1525  01C1               	clrf	(sprintf@width+1)^(0+128)
  1804                           
  1805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1806  1526  01BE               	clrf	sprintf@flag^(0+128)
  1807  1527  01BF               	clrf	(sprintf@flag+1)^(0+128)
  1808  1528                     l3331:
  1809                           
  1810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1811  1528  0828               	movf	sprintf@f^(0+128),w
  1812  1529  0084               	movwf	4
  1813  152A  160A  118A  200A  160A  118A  	fcall	stringdir
  1814  152F  160A  158A  21A5  160A  118A  	fcall	_isdigit
  1815  1534  1C03               	btfss	3,0
  1816  1535  2D37               	goto	u5341
  1817  1536  2D38               	goto	u5340
  1818  1537                     u5341:
  1819  1537  2D84               	goto	l3343
  1820  1538                     u5340:
  1821  1538                     l3333:
  1822                           
  1823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1824  1538  1683               	bsf	3,5	;RP0=1, select bank1
  1825  1539  1303               	bcf	3,6	;RP1=0, select bank1
  1826  153A  01C0               	clrf	sprintf@width^(0+128)
  1827  153B  01C1               	clrf	(sprintf@width+1)^(0+128)
  1828  153C                     l3335:
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1831  153C  300A               	movlw	10
  1832  153D  00F3               	movwf	___wmul@multiplier
  1833  153E  3000               	movlw	0
  1834  153F  00F4               	movwf	___wmul@multiplier+1
  1835  1540  1683               	bsf	3,5	;RP0=1, select bank1
  1836  1541  1303               	bcf	3,6	;RP1=0, select bank1
  1837  1542  0841               	movf	(sprintf@width+1)^(0+128),w
  1838  1543  00F6               	movwf	___wmul@multiplicand+1
  1839  1544  0840               	movf	sprintf@width^(0+128),w
  1840  1545  00F5               	movwf	___wmul@multiplicand
  1841  1546  160A  118A  20D4  160A  118A  	fcall	___wmul
  1842  154B  0874               	movf	?___wmul+1,w
  1843  154C  1683               	bsf	3,5	;RP0=1, select bank1
  1844  154D  1303               	bcf	3,6	;RP1=0, select bank1
  1845  154E  00C1               	movwf	(sprintf@width+1)^(0+128)
  1846  154F  0873               	movf	?___wmul,w
  1847  1550  00C0               	movwf	sprintf@width^(0+128)
  1848  1551                     l3337:
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1851  1551  0828               	movf	sprintf@f^(0+128),w
  1852  1552  0084               	movwf	4
  1853  1553  160A  118A  200A  160A  118A  	fcall	stringdir
  1854  1558  3ED0               	addlw	208
  1855  1559  1283               	bcf	3,5	;RP0=0, select bank0
  1856  155A  1303               	bcf	3,6	;RP1=0, select bank0
  1857  155B  00EA               	movwf	??_sprintf
  1858  155C  30FF               	movlw	255
  1859  155D  1803               	skipnc
  1860  155E  3000               	movlw	0
  1861  155F  00EB               	movwf	??_sprintf+1
  1862  1560  086A               	movf	??_sprintf,w
  1863  1561  1683               	bsf	3,5	;RP0=1, select bank1
  1864  1562  1303               	bcf	3,6	;RP1=0, select bank1
  1865  1563  07C0               	addwf	sprintf@width^(0+128),f
  1866  1564  1803               	skipnc
  1867  1565  0AC1               	incf	(sprintf@width+1)^(0+128),f
  1868  1566  1283               	bcf	3,5	;RP0=0, select bank0
  1869  1567  1303               	bcf	3,6	;RP1=0, select bank0
  1870  1568  086B               	movf	??_sprintf+1,w
  1871  1569  1683               	bsf	3,5	;RP0=1, select bank1
  1872  156A  1303               	bcf	3,6	;RP1=0, select bank1
  1873  156B  07C1               	addwf	(sprintf@width+1)^(0+128),f
  1874  156C                     l3339:
  1875  156C  3001               	movlw	1
  1876  156D  1283               	bcf	3,5	;RP0=0, select bank0
  1877  156E  1303               	bcf	3,6	;RP1=0, select bank0
  1878  156F  00EA               	movwf	??_sprintf
  1879  1570  086A               	movf	??_sprintf,w
  1880  1571  1683               	bsf	3,5	;RP0=1, select bank1
  1881  1572  1303               	bcf	3,6	;RP1=0, select bank1
  1882  1573  07A8               	addwf	sprintf@f^(0+128),f
  1883  1574                     l3341:
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1886  1574  0828               	movf	sprintf@f^(0+128),w
  1887  1575  0084               	movwf	4
  1888  1576  160A  118A  200A  160A  118A  	fcall	stringdir
  1889  157B  160A  158A  21A5  160A  118A  	fcall	_isdigit
  1890  1580  1803               	btfsc	3,0
  1891  1581  2D83               	goto	u5351
  1892  1582  2D84               	goto	u5350
  1893  1583                     u5351:
  1894  1583  2D3C               	goto	l3335
  1895  1584                     u5350:
  1896  1584                     l3343:
  1897                           
  1898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1899  1584  1683               	bsf	3,5	;RP0=1, select bank1
  1900  1585  1303               	bcf	3,6	;RP1=0, select bank1
  1901  1586  0828               	movf	sprintf@f^(0+128),w
  1902  1587  0084               	movwf	4
  1903  1588  160A  118A  200A  160A  118A  	fcall	stringdir
  1904  158D  3A2E               	xorlw	46
  1905  158E  1D03               	skipz
  1906  158F  2D91               	goto	u5361
  1907  1590  2D92               	goto	u5360
  1908  1591                     u5361:
  1909  1591  2DE7               	goto	l3359
  1910  1592                     u5360:
  1911  1592                     l3345:
  1912                           
  1913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1914  1592  173F               	bsf	(sprintf@flag^(0+128)+1),6
  1915  1593                     l3347:
  1916                           
  1917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1918  1593  3001               	movlw	1
  1919  1594  1283               	bcf	3,5	;RP0=0, select bank0
  1920  1595  1303               	bcf	3,6	;RP1=0, select bank0
  1921  1596  00EA               	movwf	??_sprintf
  1922  1597  086A               	movf	??_sprintf,w
  1923  1598  1683               	bsf	3,5	;RP0=1, select bank1
  1924  1599  1303               	bcf	3,6	;RP1=0, select bank1
  1925  159A  07A8               	addwf	sprintf@f^(0+128),f
  1926  159B                     l3349:
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1929  159B  01CD               	clrf	sprintf@prec^(0+128)
  1930  159C  01CE               	clrf	(sprintf@prec+1)^(0+128)
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1933  159D  2DD6               	goto	l3357
  1934  159E                     l3351:
  1935                           
  1936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1937  159E  300A               	movlw	10
  1938  159F  00F3               	movwf	___wmul@multiplier
  1939  15A0  3000               	movlw	0
  1940  15A1  00F4               	movwf	___wmul@multiplier+1
  1941  15A2  1683               	bsf	3,5	;RP0=1, select bank1
  1942  15A3  1303               	bcf	3,6	;RP1=0, select bank1
  1943  15A4  084E               	movf	(sprintf@prec+1)^(0+128),w
  1944  15A5  00F6               	movwf	___wmul@multiplicand+1
  1945  15A6  084D               	movf	sprintf@prec^(0+128),w
  1946  15A7  00F5               	movwf	___wmul@multiplicand
  1947  15A8  160A  118A  20D4  160A  118A  	fcall	___wmul
  1948  15AD  0874               	movf	?___wmul+1,w
  1949  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  1950  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  1951  15B0  00CE               	movwf	(sprintf@prec+1)^(0+128)
  1952  15B1  0873               	movf	?___wmul,w
  1953  15B2  00CD               	movwf	sprintf@prec^(0+128)
  1954  15B3                     l3353:
  1955                           
  1956                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1957  15B3  0828               	movf	sprintf@f^(0+128),w
  1958  15B4  0084               	movwf	4
  1959  15B5  160A  118A  200A  160A  118A  	fcall	stringdir
  1960  15BA  3ED0               	addlw	208
  1961  15BB  1283               	bcf	3,5	;RP0=0, select bank0
  1962  15BC  1303               	bcf	3,6	;RP1=0, select bank0
  1963  15BD  00EA               	movwf	??_sprintf
  1964  15BE  30FF               	movlw	255
  1965  15BF  1803               	skipnc
  1966  15C0  3000               	movlw	0
  1967  15C1  00EB               	movwf	??_sprintf+1
  1968  15C2  086A               	movf	??_sprintf,w
  1969  15C3  1683               	bsf	3,5	;RP0=1, select bank1
  1970  15C4  1303               	bcf	3,6	;RP1=0, select bank1
  1971  15C5  07CD               	addwf	sprintf@prec^(0+128),f
  1972  15C6  1803               	skipnc
  1973  15C7  0ACE               	incf	(sprintf@prec+1)^(0+128),f
  1974  15C8  1283               	bcf	3,5	;RP0=0, select bank0
  1975  15C9  1303               	bcf	3,6	;RP1=0, select bank0
  1976  15CA  086B               	movf	??_sprintf+1,w
  1977  15CB  1683               	bsf	3,5	;RP0=1, select bank1
  1978  15CC  1303               	bcf	3,6	;RP1=0, select bank1
  1979  15CD  07CE               	addwf	(sprintf@prec+1)^(0+128),f
  1980  15CE                     l3355:
  1981  15CE  3001               	movlw	1
  1982  15CF  1283               	bcf	3,5	;RP0=0, select bank0
  1983  15D0  1303               	bcf	3,6	;RP1=0, select bank0
  1984  15D1  00EA               	movwf	??_sprintf
  1985  15D2  086A               	movf	??_sprintf,w
  1986  15D3  1683               	bsf	3,5	;RP0=1, select bank1
  1987  15D4  1303               	bcf	3,6	;RP1=0, select bank1
  1988  15D5  07A8               	addwf	sprintf@f^(0+128),f
  1989  15D6                     l3357:
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1992  15D6  0828               	movf	sprintf@f^(0+128),w
  1993  15D7  0084               	movwf	4
  1994  15D8  160A  118A  200A  160A  118A  	fcall	stringdir
  1995  15DD  160A  158A  21A5  160A  118A  	fcall	_isdigit
  1996  15E2  1803               	btfsc	3,0
  1997  15E3  2DE5               	goto	u5371
  1998  15E4  2DE6               	goto	u5370
  1999  15E5                     u5371:
  2000  15E5  2D9E               	goto	l3351
  2001  15E6                     u5370:
  2002  15E6  2DEF               	goto	l3365
  2003  15E7                     l3359:
  2004                           
  2005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2006  15E7  01CD               	clrf	sprintf@prec^(0+128)
  2007  15E8  01CE               	clrf	(sprintf@prec+1)^(0+128)
  2008  15E9                     l3361:
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2011  15E9  163F               	bsf	(sprintf@flag^(0+128)+1),4
  2012  15EA  2DEF               	goto	l3365
  2013  15EB                     l359:	
  2014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2015                           
  2016                           
  2017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2018  15EB  1683               	bsf	3,5	;RP0=1, select bank1
  2019  15EC  1303               	bcf	3,6	;RP1=0, select bank1
  2020  15ED  153F               	bsf	(sprintf@flag^(0+128)+1),2
  2021                           
  2022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2023  15EE  2E0D               	goto	l3367
  2024  15EF                     l3365:
  2025  15EF  3001               	movlw	1
  2026  15F0  1683               	bsf	3,5	;RP0=1, select bank1
  2027  15F1  1303               	bcf	3,6	;RP1=0, select bank1
  2028  15F2  07A8               	addwf	sprintf@f^(0+128),f
  2029  15F3  30FF               	movlw	-1
  2030  15F4  0728               	addwf	sprintf@f^(0+128),w
  2031  15F5  0084               	movwf	4
  2032  15F6  160A  118A  200A  160A  118A  	fcall	stringdir
  2033  15FB  00CF               	movwf	sprintf@c^(0+128)
  2034  15FC  1283               	bcf	3,5	;RP0=0, select bank0
  2035  15FD  1303               	bcf	3,6	;RP1=0, select bank0
  2036  15FE  00EA               	movwf	??_sprintf
  2037  15FF  01EB               	clrf	??_sprintf+1
  2038                           
  2039                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2040                           ; Switch size 1, requested type "simple"
  2041                           ; Number of cases is 1, Range of values is 0 to 0
  2042                           ; switch strategies available:
  2043                           ; Name         Instructions Cycles
  2044                           ; simple_byte            4     3 (average)
  2045                           ; direct_byte           11     8 (fixed)
  2046                           ; jumptable            260     6 (fixed)
  2047                           ;	Chosen strategy is simple_byte
  2048  1600  086B               	movf	??_sprintf+1,w
  2049  1601  3A00               	xorlw	0	; case 0
  2050  1602  1903               	skipnz
  2051  1603  2E05               	goto	l3685
  2052  1604  2D07               	goto	L1
  2053  1605                     l3685:
  2054                           
  2055                           ; Switch size 1, requested type "simple"
  2056                           ; Number of cases is 2, Range of values is 0 to 102
  2057                           ; switch strategies available:
  2058                           ; Name         Instructions Cycles
  2059                           ; simple_byte            7     4 (average)
  2060                           ; jumptable            260     6 (fixed)
  2061                           ;	Chosen strategy is simple_byte
  2062  1605  086A               	movf	??_sprintf,w
  2063  1606  3A00               	xorlw	0	; case 0
  2064  1607  1903               	skipnz
  2065  1608  2FFD               	goto	L3
  2066  1609  3A66               	xorlw	102	; case 102
  2067  160A  1903               	skipnz
  2068  160B  2DEB               	goto	l359
  2069  160C  2D07               	goto	L1
  2070  160D                     l3367:
  2071                           
  2072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2073  160D  3000               	movlw	0
  2074  160E  053E               	andwf	sprintf@flag^(0+128),w
  2075  160F  1283               	bcf	3,5	;RP0=0, select bank0
  2076  1610  1303               	bcf	3,6	;RP1=0, select bank0
  2077  1611  00EA               	movwf	??_sprintf
  2078  1612  3007               	movlw	7
  2079  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2080  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2081  1615  053F               	andwf	(sprintf@flag+1)^(0+128),w
  2082  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2083  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2084  1618  00EB               	movwf	??_sprintf+1
  2085  1619  086A               	movf	??_sprintf,w
  2086  161A  046B               	iorwf	??_sprintf+1,w
  2087  161B  1903               	btfsc	3,2
  2088  161C  2E1E               	goto	u5381
  2089  161D  2E21               	goto	u5380
  2090  161E                     u5381:
  2091  161E  120A  118A  2C7D   	goto	l3525
  2092  1621                     u5380:
  2093  1621                     l3369:
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2096  1621  1683               	bsf	3,5	;RP0=1, select bank1
  2097  1622  1303               	bcf	3,6	;RP1=0, select bank1
  2098  1623  1E3F               	btfss	(sprintf@flag+1)^(0+128),4
  2099  1624  2E26               	goto	u5391
  2100  1625  2E27               	goto	u5390
  2101  1626                     u5391:
  2102  1626  2E2B               	goto	l3373
  2103  1627                     u5390:
  2104  1627                     l3371:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2107  1627  3006               	movlw	6
  2108  1628  00CD               	movwf	sprintf@prec^(0+128)
  2109  1629  3000               	movlw	0
  2110  162A  00CE               	movwf	(sprintf@prec^(0+128)+1)
  2111  162B                     l3373:
  2112                           
  2113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2114  162B  0839               	movf	sprintf@ap^(0+128),w
  2115  162C  0084               	movwf	4
  2116  162D  1383               	bcf	3,7	;select IRP bank0
  2117  162E  0800               	movf	0,w
  2118  162F  00C8               	movwf	sprintf@fval^(0+128)
  2119  1630  0A84               	incf	4,f
  2120  1631  0800               	movf	0,w
  2121  1632  00C9               	movwf	(sprintf@fval+1)^(0+128)
  2122  1633  0A84               	incf	4,f
  2123  1634  0800               	movf	0,w
  2124  1635  00CA               	movwf	(sprintf@fval+2)^(0+128)
  2125  1636  0A84               	incf	4,f
  2126  1637  0800               	movf	0,w
  2127  1638  00CB               	movwf	(sprintf@fval+3)^(0+128)
  2128  1639                     l3375:
  2129  1639  3004               	movlw	4
  2130  163A  1283               	bcf	3,5	;RP0=0, select bank0
  2131  163B  1303               	bcf	3,6	;RP1=0, select bank0
  2132  163C  00EA               	movwf	??_sprintf
  2133  163D  086A               	movf	??_sprintf,w
  2134  163E  1683               	bsf	3,5	;RP0=1, select bank1
  2135  163F  1303               	bcf	3,6	;RP1=0, select bank1
  2136  1640  07B9               	addwf	sprintf@ap^(0+128),f
  2137  1641                     l3377:
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2140  1641  084B               	movf	(sprintf@fval+3)^(0+128),w
  2141  1642  00F6               	movwf	___flge@ff1+3
  2142  1643  084A               	movf	(sprintf@fval+2)^(0+128),w
  2143  1644  00F5               	movwf	___flge@ff1+2
  2144  1645  0849               	movf	(sprintf@fval+1)^(0+128),w
  2145  1646  00F4               	movwf	___flge@ff1+1
  2146  1647  0848               	movf	sprintf@fval^(0+128),w
  2147  1648  00F3               	movwf	___flge@ff1
  2148  1649  3000               	movlw	0
  2149  164A  00FA               	movwf	___flge@ff2+3
  2150  164B  3000               	movlw	0
  2151  164C  00F9               	movwf	___flge@ff2+2
  2152  164D  3000               	movlw	0
  2153  164E  00F8               	movwf	___flge@ff2+1
  2154  164F  3000               	movlw	0
  2155  1650  00F7               	movwf	___flge@ff2
  2156  1651  160A  158A  26A0  160A  118A  	fcall	___flge
  2157  1656  1803               	btfsc	3,0
  2158  1657  2E59               	goto	u5401
  2159  1658  2E5A               	goto	u5400
  2160  1659                     u5401:
  2161  1659  2E77               	goto	l3383
  2162  165A                     u5400:
  2163  165A                     l3379:
  2164                           
  2165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2166  165A  1683               	bsf	3,5	;RP0=1, select bank1
  2167  165B  1303               	bcf	3,6	;RP1=0, select bank1
  2168  165C  084B               	movf	(sprintf@fval+3)^(0+128),w
  2169  165D  00F6               	movwf	___flneg@f1+3
  2170  165E  084A               	movf	(sprintf@fval+2)^(0+128),w
  2171  165F  00F5               	movwf	___flneg@f1+2
  2172  1660  0849               	movf	(sprintf@fval+1)^(0+128),w
  2173  1661  00F4               	movwf	___flneg@f1+1
  2174  1662  0848               	movf	sprintf@fval^(0+128),w
  2175  1663  00F3               	movwf	___flneg@f1
  2176  1664  160A  158A  219A  160A  118A  	fcall	___flneg
  2177  1669  0876               	movf	?___flneg+3,w
  2178  166A  1683               	bsf	3,5	;RP0=1, select bank1
  2179  166B  1303               	bcf	3,6	;RP1=0, select bank1
  2180  166C  00CB               	movwf	(sprintf@fval+3)^(0+128)
  2181  166D  0875               	movf	?___flneg+2,w
  2182  166E  00CA               	movwf	(sprintf@fval+2)^(0+128)
  2183  166F  0874               	movf	?___flneg+1,w
  2184  1670  00C9               	movwf	(sprintf@fval+1)^(0+128)
  2185  1671  0873               	movf	?___flneg,w
  2186  1672  00C8               	movwf	sprintf@fval^(0+128)
  2187  1673                     l3381:
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2190  1673  3003               	movlw	3
  2191  1674  04BE               	iorwf	sprintf@flag^(0+128),f
  2192  1675  3000               	movlw	0
  2193  1676  04BF               	iorwf	(sprintf@flag+1)^(0+128),f
  2194  1677                     l3383:
  2195                           
  2196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2197  1677  1683               	bsf	3,5	;RP0=1, select bank1
  2198  1678  1303               	bcf	3,6	;RP1=0, select bank1
  2199  1679  01C6               	clrf	sprintf@eexp^(0+128)
  2200  167A  01C7               	clrf	(sprintf@eexp+1)^(0+128)
  2201  167B                     l3385:
  2202                           
  2203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2204  167B  084B               	movf	(sprintf@fval+3)^(0+128),w
  2205  167C  00F6               	movwf	___fleq@ff1+3
  2206  167D  084A               	movf	(sprintf@fval+2)^(0+128),w
  2207  167E  00F5               	movwf	___fleq@ff1+2
  2208  167F  0849               	movf	(sprintf@fval+1)^(0+128),w
  2209  1680  00F4               	movwf	___fleq@ff1+1
  2210  1681  0848               	movf	sprintf@fval^(0+128),w
  2211  1682  00F3               	movwf	___fleq@ff1
  2212  1683  3000               	movlw	0
  2213  1684  00FA               	movwf	___fleq@ff2+3
  2214  1685  3000               	movlw	0
  2215  1686  00F9               	movwf	___fleq@ff2+2
  2216  1687  3000               	movlw	0
  2217  1688  00F8               	movwf	___fleq@ff2+1
  2218  1689  3000               	movlw	0
  2219  168A  00F7               	movwf	___fleq@ff2
  2220  168B  160A  158A  2454  160A  118A  	fcall	___fleq
  2221  1690  1803               	btfsc	3,0
  2222  1691  2E93               	goto	u5411
  2223  1692  2E94               	goto	u5410
  2224  1693                     u5411:
  2225  1693  2F94               	goto	l3411
  2226  1694                     u5410:
  2227  1694                     l3387:
  2228                           
  2229                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2230  1694  1003               	clrc
  2231  1695  1683               	bsf	3,5	;RP0=1, select bank1
  2232  1696  1303               	bcf	3,6	;RP1=0, select bank1
  2233  1697  0D4A               	rlf	(sprintf@fval+2)^(0+128),w
  2234  1698  0D4B               	rlf	(sprintf@fval+3)^(0+128),w
  2235  1699  3E82               	addlw	130
  2236  169A  00C6               	movwf	sprintf@eexp^(0+128)
  2237  169B  30FF               	movlw	255
  2238  169C  1803               	skipnc
  2239  169D  3000               	movlw	0
  2240  169E  00C7               	movwf	(sprintf@eexp^(0+128)+1)
  2241  169F                     l3389:
  2242                           
  2243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2244  169F  30FF               	movlw	255
  2245  16A0  07C6               	addwf	sprintf@eexp^(0+128),f
  2246  16A1  1803               	skipnc
  2247  16A2  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
  2248  16A3  30FF               	movlw	255
  2249  16A4  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
  2250  16A5                     l3391:
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2253  16A5  3003               	movlw	3
  2254  16A6  00F3               	movwf	___wmul@multiplier
  2255  16A7  3000               	movlw	0
  2256  16A8  00F4               	movwf	___wmul@multiplier+1
  2257  16A9  0847               	movf	(sprintf@eexp+1)^(0+128),w
  2258  16AA  00F6               	movwf	___wmul@multiplicand+1
  2259  16AB  0846               	movf	sprintf@eexp^(0+128),w
  2260  16AC  00F5               	movwf	___wmul@multiplicand
  2261  16AD  160A  118A  20D4  160A  118A  	fcall	___wmul
  2262  16B2  0874               	movf	?___wmul+1,w
  2263  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  2264  16B4  1303               	bcf	3,6	;RP1=0, select bank1
  2265  16B5  00C7               	movwf	(sprintf@eexp+1)^(0+128)
  2266  16B6  0873               	movf	?___wmul,w
  2267  16B7  00C6               	movwf	sprintf@eexp^(0+128)
  2268  16B8                     l3393:
  2269                           
  2270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2271  16B8  300A               	movlw	10
  2272  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2273  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2274  16BB  00A0               	movwf	___awdiv@divisor
  2275  16BC  3000               	movlw	0
  2276  16BD  00A1               	movwf	___awdiv@divisor+1
  2277  16BE  1683               	bsf	3,5	;RP0=1, select bank1
  2278  16BF  1303               	bcf	3,6	;RP1=0, select bank1
  2279  16C0  0847               	movf	(sprintf@eexp+1)^(0+128),w
  2280  16C1  1283               	bcf	3,5	;RP0=0, select bank0
  2281  16C2  1303               	bcf	3,6	;RP1=0, select bank0
  2282  16C3  00A3               	movwf	___awdiv@dividend+1
  2283  16C4  1683               	bsf	3,5	;RP0=1, select bank1
  2284  16C5  1303               	bcf	3,6	;RP1=0, select bank1
  2285  16C6  0846               	movf	sprintf@eexp^(0+128),w
  2286  16C7  1283               	bcf	3,5	;RP0=0, select bank0
  2287  16C8  1303               	bcf	3,6	;RP1=0, select bank0
  2288  16C9  00A2               	movwf	___awdiv@dividend
  2289  16CA  160A  158A  25BB  160A  118A  	fcall	___awdiv
  2290  16CF  1283               	bcf	3,5	;RP0=0, select bank0
  2291  16D0  1303               	bcf	3,6	;RP1=0, select bank0
  2292  16D1  0821               	movf	?___awdiv+1,w
  2293  16D2  1683               	bsf	3,5	;RP0=1, select bank1
  2294  16D3  1303               	bcf	3,6	;RP1=0, select bank1
  2295  16D4  00C7               	movwf	(sprintf@eexp+1)^(0+128)
  2296  16D5  1283               	bcf	3,5	;RP0=0, select bank0
  2297  16D6  1303               	bcf	3,6	;RP1=0, select bank0
  2298  16D7  0820               	movf	?___awdiv,w
  2299  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  2300  16D9  1303               	bcf	3,6	;RP1=0, select bank1
  2301  16DA  00C6               	movwf	sprintf@eexp^(0+128)
  2302  16DB                     l3395:
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2305  16DB  1FC7               	btfss	(sprintf@eexp+1)^(0+128),7
  2306  16DC  2EDE               	goto	u5421
  2307  16DD  2EDF               	goto	u5420
  2308  16DE                     u5421:
  2309  16DE  2EE5               	goto	l3399
  2310  16DF                     u5420:
  2311  16DF                     l3397:
  2312                           
  2313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2314  16DF  30FF               	movlw	255
  2315  16E0  07C6               	addwf	sprintf@eexp^(0+128),f
  2316  16E1  1803               	skipnc
  2317  16E2  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
  2318  16E3  30FF               	movlw	255
  2319  16E4  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
  2320  16E5                     l3399:
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2323  16E5  0346               	decf	sprintf@eexp^(0+128),w
  2324  16E6  3AFF               	xorlw	255
  2325  16E7  120A  158A  249D  160A  118A  	fcall	_scale
  2326  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2327  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2328  16EE  0845               	movf	?_scale+3,w
  2329  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2330  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2331  16F1  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
  2332  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2333  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2334  16F4  0844               	movf	?_scale+2,w
  2335  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2336  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2337  16F7  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
  2338  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2339  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2340  16FA  0843               	movf	?_scale+1,w
  2341  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2342  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2343  16FD  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
  2344  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2345  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2346  1700  0842               	movf	?_scale,w
  2347  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2348  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2349  1703  00C2               	movwf	sprintf@tmpval^(0+128)
  2350  1704                     l3401:
  2351                           
  2352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2353  1704  084B               	movf	(sprintf@fval+3)^(0+128),w
  2354  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2355  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2356  1707  00AB               	movwf	___flmul@b+3
  2357  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2358  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2359  170A  084A               	movf	(sprintf@fval+2)^(0+128),w
  2360  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2361  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2362  170D  00AA               	movwf	___flmul@b+2
  2363  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2364  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2365  1710  0849               	movf	(sprintf@fval+1)^(0+128),w
  2366  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2367  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2368  1713  00A9               	movwf	___flmul@b+1
  2369  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2370  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2371  1716  0848               	movf	sprintf@fval^(0+128),w
  2372  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2373  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2374  1719  00A8               	movwf	___flmul@b
  2375  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2376  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2377  171C  0845               	movf	(sprintf@tmpval+3)^(0+128),w
  2378  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2379  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2380  171F  00AF               	movwf	___flmul@a+3
  2381  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2382  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2383  1722  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  2384  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2385  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2386  1725  00AE               	movwf	___flmul@a+2
  2387  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2388  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2389  1728  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  2390  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2391  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2392  172B  00AD               	movwf	___flmul@a+1
  2393  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2394  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2395  172E  0842               	movf	sprintf@tmpval^(0+128),w
  2396  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2397  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2398  1731  00AC               	movwf	___flmul@a
  2399  1732  120A  158A  213C  160A  118A  	fcall	___flmul
  2400  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2401  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2402  1739  082B               	movf	?___flmul+3,w
  2403  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2404  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2405  173C  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
  2406  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2407  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2408  173F  082A               	movf	?___flmul+2,w
  2409  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2410  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2411  1742  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
  2412  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2413  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2414  1745  0829               	movf	?___flmul+1,w
  2415  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2416  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2417  1748  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
  2418  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2419  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2420  174B  0828               	movf	?___flmul,w
  2421  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2422  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2423  174E  00C2               	movwf	sprintf@tmpval^(0+128)
  2424  174F                     l3403:
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2427  174F  0845               	movf	(sprintf@tmpval+3)^(0+128),w
  2428  1750  00F6               	movwf	___flge@ff1+3
  2429  1751  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  2430  1752  00F5               	movwf	___flge@ff1+2
  2431  1753  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  2432  1754  00F4               	movwf	___flge@ff1+1
  2433  1755  0842               	movf	sprintf@tmpval^(0+128),w
  2434  1756  00F3               	movwf	___flge@ff1
  2435  1757  303F               	movlw	63
  2436  1758  00FA               	movwf	___flge@ff2+3
  2437  1759  3080               	movlw	128
  2438  175A  00F9               	movwf	___flge@ff2+2
  2439  175B  3000               	movlw	0
  2440  175C  00F8               	movwf	___flge@ff2+1
  2441  175D  3000               	movlw	0
  2442  175E  00F7               	movwf	___flge@ff2
  2443  175F  160A  158A  26A0  160A  118A  	fcall	___flge
  2444  1764  1803               	btfsc	3,0
  2445  1765  2F67               	goto	u5431
  2446  1766  2F68               	goto	u5430
  2447  1767                     u5431:
  2448  1767  2F71               	goto	l3407
  2449  1768                     u5430:
  2450  1768                     l3405:
  2451                           
  2452                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2453  1768  30FF               	movlw	255
  2454  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2455  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2456  176B  07C6               	addwf	sprintf@eexp^(0+128),f
  2457  176C  1803               	skipnc
  2458  176D  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
  2459  176E  30FF               	movlw	255
  2460  176F  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
  2461  1770  2F94               	goto	l3411
  2462  1771                     l3407:
  2463  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2464  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2465  1773  0845               	movf	(sprintf@tmpval+3)^(0+128),w
  2466  1774  00F6               	movwf	___flge@ff1+3
  2467  1775  0844               	movf	(sprintf@tmpval+2)^(0+128),w
  2468  1776  00F5               	movwf	___flge@ff1+2
  2469  1777  0843               	movf	(sprintf@tmpval+1)^(0+128),w
  2470  1778  00F4               	movwf	___flge@ff1+1
  2471  1779  0842               	movf	sprintf@tmpval^(0+128),w
  2472  177A  00F3               	movwf	___flge@ff1
  2473  177B  3041               	movlw	65
  2474  177C  00FA               	movwf	___flge@ff2+3
  2475  177D  3020               	movlw	32
  2476  177E  00F9               	movwf	___flge@ff2+2
  2477  177F  3000               	movlw	0
  2478  1780  00F8               	movwf	___flge@ff2+1
  2479  1781  3000               	movlw	0
  2480  1782  00F7               	movwf	___flge@ff2
  2481  1783  160A  158A  26A0  160A  118A  	fcall	___flge
  2482  1788  1C03               	btfss	3,0
  2483  1789  2F8B               	goto	u5441
  2484  178A  2F8C               	goto	u5440
  2485  178B                     u5441:
  2486  178B  2F94               	goto	l3411
  2487  178C                     u5440:
  2488  178C                     l3409:
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2491  178C  3001               	movlw	1
  2492  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2493  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2494  178F  07C6               	addwf	sprintf@eexp^(0+128),f
  2495  1790  1803               	skipnc
  2496  1791  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
  2497  1792  3000               	movlw	0
  2498  1793  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
  2499  1794                     l3411:
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2502  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2503  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2504  1796  084E               	movf	(sprintf@prec+1)^(0+128),w
  2505  1797  3A80               	xorlw	128
  2506  1798  00FF               	movwf	btemp+1
  2507  1799  3080               	movlw	128
  2508  179A  027F               	subwf	btemp+1,w
  2509  179B  1D03               	skipz
  2510  179C  2F9F               	goto	u5455
  2511  179D  300D               	movlw	13
  2512  179E  024D               	subwf	sprintf@prec^(0+128),w
  2513  179F                     u5455:
  2514  179F  1803               	skipnc
  2515  17A0  2FA2               	goto	u5451
  2516  17A1  2FA3               	goto	u5450
  2517  17A2                     u5451:
  2518  17A2  2FEA               	goto	l3415
  2519  17A3                     u5450:
  2520  17A3                     l3413:
  2521                           
  2522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2523  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2524  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2525  17A5  084D               	movf	sprintf@prec^(0+128),w
  2526  17A6  120A  118A  25A1  160A  118A  	fcall	_fround
  2527  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2528  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2529  17AD  0845               	movf	?_fround+3,w
  2530  17AE  00D9               	movwf	___fladd@b+3
  2531  17AF  0844               	movf	?_fround+2,w
  2532  17B0  00D8               	movwf	___fladd@b+2
  2533  17B1  0843               	movf	?_fround+1,w
  2534  17B2  00D7               	movwf	___fladd@b+1
  2535  17B3  0842               	movf	?_fround,w
  2536  17B4  00D6               	movwf	___fladd@b
  2537  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2538  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2539  17B7  084B               	movf	(sprintf@fval+3)^(0+128),w
  2540  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2541  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2542  17BA  00DD               	movwf	___fladd@a+3
  2543  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2544  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2545  17BD  084A               	movf	(sprintf@fval+2)^(0+128),w
  2546  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2547  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2548  17C0  00DC               	movwf	___fladd@a+2
  2549  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2550  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2551  17C3  0849               	movf	(sprintf@fval+1)^(0+128),w
  2552  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2553  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2554  17C6  00DB               	movwf	___fladd@a+1
  2555  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2556  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2557  17C9  0848               	movf	sprintf@fval^(0+128),w
  2558  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2559  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2560  17CC  00DA               	movwf	___fladd@a
  2561  17CD  160A  118A  2274  160A  118A  	fcall	___fladd
  2562  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2563  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2564  17D4  0859               	movf	?___fladd+3,w
  2565  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2566  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2567  17D7  00CB               	movwf	(sprintf@fval+3)^(0+128)
  2568  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2569  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2570  17DA  0858               	movf	?___fladd+2,w
  2571  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2572  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2573  17DD  00CA               	movwf	(sprintf@fval+2)^(0+128)
  2574  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2575  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2576  17E0  0857               	movf	?___fladd+1,w
  2577  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2578  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2579  17E3  00C9               	movwf	(sprintf@fval+1)^(0+128)
  2580  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2581  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2582  17E6  0856               	movf	?___fladd,w
  2583  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2584  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2585  17E9  00C8               	movwf	sprintf@fval^(0+128)
  2586  17EA                     l3415:
  2587                           
  2588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2589  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2590  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2591  17EC  0847               	movf	(sprintf@eexp+1)^(0+128),w
  2592  17ED  3A80               	xorlw	128
  2593  17EE  00FF               	movwf	btemp+1
  2594  17EF  3080               	movlw	128
  2595  17F0  027F               	subwf	btemp+1,w
  2596  17F1  1D03               	skipz
  2597  17F2  2FF5               	goto	u5465
  2598  17F3  300A               	movlw	10
  2599  17F4  0246               	subwf	sprintf@eexp^(0+128),w
  2600  17F5                     u5465:
  2601  17F5  1803               	skipnc
  2602  17F6  2FFA               	goto	u5461
  2603  17F7  120A  118A  2825   	goto	u5460
  2604  17FA                     u5461:
  2605  17FA  120A  118A  2876   	goto	l3423
  2606  17FD                     L3:
  2607  17FD                     L2:
  2608  17FD  120A  118A  2D9A   	ljmp	l3573
  2609                           
  2610                           	psect	text2
  2611  0C9D                     __ptext2:	
  2612 ;; *************** function _scale *****************
  2613 ;; Defined at:
  2614 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  scl             1    wreg     char 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  scl             1   52[BANK0 ] char 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  4   34[BANK0 ] char 
  2621 ;; Registers used:
  2622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2628 ;;      Params:         0       4       0       0       0
  2629 ;;      Locals:         0       5       0       0       0
  2630 ;;      Temps:          0      10       0       0       0
  2631 ;;      Totals:         0      19       0       0       0
  2632 ;;Total ram usage:       19 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    4
  2635 ;; This function calls:
  2636 ;;		___awdiv
  2637 ;;		___awmod
  2638 ;;		___flmul
  2639 ;; This function is called by:
  2640 ;;		_sprintf
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           
  2645                           ;psect for function _scale
  2646  0C9D                     _scale:
  2647                           
  2648                           ;incstack = 0
  2649                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2650                           ;scale@scl stored from wreg
  2651  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2652  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2653  0C9F  00D4               	movwf	scale@scl
  2654  0CA0                     l2879:
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2657  0CA0  1FD4               	btfss	scale@scl,7
  2658  0CA1  2CA3               	goto	u4281
  2659  0CA2  2CA4               	goto	u4280
  2660  0CA3                     u4281:
  2661  0CA3  2E53               	goto	l2901
  2662  0CA4                     u4280:
  2663  0CA4                     l2881:
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2666  0CA4  09D4               	comf	scale@scl,f
  2667  0CA5  0AD4               	incf	scale@scl,f
  2668  0CA6                     l2883:
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2671  0CA6  0854               	movf	scale@scl,w
  2672  0CA7  3A80               	xorlw	128
  2673  0CA8  3E12               	addlw	-238
  2674  0CA9  1C03               	skipc
  2675  0CAA  2CAC               	goto	u4291
  2676  0CAB  2CAD               	goto	u4290
  2677  0CAC                     u4291:
  2678  0CAC  2D97               	goto	l2891
  2679  0CAD                     u4290:
  2680  0CAD                     l2885:
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2683  0CAD  300A               	movlw	10
  2684  0CAE  00A0               	movwf	___awdiv@divisor
  2685  0CAF  3000               	movlw	0
  2686  0CB0  00A1               	movwf	___awdiv@divisor+1
  2687  0CB1  0854               	movf	scale@scl,w
  2688  0CB2  00F5               	movwf	___awmod@dividend
  2689  0CB3  01F6               	clrf	___awmod@dividend+1
  2690  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2691  0CB5  03F6               	decf	___awmod@dividend+1,f
  2692  0CB6  3064               	movlw	100
  2693  0CB7  00F3               	movwf	___awmod@divisor
  2694  0CB8  3000               	movlw	0
  2695  0CB9  00F4               	movwf	___awmod@divisor+1
  2696  0CBA  160A  158A  24FA  120A  158A  	fcall	___awmod
  2697  0CBF  0874               	movf	?___awmod+1,w
  2698  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2699  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2700  0CC2  00A3               	movwf	___awdiv@dividend+1
  2701  0CC3  0873               	movf	?___awmod,w
  2702  0CC4  00A2               	movwf	___awdiv@dividend
  2703  0CC5  160A  158A  25BB  120A  158A  	fcall	___awdiv
  2704  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2706  0CCC  0820               	movf	?___awdiv,w
  2707  0CCD  00C6               	movwf	??_scale
  2708  0CCE  3001               	movlw	1
  2709  0CCF                     u4305:
  2710  0CCF  1003               	clrc
  2711  0CD0  0DC6               	rlf	??_scale,f
  2712  0CD1  3EFF               	addlw	-1
  2713  0CD2  1D03               	skipz
  2714  0CD3  2CCF               	goto	u4305
  2715  0CD4  1003               	clrc
  2716  0CD5  0D46               	rlf	??_scale,w
  2717  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2718  0CD7  0084               	movwf	4
  2719  0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  2720  0CDD  00C7               	movwf	??_scale+1
  2721  0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  2722  0CE3  00C8               	movwf	??_scale+2
  2723  0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  2724  0CE9  00C9               	movwf	??_scale+3
  2725  0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  2726  0CEF  00CA               	movwf	??_scale+4
  2727  0CF0  084A               	movf	??_scale+4,w
  2728  0CF1  00AB               	movwf	___flmul@b+3
  2729  0CF2  0849               	movf	??_scale+3,w
  2730  0CF3  00AA               	movwf	___flmul@b+2
  2731  0CF4  0848               	movf	??_scale+2,w
  2732  0CF5  00A9               	movwf	___flmul@b+1
  2733  0CF6  0847               	movf	??_scale+1,w
  2734  0CF7  00A8               	movwf	___flmul@b
  2735  0CF8  3064               	movlw	100
  2736  0CF9  00A0               	movwf	___awdiv@divisor
  2737  0CFA  3000               	movlw	0
  2738  0CFB  00A1               	movwf	___awdiv@divisor+1
  2739  0CFC  0854               	movf	scale@scl,w
  2740  0CFD  00A2               	movwf	___awdiv@dividend
  2741  0CFE  01A3               	clrf	___awdiv@dividend+1
  2742  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2743  0D00  03A3               	decf	___awdiv@dividend+1,f
  2744  0D01  160A  158A  25BB  120A  158A  	fcall	___awdiv
  2745  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2746  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2747  0D08  0820               	movf	?___awdiv,w
  2748  0D09  00CB               	movwf	??_scale+5
  2749  0D0A  3001               	movlw	1
  2750  0D0B                     u4315:
  2751  0D0B  1003               	clrc
  2752  0D0C  0DCB               	rlf	??_scale+5,f
  2753  0D0D  3EFF               	addlw	-1
  2754  0D0E  1D03               	skipz
  2755  0D0F  2D0B               	goto	u4315
  2756  0D10  1003               	clrc
  2757  0D11  0D4B               	rlf	??_scale+5,w
  2758  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2759  0D13  0084               	movwf	4
  2760  0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  2761  0D19  00CC               	movwf	??_scale+6
  2762  0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  2763  0D1F  00CD               	movwf	??_scale+7
  2764  0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  2765  0D25  00CE               	movwf	??_scale+8
  2766  0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  2767  0D2B  00CF               	movwf	??_scale+9
  2768  0D2C  084F               	movf	??_scale+9,w
  2769  0D2D  00AF               	movwf	___flmul@a+3
  2770  0D2E  084E               	movf	??_scale+8,w
  2771  0D2F  00AE               	movwf	___flmul@a+2
  2772  0D30  084D               	movf	??_scale+7,w
  2773  0D31  00AD               	movwf	___flmul@a+1
  2774  0D32  084C               	movf	??_scale+6,w
  2775  0D33  00AC               	movwf	___flmul@a
  2776  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2777  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2778  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2779  0D3B  082B               	movf	?___flmul+3,w
  2780  0D3C  00D3               	movwf	_scale$1238+3
  2781  0D3D  082A               	movf	?___flmul+2,w
  2782  0D3E  00D2               	movwf	_scale$1238+2
  2783  0D3F  0829               	movf	?___flmul+1,w
  2784  0D40  00D1               	movwf	_scale$1238+1
  2785  0D41  0828               	movf	?___flmul,w
  2786  0D42  00D0               	movwf	_scale$1238
  2787                           
  2788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2789  0D43  300A               	movlw	10
  2790  0D44  00F3               	movwf	___awmod@divisor
  2791  0D45  3000               	movlw	0
  2792  0D46  00F4               	movwf	___awmod@divisor+1
  2793  0D47  0854               	movf	scale@scl,w
  2794  0D48  00F5               	movwf	___awmod@dividend
  2795  0D49  01F6               	clrf	___awmod@dividend+1
  2796  0D4A  1BF5               	btfsc	___awmod@dividend,7
  2797  0D4B  03F6               	decf	___awmod@dividend+1,f
  2798  0D4C  160A  158A  24FA  120A  158A  	fcall	___awmod
  2799  0D51  0873               	movf	?___awmod,w
  2800  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2801  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2802  0D54  00C6               	movwf	??_scale
  2803  0D55  3001               	movlw	1
  2804  0D56                     u4325:
  2805  0D56  1003               	clrc
  2806  0D57  0DC6               	rlf	??_scale,f
  2807  0D58  3EFF               	addlw	-1
  2808  0D59  1D03               	skipz
  2809  0D5A  2D56               	goto	u4325
  2810  0D5B  1003               	clrc
  2811  0D5C  0D46               	rlf	??_scale,w
  2812  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2813  0D5E  0084               	movwf	4
  2814  0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  2815  0D64  00C7               	movwf	??_scale+1
  2816  0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  2817  0D6A  00C8               	movwf	??_scale+2
  2818  0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  2819  0D70  00C9               	movwf	??_scale+3
  2820  0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  2821  0D76  00CA               	movwf	??_scale+4
  2822  0D77  084A               	movf	??_scale+4,w
  2823  0D78  00AB               	movwf	___flmul@b+3
  2824  0D79  0849               	movf	??_scale+3,w
  2825  0D7A  00AA               	movwf	___flmul@b+2
  2826  0D7B  0848               	movf	??_scale+2,w
  2827  0D7C  00A9               	movwf	___flmul@b+1
  2828  0D7D  0847               	movf	??_scale+1,w
  2829  0D7E  00A8               	movwf	___flmul@b
  2830  0D7F  0853               	movf	_scale$1238+3,w
  2831  0D80  00AF               	movwf	___flmul@a+3
  2832  0D81  0852               	movf	_scale$1238+2,w
  2833  0D82  00AE               	movwf	___flmul@a+2
  2834  0D83  0851               	movf	_scale$1238+1,w
  2835  0D84  00AD               	movwf	___flmul@a+1
  2836  0D85  0850               	movf	_scale$1238,w
  2837  0D86  00AC               	movwf	___flmul@a
  2838  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2839  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2840  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2841  0D8E  082B               	movf	?___flmul+3,w
  2842  0D8F  00C5               	movwf	?_scale+3
  2843  0D90  082A               	movf	?___flmul+2,w
  2844  0D91  00C4               	movwf	?_scale+2
  2845  0D92  0829               	movf	?___flmul+1,w
  2846  0D93  00C3               	movwf	?_scale+1
  2847  0D94  0828               	movf	?___flmul,w
  2848  0D95  00C2               	movwf	?_scale
  2849  0D96  2FFF               	goto	l337
  2850  0D97                     l2891:
  2851  0D97  0854               	movf	scale@scl,w
  2852  0D98  3A80               	xorlw	128
  2853  0D99  3E75               	addlw	-139
  2854  0D9A  1C03               	skipc
  2855  0D9B  2D9D               	goto	u4331
  2856  0D9C  2D9E               	goto	u4330
  2857  0D9D                     u4331:
  2858  0D9D  2E26               	goto	l2897
  2859  0D9E                     u4330:
  2860  0D9E                     l2893:
  2861                           
  2862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2863  0D9E  300A               	movlw	10
  2864  0D9F  00F3               	movwf	___awmod@divisor
  2865  0DA0  3000               	movlw	0
  2866  0DA1  00F4               	movwf	___awmod@divisor+1
  2867  0DA2  0854               	movf	scale@scl,w
  2868  0DA3  00F5               	movwf	___awmod@dividend
  2869  0DA4  01F6               	clrf	___awmod@dividend+1
  2870  0DA5  1BF5               	btfsc	___awmod@dividend,7
  2871  0DA6  03F6               	decf	___awmod@dividend+1,f
  2872  0DA7  160A  158A  24FA  120A  158A  	fcall	___awmod
  2873  0DAC  0873               	movf	?___awmod,w
  2874  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2875  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2876  0DAF  00C6               	movwf	??_scale
  2877  0DB0  3001               	movlw	1
  2878  0DB1                     u4345:
  2879  0DB1  1003               	clrc
  2880  0DB2  0DC6               	rlf	??_scale,f
  2881  0DB3  3EFF               	addlw	-1
  2882  0DB4  1D03               	skipz
  2883  0DB5  2DB1               	goto	u4345
  2884  0DB6  1003               	clrc
  2885  0DB7  0D46               	rlf	??_scale,w
  2886  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2887  0DB9  0084               	movwf	4
  2888  0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  2889  0DBF  00C7               	movwf	??_scale+1
  2890  0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  2891  0DC5  00C8               	movwf	??_scale+2
  2892  0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  2893  0DCB  00C9               	movwf	??_scale+3
  2894  0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  2895  0DD1  00CA               	movwf	??_scale+4
  2896  0DD2  084A               	movf	??_scale+4,w
  2897  0DD3  00AB               	movwf	___flmul@b+3
  2898  0DD4  0849               	movf	??_scale+3,w
  2899  0DD5  00AA               	movwf	___flmul@b+2
  2900  0DD6  0848               	movf	??_scale+2,w
  2901  0DD7  00A9               	movwf	___flmul@b+1
  2902  0DD8  0847               	movf	??_scale+1,w
  2903  0DD9  00A8               	movwf	___flmul@b
  2904  0DDA  300A               	movlw	10
  2905  0DDB  00A0               	movwf	___awdiv@divisor
  2906  0DDC  3000               	movlw	0
  2907  0DDD  00A1               	movwf	___awdiv@divisor+1
  2908  0DDE  0854               	movf	scale@scl,w
  2909  0DDF  00A2               	movwf	___awdiv@dividend
  2910  0DE0  01A3               	clrf	___awdiv@dividend+1
  2911  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2912  0DE2  03A3               	decf	___awdiv@dividend+1,f
  2913  0DE3  160A  158A  25BB  120A  158A  	fcall	___awdiv
  2914  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2915  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2916  0DEA  0820               	movf	?___awdiv,w
  2917  0DEB  00CB               	movwf	??_scale+5
  2918  0DEC  3001               	movlw	1
  2919  0DED                     u4355:
  2920  0DED  1003               	clrc
  2921  0DEE  0DCB               	rlf	??_scale+5,f
  2922  0DEF  3EFF               	addlw	-1
  2923  0DF0  1D03               	skipz
  2924  0DF1  2DED               	goto	u4355
  2925  0DF2  1003               	clrc
  2926  0DF3  0D4B               	rlf	??_scale+5,w
  2927  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2928  0DF5  0084               	movwf	4
  2929  0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  2930  0DFB  00CC               	movwf	??_scale+6
  2931  0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  2932  0E01  00CD               	movwf	??_scale+7
  2933  0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  2934  0E07  00CE               	movwf	??_scale+8
  2935  0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  2936  0E0D  00CF               	movwf	??_scale+9
  2937  0E0E  084F               	movf	??_scale+9,w
  2938  0E0F  00AF               	movwf	___flmul@a+3
  2939  0E10  084E               	movf	??_scale+8,w
  2940  0E11  00AE               	movwf	___flmul@a+2
  2941  0E12  084D               	movf	??_scale+7,w
  2942  0E13  00AD               	movwf	___flmul@a+1
  2943  0E14  084C               	movf	??_scale+6,w
  2944  0E15  00AC               	movwf	___flmul@a
  2945  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2946  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2948  0E1D  082B               	movf	?___flmul+3,w
  2949  0E1E  00C5               	movwf	?_scale+3
  2950  0E1F  082A               	movf	?___flmul+2,w
  2951  0E20  00C4               	movwf	?_scale+2
  2952  0E21  0829               	movf	?___flmul+1,w
  2953  0E22  00C3               	movwf	?_scale+1
  2954  0E23  0828               	movf	?___flmul,w
  2955  0E24  00C2               	movwf	?_scale
  2956  0E25  2FFF               	goto	l337
  2957  0E26                     l2897:
  2958                           
  2959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2960  0E26  0854               	movf	scale@scl,w
  2961  0E27  00C6               	movwf	??_scale
  2962  0E28  3001               	movlw	1
  2963  0E29                     u4365:
  2964  0E29  1003               	clrc
  2965  0E2A  0DC6               	rlf	??_scale,f
  2966  0E2B  3EFF               	addlw	-1
  2967  0E2C  1D03               	skipz
  2968  0E2D  2E29               	goto	u4365
  2969  0E2E  1003               	clrc
  2970  0E2F  0D46               	rlf	??_scale,w
  2971  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2972  0E31  0084               	movwf	4
  2973  0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  2974  0E37  00C7               	movwf	??_scale+1
  2975  0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  2976  0E3D  00C8               	movwf	??_scale+2
  2977  0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  2978  0E43  00C9               	movwf	??_scale+3
  2979  0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  2980  0E49  00CA               	movwf	??_scale+4
  2981  0E4A  084A               	movf	??_scale+4,w
  2982  0E4B  00C5               	movwf	?_scale+3
  2983  0E4C  0849               	movf	??_scale+3,w
  2984  0E4D  00C4               	movwf	?_scale+2
  2985  0E4E  0848               	movf	??_scale+2,w
  2986  0E4F  00C3               	movwf	?_scale+1
  2987  0E50  0847               	movf	??_scale+1,w
  2988  0E51  00C2               	movwf	?_scale
  2989  0E52  2FFF               	goto	l337
  2990  0E53                     l2901:
  2991                           
  2992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2993  0E53  0854               	movf	scale@scl,w
  2994  0E54  3A80               	xorlw	128
  2995  0E55  3E12               	addlw	-238
  2996  0E56  1C03               	skipc
  2997  0E57  2E59               	goto	u4371
  2998  0E58  2E5A               	goto	u4370
  2999  0E59                     u4371:
  3000  0E59  2F44               	goto	l2909
  3001  0E5A                     u4370:
  3002  0E5A                     l2903:
  3003                           
  3004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3005  0E5A  300A               	movlw	10
  3006  0E5B  00A0               	movwf	___awdiv@divisor
  3007  0E5C  3000               	movlw	0
  3008  0E5D  00A1               	movwf	___awdiv@divisor+1
  3009  0E5E  0854               	movf	scale@scl,w
  3010  0E5F  00F5               	movwf	___awmod@dividend
  3011  0E60  01F6               	clrf	___awmod@dividend+1
  3012  0E61  1BF5               	btfsc	___awmod@dividend,7
  3013  0E62  03F6               	decf	___awmod@dividend+1,f
  3014  0E63  3064               	movlw	100
  3015  0E64  00F3               	movwf	___awmod@divisor
  3016  0E65  3000               	movlw	0
  3017  0E66  00F4               	movwf	___awmod@divisor+1
  3018  0E67  160A  158A  24FA  120A  158A  	fcall	___awmod
  3019  0E6C  0874               	movf	?___awmod+1,w
  3020  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3021  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3022  0E6F  00A3               	movwf	___awdiv@dividend+1
  3023  0E70  0873               	movf	?___awmod,w
  3024  0E71  00A2               	movwf	___awdiv@dividend
  3025  0E72  160A  158A  25BB  120A  158A  	fcall	___awdiv
  3026  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3028  0E79  0820               	movf	?___awdiv,w
  3029  0E7A  00C6               	movwf	??_scale
  3030  0E7B  3001               	movlw	1
  3031  0E7C                     u4385:
  3032  0E7C  1003               	clrc
  3033  0E7D  0DC6               	rlf	??_scale,f
  3034  0E7E  3EFF               	addlw	-1
  3035  0E7F  1D03               	skipz
  3036  0E80  2E7C               	goto	u4385
  3037  0E81  1003               	clrc
  3038  0E82  0D46               	rlf	??_scale,w
  3039  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3040  0E84  0084               	movwf	4
  3041  0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  3042  0E8A  00C7               	movwf	??_scale+1
  3043  0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  3044  0E90  00C8               	movwf	??_scale+2
  3045  0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  3046  0E96  00C9               	movwf	??_scale+3
  3047  0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  3048  0E9C  00CA               	movwf	??_scale+4
  3049  0E9D  084A               	movf	??_scale+4,w
  3050  0E9E  00AB               	movwf	___flmul@b+3
  3051  0E9F  0849               	movf	??_scale+3,w
  3052  0EA0  00AA               	movwf	___flmul@b+2
  3053  0EA1  0848               	movf	??_scale+2,w
  3054  0EA2  00A9               	movwf	___flmul@b+1
  3055  0EA3  0847               	movf	??_scale+1,w
  3056  0EA4  00A8               	movwf	___flmul@b
  3057  0EA5  3064               	movlw	100
  3058  0EA6  00A0               	movwf	___awdiv@divisor
  3059  0EA7  3000               	movlw	0
  3060  0EA8  00A1               	movwf	___awdiv@divisor+1
  3061  0EA9  0854               	movf	scale@scl,w
  3062  0EAA  00A2               	movwf	___awdiv@dividend
  3063  0EAB  01A3               	clrf	___awdiv@dividend+1
  3064  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  3065  0EAD  03A3               	decf	___awdiv@dividend+1,f
  3066  0EAE  160A  158A  25BB  120A  158A  	fcall	___awdiv
  3067  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3068  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3069  0EB5  0820               	movf	?___awdiv,w
  3070  0EB6  00CB               	movwf	??_scale+5
  3071  0EB7  3001               	movlw	1
  3072  0EB8                     u4395:
  3073  0EB8  1003               	clrc
  3074  0EB9  0DCB               	rlf	??_scale+5,f
  3075  0EBA  3EFF               	addlw	-1
  3076  0EBB  1D03               	skipz
  3077  0EBC  2EB8               	goto	u4395
  3078  0EBD  1003               	clrc
  3079  0EBE  0D4B               	rlf	??_scale+5,w
  3080  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3081  0EC0  0084               	movwf	4
  3082  0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  3083  0EC6  00CC               	movwf	??_scale+6
  3084  0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  3085  0ECC  00CD               	movwf	??_scale+7
  3086  0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  3087  0ED2  00CE               	movwf	??_scale+8
  3088  0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  3089  0ED8  00CF               	movwf	??_scale+9
  3090  0ED9  084F               	movf	??_scale+9,w
  3091  0EDA  00AF               	movwf	___flmul@a+3
  3092  0EDB  084E               	movf	??_scale+8,w
  3093  0EDC  00AE               	movwf	___flmul@a+2
  3094  0EDD  084D               	movf	??_scale+7,w
  3095  0EDE  00AD               	movwf	___flmul@a+1
  3096  0EDF  084C               	movf	??_scale+6,w
  3097  0EE0  00AC               	movwf	___flmul@a
  3098  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3099  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3100  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3101  0EE8  082B               	movf	?___flmul+3,w
  3102  0EE9  00D3               	movwf	_scale$1238+3
  3103  0EEA  082A               	movf	?___flmul+2,w
  3104  0EEB  00D2               	movwf	_scale$1238+2
  3105  0EEC  0829               	movf	?___flmul+1,w
  3106  0EED  00D1               	movwf	_scale$1238+1
  3107  0EEE  0828               	movf	?___flmul,w
  3108  0EEF  00D0               	movwf	_scale$1238
  3109                           
  3110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3111  0EF0  300A               	movlw	10
  3112  0EF1  00F3               	movwf	___awmod@divisor
  3113  0EF2  3000               	movlw	0
  3114  0EF3  00F4               	movwf	___awmod@divisor+1
  3115  0EF4  0854               	movf	scale@scl,w
  3116  0EF5  00F5               	movwf	___awmod@dividend
  3117  0EF6  01F6               	clrf	___awmod@dividend+1
  3118  0EF7  1BF5               	btfsc	___awmod@dividend,7
  3119  0EF8  03F6               	decf	___awmod@dividend+1,f
  3120  0EF9  160A  158A  24FA  120A  158A  	fcall	___awmod
  3121  0EFE  0873               	movf	?___awmod,w
  3122  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3124  0F01  00C6               	movwf	??_scale
  3125  0F02  3001               	movlw	1
  3126  0F03                     u4405:
  3127  0F03  1003               	clrc
  3128  0F04  0DC6               	rlf	??_scale,f
  3129  0F05  3EFF               	addlw	-1
  3130  0F06  1D03               	skipz
  3131  0F07  2F03               	goto	u4405
  3132  0F08  1003               	clrc
  3133  0F09  0D46               	rlf	??_scale,w
  3134  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3135  0F0B  0084               	movwf	4
  3136  0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3137  0F11  00C7               	movwf	??_scale+1
  3138  0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  3139  0F17  00C8               	movwf	??_scale+2
  3140  0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  3141  0F1D  00C9               	movwf	??_scale+3
  3142  0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  3143  0F23  00CA               	movwf	??_scale+4
  3144  0F24  084A               	movf	??_scale+4,w
  3145  0F25  00AB               	movwf	___flmul@b+3
  3146  0F26  0849               	movf	??_scale+3,w
  3147  0F27  00AA               	movwf	___flmul@b+2
  3148  0F28  0848               	movf	??_scale+2,w
  3149  0F29  00A9               	movwf	___flmul@b+1
  3150  0F2A  0847               	movf	??_scale+1,w
  3151  0F2B  00A8               	movwf	___flmul@b
  3152  0F2C  0853               	movf	_scale$1238+3,w
  3153  0F2D  00AF               	movwf	___flmul@a+3
  3154  0F2E  0852               	movf	_scale$1238+2,w
  3155  0F2F  00AE               	movwf	___flmul@a+2
  3156  0F30  0851               	movf	_scale$1238+1,w
  3157  0F31  00AD               	movwf	___flmul@a+1
  3158  0F32  0850               	movf	_scale$1238,w
  3159  0F33  00AC               	movwf	___flmul@a
  3160  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3161  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3162  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3163  0F3B  082B               	movf	?___flmul+3,w
  3164  0F3C  00C5               	movwf	?_scale+3
  3165  0F3D  082A               	movf	?___flmul+2,w
  3166  0F3E  00C4               	movwf	?_scale+2
  3167  0F3F  0829               	movf	?___flmul+1,w
  3168  0F40  00C3               	movwf	?_scale+1
  3169  0F41  0828               	movf	?___flmul,w
  3170  0F42  00C2               	movwf	?_scale
  3171  0F43  2FFF               	goto	l337
  3172  0F44                     l2909:
  3173  0F44  0854               	movf	scale@scl,w
  3174  0F45  3A80               	xorlw	128
  3175  0F46  3E75               	addlw	-139
  3176  0F47  1C03               	skipc
  3177  0F48  2F4A               	goto	u4411
  3178  0F49  2F4B               	goto	u4410
  3179  0F4A                     u4411:
  3180  0F4A  2FD3               	goto	l2915
  3181  0F4B                     u4410:
  3182  0F4B                     l2911:
  3183                           
  3184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3185  0F4B  300A               	movlw	10
  3186  0F4C  00F3               	movwf	___awmod@divisor
  3187  0F4D  3000               	movlw	0
  3188  0F4E  00F4               	movwf	___awmod@divisor+1
  3189  0F4F  0854               	movf	scale@scl,w
  3190  0F50  00F5               	movwf	___awmod@dividend
  3191  0F51  01F6               	clrf	___awmod@dividend+1
  3192  0F52  1BF5               	btfsc	___awmod@dividend,7
  3193  0F53  03F6               	decf	___awmod@dividend+1,f
  3194  0F54  160A  158A  24FA  120A  158A  	fcall	___awmod
  3195  0F59  0873               	movf	?___awmod,w
  3196  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0F5C  00C6               	movwf	??_scale
  3199  0F5D  3001               	movlw	1
  3200  0F5E                     u4425:
  3201  0F5E  1003               	clrc
  3202  0F5F  0DC6               	rlf	??_scale,f
  3203  0F60  3EFF               	addlw	-1
  3204  0F61  1D03               	skipz
  3205  0F62  2F5E               	goto	u4425
  3206  0F63  1003               	clrc
  3207  0F64  0D46               	rlf	??_scale,w
  3208  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3209  0F66  0084               	movwf	4
  3210  0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  3211  0F6C  00C7               	movwf	??_scale+1
  3212  0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3213  0F72  00C8               	movwf	??_scale+2
  3214  0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  3215  0F78  00C9               	movwf	??_scale+3
  3216  0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  3217  0F7E  00CA               	movwf	??_scale+4
  3218  0F7F  084A               	movf	??_scale+4,w
  3219  0F80  00AB               	movwf	___flmul@b+3
  3220  0F81  0849               	movf	??_scale+3,w
  3221  0F82  00AA               	movwf	___flmul@b+2
  3222  0F83  0848               	movf	??_scale+2,w
  3223  0F84  00A9               	movwf	___flmul@b+1
  3224  0F85  0847               	movf	??_scale+1,w
  3225  0F86  00A8               	movwf	___flmul@b
  3226  0F87  300A               	movlw	10
  3227  0F88  00A0               	movwf	___awdiv@divisor
  3228  0F89  3000               	movlw	0
  3229  0F8A  00A1               	movwf	___awdiv@divisor+1
  3230  0F8B  0854               	movf	scale@scl,w
  3231  0F8C  00A2               	movwf	___awdiv@dividend
  3232  0F8D  01A3               	clrf	___awdiv@dividend+1
  3233  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3234  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3235  0F90  160A  158A  25BB  120A  158A  	fcall	___awdiv
  3236  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3237  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3238  0F97  0820               	movf	?___awdiv,w
  3239  0F98  00CB               	movwf	??_scale+5
  3240  0F99  3001               	movlw	1
  3241  0F9A                     u4435:
  3242  0F9A  1003               	clrc
  3243  0F9B  0DCB               	rlf	??_scale+5,f
  3244  0F9C  3EFF               	addlw	-1
  3245  0F9D  1D03               	skipz
  3246  0F9E  2F9A               	goto	u4435
  3247  0F9F  1003               	clrc
  3248  0FA0  0D4B               	rlf	??_scale+5,w
  3249  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3250  0FA2  0084               	movwf	4
  3251  0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  3252  0FA8  00CC               	movwf	??_scale+6
  3253  0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  3254  0FAE  00CD               	movwf	??_scale+7
  3255  0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  3256  0FB4  00CE               	movwf	??_scale+8
  3257  0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  3258  0FBA  00CF               	movwf	??_scale+9
  3259  0FBB  084F               	movf	??_scale+9,w
  3260  0FBC  00AF               	movwf	___flmul@a+3
  3261  0FBD  084E               	movf	??_scale+8,w
  3262  0FBE  00AE               	movwf	___flmul@a+2
  3263  0FBF  084D               	movf	??_scale+7,w
  3264  0FC0  00AD               	movwf	___flmul@a+1
  3265  0FC1  084C               	movf	??_scale+6,w
  3266  0FC2  00AC               	movwf	___flmul@a
  3267  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3268  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3269  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3270  0FCA  082B               	movf	?___flmul+3,w
  3271  0FCB  00C5               	movwf	?_scale+3
  3272  0FCC  082A               	movf	?___flmul+2,w
  3273  0FCD  00C4               	movwf	?_scale+2
  3274  0FCE  0829               	movf	?___flmul+1,w
  3275  0FCF  00C3               	movwf	?_scale+1
  3276  0FD0  0828               	movf	?___flmul,w
  3277  0FD1  00C2               	movwf	?_scale
  3278  0FD2  2FFF               	goto	l337
  3279  0FD3                     l2915:
  3280                           
  3281                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3282  0FD3  0854               	movf	scale@scl,w
  3283  0FD4  00C6               	movwf	??_scale
  3284  0FD5  3001               	movlw	1
  3285  0FD6                     u4445:
  3286  0FD6  1003               	clrc
  3287  0FD7  0DC6               	rlf	??_scale,f
  3288  0FD8  3EFF               	addlw	-1
  3289  0FD9  1D03               	skipz
  3290  0FDA  2FD6               	goto	u4445
  3291  0FDB  1003               	clrc
  3292  0FDC  0D46               	rlf	??_scale,w
  3293  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3294  0FDE  0084               	movwf	4
  3295  0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  3296  0FE4  00C7               	movwf	??_scale+1
  3297  0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  3298  0FEA  00C8               	movwf	??_scale+2
  3299  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  3300  0FF0  00C9               	movwf	??_scale+3
  3301  0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  3302  0FF6  00CA               	movwf	??_scale+4
  3303  0FF7  084A               	movf	??_scale+4,w
  3304  0FF8  00C5               	movwf	?_scale+3
  3305  0FF9  0849               	movf	??_scale+3,w
  3306  0FFA  00C4               	movwf	?_scale+2
  3307  0FFB  0848               	movf	??_scale+2,w
  3308  0FFC  00C3               	movwf	?_scale+1
  3309  0FFD  0847               	movf	??_scale+1,w
  3310  0FFE  00C2               	movwf	?_scale
  3311  0FFF                     l337:
  3312  0FFF  0008               	return
  3313  1000                     __end_of_scale:
  3314                           
  3315                           	psect	text3
  3316  1CFA                     __ptext3:	
  3317 ;; *************** function ___awmod *****************
  3318 ;; Defined at:
  3319 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  divisor         2    3[COMMON] int 
  3322 ;;  dividend        2    5[COMMON] int 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;  sign            1    9[COMMON] unsigned char 
  3325 ;;  counter         1    8[COMMON] unsigned char 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  2    3[COMMON] int 
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3335 ;;      Params:         4       0       0       0       0
  3336 ;;      Locals:         2       0       0       0       0
  3337 ;;      Temps:          1       0       0       0       0
  3338 ;;      Totals:         7       0       0       0       0
  3339 ;;Total ram usage:        7 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    2
  3342 ;; This function calls:
  3343 ;;		Nothing
  3344 ;; This function is called by:
  3345 ;;		_scale
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           
  3350                           ;psect for function ___awmod
  3351  1CFA                     ___awmod:
  3352  1CFA                     l2415:	
  3353                           ;incstack = 0
  3354                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3355                           
  3356  1CFA  01F9               	clrf	___awmod@sign
  3357  1CFB                     l2417:
  3358  1CFB  1FF6               	btfss	___awmod@dividend+1,7
  3359  1CFC  2CFE               	goto	u3141
  3360  1CFD  2CFF               	goto	u3140
  3361  1CFE                     u3141:
  3362  1CFE  2D06               	goto	l2423
  3363  1CFF                     u3140:
  3364  1CFF                     l2419:
  3365  1CFF  09F5               	comf	___awmod@dividend,f
  3366  1D00  09F6               	comf	___awmod@dividend+1,f
  3367  1D01  0AF5               	incf	___awmod@dividend,f
  3368  1D02  1903               	skipnz
  3369  1D03  0AF6               	incf	___awmod@dividend+1,f
  3370  1D04                     l2421:
  3371  1D04  01F9               	clrf	___awmod@sign
  3372  1D05  0AF9               	incf	___awmod@sign,f
  3373  1D06                     l2423:
  3374  1D06  1FF4               	btfss	___awmod@divisor+1,7
  3375  1D07  2D09               	goto	u3151
  3376  1D08  2D0A               	goto	u3150
  3377  1D09                     u3151:
  3378  1D09  2D0F               	goto	l2427
  3379  1D0A                     u3150:
  3380  1D0A                     l2425:
  3381  1D0A  09F3               	comf	___awmod@divisor,f
  3382  1D0B  09F4               	comf	___awmod@divisor+1,f
  3383  1D0C  0AF3               	incf	___awmod@divisor,f
  3384  1D0D  1903               	skipnz
  3385  1D0E  0AF4               	incf	___awmod@divisor+1,f
  3386  1D0F                     l2427:
  3387  1D0F  0873               	movf	___awmod@divisor,w
  3388  1D10  0474               	iorwf	___awmod@divisor+1,w
  3389  1D11  1903               	btfsc	3,2
  3390  1D12  2D14               	goto	u3161
  3391  1D13  2D15               	goto	u3160
  3392  1D14                     u3161:
  3393  1D14  2D44               	goto	l2445
  3394  1D15                     u3160:
  3395  1D15                     l2429:
  3396  1D15  01F8               	clrf	___awmod@counter
  3397  1D16  0AF8               	incf	___awmod@counter,f
  3398  1D17  2D23               	goto	l2435
  3399  1D18                     l2431:
  3400  1D18  3001               	movlw	1
  3401  1D19                     u3175:
  3402  1D19  1003               	clrc
  3403  1D1A  0DF3               	rlf	___awmod@divisor,f
  3404  1D1B  0DF4               	rlf	___awmod@divisor+1,f
  3405  1D1C  3EFF               	addlw	-1
  3406  1D1D  1D03               	skipz
  3407  1D1E  2D19               	goto	u3175
  3408  1D1F                     l2433:
  3409  1D1F  3001               	movlw	1
  3410  1D20  00F7               	movwf	??___awmod
  3411  1D21  0877               	movf	??___awmod,w
  3412  1D22  07F8               	addwf	___awmod@counter,f
  3413  1D23                     l2435:
  3414  1D23  1FF4               	btfss	___awmod@divisor+1,7
  3415  1D24  2D26               	goto	u3181
  3416  1D25  2D27               	goto	u3180
  3417  1D26                     u3181:
  3418  1D26  2D18               	goto	l2431
  3419  1D27                     u3180:
  3420  1D27                     l2437:
  3421  1D27  0874               	movf	___awmod@divisor+1,w
  3422  1D28  0276               	subwf	___awmod@dividend+1,w
  3423  1D29  1D03               	skipz
  3424  1D2A  2D2D               	goto	u3195
  3425  1D2B  0873               	movf	___awmod@divisor,w
  3426  1D2C  0275               	subwf	___awmod@dividend,w
  3427  1D2D                     u3195:
  3428  1D2D  1C03               	skipc
  3429  1D2E  2D30               	goto	u3191
  3430  1D2F  2D31               	goto	u3190
  3431  1D30                     u3191:
  3432  1D30  2D37               	goto	l2441
  3433  1D31                     u3190:
  3434  1D31                     l2439:
  3435  1D31  0873               	movf	___awmod@divisor,w
  3436  1D32  02F5               	subwf	___awmod@dividend,f
  3437  1D33  0874               	movf	___awmod@divisor+1,w
  3438  1D34  1C03               	skipc
  3439  1D35  03F6               	decf	___awmod@dividend+1,f
  3440  1D36  02F6               	subwf	___awmod@dividend+1,f
  3441  1D37                     l2441:
  3442  1D37  3001               	movlw	1
  3443  1D38                     u3205:
  3444  1D38  1003               	clrc
  3445  1D39  0CF4               	rrf	___awmod@divisor+1,f
  3446  1D3A  0CF3               	rrf	___awmod@divisor,f
  3447  1D3B  3EFF               	addlw	-1
  3448  1D3C  1D03               	skipz
  3449  1D3D  2D38               	goto	u3205
  3450  1D3E                     l2443:
  3451  1D3E  3001               	movlw	1
  3452  1D3F  02F8               	subwf	___awmod@counter,f
  3453  1D40  1D03               	btfss	3,2
  3454  1D41  2D43               	goto	u3211
  3455  1D42  2D44               	goto	u3210
  3456  1D43                     u3211:
  3457  1D43  2D27               	goto	l2437
  3458  1D44                     u3210:
  3459  1D44                     l2445:
  3460  1D44  0879               	movf	___awmod@sign,w
  3461  1D45  1903               	btfsc	3,2
  3462  1D46  2D48               	goto	u3221
  3463  1D47  2D49               	goto	u3220
  3464  1D48                     u3221:
  3465  1D48  2D4E               	goto	l2449
  3466  1D49                     u3220:
  3467  1D49                     l2447:
  3468  1D49  09F5               	comf	___awmod@dividend,f
  3469  1D4A  09F6               	comf	___awmod@dividend+1,f
  3470  1D4B  0AF5               	incf	___awmod@dividend,f
  3471  1D4C  1903               	skipnz
  3472  1D4D  0AF6               	incf	___awmod@dividend+1,f
  3473  1D4E                     l2449:
  3474  1D4E  0876               	movf	___awmod@dividend+1,w
  3475  1D4F  00F4               	movwf	?___awmod+1
  3476  1D50  0875               	movf	___awmod@dividend,w
  3477  1D51  00F3               	movwf	?___awmod
  3478  1D52                     l590:
  3479  1D52  0008               	return
  3480  1D53                     __end_of___awmod:
  3481                           
  3482                           	psect	text4
  3483  1DBB                     __ptext4:	
  3484 ;; *************** function ___awdiv *****************
  3485 ;; Defined at:
  3486 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  divisor         2    0[BANK0 ] int 
  3489 ;;  dividend        2    2[BANK0 ] int 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  quotient        2    6[BANK0 ] int 
  3492 ;;  sign            1    5[BANK0 ] unsigned char 
  3493 ;;  counter         1    4[BANK0 ] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  2    0[BANK0 ] int 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3503 ;;      Params:         0       4       0       0       0
  3504 ;;      Locals:         0       4       0       0       0
  3505 ;;      Temps:          1       0       0       0       0
  3506 ;;      Totals:         1       8       0       0       0
  3507 ;;Total ram usage:        9 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    2
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_scale
  3514 ;;		_sprintf
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           
  3519                           ;psect for function ___awdiv
  3520  1DBB                     ___awdiv:
  3521  1DBB                     l2371:	
  3522                           ;incstack = 0
  3523                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3524                           
  3525  1DBB  1283               	bcf	3,5	;RP0=0, select bank0
  3526  1DBC  1303               	bcf	3,6	;RP1=0, select bank0
  3527  1DBD  01A5               	clrf	___awdiv@sign
  3528  1DBE                     l2373:
  3529  1DBE  1FA1               	btfss	___awdiv@divisor+1,7
  3530  1DBF  2DC1               	goto	u3041
  3531  1DC0  2DC2               	goto	u3040
  3532  1DC1                     u3041:
  3533  1DC1  2DC9               	goto	l2379
  3534  1DC2                     u3040:
  3535  1DC2                     l2375:
  3536  1DC2  09A0               	comf	___awdiv@divisor,f
  3537  1DC3  09A1               	comf	___awdiv@divisor+1,f
  3538  1DC4  0AA0               	incf	___awdiv@divisor,f
  3539  1DC5  1903               	skipnz
  3540  1DC6  0AA1               	incf	___awdiv@divisor+1,f
  3541  1DC7                     l2377:
  3542  1DC7  01A5               	clrf	___awdiv@sign
  3543  1DC8  0AA5               	incf	___awdiv@sign,f
  3544  1DC9                     l2379:
  3545  1DC9  1FA3               	btfss	___awdiv@dividend+1,7
  3546  1DCA  2DCC               	goto	u3051
  3547  1DCB  2DCD               	goto	u3050
  3548  1DCC                     u3051:
  3549  1DCC  2DD6               	goto	l2385
  3550  1DCD                     u3050:
  3551  1DCD                     l2381:
  3552  1DCD  09A2               	comf	___awdiv@dividend,f
  3553  1DCE  09A3               	comf	___awdiv@dividend+1,f
  3554  1DCF  0AA2               	incf	___awdiv@dividend,f
  3555  1DD0  1903               	skipnz
  3556  1DD1  0AA3               	incf	___awdiv@dividend+1,f
  3557  1DD2                     l2383:
  3558  1DD2  3001               	movlw	1
  3559  1DD3  00FA               	movwf	??___awdiv
  3560  1DD4  087A               	movf	??___awdiv,w
  3561  1DD5  06A5               	xorwf	___awdiv@sign,f
  3562  1DD6                     l2385:
  3563  1DD6  01A6               	clrf	___awdiv@quotient
  3564  1DD7  01A7               	clrf	___awdiv@quotient+1
  3565  1DD8                     l2387:
  3566  1DD8  0820               	movf	___awdiv@divisor,w
  3567  1DD9  0421               	iorwf	___awdiv@divisor+1,w
  3568  1DDA  1903               	btfsc	3,2
  3569  1DDB  2DDD               	goto	u3061
  3570  1DDC  2DDE               	goto	u3060
  3571  1DDD                     u3061:
  3572  1DDD  2E15               	goto	l2407
  3573  1DDE                     u3060:
  3574  1DDE                     l2389:
  3575  1DDE  01A4               	clrf	___awdiv@counter
  3576  1DDF  0AA4               	incf	___awdiv@counter,f
  3577  1DE0  2DEC               	goto	l2395
  3578  1DE1                     l2391:
  3579  1DE1  3001               	movlw	1
  3580  1DE2                     u3075:
  3581  1DE2  1003               	clrc
  3582  1DE3  0DA0               	rlf	___awdiv@divisor,f
  3583  1DE4  0DA1               	rlf	___awdiv@divisor+1,f
  3584  1DE5  3EFF               	addlw	-1
  3585  1DE6  1D03               	skipz
  3586  1DE7  2DE2               	goto	u3075
  3587  1DE8                     l2393:
  3588  1DE8  3001               	movlw	1
  3589  1DE9  00FA               	movwf	??___awdiv
  3590  1DEA  087A               	movf	??___awdiv,w
  3591  1DEB  07A4               	addwf	___awdiv@counter,f
  3592  1DEC                     l2395:
  3593  1DEC  1FA1               	btfss	___awdiv@divisor+1,7
  3594  1DED  2DEF               	goto	u3081
  3595  1DEE  2DF0               	goto	u3080
  3596  1DEF                     u3081:
  3597  1DEF  2DE1               	goto	l2391
  3598  1DF0                     u3080:
  3599  1DF0                     l2397:
  3600  1DF0  3001               	movlw	1
  3601  1DF1                     u3095:
  3602  1DF1  1003               	clrc
  3603  1DF2  0DA6               	rlf	___awdiv@quotient,f
  3604  1DF3  0DA7               	rlf	___awdiv@quotient+1,f
  3605  1DF4  3EFF               	addlw	-1
  3606  1DF5  1D03               	skipz
  3607  1DF6  2DF1               	goto	u3095
  3608  1DF7  0821               	movf	___awdiv@divisor+1,w
  3609  1DF8  0223               	subwf	___awdiv@dividend+1,w
  3610  1DF9  1D03               	skipz
  3611  1DFA  2DFD               	goto	u3105
  3612  1DFB  0820               	movf	___awdiv@divisor,w
  3613  1DFC  0222               	subwf	___awdiv@dividend,w
  3614  1DFD                     u3105:
  3615  1DFD  1C03               	skipc
  3616  1DFE  2E00               	goto	u3101
  3617  1DFF  2E01               	goto	u3100
  3618  1E00                     u3101:
  3619  1E00  2E08               	goto	l2403
  3620  1E01                     u3100:
  3621  1E01                     l2399:
  3622  1E01  0820               	movf	___awdiv@divisor,w
  3623  1E02  02A2               	subwf	___awdiv@dividend,f
  3624  1E03  0821               	movf	___awdiv@divisor+1,w
  3625  1E04  1C03               	skipc
  3626  1E05  03A3               	decf	___awdiv@dividend+1,f
  3627  1E06  02A3               	subwf	___awdiv@dividend+1,f
  3628  1E07                     l2401:
  3629  1E07  1426               	bsf	___awdiv@quotient,0
  3630  1E08                     l2403:
  3631  1E08  3001               	movlw	1
  3632  1E09                     u3115:
  3633  1E09  1003               	clrc
  3634  1E0A  0CA1               	rrf	___awdiv@divisor+1,f
  3635  1E0B  0CA0               	rrf	___awdiv@divisor,f
  3636  1E0C  3EFF               	addlw	-1
  3637  1E0D  1D03               	skipz
  3638  1E0E  2E09               	goto	u3115
  3639  1E0F                     l2405:
  3640  1E0F  3001               	movlw	1
  3641  1E10  02A4               	subwf	___awdiv@counter,f
  3642  1E11  1D03               	btfss	3,2
  3643  1E12  2E14               	goto	u3121
  3644  1E13  2E15               	goto	u3120
  3645  1E14                     u3121:
  3646  1E14  2DF0               	goto	l2397
  3647  1E15                     u3120:
  3648  1E15                     l2407:
  3649  1E15  0825               	movf	___awdiv@sign,w
  3650  1E16  1903               	btfsc	3,2
  3651  1E17  2E19               	goto	u3131
  3652  1E18  2E1A               	goto	u3130
  3653  1E19                     u3131:
  3654  1E19  2E1F               	goto	l2411
  3655  1E1A                     u3130:
  3656  1E1A                     l2409:
  3657  1E1A  09A6               	comf	___awdiv@quotient,f
  3658  1E1B  09A7               	comf	___awdiv@quotient+1,f
  3659  1E1C  0AA6               	incf	___awdiv@quotient,f
  3660  1E1D  1903               	skipnz
  3661  1E1E  0AA7               	incf	___awdiv@quotient+1,f
  3662  1E1F                     l2411:
  3663  1E1F  0827               	movf	___awdiv@quotient+1,w
  3664  1E20  00A1               	movwf	?___awdiv+1
  3665  1E21  0826               	movf	___awdiv@quotient,w
  3666  1E22  00A0               	movwf	?___awdiv
  3667  1E23                     l577:
  3668  1E23  0008               	return
  3669  1E24                     __end_of___awdiv:
  3670                           
  3671                           	psect	text5
  3672  19A5                     __ptext5:	
  3673 ;; *************** function _isdigit *****************
  3674 ;; Defined at:
  3675 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  c               1    wreg     unsigned char 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  c               1    4[COMMON] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;		None               void
  3682 ;; Registers used:
  3683 ;;		wreg, status,2, status,0
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3689 ;;      Params:         0       0       0       0       0
  3690 ;;      Locals:         2       0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0
  3692 ;;      Totals:         2       0       0       0       0
  3693 ;;Total ram usage:        2 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    2
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_sprintf
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           
  3704                           ;psect for function _isdigit
  3705  19A5                     _isdigit:
  3706                           
  3707                           ;incstack = 0
  3708                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3709                           ;isdigit@c stored from wreg
  3710  19A5  00F4               	movwf	isdigit@c
  3711  19A6                     l2919:
  3712  19A6  01F3               	clrf	_isdigit$1052
  3713  19A7                     l2921:
  3714  19A7  303A               	movlw	58
  3715  19A8  0274               	subwf	isdigit@c,w
  3716  19A9  1803               	skipnc
  3717  19AA  29AC               	goto	u4451
  3718  19AB  29AD               	goto	u4450
  3719  19AC                     u4451:
  3720  19AC  29B5               	goto	l2927
  3721  19AD                     u4450:
  3722  19AD                     l2923:
  3723  19AD  3030               	movlw	48
  3724  19AE  0274               	subwf	isdigit@c,w
  3725  19AF  1C03               	skipc
  3726  19B0  29B2               	goto	u4461
  3727  19B1  29B3               	goto	u4460
  3728  19B2                     u4461:
  3729  19B2  29B5               	goto	l2927
  3730  19B3                     u4460:
  3731  19B3                     l2925:
  3732  19B3  01F3               	clrf	_isdigit$1052
  3733  19B4  0AF3               	incf	_isdigit$1052,f
  3734  19B5                     l2927:
  3735  19B5  0C73               	rrf	_isdigit$1052,w
  3736  19B6                     l911:
  3737  19B6  0008               	return
  3738  19B7                     __end_of_isdigit:
  3739                           
  3740                           	psect	text6
  3741  05A1                     __ptext6:	
  3742 ;; *************** function _fround *****************
  3743 ;; Defined at:
  3744 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;  prec            1    wreg     unsigned char 
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  prec            1   53[BANK0 ] unsigned char 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  4   34[BANK0 ] unsigned char 
  3751 ;; Registers used:
  3752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3758 ;;      Params:         0       4       0       0       0
  3759 ;;      Locals:         0       9       0       0       0
  3760 ;;      Temps:          0       7       0       0       0
  3761 ;;      Totals:         0      20       0       0       0
  3762 ;;Total ram usage:       20 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    4
  3765 ;; This function calls:
  3766 ;;		___flmul
  3767 ;;		___lwdiv
  3768 ;;		___lwmod
  3769 ;; This function is called by:
  3770 ;;		_sprintf
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           
  3775                           ;psect for function _fround
  3776  05A1                     _fround:
  3777                           
  3778                           ;incstack = 0
  3779                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3780                           ;fround@prec stored from wreg
  3781  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  3782  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  3783  05A3  00D5               	movwf	fround@prec
  3784  05A4                     l2861:
  3785                           
  3786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3787  05A4  306E               	movlw	110
  3788  05A5  0255               	subwf	fround@prec,w
  3789  05A6  1C03               	skipc
  3790  05A7  2DA9               	goto	u4201
  3791  05A8  2DAA               	goto	u4200
  3792  05A9                     u4201:
  3793  05A9  2EB9               	goto	l2869
  3794  05AA                     u4200:
  3795  05AA                     l2863:
  3796                           
  3797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3798  05AA  303F               	movlw	63
  3799  05AB  00AB               	movwf	___flmul@b+3
  3800  05AC  3000               	movlw	0
  3801  05AD  00AA               	movwf	___flmul@b+2
  3802  05AE  3000               	movlw	0
  3803  05AF  00A9               	movwf	___flmul@b+1
  3804  05B0  3000               	movlw	0
  3805  05B1  00A8               	movwf	___flmul@b
  3806  05B2  3064               	movlw	100
  3807  05B3  00A0               	movwf	___lwdiv@divisor
  3808  05B4  3000               	movlw	0
  3809  05B5  00A1               	movwf	___lwdiv@divisor+1
  3810  05B6  0855               	movf	fround@prec,w
  3811  05B7  00C6               	movwf	??_fround
  3812  05B8  01C7               	clrf	??_fround+1
  3813  05B9  0846               	movf	??_fround,w
  3814  05BA  00A2               	movwf	___lwdiv@dividend
  3815  05BB  0847               	movf	??_fround+1,w
  3816  05BC  00A3               	movwf	___lwdiv@dividend+1
  3817  05BD  160A  158A  23C4  120A  118A  	fcall	___lwdiv
  3818  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  3819  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  3820  05C4  0820               	movf	?___lwdiv,w
  3821  05C5  00C8               	movwf	??_fround+2
  3822  05C6  3001               	movlw	1
  3823  05C7                     u4215:
  3824  05C7  1003               	clrc
  3825  05C8  0DC8               	rlf	??_fround+2,f
  3826  05C9  3EFF               	addlw	-1
  3827  05CA  1D03               	skipz
  3828  05CB  2DC7               	goto	u4215
  3829  05CC  1003               	clrc
  3830  05CD  0D48               	rlf	??_fround+2,w
  3831  05CE  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3832  05CF  0084               	movwf	4
  3833  05D0  160A  118A  200A  120A  118A  	fcall	stringdir
  3834  05D5  00C9               	movwf	??_fround+3
  3835  05D6  160A  118A  200A  120A  118A  	fcall	stringdir
  3836  05DB  00CA               	movwf	??_fround+4
  3837  05DC  160A  118A  200A  120A  118A  	fcall	stringdir
  3838  05E1  00CB               	movwf	??_fround+5
  3839  05E2  160A  118A  200A  120A  118A  	fcall	stringdir
  3840  05E7  00CC               	movwf	??_fround+6
  3841  05E8  084C               	movf	??_fround+6,w
  3842  05E9  00AF               	movwf	___flmul@a+3
  3843  05EA  084B               	movf	??_fround+5,w
  3844  05EB  00AE               	movwf	___flmul@a+2
  3845  05EC  084A               	movf	??_fround+4,w
  3846  05ED  00AD               	movwf	___flmul@a+1
  3847  05EE  0849               	movf	??_fround+3,w
  3848  05EF  00AC               	movwf	___flmul@a
  3849  05F0  120A  158A  213C  120A  118A  	fcall	___flmul
  3850  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  3851  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  3852  05F7  082B               	movf	?___flmul+3,w
  3853  05F8  00D4               	movwf	_fround$1236+3
  3854  05F9  082A               	movf	?___flmul+2,w
  3855  05FA  00D3               	movwf	_fround$1236+2
  3856  05FB  0829               	movf	?___flmul+1,w
  3857  05FC  00D2               	movwf	_fround$1236+1
  3858  05FD  0828               	movf	?___flmul,w
  3859  05FE  00D1               	movwf	_fround$1236
  3860                           
  3861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3862  05FF  300A               	movlw	10
  3863  0600  00A0               	movwf	___lwdiv@divisor
  3864  0601  3000               	movlw	0
  3865  0602  00A1               	movwf	___lwdiv@divisor+1
  3866  0603  0855               	movf	fround@prec,w
  3867  0604  00C6               	movwf	??_fround
  3868  0605  01C7               	clrf	??_fround+1
  3869  0606  0846               	movf	??_fround,w
  3870  0607  00F5               	movwf	___lwmod@dividend
  3871  0608  0847               	movf	??_fround+1,w
  3872  0609  00F6               	movwf	___lwmod@dividend+1
  3873  060A  3064               	movlw	100
  3874  060B  00F3               	movwf	___lwmod@divisor
  3875  060C  3000               	movlw	0
  3876  060D  00F4               	movwf	___lwmod@divisor+1
  3877  060E  160A  158A  22C6  120A  118A  	fcall	___lwmod
  3878  0613  0874               	movf	?___lwmod+1,w
  3879  0614  1283               	bcf	3,5	;RP0=0, select bank0
  3880  0615  1303               	bcf	3,6	;RP1=0, select bank0
  3881  0616  00A3               	movwf	___lwdiv@dividend+1
  3882  0617  0873               	movf	?___lwmod,w
  3883  0618  00A2               	movwf	___lwdiv@dividend
  3884  0619  160A  158A  23C4  120A  118A  	fcall	___lwdiv
  3885  061E  1283               	bcf	3,5	;RP0=0, select bank0
  3886  061F  1303               	bcf	3,6	;RP1=0, select bank0
  3887  0620  0820               	movf	?___lwdiv,w
  3888  0621  00C8               	movwf	??_fround+2
  3889  0622  3001               	movlw	1
  3890  0623                     u4225:
  3891  0623  1003               	clrc
  3892  0624  0DC8               	rlf	??_fround+2,f
  3893  0625  3EFF               	addlw	-1
  3894  0626  1D03               	skipz
  3895  0627  2E23               	goto	u4225
  3896  0628  1003               	clrc
  3897  0629  0D48               	rlf	??_fround+2,w
  3898  062A  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3899  062B  0084               	movwf	4
  3900  062C  160A  118A  200A  120A  118A  	fcall	stringdir
  3901  0631  00C9               	movwf	??_fround+3
  3902  0632  160A  118A  200A  120A  118A  	fcall	stringdir
  3903  0637  00CA               	movwf	??_fround+4
  3904  0638  160A  118A  200A  120A  118A  	fcall	stringdir
  3905  063D  00CB               	movwf	??_fround+5
  3906  063E  160A  118A  200A  120A  118A  	fcall	stringdir
  3907  0643  00CC               	movwf	??_fround+6
  3908  0644  084C               	movf	??_fround+6,w
  3909  0645  00AB               	movwf	___flmul@b+3
  3910  0646  084B               	movf	??_fround+5,w
  3911  0647  00AA               	movwf	___flmul@b+2
  3912  0648  084A               	movf	??_fround+4,w
  3913  0649  00A9               	movwf	___flmul@b+1
  3914  064A  0849               	movf	??_fround+3,w
  3915  064B  00A8               	movwf	___flmul@b
  3916  064C  0854               	movf	_fround$1236+3,w
  3917  064D  00AF               	movwf	___flmul@a+3
  3918  064E  0853               	movf	_fround$1236+2,w
  3919  064F  00AE               	movwf	___flmul@a+2
  3920  0650  0852               	movf	_fround$1236+1,w
  3921  0651  00AD               	movwf	___flmul@a+1
  3922  0652  0851               	movf	_fround$1236,w
  3923  0653  00AC               	movwf	___flmul@a
  3924  0654  120A  158A  213C  120A  118A  	fcall	___flmul
  3925  0659  1283               	bcf	3,5	;RP0=0, select bank0
  3926  065A  1303               	bcf	3,6	;RP1=0, select bank0
  3927  065B  082B               	movf	?___flmul+3,w
  3928  065C  00D0               	movwf	_fround$1237+3
  3929  065D  082A               	movf	?___flmul+2,w
  3930  065E  00CF               	movwf	_fround$1237+2
  3931  065F  0829               	movf	?___flmul+1,w
  3932  0660  00CE               	movwf	_fround$1237+1
  3933  0661  0828               	movf	?___flmul,w
  3934  0662  00CD               	movwf	_fround$1237
  3935                           
  3936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3937  0663  300A               	movlw	10
  3938  0664  00F3               	movwf	___lwmod@divisor
  3939  0665  3000               	movlw	0
  3940  0666  00F4               	movwf	___lwmod@divisor+1
  3941  0667  0855               	movf	fround@prec,w
  3942  0668  00C6               	movwf	??_fround
  3943  0669  01C7               	clrf	??_fround+1
  3944  066A  0846               	movf	??_fround,w
  3945  066B  00F5               	movwf	___lwmod@dividend
  3946  066C  0847               	movf	??_fround+1,w
  3947  066D  00F6               	movwf	___lwmod@dividend+1
  3948  066E  160A  158A  22C6  120A  118A  	fcall	___lwmod
  3949  0673  0873               	movf	?___lwmod,w
  3950  0674  1283               	bcf	3,5	;RP0=0, select bank0
  3951  0675  1303               	bcf	3,6	;RP1=0, select bank0
  3952  0676  00C8               	movwf	??_fround+2
  3953  0677  3001               	movlw	1
  3954  0678                     u4235:
  3955  0678  1003               	clrc
  3956  0679  0DC8               	rlf	??_fround+2,f
  3957  067A  3EFF               	addlw	-1
  3958  067B  1D03               	skipz
  3959  067C  2E78               	goto	u4235
  3960  067D  1003               	clrc
  3961  067E  0D48               	rlf	??_fround+2,w
  3962  067F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3963  0680  0084               	movwf	4
  3964  0681  160A  118A  200A  120A  118A  	fcall	stringdir
  3965  0686  00C9               	movwf	??_fround+3
  3966  0687  160A  118A  200A  120A  118A  	fcall	stringdir
  3967  068C  00CA               	movwf	??_fround+4
  3968  068D  160A  118A  200A  120A  118A  	fcall	stringdir
  3969  0692  00CB               	movwf	??_fround+5
  3970  0693  160A  118A  200A  120A  118A  	fcall	stringdir
  3971  0698  00CC               	movwf	??_fround+6
  3972  0699  084C               	movf	??_fround+6,w
  3973  069A  00AB               	movwf	___flmul@b+3
  3974  069B  084B               	movf	??_fround+5,w
  3975  069C  00AA               	movwf	___flmul@b+2
  3976  069D  084A               	movf	??_fround+4,w
  3977  069E  00A9               	movwf	___flmul@b+1
  3978  069F  0849               	movf	??_fround+3,w
  3979  06A0  00A8               	movwf	___flmul@b
  3980  06A1  0850               	movf	_fround$1237+3,w
  3981  06A2  00AF               	movwf	___flmul@a+3
  3982  06A3  084F               	movf	_fround$1237+2,w
  3983  06A4  00AE               	movwf	___flmul@a+2
  3984  06A5  084E               	movf	_fround$1237+1,w
  3985  06A6  00AD               	movwf	___flmul@a+1
  3986  06A7  084D               	movf	_fround$1237,w
  3987  06A8  00AC               	movwf	___flmul@a
  3988  06A9  120A  158A  213C  120A  118A  	fcall	___flmul
  3989  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  3990  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  3991  06B0  082B               	movf	?___flmul+3,w
  3992  06B1  00C5               	movwf	?_fround+3
  3993  06B2  082A               	movf	?___flmul+2,w
  3994  06B3  00C4               	movwf	?_fround+2
  3995  06B4  0829               	movf	?___flmul+1,w
  3996  06B5  00C3               	movwf	?_fround+1
  3997  06B6  0828               	movf	?___flmul,w
  3998  06B7  00C2               	movwf	?_fround
  3999  06B8  2FAD               	goto	l330
  4000  06B9                     l2869:
  4001  06B9  300B               	movlw	11
  4002  06BA  0255               	subwf	fround@prec,w
  4003  06BB  1C03               	skipc
  4004  06BC  2EBE               	goto	u4241
  4005  06BD  2EBF               	goto	u4240
  4006  06BE                     u4241:
  4007  06BE  2F6A               	goto	l2875
  4008  06BF                     u4240:
  4009  06BF                     l2871:
  4010                           
  4011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4012  06BF  303F               	movlw	63
  4013  06C0  00AB               	movwf	___flmul@b+3
  4014  06C1  3000               	movlw	0
  4015  06C2  00AA               	movwf	___flmul@b+2
  4016  06C3  3000               	movlw	0
  4017  06C4  00A9               	movwf	___flmul@b+1
  4018  06C5  3000               	movlw	0
  4019  06C6  00A8               	movwf	___flmul@b
  4020  06C7  300A               	movlw	10
  4021  06C8  00A0               	movwf	___lwdiv@divisor
  4022  06C9  3000               	movlw	0
  4023  06CA  00A1               	movwf	___lwdiv@divisor+1
  4024  06CB  0855               	movf	fround@prec,w
  4025  06CC  00C6               	movwf	??_fround
  4026  06CD  01C7               	clrf	??_fround+1
  4027  06CE  0846               	movf	??_fround,w
  4028  06CF  00A2               	movwf	___lwdiv@dividend
  4029  06D0  0847               	movf	??_fround+1,w
  4030  06D1  00A3               	movwf	___lwdiv@dividend+1
  4031  06D2  160A  158A  23C4  120A  118A  	fcall	___lwdiv
  4032  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  4033  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  4034  06D9  0820               	movf	?___lwdiv,w
  4035  06DA  00C8               	movwf	??_fround+2
  4036  06DB  3001               	movlw	1
  4037  06DC                     u4255:
  4038  06DC  1003               	clrc
  4039  06DD  0DC8               	rlf	??_fround+2,f
  4040  06DE  3EFF               	addlw	-1
  4041  06DF  1D03               	skipz
  4042  06E0  2EDC               	goto	u4255
  4043  06E1  1003               	clrc
  4044  06E2  0D48               	rlf	??_fround+2,w
  4045  06E3  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4046  06E4  0084               	movwf	4
  4047  06E5  160A  118A  200A  120A  118A  	fcall	stringdir
  4048  06EA  00C9               	movwf	??_fround+3
  4049  06EB  160A  118A  200A  120A  118A  	fcall	stringdir
  4050  06F0  00CA               	movwf	??_fround+4
  4051  06F1  160A  118A  200A  120A  118A  	fcall	stringdir
  4052  06F6  00CB               	movwf	??_fround+5
  4053  06F7  160A  118A  200A  120A  118A  	fcall	stringdir
  4054  06FC  00CC               	movwf	??_fround+6
  4055  06FD  084C               	movf	??_fround+6,w
  4056  06FE  00AF               	movwf	___flmul@a+3
  4057  06FF  084B               	movf	??_fround+5,w
  4058  0700  00AE               	movwf	___flmul@a+2
  4059  0701  084A               	movf	??_fround+4,w
  4060  0702  00AD               	movwf	___flmul@a+1
  4061  0703  0849               	movf	??_fround+3,w
  4062  0704  00AC               	movwf	___flmul@a
  4063  0705  120A  158A  213C  120A  118A  	fcall	___flmul
  4064  070A  1283               	bcf	3,5	;RP0=0, select bank0
  4065  070B  1303               	bcf	3,6	;RP1=0, select bank0
  4066  070C  082B               	movf	?___flmul+3,w
  4067  070D  00D4               	movwf	_fround$1236+3
  4068  070E  082A               	movf	?___flmul+2,w
  4069  070F  00D3               	movwf	_fround$1236+2
  4070  0710  0829               	movf	?___flmul+1,w
  4071  0711  00D2               	movwf	_fround$1236+1
  4072  0712  0828               	movf	?___flmul,w
  4073  0713  00D1               	movwf	_fround$1236
  4074                           
  4075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4076  0714  300A               	movlw	10
  4077  0715  00F3               	movwf	___lwmod@divisor
  4078  0716  3000               	movlw	0
  4079  0717  00F4               	movwf	___lwmod@divisor+1
  4080  0718  0855               	movf	fround@prec,w
  4081  0719  00C6               	movwf	??_fround
  4082  071A  01C7               	clrf	??_fround+1
  4083  071B  0846               	movf	??_fround,w
  4084  071C  00F5               	movwf	___lwmod@dividend
  4085  071D  0847               	movf	??_fround+1,w
  4086  071E  00F6               	movwf	___lwmod@dividend+1
  4087  071F  160A  158A  22C6  120A  118A  	fcall	___lwmod
  4088  0724  0873               	movf	?___lwmod,w
  4089  0725  1283               	bcf	3,5	;RP0=0, select bank0
  4090  0726  1303               	bcf	3,6	;RP1=0, select bank0
  4091  0727  00C8               	movwf	??_fround+2
  4092  0728  3001               	movlw	1
  4093  0729                     u4265:
  4094  0729  1003               	clrc
  4095  072A  0DC8               	rlf	??_fround+2,f
  4096  072B  3EFF               	addlw	-1
  4097  072C  1D03               	skipz
  4098  072D  2F29               	goto	u4265
  4099  072E  1003               	clrc
  4100  072F  0D48               	rlf	??_fround+2,w
  4101  0730  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4102  0731  0084               	movwf	4
  4103  0732  160A  118A  200A  120A  118A  	fcall	stringdir
  4104  0737  00C9               	movwf	??_fround+3
  4105  0738  160A  118A  200A  120A  118A  	fcall	stringdir
  4106  073D  00CA               	movwf	??_fround+4
  4107  073E  160A  118A  200A  120A  118A  	fcall	stringdir
  4108  0743  00CB               	movwf	??_fround+5
  4109  0744  160A  118A  200A  120A  118A  	fcall	stringdir
  4110  0749  00CC               	movwf	??_fround+6
  4111  074A  084C               	movf	??_fround+6,w
  4112  074B  00AB               	movwf	___flmul@b+3
  4113  074C  084B               	movf	??_fround+5,w
  4114  074D  00AA               	movwf	___flmul@b+2
  4115  074E  084A               	movf	??_fround+4,w
  4116  074F  00A9               	movwf	___flmul@b+1
  4117  0750  0849               	movf	??_fround+3,w
  4118  0751  00A8               	movwf	___flmul@b
  4119  0752  0854               	movf	_fround$1236+3,w
  4120  0753  00AF               	movwf	___flmul@a+3
  4121  0754  0853               	movf	_fround$1236+2,w
  4122  0755  00AE               	movwf	___flmul@a+2
  4123  0756  0852               	movf	_fround$1236+1,w
  4124  0757  00AD               	movwf	___flmul@a+1
  4125  0758  0851               	movf	_fround$1236,w
  4126  0759  00AC               	movwf	___flmul@a
  4127  075A  120A  158A  213C  120A  118A  	fcall	___flmul
  4128  075F  1283               	bcf	3,5	;RP0=0, select bank0
  4129  0760  1303               	bcf	3,6	;RP1=0, select bank0
  4130  0761  082B               	movf	?___flmul+3,w
  4131  0762  00C5               	movwf	?_fround+3
  4132  0763  082A               	movf	?___flmul+2,w
  4133  0764  00C4               	movwf	?_fround+2
  4134  0765  0829               	movf	?___flmul+1,w
  4135  0766  00C3               	movwf	?_fround+1
  4136  0767  0828               	movf	?___flmul,w
  4137  0768  00C2               	movwf	?_fround
  4138  0769  2FAD               	goto	l330
  4139  076A                     l2875:
  4140                           
  4141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4142  076A  303F               	movlw	63
  4143  076B  00AB               	movwf	___flmul@b+3
  4144  076C  3000               	movlw	0
  4145  076D  00AA               	movwf	___flmul@b+2
  4146  076E  3000               	movlw	0
  4147  076F  00A9               	movwf	___flmul@b+1
  4148  0770  3000               	movlw	0
  4149  0771  00A8               	movwf	___flmul@b
  4150  0772  0855               	movf	fround@prec,w
  4151  0773  00C6               	movwf	??_fround
  4152  0774  3001               	movlw	1
  4153  0775                     u4275:
  4154  0775  1003               	clrc
  4155  0776  0DC6               	rlf	??_fround,f
  4156  0777  3EFF               	addlw	-1
  4157  0778  1D03               	skipz
  4158  0779  2F75               	goto	u4275
  4159  077A  1003               	clrc
  4160  077B  0D46               	rlf	??_fround,w
  4161  077C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4162  077D  0084               	movwf	4
  4163  077E  160A  118A  200A  120A  118A  	fcall	stringdir
  4164  0783  00C7               	movwf	??_fround+1
  4165  0784  160A  118A  200A  120A  118A  	fcall	stringdir
  4166  0789  00C8               	movwf	??_fround+2
  4167  078A  160A  118A  200A  120A  118A  	fcall	stringdir
  4168  078F  00C9               	movwf	??_fround+3
  4169  0790  160A  118A  200A  120A  118A  	fcall	stringdir
  4170  0795  00CA               	movwf	??_fround+4
  4171  0796  084A               	movf	??_fround+4,w
  4172  0797  00AF               	movwf	___flmul@a+3
  4173  0798  0849               	movf	??_fround+3,w
  4174  0799  00AE               	movwf	___flmul@a+2
  4175  079A  0848               	movf	??_fround+2,w
  4176  079B  00AD               	movwf	___flmul@a+1
  4177  079C  0847               	movf	??_fround+1,w
  4178  079D  00AC               	movwf	___flmul@a
  4179  079E  120A  158A  213C  120A  118A  	fcall	___flmul
  4180  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  4181  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  4182  07A5  082B               	movf	?___flmul+3,w
  4183  07A6  00C5               	movwf	?_fround+3
  4184  07A7  082A               	movf	?___flmul+2,w
  4185  07A8  00C4               	movwf	?_fround+2
  4186  07A9  0829               	movf	?___flmul+1,w
  4187  07AA  00C3               	movwf	?_fround+1
  4188  07AB  0828               	movf	?___flmul,w
  4189  07AC  00C2               	movwf	?_fround
  4190  07AD                     l330:
  4191  07AD  0008               	return
  4192  07AE                     __end_of_fround:
  4193                           
  4194                           	psect	text7
  4195  1AC6                     __ptext7:	
  4196 ;; *************** function ___lwmod *****************
  4197 ;; Defined at:
  4198 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  divisor         2    3[COMMON] unsigned int 
  4201 ;;  dividend        2    5[COMMON] unsigned int 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  counter         1    8[COMMON] unsigned char 
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  2    3[COMMON] unsigned int 
  4206 ;; Registers used:
  4207 ;;		wreg, status,2, status,0
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4213 ;;      Params:         4       0       0       0       0
  4214 ;;      Locals:         1       0       0       0       0
  4215 ;;      Temps:          1       0       0       0       0
  4216 ;;      Totals:         6       0       0       0       0
  4217 ;;Total ram usage:        6 bytes
  4218 ;; Hardware stack levels used:    1
  4219 ;; Hardware stack levels required when called:    2
  4220 ;; This function calls:
  4221 ;;		Nothing
  4222 ;; This function is called by:
  4223 ;;		_fround
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           
  4228                           ;psect for function ___lwmod
  4229  1AC6                     ___lwmod:
  4230  1AC6                     l2479:	
  4231                           ;incstack = 0
  4232                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4233                           
  4234  1AC6  0873               	movf	___lwmod@divisor,w
  4235  1AC7  0474               	iorwf	___lwmod@divisor+1,w
  4236  1AC8  1903               	btfsc	3,2
  4237  1AC9  2ACB               	goto	u3301
  4238  1ACA  2ACC               	goto	u3300
  4239  1ACB                     u3301:
  4240  1ACB  2AFB               	goto	l2497
  4241  1ACC                     u3300:
  4242  1ACC                     l2481:
  4243  1ACC  01F8               	clrf	___lwmod@counter
  4244  1ACD  0AF8               	incf	___lwmod@counter,f
  4245  1ACE  2ADA               	goto	l2487
  4246  1ACF                     l2483:
  4247  1ACF  3001               	movlw	1
  4248  1AD0                     u3315:
  4249  1AD0  1003               	clrc
  4250  1AD1  0DF3               	rlf	___lwmod@divisor,f
  4251  1AD2  0DF4               	rlf	___lwmod@divisor+1,f
  4252  1AD3  3EFF               	addlw	-1
  4253  1AD4  1D03               	skipz
  4254  1AD5  2AD0               	goto	u3315
  4255  1AD6                     l2485:
  4256  1AD6  3001               	movlw	1
  4257  1AD7  00F7               	movwf	??___lwmod
  4258  1AD8  0877               	movf	??___lwmod,w
  4259  1AD9  07F8               	addwf	___lwmod@counter,f
  4260  1ADA                     l2487:
  4261  1ADA  1FF4               	btfss	___lwmod@divisor+1,7
  4262  1ADB  2ADD               	goto	u3321
  4263  1ADC  2ADE               	goto	u3320
  4264  1ADD                     u3321:
  4265  1ADD  2ACF               	goto	l2483
  4266  1ADE                     u3320:
  4267  1ADE                     l2489:
  4268  1ADE  0874               	movf	___lwmod@divisor+1,w
  4269  1ADF  0276               	subwf	___lwmod@dividend+1,w
  4270  1AE0  1D03               	skipz
  4271  1AE1  2AE4               	goto	u3335
  4272  1AE2  0873               	movf	___lwmod@divisor,w
  4273  1AE3  0275               	subwf	___lwmod@dividend,w
  4274  1AE4                     u3335:
  4275  1AE4  1C03               	skipc
  4276  1AE5  2AE7               	goto	u3331
  4277  1AE6  2AE8               	goto	u3330
  4278  1AE7                     u3331:
  4279  1AE7  2AEE               	goto	l2493
  4280  1AE8                     u3330:
  4281  1AE8                     l2491:
  4282  1AE8  0873               	movf	___lwmod@divisor,w
  4283  1AE9  02F5               	subwf	___lwmod@dividend,f
  4284  1AEA  0874               	movf	___lwmod@divisor+1,w
  4285  1AEB  1C03               	skipc
  4286  1AEC  03F6               	decf	___lwmod@dividend+1,f
  4287  1AED  02F6               	subwf	___lwmod@dividend+1,f
  4288  1AEE                     l2493:
  4289  1AEE  3001               	movlw	1
  4290  1AEF                     u3345:
  4291  1AEF  1003               	clrc
  4292  1AF0  0CF4               	rrf	___lwmod@divisor+1,f
  4293  1AF1  0CF3               	rrf	___lwmod@divisor,f
  4294  1AF2  3EFF               	addlw	-1
  4295  1AF3  1D03               	skipz
  4296  1AF4  2AEF               	goto	u3345
  4297  1AF5                     l2495:
  4298  1AF5  3001               	movlw	1
  4299  1AF6  02F8               	subwf	___lwmod@counter,f
  4300  1AF7  1D03               	btfss	3,2
  4301  1AF8  2AFA               	goto	u3351
  4302  1AF9  2AFB               	goto	u3350
  4303  1AFA                     u3351:
  4304  1AFA  2ADE               	goto	l2489
  4305  1AFB                     u3350:
  4306  1AFB                     l2497:
  4307  1AFB  0876               	movf	___lwmod@dividend+1,w
  4308  1AFC  00F4               	movwf	?___lwmod+1
  4309  1AFD  0875               	movf	___lwmod@dividend,w
  4310  1AFE  00F3               	movwf	?___lwmod
  4311  1AFF                     l740:
  4312  1AFF  0008               	return
  4313  1B00                     __end_of___lwmod:
  4314                           
  4315                           	psect	text8
  4316  1BC4                     __ptext8:	
  4317 ;; *************** function ___lwdiv *****************
  4318 ;; Defined at:
  4319 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;  divisor         2    0[BANK0 ] unsigned int 
  4322 ;;  dividend        2    2[BANK0 ] unsigned int 
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  quotient        2    4[BANK0 ] unsigned int 
  4325 ;;  counter         1    6[BANK0 ] unsigned char 
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  2    0[BANK0 ] unsigned int 
  4328 ;; Registers used:
  4329 ;;		wreg, status,2, status,0
  4330 ;; Tracked objects:
  4331 ;;		On entry : 0/0
  4332 ;;		On exit  : 0/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4335 ;;      Params:         0       4       0       0       0
  4336 ;;      Locals:         0       3       0       0       0
  4337 ;;      Temps:          1       0       0       0       0
  4338 ;;      Totals:         1       7       0       0       0
  4339 ;;Total ram usage:        8 bytes
  4340 ;; Hardware stack levels used:    1
  4341 ;; Hardware stack levels required when called:    2
  4342 ;; This function calls:
  4343 ;;		Nothing
  4344 ;; This function is called by:
  4345 ;;		_fround
  4346 ;; This function uses a non-reentrant model
  4347 ;;
  4348                           
  4349                           
  4350                           ;psect for function ___lwdiv
  4351  1BC4                     ___lwdiv:
  4352  1BC4                     l2453:	
  4353                           ;incstack = 0
  4354                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4355                           
  4356  1BC4  1283               	bcf	3,5	;RP0=0, select bank0
  4357  1BC5  1303               	bcf	3,6	;RP1=0, select bank0
  4358  1BC6  01A4               	clrf	___lwdiv@quotient
  4359  1BC7  01A5               	clrf	___lwdiv@quotient+1
  4360  1BC8                     l2455:
  4361  1BC8  0820               	movf	___lwdiv@divisor,w
  4362  1BC9  0421               	iorwf	___lwdiv@divisor+1,w
  4363  1BCA  1903               	btfsc	3,2
  4364  1BCB  2BCD               	goto	u3231
  4365  1BCC  2BCE               	goto	u3230
  4366  1BCD                     u3231:
  4367  1BCD  2C05               	goto	l2475
  4368  1BCE                     u3230:
  4369  1BCE                     l2457:
  4370  1BCE  01A6               	clrf	___lwdiv@counter
  4371  1BCF  0AA6               	incf	___lwdiv@counter,f
  4372  1BD0  2BDC               	goto	l2463
  4373  1BD1                     l2459:
  4374  1BD1  3001               	movlw	1
  4375  1BD2                     u3245:
  4376  1BD2  1003               	clrc
  4377  1BD3  0DA0               	rlf	___lwdiv@divisor,f
  4378  1BD4  0DA1               	rlf	___lwdiv@divisor+1,f
  4379  1BD5  3EFF               	addlw	-1
  4380  1BD6  1D03               	skipz
  4381  1BD7  2BD2               	goto	u3245
  4382  1BD8                     l2461:
  4383  1BD8  3001               	movlw	1
  4384  1BD9  00F9               	movwf	??___lwdiv
  4385  1BDA  0879               	movf	??___lwdiv,w
  4386  1BDB  07A6               	addwf	___lwdiv@counter,f
  4387  1BDC                     l2463:
  4388  1BDC  1FA1               	btfss	___lwdiv@divisor+1,7
  4389  1BDD  2BDF               	goto	u3251
  4390  1BDE  2BE0               	goto	u3250
  4391  1BDF                     u3251:
  4392  1BDF  2BD1               	goto	l2459
  4393  1BE0                     u3250:
  4394  1BE0                     l2465:
  4395  1BE0  3001               	movlw	1
  4396  1BE1                     u3265:
  4397  1BE1  1003               	clrc
  4398  1BE2  0DA4               	rlf	___lwdiv@quotient,f
  4399  1BE3  0DA5               	rlf	___lwdiv@quotient+1,f
  4400  1BE4  3EFF               	addlw	-1
  4401  1BE5  1D03               	skipz
  4402  1BE6  2BE1               	goto	u3265
  4403  1BE7  0821               	movf	___lwdiv@divisor+1,w
  4404  1BE8  0223               	subwf	___lwdiv@dividend+1,w
  4405  1BE9  1D03               	skipz
  4406  1BEA  2BED               	goto	u3275
  4407  1BEB  0820               	movf	___lwdiv@divisor,w
  4408  1BEC  0222               	subwf	___lwdiv@dividend,w
  4409  1BED                     u3275:
  4410  1BED  1C03               	skipc
  4411  1BEE  2BF0               	goto	u3271
  4412  1BEF  2BF1               	goto	u3270
  4413  1BF0                     u3271:
  4414  1BF0  2BF8               	goto	l2471
  4415  1BF1                     u3270:
  4416  1BF1                     l2467:
  4417  1BF1  0820               	movf	___lwdiv@divisor,w
  4418  1BF2  02A2               	subwf	___lwdiv@dividend,f
  4419  1BF3  0821               	movf	___lwdiv@divisor+1,w
  4420  1BF4  1C03               	skipc
  4421  1BF5  03A3               	decf	___lwdiv@dividend+1,f
  4422  1BF6  02A3               	subwf	___lwdiv@dividend+1,f
  4423  1BF7                     l2469:
  4424  1BF7  1424               	bsf	___lwdiv@quotient,0
  4425  1BF8                     l2471:
  4426  1BF8  3001               	movlw	1
  4427  1BF9                     u3285:
  4428  1BF9  1003               	clrc
  4429  1BFA  0CA1               	rrf	___lwdiv@divisor+1,f
  4430  1BFB  0CA0               	rrf	___lwdiv@divisor,f
  4431  1BFC  3EFF               	addlw	-1
  4432  1BFD  1D03               	skipz
  4433  1BFE  2BF9               	goto	u3285
  4434  1BFF                     l2473:
  4435  1BFF  3001               	movlw	1
  4436  1C00  02A6               	subwf	___lwdiv@counter,f
  4437  1C01  1D03               	btfss	3,2
  4438  1C02  2C04               	goto	u3291
  4439  1C03  2C05               	goto	u3290
  4440  1C04                     u3291:
  4441  1C04  2BE0               	goto	l2465
  4442  1C05                     u3290:
  4443  1C05                     l2475:
  4444  1C05  0825               	movf	___lwdiv@quotient+1,w
  4445  1C06  00A1               	movwf	?___lwdiv+1
  4446  1C07  0824               	movf	___lwdiv@quotient,w
  4447  1C08  00A0               	movwf	?___lwdiv
  4448  1C09                     l730:
  4449  1C09  0008               	return
  4450  1C0A                     __end_of___lwdiv:
  4451                           
  4452                           	psect	text9
  4453  10F9                     __ptext9:	
  4454 ;; *************** function __tdiv_to_l_ *****************
  4455 ;; Defined at:
  4456 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  f1              4    3[COMMON] float 
  4459 ;;  f2              4    7[COMMON] float 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  quot            4    4[BANK0 ] unsigned long 
  4462 ;;  exp1            1    9[BANK0 ] unsigned char 
  4463 ;;  cntr            1    8[BANK0 ] unsigned char 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  4    3[COMMON] unsigned long 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2, status,0
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4473 ;;      Params:         8       0       0       0       0
  4474 ;;      Locals:         0       6       0       0       0
  4475 ;;      Temps:          0       4       0       0       0
  4476 ;;      Totals:         8      10       0       0       0
  4477 ;;Total ram usage:       18 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; Hardware stack levels required when called:    2
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_sprintf
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           
  4488                           ;psect for function __tdiv_to_l_
  4489  10F9                     __tdiv_to_l_:
  4490  10F9                     l2931:	
  4491                           ;incstack = 0
  4492                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4493                           
  4494  10F9  0873               	movf	__tdiv_to_l_@f1,w
  4495  10FA  1283               	bcf	3,5	;RP0=0, select bank0
  4496  10FB  1303               	bcf	3,6	;RP1=0, select bank0
  4497  10FC  00A0               	movwf	??__tdiv_to_l_
  4498  10FD  0874               	movf	__tdiv_to_l_@f1+1,w
  4499  10FE  00A1               	movwf	??__tdiv_to_l_+1
  4500  10FF  0875               	movf	__tdiv_to_l_@f1+2,w
  4501  1100  00A2               	movwf	??__tdiv_to_l_+2
  4502  1101  1003               	clrc
  4503  1102  0D21               	rlf	??__tdiv_to_l_+1,w
  4504  1103  0D22               	rlf	??__tdiv_to_l_+2,w
  4505  1104  00A3               	movwf	??__tdiv_to_l_+3
  4506  1105  0823               	movf	??__tdiv_to_l_+3,w
  4507  1106  00A9               	movwf	__tdiv_to_l_@exp1
  4508  1107  0829               	movf	__tdiv_to_l_@exp1,w
  4509  1108  1D03               	btfss	3,2
  4510  1109  290B               	goto	u4471
  4511  110A  290C               	goto	u4470
  4512  110B                     u4471:
  4513  110B  2915               	goto	l2937
  4514  110C                     u4470:
  4515  110C                     l2933:
  4516  110C  3000               	movlw	0
  4517  110D  00F6               	movwf	?__tdiv_to_l_+3
  4518  110E  3000               	movlw	0
  4519  110F  00F5               	movwf	?__tdiv_to_l_+2
  4520  1110  3000               	movlw	0
  4521  1111  00F4               	movwf	?__tdiv_to_l_+1
  4522  1112  3000               	movlw	0
  4523  1113  00F3               	movwf	?__tdiv_to_l_
  4524  1114  29B5               	goto	l641
  4525  1115                     l2937:
  4526  1115  0877               	movf	__tdiv_to_l_@f2,w
  4527  1116  00A0               	movwf	??__tdiv_to_l_
  4528  1117  0878               	movf	__tdiv_to_l_@f2+1,w
  4529  1118  00A1               	movwf	??__tdiv_to_l_+1
  4530  1119  0879               	movf	__tdiv_to_l_@f2+2,w
  4531  111A  00A2               	movwf	??__tdiv_to_l_+2
  4532  111B  1003               	clrc
  4533  111C  0D21               	rlf	??__tdiv_to_l_+1,w
  4534  111D  0D22               	rlf	??__tdiv_to_l_+2,w
  4535  111E  00A3               	movwf	??__tdiv_to_l_+3
  4536  111F  0823               	movf	??__tdiv_to_l_+3,w
  4537  1120  00A8               	movwf	__tdiv_to_l_@cntr
  4538  1121  0828               	movf	__tdiv_to_l_@cntr,w
  4539  1122  1D03               	btfss	3,2
  4540  1123  2925               	goto	u4481
  4541  1124  2926               	goto	u4480
  4542  1125                     u4481:
  4543  1125  2927               	goto	l642
  4544  1126                     u4480:
  4545  1126  290C               	goto	l2933
  4546  1127                     l642:
  4547  1127  17F4               	bsf	__tdiv_to_l_@f1+1,7
  4548  1128                     l2943:
  4549  1128  30FF               	movlw	255
  4550  1129  05F3               	andwf	__tdiv_to_l_@f1,f
  4551  112A  30FF               	movlw	255
  4552  112B  05F4               	andwf	__tdiv_to_l_@f1+1,f
  4553  112C  3000               	movlw	0
  4554  112D  05F5               	andwf	__tdiv_to_l_@f1+2,f
  4555  112E                     l2945:
  4556  112E  17F8               	bsf	__tdiv_to_l_@f2+1,7
  4557  112F  30FF               	movlw	255
  4558  1130  05F7               	andwf	__tdiv_to_l_@f2,f
  4559  1131  30FF               	movlw	255
  4560  1132  05F8               	andwf	__tdiv_to_l_@f2+1,f
  4561  1133  3000               	movlw	0
  4562  1134  05F9               	andwf	__tdiv_to_l_@f2+2,f
  4563  1135  3000               	movlw	0
  4564  1136  00A7               	movwf	__tdiv_to_l_@quot+3
  4565  1137  3000               	movlw	0
  4566  1138  00A6               	movwf	__tdiv_to_l_@quot+2
  4567  1139  3000               	movlw	0
  4568  113A  00A5               	movwf	__tdiv_to_l_@quot+1
  4569  113B  3000               	movlw	0
  4570  113C  00A4               	movwf	__tdiv_to_l_@quot
  4571  113D                     l2947:
  4572  113D  307F               	movlw	127
  4573  113E  02A9               	subwf	__tdiv_to_l_@exp1,f
  4574  113F                     l2949:
  4575  113F  3098               	movlw	152
  4576  1140  0728               	addwf	__tdiv_to_l_@cntr,w
  4577  1141  00A0               	movwf	??__tdiv_to_l_
  4578  1142  0820               	movf	??__tdiv_to_l_,w
  4579  1143  02A9               	subwf	__tdiv_to_l_@exp1,f
  4580  1144  3018               	movlw	24
  4581  1145  00A0               	movwf	??__tdiv_to_l_
  4582  1146  0820               	movf	??__tdiv_to_l_,w
  4583  1147  00A8               	movwf	__tdiv_to_l_@cntr
  4584  1148                     l2951:
  4585  1148  3001               	movlw	1
  4586  1149  00A0               	movwf	??__tdiv_to_l_
  4587  114A                     u4495:
  4588  114A  1003               	clrc
  4589  114B  0DA4               	rlf	__tdiv_to_l_@quot,f
  4590  114C  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4591  114D  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  4592  114E  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  4593  114F  0BA0               	decfsz	??__tdiv_to_l_,f
  4594  1150  294A               	goto	u4495
  4595  1151                     l2953:
  4596  1151  0879               	movf	__tdiv_to_l_@f2+2,w
  4597  1152  0275               	subwf	__tdiv_to_l_@f1+2,w
  4598  1153  1D03               	skipz
  4599  1154  295B               	goto	u4505
  4600  1155  0878               	movf	__tdiv_to_l_@f2+1,w
  4601  1156  0274               	subwf	__tdiv_to_l_@f1+1,w
  4602  1157  1D03               	skipz
  4603  1158  295B               	goto	u4505
  4604  1159  0877               	movf	__tdiv_to_l_@f2,w
  4605  115A  0273               	subwf	__tdiv_to_l_@f1,w
  4606  115B                     u4505:
  4607  115B  1C03               	skipc
  4608  115C  295E               	goto	u4501
  4609  115D  295F               	goto	u4500
  4610  115E                     u4501:
  4611  115E  296A               	goto	l2959
  4612  115F                     u4500:
  4613  115F                     l2955:
  4614  115F  0877               	movf	__tdiv_to_l_@f2,w
  4615  1160  02F3               	subwf	__tdiv_to_l_@f1,f
  4616  1161  0878               	movf	__tdiv_to_l_@f2+1,w
  4617  1162  1C03               	skipc
  4618  1163  0F78               	incfsz	__tdiv_to_l_@f2+1,w
  4619  1164  02F4               	subwf	__tdiv_to_l_@f1+1,f
  4620  1165  0879               	movf	__tdiv_to_l_@f2+2,w
  4621  1166  1C03               	skipc
  4622  1167  0A79               	incf	__tdiv_to_l_@f2+2,w
  4623  1168  02F5               	subwf	__tdiv_to_l_@f1+2,f
  4624  1169                     l2957:
  4625  1169  1424               	bsf	__tdiv_to_l_@quot,0
  4626  116A                     l2959:
  4627  116A  3001               	movlw	1
  4628  116B                     u4515:
  4629  116B  1003               	clrc
  4630  116C  0DF3               	rlf	__tdiv_to_l_@f1,f
  4631  116D  0DF4               	rlf	__tdiv_to_l_@f1+1,f
  4632  116E  0DF5               	rlf	__tdiv_to_l_@f1+2,f
  4633  116F  3EFF               	addlw	-1
  4634  1170  1D03               	skipz
  4635  1171  296B               	goto	u4515
  4636  1172                     l2961:
  4637  1172  3001               	movlw	1
  4638  1173  02A8               	subwf	__tdiv_to_l_@cntr,f
  4639  1174  1D03               	btfss	3,2
  4640  1175  2977               	goto	u4521
  4641  1176  2978               	goto	u4520
  4642  1177                     u4521:
  4643  1177  2948               	goto	l2951
  4644  1178                     u4520:
  4645  1178                     l645:
  4646  1178  1FA9               	btfss	__tdiv_to_l_@exp1,7
  4647  1179  297B               	goto	u4531
  4648  117A  297C               	goto	u4530
  4649  117B                     u4531:
  4650  117B  2996               	goto	l2971
  4651  117C                     u4530:
  4652  117C                     l2963:
  4653  117C  0829               	movf	__tdiv_to_l_@exp1,w
  4654  117D  3A80               	xorlw	128
  4655  117E  3E97               	addlw	151
  4656  117F  1803               	skipnc
  4657  1180  2982               	goto	u4541
  4658  1181  2983               	goto	u4540
  4659  1182                     u4541:
  4660  1182  2984               	goto	l2969
  4661  1183                     u4540:
  4662  1183  290C               	goto	l2933
  4663  1184                     l2969:
  4664  1184  3001               	movlw	1
  4665  1185                     u4555:
  4666  1185  1003               	clrc
  4667  1186  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  4668  1187  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  4669  1188  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  4670  1189  0CA4               	rrf	__tdiv_to_l_@quot,f
  4671  118A  3EFF               	addlw	-1
  4672  118B  1D03               	skipz
  4673  118C  2985               	goto	u4555
  4674  118D  3001               	movlw	1
  4675  118E  00A0               	movwf	??__tdiv_to_l_
  4676  118F  0820               	movf	??__tdiv_to_l_,w
  4677  1190  07A9               	addwf	__tdiv_to_l_@exp1,f
  4678  1191  1D03               	btfss	3,2
  4679  1192  2994               	goto	u4561
  4680  1193  2995               	goto	u4560
  4681  1194                     u4561:
  4682  1194  2984               	goto	l2969
  4683  1195                     u4560:
  4684  1195  29AD               	goto	l2979
  4685  1196                     l2971:
  4686  1196  3018               	movlw	24
  4687  1197  0229               	subwf	__tdiv_to_l_@exp1,w
  4688  1198  1C03               	skipc
  4689  1199  299B               	goto	u4571
  4690  119A  299C               	goto	u4570
  4691  119B                     u4571:
  4692  119B  29A8               	goto	l652
  4693  119C                     u4570:
  4694  119C  290C               	goto	l2933
  4695  119D                     l2977:
  4696  119D  3001               	movlw	1
  4697  119E  00A0               	movwf	??__tdiv_to_l_
  4698  119F                     u4585:
  4699  119F  1003               	clrc
  4700  11A0  0DA4               	rlf	__tdiv_to_l_@quot,f
  4701  11A1  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4702  11A2  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  4703  11A3  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  4704  11A4  0BA0               	decfsz	??__tdiv_to_l_,f
  4705  11A5  299F               	goto	u4585
  4706  11A6  3001               	movlw	1
  4707  11A7  02A9               	subwf	__tdiv_to_l_@exp1,f
  4708  11A8                     l652:
  4709  11A8  0829               	movf	__tdiv_to_l_@exp1,w
  4710  11A9  1D03               	btfss	3,2
  4711  11AA  29AC               	goto	u4591
  4712  11AB  29AD               	goto	u4590
  4713  11AC                     u4591:
  4714  11AC  299D               	goto	l2977
  4715  11AD                     u4590:
  4716  11AD                     l2979:
  4717  11AD  0827               	movf	__tdiv_to_l_@quot+3,w
  4718  11AE  00F6               	movwf	?__tdiv_to_l_+3
  4719  11AF  0826               	movf	__tdiv_to_l_@quot+2,w
  4720  11B0  00F5               	movwf	?__tdiv_to_l_+2
  4721  11B1  0825               	movf	__tdiv_to_l_@quot+1,w
  4722  11B2  00F4               	movwf	?__tdiv_to_l_+1
  4723  11B3  0824               	movf	__tdiv_to_l_@quot,w
  4724  11B4  00F3               	movwf	?__tdiv_to_l_
  4725  11B5                     l641:
  4726  11B5  0008               	return
  4727  11B6                     __end_of__tdiv_to_l_:
  4728                           
  4729                           	psect	text10
  4730  11B6                     __ptext10:	
  4731 ;; *************** function __div_to_l_ *****************
  4732 ;; Defined at:
  4733 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  f1              4    3[COMMON] unsigned long 
  4736 ;;  f2              4    7[COMMON] unsigned long 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  quot            4    1[BANK0 ] unsigned long 
  4739 ;;  exp1            1    6[BANK0 ] unsigned char 
  4740 ;;  cntr            1    5[BANK0 ] unsigned char 
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  4    3[COMMON] unsigned long 
  4743 ;; Registers used:
  4744 ;;		wreg, status,2, status,0
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4750 ;;      Params:         8       0       0       0       0
  4751 ;;      Locals:         0       6       0       0       0
  4752 ;;      Temps:          0       1       0       0       0
  4753 ;;      Totals:         8       7       0       0       0
  4754 ;;Total ram usage:       15 bytes
  4755 ;; Hardware stack levels used:    1
  4756 ;; Hardware stack levels required when called:    2
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_sprintf
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           
  4765                           ;psect for function __div_to_l_
  4766  11B6                     __div_to_l_:
  4767  11B6                     l2983:	
  4768                           ;incstack = 0
  4769                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  4770                           
  4771  11B6  1003               	clrc
  4772  11B7  0D75               	rlf	__div_to_l_@f1+2,w
  4773  11B8  0D76               	rlf	__div_to_l_@f1+3,w
  4774  11B9  1283               	bcf	3,5	;RP0=0, select bank0
  4775  11BA  1303               	bcf	3,6	;RP1=0, select bank0
  4776  11BB  00A0               	movwf	??__div_to_l_
  4777  11BC  0820               	movf	??__div_to_l_,w
  4778  11BD  00A6               	movwf	__div_to_l_@exp1
  4779  11BE  0826               	movf	__div_to_l_@exp1,w
  4780  11BF  1D03               	btfss	3,2
  4781  11C0  29C2               	goto	u4601
  4782  11C1  29C3               	goto	u4600
  4783  11C2                     u4601:
  4784  11C2  29CC               	goto	l2989
  4785  11C3                     u4600:
  4786  11C3                     l2985:
  4787  11C3  3000               	movlw	0
  4788  11C4  00F6               	movwf	?__div_to_l_+3
  4789  11C5  3000               	movlw	0
  4790  11C6  00F5               	movwf	?__div_to_l_+2
  4791  11C7  3000               	movlw	0
  4792  11C8  00F4               	movwf	?__div_to_l_+1
  4793  11C9  3000               	movlw	0
  4794  11CA  00F3               	movwf	?__div_to_l_
  4795  11CB  2A73               	goto	l594
  4796  11CC                     l2989:
  4797  11CC  1003               	clrc
  4798  11CD  0D79               	rlf	__div_to_l_@f2+2,w
  4799  11CE  0D7A               	rlf	__div_to_l_@f2+3,w
  4800  11CF  00A0               	movwf	??__div_to_l_
  4801  11D0  0820               	movf	??__div_to_l_,w
  4802  11D1  00A5               	movwf	__div_to_l_@cntr
  4803  11D2  0825               	movf	__div_to_l_@cntr,w
  4804  11D3  1D03               	btfss	3,2
  4805  11D4  29D6               	goto	u4611
  4806  11D5  29D7               	goto	u4610
  4807  11D6                     u4611:
  4808  11D6  29D8               	goto	l595
  4809  11D7                     u4610:
  4810  11D7  29C3               	goto	l2985
  4811  11D8                     l595:
  4812  11D8  17F5               	bsf	__div_to_l_@f1+2,7
  4813  11D9                     l2995:
  4814  11D9  30FF               	movlw	255
  4815  11DA  05F3               	andwf	__div_to_l_@f1,f
  4816  11DB  30FF               	movlw	255
  4817  11DC  05F4               	andwf	__div_to_l_@f1+1,f
  4818  11DD  30FF               	movlw	255
  4819  11DE  05F5               	andwf	__div_to_l_@f1+2,f
  4820  11DF  3000               	movlw	0
  4821  11E0  05F6               	andwf	__div_to_l_@f1+3,f
  4822  11E1                     l2997:
  4823  11E1  17F9               	bsf	__div_to_l_@f2+2,7
  4824  11E2  30FF               	movlw	255
  4825  11E3  05F7               	andwf	__div_to_l_@f2,f
  4826  11E4  30FF               	movlw	255
  4827  11E5  05F8               	andwf	__div_to_l_@f2+1,f
  4828  11E6  30FF               	movlw	255
  4829  11E7  05F9               	andwf	__div_to_l_@f2+2,f
  4830  11E8  3000               	movlw	0
  4831  11E9  05FA               	andwf	__div_to_l_@f2+3,f
  4832  11EA  3000               	movlw	0
  4833  11EB  00A4               	movwf	__div_to_l_@quot+3
  4834  11EC  3000               	movlw	0
  4835  11ED  00A3               	movwf	__div_to_l_@quot+2
  4836  11EE  3000               	movlw	0
  4837  11EF  00A2               	movwf	__div_to_l_@quot+1
  4838  11F0  3000               	movlw	0
  4839  11F1  00A1               	movwf	__div_to_l_@quot
  4840  11F2                     l2999:
  4841  11F2  307F               	movlw	127
  4842  11F3  02A6               	subwf	__div_to_l_@exp1,f
  4843  11F4                     l3001:
  4844  11F4  30A0               	movlw	160
  4845  11F5  0725               	addwf	__div_to_l_@cntr,w
  4846  11F6  00A0               	movwf	??__div_to_l_
  4847  11F7  0820               	movf	??__div_to_l_,w
  4848  11F8  02A6               	subwf	__div_to_l_@exp1,f
  4849  11F9  3020               	movlw	32
  4850  11FA  00A0               	movwf	??__div_to_l_
  4851  11FB  0820               	movf	??__div_to_l_,w
  4852  11FC  00A5               	movwf	__div_to_l_@cntr
  4853  11FD                     l3003:
  4854  11FD  3001               	movlw	1
  4855  11FE  00A0               	movwf	??__div_to_l_
  4856  11FF                     u4625:
  4857  11FF  1003               	clrc
  4858  1200  0DA1               	rlf	__div_to_l_@quot,f
  4859  1201  0DA2               	rlf	__div_to_l_@quot+1,f
  4860  1202  0DA3               	rlf	__div_to_l_@quot+2,f
  4861  1203  0DA4               	rlf	__div_to_l_@quot+3,f
  4862  1204  0BA0               	decfsz	??__div_to_l_,f
  4863  1205  29FF               	goto	u4625
  4864  1206                     l3005:
  4865  1206  087A               	movf	__div_to_l_@f2+3,w
  4866  1207  0276               	subwf	__div_to_l_@f1+3,w
  4867  1208  1D03               	skipz
  4868  1209  2A14               	goto	u4635
  4869  120A  0879               	movf	__div_to_l_@f2+2,w
  4870  120B  0275               	subwf	__div_to_l_@f1+2,w
  4871  120C  1D03               	skipz
  4872  120D  2A14               	goto	u4635
  4873  120E  0878               	movf	__div_to_l_@f2+1,w
  4874  120F  0274               	subwf	__div_to_l_@f1+1,w
  4875  1210  1D03               	skipz
  4876  1211  2A14               	goto	u4635
  4877  1212  0877               	movf	__div_to_l_@f2,w
  4878  1213  0273               	subwf	__div_to_l_@f1,w
  4879  1214                     u4635:
  4880  1214  1C03               	skipc
  4881  1215  2A17               	goto	u4631
  4882  1216  2A18               	goto	u4630
  4883  1217                     u4631:
  4884  1217  2A27               	goto	l3011
  4885  1218                     u4630:
  4886  1218                     l3007:
  4887  1218  0877               	movf	__div_to_l_@f2,w
  4888  1219  02F3               	subwf	__div_to_l_@f1,f
  4889  121A  0878               	movf	__div_to_l_@f2+1,w
  4890  121B  1C03               	skipc
  4891  121C  0F78               	incfsz	__div_to_l_@f2+1,w
  4892  121D  02F4               	subwf	__div_to_l_@f1+1,f
  4893  121E  0879               	movf	__div_to_l_@f2+2,w
  4894  121F  1C03               	skipc
  4895  1220  0F79               	incfsz	__div_to_l_@f2+2,w
  4896  1221  02F5               	subwf	__div_to_l_@f1+2,f
  4897  1222  087A               	movf	__div_to_l_@f2+3,w
  4898  1223  1C03               	skipc
  4899  1224  0F7A               	incfsz	__div_to_l_@f2+3,w
  4900  1225  02F6               	subwf	__div_to_l_@f1+3,f
  4901  1226                     l3009:
  4902  1226  1421               	bsf	__div_to_l_@quot,0
  4903  1227                     l3011:
  4904  1227  3001               	movlw	1
  4905  1228  00A0               	movwf	??__div_to_l_
  4906  1229                     u4645:
  4907  1229  1003               	clrc
  4908  122A  0DF3               	rlf	__div_to_l_@f1,f
  4909  122B  0DF4               	rlf	__div_to_l_@f1+1,f
  4910  122C  0DF5               	rlf	__div_to_l_@f1+2,f
  4911  122D  0DF6               	rlf	__div_to_l_@f1+3,f
  4912  122E  0BA0               	decfsz	??__div_to_l_,f
  4913  122F  2A29               	goto	u4645
  4914  1230                     l3013:
  4915  1230  3001               	movlw	1
  4916  1231  02A5               	subwf	__div_to_l_@cntr,f
  4917  1232  1D03               	btfss	3,2
  4918  1233  2A35               	goto	u4651
  4919  1234  2A36               	goto	u4650
  4920  1235                     u4651:
  4921  1235  29FD               	goto	l3003
  4922  1236                     u4650:
  4923  1236                     l598:
  4924  1236  1FA6               	btfss	__div_to_l_@exp1,7
  4925  1237  2A39               	goto	u4661
  4926  1238  2A3A               	goto	u4660
  4927  1239                     u4661:
  4928  1239  2A54               	goto	l3023
  4929  123A                     u4660:
  4930  123A                     l3015:
  4931  123A  0826               	movf	__div_to_l_@exp1,w
  4932  123B  3A80               	xorlw	128
  4933  123C  3E9F               	addlw	159
  4934  123D  1803               	skipnc
  4935  123E  2A40               	goto	u4671
  4936  123F  2A41               	goto	u4670
  4937  1240                     u4671:
  4938  1240  2A42               	goto	l3021
  4939  1241                     u4670:
  4940  1241  29C3               	goto	l2985
  4941  1242                     l3021:
  4942  1242  3001               	movlw	1
  4943  1243                     u4685:
  4944  1243  1003               	clrc
  4945  1244  0CA4               	rrf	__div_to_l_@quot+3,f
  4946  1245  0CA3               	rrf	__div_to_l_@quot+2,f
  4947  1246  0CA2               	rrf	__div_to_l_@quot+1,f
  4948  1247  0CA1               	rrf	__div_to_l_@quot,f
  4949  1248  3EFF               	addlw	-1
  4950  1249  1D03               	skipz
  4951  124A  2A43               	goto	u4685
  4952  124B  3001               	movlw	1
  4953  124C  00A0               	movwf	??__div_to_l_
  4954  124D  0820               	movf	??__div_to_l_,w
  4955  124E  07A6               	addwf	__div_to_l_@exp1,f
  4956  124F  1D03               	btfss	3,2
  4957  1250  2A52               	goto	u4691
  4958  1251  2A53               	goto	u4690
  4959  1252                     u4691:
  4960  1252  2A42               	goto	l3021
  4961  1253                     u4690:
  4962  1253  2A6B               	goto	l3031
  4963  1254                     l3023:
  4964  1254  3020               	movlw	32
  4965  1255  0226               	subwf	__div_to_l_@exp1,w
  4966  1256  1C03               	skipc
  4967  1257  2A59               	goto	u4701
  4968  1258  2A5A               	goto	u4700
  4969  1259                     u4701:
  4970  1259  2A66               	goto	l605
  4971  125A                     u4700:
  4972  125A  29C3               	goto	l2985
  4973  125B                     l3029:
  4974  125B  3001               	movlw	1
  4975  125C  00A0               	movwf	??__div_to_l_
  4976  125D                     u4715:
  4977  125D  1003               	clrc
  4978  125E  0DA1               	rlf	__div_to_l_@quot,f
  4979  125F  0DA2               	rlf	__div_to_l_@quot+1,f
  4980  1260  0DA3               	rlf	__div_to_l_@quot+2,f
  4981  1261  0DA4               	rlf	__div_to_l_@quot+3,f
  4982  1262  0BA0               	decfsz	??__div_to_l_,f
  4983  1263  2A5D               	goto	u4715
  4984  1264  3001               	movlw	1
  4985  1265  02A6               	subwf	__div_to_l_@exp1,f
  4986  1266                     l605:
  4987  1266  0826               	movf	__div_to_l_@exp1,w
  4988  1267  1D03               	btfss	3,2
  4989  1268  2A6A               	goto	u4721
  4990  1269  2A6B               	goto	u4720
  4991  126A                     u4721:
  4992  126A  2A5B               	goto	l3029
  4993  126B                     u4720:
  4994  126B                     l3031:
  4995  126B  0824               	movf	__div_to_l_@quot+3,w
  4996  126C  00F6               	movwf	?__div_to_l_+3
  4997  126D  0823               	movf	__div_to_l_@quot+2,w
  4998  126E  00F5               	movwf	?__div_to_l_+2
  4999  126F  0822               	movf	__div_to_l_@quot+1,w
  5000  1270  00F4               	movwf	?__div_to_l_+1
  5001  1271  0821               	movf	__div_to_l_@quot,w
  5002  1272  00F3               	movwf	?__div_to_l_
  5003  1273                     l594:
  5004  1273  0008               	return
  5005  1274                     __end_of__div_to_l_:
  5006                           
  5007                           	psect	text11
  5008  10D4                     __ptext11:	
  5009 ;; *************** function ___wmul *****************
  5010 ;; Defined at:
  5011 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  multiplier      2    3[COMMON] unsigned int 
  5014 ;;  multiplicand    2    5[COMMON] unsigned int 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  product         2    7[COMMON] unsigned int 
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  2    3[COMMON] unsigned int 
  5019 ;; Registers used:
  5020 ;;		wreg, status,2, status,0
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5026 ;;      Params:         4       0       0       0       0
  5027 ;;      Locals:         2       0       0       0       0
  5028 ;;      Temps:          0       0       0       0       0
  5029 ;;      Totals:         6       0       0       0       0
  5030 ;;Total ram usage:        6 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    2
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		_sprintf
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           
  5041                           ;psect for function ___wmul
  5042  10D4                     ___wmul:
  5043  10D4                     l3035:	
  5044                           ;incstack = 0
  5045                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5046                           
  5047  10D4  01F7               	clrf	___wmul@product
  5048  10D5  01F8               	clrf	___wmul@product+1
  5049  10D6                     l3037:
  5050  10D6  1C73               	btfss	___wmul@multiplier,0
  5051  10D7  28D9               	goto	u4731
  5052  10D8  28DA               	goto	u4730
  5053  10D9                     u4731:
  5054  10D9  28E0               	goto	l424
  5055  10DA                     u4730:
  5056  10DA                     l3039:
  5057  10DA  0875               	movf	___wmul@multiplicand,w
  5058  10DB  07F7               	addwf	___wmul@product,f
  5059  10DC  1803               	skipnc
  5060  10DD  0AF8               	incf	___wmul@product+1,f
  5061  10DE  0876               	movf	___wmul@multiplicand+1,w
  5062  10DF  07F8               	addwf	___wmul@product+1,f
  5063  10E0                     l424:
  5064  10E0  3001               	movlw	1
  5065  10E1                     u4745:
  5066  10E1  1003               	clrc
  5067  10E2  0DF5               	rlf	___wmul@multiplicand,f
  5068  10E3  0DF6               	rlf	___wmul@multiplicand+1,f
  5069  10E4  3EFF               	addlw	-1
  5070  10E5  1D03               	skipz
  5071  10E6  28E1               	goto	u4745
  5072  10E7                     l3041:
  5073  10E7  3001               	movlw	1
  5074  10E8                     u4755:
  5075  10E8  1003               	clrc
  5076  10E9  0CF4               	rrf	___wmul@multiplier+1,f
  5077  10EA  0CF3               	rrf	___wmul@multiplier,f
  5078  10EB  3EFF               	addlw	-1
  5079  10EC  1D03               	skipz
  5080  10ED  28E8               	goto	u4755
  5081  10EE                     l3043:
  5082  10EE  0873               	movf	___wmul@multiplier,w
  5083  10EF  0474               	iorwf	___wmul@multiplier+1,w
  5084  10F0  1D03               	btfss	3,2
  5085  10F1  28F3               	goto	u4761
  5086  10F2  28F4               	goto	u4760
  5087  10F3                     u4761:
  5088  10F3  28D6               	goto	l3037
  5089  10F4                     u4760:
  5090  10F4                     l3045:
  5091  10F4  0878               	movf	___wmul@product+1,w
  5092  10F5  00F4               	movwf	?___wmul+1
  5093  10F6  0877               	movf	___wmul@product,w
  5094  10F7  00F3               	movwf	?___wmul
  5095  10F8                     l426:
  5096  10F8  0008               	return
  5097  10F9                     __end_of___wmul:
  5098                           
  5099                           	psect	text12
  5100  1CA4                     __ptext12:	
  5101 ;; *************** function ___llmod *****************
  5102 ;; Defined at:
  5103 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  divisor         4    3[COMMON] unsigned long 
  5106 ;;  dividend        4    7[COMMON] unsigned long 
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  counter         1    1[BANK0 ] unsigned char 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  4    3[COMMON] unsigned long 
  5111 ;; Registers used:
  5112 ;;		wreg, status,2, status,0
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5118 ;;      Params:         8       0       0       0       0
  5119 ;;      Locals:         0       1       0       0       0
  5120 ;;      Temps:          0       1       0       0       0
  5121 ;;      Totals:         8       2       0       0       0
  5122 ;;Total ram usage:       10 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    2
  5125 ;; This function calls:
  5126 ;;		Nothing
  5127 ;; This function is called by:
  5128 ;;		_sprintf
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           
  5133                           ;psect for function ___llmod
  5134  1CA4                     ___llmod:
  5135  1CA4                     l3149:	
  5136                           ;incstack = 0
  5137                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5138                           
  5139  1CA4  0876               	movf	___llmod@divisor+3,w
  5140  1CA5  0475               	iorwf	___llmod@divisor+2,w
  5141  1CA6  0474               	iorwf	___llmod@divisor+1,w
  5142  1CA7  0473               	iorwf	___llmod@divisor,w
  5143  1CA8  1903               	skipnz
  5144  1CA9  2CAB               	goto	u5051
  5145  1CAA  2CAC               	goto	u5050
  5146  1CAB                     u5051:
  5147  1CAB  2CF1               	goto	l3165
  5148  1CAC                     u5050:
  5149  1CAC                     l3151:
  5150  1CAC  1283               	bcf	3,5	;RP0=0, select bank0
  5151  1CAD  1303               	bcf	3,6	;RP1=0, select bank0
  5152  1CAE  01A1               	clrf	___llmod@counter
  5153  1CAF  0AA1               	incf	___llmod@counter,f
  5154  1CB0  2CBE               	goto	l3155
  5155  1CB1                     l3153:
  5156  1CB1  3001               	movlw	1
  5157  1CB2  00A0               	movwf	??___llmod
  5158  1CB3                     u5065:
  5159  1CB3  1003               	clrc
  5160  1CB4  0DF3               	rlf	___llmod@divisor,f
  5161  1CB5  0DF4               	rlf	___llmod@divisor+1,f
  5162  1CB6  0DF5               	rlf	___llmod@divisor+2,f
  5163  1CB7  0DF6               	rlf	___llmod@divisor+3,f
  5164  1CB8  0BA0               	decfsz	??___llmod,f
  5165  1CB9  2CB3               	goto	u5065
  5166  1CBA  3001               	movlw	1
  5167  1CBB  00A0               	movwf	??___llmod
  5168  1CBC  0820               	movf	??___llmod,w
  5169  1CBD  07A1               	addwf	___llmod@counter,f
  5170  1CBE                     l3155:
  5171  1CBE  1FF6               	btfss	___llmod@divisor+3,7
  5172  1CBF  2CC1               	goto	u5071
  5173  1CC0  2CC2               	goto	u5070
  5174  1CC1                     u5071:
  5175  1CC1  2CB1               	goto	l3153
  5176  1CC2                     u5070:
  5177  1CC2                     l3157:
  5178  1CC2  0876               	movf	___llmod@divisor+3,w
  5179  1CC3  027A               	subwf	___llmod@dividend+3,w
  5180  1CC4  1D03               	skipz
  5181  1CC5  2CD0               	goto	u5085
  5182  1CC6  0875               	movf	___llmod@divisor+2,w
  5183  1CC7  0279               	subwf	___llmod@dividend+2,w
  5184  1CC8  1D03               	skipz
  5185  1CC9  2CD0               	goto	u5085
  5186  1CCA  0874               	movf	___llmod@divisor+1,w
  5187  1CCB  0278               	subwf	___llmod@dividend+1,w
  5188  1CCC  1D03               	skipz
  5189  1CCD  2CD0               	goto	u5085
  5190  1CCE  0873               	movf	___llmod@divisor,w
  5191  1CCF  0277               	subwf	___llmod@dividend,w
  5192  1CD0                     u5085:
  5193  1CD0  1C03               	skipc
  5194  1CD1  2CD3               	goto	u5081
  5195  1CD2  2CD4               	goto	u5080
  5196  1CD3                     u5081:
  5197  1CD3  2CE2               	goto	l3161
  5198  1CD4                     u5080:
  5199  1CD4                     l3159:
  5200  1CD4  0873               	movf	___llmod@divisor,w
  5201  1CD5  02F7               	subwf	___llmod@dividend,f
  5202  1CD6  0874               	movf	___llmod@divisor+1,w
  5203  1CD7  1C03               	skipc
  5204  1CD8  0F74               	incfsz	___llmod@divisor+1,w
  5205  1CD9  02F8               	subwf	___llmod@dividend+1,f
  5206  1CDA  0875               	movf	___llmod@divisor+2,w
  5207  1CDB  1C03               	skipc
  5208  1CDC  0F75               	incfsz	___llmod@divisor+2,w
  5209  1CDD  02F9               	subwf	___llmod@dividend+2,f
  5210  1CDE  0876               	movf	___llmod@divisor+3,w
  5211  1CDF  1C03               	skipc
  5212  1CE0  0F76               	incfsz	___llmod@divisor+3,w
  5213  1CE1  02FA               	subwf	___llmod@dividend+3,f
  5214  1CE2                     l3161:
  5215  1CE2  3001               	movlw	1
  5216  1CE3                     u5095:
  5217  1CE3  1003               	clrc
  5218  1CE4  0CF6               	rrf	___llmod@divisor+3,f
  5219  1CE5  0CF5               	rrf	___llmod@divisor+2,f
  5220  1CE6  0CF4               	rrf	___llmod@divisor+1,f
  5221  1CE7  0CF3               	rrf	___llmod@divisor,f
  5222  1CE8  3EFF               	addlw	-1
  5223  1CE9  1D03               	skipz
  5224  1CEA  2CE3               	goto	u5095
  5225  1CEB                     l3163:
  5226  1CEB  3001               	movlw	1
  5227  1CEC  02A1               	subwf	___llmod@counter,f
  5228  1CED  1D03               	btfss	3,2
  5229  1CEE  2CF0               	goto	u5101
  5230  1CEF  2CF1               	goto	u5100
  5231  1CF0                     u5101:
  5232  1CF0  2CC2               	goto	l3157
  5233  1CF1                     u5100:
  5234  1CF1                     l3165:
  5235  1CF1  087A               	movf	___llmod@dividend+3,w
  5236  1CF2  00F6               	movwf	?___llmod+3
  5237  1CF3  0879               	movf	___llmod@dividend+2,w
  5238  1CF4  00F5               	movwf	?___llmod+2
  5239  1CF5  0878               	movf	___llmod@dividend+1,w
  5240  1CF6  00F4               	movwf	?___llmod+1
  5241  1CF7  0877               	movf	___llmod@dividend,w
  5242  1CF8  00F3               	movwf	?___llmod
  5243  1CF9                     l680:
  5244  1CF9  0008               	return
  5245  1CFA                     __end_of___llmod:
  5246                           
  5247                           	psect	text13
  5248  1D53                     __ptext13:	
  5249 ;; *************** function ___lldiv *****************
  5250 ;; Defined at:
  5251 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;  divisor         4    3[COMMON] unsigned long 
  5254 ;;  dividend        4    7[COMMON] unsigned long 
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;  quotient        4    1[BANK0 ] unsigned long 
  5257 ;;  counter         1    5[BANK0 ] unsigned char 
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  4    3[COMMON] unsigned long 
  5260 ;; Registers used:
  5261 ;;		wreg, status,2, status,0
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5267 ;;      Params:         8       0       0       0       0
  5268 ;;      Locals:         0       5       0       0       0
  5269 ;;      Temps:          0       1       0       0       0
  5270 ;;      Totals:         8       6       0       0       0
  5271 ;;Total ram usage:       14 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; Hardware stack levels required when called:    2
  5274 ;; This function calls:
  5275 ;;		Nothing
  5276 ;; This function is called by:
  5277 ;;		_sprintf
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           
  5282                           ;psect for function ___lldiv
  5283  1D53                     ___lldiv:
  5284  1D53                     l3049:	
  5285                           ;incstack = 0
  5286                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5287                           
  5288  1D53  3000               	movlw	0
  5289  1D54  1283               	bcf	3,5	;RP0=0, select bank0
  5290  1D55  1303               	bcf	3,6	;RP1=0, select bank0
  5291  1D56  00A4               	movwf	___lldiv@quotient+3
  5292  1D57  3000               	movlw	0
  5293  1D58  00A3               	movwf	___lldiv@quotient+2
  5294  1D59  3000               	movlw	0
  5295  1D5A  00A2               	movwf	___lldiv@quotient+1
  5296  1D5B  3000               	movlw	0
  5297  1D5C  00A1               	movwf	___lldiv@quotient
  5298  1D5D  0876               	movf	___lldiv@divisor+3,w
  5299  1D5E  0475               	iorwf	___lldiv@divisor+2,w
  5300  1D5F  0474               	iorwf	___lldiv@divisor+1,w
  5301  1D60  0473               	iorwf	___lldiv@divisor,w
  5302  1D61  1903               	skipnz
  5303  1D62  2D64               	goto	u4771
  5304  1D63  2D65               	goto	u4770
  5305  1D64                     u4771:
  5306  1D64  2DB2               	goto	l3069
  5307  1D65                     u4770:
  5308  1D65                     l3051:
  5309  1D65  01A5               	clrf	___lldiv@counter
  5310  1D66  0AA5               	incf	___lldiv@counter,f
  5311  1D67  2D75               	goto	l3055
  5312  1D68                     l3053:
  5313  1D68  3001               	movlw	1
  5314  1D69  00A0               	movwf	??___lldiv
  5315  1D6A                     u4785:
  5316  1D6A  1003               	clrc
  5317  1D6B  0DF3               	rlf	___lldiv@divisor,f
  5318  1D6C  0DF4               	rlf	___lldiv@divisor+1,f
  5319  1D6D  0DF5               	rlf	___lldiv@divisor+2,f
  5320  1D6E  0DF6               	rlf	___lldiv@divisor+3,f
  5321  1D6F  0BA0               	decfsz	??___lldiv,f
  5322  1D70  2D6A               	goto	u4785
  5323  1D71  3001               	movlw	1
  5324  1D72  00A0               	movwf	??___lldiv
  5325  1D73  0820               	movf	??___lldiv,w
  5326  1D74  07A5               	addwf	___lldiv@counter,f
  5327  1D75                     l3055:
  5328  1D75  1FF6               	btfss	___lldiv@divisor+3,7
  5329  1D76  2D78               	goto	u4791
  5330  1D77  2D79               	goto	u4790
  5331  1D78                     u4791:
  5332  1D78  2D68               	goto	l3053
  5333  1D79                     u4790:
  5334  1D79                     l3057:
  5335  1D79  3001               	movlw	1
  5336  1D7A  00A0               	movwf	??___lldiv
  5337  1D7B                     u4805:
  5338  1D7B  1003               	clrc
  5339  1D7C  0DA1               	rlf	___lldiv@quotient,f
  5340  1D7D  0DA2               	rlf	___lldiv@quotient+1,f
  5341  1D7E  0DA3               	rlf	___lldiv@quotient+2,f
  5342  1D7F  0DA4               	rlf	___lldiv@quotient+3,f
  5343  1D80  0BA0               	decfsz	??___lldiv,f
  5344  1D81  2D7B               	goto	u4805
  5345  1D82                     l3059:
  5346  1D82  0876               	movf	___lldiv@divisor+3,w
  5347  1D83  027A               	subwf	___lldiv@dividend+3,w
  5348  1D84  1D03               	skipz
  5349  1D85  2D90               	goto	u4815
  5350  1D86  0875               	movf	___lldiv@divisor+2,w
  5351  1D87  0279               	subwf	___lldiv@dividend+2,w
  5352  1D88  1D03               	skipz
  5353  1D89  2D90               	goto	u4815
  5354  1D8A  0874               	movf	___lldiv@divisor+1,w
  5355  1D8B  0278               	subwf	___lldiv@dividend+1,w
  5356  1D8C  1D03               	skipz
  5357  1D8D  2D90               	goto	u4815
  5358  1D8E  0873               	movf	___lldiv@divisor,w
  5359  1D8F  0277               	subwf	___lldiv@dividend,w
  5360  1D90                     u4815:
  5361  1D90  1C03               	skipc
  5362  1D91  2D93               	goto	u4811
  5363  1D92  2D94               	goto	u4810
  5364  1D93                     u4811:
  5365  1D93  2DA3               	goto	l3065
  5366  1D94                     u4810:
  5367  1D94                     l3061:
  5368  1D94  0873               	movf	___lldiv@divisor,w
  5369  1D95  02F7               	subwf	___lldiv@dividend,f
  5370  1D96  0874               	movf	___lldiv@divisor+1,w
  5371  1D97  1C03               	skipc
  5372  1D98  0F74               	incfsz	___lldiv@divisor+1,w
  5373  1D99  02F8               	subwf	___lldiv@dividend+1,f
  5374  1D9A  0875               	movf	___lldiv@divisor+2,w
  5375  1D9B  1C03               	skipc
  5376  1D9C  0F75               	incfsz	___lldiv@divisor+2,w
  5377  1D9D  02F9               	subwf	___lldiv@dividend+2,f
  5378  1D9E  0876               	movf	___lldiv@divisor+3,w
  5379  1D9F  1C03               	skipc
  5380  1DA0  0F76               	incfsz	___lldiv@divisor+3,w
  5381  1DA1  02FA               	subwf	___lldiv@dividend+3,f
  5382  1DA2                     l3063:
  5383  1DA2  1421               	bsf	___lldiv@quotient,0
  5384  1DA3                     l3065:
  5385  1DA3  3001               	movlw	1
  5386  1DA4                     u4825:
  5387  1DA4  1003               	clrc
  5388  1DA5  0CF6               	rrf	___lldiv@divisor+3,f
  5389  1DA6  0CF5               	rrf	___lldiv@divisor+2,f
  5390  1DA7  0CF4               	rrf	___lldiv@divisor+1,f
  5391  1DA8  0CF3               	rrf	___lldiv@divisor,f
  5392  1DA9  3EFF               	addlw	-1
  5393  1DAA  1D03               	skipz
  5394  1DAB  2DA4               	goto	u4825
  5395  1DAC                     l3067:
  5396  1DAC  3001               	movlw	1
  5397  1DAD  02A5               	subwf	___lldiv@counter,f
  5398  1DAE  1D03               	btfss	3,2
  5399  1DAF  2DB1               	goto	u4831
  5400  1DB0  2DB2               	goto	u4830
  5401  1DB1                     u4831:
  5402  1DB1  2D79               	goto	l3057
  5403  1DB2                     u4830:
  5404  1DB2                     l3069:
  5405  1DB2  0824               	movf	___lldiv@quotient+3,w
  5406  1DB3  00F6               	movwf	?___lldiv+3
  5407  1DB4  0823               	movf	___lldiv@quotient+2,w
  5408  1DB5  00F5               	movwf	?___lldiv+2
  5409  1DB6  0822               	movf	___lldiv@quotient+1,w
  5410  1DB7  00F4               	movwf	?___lldiv+1
  5411  1DB8  0821               	movf	___lldiv@quotient,w
  5412  1DB9  00F3               	movwf	?___lldiv
  5413  1DBA                     l460:
  5414  1DBA  0008               	return
  5415  1DBB                     __end_of___lldiv:
  5416                           
  5417                           	psect	text14
  5418  1E24                     __ptext14:	
  5419 ;; *************** function ___fltol *****************
  5420 ;; Defined at:
  5421 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;  f1              4   53[BANK0 ] unsigned long 
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;  exp1            1   63[BANK0 ] unsigned char 
  5426 ;;  sign1           1   62[BANK0 ] unsigned char 
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  4   53[BANK0 ] long 
  5429 ;; Registers used:
  5430 ;;		wreg, status,2, status,0
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5436 ;;      Params:         0       4       0       0       0
  5437 ;;      Locals:         0       2       0       0       0
  5438 ;;      Temps:          0       5       0       0       0
  5439 ;;      Totals:         0      11       0       0       0
  5440 ;;Total ram usage:       11 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; Hardware stack levels required when called:    2
  5443 ;; This function calls:
  5444 ;;		Nothing
  5445 ;; This function is called by:
  5446 ;;		_sprintf
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           
  5451                           ;psect for function ___fltol
  5452  1E24                     ___fltol:
  5453  1E24                     l3113:	
  5454                           ;incstack = 0
  5455                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5456                           
  5457  1E24  1003               	clrc
  5458  1E25  1283               	bcf	3,5	;RP0=0, select bank0
  5459  1E26  1303               	bcf	3,6	;RP1=0, select bank0
  5460  1E27  0D57               	rlf	___fltol@f1+2,w
  5461  1E28  0D58               	rlf	___fltol@f1+3,w
  5462  1E29  00D9               	movwf	??___fltol
  5463  1E2A  0859               	movf	??___fltol,w
  5464  1E2B  00DF               	movwf	___fltol@exp1
  5465  1E2C  085F               	movf	___fltol@exp1,w
  5466  1E2D  1D03               	btfss	3,2
  5467  1E2E  2E30               	goto	u4951
  5468  1E2F  2E31               	goto	u4950
  5469  1E30                     u4951:
  5470  1E30  2E3A               	goto	l3119
  5471  1E31                     u4950:
  5472  1E31                     l3115:
  5473  1E31  3000               	movlw	0
  5474  1E32  00D8               	movwf	?___fltol+3
  5475  1E33  3000               	movlw	0
  5476  1E34  00D7               	movwf	?___fltol+2
  5477  1E35  3000               	movlw	0
  5478  1E36  00D6               	movwf	?___fltol+1
  5479  1E37  3000               	movlw	0
  5480  1E38  00D5               	movwf	?___fltol
  5481  1E39  2E9F               	goto	l627
  5482  1E3A                     l3119:
  5483  1E3A  0855               	movf	___fltol@f1,w
  5484  1E3B  00D9               	movwf	??___fltol
  5485  1E3C  0856               	movf	___fltol@f1+1,w
  5486  1E3D  00DA               	movwf	??___fltol+1
  5487  1E3E  0857               	movf	___fltol@f1+2,w
  5488  1E3F  00DB               	movwf	??___fltol+2
  5489  1E40  0858               	movf	___fltol@f1+3,w
  5490  1E41  00DC               	movwf	??___fltol+3
  5491  1E42  301F               	movlw	31
  5492  1E43                     u4965:
  5493  1E43  1003               	clrc
  5494  1E44  0CDC               	rrf	??___fltol+3,f
  5495  1E45  0CDB               	rrf	??___fltol+2,f
  5496  1E46  0CDA               	rrf	??___fltol+1,f
  5497  1E47  0CD9               	rrf	??___fltol,f
  5498  1E48                     u4960:
  5499  1E48  3EFF               	addlw	-1
  5500  1E49  1D03               	skipz
  5501  1E4A  2E43               	goto	u4965
  5502  1E4B  0859               	movf	??___fltol,w
  5503  1E4C  00DD               	movwf	??___fltol+4
  5504  1E4D  085D               	movf	??___fltol+4,w
  5505  1E4E  00DE               	movwf	___fltol@sign1
  5506  1E4F                     l3121:
  5507  1E4F  17D7               	bsf	___fltol@f1+2,7
  5508  1E50                     l3123:
  5509  1E50  30FF               	movlw	255
  5510  1E51  05D5               	andwf	___fltol@f1,f
  5511  1E52  30FF               	movlw	255
  5512  1E53  05D6               	andwf	___fltol@f1+1,f
  5513  1E54  30FF               	movlw	255
  5514  1E55  05D7               	andwf	___fltol@f1+2,f
  5515  1E56  3000               	movlw	0
  5516  1E57  05D8               	andwf	___fltol@f1+3,f
  5517  1E58                     l3125:
  5518  1E58  3096               	movlw	150
  5519  1E59  02DF               	subwf	___fltol@exp1,f
  5520  1E5A                     l3127:
  5521  1E5A  1FDF               	btfss	___fltol@exp1,7
  5522  1E5B  2E5D               	goto	u4971
  5523  1E5C  2E5E               	goto	u4970
  5524  1E5D                     u4971:
  5525  1E5D  2E78               	goto	l3137
  5526  1E5E                     u4970:
  5527  1E5E                     l3129:
  5528  1E5E  085F               	movf	___fltol@exp1,w
  5529  1E5F  3A80               	xorlw	128
  5530  1E60  3E97               	addlw	151
  5531  1E61  1803               	skipnc
  5532  1E62  2E64               	goto	u4981
  5533  1E63  2E65               	goto	u4980
  5534  1E64                     u4981:
  5535  1E64  2E66               	goto	l3135
  5536  1E65                     u4980:
  5537  1E65  2E31               	goto	l3115
  5538  1E66                     l3135:
  5539  1E66  3001               	movlw	1
  5540  1E67                     u4995:
  5541  1E67  1003               	clrc
  5542  1E68  0CD8               	rrf	___fltol@f1+3,f
  5543  1E69  0CD7               	rrf	___fltol@f1+2,f
  5544  1E6A  0CD6               	rrf	___fltol@f1+1,f
  5545  1E6B  0CD5               	rrf	___fltol@f1,f
  5546  1E6C  3EFF               	addlw	-1
  5547  1E6D  1D03               	skipz
  5548  1E6E  2E67               	goto	u4995
  5549  1E6F  3001               	movlw	1
  5550  1E70  00D9               	movwf	??___fltol
  5551  1E71  0859               	movf	??___fltol,w
  5552  1E72  07DF               	addwf	___fltol@exp1,f
  5553  1E73  1D03               	btfss	3,2
  5554  1E74  2E76               	goto	u5001
  5555  1E75  2E77               	goto	u5000
  5556  1E76                     u5001:
  5557  1E76  2E66               	goto	l3135
  5558  1E77                     u5000:
  5559  1E77  2E8F               	goto	l3145
  5560  1E78                     l3137:
  5561  1E78  3020               	movlw	32
  5562  1E79  025F               	subwf	___fltol@exp1,w
  5563  1E7A  1C03               	skipc
  5564  1E7B  2E7D               	goto	u5011
  5565  1E7C  2E7E               	goto	u5010
  5566  1E7D                     u5011:
  5567  1E7D  2E8A               	goto	l634
  5568  1E7E                     u5010:
  5569  1E7E  2E31               	goto	l3115
  5570  1E7F                     l3143:
  5571  1E7F  3001               	movlw	1
  5572  1E80  00D9               	movwf	??___fltol
  5573  1E81                     u5025:
  5574  1E81  1003               	clrc
  5575  1E82  0DD5               	rlf	___fltol@f1,f
  5576  1E83  0DD6               	rlf	___fltol@f1+1,f
  5577  1E84  0DD7               	rlf	___fltol@f1+2,f
  5578  1E85  0DD8               	rlf	___fltol@f1+3,f
  5579  1E86  0BD9               	decfsz	??___fltol,f
  5580  1E87  2E81               	goto	u5025
  5581  1E88  3001               	movlw	1
  5582  1E89  02DF               	subwf	___fltol@exp1,f
  5583  1E8A                     l634:
  5584  1E8A  085F               	movf	___fltol@exp1,w
  5585  1E8B  1D03               	btfss	3,2
  5586  1E8C  2E8E               	goto	u5031
  5587  1E8D  2E8F               	goto	u5030
  5588  1E8E                     u5031:
  5589  1E8E  2E7F               	goto	l3143
  5590  1E8F                     u5030:
  5591  1E8F                     l3145:
  5592  1E8F  085E               	movf	___fltol@sign1,w
  5593  1E90  1903               	btfsc	3,2
  5594  1E91  2E93               	goto	u5041
  5595  1E92  2E94               	goto	u5040
  5596  1E93                     u5041:
  5597  1E93  2E9F               	goto	l637
  5598  1E94                     u5040:
  5599  1E94                     l3147:
  5600  1E94  09D5               	comf	___fltol@f1,f
  5601  1E95  09D6               	comf	___fltol@f1+1,f
  5602  1E96  09D7               	comf	___fltol@f1+2,f
  5603  1E97  09D8               	comf	___fltol@f1+3,f
  5604  1E98  0AD5               	incf	___fltol@f1,f
  5605  1E99  1903               	skipnz
  5606  1E9A  0AD6               	incf	___fltol@f1+1,f
  5607  1E9B  1903               	skipnz
  5608  1E9C  0AD7               	incf	___fltol@f1+2,f
  5609  1E9D  1903               	skipnz
  5610  1E9E  0AD8               	incf	___fltol@f1+3,f
  5611  1E9F                     l637:
  5612  1E9F                     l627:
  5613  1E9F  0008               	return
  5614  1EA0                     __end_of___fltol:
  5615                           
  5616                           	psect	text15
  5617  07AE                     __ptext15:	
  5618 ;; *************** function ___flsub *****************
  5619 ;; Defined at:
  5620 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;  a               4    0[BANK1 ] long 
  5623 ;;  b               4    4[BANK1 ] long 
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;		None
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  4    0[BANK1 ] long 
  5628 ;; Registers used:
  5629 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5635 ;;      Params:         0       0       8       0       0
  5636 ;;      Locals:         0       0       0       0       0
  5637 ;;      Temps:          0       0       0       0       0
  5638 ;;      Totals:         0       0       8       0       0
  5639 ;;Total ram usage:        8 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; Hardware stack levels required when called:    3
  5642 ;; This function calls:
  5643 ;;		___fladd
  5644 ;; This function is called by:
  5645 ;;		_sprintf
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           
  5650                           ;psect for function ___flsub
  5651  07AE                     ___flsub:
  5652  07AE                     l3169:	
  5653                           ;incstack = 0
  5654                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5655                           
  5656  07AE  3080               	movlw	128
  5657  07AF  1683               	bsf	3,5	;RP0=1, select bank1
  5658  07B0  1303               	bcf	3,6	;RP1=0, select bank1
  5659  07B1  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5660  07B2                     l3171:
  5661  07B2  0827               	movf	(___flsub@b+3)^(0+128),w
  5662  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  5663  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  5664  07B5  00D9               	movwf	___fladd@b+3
  5665  07B6  1683               	bsf	3,5	;RP0=1, select bank1
  5666  07B7  1303               	bcf	3,6	;RP1=0, select bank1
  5667  07B8  0826               	movf	(___flsub@b+2)^(0+128),w
  5668  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  5669  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  5670  07BB  00D8               	movwf	___fladd@b+2
  5671  07BC  1683               	bsf	3,5	;RP0=1, select bank1
  5672  07BD  1303               	bcf	3,6	;RP1=0, select bank1
  5673  07BE  0825               	movf	(___flsub@b+1)^(0+128),w
  5674  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  5675  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  5676  07C1  00D7               	movwf	___fladd@b+1
  5677  07C2  1683               	bsf	3,5	;RP0=1, select bank1
  5678  07C3  1303               	bcf	3,6	;RP1=0, select bank1
  5679  07C4  0824               	movf	___flsub@b^(0+128),w
  5680  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  5681  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  5682  07C7  00D6               	movwf	___fladd@b
  5683  07C8  1683               	bsf	3,5	;RP0=1, select bank1
  5684  07C9  1303               	bcf	3,6	;RP1=0, select bank1
  5685  07CA  0823               	movf	(___flsub@a+3)^(0+128),w
  5686  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  5687  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  5688  07CD  00DD               	movwf	___fladd@a+3
  5689  07CE  1683               	bsf	3,5	;RP0=1, select bank1
  5690  07CF  1303               	bcf	3,6	;RP1=0, select bank1
  5691  07D0  0822               	movf	(___flsub@a+2)^(0+128),w
  5692  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  5693  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  5694  07D3  00DC               	movwf	___fladd@a+2
  5695  07D4  1683               	bsf	3,5	;RP0=1, select bank1
  5696  07D5  1303               	bcf	3,6	;RP1=0, select bank1
  5697  07D6  0821               	movf	(___flsub@a+1)^(0+128),w
  5698  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  5699  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  5700  07D9  00DB               	movwf	___fladd@a+1
  5701  07DA  1683               	bsf	3,5	;RP0=1, select bank1
  5702  07DB  1303               	bcf	3,6	;RP1=0, select bank1
  5703  07DC  0820               	movf	___flsub@a^(0+128),w
  5704  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  5705  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  5706  07DF  00DA               	movwf	___fladd@a
  5707  07E0  160A  118A  2274  120A  118A  	fcall	___fladd
  5708  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  5709  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  5710  07E7  0859               	movf	?___fladd+3,w
  5711  07E8  1683               	bsf	3,5	;RP0=1, select bank1
  5712  07E9  1303               	bcf	3,6	;RP1=0, select bank1
  5713  07EA  00A3               	movwf	(?___flsub+3)^(0+128)
  5714  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  5715  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  5716  07ED  0858               	movf	?___fladd+2,w
  5717  07EE  1683               	bsf	3,5	;RP0=1, select bank1
  5718  07EF  1303               	bcf	3,6	;RP1=0, select bank1
  5719  07F0  00A2               	movwf	(?___flsub+2)^(0+128)
  5720  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  5721  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  5722  07F3  0857               	movf	?___fladd+1,w
  5723  07F4  1683               	bsf	3,5	;RP0=1, select bank1
  5724  07F5  1303               	bcf	3,6	;RP1=0, select bank1
  5725  07F6  00A1               	movwf	(?___flsub+1)^(0+128)
  5726  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  5727  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  5728  07F9  0856               	movf	?___fladd,w
  5729  07FA  1683               	bsf	3,5	;RP0=1, select bank1
  5730  07FB  1303               	bcf	3,6	;RP1=0, select bank1
  5731  07FC  00A0               	movwf	?___flsub^(0+128)
  5732  07FD                     l797:
  5733  07FD  0008               	return
  5734  07FE                     __end_of___flsub:
  5735                           
  5736                           	psect	text16
  5737  1274                     __ptext16:	
  5738 ;; *************** function ___fladd *****************
  5739 ;; Defined at:
  5740 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  b               4   54[BANK0 ] long 
  5743 ;;  a               4   58[BANK0 ] long 
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  grs             1   73[BANK0 ] unsigned char 
  5746 ;;  bexp            1   72[BANK0 ] unsigned char 
  5747 ;;  aexp            1   71[BANK0 ] unsigned char 
  5748 ;;  signs           1   70[BANK0 ] unsigned char 
  5749 ;; Return value:  Size  Location     Type
  5750 ;;                  4   54[BANK0 ] unsigned char 
  5751 ;; Registers used:
  5752 ;;		wreg, status,2, status,0, btemp+1
  5753 ;; Tracked objects:
  5754 ;;		On entry : 0/0
  5755 ;;		On exit  : 0/0
  5756 ;;		Unchanged: 0/0
  5757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5758 ;;      Params:         0       8       0       0       0
  5759 ;;      Locals:         0       4       0       0       0
  5760 ;;      Temps:          0       8       0       0       0
  5761 ;;      Totals:         0      20       0       0       0
  5762 ;;Total ram usage:       20 bytes
  5763 ;; Hardware stack levels used:    1
  5764 ;; Hardware stack levels required when called:    2
  5765 ;; This function calls:
  5766 ;;		Nothing
  5767 ;; This function is called by:
  5768 ;;		_sprintf
  5769 ;;		___flsub
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           
  5774                           ;psect for function ___fladd
  5775  1274                     ___fladd:
  5776  1274                     l2501:	
  5777                           ;incstack = 0
  5778                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5779                           
  5780  1274  1283               	bcf	3,5	;RP0=0, select bank0
  5781  1275  1303               	bcf	3,6	;RP1=0, select bank0
  5782  1276  0859               	movf	___fladd@b+3,w
  5783  1277  3980               	andlw	128
  5784  1278  00DE               	movwf	??___fladd
  5785  1279  085E               	movf	??___fladd,w
  5786  127A  00E6               	movwf	___fladd@signs
  5787  127B                     l2503:
  5788  127B  0859               	movf	___fladd@b+3,w
  5789  127C  00DE               	movwf	??___fladd
  5790  127D  075E               	addwf	??___fladd,w
  5791  127E  00DF               	movwf	??___fladd+1
  5792  127F  085F               	movf	??___fladd+1,w
  5793  1280  00E8               	movwf	___fladd@bexp
  5794  1281                     l2505:
  5795  1281  1FD8               	btfss	___fladd@b+2,7
  5796  1282  2A84               	goto	u3361
  5797  1283  2A85               	goto	u3360
  5798  1284                     u3361:
  5799  1284  2A86               	goto	l2509
  5800  1285                     u3360:
  5801  1285                     l2507:
  5802  1285  1468               	bsf	___fladd@bexp,0
  5803  1286                     l2509:
  5804  1286  0868               	movf	___fladd@bexp,w
  5805  1287  1903               	btfsc	3,2
  5806  1288  2A8A               	goto	u3371
  5807  1289  2A8B               	goto	u3370
  5808  128A                     u3371:
  5809  128A  2A9B               	goto	l2519
  5810  128B                     u3370:
  5811  128B                     l2511:
  5812  128B  0A68               	incf	___fladd@bexp,w
  5813  128C  1D03               	btfss	3,2
  5814  128D  2A8F               	goto	u3381
  5815  128E  2A90               	goto	u3380
  5816  128F                     u3381:
  5817  128F  2A98               	goto	l2515
  5818  1290                     u3380:
  5819  1290                     l2513:
  5820  1290  3000               	movlw	0
  5821  1291  00D9               	movwf	___fladd@b+3
  5822  1292  3000               	movlw	0
  5823  1293  00D8               	movwf	___fladd@b+2
  5824  1294  3000               	movlw	0
  5825  1295  00D7               	movwf	___fladd@b+1
  5826  1296  3000               	movlw	0
  5827  1297  00D6               	movwf	___fladd@b
  5828  1298                     l2515:
  5829  1298  17D8               	bsf	___fladd@b+2,7
  5830  1299                     l2517:
  5831  1299  01D9               	clrf	___fladd@b+3
  5832  129A  2AA3               	goto	l2521
  5833  129B                     l2519:
  5834  129B  3000               	movlw	0
  5835  129C  00D9               	movwf	___fladd@b+3
  5836  129D  3000               	movlw	0
  5837  129E  00D8               	movwf	___fladd@b+2
  5838  129F  3000               	movlw	0
  5839  12A0  00D7               	movwf	___fladd@b+1
  5840  12A1  3000               	movlw	0
  5841  12A2  00D6               	movwf	___fladd@b
  5842  12A3                     l2521:
  5843  12A3  085D               	movf	___fladd@a+3,w
  5844  12A4  3980               	andlw	128
  5845  12A5  00DE               	movwf	??___fladd
  5846  12A6  085E               	movf	??___fladd,w
  5847  12A7  00E7               	movwf	___fladd@aexp
  5848  12A8                     l2523:
  5849  12A8  0867               	movf	___fladd@aexp,w
  5850  12A9  0666               	xorwf	___fladd@signs,w
  5851  12AA  1903               	skipnz
  5852  12AB  2AAD               	goto	u3391
  5853  12AC  2AAE               	goto	u3390
  5854  12AD                     u3391:
  5855  12AD  2AAF               	goto	l2527
  5856  12AE                     u3390:
  5857  12AE                     l2525:
  5858  12AE  1766               	bsf	___fladd@signs,6
  5859  12AF                     l2527:
  5860  12AF  085D               	movf	___fladd@a+3,w
  5861  12B0  00DE               	movwf	??___fladd
  5862  12B1  075E               	addwf	??___fladd,w
  5863  12B2  00DF               	movwf	??___fladd+1
  5864  12B3  085F               	movf	??___fladd+1,w
  5865  12B4  00E7               	movwf	___fladd@aexp
  5866  12B5                     l2529:
  5867  12B5  1FDC               	btfss	___fladd@a+2,7
  5868  12B6  2AB8               	goto	u3401
  5869  12B7  2AB9               	goto	u3400
  5870  12B8                     u3401:
  5871  12B8  2ABA               	goto	l2533
  5872  12B9                     u3400:
  5873  12B9                     l2531:
  5874  12B9  1467               	bsf	___fladd@aexp,0
  5875  12BA                     l2533:
  5876  12BA  0867               	movf	___fladd@aexp,w
  5877  12BB  1903               	btfsc	3,2
  5878  12BC  2ABE               	goto	u3411
  5879  12BD  2ABF               	goto	u3410
  5880  12BE                     u3411:
  5881  12BE  2ACF               	goto	l2543
  5882  12BF                     u3410:
  5883  12BF                     l2535:
  5884  12BF  0A67               	incf	___fladd@aexp,w
  5885  12C0  1D03               	btfss	3,2
  5886  12C1  2AC3               	goto	u3421
  5887  12C2  2AC4               	goto	u3420
  5888  12C3                     u3421:
  5889  12C3  2ACC               	goto	l2539
  5890  12C4                     u3420:
  5891  12C4                     l2537:
  5892  12C4  3000               	movlw	0
  5893  12C5  00DD               	movwf	___fladd@a+3
  5894  12C6  3000               	movlw	0
  5895  12C7  00DC               	movwf	___fladd@a+2
  5896  12C8  3000               	movlw	0
  5897  12C9  00DB               	movwf	___fladd@a+1
  5898  12CA  3000               	movlw	0
  5899  12CB  00DA               	movwf	___fladd@a
  5900  12CC                     l2539:
  5901  12CC  17DC               	bsf	___fladd@a+2,7
  5902  12CD                     l2541:
  5903  12CD  01DD               	clrf	___fladd@a+3
  5904  12CE  2AD7               	goto	l751
  5905  12CF                     l2543:
  5906  12CF  3000               	movlw	0
  5907  12D0  00DD               	movwf	___fladd@a+3
  5908  12D1  3000               	movlw	0
  5909  12D2  00DC               	movwf	___fladd@a+2
  5910  12D3  3000               	movlw	0
  5911  12D4  00DB               	movwf	___fladd@a+1
  5912  12D5  3000               	movlw	0
  5913  12D6  00DA               	movwf	___fladd@a
  5914  12D7                     l751:
  5915  12D7  0868               	movf	___fladd@bexp,w
  5916  12D8  0267               	subwf	___fladd@aexp,w
  5917  12D9  1803               	skipnc
  5918  12DA  2ADC               	goto	u3431
  5919  12DB  2ADD               	goto	u3430
  5920  12DC                     u3431:
  5921  12DC  2B21               	goto	l2579
  5922  12DD                     u3430:
  5923  12DD                     l2545:
  5924  12DD  1F66               	btfss	___fladd@signs,6
  5925  12DE  2AE0               	goto	u3441
  5926  12DF  2AE1               	goto	u3440
  5927  12E0                     u3441:
  5928  12E0  2AE5               	goto	l2549
  5929  12E1                     u3440:
  5930  12E1                     l2547:
  5931  12E1  3080               	movlw	128
  5932  12E2  00DE               	movwf	??___fladd
  5933  12E3  085E               	movf	??___fladd,w
  5934  12E4  06E6               	xorwf	___fladd@signs,f
  5935  12E5                     l2549:
  5936  12E5  0868               	movf	___fladd@bexp,w
  5937  12E6  00DE               	movwf	??___fladd
  5938  12E7  085E               	movf	??___fladd,w
  5939  12E8  00E9               	movwf	___fladd@grs
  5940  12E9                     l2551:
  5941  12E9  0867               	movf	___fladd@aexp,w
  5942  12EA  00DE               	movwf	??___fladd
  5943  12EB  085E               	movf	??___fladd,w
  5944  12EC  00E8               	movwf	___fladd@bexp
  5945  12ED                     l2553:
  5946  12ED  0869               	movf	___fladd@grs,w
  5947  12EE  00DE               	movwf	??___fladd
  5948  12EF  085E               	movf	??___fladd,w
  5949  12F0  00E7               	movwf	___fladd@aexp
  5950  12F1                     l2555:
  5951  12F1  0856               	movf	___fladd@b,w
  5952  12F2  00DE               	movwf	??___fladd
  5953  12F3  085E               	movf	??___fladd,w
  5954  12F4  00E9               	movwf	___fladd@grs
  5955  12F5                     l2557:
  5956  12F5  085A               	movf	___fladd@a,w
  5957  12F6  00DE               	movwf	??___fladd
  5958  12F7  085E               	movf	??___fladd,w
  5959  12F8  00D6               	movwf	___fladd@b
  5960  12F9                     l2559:
  5961  12F9  0869               	movf	___fladd@grs,w
  5962  12FA  00DE               	movwf	??___fladd
  5963  12FB  085E               	movf	??___fladd,w
  5964  12FC  00DA               	movwf	___fladd@a
  5965  12FD                     l2561:
  5966  12FD  0857               	movf	___fladd@b+1,w
  5967  12FE  00DE               	movwf	??___fladd
  5968  12FF  085E               	movf	??___fladd,w
  5969  1300  00E9               	movwf	___fladd@grs
  5970  1301                     l2563:
  5971  1301  085B               	movf	___fladd@a+1,w
  5972  1302  00DE               	movwf	??___fladd
  5973  1303  085E               	movf	??___fladd,w
  5974  1304  00D7               	movwf	___fladd@b+1
  5975  1305                     l2565:
  5976  1305  0869               	movf	___fladd@grs,w
  5977  1306  00DE               	movwf	??___fladd
  5978  1307  085E               	movf	??___fladd,w
  5979  1308  00DB               	movwf	___fladd@a+1
  5980  1309                     l2567:
  5981  1309  0858               	movf	___fladd@b+2,w
  5982  130A  00DE               	movwf	??___fladd
  5983  130B  085E               	movf	??___fladd,w
  5984  130C  00E9               	movwf	___fladd@grs
  5985  130D                     l2569:
  5986  130D  085C               	movf	___fladd@a+2,w
  5987  130E  00DE               	movwf	??___fladd
  5988  130F  085E               	movf	??___fladd,w
  5989  1310  00D8               	movwf	___fladd@b+2
  5990  1311                     l2571:
  5991  1311  0869               	movf	___fladd@grs,w
  5992  1312  00DE               	movwf	??___fladd
  5993  1313  085E               	movf	??___fladd,w
  5994  1314  00DC               	movwf	___fladd@a+2
  5995  1315                     l2573:
  5996  1315  0859               	movf	___fladd@b+3,w
  5997  1316  00DE               	movwf	??___fladd
  5998  1317  085E               	movf	??___fladd,w
  5999  1318  00E9               	movwf	___fladd@grs
  6000  1319                     l2575:
  6001  1319  085D               	movf	___fladd@a+3,w
  6002  131A  00DE               	movwf	??___fladd
  6003  131B  085E               	movf	??___fladd,w
  6004  131C  00D9               	movwf	___fladd@b+3
  6005  131D                     l2577:
  6006  131D  0869               	movf	___fladd@grs,w
  6007  131E  00DE               	movwf	??___fladd
  6008  131F  085E               	movf	??___fladd,w
  6009  1320  00DD               	movwf	___fladd@a+3
  6010  1321                     l2579:
  6011  1321  01E9               	clrf	___fladd@grs
  6012  1322                     l2581:
  6013  1322  0867               	movf	___fladd@aexp,w
  6014  1323  00DE               	movwf	??___fladd
  6015  1324  01DF               	clrf	??___fladd+1
  6016  1325  085F               	movf	??___fladd+1,w
  6017  1326  00E1               	movwf	??___fladd+3
  6018  1327  0868               	movf	___fladd@bexp,w
  6019  1328  025E               	subwf	??___fladd,w
  6020  1329  00E0               	movwf	??___fladd+2
  6021  132A  1C03               	skipc
  6022  132B  03E1               	decf	??___fladd+3,f
  6023  132C  0861               	movf	??___fladd+3,w
  6024  132D  3A80               	xorlw	128
  6025  132E  00FF               	movwf	btemp+1
  6026  132F  3080               	movlw	128
  6027  1330  027F               	subwf	btemp+1,w
  6028  1331  1D03               	skipz
  6029  1332  2B35               	goto	u3455
  6030  1333  301A               	movlw	26
  6031  1334  0260               	subwf	??___fladd+2,w
  6032  1335                     u3455:
  6033  1335  1C03               	skipc
  6034  1336  2B38               	goto	u3451
  6035  1337  2B39               	goto	u3450
  6036  1338                     u3451:
  6037  1338  2B76               	goto	l2597
  6038  1339                     u3450:
  6039  1339                     l2583:
  6040  1339  1283               	bcf	3,5	;RP0=0, select bank0
  6041  133A  1303               	bcf	3,6	;RP1=0, select bank0
  6042  133B  0859               	movf	___fladd@b+3,w
  6043  133C  0458               	iorwf	___fladd@b+2,w
  6044  133D  0457               	iorwf	___fladd@b+1,w
  6045  133E  0456               	iorwf	___fladd@b,w
  6046  133F  1D03               	skipz
  6047  1340  2B42               	goto	u3461
  6048  1341  2B44               	goto	u3460
  6049  1342                     u3461:
  6050  1342  3001               	movlw	1
  6051  1343  2B45               	goto	u3470
  6052  1344                     u3460:
  6053  1344  3000               	movlw	0
  6054  1345                     u3470:
  6055  1345  00DE               	movwf	??___fladd
  6056  1346  085E               	movf	??___fladd,w
  6057  1347  00E9               	movwf	___fladd@grs
  6058  1348  3000               	movlw	0
  6059  1349  00D9               	movwf	___fladd@b+3
  6060  134A  3000               	movlw	0
  6061  134B  00D8               	movwf	___fladd@b+2
  6062  134C  3000               	movlw	0
  6063  134D  00D7               	movwf	___fladd@b+1
  6064  134E  3000               	movlw	0
  6065  134F  00D6               	movwf	___fladd@b
  6066  1350  0867               	movf	___fladd@aexp,w
  6067  1351  00DE               	movwf	??___fladd
  6068  1352  085E               	movf	??___fladd,w
  6069  1353  00E8               	movwf	___fladd@bexp
  6070  1354  2B7E               	goto	l755
  6071  1355                     l757:
  6072  1355  1C69               	btfss	___fladd@grs,0
  6073  1356  2B58               	goto	u3481
  6074  1357  2B59               	goto	u3480
  6075  1358                     u3481:
  6076  1358  2B62               	goto	l2587
  6077  1359                     u3480:
  6078  1359                     l2585:
  6079  1359  0869               	movf	___fladd@grs,w
  6080  135A  00DE               	movwf	??___fladd
  6081  135B  1003               	clrc
  6082  135C  0C5E               	rrf	??___fladd,w
  6083  135D  3801               	iorlw	1
  6084  135E  00DF               	movwf	??___fladd+1
  6085  135F  085F               	movf	??___fladd+1,w
  6086  1360  00E9               	movwf	___fladd@grs
  6087  1361  2B64               	goto	l2589
  6088  1362                     l2587:
  6089  1362  1003               	clrc
  6090  1363  0CE9               	rrf	___fladd@grs,f
  6091  1364                     l2589:
  6092  1364  1C56               	btfss	___fladd@b,0
  6093  1365  2B67               	goto	u3491
  6094  1366  2B68               	goto	u3490
  6095  1367                     u3491:
  6096  1367  2B69               	goto	l2593
  6097  1368                     u3490:
  6098  1368                     l2591:
  6099  1368  17E9               	bsf	___fladd@grs,7
  6100  1369                     l2593:
  6101  1369  3001               	movlw	1
  6102  136A  00DE               	movwf	??___fladd
  6103  136B                     u3505:
  6104  136B  0D59               	rlf	___fladd@b+3,w
  6105  136C  0CD9               	rrf	___fladd@b+3,f
  6106  136D  0CD8               	rrf	___fladd@b+2,f
  6107  136E  0CD7               	rrf	___fladd@b+1,f
  6108  136F  0CD6               	rrf	___fladd@b,f
  6109  1370  0BDE               	decfsz	??___fladd& (0+127),f
  6110  1371  2B6B               	goto	u3505
  6111  1372                     l2595:
  6112  1372  3001               	movlw	1
  6113  1373  00DE               	movwf	??___fladd
  6114  1374  085E               	movf	??___fladd,w
  6115  1375  07E8               	addwf	___fladd@bexp,f
  6116  1376                     l2597:
  6117  1376  1283               	bcf	3,5	;RP0=0, select bank0
  6118  1377  1303               	bcf	3,6	;RP1=0, select bank0
  6119  1378  0867               	movf	___fladd@aexp,w
  6120  1379  0268               	subwf	___fladd@bexp,w
  6121  137A  1C03               	skipc
  6122  137B  2B7D               	goto	u3511
  6123  137C  2B7E               	goto	u3510
  6124  137D                     u3511:
  6125  137D  2B55               	goto	l757
  6126  137E                     u3510:
  6127  137E                     l755:
  6128  137E  1B66               	btfsc	___fladd@signs,6
  6129  137F  2B81               	goto	u3521
  6130  1380  2B82               	goto	u3520
  6131  1381                     u3521:
  6132  1381  2BCD               	goto	l2623
  6133  1382                     u3520:
  6134  1382                     l2599:
  6135  1382  0868               	movf	___fladd@bexp,w
  6136  1383  1D03               	btfss	3,2
  6137  1384  2B86               	goto	u3531
  6138  1385  2B87               	goto	u3530
  6139  1386                     u3531:
  6140  1386  2B90               	goto	l2605
  6141  1387                     u3530:
  6142  1387                     l2601:
  6143  1387  3000               	movlw	0
  6144  1388  00D9               	movwf	?___fladd+3
  6145  1389  3000               	movlw	0
  6146  138A  00D8               	movwf	?___fladd+2
  6147  138B  3000               	movlw	0
  6148  138C  00D7               	movwf	?___fladd+1
  6149  138D  3000               	movlw	0
  6150  138E  00D6               	movwf	?___fladd
  6151  138F  2CFB               	goto	l764
  6152  1390                     l2605:
  6153  1390  085A               	movf	___fladd@a,w
  6154  1391  07D6               	addwf	___fladd@b,f
  6155  1392  085B               	movf	___fladd@a+1,w
  6156  1393  1103               	clrz
  6157  1394  1803               	skipnc
  6158  1395  3E01               	addlw	1
  6159  1396  1903               	skipnz
  6160  1397  2B99               	goto	u3541
  6161  1398  07D7               	addwf	___fladd@b+1,f
  6162  1399                     u3541:
  6163  1399  085C               	movf	___fladd@a+2,w
  6164  139A  1103               	clrz
  6165  139B  1803               	skipnc
  6166  139C  3E01               	addlw	1
  6167  139D  1903               	skipnz
  6168  139E  2BA0               	goto	u3542
  6169  139F  07D8               	addwf	___fladd@b+2,f
  6170  13A0                     u3542:
  6171  13A0  085D               	movf	___fladd@a+3,w
  6172  13A1  1103               	clrz
  6173  13A2  1803               	skipnc
  6174  13A3  3E01               	addlw	1
  6175  13A4  1903               	skipnz
  6176  13A5  2BA7               	goto	u3543
  6177  13A6  07D9               	addwf	___fladd@b+3,f
  6178  13A7                     u3543:
  6179  13A7                     l2607:
  6180  13A7  1C59               	btfss	___fladd@b+3,0
  6181  13A8  2BAA               	goto	u3551
  6182  13A9  2BAB               	goto	u3550
  6183  13AA                     u3551:
  6184  13AA  2C81               	goto	l2657
  6185  13AB                     u3550:
  6186  13AB                     l2609:
  6187  13AB  1C69               	btfss	___fladd@grs,0
  6188  13AC  2BAE               	goto	u3561
  6189  13AD  2BAF               	goto	u3560
  6190  13AE                     u3561:
  6191  13AE  2BB8               	goto	l2613
  6192  13AF                     u3560:
  6193  13AF                     l2611:
  6194  13AF  0869               	movf	___fladd@grs,w
  6195  13B0  00DE               	movwf	??___fladd
  6196  13B1  1003               	clrc
  6197  13B2  0C5E               	rrf	??___fladd,w
  6198  13B3  3801               	iorlw	1
  6199  13B4  00DF               	movwf	??___fladd+1
  6200  13B5  085F               	movf	??___fladd+1,w
  6201  13B6  00E9               	movwf	___fladd@grs
  6202  13B7  2BBA               	goto	l2615
  6203  13B8                     l2613:
  6204  13B8  1003               	clrc
  6205  13B9  0CE9               	rrf	___fladd@grs,f
  6206  13BA                     l2615:
  6207  13BA  1C56               	btfss	___fladd@b,0
  6208  13BB  2BBD               	goto	u3571
  6209  13BC  2BBE               	goto	u3570
  6210  13BD                     u3571:
  6211  13BD  2BBF               	goto	l2619
  6212  13BE                     u3570:
  6213  13BE                     l2617:
  6214  13BE  17E9               	bsf	___fladd@grs,7
  6215  13BF                     l2619:
  6216  13BF  3001               	movlw	1
  6217  13C0  00DE               	movwf	??___fladd
  6218  13C1                     u3585:
  6219  13C1  0D59               	rlf	___fladd@b+3,w
  6220  13C2  0CD9               	rrf	___fladd@b+3,f
  6221  13C3  0CD8               	rrf	___fladd@b+2,f
  6222  13C4  0CD7               	rrf	___fladd@b+1,f
  6223  13C5  0CD6               	rrf	___fladd@b,f
  6224  13C6  0BDE               	decfsz	??___fladd& (0+127),f
  6225  13C7  2BC1               	goto	u3585
  6226  13C8                     l2621:
  6227  13C8  3001               	movlw	1
  6228  13C9  00DE               	movwf	??___fladd
  6229  13CA  085E               	movf	??___fladd,w
  6230  13CB  07E8               	addwf	___fladd@bexp,f
  6231  13CC  2C81               	goto	l2657
  6232  13CD                     l2623:
  6233  13CD  0859               	movf	___fladd@b+3,w
  6234  13CE  3A80               	xorlw	128
  6235  13CF  00FF               	movwf	btemp+1
  6236  13D0  085D               	movf	___fladd@a+3,w
  6237  13D1  3A80               	xorlw	128
  6238  13D2  027F               	subwf	btemp+1,w
  6239  13D3  1D03               	skipz
  6240  13D4  2BDF               	goto	u3593
  6241  13D5  085C               	movf	___fladd@a+2,w
  6242  13D6  0258               	subwf	___fladd@b+2,w
  6243  13D7  1D03               	skipz
  6244  13D8  2BDF               	goto	u3593
  6245  13D9  085B               	movf	___fladd@a+1,w
  6246  13DA  0257               	subwf	___fladd@b+1,w
  6247  13DB  1D03               	skipz
  6248  13DC  2BDF               	goto	u3593
  6249  13DD  085A               	movf	___fladd@a,w
  6250  13DE  0256               	subwf	___fladd@b,w
  6251  13DF                     u3593:
  6252  13DF  1803               	skipnc
  6253  13E0  2BE2               	goto	u3591
  6254  13E1  2BE3               	goto	u3590
  6255  13E2                     u3591:
  6256  13E2  2C3B               	goto	l2633
  6257  13E3                     u3590:
  6258  13E3                     l2625:
  6259  13E3  30FF               	movlw	255
  6260  13E4  00DE               	movwf	??___fladd
  6261  13E5  30FF               	movlw	255
  6262  13E6  00DF               	movwf	??___fladd+1
  6263  13E7  30FF               	movlw	255
  6264  13E8  00E0               	movwf	??___fladd+2
  6265  13E9  30FF               	movlw	255
  6266  13EA  00E1               	movwf	??___fladd+3
  6267  13EB  085A               	movf	___fladd@a,w
  6268  13EC  00E2               	movwf	??___fladd+4
  6269  13ED  085B               	movf	___fladd@a+1,w
  6270  13EE  00E3               	movwf	??___fladd+5
  6271  13EF  085C               	movf	___fladd@a+2,w
  6272  13F0  00E4               	movwf	??___fladd+6
  6273  13F1  085D               	movf	___fladd@a+3,w
  6274  13F2  00E5               	movwf	??___fladd+7
  6275  13F3  0856               	movf	___fladd@b,w
  6276  13F4  02E2               	subwf	??___fladd+4,f
  6277  13F5  0857               	movf	___fladd@b+1,w
  6278  13F6  1C03               	skipc
  6279  13F7  0F57               	incfsz	___fladd@b+1,w
  6280  13F8  2BFA               	goto	u3601
  6281  13F9  2BFB               	goto	u3602
  6282  13FA                     u3601:
  6283  13FA  02E3               	subwf	??___fladd+5,f
  6284  13FB                     u3602:
  6285  13FB  0858               	movf	___fladd@b+2,w
  6286  13FC  1C03               	skipc
  6287  13FD  0F58               	incfsz	___fladd@b+2,w
  6288  13FE  2C00               	goto	u3603
  6289  13FF  2C01               	goto	u3604
  6290  1400                     u3603:
  6291  1400  02E4               	subwf	??___fladd+6,f
  6292  1401                     u3604:
  6293  1401  0859               	movf	___fladd@b+3,w
  6294  1402  1C03               	skipc
  6295  1403  0F59               	incfsz	___fladd@b+3,w
  6296  1404  2C06               	goto	u3605
  6297  1405  2C07               	goto	u3606
  6298  1406                     u3605:
  6299  1406  02E5               	subwf	??___fladd+7,f
  6300  1407                     u3606:
  6301  1407  0862               	movf	??___fladd+4,w
  6302  1408  07DE               	addwf	??___fladd,f
  6303  1409  0863               	movf	??___fladd+5,w
  6304  140A  1803               	skipnc
  6305  140B  0F63               	incfsz	??___fladd+5,w
  6306  140C  2C0E               	goto	u3610
  6307  140D  2C0F               	goto	u3611
  6308  140E                     u3610:
  6309  140E  07DF               	addwf	??___fladd+1,f
  6310  140F                     u3611:
  6311  140F  0864               	movf	??___fladd+6,w
  6312  1410  1803               	skipnc
  6313  1411  0F64               	incfsz	??___fladd+6,w
  6314  1412  2C14               	goto	u3612
  6315  1413  2C15               	goto	u3613
  6316  1414                     u3612:
  6317  1414  07E0               	addwf	??___fladd+2,f
  6318  1415                     u3613:
  6319  1415  0865               	movf	??___fladd+7,w
  6320  1416  1803               	skipnc
  6321  1417  0A65               	incf	??___fladd+7,w
  6322  1418  07E1               	addwf	??___fladd+3,f
  6323  1419  0861               	movf	??___fladd+3,w
  6324  141A  00D9               	movwf	___fladd@b+3
  6325  141B  0860               	movf	??___fladd+2,w
  6326  141C  00D8               	movwf	___fladd@b+2
  6327  141D  085F               	movf	??___fladd+1,w
  6328  141E  00D7               	movwf	___fladd@b+1
  6329  141F  085E               	movf	??___fladd,w
  6330  1420  00D6               	movwf	___fladd@b
  6331  1421                     l2627:
  6332  1421  3080               	movlw	128
  6333  1422  00DE               	movwf	??___fladd
  6334  1423  085E               	movf	??___fladd,w
  6335  1424  06E6               	xorwf	___fladd@signs,f
  6336  1425  09E9               	comf	___fladd@grs,f
  6337  1426  0AE9               	incf	___fladd@grs,f
  6338  1427                     l2629:
  6339  1427  0869               	movf	___fladd@grs,w
  6340  1428  1D03               	btfss	3,2
  6341  1429  2C2B               	goto	u3621
  6342  142A  2C2C               	goto	u3620
  6343  142B                     u3621:
  6344  142B  2C49               	goto	l772
  6345  142C                     u3620:
  6346  142C                     l2631:
  6347  142C  3001               	movlw	1
  6348  142D  07D6               	addwf	___fladd@b,f
  6349  142E  3000               	movlw	0
  6350  142F  1803               	skipnc
  6351  1430  3001               	movlw	1
  6352  1431  07D7               	addwf	___fladd@b+1,f
  6353  1432  3000               	movlw	0
  6354  1433  1803               	skipnc
  6355  1434  3001               	movlw	1
  6356  1435  07D8               	addwf	___fladd@b+2,f
  6357  1436  3000               	movlw	0
  6358  1437  1803               	skipnc
  6359  1438  3001               	movlw	1
  6360  1439  07D9               	addwf	___fladd@b+3,f
  6361  143A  2C49               	goto	l772
  6362  143B                     l2633:
  6363  143B  085A               	movf	___fladd@a,w
  6364  143C  02D6               	subwf	___fladd@b,f
  6365  143D  085B               	movf	___fladd@a+1,w
  6366  143E  1C03               	skipc
  6367  143F  0F5B               	incfsz	___fladd@a+1,w
  6368  1440  02D7               	subwf	___fladd@b+1,f
  6369  1441  085C               	movf	___fladd@a+2,w
  6370  1442  1C03               	skipc
  6371  1443  0F5C               	incfsz	___fladd@a+2,w
  6372  1444  02D8               	subwf	___fladd@b+2,f
  6373  1445  085D               	movf	___fladd@a+3,w
  6374  1446  1C03               	skipc
  6375  1447  0F5D               	incfsz	___fladd@a+3,w
  6376  1448  02D9               	subwf	___fladd@b+3,f
  6377  1449                     l772:
  6378  1449  0859               	movf	___fladd@b+3,w
  6379  144A  0458               	iorwf	___fladd@b+2,w
  6380  144B  0457               	iorwf	___fladd@b+1,w
  6381  144C  0456               	iorwf	___fladd@b,w
  6382  144D  1D03               	skipz
  6383  144E  2C50               	goto	u3631
  6384  144F  2C51               	goto	u3630
  6385  1450                     u3631:
  6386  1450  2C7D               	goto	l2655
  6387  1451                     u3630:
  6388  1451                     l2635:
  6389  1451  0869               	movf	___fladd@grs,w
  6390  1452  1D03               	btfss	3,2
  6391  1453  2C55               	goto	u3641
  6392  1454  2C56               	goto	u3640
  6393  1455                     u3641:
  6394  1455  2C7D               	goto	l2655
  6395  1456                     u3640:
  6396  1456                     l2637:
  6397  1456  3000               	movlw	0
  6398  1457  00D9               	movwf	?___fladd+3
  6399  1458  3000               	movlw	0
  6400  1459  00D8               	movwf	?___fladd+2
  6401  145A  3000               	movlw	0
  6402  145B  00D7               	movwf	?___fladd+1
  6403  145C  3000               	movlw	0
  6404  145D  00D6               	movwf	?___fladd
  6405  145E  2CFB               	goto	l764
  6406  145F                     l2641:
  6407  145F  3001               	movlw	1
  6408  1460  00DE               	movwf	??___fladd
  6409  1461                     u3655:
  6410  1461  1003               	clrc
  6411  1462  0DD6               	rlf	___fladd@b,f
  6412  1463  0DD7               	rlf	___fladd@b+1,f
  6413  1464  0DD8               	rlf	___fladd@b+2,f
  6414  1465  0DD9               	rlf	___fladd@b+3,f
  6415  1466  0BDE               	decfsz	??___fladd,f
  6416  1467  2C61               	goto	u3655
  6417  1468                     l2643:
  6418  1468  1FE9               	btfss	___fladd@grs,7
  6419  1469  2C6B               	goto	u3661
  6420  146A  2C6C               	goto	u3660
  6421  146B                     u3661:
  6422  146B  2C6D               	goto	l776
  6423  146C                     u3660:
  6424  146C                     l2645:
  6425  146C  1456               	bsf	___fladd@b,0
  6426  146D                     l776:
  6427  146D  1C69               	btfss	___fladd@grs,0
  6428  146E  2C70               	goto	u3671
  6429  146F  2C71               	goto	u3670
  6430  1470                     u3671:
  6431  1470  2C74               	goto	l2649
  6432  1471                     u3670:
  6433  1471                     l2647:
  6434  1471  1403               	setc
  6435  1472  0DE9               	rlf	___fladd@grs,f
  6436  1473  2C76               	goto	l2651
  6437  1474                     l2649:
  6438  1474  1003               	clrc
  6439  1475  0DE9               	rlf	___fladd@grs,f
  6440  1476                     l2651:
  6441  1476  0868               	movf	___fladd@bexp,w
  6442  1477  1903               	btfsc	3,2
  6443  1478  2C7A               	goto	u3681
  6444  1479  2C7B               	goto	u3680
  6445  147A                     u3681:
  6446  147A  2C7D               	goto	l2655
  6447  147B                     u3680:
  6448  147B                     l2653:
  6449  147B  3001               	movlw	1
  6450  147C  02E8               	subwf	___fladd@bexp,f
  6451  147D                     l2655:
  6452  147D  1FD8               	btfss	___fladd@b+2,7
  6453  147E  2C80               	goto	u3691
  6454  147F  2C81               	goto	u3690
  6455  1480                     u3691:
  6456  1480  2C5F               	goto	l2641
  6457  1481                     u3690:
  6458  1481                     l2657:
  6459  1481  01E7               	clrf	___fladd@aexp
  6460  1482                     l2659:
  6461  1482  1FE9               	btfss	___fladd@grs,7
  6462  1483  2C85               	goto	u3701
  6463  1484  2C86               	goto	u3700
  6464  1485                     u3701:
  6465  1485  2C94               	goto	l2667
  6466  1486                     u3700:
  6467  1486                     l2661:
  6468  1486  0869               	movf	___fladd@grs,w
  6469  1487  397F               	andlw	127
  6470  1488  1903               	btfsc	3,2
  6471  1489  2C8B               	goto	u3711
  6472  148A  2C8C               	goto	u3710
  6473  148B                     u3711:
  6474  148B  2C8F               	goto	l782
  6475  148C                     u3710:
  6476  148C                     l2663:
  6477  148C  01E7               	clrf	___fladd@aexp
  6478  148D  0AE7               	incf	___fladd@aexp,f
  6479  148E  2C94               	goto	l2667
  6480  148F                     l782:
  6481  148F  1C56               	btfss	___fladd@b,0
  6482  1490  2C92               	goto	u3721
  6483  1491  2C93               	goto	u3720
  6484  1492                     u3721:
  6485  1492  2C94               	goto	l2667
  6486  1493                     u3720:
  6487  1493  2C8C               	goto	l2663
  6488  1494                     l2667:
  6489  1494  0867               	movf	___fladd@aexp,w
  6490  1495  1903               	btfsc	3,2
  6491  1496  2C98               	goto	u3731
  6492  1497  2C99               	goto	u3730
  6493  1498                     u3731:
  6494  1498  2CCD               	goto	l785
  6495  1499                     u3730:
  6496  1499                     l2669:
  6497  1499  3001               	movlw	1
  6498  149A  07D6               	addwf	___fladd@b,f
  6499  149B  3000               	movlw	0
  6500  149C  1803               	skipnc
  6501  149D  3001               	movlw	1
  6502  149E  07D7               	addwf	___fladd@b+1,f
  6503  149F  3000               	movlw	0
  6504  14A0  1803               	skipnc
  6505  14A1  3001               	movlw	1
  6506  14A2  07D8               	addwf	___fladd@b+2,f
  6507  14A3  3000               	movlw	0
  6508  14A4  1803               	skipnc
  6509  14A5  3001               	movlw	1
  6510  14A6  07D9               	addwf	___fladd@b+3,f
  6511  14A7                     l2671:
  6512  14A7  1C59               	btfss	___fladd@b+3,0
  6513  14A8  2CAA               	goto	u3741
  6514  14A9  2CAB               	goto	u3740
  6515  14AA                     u3741:
  6516  14AA  2CCD               	goto	l785
  6517  14AB                     u3740:
  6518  14AB                     l2673:
  6519  14AB  0856               	movf	___fladd@b,w
  6520  14AC  00DE               	movwf	??___fladd
  6521  14AD  0857               	movf	___fladd@b+1,w
  6522  14AE  00DF               	movwf	??___fladd+1
  6523  14AF  0858               	movf	___fladd@b+2,w
  6524  14B0  00E0               	movwf	??___fladd+2
  6525  14B1  0859               	movf	___fladd@b+3,w
  6526  14B2  00E1               	movwf	??___fladd+3
  6527  14B3  3001               	movlw	1
  6528  14B4  00E2               	movwf	??___fladd+4
  6529  14B5                     u3755:
  6530  14B5  0D61               	rlf	??___fladd+3,w
  6531  14B6  0CE1               	rrf	??___fladd+3,f
  6532  14B7  0CE0               	rrf	??___fladd+2,f
  6533  14B8  0CDF               	rrf	??___fladd+1,f
  6534  14B9  0CDE               	rrf	??___fladd,f
  6535  14BA                     u3750:
  6536  14BA  0BE2               	decfsz	??___fladd+4,f
  6537  14BB  2CB5               	goto	u3755
  6538  14BC  0861               	movf	??___fladd+3,w
  6539  14BD  00D9               	movwf	___fladd@b+3
  6540  14BE  0860               	movf	??___fladd+2,w
  6541  14BF  00D8               	movwf	___fladd@b+2
  6542  14C0  085F               	movf	??___fladd+1,w
  6543  14C1  00D7               	movwf	___fladd@b+1
  6544  14C2  085E               	movf	??___fladd,w
  6545  14C3  00D6               	movwf	___fladd@b
  6546  14C4  0A68               	incf	___fladd@bexp,w
  6547  14C5  1903               	btfsc	3,2
  6548  14C6  2CC8               	goto	u3761
  6549  14C7  2CC9               	goto	u3760
  6550  14C8                     u3761:
  6551  14C8  2CCD               	goto	l785
  6552  14C9                     u3760:
  6553  14C9                     l2675:
  6554  14C9  3001               	movlw	1
  6555  14CA  00DE               	movwf	??___fladd
  6556  14CB  085E               	movf	??___fladd,w
  6557  14CC  07E8               	addwf	___fladd@bexp,f
  6558  14CD                     l785:
  6559  14CD  0A68               	incf	___fladd@bexp,w
  6560  14CE  1903               	btfsc	3,2
  6561  14CF  2CD1               	goto	u3771
  6562  14D0  2CD2               	goto	u3770
  6563  14D1                     u3771:
  6564  14D1  2CD7               	goto	l2679
  6565  14D2                     u3770:
  6566  14D2                     l2677:
  6567  14D2  0868               	movf	___fladd@bexp,w
  6568  14D3  1D03               	btfss	3,2
  6569  14D4  2CD6               	goto	u3781
  6570  14D5  2CD7               	goto	u3780
  6571  14D6                     u3781:
  6572  14D6  2CE5               	goto	l2685
  6573  14D7                     u3780:
  6574  14D7                     l2679:
  6575  14D7  3000               	movlw	0
  6576  14D8  00D9               	movwf	___fladd@b+3
  6577  14D9  3000               	movlw	0
  6578  14DA  00D8               	movwf	___fladd@b+2
  6579  14DB  3000               	movlw	0
  6580  14DC  00D7               	movwf	___fladd@b+1
  6581  14DD  3000               	movlw	0
  6582  14DE  00D6               	movwf	___fladd@b
  6583  14DF                     l2681:
  6584  14DF  0868               	movf	___fladd@bexp,w
  6585  14E0  1D03               	btfss	3,2
  6586  14E1  2CE3               	goto	u3791
  6587  14E2  2CE4               	goto	u3790
  6588  14E3                     u3791:
  6589  14E3  2CE5               	goto	l2685
  6590  14E4                     u3790:
  6591  14E4                     l2683:
  6592  14E4  01E6               	clrf	___fladd@signs
  6593  14E5                     l2685:
  6594  14E5  1C68               	btfss	___fladd@bexp,0
  6595  14E6  2CE8               	goto	u3801
  6596  14E7  2CE9               	goto	u3800
  6597  14E8                     u3801:
  6598  14E8  2CEB               	goto	l2689
  6599  14E9                     u3800:
  6600  14E9                     l2687:
  6601  14E9  17D8               	bsf	___fladd@b+2,7
  6602  14EA  2CEF               	goto	l793
  6603  14EB                     l2689:
  6604  14EB  307F               	movlw	127
  6605  14EC  00DE               	movwf	??___fladd
  6606  14ED  085E               	movf	??___fladd,w
  6607  14EE  05D8               	andwf	___fladd@b+2,f
  6608  14EF                     l793:
  6609  14EF  0868               	movf	___fladd@bexp,w
  6610  14F0  00DE               	movwf	??___fladd
  6611  14F1  1003               	clrc
  6612  14F2  0C5E               	rrf	??___fladd,w
  6613  14F3  00DF               	movwf	??___fladd+1
  6614  14F4  085F               	movf	??___fladd+1,w
  6615  14F5  00D9               	movwf	___fladd@b+3
  6616  14F6                     l2691:
  6617  14F6  1FE6               	btfss	___fladd@signs,7
  6618  14F7  2CF9               	goto	u3811
  6619  14F8  2CFA               	goto	u3810
  6620  14F9                     u3811:
  6621  14F9  2CFB               	goto	l794
  6622  14FA                     u3810:
  6623  14FA                     l2693:
  6624  14FA  17D9               	bsf	___fladd@b+3,7
  6625  14FB                     l794:
  6626  14FB                     l764:
  6627  14FB  0008               	return
  6628  14FC                     __end_of___fladd:
  6629                           
  6630                           	psect	text17
  6631  199A                     __ptext17:	
  6632 ;; *************** function ___flneg *****************
  6633 ;; Defined at:
  6634 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;  f1              4    3[COMMON] unsigned char 
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;		None
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  4    3[COMMON] unsigned char 
  6641 ;; Registers used:
  6642 ;;		wreg
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6648 ;;      Params:         4       0       0       0       0
  6649 ;;      Locals:         0       0       0       0       0
  6650 ;;      Temps:          0       0       0       0       0
  6651 ;;      Totals:         4       0       0       0       0
  6652 ;;Total ram usage:        4 bytes
  6653 ;; Hardware stack levels used:    1
  6654 ;; Hardware stack levels required when called:    2
  6655 ;; This function calls:
  6656 ;;		Nothing
  6657 ;; This function is called by:
  6658 ;;		_sprintf
  6659 ;; This function uses a non-reentrant model
  6660 ;;
  6661                           
  6662                           
  6663                           ;psect for function ___flneg
  6664  199A                     ___flneg:
  6665  199A                     l3105:	
  6666                           ;incstack = 0
  6667                           ; Regs used in ___flneg: [wreg]
  6668                           
  6669  199A  0876               	movf	___flneg@f1+3,w
  6670  199B  0475               	iorwf	___flneg@f1+2,w
  6671  199C  0474               	iorwf	___flneg@f1+1,w
  6672  199D  0473               	iorwf	___flneg@f1,w
  6673  199E  1903               	skipnz
  6674  199F  29A1               	goto	u4941
  6675  19A0  29A2               	goto	u4940
  6676  19A1                     u4941:
  6677  19A1  29A4               	goto	l3109
  6678  19A2                     u4940:
  6679  19A2                     l3107:
  6680  19A2  3080               	movlw	128
  6681  19A3  06F6               	xorwf	___flneg@f1+3,f
  6682  19A4                     l3109:
  6683  19A4                     l623:
  6684  19A4  0008               	return
  6685  19A5                     __end_of___flneg:
  6686                           
  6687                           	psect	text18
  6688  1EA0                     __ptext18:	
  6689 ;; *************** function ___flge *****************
  6690 ;; Defined at:
  6691 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6692 ;; Parameters:    Size  Location     Type
  6693 ;;  ff1             4    3[COMMON] unsigned char 
  6694 ;;  ff2             4    7[COMMON] unsigned char 
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;		None
  6697 ;; Return value:  Size  Location     Type
  6698 ;;		None               void
  6699 ;; Registers used:
  6700 ;;		wreg, status,2, status,0
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6706 ;;      Params:         8       0       0       0       0
  6707 ;;      Locals:         0       0       0       0       0
  6708 ;;      Temps:          0       4       0       0       0
  6709 ;;      Totals:         8       4       0       0       0
  6710 ;;Total ram usage:       12 bytes
  6711 ;; Hardware stack levels used:    1
  6712 ;; Hardware stack levels required when called:    2
  6713 ;; This function calls:
  6714 ;;		Nothing
  6715 ;; This function is called by:
  6716 ;;		_sprintf
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           
  6721                           ;psect for function ___flge
  6722  1EA0                     ___flge:
  6723  1EA0                     l3085:	
  6724                           ;incstack = 0
  6725                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6726                           
  6727  1EA0  3000               	movlw	0
  6728  1EA1  0573               	andwf	___flge@ff1,w
  6729  1EA2  1283               	bcf	3,5	;RP0=0, select bank0
  6730  1EA3  1303               	bcf	3,6	;RP1=0, select bank0
  6731  1EA4  00A0               	movwf	??___flge
  6732  1EA5  3000               	movlw	0
  6733  1EA6  0574               	andwf	___flge@ff1+1,w
  6734  1EA7  00A1               	movwf	??___flge+1
  6735  1EA8  3080               	movlw	128
  6736  1EA9  0575               	andwf	___flge@ff1+2,w
  6737  1EAA  00A2               	movwf	??___flge+2
  6738  1EAB  307F               	movlw	127
  6739  1EAC  0576               	andwf	___flge@ff1+3,w
  6740  1EAD  00A3               	movwf	??___flge+3
  6741  1EAE  0823               	movf	??___flge+3,w
  6742  1EAF  0422               	iorwf	??___flge+2,w
  6743  1EB0  0421               	iorwf	??___flge+1,w
  6744  1EB1  0420               	iorwf	??___flge,w
  6745  1EB2  1D03               	skipz
  6746  1EB3  2EB5               	goto	u4871
  6747  1EB4  2EB6               	goto	u4870
  6748  1EB5                     u4871:
  6749  1EB5  2EBE               	goto	l615
  6750  1EB6                     u4870:
  6751  1EB6                     l3087:
  6752  1EB6  3000               	movlw	0
  6753  1EB7  00F6               	movwf	___flge@ff1+3
  6754  1EB8  3000               	movlw	0
  6755  1EB9  00F5               	movwf	___flge@ff1+2
  6756  1EBA  3000               	movlw	0
  6757  1EBB  00F4               	movwf	___flge@ff1+1
  6758  1EBC  3000               	movlw	0
  6759  1EBD  00F3               	movwf	___flge@ff1
  6760  1EBE                     l615:
  6761  1EBE  3000               	movlw	0
  6762  1EBF  0577               	andwf	___flge@ff2,w
  6763  1EC0  00A0               	movwf	??___flge
  6764  1EC1  3000               	movlw	0
  6765  1EC2  0578               	andwf	___flge@ff2+1,w
  6766  1EC3  00A1               	movwf	??___flge+1
  6767  1EC4  3080               	movlw	128
  6768  1EC5  0579               	andwf	___flge@ff2+2,w
  6769  1EC6  00A2               	movwf	??___flge+2
  6770  1EC7  307F               	movlw	127
  6771  1EC8  057A               	andwf	___flge@ff2+3,w
  6772  1EC9  00A3               	movwf	??___flge+3
  6773  1ECA  0823               	movf	??___flge+3,w
  6774  1ECB  0422               	iorwf	??___flge+2,w
  6775  1ECC  0421               	iorwf	??___flge+1,w
  6776  1ECD  0420               	iorwf	??___flge,w
  6777  1ECE  1D03               	skipz
  6778  1ECF  2ED1               	goto	u4881
  6779  1ED0  2ED2               	goto	u4880
  6780  1ED1                     u4881:
  6781  1ED1  2EDA               	goto	l3091
  6782  1ED2                     u4880:
  6783  1ED2                     l3089:
  6784  1ED2  3000               	movlw	0
  6785  1ED3  00FA               	movwf	___flge@ff2+3
  6786  1ED4  3000               	movlw	0
  6787  1ED5  00F9               	movwf	___flge@ff2+2
  6788  1ED6  3000               	movlw	0
  6789  1ED7  00F8               	movwf	___flge@ff2+1
  6790  1ED8  3000               	movlw	0
  6791  1ED9  00F7               	movwf	___flge@ff2
  6792  1EDA                     l3091:
  6793  1EDA  1FF6               	btfss	___flge@ff1+3,7
  6794  1EDB  2EDD               	goto	u4891
  6795  1EDC  2EDE               	goto	u4890
  6796  1EDD                     u4891:
  6797  1EDD  2F02               	goto	l3095
  6798  1EDE                     u4890:
  6799  1EDE                     l3093:
  6800  1EDE  3000               	movlw	0
  6801  1EDF  00A0               	movwf	??___flge
  6802  1EE0  3000               	movlw	0
  6803  1EE1  00A1               	movwf	??___flge+1
  6804  1EE2  3000               	movlw	0
  6805  1EE3  00A2               	movwf	??___flge+2
  6806  1EE4  3080               	movlw	128
  6807  1EE5  00A3               	movwf	??___flge+3
  6808  1EE6  0873               	movf	___flge@ff1,w
  6809  1EE7  02A0               	subwf	??___flge,f
  6810  1EE8  0874               	movf	___flge@ff1+1,w
  6811  1EE9  1C03               	skipc
  6812  1EEA  0F74               	incfsz	___flge@ff1+1,w
  6813  1EEB  2EED               	goto	u4901
  6814  1EEC  2EEE               	goto	u4902
  6815  1EED                     u4901:
  6816  1EED  02A1               	subwf	??___flge+1,f
  6817  1EEE                     u4902:
  6818  1EEE  0875               	movf	___flge@ff1+2,w
  6819  1EEF  1C03               	skipc
  6820  1EF0  0F75               	incfsz	___flge@ff1+2,w
  6821  1EF1  2EF3               	goto	u4903
  6822  1EF2  2EF4               	goto	u4904
  6823  1EF3                     u4903:
  6824  1EF3  02A2               	subwf	??___flge+2,f
  6825  1EF4                     u4904:
  6826  1EF4  0876               	movf	___flge@ff1+3,w
  6827  1EF5  1C03               	skipc
  6828  1EF6  0F76               	incfsz	___flge@ff1+3,w
  6829  1EF7  2EF9               	goto	u4905
  6830  1EF8  2EFA               	goto	u4906
  6831  1EF9                     u4905:
  6832  1EF9  02A3               	subwf	??___flge+3,f
  6833  1EFA                     u4906:
  6834  1EFA  0823               	movf	??___flge+3,w
  6835  1EFB  00F6               	movwf	___flge@ff1+3
  6836  1EFC  0822               	movf	??___flge+2,w
  6837  1EFD  00F5               	movwf	___flge@ff1+2
  6838  1EFE  0821               	movf	??___flge+1,w
  6839  1EFF  00F4               	movwf	___flge@ff1+1
  6840  1F00  0820               	movf	??___flge,w
  6841  1F01  00F3               	movwf	___flge@ff1
  6842  1F02                     l3095:
  6843  1F02  1FFA               	btfss	___flge@ff2+3,7
  6844  1F03  2F05               	goto	u4911
  6845  1F04  2F06               	goto	u4910
  6846  1F05                     u4911:
  6847  1F05  2F2A               	goto	l618
  6848  1F06                     u4910:
  6849  1F06                     l3097:
  6850  1F06  3000               	movlw	0
  6851  1F07  00A0               	movwf	??___flge
  6852  1F08  3000               	movlw	0
  6853  1F09  00A1               	movwf	??___flge+1
  6854  1F0A  3000               	movlw	0
  6855  1F0B  00A2               	movwf	??___flge+2
  6856  1F0C  3080               	movlw	128
  6857  1F0D  00A3               	movwf	??___flge+3
  6858  1F0E  0877               	movf	___flge@ff2,w
  6859  1F0F  02A0               	subwf	??___flge,f
  6860  1F10  0878               	movf	___flge@ff2+1,w
  6861  1F11  1C03               	skipc
  6862  1F12  0F78               	incfsz	___flge@ff2+1,w
  6863  1F13  2F15               	goto	u4921
  6864  1F14  2F16               	goto	u4922
  6865  1F15                     u4921:
  6866  1F15  02A1               	subwf	??___flge+1,f
  6867  1F16                     u4922:
  6868  1F16  0879               	movf	___flge@ff2+2,w
  6869  1F17  1C03               	skipc
  6870  1F18  0F79               	incfsz	___flge@ff2+2,w
  6871  1F19  2F1B               	goto	u4923
  6872  1F1A  2F1C               	goto	u4924
  6873  1F1B                     u4923:
  6874  1F1B  02A2               	subwf	??___flge+2,f
  6875  1F1C                     u4924:
  6876  1F1C  087A               	movf	___flge@ff2+3,w
  6877  1F1D  1C03               	skipc
  6878  1F1E  0F7A               	incfsz	___flge@ff2+3,w
  6879  1F1F  2F21               	goto	u4925
  6880  1F20  2F22               	goto	u4926
  6881  1F21                     u4925:
  6882  1F21  02A3               	subwf	??___flge+3,f
  6883  1F22                     u4926:
  6884  1F22  0823               	movf	??___flge+3,w
  6885  1F23  00FA               	movwf	___flge@ff2+3
  6886  1F24  0822               	movf	??___flge+2,w
  6887  1F25  00F9               	movwf	___flge@ff2+2
  6888  1F26  0821               	movf	??___flge+1,w
  6889  1F27  00F8               	movwf	___flge@ff2+1
  6890  1F28  0820               	movf	??___flge,w
  6891  1F29  00F7               	movwf	___flge@ff2
  6892  1F2A                     l618:
  6893  1F2A  3080               	movlw	128
  6894  1F2B  06F6               	xorwf	___flge@ff1+3,f
  6895  1F2C  3080               	movlw	128
  6896  1F2D  06FA               	xorwf	___flge@ff2+3,f
  6897  1F2E  087A               	movf	___flge@ff2+3,w
  6898  1F2F  0276               	subwf	___flge@ff1+3,w
  6899  1F30  1D03               	skipz
  6900  1F31  2F3C               	goto	u4935
  6901  1F32  0879               	movf	___flge@ff2+2,w
  6902  1F33  0275               	subwf	___flge@ff1+2,w
  6903  1F34  1D03               	skipz
  6904  1F35  2F3C               	goto	u4935
  6905  1F36  0878               	movf	___flge@ff2+1,w
  6906  1F37  0274               	subwf	___flge@ff1+1,w
  6907  1F38  1D03               	skipz
  6908  1F39  2F3C               	goto	u4935
  6909  1F3A  0877               	movf	___flge@ff2,w
  6910  1F3B  0273               	subwf	___flge@ff1,w
  6911  1F3C                     u4935:
  6912  1F3C  1803               	skipnc
  6913  1F3D  2F3F               	goto	u4931
  6914  1F3E  2F40               	goto	u4930
  6915  1F3F                     u4931:
  6916  1F3F  2F42               	goto	l3101
  6917  1F40                     u4930:
  6918  1F40                     l3099:
  6919  1F40  1003               	clrc
  6920  1F41  2F43               	goto	l619
  6921  1F42                     l3101:
  6922  1F42  1403               	setc
  6923  1F43                     l619:
  6924  1F43  0008               	return
  6925  1F44                     __end_of___flge:
  6926                           
  6927                           	psect	text19
  6928  1C54                     __ptext19:	
  6929 ;; *************** function ___fleq *****************
  6930 ;; Defined at:
  6931 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  ff1             4    3[COMMON] unsigned char 
  6934 ;;  ff2             4    7[COMMON] unsigned char 
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;		None
  6937 ;; Return value:  Size  Location     Type
  6938 ;;		None               void
  6939 ;; Registers used:
  6940 ;;		wreg, status,2, status,0
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6946 ;;      Params:         8       0       0       0       0
  6947 ;;      Locals:         0       0       0       0       0
  6948 ;;      Temps:          0       4       0       0       0
  6949 ;;      Totals:         8       4       0       0       0
  6950 ;;Total ram usage:       12 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; Hardware stack levels required when called:    2
  6953 ;; This function calls:
  6954 ;;		Nothing
  6955 ;; This function is called by:
  6956 ;;		_sprintf
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           
  6960                           
  6961                           ;psect for function ___fleq
  6962  1C54                     ___fleq:
  6963  1C54                     l3073:	
  6964                           ;incstack = 0
  6965                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6966                           
  6967  1C54  3000               	movlw	0
  6968  1C55  0573               	andwf	___fleq@ff1,w
  6969  1C56  1283               	bcf	3,5	;RP0=0, select bank0
  6970  1C57  1303               	bcf	3,6	;RP1=0, select bank0
  6971  1C58  00A0               	movwf	??___fleq
  6972  1C59  3000               	movlw	0
  6973  1C5A  0574               	andwf	___fleq@ff1+1,w
  6974  1C5B  00A1               	movwf	??___fleq+1
  6975  1C5C  3080               	movlw	128
  6976  1C5D  0575               	andwf	___fleq@ff1+2,w
  6977  1C5E  00A2               	movwf	??___fleq+2
  6978  1C5F  307F               	movlw	127
  6979  1C60  0576               	andwf	___fleq@ff1+3,w
  6980  1C61  00A3               	movwf	??___fleq+3
  6981  1C62  0823               	movf	??___fleq+3,w
  6982  1C63  0422               	iorwf	??___fleq+2,w
  6983  1C64  0421               	iorwf	??___fleq+1,w
  6984  1C65  0420               	iorwf	??___fleq,w
  6985  1C66  1D03               	skipz
  6986  1C67  2C69               	goto	u4841
  6987  1C68  2C6A               	goto	u4840
  6988  1C69                     u4841:
  6989  1C69  2C72               	goto	l610
  6990  1C6A                     u4840:
  6991  1C6A                     l3075:
  6992  1C6A  3000               	movlw	0
  6993  1C6B  00F6               	movwf	___fleq@ff1+3
  6994  1C6C  3000               	movlw	0
  6995  1C6D  00F5               	movwf	___fleq@ff1+2
  6996  1C6E  3000               	movlw	0
  6997  1C6F  00F4               	movwf	___fleq@ff1+1
  6998  1C70  3000               	movlw	0
  6999  1C71  00F3               	movwf	___fleq@ff1
  7000  1C72                     l610:
  7001  1C72  3000               	movlw	0
  7002  1C73  0577               	andwf	___fleq@ff2,w
  7003  1C74  00A0               	movwf	??___fleq
  7004  1C75  3000               	movlw	0
  7005  1C76  0578               	andwf	___fleq@ff2+1,w
  7006  1C77  00A1               	movwf	??___fleq+1
  7007  1C78  3080               	movlw	128
  7008  1C79  0579               	andwf	___fleq@ff2+2,w
  7009  1C7A  00A2               	movwf	??___fleq+2
  7010  1C7B  307F               	movlw	127
  7011  1C7C  057A               	andwf	___fleq@ff2+3,w
  7012  1C7D  00A3               	movwf	??___fleq+3
  7013  1C7E  0823               	movf	??___fleq+3,w
  7014  1C7F  0422               	iorwf	??___fleq+2,w
  7015  1C80  0421               	iorwf	??___fleq+1,w
  7016  1C81  0420               	iorwf	??___fleq,w
  7017  1C82  1D03               	skipz
  7018  1C83  2C85               	goto	u4851
  7019  1C84  2C86               	goto	u4850
  7020  1C85                     u4851:
  7021  1C85  2C8E               	goto	l611
  7022  1C86                     u4850:
  7023  1C86                     l3077:
  7024  1C86  3000               	movlw	0
  7025  1C87  00FA               	movwf	___fleq@ff2+3
  7026  1C88  3000               	movlw	0
  7027  1C89  00F9               	movwf	___fleq@ff2+2
  7028  1C8A  3000               	movlw	0
  7029  1C8B  00F8               	movwf	___fleq@ff2+1
  7030  1C8C  3000               	movlw	0
  7031  1C8D  00F7               	movwf	___fleq@ff2
  7032  1C8E                     l611:
  7033  1C8E  087A               	movf	___fleq@ff2+3,w
  7034  1C8F  0676               	xorwf	___fleq@ff1+3,w
  7035  1C90  1D03               	skipz
  7036  1C91  2C9C               	goto	u4865
  7037  1C92  0879               	movf	___fleq@ff2+2,w
  7038  1C93  0675               	xorwf	___fleq@ff1+2,w
  7039  1C94  1D03               	skipz
  7040  1C95  2C9C               	goto	u4865
  7041  1C96  0878               	movf	___fleq@ff2+1,w
  7042  1C97  0674               	xorwf	___fleq@ff1+1,w
  7043  1C98  1D03               	skipz
  7044  1C99  2C9C               	goto	u4865
  7045  1C9A  0877               	movf	___fleq@ff2,w
  7046  1C9B  0673               	xorwf	___fleq@ff1,w
  7047  1C9C                     u4865:
  7048  1C9C  1903               	skipnz
  7049  1C9D  2C9F               	goto	u4861
  7050  1C9E  2CA0               	goto	u4860
  7051  1C9F                     u4861:
  7052  1C9F  2CA2               	goto	l3081
  7053  1CA0                     u4860:
  7054  1CA0                     l3079:
  7055  1CA0  1003               	clrc
  7056  1CA1  2CA3               	goto	l612
  7057  1CA2                     l3081:
  7058  1CA2  1403               	setc
  7059  1CA3                     l612:
  7060  1CA3  0008               	return
  7061  1CA4                     __end_of___fleq:
  7062                           
  7063                           	psect	text20
  7064  1A81                     __ptext20:	
  7065 ;; *************** function _send_crct *****************
  7066 ;; Defined at:
  7067 ;;		line 236 in file "main.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  st              1    wreg     PTR unsigned char 
  7070 ;;		 -> f1(10), 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  st              1    7[COMMON] PTR unsigned char 
  7073 ;;		 -> f1(10), 
  7074 ;;  i               2    5[COMMON] int 
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  1    wreg      void 
  7077 ;; Registers used:
  7078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7084 ;;      Params:         0       0       0       0       0
  7085 ;;      Locals:         3       0       0       0       0
  7086 ;;      Temps:          1       0       0       0       0
  7087 ;;      Totals:         4       0       0       0       0
  7088 ;;Total ram usage:        4 bytes
  7089 ;; Hardware stack levels used:    1
  7090 ;; Hardware stack levels required when called:    3
  7091 ;; This function calls:
  7092 ;;		_send_char
  7093 ;; This function is called by:
  7094 ;;		_main
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           
  7099                           ;psect for function _send_crct
  7100  1A81                     _send_crct:
  7101                           
  7102                           ;incstack = 0
  7103                           ; Regs used in _send_crct: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7104                           ;send_crct@st stored from wreg
  7105  1A81  00F7               	movwf	send_crct@st
  7106  1A82                     l3583:
  7107                           
  7108                           ;main.c: 237:     int i = 0;
  7109  1A82  01F5               	clrf	send_crct@i
  7110  1A83  01F6               	clrf	send_crct@i+1
  7111                           
  7112                           ;main.c: 238:     while (st[i] != 0){
  7113  1A84  2A96               	goto	l3589
  7114  1A85                     l3585:
  7115                           
  7116                           ;main.c: 239:         send_char(st[i]);
  7117  1A85  0875               	movf	send_crct@i,w
  7118  1A86  0777               	addwf	send_crct@st,w
  7119  1A87  00F4               	movwf	??_send_crct
  7120  1A88  0874               	movf	??_send_crct,w
  7121  1A89  0084               	movwf	4
  7122  1A8A  0800               	movf	0,w
  7123  1A8B  160A  158A  2190  160A  158A  	fcall	_send_char
  7124  1A90                     l3587:
  7125                           
  7126                           ;main.c: 240:         i++;
  7127  1A90  3001               	movlw	1
  7128  1A91  07F5               	addwf	send_crct@i,f
  7129  1A92  1803               	skipnc
  7130  1A93  0AF6               	incf	send_crct@i+1,f
  7131  1A94  3000               	movlw	0
  7132  1A95  07F6               	addwf	send_crct@i+1,f
  7133  1A96                     l3589:
  7134                           
  7135                           ;main.c: 238:     while (st[i] != 0){
  7136  1A96  0875               	movf	send_crct@i,w
  7137  1A97  0777               	addwf	send_crct@st,w
  7138  1A98  00F4               	movwf	??_send_crct
  7139  1A99  0874               	movf	??_send_crct,w
  7140  1A9A  0084               	movwf	4
  7141  1A9B  1383               	bcf	3,7	;select IRP bank0
  7142  1A9C  0800               	movf	0,w
  7143  1A9D  1D03               	btfss	3,2
  7144  1A9E  2AA0               	goto	u5801
  7145  1A9F  2AA1               	goto	u5800
  7146  1AA0                     u5801:
  7147  1AA0  2A85               	goto	l3585
  7148  1AA1                     u5800:
  7149  1AA1                     l143:
  7150  1AA1  0008               	return
  7151  1AA2                     __end_of_send_crct:
  7152                           
  7153                           	psect	text21
  7154  1990                     __ptext21:	
  7155 ;; *************** function _send_char *****************
  7156 ;; Defined at:
  7157 ;;		line 244 in file "main.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;  dato            1    wreg     unsigned char 
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;  dato            1    3[COMMON] unsigned char 
  7162 ;; Return value:  Size  Location     Type
  7163 ;;                  1    wreg      void 
  7164 ;; Registers used:
  7165 ;;		wreg
  7166 ;; Tracked objects:
  7167 ;;		On entry : 0/0
  7168 ;;		On exit  : 0/0
  7169 ;;		Unchanged: 0/0
  7170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7171 ;;      Params:         0       0       0       0       0
  7172 ;;      Locals:         1       0       0       0       0
  7173 ;;      Temps:          0       0       0       0       0
  7174 ;;      Totals:         1       0       0       0       0
  7175 ;;Total ram usage:        1 bytes
  7176 ;; Hardware stack levels used:    1
  7177 ;; Hardware stack levels required when called:    2
  7178 ;; This function calls:
  7179 ;;		Nothing
  7180 ;; This function is called by:
  7181 ;;		_send_crct
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           
  7186                           ;psect for function _send_char
  7187  1990                     _send_char:
  7188                           
  7189                           ;incstack = 0
  7190                           ; Regs used in _send_char: [wreg]
  7191                           ;send_char@dato stored from wreg
  7192  1990  00F3               	movwf	send_char@dato
  7193  1991                     l2835:
  7194  1991                     l146:	
  7195                           ;main.c: 245:     while(!TXIF);
  7196                           
  7197  1991  1283               	bcf	3,5	;RP0=0, select bank0
  7198  1992  1303               	bcf	3,6	;RP1=0, select bank0
  7199  1993  1E0C               	btfss	12,4	;volatile
  7200  1994  2996               	goto	u4191
  7201  1995  2997               	goto	u4190
  7202  1996                     u4191:
  7203  1996  2991               	goto	l146
  7204  1997                     u4190:
  7205  1997                     l2837:
  7206                           
  7207                           ;main.c: 246:     TXREG = dato;
  7208  1997  0873               	movf	send_char@dato,w
  7209  1998  0099               	movwf	25	;volatile
  7210  1999                     l149:
  7211  1999  0008               	return
  7212  199A                     __end_of_send_char:
  7213                           
  7214                           	psect	text22
  7215  1B3E                     __ptext22:	
  7216 ;; *************** function _conv *****************
  7217 ;; Defined at:
  7218 ;;		line 249 in file "main.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;  aa              1    wreg     unsigned char 
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;  aa              1   46[BANK0 ] unsigned char 
  7223 ;;  result          4   42[BANK0 ] unsigned char 
  7224 ;; Return value:  Size  Location     Type
  7225 ;;                  4   34[BANK0 ] unsigned char 
  7226 ;; Registers used:
  7227 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7228 ;; Tracked objects:
  7229 ;;		On entry : 0/0
  7230 ;;		On exit  : 0/0
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7233 ;;      Params:         0       4       0       0       0
  7234 ;;      Locals:         0       5       0       0       0
  7235 ;;      Temps:          0       4       0       0       0
  7236 ;;      Totals:         0      13       0       0       0
  7237 ;;Total ram usage:       13 bytes
  7238 ;; Hardware stack levels used:    1
  7239 ;; Hardware stack levels required when called:    4
  7240 ;; This function calls:
  7241 ;;		___flmul
  7242 ;;		___xxtofl
  7243 ;; This function is called by:
  7244 ;;		_main
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           
  7249                           ;psect for function _conv
  7250  1B3E                     _conv:
  7251                           
  7252                           ;incstack = 0
  7253                           ; Regs used in _conv: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7254                           ;conv@aa stored from wreg
  7255  1B3E  1283               	bcf	3,5	;RP0=0, select bank0
  7256  1B3F  1303               	bcf	3,6	;RP1=0, select bank0
  7257  1B40  00CE               	movwf	conv@aa
  7258  1B41                     l3315:
  7259                           
  7260                           ;main.c: 250:     double result;;main.c: 251:     result = aa*0.0196;
  7261  1B41  303C               	movlw	60
  7262  1B42  00AB               	movwf	___flmul@b+3
  7263  1B43  30A0               	movlw	160
  7264  1B44  00AA               	movwf	___flmul@b+2
  7265  1B45  3090               	movlw	144
  7266  1B46  00A9               	movwf	___flmul@b+1
  7267  1B47  302E               	movlw	46
  7268  1B48  00A8               	movwf	___flmul@b
  7269  1B49  084E               	movf	conv@aa,w
  7270  1B4A  00C6               	movwf	??_conv
  7271  1B4B  01C7               	clrf	??_conv+1
  7272  1B4C  01C8               	clrf	??_conv+2
  7273  1B4D  01C9               	clrf	??_conv+3
  7274  1B4E  0849               	movf	??_conv+3,w
  7275  1B4F  00F6               	movwf	___xxtofl@val+3
  7276  1B50  0848               	movf	??_conv+2,w
  7277  1B51  00F5               	movwf	___xxtofl@val+2
  7278  1B52  0847               	movf	??_conv+1,w
  7279  1B53  00F4               	movwf	___xxtofl@val+1
  7280  1B54  0846               	movf	??_conv,w
  7281  1B55  00F3               	movwf	___xxtofl@val
  7282  1B56  3001               	movlw	1
  7283  1B57  160A  158A  2744  160A  158A  	fcall	___xxtofl
  7284  1B5C  0876               	movf	?___xxtofl+3,w
  7285  1B5D  1283               	bcf	3,5	;RP0=0, select bank0
  7286  1B5E  1303               	bcf	3,6	;RP1=0, select bank0
  7287  1B5F  00AF               	movwf	___flmul@a+3
  7288  1B60  0875               	movf	?___xxtofl+2,w
  7289  1B61  00AE               	movwf	___flmul@a+2
  7290  1B62  0874               	movf	?___xxtofl+1,w
  7291  1B63  00AD               	movwf	___flmul@a+1
  7292  1B64  0873               	movf	?___xxtofl,w
  7293  1B65  00AC               	movwf	___flmul@a
  7294  1B66  120A  158A  213C  160A  158A  	fcall	___flmul
  7295  1B6B  1283               	bcf	3,5	;RP0=0, select bank0
  7296  1B6C  1303               	bcf	3,6	;RP1=0, select bank0
  7297  1B6D  082B               	movf	?___flmul+3,w
  7298  1B6E  00CD               	movwf	conv@result+3
  7299  1B6F  082A               	movf	?___flmul+2,w
  7300  1B70  00CC               	movwf	conv@result+2
  7301  1B71  0829               	movf	?___flmul+1,w
  7302  1B72  00CB               	movwf	conv@result+1
  7303  1B73  0828               	movf	?___flmul,w
  7304  1B74  00CA               	movwf	conv@result
  7305  1B75                     l3317:
  7306                           
  7307                           ;main.c: 252:     return result;
  7308  1B75  084D               	movf	conv@result+3,w
  7309  1B76  00C5               	movwf	?_conv+3
  7310  1B77  084C               	movf	conv@result+2,w
  7311  1B78  00C4               	movwf	?_conv+2
  7312  1B79  084B               	movf	conv@result+1,w
  7313  1B7A  00C3               	movwf	?_conv+1
  7314  1B7B  084A               	movf	conv@result,w
  7315  1B7C  00C2               	movwf	?_conv
  7316  1B7D                     l152:
  7317  1B7D  0008               	return
  7318  1B7E                     __end_of_conv:
  7319                           
  7320                           	psect	text23
  7321  1F44                     __ptext23:	
  7322 ;; *************** function ___xxtofl *****************
  7323 ;; Defined at:
  7324 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;  sign            1    wreg     unsigned char 
  7327 ;;  val             4    3[COMMON] long 
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;  sign            1    0[BANK0 ] unsigned char 
  7330 ;;  arg             4    2[BANK0 ] unsigned long 
  7331 ;;  exp             1    1[BANK0 ] unsigned char 
  7332 ;; Return value:  Size  Location     Type
  7333 ;;                  4    3[COMMON] unsigned char 
  7334 ;; Registers used:
  7335 ;;		wreg, status,2, status,0
  7336 ;; Tracked objects:
  7337 ;;		On entry : 0/0
  7338 ;;		On exit  : 0/0
  7339 ;;		Unchanged: 0/0
  7340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7341 ;;      Params:         4       0       0       0       0
  7342 ;;      Locals:         0       6       0       0       0
  7343 ;;      Temps:          4       0       0       0       0
  7344 ;;      Totals:         8       6       0       0       0
  7345 ;;Total ram usage:       14 bytes
  7346 ;; Hardware stack levels used:    1
  7347 ;; Hardware stack levels required when called:    2
  7348 ;; This function calls:
  7349 ;;		Nothing
  7350 ;; This function is called by:
  7351 ;;		_conv
  7352 ;;		_sprintf
  7353 ;;		_valadc
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           
  7358                           ;psect for function ___xxtofl
  7359  1F44                     ___xxtofl:
  7360                           
  7361                           ;incstack = 0
  7362                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7363                           ;___xxtofl@sign stored from wreg
  7364  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  7365  1F45  1303               	bcf	3,6	;RP1=0, select bank0
  7366  1F46  00A0               	movwf	___xxtofl@sign
  7367  1F47                     l3175:
  7368  1F47  0820               	movf	___xxtofl@sign,w
  7369  1F48  1903               	btfsc	3,2
  7370  1F49  2F4B               	goto	u5111
  7371  1F4A  2F4C               	goto	u5110
  7372  1F4B                     u5111:
  7373  1F4B  2F60               	goto	l3181
  7374  1F4C                     u5110:
  7375  1F4C                     l3177:
  7376  1F4C  1FF6               	btfss	___xxtofl@val+3,7
  7377  1F4D  2F4F               	goto	u5121
  7378  1F4E  2F50               	goto	u5120
  7379  1F4F                     u5121:
  7380  1F4F  2F60               	goto	l3181
  7381  1F50                     u5120:
  7382  1F50                     l3179:
  7383  1F50  0973               	comf	___xxtofl@val,w
  7384  1F51  00A2               	movwf	___xxtofl@arg
  7385  1F52  0974               	comf	___xxtofl@val+1,w
  7386  1F53  00A3               	movwf	___xxtofl@arg+1
  7387  1F54  0975               	comf	___xxtofl@val+2,w
  7388  1F55  00A4               	movwf	___xxtofl@arg+2
  7389  1F56  0976               	comf	___xxtofl@val+3,w
  7390  1F57  00A5               	movwf	___xxtofl@arg+3
  7391  1F58  0AA2               	incf	___xxtofl@arg,f
  7392  1F59  1903               	skipnz
  7393  1F5A  0AA3               	incf	___xxtofl@arg+1,f
  7394  1F5B  1903               	skipnz
  7395  1F5C  0AA4               	incf	___xxtofl@arg+2,f
  7396  1F5D  1903               	skipnz
  7397  1F5E  0AA5               	incf	___xxtofl@arg+3,f
  7398  1F5F  2F68               	goto	l891
  7399  1F60                     l3181:
  7400  1F60  0876               	movf	___xxtofl@val+3,w
  7401  1F61  00A5               	movwf	___xxtofl@arg+3
  7402  1F62  0875               	movf	___xxtofl@val+2,w
  7403  1F63  00A4               	movwf	___xxtofl@arg+2
  7404  1F64  0874               	movf	___xxtofl@val+1,w
  7405  1F65  00A3               	movwf	___xxtofl@arg+1
  7406  1F66  0873               	movf	___xxtofl@val,w
  7407  1F67  00A2               	movwf	___xxtofl@arg
  7408  1F68                     l891:
  7409  1F68  0876               	movf	___xxtofl@val+3,w
  7410  1F69  0475               	iorwf	___xxtofl@val+2,w
  7411  1F6A  0474               	iorwf	___xxtofl@val+1,w
  7412  1F6B  0473               	iorwf	___xxtofl@val,w
  7413  1F6C  1D03               	skipz
  7414  1F6D  2F6F               	goto	u5131
  7415  1F6E  2F70               	goto	u5130
  7416  1F6F                     u5131:
  7417  1F6F  2F79               	goto	l3187
  7418  1F70                     u5130:
  7419  1F70                     l3183:
  7420  1F70  3000               	movlw	0
  7421  1F71  00F6               	movwf	?___xxtofl+3
  7422  1F72  3000               	movlw	0
  7423  1F73  00F5               	movwf	?___xxtofl+2
  7424  1F74  3000               	movlw	0
  7425  1F75  00F4               	movwf	?___xxtofl+1
  7426  1F76  3000               	movlw	0
  7427  1F77  00F3               	movwf	?___xxtofl
  7428  1F78  2FFF               	goto	l893
  7429  1F79                     l3187:
  7430  1F79  3096               	movlw	150
  7431  1F7A  00F7               	movwf	??___xxtofl
  7432  1F7B  0877               	movf	??___xxtofl,w
  7433  1F7C  00A1               	movwf	___xxtofl@exp
  7434  1F7D  2F8B               	goto	l3191
  7435  1F7E                     l3189:
  7436  1F7E  3001               	movlw	1
  7437  1F7F  00F7               	movwf	??___xxtofl
  7438  1F80  0877               	movf	??___xxtofl,w
  7439  1F81  07A1               	addwf	___xxtofl@exp,f
  7440  1F82  3001               	movlw	1
  7441  1F83                     u5145:
  7442  1F83  1003               	clrc
  7443  1F84  0CA5               	rrf	___xxtofl@arg+3,f
  7444  1F85  0CA4               	rrf	___xxtofl@arg+2,f
  7445  1F86  0CA3               	rrf	___xxtofl@arg+1,f
  7446  1F87  0CA2               	rrf	___xxtofl@arg,f
  7447  1F88  3EFF               	addlw	-1
  7448  1F89  1D03               	skipz
  7449  1F8A  2F83               	goto	u5145
  7450  1F8B                     l3191:
  7451  1F8B  30FE               	movlw	254
  7452  1F8C  0525               	andwf	___xxtofl@arg+3,w
  7453  1F8D  1D03               	btfss	3,2
  7454  1F8E  2F90               	goto	u5151
  7455  1F8F  2F91               	goto	u5150
  7456  1F90                     u5151:
  7457  1F90  2F7E               	goto	l3189
  7458  1F91                     u5150:
  7459  1F91  2FAD               	goto	l897
  7460  1F92                     l3193:
  7461  1F92  3001               	movlw	1
  7462  1F93  00F7               	movwf	??___xxtofl
  7463  1F94  0877               	movf	??___xxtofl,w
  7464  1F95  07A1               	addwf	___xxtofl@exp,f
  7465  1F96                     l3195:
  7466  1F96  3001               	movlw	1
  7467  1F97  07A2               	addwf	___xxtofl@arg,f
  7468  1F98  3000               	movlw	0
  7469  1F99  1803               	skipnc
  7470  1F9A  3001               	movlw	1
  7471  1F9B  07A3               	addwf	___xxtofl@arg+1,f
  7472  1F9C  3000               	movlw	0
  7473  1F9D  1803               	skipnc
  7474  1F9E  3001               	movlw	1
  7475  1F9F  07A4               	addwf	___xxtofl@arg+2,f
  7476  1FA0  3000               	movlw	0
  7477  1FA1  1803               	skipnc
  7478  1FA2  3001               	movlw	1
  7479  1FA3  07A5               	addwf	___xxtofl@arg+3,f
  7480  1FA4                     l3197:
  7481  1FA4  3001               	movlw	1
  7482  1FA5                     u5165:
  7483  1FA5  1003               	clrc
  7484  1FA6  0CA5               	rrf	___xxtofl@arg+3,f
  7485  1FA7  0CA4               	rrf	___xxtofl@arg+2,f
  7486  1FA8  0CA3               	rrf	___xxtofl@arg+1,f
  7487  1FA9  0CA2               	rrf	___xxtofl@arg,f
  7488  1FAA  3EFF               	addlw	-1
  7489  1FAB  1D03               	skipz
  7490  1FAC  2FA5               	goto	u5165
  7491  1FAD                     l897:
  7492  1FAD  30FF               	movlw	255
  7493  1FAE  0525               	andwf	___xxtofl@arg+3,w
  7494  1FAF  1D03               	btfss	3,2
  7495  1FB0  2FB2               	goto	u5171
  7496  1FB1  2FB3               	goto	u5170
  7497  1FB2                     u5171:
  7498  1FB2  2F92               	goto	l3193
  7499  1FB3                     u5170:
  7500  1FB3  2FBF               	goto	l3201
  7501  1FB4                     l3199:
  7502  1FB4  3001               	movlw	1
  7503  1FB5  02A1               	subwf	___xxtofl@exp,f
  7504  1FB6  3001               	movlw	1
  7505  1FB7  00F7               	movwf	??___xxtofl
  7506  1FB8                     u5185:
  7507  1FB8  1003               	clrc
  7508  1FB9  0DA2               	rlf	___xxtofl@arg,f
  7509  1FBA  0DA3               	rlf	___xxtofl@arg+1,f
  7510  1FBB  0DA4               	rlf	___xxtofl@arg+2,f
  7511  1FBC  0DA5               	rlf	___xxtofl@arg+3,f
  7512  1FBD  0BF7               	decfsz	??___xxtofl,f
  7513  1FBE  2FB8               	goto	u5185
  7514  1FBF                     l3201:
  7515  1FBF  1BA4               	btfsc	___xxtofl@arg+2,7
  7516  1FC0  2FC2               	goto	u5191
  7517  1FC1  2FC3               	goto	u5190
  7518  1FC2                     u5191:
  7519  1FC2  2FC9               	goto	l904
  7520  1FC3                     u5190:
  7521  1FC3                     l3203:
  7522  1FC3  3002               	movlw	2
  7523  1FC4  0221               	subwf	___xxtofl@exp,w
  7524  1FC5  1803               	skipnc
  7525  1FC6  2FC8               	goto	u5201
  7526  1FC7  2FC9               	goto	u5200
  7527  1FC8                     u5201:
  7528  1FC8  2FB4               	goto	l3199
  7529  1FC9                     u5200:
  7530  1FC9                     l904:
  7531  1FC9  1821               	btfsc	___xxtofl@exp,0
  7532  1FCA  2FCC               	goto	u5211
  7533  1FCB  2FCD               	goto	u5210
  7534  1FCC                     u5211:
  7535  1FCC  2FD5               	goto	l905
  7536  1FCD                     u5210:
  7537  1FCD                     l3205:
  7538  1FCD  30FF               	movlw	255
  7539  1FCE  05A2               	andwf	___xxtofl@arg,f
  7540  1FCF  30FF               	movlw	255
  7541  1FD0  05A3               	andwf	___xxtofl@arg+1,f
  7542  1FD1  307F               	movlw	127
  7543  1FD2  05A4               	andwf	___xxtofl@arg+2,f
  7544  1FD3  30FF               	movlw	255
  7545  1FD4  05A5               	andwf	___xxtofl@arg+3,f
  7546  1FD5                     l905:
  7547  1FD5  1003               	clrc
  7548  1FD6  0CA1               	rrf	___xxtofl@exp,f
  7549  1FD7                     l3207:
  7550  1FD7  0821               	movf	___xxtofl@exp,w
  7551  1FD8  00F7               	movwf	??___xxtofl
  7552  1FD9  01F8               	clrf	??___xxtofl+1
  7553  1FDA  01F9               	clrf	??___xxtofl+2
  7554  1FDB  01FA               	clrf	??___xxtofl+3
  7555  1FDC  3018               	movlw	24
  7556  1FDD                     u5225:
  7557  1FDD  1003               	clrc
  7558  1FDE  0DF7               	rlf	??___xxtofl,f
  7559  1FDF  0DF8               	rlf	??___xxtofl+1,f
  7560  1FE0  0DF9               	rlf	??___xxtofl+2,f
  7561  1FE1  0DFA               	rlf	??___xxtofl+3,f
  7562  1FE2                     u5220:
  7563  1FE2  3EFF               	addlw	-1
  7564  1FE3  1D03               	skipz
  7565  1FE4  2FDD               	goto	u5225
  7566  1FE5  0877               	movf	??___xxtofl,w
  7567  1FE6  04A2               	iorwf	___xxtofl@arg,f
  7568  1FE7  0878               	movf	??___xxtofl+1,w
  7569  1FE8  04A3               	iorwf	___xxtofl@arg+1,f
  7570  1FE9  0879               	movf	??___xxtofl+2,w
  7571  1FEA  04A4               	iorwf	___xxtofl@arg+2,f
  7572  1FEB  087A               	movf	??___xxtofl+3,w
  7573  1FEC  04A5               	iorwf	___xxtofl@arg+3,f
  7574  1FED                     l3209:
  7575  1FED  0820               	movf	___xxtofl@sign,w
  7576  1FEE  1903               	btfsc	3,2
  7577  1FEF  2FF1               	goto	u5231
  7578  1FF0  2FF2               	goto	u5230
  7579  1FF1                     u5231:
  7580  1FF1  2FF7               	goto	l3215
  7581  1FF2                     u5230:
  7582  1FF2                     l3211:
  7583  1FF2  1FF6               	btfss	___xxtofl@val+3,7
  7584  1FF3  2FF5               	goto	u5241
  7585  1FF4  2FF6               	goto	u5240
  7586  1FF5                     u5241:
  7587  1FF5  2FF7               	goto	l3215
  7588  1FF6                     u5240:
  7589  1FF6                     l3213:
  7590  1FF6  17A5               	bsf	___xxtofl@arg+3,7
  7591  1FF7                     l3215:
  7592  1FF7  0825               	movf	___xxtofl@arg+3,w
  7593  1FF8  00F6               	movwf	?___xxtofl+3
  7594  1FF9  0824               	movf	___xxtofl@arg+2,w
  7595  1FFA  00F5               	movwf	?___xxtofl+2
  7596  1FFB  0823               	movf	___xxtofl@arg+1,w
  7597  1FFC  00F4               	movwf	?___xxtofl+1
  7598  1FFD  0822               	movf	___xxtofl@arg,w
  7599  1FFE  00F3               	movwf	?___xxtofl
  7600  1FFF                     l893:
  7601  1FFF  0008               	return
  7602  2000                     __end_of___xxtofl:
  7603                           
  7604                           	psect	text24
  7605  093C                     __ptext24:	
  7606 ;; *************** function ___flmul *****************
  7607 ;; Defined at:
  7608 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;  b               4    8[BANK0 ] unsigned char 
  7611 ;;  a               4   12[BANK0 ] unsigned char 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  prod            4   28[BANK0 ] struct .
  7614 ;;  grs             4   22[BANK0 ] unsigned long 
  7615 ;;  temp            2   32[BANK0 ] struct .
  7616 ;;  bexp            1   27[BANK0 ] unsigned char 
  7617 ;;  aexp            1   26[BANK0 ] unsigned char 
  7618 ;;  sign            1   21[BANK0 ] unsigned char 
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  4    8[BANK0 ] unsigned char 
  7621 ;; Registers used:
  7622 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7628 ;;      Params:         0       8       0       0       0
  7629 ;;      Locals:         0      13       0       0       0
  7630 ;;      Temps:          0       5       0       0       0
  7631 ;;      Totals:         0      26       0       0       0
  7632 ;;Total ram usage:       26 bytes
  7633 ;; Hardware stack levels used:    1
  7634 ;; Hardware stack levels required when called:    3
  7635 ;; This function calls:
  7636 ;;		__Umul8_16
  7637 ;; This function is called by:
  7638 ;;		_conv
  7639 ;;		_fround
  7640 ;;		_scale
  7641 ;;		_sprintf
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           
  7646                           ;psect for function ___flmul
  7647  093C                     ___flmul:
  7648  093C                     l2695:	
  7649                           ;incstack = 0
  7650                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7651                           
  7652  093C  1283               	bcf	3,5	;RP0=0, select bank0
  7653  093D  1303               	bcf	3,6	;RP1=0, select bank0
  7654  093E  082B               	movf	___flmul@b+3,w
  7655  093F  3980               	andlw	128
  7656  0940  00B0               	movwf	??___flmul
  7657  0941  0830               	movf	??___flmul,w
  7658  0942  00B5               	movwf	___flmul@sign
  7659  0943                     l2697:
  7660  0943  082B               	movf	___flmul@b+3,w
  7661  0944  00B0               	movwf	??___flmul
  7662  0945  0730               	addwf	??___flmul,w
  7663  0946  00B1               	movwf	??___flmul+1
  7664  0947  0831               	movf	??___flmul+1,w
  7665  0948  00BB               	movwf	___flmul@bexp
  7666  0949                     l2699:
  7667  0949  1FAA               	btfss	___flmul@b+2,7
  7668  094A  294C               	goto	u3821
  7669  094B  294D               	goto	u3820
  7670  094C                     u3821:
  7671  094C  294E               	goto	l2703
  7672  094D                     u3820:
  7673  094D                     l2701:
  7674  094D  143B               	bsf	___flmul@bexp,0
  7675  094E                     l2703:
  7676  094E  083B               	movf	___flmul@bexp,w
  7677  094F  1903               	btfsc	3,2
  7678  0950  2952               	goto	u3831
  7679  0951  2953               	goto	u3830
  7680  0952                     u3831:
  7681  0952  2962               	goto	l2711
  7682  0953                     u3830:
  7683  0953                     l2705:
  7684  0953  0A3B               	incf	___flmul@bexp,w
  7685  0954  1D03               	btfss	3,2
  7686  0955  2957               	goto	u3841
  7687  0956  2958               	goto	u3840
  7688  0957                     u3841:
  7689  0957  2960               	goto	l2709
  7690  0958                     u3840:
  7691  0958                     l2707:
  7692  0958  3000               	movlw	0
  7693  0959  00AB               	movwf	___flmul@b+3
  7694  095A  3000               	movlw	0
  7695  095B  00AA               	movwf	___flmul@b+2
  7696  095C  3000               	movlw	0
  7697  095D  00A9               	movwf	___flmul@b+1
  7698  095E  3000               	movlw	0
  7699  095F  00A8               	movwf	___flmul@b
  7700  0960                     l2709:
  7701  0960  17AA               	bsf	___flmul@b+2,7
  7702  0961  296A               	goto	l2713
  7703  0962                     l2711:
  7704  0962  3000               	movlw	0
  7705  0963  00AB               	movwf	___flmul@b+3
  7706  0964  3000               	movlw	0
  7707  0965  00AA               	movwf	___flmul@b+2
  7708  0966  3000               	movlw	0
  7709  0967  00A9               	movwf	___flmul@b+1
  7710  0968  3000               	movlw	0
  7711  0969  00A8               	movwf	___flmul@b
  7712  096A                     l2713:
  7713  096A  082F               	movf	___flmul@a+3,w
  7714  096B  3980               	andlw	128
  7715  096C  00B0               	movwf	??___flmul
  7716  096D  0830               	movf	??___flmul,w
  7717  096E  06B5               	xorwf	___flmul@sign,f
  7718  096F                     l2715:
  7719  096F  082F               	movf	___flmul@a+3,w
  7720  0970  00B0               	movwf	??___flmul
  7721  0971  0730               	addwf	??___flmul,w
  7722  0972  00B1               	movwf	??___flmul+1
  7723  0973  0831               	movf	??___flmul+1,w
  7724  0974  00BA               	movwf	___flmul@aexp
  7725  0975                     l2717:
  7726  0975  1FAE               	btfss	___flmul@a+2,7
  7727  0976  2978               	goto	u3851
  7728  0977  2979               	goto	u3850
  7729  0978                     u3851:
  7730  0978  297A               	goto	l2721
  7731  0979                     u3850:
  7732  0979                     l2719:
  7733  0979  143A               	bsf	___flmul@aexp,0
  7734  097A                     l2721:
  7735  097A  083A               	movf	___flmul@aexp,w
  7736  097B  1903               	btfsc	3,2
  7737  097C  297E               	goto	u3861
  7738  097D  297F               	goto	u3860
  7739  097E                     u3861:
  7740  097E  298E               	goto	l2729
  7741  097F                     u3860:
  7742  097F                     l2723:
  7743  097F  0A3A               	incf	___flmul@aexp,w
  7744  0980  1D03               	btfss	3,2
  7745  0981  2983               	goto	u3871
  7746  0982  2984               	goto	u3870
  7747  0983                     u3871:
  7748  0983  298C               	goto	l2727
  7749  0984                     u3870:
  7750  0984                     l2725:
  7751  0984  3000               	movlw	0
  7752  0985  00AF               	movwf	___flmul@a+3
  7753  0986  3000               	movlw	0
  7754  0987  00AE               	movwf	___flmul@a+2
  7755  0988  3000               	movlw	0
  7756  0989  00AD               	movwf	___flmul@a+1
  7757  098A  3000               	movlw	0
  7758  098B  00AC               	movwf	___flmul@a
  7759  098C                     l2727:
  7760  098C  17AE               	bsf	___flmul@a+2,7
  7761  098D  2996               	goto	l2731
  7762  098E                     l2729:
  7763  098E  3000               	movlw	0
  7764  098F  00AF               	movwf	___flmul@a+3
  7765  0990  3000               	movlw	0
  7766  0991  00AE               	movwf	___flmul@a+2
  7767  0992  3000               	movlw	0
  7768  0993  00AD               	movwf	___flmul@a+1
  7769  0994  3000               	movlw	0
  7770  0995  00AC               	movwf	___flmul@a
  7771  0996                     l2731:
  7772  0996  083A               	movf	___flmul@aexp,w
  7773  0997  1903               	btfsc	3,2
  7774  0998  299A               	goto	u3881
  7775  0999  299B               	goto	u3880
  7776  099A                     u3881:
  7777  099A  29A0               	goto	l2735
  7778  099B                     u3880:
  7779  099B                     l2733:
  7780  099B  083B               	movf	___flmul@bexp,w
  7781  099C  1D03               	btfss	3,2
  7782  099D  299F               	goto	u3891
  7783  099E  29A0               	goto	u3890
  7784  099F                     u3891:
  7785  099F  29A9               	goto	l2739
  7786  09A0                     u3890:
  7787  09A0                     l2735:
  7788  09A0  3000               	movlw	0
  7789  09A1  00AB               	movwf	?___flmul+3
  7790  09A2  3000               	movlw	0
  7791  09A3  00AA               	movwf	?___flmul+2
  7792  09A4  3000               	movlw	0
  7793  09A5  00A9               	movwf	?___flmul+1
  7794  09A6  3000               	movlw	0
  7795  09A7  00A8               	movwf	?___flmul
  7796  09A8  2C9C               	goto	l847
  7797  09A9                     l2739:
  7798  09A9  0828               	movf	___flmul@b,w
  7799  09AA  00B0               	movwf	??___flmul
  7800  09AB  0830               	movf	??___flmul,w
  7801  09AC  00F3               	movwf	__Umul8_16@multiplicand
  7802  09AD  082E               	movf	___flmul@a+2,w
  7803  09AE  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  7804  09B3  0874               	movf	?__Umul8_16+1,w
  7805  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  7806  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  7807  09B6  00C1               	movwf	___flmul@temp+1
  7808  09B7  0873               	movf	?__Umul8_16,w
  7809  09B8  00C0               	movwf	___flmul@temp
  7810  09B9                     l2741:
  7811  09B9  0840               	movf	___flmul@temp,w
  7812  09BA  00B0               	movwf	??___flmul
  7813  09BB  01B1               	clrf	??___flmul+1
  7814  09BC  01B2               	clrf	??___flmul+2
  7815  09BD  01B3               	clrf	??___flmul+3
  7816  09BE  0833               	movf	??___flmul+3,w
  7817  09BF  00B9               	movwf	___flmul@grs+3
  7818  09C0  0832               	movf	??___flmul+2,w
  7819  09C1  00B8               	movwf	___flmul@grs+2
  7820  09C2  0831               	movf	??___flmul+1,w
  7821  09C3  00B7               	movwf	___flmul@grs+1
  7822  09C4  0830               	movf	??___flmul,w
  7823  09C5  00B6               	movwf	___flmul@grs
  7824  09C6                     l2743:
  7825  09C6  0841               	movf	___flmul@temp+1,w
  7826  09C7  00B0               	movwf	??___flmul
  7827  09C8  01B1               	clrf	??___flmul+1
  7828  09C9  01B2               	clrf	??___flmul+2
  7829  09CA  01B3               	clrf	??___flmul+3
  7830  09CB  0833               	movf	??___flmul+3,w
  7831  09CC  00BF               	movwf	___flmul@prod+3
  7832  09CD  0832               	movf	??___flmul+2,w
  7833  09CE  00BE               	movwf	___flmul@prod+2
  7834  09CF  0831               	movf	??___flmul+1,w
  7835  09D0  00BD               	movwf	___flmul@prod+1
  7836  09D1  0830               	movf	??___flmul,w
  7837  09D2  00BC               	movwf	___flmul@prod
  7838  09D3  0829               	movf	___flmul@b+1,w
  7839  09D4  00B0               	movwf	??___flmul
  7840  09D5  0830               	movf	??___flmul,w
  7841  09D6  00F3               	movwf	__Umul8_16@multiplicand
  7842  09D7  082D               	movf	___flmul@a+1,w
  7843  09D8  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  7844  09DD  0874               	movf	?__Umul8_16+1,w
  7845  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  7846  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  7847  09E0  00C1               	movwf	___flmul@temp+1
  7848  09E1  0873               	movf	?__Umul8_16,w
  7849  09E2  00C0               	movwf	___flmul@temp
  7850  09E3                     l2745:
  7851  09E3  0840               	movf	___flmul@temp,w
  7852  09E4  00B0               	movwf	??___flmul
  7853  09E5  01B1               	clrf	??___flmul+1
  7854  09E6  01B2               	clrf	??___flmul+2
  7855  09E7  01B3               	clrf	??___flmul+3
  7856  09E8  0830               	movf	??___flmul,w
  7857  09E9  07B6               	addwf	___flmul@grs,f
  7858  09EA  0831               	movf	??___flmul+1,w
  7859  09EB  1103               	clrz
  7860  09EC  1803               	skipnc
  7861  09ED  3E01               	addlw	1
  7862  09EE  1903               	skipnz
  7863  09EF  29F1               	goto	u3901
  7864  09F0  07B7               	addwf	___flmul@grs+1,f
  7865  09F1                     u3901:
  7866  09F1  0832               	movf	??___flmul+2,w
  7867  09F2  1103               	clrz
  7868  09F3  1803               	skipnc
  7869  09F4  3E01               	addlw	1
  7870  09F5  1903               	skipnz
  7871  09F6  29F8               	goto	u3902
  7872  09F7  07B8               	addwf	___flmul@grs+2,f
  7873  09F8                     u3902:
  7874  09F8  0833               	movf	??___flmul+3,w
  7875  09F9  1103               	clrz
  7876  09FA  1803               	skipnc
  7877  09FB  3E01               	addlw	1
  7878  09FC  1903               	skipnz
  7879  09FD  29FF               	goto	u3903
  7880  09FE  07B9               	addwf	___flmul@grs+3,f
  7881  09FF                     u3903:
  7882  09FF                     l2747:
  7883  09FF  0841               	movf	___flmul@temp+1,w
  7884  0A00  00B0               	movwf	??___flmul
  7885  0A01  01B1               	clrf	??___flmul+1
  7886  0A02  01B2               	clrf	??___flmul+2
  7887  0A03  01B3               	clrf	??___flmul+3
  7888  0A04  0830               	movf	??___flmul,w
  7889  0A05  07BC               	addwf	___flmul@prod,f
  7890  0A06  0831               	movf	??___flmul+1,w
  7891  0A07  1103               	clrz
  7892  0A08  1803               	skipnc
  7893  0A09  3E01               	addlw	1
  7894  0A0A  1903               	skipnz
  7895  0A0B  2A0D               	goto	u3911
  7896  0A0C  07BD               	addwf	___flmul@prod+1,f
  7897  0A0D                     u3911:
  7898  0A0D  0832               	movf	??___flmul+2,w
  7899  0A0E  1103               	clrz
  7900  0A0F  1803               	skipnc
  7901  0A10  3E01               	addlw	1
  7902  0A11  1903               	skipnz
  7903  0A12  2A14               	goto	u3912
  7904  0A13  07BE               	addwf	___flmul@prod+2,f
  7905  0A14                     u3912:
  7906  0A14  0833               	movf	??___flmul+3,w
  7907  0A15  1103               	clrz
  7908  0A16  1803               	skipnc
  7909  0A17  3E01               	addlw	1
  7910  0A18  1903               	skipnz
  7911  0A19  2A1B               	goto	u3913
  7912  0A1A  07BF               	addwf	___flmul@prod+3,f
  7913  0A1B                     u3913:
  7914  0A1B  082A               	movf	___flmul@b+2,w
  7915  0A1C  00B0               	movwf	??___flmul
  7916  0A1D  0830               	movf	??___flmul,w
  7917  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  7918  0A1F  082C               	movf	___flmul@a,w
  7919  0A20  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  7920  0A25  0874               	movf	?__Umul8_16+1,w
  7921  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  7922  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  7923  0A28  00C1               	movwf	___flmul@temp+1
  7924  0A29  0873               	movf	?__Umul8_16,w
  7925  0A2A  00C0               	movwf	___flmul@temp
  7926  0A2B                     l2749:
  7927  0A2B  0840               	movf	___flmul@temp,w
  7928  0A2C  00B0               	movwf	??___flmul
  7929  0A2D  01B1               	clrf	??___flmul+1
  7930  0A2E  01B2               	clrf	??___flmul+2
  7931  0A2F  01B3               	clrf	??___flmul+3
  7932  0A30  0830               	movf	??___flmul,w
  7933  0A31  07B6               	addwf	___flmul@grs,f
  7934  0A32  0831               	movf	??___flmul+1,w
  7935  0A33  1103               	clrz
  7936  0A34  1803               	skipnc
  7937  0A35  3E01               	addlw	1
  7938  0A36  1903               	skipnz
  7939  0A37  2A39               	goto	u3921
  7940  0A38  07B7               	addwf	___flmul@grs+1,f
  7941  0A39                     u3921:
  7942  0A39  0832               	movf	??___flmul+2,w
  7943  0A3A  1103               	clrz
  7944  0A3B  1803               	skipnc
  7945  0A3C  3E01               	addlw	1
  7946  0A3D  1903               	skipnz
  7947  0A3E  2A40               	goto	u3922
  7948  0A3F  07B8               	addwf	___flmul@grs+2,f
  7949  0A40                     u3922:
  7950  0A40  0833               	movf	??___flmul+3,w
  7951  0A41  1103               	clrz
  7952  0A42  1803               	skipnc
  7953  0A43  3E01               	addlw	1
  7954  0A44  1903               	skipnz
  7955  0A45  2A47               	goto	u3923
  7956  0A46  07B9               	addwf	___flmul@grs+3,f
  7957  0A47                     u3923:
  7958  0A47                     l2751:
  7959  0A47  0841               	movf	___flmul@temp+1,w
  7960  0A48  00B0               	movwf	??___flmul
  7961  0A49  01B1               	clrf	??___flmul+1
  7962  0A4A  01B2               	clrf	??___flmul+2
  7963  0A4B  01B3               	clrf	??___flmul+3
  7964  0A4C  0830               	movf	??___flmul,w
  7965  0A4D  07BC               	addwf	___flmul@prod,f
  7966  0A4E  0831               	movf	??___flmul+1,w
  7967  0A4F  1103               	clrz
  7968  0A50  1803               	skipnc
  7969  0A51  3E01               	addlw	1
  7970  0A52  1903               	skipnz
  7971  0A53  2A55               	goto	u3931
  7972  0A54  07BD               	addwf	___flmul@prod+1,f
  7973  0A55                     u3931:
  7974  0A55  0832               	movf	??___flmul+2,w
  7975  0A56  1103               	clrz
  7976  0A57  1803               	skipnc
  7977  0A58  3E01               	addlw	1
  7978  0A59  1903               	skipnz
  7979  0A5A  2A5C               	goto	u3932
  7980  0A5B  07BE               	addwf	___flmul@prod+2,f
  7981  0A5C                     u3932:
  7982  0A5C  0833               	movf	??___flmul+3,w
  7983  0A5D  1103               	clrz
  7984  0A5E  1803               	skipnc
  7985  0A5F  3E01               	addlw	1
  7986  0A60  1903               	skipnz
  7987  0A61  2A63               	goto	u3933
  7988  0A62  07BF               	addwf	___flmul@prod+3,f
  7989  0A63                     u3933:
  7990  0A63                     l2753:
  7991  0A63  3008               	movlw	8
  7992  0A64  00B0               	movwf	??___flmul
  7993  0A65                     u3945:
  7994  0A65  1003               	clrc
  7995  0A66  0DB6               	rlf	___flmul@grs,f
  7996  0A67  0DB7               	rlf	___flmul@grs+1,f
  7997  0A68  0DB8               	rlf	___flmul@grs+2,f
  7998  0A69  0DB9               	rlf	___flmul@grs+3,f
  7999  0A6A  0BB0               	decfsz	??___flmul,f
  8000  0A6B  2A65               	goto	u3945
  8001  0A6C                     l2755:
  8002  0A6C  0829               	movf	___flmul@b+1,w
  8003  0A6D  00B0               	movwf	??___flmul
  8004  0A6E  0830               	movf	??___flmul,w
  8005  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  8006  0A70  082C               	movf	___flmul@a,w
  8007  0A71  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  8008  0A76  0874               	movf	?__Umul8_16+1,w
  8009  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  8010  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  8011  0A79  00C1               	movwf	___flmul@temp+1
  8012  0A7A  0873               	movf	?__Umul8_16,w
  8013  0A7B  00C0               	movwf	___flmul@temp
  8014  0A7C                     l2757:
  8015  0A7C  0840               	movf	___flmul@temp,w
  8016  0A7D  00B0               	movwf	??___flmul
  8017  0A7E  0841               	movf	___flmul@temp+1,w
  8018  0A7F  00B1               	movwf	??___flmul+1
  8019  0A80  01B2               	clrf	??___flmul+2
  8020  0A81  01B3               	clrf	??___flmul+3
  8021  0A82  0830               	movf	??___flmul,w
  8022  0A83  07B6               	addwf	___flmul@grs,f
  8023  0A84  0831               	movf	??___flmul+1,w
  8024  0A85  1103               	clrz
  8025  0A86  1803               	skipnc
  8026  0A87  3E01               	addlw	1
  8027  0A88  1903               	skipnz
  8028  0A89  2A8B               	goto	u3951
  8029  0A8A  07B7               	addwf	___flmul@grs+1,f
  8030  0A8B                     u3951:
  8031  0A8B  0832               	movf	??___flmul+2,w
  8032  0A8C  1103               	clrz
  8033  0A8D  1803               	skipnc
  8034  0A8E  3E01               	addlw	1
  8035  0A8F  1903               	skipnz
  8036  0A90  2A92               	goto	u3952
  8037  0A91  07B8               	addwf	___flmul@grs+2,f
  8038  0A92                     u3952:
  8039  0A92  0833               	movf	??___flmul+3,w
  8040  0A93  1103               	clrz
  8041  0A94  1803               	skipnc
  8042  0A95  3E01               	addlw	1
  8043  0A96  1903               	skipnz
  8044  0A97  2A99               	goto	u3953
  8045  0A98  07B9               	addwf	___flmul@grs+3,f
  8046  0A99                     u3953:
  8047  0A99                     l2759:
  8048  0A99  0828               	movf	___flmul@b,w
  8049  0A9A  00B0               	movwf	??___flmul
  8050  0A9B  0830               	movf	??___flmul,w
  8051  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  8052  0A9D  082D               	movf	___flmul@a+1,w
  8053  0A9E  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  8054  0AA3  0874               	movf	?__Umul8_16+1,w
  8055  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  8056  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  8057  0AA6  00C1               	movwf	___flmul@temp+1
  8058  0AA7  0873               	movf	?__Umul8_16,w
  8059  0AA8  00C0               	movwf	___flmul@temp
  8060  0AA9                     l2761:
  8061  0AA9  0840               	movf	___flmul@temp,w
  8062  0AAA  00B0               	movwf	??___flmul
  8063  0AAB  0841               	movf	___flmul@temp+1,w
  8064  0AAC  00B1               	movwf	??___flmul+1
  8065  0AAD  01B2               	clrf	??___flmul+2
  8066  0AAE  01B3               	clrf	??___flmul+3
  8067  0AAF  0830               	movf	??___flmul,w
  8068  0AB0  07B6               	addwf	___flmul@grs,f
  8069  0AB1  0831               	movf	??___flmul+1,w
  8070  0AB2  1103               	clrz
  8071  0AB3  1803               	skipnc
  8072  0AB4  3E01               	addlw	1
  8073  0AB5  1903               	skipnz
  8074  0AB6  2AB8               	goto	u3961
  8075  0AB7  07B7               	addwf	___flmul@grs+1,f
  8076  0AB8                     u3961:
  8077  0AB8  0832               	movf	??___flmul+2,w
  8078  0AB9  1103               	clrz
  8079  0ABA  1803               	skipnc
  8080  0ABB  3E01               	addlw	1
  8081  0ABC  1903               	skipnz
  8082  0ABD  2ABF               	goto	u3962
  8083  0ABE  07B8               	addwf	___flmul@grs+2,f
  8084  0ABF                     u3962:
  8085  0ABF  0833               	movf	??___flmul+3,w
  8086  0AC0  1103               	clrz
  8087  0AC1  1803               	skipnc
  8088  0AC2  3E01               	addlw	1
  8089  0AC3  1903               	skipnz
  8090  0AC4  2AC6               	goto	u3963
  8091  0AC5  07B9               	addwf	___flmul@grs+3,f
  8092  0AC6                     u3963:
  8093  0AC6                     l2763:
  8094  0AC6  3008               	movlw	8
  8095  0AC7  00B0               	movwf	??___flmul
  8096  0AC8                     u3975:
  8097  0AC8  1003               	clrc
  8098  0AC9  0DB6               	rlf	___flmul@grs,f
  8099  0ACA  0DB7               	rlf	___flmul@grs+1,f
  8100  0ACB  0DB8               	rlf	___flmul@grs+2,f
  8101  0ACC  0DB9               	rlf	___flmul@grs+3,f
  8102  0ACD  0BB0               	decfsz	??___flmul,f
  8103  0ACE  2AC8               	goto	u3975
  8104  0ACF  0828               	movf	___flmul@b,w
  8105  0AD0  00B0               	movwf	??___flmul
  8106  0AD1  0830               	movf	??___flmul,w
  8107  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  8108  0AD3  082C               	movf	___flmul@a,w
  8109  0AD4  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  8110  0AD9  0874               	movf	?__Umul8_16+1,w
  8111  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  8112  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  8113  0ADC  00C1               	movwf	___flmul@temp+1
  8114  0ADD  0873               	movf	?__Umul8_16,w
  8115  0ADE  00C0               	movwf	___flmul@temp
  8116  0ADF                     l2765:
  8117  0ADF  0840               	movf	___flmul@temp,w
  8118  0AE0  00B0               	movwf	??___flmul
  8119  0AE1  0841               	movf	___flmul@temp+1,w
  8120  0AE2  00B1               	movwf	??___flmul+1
  8121  0AE3  01B2               	clrf	??___flmul+2
  8122  0AE4  01B3               	clrf	??___flmul+3
  8123  0AE5  0830               	movf	??___flmul,w
  8124  0AE6  07B6               	addwf	___flmul@grs,f
  8125  0AE7  0831               	movf	??___flmul+1,w
  8126  0AE8  1103               	clrz
  8127  0AE9  1803               	skipnc
  8128  0AEA  3E01               	addlw	1
  8129  0AEB  1903               	skipnz
  8130  0AEC  2AEE               	goto	u3981
  8131  0AED  07B7               	addwf	___flmul@grs+1,f
  8132  0AEE                     u3981:
  8133  0AEE  0832               	movf	??___flmul+2,w
  8134  0AEF  1103               	clrz
  8135  0AF0  1803               	skipnc
  8136  0AF1  3E01               	addlw	1
  8137  0AF2  1903               	skipnz
  8138  0AF3  2AF5               	goto	u3982
  8139  0AF4  07B8               	addwf	___flmul@grs+2,f
  8140  0AF5                     u3982:
  8141  0AF5  0833               	movf	??___flmul+3,w
  8142  0AF6  1103               	clrz
  8143  0AF7  1803               	skipnc
  8144  0AF8  3E01               	addlw	1
  8145  0AF9  1903               	skipnz
  8146  0AFA  2AFC               	goto	u3983
  8147  0AFB  07B9               	addwf	___flmul@grs+3,f
  8148  0AFC                     u3983:
  8149  0AFC                     l2767:
  8150  0AFC  0829               	movf	___flmul@b+1,w
  8151  0AFD  00B0               	movwf	??___flmul
  8152  0AFE  0830               	movf	??___flmul,w
  8153  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  8154  0B00  082E               	movf	___flmul@a+2,w
  8155  0B01  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  8156  0B06  0874               	movf	?__Umul8_16+1,w
  8157  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  8158  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  8159  0B09  00C1               	movwf	___flmul@temp+1
  8160  0B0A  0873               	movf	?__Umul8_16,w
  8161  0B0B  00C0               	movwf	___flmul@temp
  8162  0B0C  0840               	movf	___flmul@temp,w
  8163  0B0D  00B0               	movwf	??___flmul
  8164  0B0E  0841               	movf	___flmul@temp+1,w
  8165  0B0F  00B1               	movwf	??___flmul+1
  8166  0B10  01B2               	clrf	??___flmul+2
  8167  0B11  01B3               	clrf	??___flmul+3
  8168  0B12  0830               	movf	??___flmul,w
  8169  0B13  07BC               	addwf	___flmul@prod,f
  8170  0B14  0831               	movf	??___flmul+1,w
  8171  0B15  1103               	clrz
  8172  0B16  1803               	skipnc
  8173  0B17  3E01               	addlw	1
  8174  0B18  1903               	skipnz
  8175  0B19  2B1B               	goto	u3991
  8176  0B1A  07BD               	addwf	___flmul@prod+1,f
  8177  0B1B                     u3991:
  8178  0B1B  0832               	movf	??___flmul+2,w
  8179  0B1C  1103               	clrz
  8180  0B1D  1803               	skipnc
  8181  0B1E  3E01               	addlw	1
  8182  0B1F  1903               	skipnz
  8183  0B20  2B22               	goto	u3992
  8184  0B21  07BE               	addwf	___flmul@prod+2,f
  8185  0B22                     u3992:
  8186  0B22  0833               	movf	??___flmul+3,w
  8187  0B23  1103               	clrz
  8188  0B24  1803               	skipnc
  8189  0B25  3E01               	addlw	1
  8190  0B26  1903               	skipnz
  8191  0B27  2B29               	goto	u3993
  8192  0B28  07BF               	addwf	___flmul@prod+3,f
  8193  0B29                     u3993:
  8194  0B29                     l2769:
  8195  0B29  082A               	movf	___flmul@b+2,w
  8196  0B2A  00B0               	movwf	??___flmul
  8197  0B2B  0830               	movf	??___flmul,w
  8198  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  8199  0B2D  082D               	movf	___flmul@a+1,w
  8200  0B2E  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  8201  0B33  0874               	movf	?__Umul8_16+1,w
  8202  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  8203  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  8204  0B36  00C1               	movwf	___flmul@temp+1
  8205  0B37  0873               	movf	?__Umul8_16,w
  8206  0B38  00C0               	movwf	___flmul@temp
  8207  0B39                     l2771:
  8208  0B39  0840               	movf	___flmul@temp,w
  8209  0B3A  00B0               	movwf	??___flmul
  8210  0B3B  0841               	movf	___flmul@temp+1,w
  8211  0B3C  00B1               	movwf	??___flmul+1
  8212  0B3D  01B2               	clrf	??___flmul+2
  8213  0B3E  01B3               	clrf	??___flmul+3
  8214  0B3F  0830               	movf	??___flmul,w
  8215  0B40  07BC               	addwf	___flmul@prod,f
  8216  0B41  0831               	movf	??___flmul+1,w
  8217  0B42  1103               	clrz
  8218  0B43  1803               	skipnc
  8219  0B44  3E01               	addlw	1
  8220  0B45  1903               	skipnz
  8221  0B46  2B48               	goto	u4001
  8222  0B47  07BD               	addwf	___flmul@prod+1,f
  8223  0B48                     u4001:
  8224  0B48  0832               	movf	??___flmul+2,w
  8225  0B49  1103               	clrz
  8226  0B4A  1803               	skipnc
  8227  0B4B  3E01               	addlw	1
  8228  0B4C  1903               	skipnz
  8229  0B4D  2B4F               	goto	u4002
  8230  0B4E  07BE               	addwf	___flmul@prod+2,f
  8231  0B4F                     u4002:
  8232  0B4F  0833               	movf	??___flmul+3,w
  8233  0B50  1103               	clrz
  8234  0B51  1803               	skipnc
  8235  0B52  3E01               	addlw	1
  8236  0B53  1903               	skipnz
  8237  0B54  2B56               	goto	u4003
  8238  0B55  07BF               	addwf	___flmul@prod+3,f
  8239  0B56                     u4003:
  8240  0B56  082A               	movf	___flmul@b+2,w
  8241  0B57  00B0               	movwf	??___flmul
  8242  0B58  0830               	movf	??___flmul,w
  8243  0B59  00F3               	movwf	__Umul8_16@multiplicand
  8244  0B5A  082E               	movf	___flmul@a+2,w
  8245  0B5B  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  8246  0B60  0874               	movf	?__Umul8_16+1,w
  8247  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8248  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8249  0B63  00C1               	movwf	___flmul@temp+1
  8250  0B64  0873               	movf	?__Umul8_16,w
  8251  0B65  00C0               	movwf	___flmul@temp
  8252  0B66                     l2773:
  8253  0B66  0840               	movf	___flmul@temp,w
  8254  0B67  00B0               	movwf	??___flmul
  8255  0B68  0841               	movf	___flmul@temp+1,w
  8256  0B69  00B1               	movwf	??___flmul+1
  8257  0B6A  01B2               	clrf	??___flmul+2
  8258  0B6B  01B3               	clrf	??___flmul+3
  8259  0B6C  3008               	movlw	8
  8260  0B6D                     u4015:
  8261  0B6D  1003               	clrc
  8262  0B6E  0DB0               	rlf	??___flmul,f
  8263  0B6F  0DB1               	rlf	??___flmul+1,f
  8264  0B70  0DB2               	rlf	??___flmul+2,f
  8265  0B71  0DB3               	rlf	??___flmul+3,f
  8266  0B72                     u4010:
  8267  0B72  3EFF               	addlw	-1
  8268  0B73  1D03               	skipz
  8269  0B74  2B6D               	goto	u4015
  8270  0B75  0830               	movf	??___flmul,w
  8271  0B76  07BC               	addwf	___flmul@prod,f
  8272  0B77  0831               	movf	??___flmul+1,w
  8273  0B78  1103               	clrz
  8274  0B79  1803               	skipnc
  8275  0B7A  3E01               	addlw	1
  8276  0B7B  1903               	skipnz
  8277  0B7C  2B7E               	goto	u4021
  8278  0B7D  07BD               	addwf	___flmul@prod+1,f
  8279  0B7E                     u4021:
  8280  0B7E  0832               	movf	??___flmul+2,w
  8281  0B7F  1103               	clrz
  8282  0B80  1803               	skipnc
  8283  0B81  3E01               	addlw	1
  8284  0B82  1903               	skipnz
  8285  0B83  2B85               	goto	u4022
  8286  0B84  07BE               	addwf	___flmul@prod+2,f
  8287  0B85                     u4022:
  8288  0B85  0833               	movf	??___flmul+3,w
  8289  0B86  1103               	clrz
  8290  0B87  1803               	skipnc
  8291  0B88  3E01               	addlw	1
  8292  0B89  1903               	skipnz
  8293  0B8A  2B8C               	goto	u4023
  8294  0B8B  07BF               	addwf	___flmul@prod+3,f
  8295  0B8C                     u4023:
  8296  0B8C                     l2775:
  8297  0B8C  0836               	movf	___flmul@grs,w
  8298  0B8D  00B0               	movwf	??___flmul
  8299  0B8E  0837               	movf	___flmul@grs+1,w
  8300  0B8F  00B1               	movwf	??___flmul+1
  8301  0B90  0838               	movf	___flmul@grs+2,w
  8302  0B91  00B2               	movwf	??___flmul+2
  8303  0B92  0839               	movf	___flmul@grs+3,w
  8304  0B93  00B3               	movwf	??___flmul+3
  8305  0B94  3018               	movlw	24
  8306  0B95                     u4035:
  8307  0B95  1003               	clrc
  8308  0B96  0CB3               	rrf	??___flmul+3,f
  8309  0B97  0CB2               	rrf	??___flmul+2,f
  8310  0B98  0CB1               	rrf	??___flmul+1,f
  8311  0B99  0CB0               	rrf	??___flmul,f
  8312  0B9A                     u4030:
  8313  0B9A  3EFF               	addlw	-1
  8314  0B9B  1D03               	skipz
  8315  0B9C  2B95               	goto	u4035
  8316  0B9D  0830               	movf	??___flmul,w
  8317  0B9E  07BC               	addwf	___flmul@prod,f
  8318  0B9F  0831               	movf	??___flmul+1,w
  8319  0BA0  1103               	clrz
  8320  0BA1  1803               	skipnc
  8321  0BA2  3E01               	addlw	1
  8322  0BA3  1903               	skipnz
  8323  0BA4  2BA6               	goto	u4041
  8324  0BA5  07BD               	addwf	___flmul@prod+1,f
  8325  0BA6                     u4041:
  8326  0BA6  0832               	movf	??___flmul+2,w
  8327  0BA7  1103               	clrz
  8328  0BA8  1803               	skipnc
  8329  0BA9  3E01               	addlw	1
  8330  0BAA  1903               	skipnz
  8331  0BAB  2BAD               	goto	u4042
  8332  0BAC  07BE               	addwf	___flmul@prod+2,f
  8333  0BAD                     u4042:
  8334  0BAD  0833               	movf	??___flmul+3,w
  8335  0BAE  1103               	clrz
  8336  0BAF  1803               	skipnc
  8337  0BB0  3E01               	addlw	1
  8338  0BB1  1903               	skipnz
  8339  0BB2  2BB4               	goto	u4043
  8340  0BB3  07BF               	addwf	___flmul@prod+3,f
  8341  0BB4                     u4043:
  8342  0BB4                     l2777:
  8343  0BB4  3008               	movlw	8
  8344  0BB5  00B0               	movwf	??___flmul
  8345  0BB6                     u4055:
  8346  0BB6  1003               	clrc
  8347  0BB7  0DB6               	rlf	___flmul@grs,f
  8348  0BB8  0DB7               	rlf	___flmul@grs+1,f
  8349  0BB9  0DB8               	rlf	___flmul@grs+2,f
  8350  0BBA  0DB9               	rlf	___flmul@grs+3,f
  8351  0BBB  0BB0               	decfsz	??___flmul,f
  8352  0BBC  2BB6               	goto	u4055
  8353  0BBD                     l2779:
  8354  0BBD  083B               	movf	___flmul@bexp,w
  8355  0BBE  073A               	addwf	___flmul@aexp,w
  8356  0BBF  00B0               	movwf	??___flmul
  8357  0BC0  01B1               	clrf	??___flmul+1
  8358  0BC1  0DB1               	rlf	??___flmul+1,f
  8359  0BC2  0830               	movf	??___flmul,w
  8360  0BC3  3E82               	addlw	130
  8361  0BC4  00C0               	movwf	___flmul@temp
  8362  0BC5  0831               	movf	??___flmul+1,w
  8363  0BC6  1803               	skipnc
  8364  0BC7  3E01               	addlw	1
  8365  0BC8  3EFF               	addlw	255
  8366  0BC9  00C1               	movwf	___flmul@temp+1
  8367  0BCA  2BE8               	goto	l2791
  8368  0BCB                     l2781:
  8369  0BCB  3001               	movlw	1
  8370  0BCC  00B0               	movwf	??___flmul
  8371  0BCD                     u4065:
  8372  0BCD  1003               	clrc
  8373  0BCE  0DBC               	rlf	___flmul@prod,f
  8374  0BCF  0DBD               	rlf	___flmul@prod+1,f
  8375  0BD0  0DBE               	rlf	___flmul@prod+2,f
  8376  0BD1  0DBF               	rlf	___flmul@prod+3,f
  8377  0BD2  0BB0               	decfsz	??___flmul,f
  8378  0BD3  2BCD               	goto	u4065
  8379  0BD4                     l2783:
  8380  0BD4  1FB9               	btfss	___flmul@grs+3,7
  8381  0BD5  2BD7               	goto	u4071
  8382  0BD6  2BD8               	goto	u4070
  8383  0BD7                     u4071:
  8384  0BD7  2BD9               	goto	l2787
  8385  0BD8                     u4070:
  8386  0BD8                     l2785:
  8387  0BD8  143C               	bsf	___flmul@prod,0
  8388  0BD9                     l2787:
  8389  0BD9  3001               	movlw	1
  8390  0BDA  00B0               	movwf	??___flmul
  8391  0BDB                     u4085:
  8392  0BDB  1003               	clrc
  8393  0BDC  0DB6               	rlf	___flmul@grs,f
  8394  0BDD  0DB7               	rlf	___flmul@grs+1,f
  8395  0BDE  0DB8               	rlf	___flmul@grs+2,f
  8396  0BDF  0DB9               	rlf	___flmul@grs+3,f
  8397  0BE0  0BB0               	decfsz	??___flmul,f
  8398  0BE1  2BDB               	goto	u4085
  8399  0BE2                     l2789:
  8400  0BE2  30FF               	movlw	255
  8401  0BE3  07C0               	addwf	___flmul@temp,f
  8402  0BE4  1803               	skipnc
  8403  0BE5  0AC1               	incf	___flmul@temp+1,f
  8404  0BE6  30FF               	movlw	255
  8405  0BE7  07C1               	addwf	___flmul@temp+1,f
  8406  0BE8                     l2791:
  8407  0BE8  1FBE               	btfss	___flmul@prod+2,7
  8408  0BE9  2BEB               	goto	u4091
  8409  0BEA  2BEC               	goto	u4090
  8410  0BEB                     u4091:
  8411  0BEB  2BCB               	goto	l2781
  8412  0BEC                     u4090:
  8413  0BEC                     l2793:
  8414  0BEC  01BA               	clrf	___flmul@aexp
  8415  0BED                     l2795:
  8416  0BED  1FB9               	btfss	___flmul@grs+3,7
  8417  0BEE  2BF0               	goto	u4101
  8418  0BEF  2BF1               	goto	u4100
  8419  0BF0                     u4101:
  8420  0BF0  2C0D               	goto	l2803
  8421  0BF1                     u4100:
  8422  0BF1                     l2797:
  8423  0BF1  30FF               	movlw	255
  8424  0BF2  0536               	andwf	___flmul@grs,w
  8425  0BF3  00B0               	movwf	??___flmul
  8426  0BF4  30FF               	movlw	255
  8427  0BF5  0537               	andwf	___flmul@grs+1,w
  8428  0BF6  00B1               	movwf	??___flmul+1
  8429  0BF7  30FF               	movlw	255
  8430  0BF8  0538               	andwf	___flmul@grs+2,w
  8431  0BF9  00B2               	movwf	??___flmul+2
  8432  0BFA  307F               	movlw	127
  8433  0BFB  0539               	andwf	___flmul@grs+3,w
  8434  0BFC  00B3               	movwf	??___flmul+3
  8435  0BFD  0833               	movf	??___flmul+3,w
  8436  0BFE  0432               	iorwf	??___flmul+2,w
  8437  0BFF  0431               	iorwf	??___flmul+1,w
  8438  0C00  0430               	iorwf	??___flmul,w
  8439  0C01  1903               	skipnz
  8440  0C02  2C04               	goto	u4111
  8441  0C03  2C05               	goto	u4110
  8442  0C04                     u4111:
  8443  0C04  2C08               	goto	l853
  8444  0C05                     u4110:
  8445  0C05                     l2799:
  8446  0C05  01BA               	clrf	___flmul@aexp
  8447  0C06  0ABA               	incf	___flmul@aexp,f
  8448  0C07  2C0D               	goto	l2803
  8449  0C08                     l853:
  8450  0C08  1C3C               	btfss	___flmul@prod,0
  8451  0C09  2C0B               	goto	u4121
  8452  0C0A  2C0C               	goto	u4120
  8453  0C0B                     u4121:
  8454  0C0B  2C0D               	goto	l2803
  8455  0C0C                     u4120:
  8456  0C0C  2C05               	goto	l2799
  8457  0C0D                     l2803:
  8458  0C0D  083A               	movf	___flmul@aexp,w
  8459  0C0E  1903               	btfsc	3,2
  8460  0C0F  2C11               	goto	u4131
  8461  0C10  2C12               	goto	u4130
  8462  0C11                     u4131:
  8463  0C11  2C43               	goto	l2813
  8464  0C12                     u4130:
  8465  0C12                     l2805:
  8466  0C12  3001               	movlw	1
  8467  0C13  07BC               	addwf	___flmul@prod,f
  8468  0C14  3000               	movlw	0
  8469  0C15  1803               	skipnc
  8470  0C16  3001               	movlw	1
  8471  0C17  07BD               	addwf	___flmul@prod+1,f
  8472  0C18  3000               	movlw	0
  8473  0C19  1803               	skipnc
  8474  0C1A  3001               	movlw	1
  8475  0C1B  07BE               	addwf	___flmul@prod+2,f
  8476  0C1C  3000               	movlw	0
  8477  0C1D  1803               	skipnc
  8478  0C1E  3001               	movlw	1
  8479  0C1F  07BF               	addwf	___flmul@prod+3,f
  8480  0C20                     l2807:
  8481  0C20  1C3F               	btfss	___flmul@prod+3,0
  8482  0C21  2C23               	goto	u4141
  8483  0C22  2C24               	goto	u4140
  8484  0C23                     u4141:
  8485  0C23  2C43               	goto	l2813
  8486  0C24                     u4140:
  8487  0C24                     l2809:
  8488  0C24  083C               	movf	___flmul@prod,w
  8489  0C25  00B0               	movwf	??___flmul
  8490  0C26  083D               	movf	___flmul@prod+1,w
  8491  0C27  00B1               	movwf	??___flmul+1
  8492  0C28  083E               	movf	___flmul@prod+2,w
  8493  0C29  00B2               	movwf	??___flmul+2
  8494  0C2A  083F               	movf	___flmul@prod+3,w
  8495  0C2B  00B3               	movwf	??___flmul+3
  8496  0C2C  3001               	movlw	1
  8497  0C2D  00B4               	movwf	??___flmul+4
  8498  0C2E                     u4155:
  8499  0C2E  0D33               	rlf	??___flmul+3,w
  8500  0C2F  0CB3               	rrf	??___flmul+3,f
  8501  0C30  0CB2               	rrf	??___flmul+2,f
  8502  0C31  0CB1               	rrf	??___flmul+1,f
  8503  0C32  0CB0               	rrf	??___flmul,f
  8504  0C33                     u4150:
  8505  0C33  0BB4               	decfsz	??___flmul+4,f
  8506  0C34  2C2E               	goto	u4155
  8507  0C35  0833               	movf	??___flmul+3,w
  8508  0C36  00BF               	movwf	___flmul@prod+3
  8509  0C37  0832               	movf	??___flmul+2,w
  8510  0C38  00BE               	movwf	___flmul@prod+2
  8511  0C39  0831               	movf	??___flmul+1,w
  8512  0C3A  00BD               	movwf	___flmul@prod+1
  8513  0C3B  0830               	movf	??___flmul,w
  8514  0C3C  00BC               	movwf	___flmul@prod
  8515  0C3D                     l2811:
  8516  0C3D  3001               	movlw	1
  8517  0C3E  07C0               	addwf	___flmul@temp,f
  8518  0C3F  1803               	skipnc
  8519  0C40  0AC1               	incf	___flmul@temp+1,f
  8520  0C41  3000               	movlw	0
  8521  0C42  07C1               	addwf	___flmul@temp+1,f
  8522  0C43                     l2813:
  8523  0C43  0841               	movf	___flmul@temp+1,w
  8524  0C44  3A80               	xorlw	128
  8525  0C45  00FF               	movwf	btemp+1
  8526  0C46  3080               	movlw	128
  8527  0C47  027F               	subwf	btemp+1,w
  8528  0C48  1D03               	skipz
  8529  0C49  2C4C               	goto	u4165
  8530  0C4A  30FF               	movlw	255
  8531  0C4B  0240               	subwf	___flmul@temp,w
  8532  0C4C                     u4165:
  8533  0C4C  1C03               	skipc
  8534  0C4D  2C4F               	goto	u4161
  8535  0C4E  2C50               	goto	u4160
  8536  0C4F                     u4161:
  8537  0C4F  2C5B               	goto	l2817
  8538  0C50                     u4160:
  8539  0C50                     l2815:
  8540  0C50  307F               	movlw	127
  8541  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  8542  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  8543  0C53  00BF               	movwf	___flmul@prod+3
  8544  0C54  3080               	movlw	128
  8545  0C55  00BE               	movwf	___flmul@prod+2
  8546  0C56  3000               	movlw	0
  8547  0C57  00BD               	movwf	___flmul@prod+1
  8548  0C58  3000               	movlw	0
  8549  0C59  00BC               	movwf	___flmul@prod
  8550  0C5A  2C90               	goto	l859
  8551  0C5B                     l2817:
  8552  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  8553  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  8554  0C5D  0841               	movf	___flmul@temp+1,w
  8555  0C5E  3A80               	xorlw	128
  8556  0C5F  00FF               	movwf	btemp+1
  8557  0C60  3080               	movlw	128
  8558  0C61  027F               	subwf	btemp+1,w
  8559  0C62  1D03               	skipz
  8560  0C63  2C66               	goto	u4175
  8561  0C64  3001               	movlw	1
  8562  0C65  0240               	subwf	___flmul@temp,w
  8563  0C66                     u4175:
  8564  0C66  1803               	skipnc
  8565  0C67  2C69               	goto	u4171
  8566  0C68  2C6A               	goto	u4170
  8567  0C69                     u4171:
  8568  0C69  2C76               	goto	l2823
  8569  0C6A                     u4170:
  8570  0C6A                     l2819:
  8571  0C6A  3000               	movlw	0
  8572  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8573  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  8574  0C6D  00BF               	movwf	___flmul@prod+3
  8575  0C6E  3000               	movlw	0
  8576  0C6F  00BE               	movwf	___flmul@prod+2
  8577  0C70  3000               	movlw	0
  8578  0C71  00BD               	movwf	___flmul@prod+1
  8579  0C72  3000               	movlw	0
  8580  0C73  00BC               	movwf	___flmul@prod
  8581  0C74                     l2821:
  8582  0C74  01B5               	clrf	___flmul@sign
  8583  0C75  2C90               	goto	l859
  8584  0C76                     l2823:
  8585  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8586  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  8587  0C78  0840               	movf	___flmul@temp,w
  8588  0C79  00B0               	movwf	??___flmul
  8589  0C7A  0830               	movf	??___flmul,w
  8590  0C7B  00BB               	movwf	___flmul@bexp
  8591  0C7C  30FF               	movlw	255
  8592  0C7D  05BC               	andwf	___flmul@prod,f
  8593  0C7E  30FF               	movlw	255
  8594  0C7F  05BD               	andwf	___flmul@prod+1,f
  8595  0C80  307F               	movlw	127
  8596  0C81  05BE               	andwf	___flmul@prod+2,f
  8597  0C82  3000               	movlw	0
  8598  0C83  05BF               	andwf	___flmul@prod+3,f
  8599  0C84                     l2825:
  8600  0C84  1C3B               	btfss	___flmul@bexp,0
  8601  0C85  2C87               	goto	u4181
  8602  0C86  2C88               	goto	u4180
  8603  0C87                     u4181:
  8604  0C87  2C89               	goto	l2829
  8605  0C88                     u4180:
  8606  0C88                     l2827:
  8607  0C88  17BE               	bsf	___flmul@prod+2,7
  8608  0C89                     l2829:
  8609  0C89  083B               	movf	___flmul@bexp,w
  8610  0C8A  00B0               	movwf	??___flmul
  8611  0C8B  1003               	clrc
  8612  0C8C  0C30               	rrf	??___flmul,w
  8613  0C8D  00B1               	movwf	??___flmul+1
  8614  0C8E  0831               	movf	??___flmul+1,w
  8615  0C8F  00BF               	movwf	___flmul@prod+3
  8616  0C90                     l859:
  8617  0C90  0835               	movf	___flmul@sign,w
  8618  0C91  00B0               	movwf	??___flmul
  8619  0C92  0830               	movf	??___flmul,w
  8620  0C93  04BF               	iorwf	___flmul@prod+3,f
  8621  0C94                     l2831:
  8622  0C94  083F               	movf	___flmul@prod+3,w
  8623  0C95  00AB               	movwf	?___flmul+3
  8624  0C96  083E               	movf	___flmul@prod+2,w
  8625  0C97  00AA               	movwf	?___flmul+2
  8626  0C98  083D               	movf	___flmul@prod+1,w
  8627  0C99  00A9               	movwf	?___flmul+1
  8628  0C9A  083C               	movf	___flmul@prod,w
  8629  0C9B  00A8               	movwf	?___flmul
  8630  0C9C                     l847:
  8631  0C9C  0008               	return
  8632  0C9D                     __end_of___flmul:
  8633                           
  8634                           	psect	text25
  8635  0806                     __ptext25:	
  8636 ;; *************** function __Umul8_16 *****************
  8637 ;; Defined at:
  8638 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  8639 ;; Parameters:    Size  Location     Type
  8640 ;;  multiplier      1    wreg     unsigned char 
  8641 ;;  multiplicand    1    3[COMMON] unsigned char 
  8642 ;; Auto vars:     Size  Location     Type
  8643 ;;  multiplier      1    4[BANK0 ] unsigned char 
  8644 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  8645 ;;  product         2    0[BANK0 ] unsigned int 
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  2    3[COMMON] unsigned int 
  8648 ;; Registers used:
  8649 ;;		wreg, status,2, status,0
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8655 ;;      Params:         2       0       0       0       0
  8656 ;;      Locals:         0       5       0       0       0
  8657 ;;      Temps:          2       0       0       0       0
  8658 ;;      Totals:         4       5       0       0       0
  8659 ;;Total ram usage:        9 bytes
  8660 ;; Hardware stack levels used:    1
  8661 ;; Hardware stack levels required when called:    2
  8662 ;; This function calls:
  8663 ;;		Nothing
  8664 ;; This function is called by:
  8665 ;;		___flmul
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669                           
  8670                           ;psect for function __Umul8_16
  8671  0806                     __Umul8_16:
  8672                           
  8673                           ;incstack = 0
  8674                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8675                           ;__Umul8_16@multiplier stored from wreg
  8676  0806  1283               	bcf	3,5	;RP0=0, select bank0
  8677  0807  1303               	bcf	3,6	;RP1=0, select bank0
  8678  0808  00A4               	movwf	__Umul8_16@multiplier
  8679  0809                     l2339:
  8680  0809  01A0               	clrf	__Umul8_16@product
  8681  080A  01A1               	clrf	__Umul8_16@product+1
  8682  080B                     l2341:
  8683  080B  0873               	movf	__Umul8_16@multiplicand,w
  8684  080C  00F5               	movwf	??__Umul8_16
  8685  080D  01F6               	clrf	??__Umul8_16+1
  8686  080E  0875               	movf	??__Umul8_16,w
  8687  080F  00A2               	movwf	__Umul8_16@word_mpld
  8688  0810  0876               	movf	??__Umul8_16+1,w
  8689  0811  00A3               	movwf	__Umul8_16@word_mpld+1
  8690  0812                     l2343:
  8691  0812  1C24               	btfss	__Umul8_16@multiplier,0
  8692  0813  2815               	goto	u2931
  8693  0814  2816               	goto	u2930
  8694  0815                     u2931:
  8695  0815  281C               	goto	l866
  8696  0816                     u2930:
  8697  0816                     l2345:
  8698  0816  0822               	movf	__Umul8_16@word_mpld,w
  8699  0817  07A0               	addwf	__Umul8_16@product,f
  8700  0818  1803               	skipnc
  8701  0819  0AA1               	incf	__Umul8_16@product+1,f
  8702  081A  0823               	movf	__Umul8_16@word_mpld+1,w
  8703  081B  07A1               	addwf	__Umul8_16@product+1,f
  8704  081C                     l866:
  8705  081C  3001               	movlw	1
  8706  081D                     u2945:
  8707  081D  1003               	clrc
  8708  081E  0DA2               	rlf	__Umul8_16@word_mpld,f
  8709  081F  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  8710  0820  3EFF               	addlw	-1
  8711  0821  1D03               	skipz
  8712  0822  281D               	goto	u2945
  8713  0823  1003               	clrc
  8714  0824  0CA4               	rrf	__Umul8_16@multiplier,f
  8715  0825                     l2347:
  8716  0825  0824               	movf	__Umul8_16@multiplier,w
  8717  0826  1D03               	btfss	3,2
  8718  0827  2829               	goto	u2951
  8719  0828  282A               	goto	u2950
  8720  0829                     u2951:
  8721  0829  2812               	goto	l2343
  8722  082A                     u2950:
  8723  082A                     l2349:
  8724  082A  0821               	movf	__Umul8_16@product+1,w
  8725  082B  00F4               	movwf	?__Umul8_16+1
  8726  082C  0820               	movf	__Umul8_16@product,w
  8727  082D  00F3               	movwf	?__Umul8_16
  8728  082E                     l868:
  8729  082E  0008               	return
  8730  082F                     __end_of__Umul8_16:
  8731                           
  8732                           	psect	text26
  8733  19CA                     __ptext26:	
  8734 ;; *************** function _cfg_usart *****************
  8735 ;; Defined at:
  8736 ;;		line 207 in file "main.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;		None
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;		None
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  1    wreg      void 
  8743 ;; Registers used:
  8744 ;;		wreg, status,2
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8750 ;;      Params:         0       0       0       0       0
  8751 ;;      Locals:         0       0       0       0       0
  8752 ;;      Temps:          0       0       0       0       0
  8753 ;;      Totals:         0       0       0       0       0
  8754 ;;Total ram usage:        0 bytes
  8755 ;; Hardware stack levels used:    1
  8756 ;; Hardware stack levels required when called:    2
  8757 ;; This function calls:
  8758 ;;		Nothing
  8759 ;; This function is called by:
  8760 ;;		_main
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764                           
  8765                           ;psect for function _cfg_usart
  8766  19CA                     _cfg_usart:
  8767  19CA                     l3269:	
  8768                           ;incstack = 0
  8769                           ; Regs used in _cfg_usart: [wreg+status,2]
  8770                           
  8771                           
  8772                           ;main.c: 209:     TXSTAbits.SYNC = 0;
  8773  19CA  1683               	bsf	3,5	;RP0=1, select bank1
  8774  19CB  1303               	bcf	3,6	;RP1=0, select bank1
  8775  19CC  1218               	bcf	24,4	;volatile
  8776                           
  8777                           ;main.c: 210:     TXSTAbits.BRGH = 1;
  8778  19CD  1518               	bsf	24,2	;volatile
  8779                           
  8780                           ;main.c: 212:     BAUDCTLbits.BRG16 = 1;
  8781  19CE  1683               	bsf	3,5	;RP0=1, select bank3
  8782  19CF  1703               	bsf	3,6	;RP1=1, select bank3
  8783  19D0  1587               	bsf	7,3	;volatile
  8784  19D1                     l3271:
  8785                           
  8786                           ;main.c: 214:     SPBRG = 25;
  8787  19D1  3019               	movlw	25
  8788  19D2  1683               	bsf	3,5	;RP0=1, select bank1
  8789  19D3  1303               	bcf	3,6	;RP1=0, select bank1
  8790  19D4  0099               	movwf	25	;volatile
  8791  19D5                     l3273:
  8792                           
  8793                           ;main.c: 215:     SPBRGH = 0;
  8794  19D5  019A               	clrf	26	;volatile
  8795  19D6                     l3275:
  8796                           
  8797                           ;main.c: 217:     RCSTAbits.SPEN = 1;
  8798  19D6  1283               	bcf	3,5	;RP0=0, select bank0
  8799  19D7  1303               	bcf	3,6	;RP1=0, select bank0
  8800  19D8  1798               	bsf	24,7	;volatile
  8801  19D9                     l3277:
  8802                           
  8803                           ;main.c: 218:     RCSTAbits.RX9 = 0;
  8804  19D9  1318               	bcf	24,6	;volatile
  8805  19DA                     l3279:
  8806                           
  8807                           ;main.c: 219:     RCSTAbits.CREN = 1;
  8808  19DA  1618               	bsf	24,4	;volatile
  8809  19DB                     l3281:
  8810                           
  8811                           ;main.c: 221:     TXSTAbits.TXEN = 1;
  8812  19DB  1683               	bsf	3,5	;RP0=1, select bank1
  8813  19DC  1303               	bcf	3,6	;RP1=0, select bank1
  8814  19DD  1698               	bsf	24,5	;volatile
  8815  19DE                     l134:
  8816  19DE  0008               	return
  8817  19DF                     __end_of_cfg_usart:
  8818                           
  8819                           	psect	text27
  8820  19B7                     __ptext27:	
  8821 ;; *************** function _cfg_io *****************
  8822 ;; Defined at:
  8823 ;;		line 176 in file "main.c"
  8824 ;; Parameters:    Size  Location     Type
  8825 ;;		None
  8826 ;; Auto vars:     Size  Location     Type
  8827 ;;		None
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  1    wreg      void 
  8830 ;; Registers used:
  8831 ;;		wreg, status,2
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8837 ;;      Params:         0       0       0       0       0
  8838 ;;      Locals:         0       0       0       0       0
  8839 ;;      Temps:          0       0       0       0       0
  8840 ;;      Totals:         0       0       0       0       0
  8841 ;;Total ram usage:        0 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:    2
  8844 ;; This function calls:
  8845 ;;		Nothing
  8846 ;; This function is called by:
  8847 ;;		_main
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           
  8852                           ;psect for function _cfg_io
  8853  19B7                     _cfg_io:
  8854  19B7                     l3239:	
  8855                           ;incstack = 0
  8856                           ; Regs used in _cfg_io: [wreg+status,2]
  8857                           
  8858                           
  8859                           ;main.c: 177:     ANSELH = 0x00;
  8860  19B7  1683               	bsf	3,5	;RP0=1, select bank3
  8861  19B8  1703               	bsf	3,6	;RP1=1, select bank3
  8862  19B9  0189               	clrf	9	;volatile
  8863  19BA                     l3241:
  8864                           
  8865                           ;main.c: 178:     ANSEL = 0x20;
  8866  19BA  3020               	movlw	32
  8867  19BB  0088               	movwf	8	;volatile
  8868  19BC                     l3243:
  8869                           
  8870                           ;main.c: 180:     TRISB = 0x03;
  8871  19BC  3003               	movlw	3
  8872  19BD  1683               	bsf	3,5	;RP0=1, select bank1
  8873  19BE  1303               	bcf	3,6	;RP1=0, select bank1
  8874  19BF  0086               	movwf	6	;volatile
  8875  19C0                     l3245:
  8876                           
  8877                           ;main.c: 181:     TRISCbits.TRISC0 = 0;
  8878  19C0  1007               	bcf	7,0	;volatile
  8879  19C1                     l3247:
  8880                           
  8881                           ;main.c: 182:     TRISCbits.TRISC1 = 0;
  8882  19C1  1087               	bcf	7,1	;volatile
  8883                           
  8884                           ;main.c: 183:     TRISA = 0X00;
  8885  19C2  0185               	clrf	5	;volatile
  8886                           
  8887                           ;main.c: 184:     TRISD = 0X00;
  8888  19C3  0188               	clrf	8	;volatile
  8889  19C4                     l3249:
  8890                           
  8891                           ;main.c: 185:     TRISE = 0x03;
  8892  19C4  3003               	movlw	3
  8893  19C5  0089               	movwf	9	;volatile
  8894  19C6                     l3251:
  8895                           
  8896                           ;main.c: 186:     PORTA = 0X00;
  8897  19C6  1283               	bcf	3,5	;RP0=0, select bank0
  8898  19C7  1303               	bcf	3,6	;RP1=0, select bank0
  8899  19C8  0185               	clrf	5	;volatile
  8900  19C9                     l125:
  8901  19C9  0008               	return
  8902  19CA                     __end_of_cfg_io:
  8903                           
  8904                           	psect	text28
  8905  1986                     __ptext28:	
  8906 ;; *************** function _cfg_inte *****************
  8907 ;; Defined at:
  8908 ;;		line 225 in file "main.c"
  8909 ;; Parameters:    Size  Location     Type
  8910 ;;		None
  8911 ;; Auto vars:     Size  Location     Type
  8912 ;;		None
  8913 ;; Return value:  Size  Location     Type
  8914 ;;                  1    wreg      void 
  8915 ;; Registers used:
  8916 ;;		None
  8917 ;; Tracked objects:
  8918 ;;		On entry : 0/0
  8919 ;;		On exit  : 0/0
  8920 ;;		Unchanged: 0/0
  8921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8922 ;;      Params:         0       0       0       0       0
  8923 ;;      Locals:         0       0       0       0       0
  8924 ;;      Temps:          0       0       0       0       0
  8925 ;;      Totals:         0       0       0       0       0
  8926 ;;Total ram usage:        0 bytes
  8927 ;; Hardware stack levels used:    1
  8928 ;; Hardware stack levels required when called:    2
  8929 ;; This function calls:
  8930 ;;		Nothing
  8931 ;; This function is called by:
  8932 ;;		_main
  8933 ;; This function uses a non-reentrant model
  8934 ;;
  8935                           
  8936                           
  8937                           ;psect for function _cfg_inte
  8938  1986                     _cfg_inte:
  8939  1986                     l3259:	
  8940                           ;incstack = 0
  8941                           ; Regs used in _cfg_inte: []
  8942                           
  8943                           
  8944                           ;main.c: 226:     INTCONbits.GIE = 1;
  8945  1986  178B               	bsf	11,7	;volatile
  8946                           
  8947                           ;main.c: 227:     INTCONbits.PEIE = 1;
  8948  1987  170B               	bsf	11,6	;volatile
  8949                           
  8950                           ;main.c: 228:     PIE1bits.RCIE = 1;
  8951  1988  1683               	bsf	3,5	;RP0=1, select bank1
  8952  1989  1303               	bcf	3,6	;RP1=0, select bank1
  8953  198A  168C               	bsf	12,5	;volatile
  8954                           
  8955                           ;main.c: 229:     PIE1bits.ADIE = 1;
  8956  198B  170C               	bsf	12,6	;volatile
  8957                           
  8958                           ;main.c: 230:     PIR1bits.ADIF = 0;
  8959  198C  1283               	bcf	3,5	;RP0=0, select bank0
  8960  198D  1303               	bcf	3,6	;RP1=0, select bank0
  8961  198E  130C               	bcf	12,6	;volatile
  8962  198F                     l137:
  8963  198F  0008               	return
  8964  1990                     __end_of_cfg_inte:
  8965                           
  8966                           	psect	text29
  8967  1976                     __ptext29:	
  8968 ;; *************** function _cfg_clk *****************
  8969 ;; Defined at:
  8970 ;;		line 203 in file "main.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;		None
  8973 ;; Auto vars:     Size  Location     Type
  8974 ;;		None
  8975 ;; Return value:  Size  Location     Type
  8976 ;;                  1    wreg      void 
  8977 ;; Registers used:
  8978 ;;		wreg, status,2, status,0
  8979 ;; Tracked objects:
  8980 ;;		On entry : 0/0
  8981 ;;		On exit  : 0/0
  8982 ;;		Unchanged: 0/0
  8983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8984 ;;      Params:         0       0       0       0       0
  8985 ;;      Locals:         0       0       0       0       0
  8986 ;;      Temps:          0       0       0       0       0
  8987 ;;      Totals:         0       0       0       0       0
  8988 ;;Total ram usage:        0 bytes
  8989 ;; Hardware stack levels used:    1
  8990 ;; Hardware stack levels required when called:    2
  8991 ;; This function calls:
  8992 ;;		Nothing
  8993 ;; This function is called by:
  8994 ;;		_main
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998                           
  8999                           ;psect for function _cfg_clk
  9000  1976                     _cfg_clk:
  9001  1976                     l3255:	
  9002                           ;incstack = 0
  9003                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
  9004                           
  9005                           
  9006                           ;main.c: 204:     OSCCONbits.IRCF = 0b100;
  9007  1976  1683               	bsf	3,5	;RP0=1, select bank1
  9008  1977  1303               	bcf	3,6	;RP1=0, select bank1
  9009  1978  080F               	movf	15,w	;volatile
  9010  1979  398F               	andlw	-113
  9011  197A  3840               	iorlw	64
  9012  197B  008F               	movwf	15	;volatile
  9013  197C                     l3257:
  9014                           
  9015                           ;main.c: 205:     OSCCONbits.SCS = 1;
  9016  197C  140F               	bsf	15,0	;volatile
  9017  197D                     l131:
  9018  197D  0008               	return
  9019  197E                     __end_of_cfg_clk:
  9020                           
  9021                           	psect	text30
  9022  19DF                     __ptext30:	
  9023 ;; *************** function _cfg_adc *****************
  9024 ;; Defined at:
  9025 ;;		line 190 in file "main.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;		None
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;		None
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  1    wreg      void 
  9032 ;; Registers used:
  9033 ;;		wreg, status,2, status,0
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9039 ;;      Params:         0       0       0       0       0
  9040 ;;      Locals:         0       0       0       0       0
  9041 ;;      Temps:          1       0       0       0       0
  9042 ;;      Totals:         1       0       0       0       0
  9043 ;;Total ram usage:        1 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; Hardware stack levels required when called:    2
  9046 ;; This function calls:
  9047 ;;		Nothing
  9048 ;; This function is called by:
  9049 ;;		_main
  9050 ;; This function uses a non-reentrant model
  9051 ;;
  9052                           
  9053                           
  9054                           ;psect for function _cfg_adc
  9055  19DF                     _cfg_adc:
  9056  19DF                     l3261:	
  9057                           ;incstack = 0
  9058                           ; Regs used in _cfg_adc: [wreg+status,2+status,0]
  9059                           
  9060                           
  9061                           ;main.c: 191:     ADCON1bits.ADFM = 0;
  9062  19DF  1683               	bsf	3,5	;RP0=1, select bank1
  9063  19E0  1303               	bcf	3,6	;RP1=0, select bank1
  9064  19E1  139F               	bcf	31,7	;volatile
  9065                           
  9066                           ;main.c: 192:     ADCON1bits.VCFG0 = 0;
  9067  19E2  121F               	bcf	31,4	;volatile
  9068                           
  9069                           ;main.c: 193:     ADCON1bits.VCFG1 = 0;
  9070  19E3  129F               	bcf	31,5	;volatile
  9071                           
  9072                           ;main.c: 195:     ADCON0bits.ADCS0 = 0;
  9073  19E4  1283               	bcf	3,5	;RP0=0, select bank0
  9074  19E5  1303               	bcf	3,6	;RP1=0, select bank0
  9075  19E6  131F               	bcf	31,6	;volatile
  9076                           
  9077                           ;main.c: 196:     ADCON0bits.ADCS1 = 0;
  9078  19E7  139F               	bcf	31,7	;volatile
  9079  19E8                     l3263:
  9080                           
  9081                           ;main.c: 197:     ADCON0bits.CHS = 5;
  9082  19E8  081F               	movf	31,w	;volatile
  9083  19E9  39C3               	andlw	-61
  9084  19EA  3814               	iorlw	20
  9085  19EB  009F               	movwf	31	;volatile
  9086  19EC                     l3265:
  9087                           
  9088                           ;main.c: 198:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9089  19EC  3042               	movlw	66
  9090  19ED  00F3               	movwf	??_cfg_adc
  9091  19EE                     u5877:
  9092  19EE  0BF3               	decfsz	??_cfg_adc,f
  9093  19EF  29EE               	goto	u5877
  9094  19F0  0000               	nop
  9095  19F1                     l3267:
  9096                           
  9097                           ;main.c: 199:     ADCON0bits.ADON = 1;
  9098  19F1  1283               	bcf	3,5	;RP0=0, select bank0
  9099  19F2  1303               	bcf	3,6	;RP1=0, select bank0
  9100  19F3  141F               	bsf	31,0	;volatile
  9101  19F4                     l128:
  9102  19F4  0008               	return
  9103  19F5                     __end_of_cfg_adc:
  9104                           
  9105                           	psect	text31
  9106  1B7E                     __ptext31:	
  9107 ;; *************** function _Lcd_Write_String *****************
  9108 ;; Defined at:
  9109 ;;		line 110 in file "LCD.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;  a               2    6[COMMON] PTR unsigned char 
  9112 ;;		 -> f1(10), STR_1(18), 
  9113 ;; Auto vars:     Size  Location     Type
  9114 ;;  i               2    0[BANK0 ] int 
  9115 ;; Return value:  Size  Location     Type
  9116 ;;                  1    wreg      void 
  9117 ;; Registers used:
  9118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9119 ;; Tracked objects:
  9120 ;;		On entry : 0/0
  9121 ;;		On exit  : 0/0
  9122 ;;		Unchanged: 0/0
  9123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9124 ;;      Params:         2       0       0       0       0
  9125 ;;      Locals:         0       2       0       0       0
  9126 ;;      Temps:          3       0       0       0       0
  9127 ;;      Totals:         5       2       0       0       0
  9128 ;;Total ram usage:        7 bytes
  9129 ;; Hardware stack levels used:    1
  9130 ;; Hardware stack levels required when called:    4
  9131 ;; This function calls:
  9132 ;;		_Lcd_Write_Char
  9133 ;; This function is called by:
  9134 ;;		_main
  9135 ;; This function uses a non-reentrant model
  9136 ;;
  9137                           
  9138                           
  9139                           ;psect for function _Lcd_Write_String
  9140  1B7E                     _Lcd_Write_String:
  9141  1B7E                     l3307:	
  9142                           ;incstack = 0
  9143                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9144                           
  9145                           
  9146                           ;LCD.c: 111:     int i;;LCD.c: 112:     for (i = 0; a[i] != '\0'; i++)
  9147  1B7E  1283               	bcf	3,5	;RP0=0, select bank0
  9148  1B7F  1303               	bcf	3,6	;RP1=0, select bank0
  9149  1B80  01A0               	clrf	Lcd_Write_String@i
  9150  1B81  01A1               	clrf	Lcd_Write_String@i+1
  9151  1B82  2BA7               	goto	l3313
  9152  1B83                     l3309:
  9153                           
  9154                           ;LCD.c: 113:         Lcd_Write_Char(a[i]);
  9155  1B83  0820               	movf	Lcd_Write_String@i,w
  9156  1B84  0776               	addwf	Lcd_Write_String@a,w
  9157  1B85  00F9               	movwf	??_Lcd_Write_String+1
  9158  1B86  0877               	movf	Lcd_Write_String@a+1,w
  9159  1B87  00F8               	movwf	??_Lcd_Write_String
  9160  1B88  1803               	skipnc
  9161  1B89  0AF8               	incf	??_Lcd_Write_String,f
  9162  1B8A  1FA0               	btfss	Lcd_Write_String@i,7
  9163  1B8B  2B8D               	goto	u5300
  9164  1B8C  03F8               	decf	??_Lcd_Write_String,f
  9165  1B8D                     u5300:
  9166  1B8D  0878               	movf	??_Lcd_Write_String,w
  9167  1B8E  00FA               	movwf	??_Lcd_Write_String+2
  9168  1B8F  087A               	movf	??_Lcd_Write_String+2,w
  9169  1B90  1283               	bcf	3,5	;RP0=0, select bank0
  9170  1B91  1303               	bcf	3,6	;RP1=0, select bank0
  9171  1B92  00FF               	movwf	btemp+1
  9172  1B93  0879               	movf	??_Lcd_Write_String+1,w
  9173  1B94  0084               	movwf	4
  9174  1B95  160A  118A  2000  160A  158A  	fcall	stringtab
  9175  1B9A  160A  158A  220F  160A  158A  	fcall	_Lcd_Write_Char
  9176  1B9F                     l3311:
  9177  1B9F  3001               	movlw	1
  9178  1BA0  1283               	bcf	3,5	;RP0=0, select bank0
  9179  1BA1  1303               	bcf	3,6	;RP1=0, select bank0
  9180  1BA2  07A0               	addwf	Lcd_Write_String@i,f
  9181  1BA3  1803               	skipnc
  9182  1BA4  0AA1               	incf	Lcd_Write_String@i+1,f
  9183  1BA5  3000               	movlw	0
  9184  1BA6  07A1               	addwf	Lcd_Write_String@i+1,f
  9185  1BA7                     l3313:
  9186  1BA7  0820               	movf	Lcd_Write_String@i,w
  9187  1BA8  0776               	addwf	Lcd_Write_String@a,w
  9188  1BA9  00F9               	movwf	??_Lcd_Write_String+1
  9189  1BAA  0877               	movf	Lcd_Write_String@a+1,w
  9190  1BAB  00F8               	movwf	??_Lcd_Write_String
  9191  1BAC  1803               	skipnc
  9192  1BAD  0AF8               	incf	??_Lcd_Write_String,f
  9193  1BAE  1FA0               	btfss	Lcd_Write_String@i,7
  9194  1BAF  2BB1               	goto	u5310
  9195  1BB0  03F8               	decf	??_Lcd_Write_String,f
  9196  1BB1                     u5310:
  9197  1BB1  0878               	movf	??_Lcd_Write_String,w
  9198  1BB2  00FA               	movwf	??_Lcd_Write_String+2
  9199  1BB3  087A               	movf	??_Lcd_Write_String+2,w
  9200  1BB4  1283               	bcf	3,5	;RP0=0, select bank0
  9201  1BB5  1303               	bcf	3,6	;RP1=0, select bank0
  9202  1BB6  00FF               	movwf	btemp+1
  9203  1BB7  0879               	movf	??_Lcd_Write_String+1,w
  9204  1BB8  0084               	movwf	4
  9205  1BB9  160A  118A  2000  160A  158A  	fcall	stringtab
  9206  1BBE  3A00               	xorlw	0
  9207  1BBF  1D03               	skipz
  9208  1BC0  2BC2               	goto	u5321
  9209  1BC1  2BC3               	goto	u5320
  9210  1BC2                     u5321:
  9211  1BC2  2B83               	goto	l3309
  9212  1BC3                     u5320:
  9213  1BC3                     l217:
  9214  1BC3  0008               	return
  9215  1BC4                     __end_of_Lcd_Write_String:
  9216                           
  9217                           	psect	text32
  9218  1A0F                     __ptext32:	
  9219 ;; *************** function _Lcd_Write_Char *****************
  9220 ;; Defined at:
  9221 ;;		line 94 in file "LCD.c"
  9222 ;; Parameters:    Size  Location     Type
  9223 ;;  a               1    wreg     unsigned char 
  9224 ;; Auto vars:     Size  Location     Type
  9225 ;;  a               1    5[COMMON] unsigned char 
  9226 ;; Return value:  Size  Location     Type
  9227 ;;                  1    wreg      void 
  9228 ;; Registers used:
  9229 ;;		wreg, status,2, status,0, pclath, cstack
  9230 ;; Tracked objects:
  9231 ;;		On entry : 0/0
  9232 ;;		On exit  : 0/0
  9233 ;;		Unchanged: 0/0
  9234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9235 ;;      Params:         0       0       0       0       0
  9236 ;;      Locals:         1       0       0       0       0
  9237 ;;      Temps:          1       0       0       0       0
  9238 ;;      Totals:         2       0       0       0       0
  9239 ;;Total ram usage:        2 bytes
  9240 ;; Hardware stack levels used:    1
  9241 ;; Hardware stack levels required when called:    3
  9242 ;; This function calls:
  9243 ;;		_Lcd_Port
  9244 ;; This function is called by:
  9245 ;;		_Lcd_Write_String
  9246 ;; This function uses a non-reentrant model
  9247 ;;
  9248                           
  9249                           
  9250                           ;psect for function _Lcd_Write_Char
  9251  1A0F                     _Lcd_Write_Char:
  9252                           
  9253                           ;incstack = 0
  9254                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9255                           ;Lcd_Write_Char@a stored from wreg
  9256  1A0F  00F5               	movwf	Lcd_Write_Char@a
  9257  1A10                     l2849:
  9258                           
  9259                           ;LCD.c: 98:     PORTCbits.RC0 = 1;
  9260  1A10  1283               	bcf	3,5	;RP0=0, select bank0
  9261  1A11  1303               	bcf	3,6	;RP1=0, select bank0
  9262  1A12  1407               	bsf	7,0	;volatile
  9263  1A13                     l2851:
  9264                           
  9265                           ;LCD.c: 99:     Lcd_Port(a);
  9266  1A13  0875               	movf	Lcd_Write_Char@a,w
  9267  1A14  160A  158A  2300  160A  158A  	fcall	_Lcd_Port
  9268  1A19                     l2853:
  9269                           
  9270                           ;LCD.c: 100:     RC1 = 1;
  9271  1A19  1283               	bcf	3,5	;RP0=0, select bank0
  9272  1A1A  1303               	bcf	3,6	;RP1=0, select bank0
  9273  1A1B  1487               	bsf	7,1	;volatile
  9274  1A1C                     l2855:
  9275                           
  9276                           ;LCD.c: 101:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9277  1A1C  301A               	movlw	26
  9278  1A1D  00F4               	movwf	??_Lcd_Write_Char
  9279  1A1E                     u5887:
  9280  1A1E  0BF4               	decfsz	??_Lcd_Write_Char,f
  9281  1A1F  2A1E               	goto	u5887
  9282  1A20  0000               	nop
  9283  1A21                     l2857:
  9284                           
  9285                           ;LCD.c: 102:     RC1 = 0;
  9286  1A21  1283               	bcf	3,5	;RP0=0, select bank0
  9287  1A22  1303               	bcf	3,6	;RP1=0, select bank0
  9288  1A23  1087               	bcf	7,1	;volatile
  9289  1A24                     l2859:
  9290                           
  9291                           ;LCD.c: 103:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9292  1A24  301A               	movlw	26
  9293  1A25  00F4               	movwf	??_Lcd_Write_Char
  9294  1A26                     u5897:
  9295  1A26  0BF4               	decfsz	??_Lcd_Write_Char,f
  9296  1A27  2A26               	goto	u5897
  9297  1A28  0000               	nop
  9298  1A29                     l211:
  9299  1A29  0008               	return
  9300  1A2A                     __end_of_Lcd_Write_Char:
  9301                           
  9302                           	psect	text33
  9303  1AA2                     __ptext33:	
  9304 ;; *************** function _Lcd_Set_Cursor *****************
  9305 ;; Defined at:
  9306 ;;		line 69 in file "LCD.c"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;  a               1    wreg     unsigned char 
  9309 ;;  b               1    7[COMMON] unsigned char 
  9310 ;; Auto vars:     Size  Location     Type
  9311 ;;  a               1    9[COMMON] unsigned char 
  9312 ;;  temp            1   10[COMMON] unsigned char 
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  1    wreg      void 
  9315 ;; Registers used:
  9316 ;;		wreg, status,2, status,0, pclath, cstack
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9322 ;;      Params:         1       0       0       0       0
  9323 ;;      Locals:         2       0       0       0       0
  9324 ;;      Temps:          1       0       0       0       0
  9325 ;;      Totals:         4       0       0       0       0
  9326 ;;Total ram usage:        4 bytes
  9327 ;; Hardware stack levels used:    1
  9328 ;; Hardware stack levels required when called:    4
  9329 ;; This function calls:
  9330 ;;		_Lcd_Cmd
  9331 ;; This function is called by:
  9332 ;;		_main
  9333 ;; This function uses a non-reentrant model
  9334 ;;
  9335                           
  9336                           
  9337                           ;psect for function _Lcd_Set_Cursor
  9338  1AA2                     _Lcd_Set_Cursor:
  9339                           
  9340                           ;incstack = 0
  9341                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9342                           ;Lcd_Set_Cursor@a stored from wreg
  9343  1AA2  00F9               	movwf	Lcd_Set_Cursor@a
  9344  1AA3                     l3295:
  9345                           
  9346                           ;LCD.c: 70:     char temp;;LCD.c: 71:     if (a == 1) {
  9347  1AA3  0379               	decf	Lcd_Set_Cursor@a,w
  9348  1AA4  1D03               	btfss	3,2
  9349  1AA5  2AA7               	goto	u5281
  9350  1AA6  2AA8               	goto	u5280
  9351  1AA7                     u5281:
  9352  1AA7  2AB4               	goto	l3301
  9353  1AA8                     u5280:
  9354  1AA8                     l3297:
  9355                           
  9356                           ;LCD.c: 72:         temp = 0x80 + b - 1;
  9357  1AA8  0877               	movf	Lcd_Set_Cursor@b,w
  9358  1AA9  3E7F               	addlw	127
  9359  1AAA  00F8               	movwf	??_Lcd_Set_Cursor
  9360  1AAB  0878               	movf	??_Lcd_Set_Cursor,w
  9361  1AAC  00FA               	movwf	Lcd_Set_Cursor@temp
  9362  1AAD                     l3299:
  9363                           
  9364                           ;LCD.c: 73:         Lcd_Cmd(temp);
  9365  1AAD  087A               	movf	Lcd_Set_Cursor@temp,w
  9366  1AAE  160A  158A  21F5  160A  158A  	fcall	_Lcd_Cmd
  9367                           
  9368                           ;LCD.c: 74:     } else if (a == 2) {
  9369  1AB3  2AC5               	goto	l205
  9370  1AB4                     l3301:
  9371  1AB4  3002               	movlw	2
  9372  1AB5  0679               	xorwf	Lcd_Set_Cursor@a,w
  9373  1AB6  1D03               	btfss	3,2
  9374  1AB7  2AB9               	goto	u5291
  9375  1AB8  2ABA               	goto	u5290
  9376  1AB9                     u5291:
  9377  1AB9  2AC5               	goto	l205
  9378  1ABA                     u5290:
  9379  1ABA                     l3303:
  9380                           
  9381                           ;LCD.c: 75:         temp = 0xC0 + b - 1;
  9382  1ABA  0877               	movf	Lcd_Set_Cursor@b,w
  9383  1ABB  3EBF               	addlw	191
  9384  1ABC  00F8               	movwf	??_Lcd_Set_Cursor
  9385  1ABD  0878               	movf	??_Lcd_Set_Cursor,w
  9386  1ABE  00FA               	movwf	Lcd_Set_Cursor@temp
  9387  1ABF                     l3305:
  9388                           
  9389                           ;LCD.c: 76:         Lcd_Cmd(temp);
  9390  1ABF  087A               	movf	Lcd_Set_Cursor@temp,w
  9391  1AC0  160A  158A  21F5  160A  158A  	fcall	_Lcd_Cmd
  9392  1AC5                     l205:
  9393  1AC5  0008               	return
  9394  1AC6                     __end_of_Lcd_Set_Cursor:
  9395                           
  9396                           	psect	text34
  9397  1C0A                     __ptext34:	
  9398 ;; *************** function _Lcd_Init *****************
  9399 ;; Defined at:
  9400 ;;		line 80 in file "LCD.c"
  9401 ;; Parameters:    Size  Location     Type
  9402 ;;		None
  9403 ;; Auto vars:     Size  Location     Type
  9404 ;;		None
  9405 ;; Return value:  Size  Location     Type
  9406 ;;                  1    wreg      void 
  9407 ;; Registers used:
  9408 ;;		wreg, status,2, status,0, pclath, cstack
  9409 ;; Tracked objects:
  9410 ;;		On entry : 0/0
  9411 ;;		On exit  : 0/0
  9412 ;;		Unchanged: 0/0
  9413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9414 ;;      Params:         0       0       0       0       0
  9415 ;;      Locals:         0       0       0       0       0
  9416 ;;      Temps:          3       0       0       0       0
  9417 ;;      Totals:         3       0       0       0       0
  9418 ;;Total ram usage:        3 bytes
  9419 ;; Hardware stack levels used:    1
  9420 ;; Hardware stack levels required when called:    4
  9421 ;; This function calls:
  9422 ;;		_Lcd_Cmd
  9423 ;;		_Lcd_Port
  9424 ;; This function is called by:
  9425 ;;		_main
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           
  9430                           ;psect for function _Lcd_Init
  9431  1C0A                     _Lcd_Init:
  9432  1C0A                     l3283:	
  9433                           ;incstack = 0
  9434                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9435                           
  9436                           
  9437                           ;LCD.c: 81:     Lcd_Port(0x00);
  9438  1C0A  3000               	movlw	0
  9439  1C0B  160A  158A  2300  160A  158A  	fcall	_Lcd_Port
  9440  1C10                     l3285:
  9441                           
  9442                           ;LCD.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9443  1C10  3034               	movlw	52
  9444  1C11  00F8               	movwf	??_Lcd_Init+1
  9445  1C12  30F1               	movlw	241
  9446  1C13  00F7               	movwf	??_Lcd_Init
  9447  1C14                     u5907:
  9448  1C14  0BF7               	decfsz	??_Lcd_Init,f
  9449  1C15  2C14               	goto	u5907
  9450  1C16  0BF8               	decfsz	??_Lcd_Init+1,f
  9451  1C17  2C14               	goto	u5907
  9452  1C18  2C19               	nop2
  9453  1C19                     l3287:
  9454                           
  9455                           ;LCD.c: 83:     Lcd_Cmd(0x3F);
  9456  1C19  303F               	movlw	63
  9457  1C1A  160A  158A  21F5  160A  158A  	fcall	_Lcd_Cmd
  9458                           
  9459                           ;LCD.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9460  1C1F  300D               	movlw	13
  9461  1C20  00F8               	movwf	??_Lcd_Init+1
  9462  1C21  30FB               	movlw	251
  9463  1C22  00F7               	movwf	??_Lcd_Init
  9464  1C23                     u5917:
  9465  1C23  0BF7               	decfsz	??_Lcd_Init,f
  9466  1C24  2C23               	goto	u5917
  9467  1C25  0BF8               	decfsz	??_Lcd_Init+1,f
  9468  1C26  2C23               	goto	u5917
  9469  1C27  2C28               	nop2
  9470  1C28                     l3289:
  9471                           
  9472                           ;LCD.c: 85:     Lcd_Cmd(0x3F);
  9473  1C28  303F               	movlw	63
  9474  1C29  160A  158A  21F5  160A  158A  	fcall	_Lcd_Cmd
  9475  1C2E                     l3291:
  9476                           
  9477                           ;LCD.c: 86:     _delay((unsigned long)((110)*(8000000/4000.0)));
  9478  1C2E  3002               	movlw	2
  9479  1C2F  00F9               	movwf	??_Lcd_Init+2
  9480  1C30  301E               	movlw	30
  9481  1C31  00F8               	movwf	??_Lcd_Init+1
  9482  1C32  30B3               	movlw	179
  9483  1C33  00F7               	movwf	??_Lcd_Init
  9484  1C34                     u5927:
  9485  1C34  0BF7               	decfsz	??_Lcd_Init,f
  9486  1C35  2C34               	goto	u5927
  9487  1C36  0BF8               	decfsz	??_Lcd_Init+1,f
  9488  1C37  2C34               	goto	u5927
  9489  1C38  0BF9               	decfsz	??_Lcd_Init+2,f
  9490  1C39  2C34               	goto	u5927
  9491  1C3A  2C3B               	nop2
  9492                           
  9493                           ;LCD.c: 87:     Lcd_Cmd(0x3F);
  9494  1C3B  303F               	movlw	63
  9495  1C3C  160A  158A  21F5  160A  158A  	fcall	_Lcd_Cmd
  9496                           
  9497                           ;LCD.c: 89:     Lcd_Cmd(0x38);
  9498  1C41  3038               	movlw	56
  9499  1C42  160A  158A  21F5  160A  158A  	fcall	_Lcd_Cmd
  9500                           
  9501                           ;LCD.c: 90:     Lcd_Cmd(0x0C);
  9502  1C47  300C               	movlw	12
  9503  1C48  160A  158A  21F5  160A  158A  	fcall	_Lcd_Cmd
  9504                           
  9505                           ;LCD.c: 91:     Lcd_Cmd(0x06);
  9506  1C4D  3006               	movlw	6
  9507  1C4E  160A  158A  21F5  160A  158A  	fcall	_Lcd_Cmd
  9508  1C53                     l208:
  9509  1C53  0008               	return
  9510  1C54                     __end_of_Lcd_Init:
  9511                           
  9512                           	psect	text35
  9513  10C7                     __ptext35:	
  9514 ;; *************** function _Lcd_Clear *****************
  9515 ;; Defined at:
  9516 ;;		line 64 in file "LCD.c"
  9517 ;; Parameters:    Size  Location     Type
  9518 ;;		None
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;		None
  9521 ;; Return value:  Size  Location     Type
  9522 ;;                  1    wreg      void 
  9523 ;; Registers used:
  9524 ;;		wreg, status,2, status,0, pclath, cstack
  9525 ;; Tracked objects:
  9526 ;;		On entry : 0/0
  9527 ;;		On exit  : 0/0
  9528 ;;		Unchanged: 0/0
  9529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9530 ;;      Params:         0       0       0       0       0
  9531 ;;      Locals:         0       0       0       0       0
  9532 ;;      Temps:          0       0       0       0       0
  9533 ;;      Totals:         0       0       0       0       0
  9534 ;;Total ram usage:        0 bytes
  9535 ;; Hardware stack levels used:    1
  9536 ;; Hardware stack levels required when called:    4
  9537 ;; This function calls:
  9538 ;;		_Lcd_Cmd
  9539 ;; This function is called by:
  9540 ;;		_main
  9541 ;; This function uses a non-reentrant model
  9542 ;;
  9543                           
  9544                           
  9545                           ;psect for function _Lcd_Clear
  9546  10C7                     _Lcd_Clear:
  9547  10C7                     l3293:	
  9548                           ;incstack = 0
  9549                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9550                           
  9551                           
  9552                           ;LCD.c: 65:     Lcd_Cmd(0);
  9553  10C7  3000               	movlw	0
  9554  10C8  160A  158A  21F5  160A  118A  	fcall	_Lcd_Cmd
  9555                           
  9556                           ;LCD.c: 66:     Lcd_Cmd(1);
  9557  10CD  3001               	movlw	1
  9558  10CE  160A  158A  21F5  160A  118A  	fcall	_Lcd_Cmd
  9559  10D3                     l199:
  9560  10D3  0008               	return
  9561  10D4                     __end_of_Lcd_Clear:
  9562                           
  9563                           	psect	text36
  9564  19F5                     __ptext36:	
  9565 ;; *************** function _Lcd_Cmd *****************
  9566 ;; Defined at:
  9567 ;;		line 56 in file "LCD.c"
  9568 ;; Parameters:    Size  Location     Type
  9569 ;;  a               1    wreg     unsigned char 
  9570 ;; Auto vars:     Size  Location     Type
  9571 ;;  a               1    6[COMMON] unsigned char 
  9572 ;; Return value:  Size  Location     Type
  9573 ;;                  1    wreg      void 
  9574 ;; Registers used:
  9575 ;;		wreg, status,2, status,0, pclath, cstack
  9576 ;; Tracked objects:
  9577 ;;		On entry : 0/0
  9578 ;;		On exit  : 0/0
  9579 ;;		Unchanged: 0/0
  9580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9581 ;;      Params:         0       0       0       0       0
  9582 ;;      Locals:         1       0       0       0       0
  9583 ;;      Temps:          2       0       0       0       0
  9584 ;;      Totals:         3       0       0       0       0
  9585 ;;Total ram usage:        3 bytes
  9586 ;; Hardware stack levels used:    1
  9587 ;; Hardware stack levels required when called:    3
  9588 ;; This function calls:
  9589 ;;		_Lcd_Port
  9590 ;; This function is called by:
  9591 ;;		_Lcd_Clear
  9592 ;;		_Lcd_Set_Cursor
  9593 ;;		_Lcd_Init
  9594 ;;		_Lcd_Shift_Right
  9595 ;;		_Lcd_Shift_Left
  9596 ;; This function uses a non-reentrant model
  9597 ;;
  9598                           
  9599                           
  9600                           ;psect for function _Lcd_Cmd
  9601  19F5                     _Lcd_Cmd:
  9602                           
  9603                           ;incstack = 0
  9604                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9605                           ;Lcd_Cmd@a stored from wreg
  9606  19F5  00F6               	movwf	Lcd_Cmd@a
  9607  19F6                     l2839:
  9608                           
  9609                           ;LCD.c: 57:     PORTCbits.RC0 = 0;
  9610  19F6  1283               	bcf	3,5	;RP0=0, select bank0
  9611  19F7  1303               	bcf	3,6	;RP1=0, select bank0
  9612  19F8  1007               	bcf	7,0	;volatile
  9613  19F9                     l2841:
  9614                           
  9615                           ;LCD.c: 58:     Lcd_Port(a);
  9616  19F9  0876               	movf	Lcd_Cmd@a,w
  9617  19FA  160A  158A  2300  160A  158A  	fcall	_Lcd_Port
  9618  19FF                     l2843:
  9619                           
  9620                           ;LCD.c: 59:     RC1 = 1;
  9621  19FF  1283               	bcf	3,5	;RP0=0, select bank0
  9622  1A00  1303               	bcf	3,6	;RP1=0, select bank0
  9623  1A01  1487               	bsf	7,1	;volatile
  9624  1A02                     l2845:
  9625                           
  9626                           ;LCD.c: 60:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9627  1A02  300B               	movlw	11
  9628  1A03  00F5               	movwf	??_Lcd_Cmd+1
  9629  1A04  3062               	movlw	98
  9630  1A05  00F4               	movwf	??_Lcd_Cmd
  9631  1A06                     u5937:
  9632  1A06  0BF4               	decfsz	??_Lcd_Cmd,f
  9633  1A07  2A06               	goto	u5937
  9634  1A08  0BF5               	decfsz	??_Lcd_Cmd+1,f
  9635  1A09  2A06               	goto	u5937
  9636  1A0A  0000               	nop
  9637  1A0B                     l2847:
  9638                           
  9639                           ;LCD.c: 61:     RC1 = 0;
  9640  1A0B  1283               	bcf	3,5	;RP0=0, select bank0
  9641  1A0C  1303               	bcf	3,6	;RP1=0, select bank0
  9642  1A0D  1087               	bcf	7,1	;volatile
  9643  1A0E                     l196:
  9644  1A0E  0008               	return
  9645  1A0F                     __end_of_Lcd_Cmd:
  9646                           
  9647                           	psect	text37
  9648  1B00                     __ptext37:	
  9649 ;; *************** function _Lcd_Port *****************
  9650 ;; Defined at:
  9651 ;;		line 13 in file "LCD.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;  a               1    wreg     unsigned char 
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;  a               1    3[COMMON] unsigned char 
  9656 ;; Return value:  Size  Location     Type
  9657 ;;                  1    wreg      void 
  9658 ;; Registers used:
  9659 ;;		wreg
  9660 ;; Tracked objects:
  9661 ;;		On entry : 0/0
  9662 ;;		On exit  : 0/0
  9663 ;;		Unchanged: 0/0
  9664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9665 ;;      Params:         0       0       0       0       0
  9666 ;;      Locals:         1       0       0       0       0
  9667 ;;      Temps:          0       0       0       0       0
  9668 ;;      Totals:         1       0       0       0       0
  9669 ;;Total ram usage:        1 bytes
  9670 ;; Hardware stack levels used:    1
  9671 ;; Hardware stack levels required when called:    2
  9672 ;; This function calls:
  9673 ;;		Nothing
  9674 ;; This function is called by:
  9675 ;;		_Lcd_Cmd
  9676 ;;		_Lcd_Init
  9677 ;;		_Lcd_Write_Char
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681                           
  9682                           ;psect for function _Lcd_Port
  9683  1B00                     _Lcd_Port:
  9684                           
  9685                           ;incstack = 0
  9686                           ; Regs used in _Lcd_Port: [wreg]
  9687                           ;Lcd_Port@a stored from wreg
  9688  1B00  00F3               	movwf	Lcd_Port@a
  9689  1B01                     l2353:
  9690                           
  9691                           ;LCD.c: 15:     if (a & 1)
  9692  1B01  1C73               	btfss	Lcd_Port@a,0
  9693  1B02  2B04               	goto	u2961
  9694  1B03  2B05               	goto	u2960
  9695  1B04                     u2961:
  9696  1B04  2B09               	goto	l177
  9697  1B05                     u2960:
  9698  1B05                     l2355:
  9699                           
  9700                           ;LCD.c: 16:         RD0 = 1;
  9701  1B05  1283               	bcf	3,5	;RP0=0, select bank0
  9702  1B06  1303               	bcf	3,6	;RP1=0, select bank0
  9703  1B07  1408               	bsf	8,0	;volatile
  9704  1B08  2B0C               	goto	l178
  9705  1B09                     l177:	
  9706                           ;LCD.c: 17:     else
  9707                           
  9708                           
  9709                           ;LCD.c: 18:         RD0 = 0;
  9710  1B09  1283               	bcf	3,5	;RP0=0, select bank0
  9711  1B0A  1303               	bcf	3,6	;RP1=0, select bank0
  9712  1B0B  1008               	bcf	8,0	;volatile
  9713  1B0C                     l178:
  9714                           
  9715                           ;LCD.c: 20:     if (a & 2)
  9716  1B0C  1CF3               	btfss	Lcd_Port@a,1
  9717  1B0D  2B0F               	goto	u2971
  9718  1B0E  2B10               	goto	u2970
  9719  1B0F                     u2971:
  9720  1B0F  2B12               	goto	l179
  9721  1B10                     u2970:
  9722  1B10                     l2357:
  9723                           
  9724                           ;LCD.c: 21:         RD1 = 1;
  9725  1B10  1488               	bsf	8,1	;volatile
  9726  1B11  2B13               	goto	l180
  9727  1B12                     l179:	
  9728                           ;LCD.c: 22:     else
  9729                           
  9730                           
  9731                           ;LCD.c: 23:         RD1 = 0;
  9732  1B12  1088               	bcf	8,1	;volatile
  9733  1B13                     l180:
  9734                           
  9735                           ;LCD.c: 25:     if (a & 4)
  9736  1B13  1D73               	btfss	Lcd_Port@a,2
  9737  1B14  2B16               	goto	u2981
  9738  1B15  2B17               	goto	u2980
  9739  1B16                     u2981:
  9740  1B16  2B19               	goto	l181
  9741  1B17                     u2980:
  9742  1B17                     l2359:
  9743                           
  9744                           ;LCD.c: 26:         RD2 = 1;
  9745  1B17  1508               	bsf	8,2	;volatile
  9746  1B18  2B1A               	goto	l182
  9747  1B19                     l181:	
  9748                           ;LCD.c: 27:     else
  9749                           
  9750                           
  9751                           ;LCD.c: 28:         RD2 = 0;
  9752  1B19  1108               	bcf	8,2	;volatile
  9753  1B1A                     l182:
  9754                           
  9755                           ;LCD.c: 30:     if (a & 8)
  9756  1B1A  1DF3               	btfss	Lcd_Port@a,3
  9757  1B1B  2B1D               	goto	u2991
  9758  1B1C  2B1E               	goto	u2990
  9759  1B1D                     u2991:
  9760  1B1D  2B20               	goto	l183
  9761  1B1E                     u2990:
  9762  1B1E                     l2361:
  9763                           
  9764                           ;LCD.c: 31:         RD3 = 1;
  9765  1B1E  1588               	bsf	8,3	;volatile
  9766  1B1F  2B21               	goto	l184
  9767  1B20                     l183:	
  9768                           ;LCD.c: 32:     else
  9769                           
  9770                           
  9771                           ;LCD.c: 33:         RD3 = 0;
  9772  1B20  1188               	bcf	8,3	;volatile
  9773  1B21                     l184:
  9774                           
  9775                           ;LCD.c: 35:     if (a & 16)
  9776  1B21  1E73               	btfss	Lcd_Port@a,4
  9777  1B22  2B24               	goto	u3001
  9778  1B23  2B25               	goto	u3000
  9779  1B24                     u3001:
  9780  1B24  2B27               	goto	l185
  9781  1B25                     u3000:
  9782  1B25                     l2363:
  9783                           
  9784                           ;LCD.c: 36:         RD4 = 1;
  9785  1B25  1608               	bsf	8,4	;volatile
  9786  1B26  2B28               	goto	l186
  9787  1B27                     l185:	
  9788                           ;LCD.c: 37:     else
  9789                           
  9790                           
  9791                           ;LCD.c: 38:         RD4 = 0;
  9792  1B27  1208               	bcf	8,4	;volatile
  9793  1B28                     l186:
  9794                           
  9795                           ;LCD.c: 40:     if (a & 32)
  9796  1B28  1EF3               	btfss	Lcd_Port@a,5
  9797  1B29  2B2B               	goto	u3011
  9798  1B2A  2B2C               	goto	u3010
  9799  1B2B                     u3011:
  9800  1B2B  2B2E               	goto	l187
  9801  1B2C                     u3010:
  9802  1B2C                     l2365:
  9803                           
  9804                           ;LCD.c: 41:         RD5 = 1;
  9805  1B2C  1688               	bsf	8,5	;volatile
  9806  1B2D  2B2F               	goto	l188
  9807  1B2E                     l187:	
  9808                           ;LCD.c: 42:     else
  9809                           
  9810                           
  9811                           ;LCD.c: 43:         RD5 = 0;
  9812  1B2E  1288               	bcf	8,5	;volatile
  9813  1B2F                     l188:
  9814                           
  9815                           ;LCD.c: 45:     if (a & 64)
  9816  1B2F  1F73               	btfss	Lcd_Port@a,6
  9817  1B30  2B32               	goto	u3021
  9818  1B31  2B33               	goto	u3020
  9819  1B32                     u3021:
  9820  1B32  2B35               	goto	l189
  9821  1B33                     u3020:
  9822  1B33                     l2367:
  9823                           
  9824                           ;LCD.c: 46:         RD6 = 1;
  9825  1B33  1708               	bsf	8,6	;volatile
  9826  1B34  2B36               	goto	l190
  9827  1B35                     l189:	
  9828                           ;LCD.c: 47:     else
  9829                           
  9830                           
  9831                           ;LCD.c: 48:         RD6 = 0;
  9832  1B35  1308               	bcf	8,6	;volatile
  9833  1B36                     l190:
  9834                           
  9835                           ;LCD.c: 50:     if (a & 128)
  9836  1B36  1FF3               	btfss	Lcd_Port@a,7
  9837  1B37  2B39               	goto	u3031
  9838  1B38  2B3A               	goto	u3030
  9839  1B39                     u3031:
  9840  1B39  2B3C               	goto	l191
  9841  1B3A                     u3030:
  9842  1B3A                     l2369:
  9843                           
  9844                           ;LCD.c: 51:         RD7 = 1;
  9845  1B3A  1788               	bsf	8,7	;volatile
  9846  1B3B  2B3D               	goto	l193
  9847  1B3C                     l191:	
  9848                           ;LCD.c: 52:     else
  9849                           
  9850                           
  9851                           ;LCD.c: 53:         RD7 = 0;
  9852  1B3C  1388               	bcf	8,7	;volatile
  9853  1B3D                     l193:
  9854  1B3D  0008               	return
  9855  1B3E                     __end_of_Lcd_Port:
  9856                           
  9857                           	psect	text38
  9858  1A46                     __ptext38:	
  9859 ;; *************** function _isr *****************
  9860 ;; Defined at:
  9861 ;;		line 89 in file "main.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;		None
  9864 ;; Auto vars:     Size  Location     Type
  9865 ;;		None
  9866 ;; Return value:  Size  Location     Type
  9867 ;;                  1    wreg      void 
  9868 ;; Registers used:
  9869 ;;		wreg, status,2, status,0, pclath, cstack
  9870 ;; Tracked objects:
  9871 ;;		On entry : 0/0
  9872 ;;		On exit  : 0/0
  9873 ;;		Unchanged: 0/0
  9874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9875 ;;      Params:         0       0       0       0       0
  9876 ;;      Locals:         0       0       0       0       0
  9877 ;;      Temps:          2       0       0       0       0
  9878 ;;      Totals:         2       0       0       0       0
  9879 ;;Total ram usage:        2 bytes
  9880 ;; Hardware stack levels used:    1
  9881 ;; Hardware stack levels required when called:    1
  9882 ;; This function calls:
  9883 ;;		_int_adc
  9884 ;;		_int_uart
  9885 ;; This function is called by:
  9886 ;;		Interrupt level 1
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890                           
  9891                           ;psect for function _isr
  9892  1A46                     _isr:
  9893  1A46                     i1l3591:
  9894                           
  9895                           ;main.c: 91:     if (PIR1bits.ADIF){
  9896  1A46  1283               	bcf	3,5	;RP0=0, select bank0
  9897  1A47  1303               	bcf	3,6	;RP1=0, select bank0
  9898  1A48  1F0C               	btfss	12,6	;volatile
  9899  1A49  2A4B               	goto	u581_21
  9900  1A4A  2A4C               	goto	u581_20
  9901  1A4B                     u581_21:
  9902  1A4B  2A51               	goto	i1l3595
  9903  1A4C                     u581_20:
  9904  1A4C                     i1l3593:
  9905                           
  9906                           ;main.c: 92:         int_adc();
  9907  1A4C  160A  158A  222A  160A  158A  	fcall	_int_adc
  9908  1A51                     i1l3595:
  9909                           
  9910                           ;main.c: 94:     if (PIR1bits.RCIF){
  9911  1A51  1283               	bcf	3,5	;RP0=0, select bank0
  9912  1A52  1303               	bcf	3,6	;RP1=0, select bank0
  9913  1A53  1E8C               	btfss	12,5	;volatile
  9914  1A54  2A56               	goto	u582_21
  9915  1A55  2A57               	goto	u582_20
  9916  1A56                     u582_21:
  9917  1A56  2A5C               	goto	i1l101
  9918  1A57                     u582_20:
  9919  1A57                     i1l3597:
  9920                           
  9921                           ;main.c: 95:         int_uart();
  9922  1A57  160A  158A  2263  160A  158A  	fcall	_int_uart
  9923  1A5C                     i1l101:
  9924  1A5C  0872               	movf	??_isr+1,w
  9925  1A5D  008A               	movwf	10
  9926  1A5E  0E71               	swapf	??_isr,w
  9927  1A5F  0083               	movwf	3
  9928  1A60  0EFE               	swapf	btemp,f
  9929  1A61  0E7E               	swapf	btemp,w
  9930  1A62  0009               	retfie
  9931  1A63                     __end_of_isr:
  9932                           
  9933                           	psect	intentry
  9934  0004                     __pintentry:	
  9935                           ;incstack = 0
  9936                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  9937                           
  9938  0004                     interrupt_function:
  9939  007E                     saved_w	set	btemp
  9940  0004  00FE               	movwf	btemp
  9941  0005  0E03               	swapf	3,w
  9942  0006  00F1               	movwf	??_isr
  9943  0007  080A               	movf	10,w
  9944  0008  00F2               	movwf	??_isr+1
  9945  0009  160A  158A  2A46   	ljmp	_isr
  9946                           
  9947                           	psect	text39
  9948  1A63                     __ptext39:	
  9949 ;; *************** function _int_uart *****************
  9950 ;; Defined at:
  9951 ;;		line 111 in file "main.c"
  9952 ;; Parameters:    Size  Location     Type
  9953 ;;		None
  9954 ;; Auto vars:     Size  Location     Type
  9955 ;;		None
  9956 ;; Return value:  Size  Location     Type
  9957 ;;                  1    wreg      void 
  9958 ;; Registers used:
  9959 ;;		wreg, status,2, status,0
  9960 ;; Tracked objects:
  9961 ;;		On entry : 0/0
  9962 ;;		On exit  : 0/0
  9963 ;;		Unchanged: 0/0
  9964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9965 ;;      Params:         0       0       0       0       0
  9966 ;;      Locals:         0       0       0       0       0
  9967 ;;      Temps:          1       0       0       0       0
  9968 ;;      Totals:         1       0       0       0       0
  9969 ;;Total ram usage:        1 bytes
  9970 ;; Hardware stack levels used:    1
  9971 ;; This function calls:
  9972 ;;		Nothing
  9973 ;; This function is called by:
  9974 ;;		_isr
  9975 ;; This function uses a non-reentrant model
  9976 ;;
  9977                           
  9978                           
  9979                           ;psect for function _int_uart
  9980  1A63                     _int_uart:
  9981  1A63                     i1l3227:	
  9982                           ;incstack = 0
  9983                           ; Regs used in _int_uart: [wreg+status,2+status,0]
  9984                           
  9985                           
  9986                           ;main.c: 113:     if (RCREG == 43){
  9987  1A63  302B               	movlw	43
  9988  1A64  1283               	bcf	3,5	;RP0=0, select bank0
  9989  1A65  1303               	bcf	3,6	;RP1=0, select bank0
  9990  1A66  061A               	xorwf	26,w	;volatile
  9991  1A67  1D03               	btfss	3,2
  9992  1A68  2A6A               	goto	u526_21
  9993  1A69  2A6B               	goto	u526_20
  9994  1A6A                     u526_21:
  9995  1A6A  2A73               	goto	i1l3233
  9996  1A6B                     u526_20:
  9997  1A6B                     i1l3229:
  9998                           
  9999                           ;main.c: 114:         TXREG = 43;
 10000  1A6B  302B               	movlw	43
 10001  1A6C  0099               	movwf	25	;volatile
 10002  1A6D                     i1l3231:
 10003                           
 10004                           ;main.c: 115:         V3++;
 10005  1A6D  3001               	movlw	1
 10006  1A6E  00F0               	movwf	??_int_uart
 10007  1A6F  0870               	movf	??_int_uart,w
 10008  1A70  1683               	bsf	3,5	;RP0=1, select bank1
 10009  1A71  1303               	bcf	3,6	;RP1=0, select bank1
 10010  1A72  07DF               	addwf	_V3^(0+128),f
 10011  1A73                     i1l3233:
 10012                           
 10013                           ;main.c: 117:     if (RCREG == 45){
 10014  1A73  302D               	movlw	45
 10015  1A74  1283               	bcf	3,5	;RP0=0, select bank0
 10016  1A75  061A               	xorwf	26,w	;volatile
 10017  1A76  1D03               	btfss	3,2
 10018  1A77  2A79               	goto	u527_21
 10019  1A78  2A7A               	goto	u527_20
 10020  1A79                     u527_21:
 10021  1A79  2A80               	goto	i1l111
 10022  1A7A                     u527_20:
 10023  1A7A                     i1l3235:
 10024                           
 10025                           ;main.c: 118:         TXREG = 45;
 10026  1A7A  302D               	movlw	45
 10027  1A7B  0099               	movwf	25	;volatile
 10028  1A7C                     i1l3237:
 10029                           
 10030                           ;main.c: 119:         V3--;
 10031  1A7C  3001               	movlw	1
 10032  1A7D  1683               	bsf	3,5	;RP0=1, select bank1
 10033  1A7E  1303               	bcf	3,6	;RP1=0, select bank1
 10034  1A7F  02DF               	subwf	_V3^(0+128),f
 10035  1A80                     i1l111:
 10036  1A80  0008               	return
 10037  1A81                     __end_of_int_uart:
 10038                           
 10039                           	psect	text40
 10040  1A2A                     __ptext40:	
 10041 ;; *************** function _int_adc *****************
 10042 ;; Defined at:
 10043 ;;		line 99 in file "main.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;		None
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;		None
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  1    wreg      void 
 10050 ;; Registers used:
 10051 ;;		wreg, status,2, status,0
 10052 ;; Tracked objects:
 10053 ;;		On entry : 0/0
 10054 ;;		On exit  : 0/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10057 ;;      Params:         0       0       0       0       0
 10058 ;;      Locals:         0       0       0       0       0
 10059 ;;      Temps:          1       0       0       0       0
 10060 ;;      Totals:         1       0       0       0       0
 10061 ;;Total ram usage:        1 bytes
 10062 ;; Hardware stack levels used:    1
 10063 ;; This function calls:
 10064 ;;		Nothing
 10065 ;; This function is called by:
 10066 ;;		_isr
 10067 ;; This function uses a non-reentrant model
 10068 ;;
 10069                           
 10070                           
 10071                           ;psect for function _int_adc
 10072  1A2A                     _int_adc:
 10073  1A2A                     i1l3219:	
 10074                           ;incstack = 0
 10075                           ; Regs used in _int_adc: [wreg+status,2+status,0]
 10076                           
 10077                           
 10078                           ;main.c: 100:     if(ADCON0bits.CHS == 5){
 10079  1A2A  1283               	bcf	3,5	;RP0=0, select bank0
 10080  1A2B  1303               	bcf	3,6	;RP1=0, select bank0
 10081  1A2C  0C1F               	rrf	31,w	;volatile
 10082  1A2D  00F0               	movwf	??_int_adc
 10083  1A2E  0C70               	rrf	??_int_adc,w
 10084  1A2F  390F               	andlw	15
 10085  1A30  3A05               	xorlw	5
 10086  1A31  1D03               	skipz
 10087  1A32  2A34               	goto	u525_21
 10088  1A33  2A35               	goto	u525_20
 10089  1A34                     u525_21:
 10090  1A34  2A3C               	goto	i1l3223
 10091  1A35                     u525_20:
 10092  1A35                     i1l3221:
 10093                           
 10094                           ;main.c: 101:         V1 = ADRESH;
 10095  1A35  081E               	movf	30,w	;volatile
 10096  1A36  00F0               	movwf	??_int_adc
 10097  1A37  0870               	movf	??_int_adc,w
 10098  1A38  1683               	bsf	3,5	;RP0=1, select bank1
 10099  1A39  1303               	bcf	3,6	;RP1=0, select bank1
 10100  1A3A  00E1               	movwf	_V1^(0+128)
 10101                           
 10102                           ;main.c: 103:         }
 10103  1A3B  2A42               	goto	i1l3225
 10104  1A3C                     i1l3223:
 10105                           
 10106                           ;main.c: 105:         V2 = ADRESH;
 10107  1A3C  081E               	movf	30,w	;volatile
 10108  1A3D  00F0               	movwf	??_int_adc
 10109  1A3E  0870               	movf	??_int_adc,w
 10110  1A3F  1683               	bsf	3,5	;RP0=1, select bank1
 10111  1A40  1303               	bcf	3,6	;RP1=0, select bank1
 10112  1A41  00E0               	movwf	_V2^(0+128)
 10113  1A42                     i1l3225:
 10114                           
 10115                           ;main.c: 107:     PIR1bits.ADIF = 0;
 10116  1A42  1283               	bcf	3,5	;RP0=0, select bank0
 10117  1A43  1303               	bcf	3,6	;RP1=0, select bank0
 10118  1A44  130C               	bcf	12,6	;volatile
 10119  1A45                     i1l106:
 10120  1A45  0008               	return
 10121  1A46                     __end_of_int_adc:
 10122  007E                     btemp	set	126	;btemp
 10123  007E                     wtemp0	set	126
 10124                           
 10125                           	psect	config
 10126                           
 10127                           ;Config register CONFIG1 @ 0x2007
 10128                           ;	Oscillator Selection bits
 10129                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
 10130                           ;	Watchdog Timer Enable bit
 10131                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10132                           ;	Power-up Timer Enable bit
 10133                           ;	PWRTE = OFF, PWRT disabled
 10134                           ;	RE3/MCLR pin function select bit
 10135                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10136                           ;	Code Protection bit
 10137                           ;	CP = OFF, Program memory code protection is disabled
 10138                           ;	Data Code Protection bit
 10139                           ;	CPD = OFF, Data memory code protection is disabled
 10140                           ;	Brown Out Reset Selection bits
 10141                           ;	BOREN = OFF, BOR disabled
 10142                           ;	Internal External Switchover bit
 10143                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10144                           ;	Fail-Safe Clock Monitor Enabled bit
 10145                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10146                           ;	Low Voltage Programming Enable bit
 10147                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10148                           ;	In-Circuit Debugger Mode bit
 10149                           ;	DEBUG = 0x1, unprogrammed default
 10150  2007                     	org	8199
 10151  2007  20D6               	dw	8406
 10152                           
 10153                           ;Config register CONFIG2 @ 0x2008
 10154                           ;	Brown-out Reset Selection bit
 10155                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10156                           ;	Flash Program Memory Self Write Enable bits
 10157                           ;	WRT = OFF, Write protection off
 10158  2008                     	org	8200
 10159  2008  3FFF               	dw	16383
 10160                           
 10161                           	psect	text1_split_1
 10162  0025                     u5460:
 10163  0025                     l3417:
 10164  0025  1683               	bsf	3,5	;RP0=1, select bank1
 10165  0026  1303               	bcf	3,6	;RP1=0, select bank1
 10166  0027  084B               	movf	(sprintf@fval+3)^(0+128),w
 10167  0028  00F6               	movwf	___fleq@ff1+3
 10168  0029  084A               	movf	(sprintf@fval+2)^(0+128),w
 10169  002A  00F5               	movwf	___fleq@ff1+2
 10170  002B  0849               	movf	(sprintf@fval+1)^(0+128),w
 10171  002C  00F4               	movwf	___fleq@ff1+1
 10172  002D  0848               	movf	sprintf@fval^(0+128),w
 10173  002E  00F3               	movwf	___fleq@ff1
 10174  002F  3000               	movlw	0
 10175  0030  00FA               	movwf	___fleq@ff2+3
 10176  0031  3000               	movlw	0
 10177  0032  00F9               	movwf	___fleq@ff2+2
 10178  0033  3000               	movlw	0
 10179  0034  00F8               	movwf	___fleq@ff2+1
 10180  0035  3000               	movlw	0
 10181  0036  00F7               	movwf	___fleq@ff2
 10182  0037  160A  158A  2454  120A  118A  	fcall	___fleq
 10183  003C  1803               	btfsc	3,0
 10184  003D  283F               	goto	u5471
 10185  003E  2840               	goto	u5470
 10186  003F                     u5471:
 10187  003F  28E8               	goto	l3437
 10188  0040                     u5470:
 10189  0040                     l3419:
 10190  0040  1683               	bsf	3,5	;RP0=1, select bank1
 10191  0041  1303               	bcf	3,6	;RP1=0, select bank1
 10192  0042  084B               	movf	(sprintf@fval+3)^(0+128),w
 10193  0043  1283               	bcf	3,5	;RP0=0, select bank0
 10194  0044  1303               	bcf	3,6	;RP1=0, select bank0
 10195  0045  00D8               	movwf	___fltol@f1+3
 10196  0046  1683               	bsf	3,5	;RP0=1, select bank1
 10197  0047  1303               	bcf	3,6	;RP1=0, select bank1
 10198  0048  084A               	movf	(sprintf@fval+2)^(0+128),w
 10199  0049  1283               	bcf	3,5	;RP0=0, select bank0
 10200  004A  1303               	bcf	3,6	;RP1=0, select bank0
 10201  004B  00D7               	movwf	___fltol@f1+2
 10202  004C  1683               	bsf	3,5	;RP0=1, select bank1
 10203  004D  1303               	bcf	3,6	;RP1=0, select bank1
 10204  004E  0849               	movf	(sprintf@fval+1)^(0+128),w
 10205  004F  1283               	bcf	3,5	;RP0=0, select bank0
 10206  0050  1303               	bcf	3,6	;RP1=0, select bank0
 10207  0051  00D6               	movwf	___fltol@f1+1
 10208  0052  1683               	bsf	3,5	;RP0=1, select bank1
 10209  0053  1303               	bcf	3,6	;RP1=0, select bank1
 10210  0054  0848               	movf	sprintf@fval^(0+128),w
 10211  0055  1283               	bcf	3,5	;RP0=0, select bank0
 10212  0056  1303               	bcf	3,6	;RP1=0, select bank0
 10213  0057  00D5               	movwf	___fltol@f1
 10214  0058  160A  158A  2624  120A  118A  	fcall	___fltol
 10215  005D  1283               	bcf	3,5	;RP0=0, select bank0
 10216  005E  1303               	bcf	3,6	;RP1=0, select bank0
 10217  005F  0858               	movf	?___fltol+3,w
 10218  0060  0457               	iorwf	?___fltol+2,w
 10219  0061  0456               	iorwf	?___fltol+1,w
 10220  0062  0455               	iorwf	?___fltol,w
 10221  0063  1D03               	skipz
 10222  0064  2866               	goto	u5481
 10223  0065  2867               	goto	u5480
 10224  0066                     u5481:
 10225  0066  28E8               	goto	l3437
 10226  0067                     u5480:
 10227  0067                     l3421:
 10228  0067  1683               	bsf	3,5	;RP0=1, select bank1
 10229  0068  1303               	bcf	3,6	;RP1=0, select bank1
 10230  0069  0847               	movf	(sprintf@eexp+1)^(0+128),w
 10231  006A  3A80               	xorlw	128
 10232  006B  00FF               	movwf	btemp+1
 10233  006C  3080               	movlw	128
 10234  006D  027F               	subwf	btemp+1,w
 10235  006E  1D03               	skipz
 10236  006F  2872               	goto	u5495
 10237  0070  3002               	movlw	2
 10238  0071  0246               	subwf	sprintf@eexp^(0+128),w
 10239  0072                     u5495:
 10240  0072  1C03               	skipc
 10241  0073  2875               	goto	u5491
 10242  0074  2876               	goto	u5490
 10243  0075                     u5491:
 10244  0075  28E8               	goto	l3437
 10245  0076                     u5490:
 10246  0076                     l3423:
 10247                           
 10248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10249  0076  1683               	bsf	3,5	;RP0=1, select bank1
 10250  0077  1303               	bcf	3,6	;RP1=0, select bank1
 10251  0078  0845               	movf	(sprintf@tmpval+3)^(0+128),w
 10252  0079  00F6               	movwf	___flge@ff1+3
 10253  007A  0844               	movf	(sprintf@tmpval+2)^(0+128),w
 10254  007B  00F5               	movwf	___flge@ff1+2
 10255  007C  0843               	movf	(sprintf@tmpval+1)^(0+128),w
 10256  007D  00F4               	movwf	___flge@ff1+1
 10257  007E  0842               	movf	sprintf@tmpval^(0+128),w
 10258  007F  00F3               	movwf	___flge@ff1
 10259  0080  3040               	movlw	64
 10260  0081  00FA               	movwf	___flge@ff2+3
 10261  0082  3089               	movlw	137
 10262  0083  00F9               	movwf	___flge@ff2+2
 10263  0084  3070               	movlw	112
 10264  0085  00F8               	movwf	___flge@ff2+1
 10265  0086  305F               	movlw	95
 10266  0087  00F7               	movwf	___flge@ff2
 10267  0088  160A  158A  26A0  120A  118A  	fcall	___flge
 10268  008D  1803               	btfsc	3,0
 10269  008E  2890               	goto	u5501
 10270  008F  2891               	goto	u5500
 10271  0090                     u5501:
 10272  0090  289A               	goto	l3427
 10273  0091                     u5500:
 10274  0091                     l3425:
 10275                           
 10276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10277  0091  30F7               	movlw	247
 10278  0092  1683               	bsf	3,5	;RP0=1, select bank1
 10279  0093  1303               	bcf	3,6	;RP1=0, select bank1
 10280  0094  07C6               	addwf	sprintf@eexp^(0+128),f
 10281  0095  1803               	skipnc
 10282  0096  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
 10283  0097  30FF               	movlw	255
 10284  0098  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
 10285                           
 10286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10287  0099  28A2               	goto	l3429
 10288  009A                     l3427:
 10289                           
 10290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10291  009A  30F8               	movlw	248
 10292  009B  1683               	bsf	3,5	;RP0=1, select bank1
 10293  009C  1303               	bcf	3,6	;RP1=0, select bank1
 10294  009D  07C6               	addwf	sprintf@eexp^(0+128),f
 10295  009E  1803               	skipnc
 10296  009F  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
 10297  00A0  30FF               	movlw	255
 10298  00A1  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
 10299  00A2                     l3429:
 10300                           
 10301                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10302  00A2  0846               	movf	sprintf@eexp^(0+128),w
 10303  00A3  120A  158A  249D  120A  118A  	fcall	_scale
 10304  00A8  1283               	bcf	3,5	;RP0=0, select bank0
 10305  00A9  1303               	bcf	3,6	;RP1=0, select bank0
 10306  00AA  0845               	movf	?_scale+3,w
 10307  00AB  1683               	bsf	3,5	;RP0=1, select bank1
 10308  00AC  1303               	bcf	3,6	;RP1=0, select bank1
 10309  00AD  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
 10310  00AE  1283               	bcf	3,5	;RP0=0, select bank0
 10311  00AF  1303               	bcf	3,6	;RP1=0, select bank0
 10312  00B0  0844               	movf	?_scale+2,w
 10313  00B1  1683               	bsf	3,5	;RP0=1, select bank1
 10314  00B2  1303               	bcf	3,6	;RP1=0, select bank1
 10315  00B3  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
 10316  00B4  1283               	bcf	3,5	;RP0=0, select bank0
 10317  00B5  1303               	bcf	3,6	;RP1=0, select bank0
 10318  00B6  0843               	movf	?_scale+1,w
 10319  00B7  1683               	bsf	3,5	;RP0=1, select bank1
 10320  00B8  1303               	bcf	3,6	;RP1=0, select bank1
 10321  00B9  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
 10322  00BA  1283               	bcf	3,5	;RP0=0, select bank0
 10323  00BB  1303               	bcf	3,6	;RP1=0, select bank0
 10324  00BC  0842               	movf	?_scale,w
 10325  00BD  1683               	bsf	3,5	;RP0=1, select bank1
 10326  00BE  1303               	bcf	3,6	;RP1=0, select bank1
 10327  00BF  00C2               	movwf	sprintf@tmpval^(0+128)
 10328  00C0                     l3431:
 10329  00C0  084B               	movf	(sprintf@fval+3)^(0+128),w
 10330  00C1  00F6               	movwf	__div_to_l_@f1+3
 10331  00C2  084A               	movf	(sprintf@fval+2)^(0+128),w
 10332  00C3  00F5               	movwf	__div_to_l_@f1+2
 10333  00C4  0849               	movf	(sprintf@fval+1)^(0+128),w
 10334  00C5  00F4               	movwf	__div_to_l_@f1+1
 10335  00C6  0848               	movf	sprintf@fval^(0+128),w
 10336  00C7  00F3               	movwf	__div_to_l_@f1
 10337  00C8  0845               	movf	(sprintf@tmpval+3)^(0+128),w
 10338  00C9  00FA               	movwf	__div_to_l_@f2+3
 10339  00CA  0844               	movf	(sprintf@tmpval+2)^(0+128),w
 10340  00CB  00F9               	movwf	__div_to_l_@f2+2
 10341  00CC  0843               	movf	(sprintf@tmpval+1)^(0+128),w
 10342  00CD  00F8               	movwf	__div_to_l_@f2+1
 10343  00CE  0842               	movf	sprintf@tmpval^(0+128),w
 10344  00CF  00F7               	movwf	__div_to_l_@f2
 10345  00D0  160A  118A  21B6  120A  118A  	fcall	__div_to_l_
 10346  00D5  0876               	movf	?__div_to_l_+3,w
 10347  00D6  1683               	bsf	3,5	;RP0=1, select bank1
 10348  00D7  1303               	bcf	3,6	;RP1=0, select bank1
 10349  00D8  00BD               	movwf	(sprintf@val+3)^(0+128)
 10350  00D9  0875               	movf	?__div_to_l_+2,w
 10351  00DA  00BC               	movwf	(sprintf@val+2)^(0+128)
 10352  00DB  0874               	movf	?__div_to_l_+1,w
 10353  00DC  00BB               	movwf	(sprintf@val+1)^(0+128)
 10354  00DD  0873               	movf	?__div_to_l_,w
 10355  00DE  00BA               	movwf	sprintf@val^(0+128)
 10356  00DF                     l3435:
 10357                           
 10358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10359  00DF  3000               	movlw	0
 10360  00E0  00CB               	movwf	(sprintf@fval+3)^(0+128)
 10361  00E1  3000               	movlw	0
 10362  00E2  00CA               	movwf	(sprintf@fval+2)^(0+128)
 10363  00E3  3000               	movlw	0
 10364  00E4  00C9               	movwf	(sprintf@fval+1)^(0+128)
 10365  00E5  3000               	movlw	0
 10366  00E6  00C8               	movwf	sprintf@fval^(0+128)
 10367                           
 10368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10369  00E7  294E               	goto	l3443
 10370  00E8                     l3437:
 10371                           
 10372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10373  00E8  1683               	bsf	3,5	;RP0=1, select bank1
 10374  00E9  1303               	bcf	3,6	;RP1=0, select bank1
 10375  00EA  084B               	movf	(sprintf@fval+3)^(0+128),w
 10376  00EB  1283               	bcf	3,5	;RP0=0, select bank0
 10377  00EC  1303               	bcf	3,6	;RP1=0, select bank0
 10378  00ED  00D8               	movwf	___fltol@f1+3
 10379  00EE  1683               	bsf	3,5	;RP0=1, select bank1
 10380  00EF  1303               	bcf	3,6	;RP1=0, select bank1
 10381  00F0  084A               	movf	(sprintf@fval+2)^(0+128),w
 10382  00F1  1283               	bcf	3,5	;RP0=0, select bank0
 10383  00F2  1303               	bcf	3,6	;RP1=0, select bank0
 10384  00F3  00D7               	movwf	___fltol@f1+2
 10385  00F4  1683               	bsf	3,5	;RP0=1, select bank1
 10386  00F5  1303               	bcf	3,6	;RP1=0, select bank1
 10387  00F6  0849               	movf	(sprintf@fval+1)^(0+128),w
 10388  00F7  1283               	bcf	3,5	;RP0=0, select bank0
 10389  00F8  1303               	bcf	3,6	;RP1=0, select bank0
 10390  00F9  00D6               	movwf	___fltol@f1+1
 10391  00FA  1683               	bsf	3,5	;RP0=1, select bank1
 10392  00FB  1303               	bcf	3,6	;RP1=0, select bank1
 10393  00FC  0848               	movf	sprintf@fval^(0+128),w
 10394  00FD  1283               	bcf	3,5	;RP0=0, select bank0
 10395  00FE  1303               	bcf	3,6	;RP1=0, select bank0
 10396  00FF  00D5               	movwf	___fltol@f1
 10397  0100  160A  158A  2624  120A  118A  	fcall	___fltol
 10398  0105  1283               	bcf	3,5	;RP0=0, select bank0
 10399  0106  1303               	bcf	3,6	;RP1=0, select bank0
 10400  0107  0858               	movf	?___fltol+3,w
 10401  0108  1683               	bsf	3,5	;RP0=1, select bank1
 10402  0109  1303               	bcf	3,6	;RP1=0, select bank1
 10403  010A  00BD               	movwf	(sprintf@val+3)^(0+128)
 10404  010B  1283               	bcf	3,5	;RP0=0, select bank0
 10405  010C  1303               	bcf	3,6	;RP1=0, select bank0
 10406  010D  0857               	movf	?___fltol+2,w
 10407  010E  1683               	bsf	3,5	;RP0=1, select bank1
 10408  010F  1303               	bcf	3,6	;RP1=0, select bank1
 10409  0110  00BC               	movwf	(sprintf@val+2)^(0+128)
 10410  0111  1283               	bcf	3,5	;RP0=0, select bank0
 10411  0112  1303               	bcf	3,6	;RP1=0, select bank0
 10412  0113  0856               	movf	?___fltol+1,w
 10413  0114  1683               	bsf	3,5	;RP0=1, select bank1
 10414  0115  1303               	bcf	3,6	;RP1=0, select bank1
 10415  0116  00BB               	movwf	(sprintf@val+1)^(0+128)
 10416  0117  1283               	bcf	3,5	;RP0=0, select bank0
 10417  0118  1303               	bcf	3,6	;RP1=0, select bank0
 10418  0119  0855               	movf	?___fltol,w
 10419  011A  1683               	bsf	3,5	;RP0=1, select bank1
 10420  011B  1303               	bcf	3,6	;RP1=0, select bank1
 10421  011C  00BA               	movwf	sprintf@val^(0+128)
 10422  011D                     l3439:
 10423                           
 10424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10425  011D  083D               	movf	(sprintf@val+3)^(0+128),w
 10426  011E  00F6               	movwf	___xxtofl@val+3
 10427  011F  083C               	movf	(sprintf@val+2)^(0+128),w
 10428  0120  00F5               	movwf	___xxtofl@val+2
 10429  0121  083B               	movf	(sprintf@val+1)^(0+128),w
 10430  0122  00F4               	movwf	___xxtofl@val+1
 10431  0123  083A               	movf	sprintf@val^(0+128),w
 10432  0124  00F3               	movwf	___xxtofl@val
 10433  0125  3000               	movlw	0
 10434  0126  160A  158A  2744  120A  118A  	fcall	___xxtofl
 10435  012B  0876               	movf	?___xxtofl+3,w
 10436  012C  1683               	bsf	3,5	;RP0=1, select bank1
 10437  012D  1303               	bcf	3,6	;RP1=0, select bank1
 10438  012E  00A3               	movwf	(___flsub@a+3)^(0+128)
 10439  012F  0875               	movf	?___xxtofl+2,w
 10440  0130  00A2               	movwf	(___flsub@a+2)^(0+128)
 10441  0131  0874               	movf	?___xxtofl+1,w
 10442  0132  00A1               	movwf	(___flsub@a+1)^(0+128)
 10443  0133  0873               	movf	?___xxtofl,w
 10444  0134  00A0               	movwf	___flsub@a^(0+128)
 10445  0135  084B               	movf	(sprintf@fval+3)^(0+128),w
 10446  0136  00A7               	movwf	(___flsub@b+3)^(0+128)
 10447  0137  084A               	movf	(sprintf@fval+2)^(0+128),w
 10448  0138  00A6               	movwf	(___flsub@b+2)^(0+128)
 10449  0139  0849               	movf	(sprintf@fval+1)^(0+128),w
 10450  013A  00A5               	movwf	(___flsub@b+1)^(0+128)
 10451  013B  0848               	movf	sprintf@fval^(0+128),w
 10452  013C  00A4               	movwf	___flsub@b^(0+128)
 10453  013D  120A  118A  27AE  120A  118A  	fcall	___flsub
 10454  0142  1683               	bsf	3,5	;RP0=1, select bank1
 10455  0143  1303               	bcf	3,6	;RP1=0, select bank1
 10456  0144  0823               	movf	(?___flsub+3)^(0+128),w
 10457  0145  00CB               	movwf	(sprintf@fval+3)^(0+128)
 10458  0146  0822               	movf	(?___flsub+2)^(0+128),w
 10459  0147  00CA               	movwf	(sprintf@fval+2)^(0+128)
 10460  0148  0821               	movf	(?___flsub+1)^(0+128),w
 10461  0149  00C9               	movwf	(sprintf@fval+1)^(0+128)
 10462  014A  0820               	movf	?___flsub^(0+128),w
 10463  014B  00C8               	movwf	sprintf@fval^(0+128)
 10464  014C                     l3441:
 10465                           
 10466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10467  014C  01C6               	clrf	sprintf@eexp^(0+128)
 10468  014D  01C7               	clrf	(sprintf@eexp+1)^(0+128)
 10469  014E                     l3443:
 10470                           
 10471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10472  014E  01CF               	clrf	sprintf@c^(0+128)
 10473  014F  0ACF               	incf	sprintf@c^(0+128),f
 10474  0150                     l3449:
 10475                           
 10476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10477  0150  084F               	movf	sprintf@c^(0+128),w
 10478  0151  1283               	bcf	3,5	;RP0=0, select bank0
 10479  0152  1303               	bcf	3,6	;RP1=0, select bank0
 10480  0153  00EA               	movwf	??_sprintf
 10481  0154  3001               	movlw	1
 10482  0155                     u5515:
 10483  0155  1003               	clrc
 10484  0156  0DEA               	rlf	??_sprintf,f
 10485  0157  3EFF               	addlw	-1
 10486  0158  1D03               	skipz
 10487  0159  2955               	goto	u5515
 10488  015A  1003               	clrc
 10489  015B  0D6A               	rlf	??_sprintf,w
 10490  015C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10491  015D  0084               	movwf	4
 10492  015E  160A  118A  200A  120A  118A  	fcall	stringdir
 10493  0163  00EB               	movwf	??_sprintf+1
 10494  0164  160A  118A  200A  120A  118A  	fcall	stringdir
 10495  0169  00EC               	movwf	??_sprintf+2
 10496  016A  160A  118A  200A  120A  118A  	fcall	stringdir
 10497  016F  00ED               	movwf	??_sprintf+3
 10498  0170  160A  118A  200A  120A  118A  	fcall	stringdir
 10499  0175  00EE               	movwf	??_sprintf+4
 10500  0176  086E               	movf	??_sprintf+4,w
 10501  0177  1683               	bsf	3,5	;RP0=1, select bank1
 10502  0178  1303               	bcf	3,6	;RP1=0, select bank1
 10503  0179  023D               	subwf	(sprintf@val+3)^(0+128),w
 10504  017A  1D03               	skipz
 10505  017B  2992               	goto	u5525
 10506  017C  1283               	bcf	3,5	;RP0=0, select bank0
 10507  017D  1303               	bcf	3,6	;RP1=0, select bank0
 10508  017E  086D               	movf	??_sprintf+3,w
 10509  017F  1683               	bsf	3,5	;RP0=1, select bank1
 10510  0180  1303               	bcf	3,6	;RP1=0, select bank1
 10511  0181  023C               	subwf	(sprintf@val+2)^(0+128),w
 10512  0182  1D03               	skipz
 10513  0183  2992               	goto	u5525
 10514  0184  1283               	bcf	3,5	;RP0=0, select bank0
 10515  0185  1303               	bcf	3,6	;RP1=0, select bank0
 10516  0186  086C               	movf	??_sprintf+2,w
 10517  0187  1683               	bsf	3,5	;RP0=1, select bank1
 10518  0188  1303               	bcf	3,6	;RP1=0, select bank1
 10519  0189  023B               	subwf	(sprintf@val+1)^(0+128),w
 10520  018A  1D03               	skipz
 10521  018B  2992               	goto	u5525
 10522  018C  1283               	bcf	3,5	;RP0=0, select bank0
 10523  018D  1303               	bcf	3,6	;RP1=0, select bank0
 10524  018E  086B               	movf	??_sprintf+1,w
 10525  018F  1683               	bsf	3,5	;RP0=1, select bank1
 10526  0190  1303               	bcf	3,6	;RP1=0, select bank1
 10527  0191  023A               	subwf	sprintf@val^(0+128),w
 10528  0192                     u5525:
 10529  0192  1803               	skipnc
 10530  0193  2995               	goto	u5521
 10531  0194  2996               	goto	u5520
 10532  0195                     u5521:
 10533  0195  2997               	goto	l3453
 10534  0196                     u5520:
 10535  0196  29A5               	goto	l3455
 10536  0197                     l3453:
 10537  0197  3001               	movlw	1
 10538  0198  1283               	bcf	3,5	;RP0=0, select bank0
 10539  0199  1303               	bcf	3,6	;RP1=0, select bank0
 10540  019A  00EA               	movwf	??_sprintf
 10541  019B  086A               	movf	??_sprintf,w
 10542  019C  1683               	bsf	3,5	;RP0=1, select bank1
 10543  019D  1303               	bcf	3,6	;RP1=0, select bank1
 10544  019E  07CF               	addwf	sprintf@c^(0+128),f
 10545  019F  300A               	movlw	10
 10546  01A0  064F               	xorwf	sprintf@c^(0+128),w
 10547  01A1  1D03               	btfss	3,2
 10548  01A2  29A4               	goto	u5531
 10549  01A3  29A5               	goto	u5530
 10550  01A4                     u5531:
 10551  01A4  2950               	goto	l3449
 10552  01A5                     u5530:
 10553  01A5                     l3455:
 10554                           
 10555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10556  01A5  084F               	movf	sprintf@c^(0+128),w
 10557  01A6  074D               	addwf	sprintf@prec^(0+128),w
 10558  01A7  1283               	bcf	3,5	;RP0=0, select bank0
 10559  01A8  1303               	bcf	3,6	;RP1=0, select bank0
 10560  01A9  00EA               	movwf	??_sprintf
 10561  01AA  1683               	bsf	3,5	;RP0=1, select bank1
 10562  01AB  1303               	bcf	3,6	;RP1=0, select bank1
 10563  01AC  084E               	movf	(sprintf@prec+1)^(0+128),w
 10564  01AD  1803               	skipnc
 10565  01AE  0A4E               	incf	(sprintf@prec+1)^(0+128),w
 10566  01AF  1283               	bcf	3,5	;RP0=0, select bank0
 10567  01B0  1303               	bcf	3,6	;RP1=0, select bank0
 10568  01B1  00EB               	movwf	??_sprintf+1
 10569  01B2  1683               	bsf	3,5	;RP0=1, select bank1
 10570  01B3  1303               	bcf	3,6	;RP1=0, select bank1
 10571  01B4  0846               	movf	sprintf@eexp^(0+128),w
 10572  01B5  1283               	bcf	3,5	;RP0=0, select bank0
 10573  01B6  1303               	bcf	3,6	;RP1=0, select bank0
 10574  01B7  076A               	addwf	??_sprintf,w
 10575  01B8  00EC               	movwf	??_sprintf+2
 10576  01B9  1683               	bsf	3,5	;RP0=1, select bank1
 10577  01BA  1303               	bcf	3,6	;RP1=0, select bank1
 10578  01BB  0847               	movf	(sprintf@eexp+1)^(0+128),w
 10579  01BC  1803               	skipnc
 10580  01BD  0A47               	incf	(sprintf@eexp+1)^(0+128),w
 10581  01BE  1283               	bcf	3,5	;RP0=0, select bank0
 10582  01BF  1303               	bcf	3,6	;RP1=0, select bank0
 10583  01C0  076B               	addwf	??_sprintf+1,w
 10584  01C1  00ED               	movwf	??_sprintf+3
 10585  01C2  086C               	movf	??_sprintf+2,w
 10586  01C3  1683               	bsf	3,5	;RP0=1, select bank1
 10587  01C4  1303               	bcf	3,6	;RP1=0, select bank1
 10588  01C5  02C0               	subwf	sprintf@width^(0+128),f
 10589  01C6  1283               	bcf	3,5	;RP0=0, select bank0
 10590  01C7  1303               	bcf	3,6	;RP1=0, select bank0
 10591  01C8  086D               	movf	??_sprintf+3,w
 10592  01C9  1683               	bsf	3,5	;RP0=1, select bank1
 10593  01CA  1303               	bcf	3,6	;RP1=0, select bank1
 10594  01CB  1C03               	skipc
 10595  01CC  03C1               	decf	(sprintf@width+1)^(0+128),f
 10596  01CD  02C1               	subwf	(sprintf@width+1)^(0+128),f
 10597                           
 10598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10599  01CE  084D               	movf	sprintf@prec^(0+128),w
 10600  01CF  044E               	iorwf	(sprintf@prec+1)^(0+128),w
 10601  01D0  1903               	btfsc	3,2
 10602  01D1  29D3               	goto	u5541
 10603  01D2  29D4               	goto	u5540
 10604  01D3                     u5541:
 10605  01D3  29DA               	goto	l3459
 10606  01D4                     u5540:
 10607  01D4                     l3457:
 10608                           
 10609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10610  01D4  30FF               	movlw	255
 10611  01D5  07C0               	addwf	sprintf@width^(0+128),f
 10612  01D6  1803               	skipnc
 10613  01D7  0AC1               	incf	(sprintf@width+1)^(0+128),f
 10614  01D8  30FF               	movlw	255
 10615  01D9  07C1               	addwf	(sprintf@width+1)^(0+128),f
 10616  01DA                     l3459:
 10617                           
 10618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10619  01DA  3003               	movlw	3
 10620  01DB  053E               	andwf	sprintf@flag^(0+128),w
 10621  01DC  1283               	bcf	3,5	;RP0=0, select bank0
 10622  01DD  1303               	bcf	3,6	;RP1=0, select bank0
 10623  01DE  00EA               	movwf	??_sprintf
 10624  01DF  3000               	movlw	0
 10625  01E0  1683               	bsf	3,5	;RP0=1, select bank1
 10626  01E1  1303               	bcf	3,6	;RP1=0, select bank1
 10627  01E2  053F               	andwf	(sprintf@flag+1)^(0+128),w
 10628  01E3  1283               	bcf	3,5	;RP0=0, select bank0
 10629  01E4  1303               	bcf	3,6	;RP1=0, select bank0
 10630  01E5  00EB               	movwf	??_sprintf+1
 10631  01E6  086A               	movf	??_sprintf,w
 10632  01E7  046B               	iorwf	??_sprintf+1,w
 10633  01E8  1903               	btfsc	3,2
 10634  01E9  29EB               	goto	u5551
 10635  01EA  29EC               	goto	u5550
 10636  01EB                     u5551:
 10637  01EB  2A09               	goto	l3469
 10638  01EC                     u5550:
 10639  01EC                     l3461:
 10640                           
 10641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10642  01EC  30FF               	movlw	255
 10643  01ED  1683               	bsf	3,5	;RP0=1, select bank1
 10644  01EE  1303               	bcf	3,6	;RP1=0, select bank1
 10645  01EF  07C0               	addwf	sprintf@width^(0+128),f
 10646  01F0  1803               	skipnc
 10647  01F1  0AC1               	incf	(sprintf@width+1)^(0+128),f
 10648  01F2  30FF               	movlw	255
 10649  01F3  07C1               	addwf	(sprintf@width+1)^(0+128),f
 10650  01F4  2A09               	goto	l3469
 10651  01F5                     l3463:
 10652                           
 10653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10654  01F5  3020               	movlw	32
 10655  01F6  1283               	bcf	3,5	;RP0=0, select bank0
 10656  01F7  1303               	bcf	3,6	;RP1=0, select bank0
 10657  01F8  00EA               	movwf	??_sprintf
 10658  01F9  1683               	bsf	3,5	;RP0=1, select bank1
 10659  01FA  1303               	bcf	3,6	;RP1=0, select bank1
 10660  01FB  084C               	movf	sprintf@sp^(0+128),w
 10661  01FC  0084               	movwf	4
 10662  01FD  1283               	bcf	3,5	;RP0=0, select bank0
 10663  01FE  1303               	bcf	3,6	;RP1=0, select bank0
 10664  01FF  086A               	movf	??_sprintf,w
 10665  0200  1383               	bcf	3,7	;select IRP bank0
 10666  0201  0080               	movwf	0
 10667  0202                     l3465:
 10668  0202  3001               	movlw	1
 10669  0203  00EA               	movwf	??_sprintf
 10670  0204  086A               	movf	??_sprintf,w
 10671  0205  1683               	bsf	3,5	;RP0=1, select bank1
 10672  0206  1303               	bcf	3,6	;RP1=0, select bank1
 10673  0207  07CC               	addwf	sprintf@sp^(0+128),f
 10674  0208  29EC               	goto	l3461
 10675  0209                     l3469:
 10676                           
 10677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10678  0209  1683               	bsf	3,5	;RP0=1, select bank1
 10679  020A  1303               	bcf	3,6	;RP1=0, select bank1
 10680  020B  0841               	movf	(sprintf@width+1)^(0+128),w
 10681  020C  3A80               	xorlw	128
 10682  020D  00FF               	movwf	btemp+1
 10683  020E  3080               	movlw	128
 10684  020F  027F               	subwf	btemp+1,w
 10685  0210  1D03               	skipz
 10686  0211  2A14               	goto	u5565
 10687  0212  3001               	movlw	1
 10688  0213  0240               	subwf	sprintf@width^(0+128),w
 10689  0214                     u5565:
 10690  0214  1803               	skipnc
 10691  0215  2A17               	goto	u5561
 10692  0216  2A18               	goto	u5560
 10693  0217                     u5561:
 10694  0217  29F5               	goto	l3463
 10695  0218                     u5560:
 10696  0218                     l3471:
 10697                           
 10698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10699  0218  3003               	movlw	3
 10700  0219  1683               	bsf	3,5	;RP0=1, select bank1
 10701  021A  1303               	bcf	3,6	;RP1=0, select bank1
 10702  021B  053E               	andwf	sprintf@flag^(0+128),w
 10703  021C  1283               	bcf	3,5	;RP0=0, select bank0
 10704  021D  1303               	bcf	3,6	;RP1=0, select bank0
 10705  021E  00EA               	movwf	??_sprintf
 10706  021F  3000               	movlw	0
 10707  0220  1683               	bsf	3,5	;RP0=1, select bank1
 10708  0221  1303               	bcf	3,6	;RP1=0, select bank1
 10709  0222  053F               	andwf	(sprintf@flag+1)^(0+128),w
 10710  0223  1283               	bcf	3,5	;RP0=0, select bank0
 10711  0224  1303               	bcf	3,6	;RP1=0, select bank0
 10712  0225  00EB               	movwf	??_sprintf+1
 10713  0226  086A               	movf	??_sprintf,w
 10714  0227  046B               	iorwf	??_sprintf+1,w
 10715  0228  1903               	btfsc	3,2
 10716  0229  2A2B               	goto	u5571
 10717  022A  2A2C               	goto	u5570
 10718  022B                     u5571:
 10719  022B  2AB0               	goto	l390
 10720  022C                     u5570:
 10721  022C                     l3473:
 10722                           
 10723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10724  022C  302D               	movlw	45
 10725  022D  00EA               	movwf	??_sprintf
 10726  022E  1683               	bsf	3,5	;RP0=1, select bank1
 10727  022F  1303               	bcf	3,6	;RP1=0, select bank1
 10728  0230  084C               	movf	sprintf@sp^(0+128),w
 10729  0231  0084               	movwf	4
 10730  0232  1283               	bcf	3,5	;RP0=0, select bank0
 10731  0233  1303               	bcf	3,6	;RP1=0, select bank0
 10732  0234  086A               	movf	??_sprintf,w
 10733  0235  1383               	bcf	3,7	;select IRP bank0
 10734  0236  0080               	movwf	0
 10735  0237                     l3475:
 10736  0237  3001               	movlw	1
 10737  0238  00EA               	movwf	??_sprintf
 10738  0239  086A               	movf	??_sprintf,w
 10739  023A  1683               	bsf	3,5	;RP0=1, select bank1
 10740  023B  1303               	bcf	3,6	;RP1=0, select bank1
 10741  023C  07CC               	addwf	sprintf@sp^(0+128),f
 10742  023D  2AB0               	goto	l390
 10743  023E                     l3477:
 10744                           
 10745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10746  023E  084F               	movf	sprintf@c^(0+128),w
 10747  023F  1283               	bcf	3,5	;RP0=0, select bank0
 10748  0240  1303               	bcf	3,6	;RP1=0, select bank0
 10749  0241  00EA               	movwf	??_sprintf
 10750  0242  3001               	movlw	1
 10751  0243                     u5585:
 10752  0243  1003               	clrc
 10753  0244  0DEA               	rlf	??_sprintf,f
 10754  0245  3EFF               	addlw	-1
 10755  0246  1D03               	skipz
 10756  0247  2A43               	goto	u5585
 10757  0248  1003               	clrc
 10758  0249  0D6A               	rlf	??_sprintf,w
 10759  024A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10760  024B  0084               	movwf	4
 10761  024C  160A  118A  200A  120A  118A  	fcall	stringdir
 10762  0251  00F3               	movwf	___lldiv@divisor
 10763  0252  160A  118A  200A  120A  118A  	fcall	stringdir
 10764  0257  00F4               	movwf	___lldiv@divisor+1
 10765  0258  160A  118A  200A  120A  118A  	fcall	stringdir
 10766  025D  00F5               	movwf	___lldiv@divisor+2
 10767  025E  160A  118A  200A  120A  118A  	fcall	stringdir
 10768  0263  00F6               	movwf	___lldiv@divisor+3
 10769  0264  1683               	bsf	3,5	;RP0=1, select bank1
 10770  0265  1303               	bcf	3,6	;RP1=0, select bank1
 10771  0266  083D               	movf	(sprintf@val+3)^(0+128),w
 10772  0267  00FA               	movwf	___lldiv@dividend+3
 10773  0268  083C               	movf	(sprintf@val+2)^(0+128),w
 10774  0269  00F9               	movwf	___lldiv@dividend+2
 10775  026A  083B               	movf	(sprintf@val+1)^(0+128),w
 10776  026B  00F8               	movwf	___lldiv@dividend+1
 10777  026C  083A               	movf	sprintf@val^(0+128),w
 10778  026D  00F7               	movwf	___lldiv@dividend
 10779  026E  160A  158A  2553  120A  118A  	fcall	___lldiv
 10780  0273  0876               	movf	?___lldiv+3,w
 10781  0274  1683               	bsf	3,5	;RP0=1, select bank1
 10782  0275  1303               	bcf	3,6	;RP1=0, select bank1
 10783  0276  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
 10784  0277  0875               	movf	?___lldiv+2,w
 10785  0278  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
 10786  0279  0874               	movf	?___lldiv+1,w
 10787  027A  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
 10788  027B  0873               	movf	?___lldiv,w
 10789  027C  00C2               	movwf	sprintf@tmpval^(0+128)
 10790  027D                     l3479:
 10791                           
 10792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10793  027D  3000               	movlw	0
 10794  027E  00F6               	movwf	___llmod@divisor+3
 10795  027F  3000               	movlw	0
 10796  0280  00F5               	movwf	___llmod@divisor+2
 10797  0281  3000               	movlw	0
 10798  0282  00F4               	movwf	___llmod@divisor+1
 10799  0283  300A               	movlw	10
 10800  0284  00F3               	movwf	___llmod@divisor
 10801  0285  0845               	movf	(sprintf@tmpval+3)^(0+128),w
 10802  0286  00FA               	movwf	___llmod@dividend+3
 10803  0287  0844               	movf	(sprintf@tmpval+2)^(0+128),w
 10804  0288  00F9               	movwf	___llmod@dividend+2
 10805  0289  0843               	movf	(sprintf@tmpval+1)^(0+128),w
 10806  028A  00F8               	movwf	___llmod@dividend+1
 10807  028B  0842               	movf	sprintf@tmpval^(0+128),w
 10808  028C  00F7               	movwf	___llmod@dividend
 10809  028D  160A  158A  24A4  120A  118A  	fcall	___llmod
 10810  0292  0876               	movf	?___llmod+3,w
 10811  0293  1683               	bsf	3,5	;RP0=1, select bank1
 10812  0294  1303               	bcf	3,6	;RP1=0, select bank1
 10813  0295  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
 10814  0296  0875               	movf	?___llmod+2,w
 10815  0297  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
 10816  0298  0874               	movf	?___llmod+1,w
 10817  0299  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
 10818  029A  0873               	movf	?___llmod,w
 10819  029B  00C2               	movwf	sprintf@tmpval^(0+128)
 10820  029C                     l3481:
 10821                           
 10822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10823  029C  0842               	movf	sprintf@tmpval^(0+128),w
 10824  029D  3E30               	addlw	48
 10825  029E  1283               	bcf	3,5	;RP0=0, select bank0
 10826  029F  1303               	bcf	3,6	;RP1=0, select bank0
 10827  02A0  00EA               	movwf	??_sprintf
 10828  02A1  1683               	bsf	3,5	;RP0=1, select bank1
 10829  02A2  1303               	bcf	3,6	;RP1=0, select bank1
 10830  02A3  084C               	movf	sprintf@sp^(0+128),w
 10831  02A4  0084               	movwf	4
 10832  02A5  1283               	bcf	3,5	;RP0=0, select bank0
 10833  02A6  1303               	bcf	3,6	;RP1=0, select bank0
 10834  02A7  086A               	movf	??_sprintf,w
 10835  02A8  1383               	bcf	3,7	;select IRP bank0
 10836  02A9  0080               	movwf	0
 10837  02AA  3001               	movlw	1
 10838  02AB  00EA               	movwf	??_sprintf
 10839  02AC  086A               	movf	??_sprintf,w
 10840  02AD  1683               	bsf	3,5	;RP0=1, select bank1
 10841  02AE  1303               	bcf	3,6	;RP1=0, select bank1
 10842  02AF  07CC               	addwf	sprintf@sp^(0+128),f
 10843  02B0                     l390:	
 10844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10845                           
 10846                           
 10847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10848  02B0  3001               	movlw	1
 10849  02B1  1683               	bsf	3,5	;RP0=1, select bank1
 10850  02B2  1303               	bcf	3,6	;RP1=0, select bank1
 10851  02B3  02CF               	subwf	sprintf@c^(0+128),f
 10852  02B4  0A4F               	incf	sprintf@c^(0+128),w
 10853  02B5  1D03               	btfss	3,2
 10854  02B6  2AB8               	goto	u5591
 10855  02B7  2AB9               	goto	u5590
 10856  02B8                     u5591:
 10857  02B8  2A3E               	goto	l3477
 10858  02B9                     u5590:
 10859  02B9  2AD3               	goto	l3489
 10860  02BA                     l3483:
 10861                           
 10862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10863  02BA  3030               	movlw	48
 10864  02BB  1283               	bcf	3,5	;RP0=0, select bank0
 10865  02BC  1303               	bcf	3,6	;RP1=0, select bank0
 10866  02BD  00EA               	movwf	??_sprintf
 10867  02BE  1683               	bsf	3,5	;RP0=1, select bank1
 10868  02BF  1303               	bcf	3,6	;RP1=0, select bank1
 10869  02C0  084C               	movf	sprintf@sp^(0+128),w
 10870  02C1  0084               	movwf	4
 10871  02C2  1283               	bcf	3,5	;RP0=0, select bank0
 10872  02C3  1303               	bcf	3,6	;RP1=0, select bank0
 10873  02C4  086A               	movf	??_sprintf,w
 10874  02C5  1383               	bcf	3,7	;select IRP bank0
 10875  02C6  0080               	movwf	0
 10876  02C7                     l3485:
 10877  02C7  3001               	movlw	1
 10878  02C8  00EA               	movwf	??_sprintf
 10879  02C9  086A               	movf	??_sprintf,w
 10880  02CA  1683               	bsf	3,5	;RP0=1, select bank1
 10881  02CB  1303               	bcf	3,6	;RP1=0, select bank1
 10882  02CC  07CC               	addwf	sprintf@sp^(0+128),f
 10883  02CD                     l3487:
 10884                           
 10885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10886  02CD  30FF               	movlw	255
 10887  02CE  07C6               	addwf	sprintf@eexp^(0+128),f
 10888  02CF  1803               	skipnc
 10889  02D0  0AC7               	incf	(sprintf@eexp+1)^(0+128),f
 10890  02D1  30FF               	movlw	255
 10891  02D2  07C7               	addwf	(sprintf@eexp+1)^(0+128),f
 10892  02D3                     l3489:
 10893                           
 10894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10895  02D3  0847               	movf	(sprintf@eexp+1)^(0+128),w
 10896  02D4  3A80               	xorlw	128
 10897  02D5  00FF               	movwf	btemp+1
 10898  02D6  3080               	movlw	128
 10899  02D7  027F               	subwf	btemp+1,w
 10900  02D8  1D03               	skipz
 10901  02D9  2ADC               	goto	u5605
 10902  02DA  3001               	movlw	1
 10903  02DB  0246               	subwf	sprintf@eexp^(0+128),w
 10904  02DC                     u5605:
 10905  02DC  1803               	skipnc
 10906  02DD  2ADF               	goto	u5601
 10907  02DE  2AE0               	goto	u5600
 10908  02DF                     u5601:
 10909  02DF  2ABA               	goto	l3483
 10910  02E0                     u5600:
 10911  02E0                     l3491:
 10912                           
 10913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10914  02E0  1683               	bsf	3,5	;RP0=1, select bank1
 10915  02E1  1303               	bcf	3,6	;RP1=0, select bank1
 10916  02E2  084E               	movf	(sprintf@prec+1)^(0+128),w
 10917  02E3  3A80               	xorlw	128
 10918  02E4  00FF               	movwf	btemp+1
 10919  02E5  3080               	movlw	128
 10920  02E6  027F               	subwf	btemp+1,w
 10921  02E7  1D03               	skipz
 10922  02E8  2AEB               	goto	u5615
 10923  02E9  3009               	movlw	9
 10924  02EA  024D               	subwf	sprintf@prec^(0+128),w
 10925  02EB                     u5615:
 10926  02EB  1C03               	skipc
 10927  02EC  2AEE               	goto	u5611
 10928  02ED  2AEF               	goto	u5610
 10929  02EE                     u5611:
 10930  02EE  2AF8               	goto	l3495
 10931  02EF                     u5610:
 10932  02EF                     l3493:
 10933                           
 10934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10935  02EF  3008               	movlw	8
 10936  02F0  1283               	bcf	3,5	;RP0=0, select bank0
 10937  02F1  1303               	bcf	3,6	;RP1=0, select bank0
 10938  02F2  00EA               	movwf	??_sprintf
 10939  02F3  086A               	movf	??_sprintf,w
 10940  02F4  1683               	bsf	3,5	;RP0=1, select bank1
 10941  02F5  1303               	bcf	3,6	;RP1=0, select bank1
 10942  02F6  00CF               	movwf	sprintf@c^(0+128)
 10943  02F7  2B02               	goto	l397
 10944  02F8                     l3495:
 10945                           
 10946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10947  02F8  1683               	bsf	3,5	;RP0=1, select bank1
 10948  02F9  1303               	bcf	3,6	;RP1=0, select bank1
 10949  02FA  084D               	movf	sprintf@prec^(0+128),w
 10950  02FB  1283               	bcf	3,5	;RP0=0, select bank0
 10951  02FC  1303               	bcf	3,6	;RP1=0, select bank0
 10952  02FD  00EA               	movwf	??_sprintf
 10953  02FE  086A               	movf	??_sprintf,w
 10954  02FF  1683               	bsf	3,5	;RP0=1, select bank1
 10955  0300  1303               	bcf	3,6	;RP1=0, select bank1
 10956  0301  00CF               	movwf	sprintf@c^(0+128)
 10957  0302                     l397:
 10958                           
 10959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10960  0302  084F               	movf	sprintf@c^(0+128),w
 10961  0303  1283               	bcf	3,5	;RP0=0, select bank0
 10962  0304  1303               	bcf	3,6	;RP1=0, select bank0
 10963  0305  00EA               	movwf	??_sprintf
 10964  0306  01EB               	clrf	??_sprintf+1
 10965  0307  086A               	movf	??_sprintf,w
 10966  0308  1683               	bsf	3,5	;RP0=1, select bank1
 10967  0309  1303               	bcf	3,6	;RP1=0, select bank1
 10968  030A  02CD               	subwf	sprintf@prec^(0+128),f
 10969  030B  1283               	bcf	3,5	;RP0=0, select bank0
 10970  030C  1303               	bcf	3,6	;RP1=0, select bank0
 10971  030D  086B               	movf	??_sprintf+1,w
 10972  030E  1683               	bsf	3,5	;RP0=1, select bank1
 10973  030F  1303               	bcf	3,6	;RP1=0, select bank1
 10974  0310  1C03               	skipc
 10975  0311  03CE               	decf	(sprintf@prec+1)^(0+128),f
 10976  0312  02CE               	subwf	(sprintf@prec+1)^(0+128),f
 10977  0313                     l3497:
 10978                           
 10979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10980  0313  084F               	movf	sprintf@c^(0+128),w
 10981  0314  1903               	btfsc	3,2
 10982  0315  2B17               	goto	u5621
 10983  0316  2B18               	goto	u5620
 10984  0317                     u5621:
 10985  0317  2B2B               	goto	l3503
 10986  0318                     u5620:
 10987  0318                     l3499:
 10988                           
 10989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10990  0318  302E               	movlw	46
 10991  0319  1283               	bcf	3,5	;RP0=0, select bank0
 10992  031A  1303               	bcf	3,6	;RP1=0, select bank0
 10993  031B  00EA               	movwf	??_sprintf
 10994  031C  1683               	bsf	3,5	;RP0=1, select bank1
 10995  031D  1303               	bcf	3,6	;RP1=0, select bank1
 10996  031E  084C               	movf	sprintf@sp^(0+128),w
 10997  031F  0084               	movwf	4
 10998  0320  1283               	bcf	3,5	;RP0=0, select bank0
 10999  0321  1303               	bcf	3,6	;RP1=0, select bank0
 11000  0322  086A               	movf	??_sprintf,w
 11001  0323  1383               	bcf	3,7	;select IRP bank0
 11002  0324  0080               	movwf	0
 11003  0325                     l3501:
 11004  0325  3001               	movlw	1
 11005  0326  00EA               	movwf	??_sprintf
 11006  0327  086A               	movf	??_sprintf,w
 11007  0328  1683               	bsf	3,5	;RP0=1, select bank1
 11008  0329  1303               	bcf	3,6	;RP1=0, select bank1
 11009  032A  07CC               	addwf	sprintf@sp^(0+128),f
 11010  032B                     l3503:
 11011                           
 11012                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11013  032B  084F               	movf	sprintf@c^(0+128),w
 11014  032C  120A  158A  249D  120A  118A  	fcall	_scale
 11015  0331  1283               	bcf	3,5	;RP0=0, select bank0
 11016  0332  1303               	bcf	3,6	;RP1=0, select bank0
 11017  0333  0845               	movf	?_scale+3,w
 11018  0334  1683               	bsf	3,5	;RP0=1, select bank1
 11019  0335  1303               	bcf	3,6	;RP1=0, select bank1
 11020  0336  00B8               	movwf	(_sprintf$1239+3)^(0+128)
 11021  0337  1283               	bcf	3,5	;RP0=0, select bank0
 11022  0338  1303               	bcf	3,6	;RP1=0, select bank0
 11023  0339  0844               	movf	?_scale+2,w
 11024  033A  1683               	bsf	3,5	;RP0=1, select bank1
 11025  033B  1303               	bcf	3,6	;RP1=0, select bank1
 11026  033C  00B7               	movwf	(_sprintf$1239+2)^(0+128)
 11027  033D  1283               	bcf	3,5	;RP0=0, select bank0
 11028  033E  1303               	bcf	3,6	;RP1=0, select bank0
 11029  033F  0843               	movf	?_scale+1,w
 11030  0340  1683               	bsf	3,5	;RP0=1, select bank1
 11031  0341  1303               	bcf	3,6	;RP1=0, select bank1
 11032  0342  00B6               	movwf	(_sprintf$1239+1)^(0+128)
 11033  0343  1283               	bcf	3,5	;RP0=0, select bank0
 11034  0344  1303               	bcf	3,6	;RP1=0, select bank0
 11035  0345  0842               	movf	?_scale,w
 11036  0346  1683               	bsf	3,5	;RP0=1, select bank1
 11037  0347  1303               	bcf	3,6	;RP1=0, select bank1
 11038  0348  00B5               	movwf	_sprintf$1239^(0+128)
 11039  0349                     l3505:
 11040                           
 11041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11042  0349  0838               	movf	(_sprintf$1239+3)^(0+128),w
 11043  034A  1283               	bcf	3,5	;RP0=0, select bank0
 11044  034B  1303               	bcf	3,6	;RP1=0, select bank0
 11045  034C  00AF               	movwf	___flmul@a+3
 11046  034D  1683               	bsf	3,5	;RP0=1, select bank1
 11047  034E  1303               	bcf	3,6	;RP1=0, select bank1
 11048  034F  0837               	movf	(_sprintf$1239+2)^(0+128),w
 11049  0350  1283               	bcf	3,5	;RP0=0, select bank0
 11050  0351  1303               	bcf	3,6	;RP1=0, select bank0
 11051  0352  00AE               	movwf	___flmul@a+2
 11052  0353  1683               	bsf	3,5	;RP0=1, select bank1
 11053  0354  1303               	bcf	3,6	;RP1=0, select bank1
 11054  0355  0836               	movf	(_sprintf$1239+1)^(0+128),w
 11055  0356  1283               	bcf	3,5	;RP0=0, select bank0
 11056  0357  1303               	bcf	3,6	;RP1=0, select bank0
 11057  0358  00AD               	movwf	___flmul@a+1
 11058  0359  1683               	bsf	3,5	;RP0=1, select bank1
 11059  035A  1303               	bcf	3,6	;RP1=0, select bank1
 11060  035B  0835               	movf	_sprintf$1239^(0+128),w
 11061  035C  1283               	bcf	3,5	;RP0=0, select bank0
 11062  035D  1303               	bcf	3,6	;RP1=0, select bank0
 11063  035E  00AC               	movwf	___flmul@a
 11064  035F  1683               	bsf	3,5	;RP0=1, select bank1
 11065  0360  1303               	bcf	3,6	;RP1=0, select bank1
 11066  0361  084B               	movf	(sprintf@fval+3)^(0+128),w
 11067  0362  1283               	bcf	3,5	;RP0=0, select bank0
 11068  0363  1303               	bcf	3,6	;RP1=0, select bank0
 11069  0364  00AB               	movwf	___flmul@b+3
 11070  0365  1683               	bsf	3,5	;RP0=1, select bank1
 11071  0366  1303               	bcf	3,6	;RP1=0, select bank1
 11072  0367  084A               	movf	(sprintf@fval+2)^(0+128),w
 11073  0368  1283               	bcf	3,5	;RP0=0, select bank0
 11074  0369  1303               	bcf	3,6	;RP1=0, select bank0
 11075  036A  00AA               	movwf	___flmul@b+2
 11076  036B  1683               	bsf	3,5	;RP0=1, select bank1
 11077  036C  1303               	bcf	3,6	;RP1=0, select bank1
 11078  036D  0849               	movf	(sprintf@fval+1)^(0+128),w
 11079  036E  1283               	bcf	3,5	;RP0=0, select bank0
 11080  036F  1303               	bcf	3,6	;RP1=0, select bank0
 11081  0370  00A9               	movwf	___flmul@b+1
 11082  0371  1683               	bsf	3,5	;RP0=1, select bank1
 11083  0372  1303               	bcf	3,6	;RP1=0, select bank1
 11084  0373  0848               	movf	sprintf@fval^(0+128),w
 11085  0374  1283               	bcf	3,5	;RP0=0, select bank0
 11086  0375  1303               	bcf	3,6	;RP1=0, select bank0
 11087  0376  00A8               	movwf	___flmul@b
 11088  0377  120A  158A  213C  120A  118A  	fcall	___flmul
 11089  037C  1283               	bcf	3,5	;RP0=0, select bank0
 11090  037D  1303               	bcf	3,6	;RP1=0, select bank0
 11091  037E  082B               	movf	?___flmul+3,w
 11092  037F  00D8               	movwf	___fltol@f1+3
 11093  0380  082A               	movf	?___flmul+2,w
 11094  0381  00D7               	movwf	___fltol@f1+2
 11095  0382  0829               	movf	?___flmul+1,w
 11096  0383  00D6               	movwf	___fltol@f1+1
 11097  0384  0828               	movf	?___flmul,w
 11098  0385  00D5               	movwf	___fltol@f1
 11099  0386  160A  158A  2624  120A  118A  	fcall	___fltol
 11100  038B  1283               	bcf	3,5	;RP0=0, select bank0
 11101  038C  1303               	bcf	3,6	;RP1=0, select bank0
 11102  038D  0858               	movf	?___fltol+3,w
 11103  038E  1683               	bsf	3,5	;RP0=1, select bank1
 11104  038F  1303               	bcf	3,6	;RP1=0, select bank1
 11105  0390  00BD               	movwf	(sprintf@val+3)^(0+128)
 11106  0391  1283               	bcf	3,5	;RP0=0, select bank0
 11107  0392  1303               	bcf	3,6	;RP1=0, select bank0
 11108  0393  0857               	movf	?___fltol+2,w
 11109  0394  1683               	bsf	3,5	;RP0=1, select bank1
 11110  0395  1303               	bcf	3,6	;RP1=0, select bank1
 11111  0396  00BC               	movwf	(sprintf@val+2)^(0+128)
 11112  0397  1283               	bcf	3,5	;RP0=0, select bank0
 11113  0398  1303               	bcf	3,6	;RP1=0, select bank0
 11114  0399  0856               	movf	?___fltol+1,w
 11115  039A  1683               	bsf	3,5	;RP0=1, select bank1
 11116  039B  1303               	bcf	3,6	;RP1=0, select bank1
 11117  039C  00BB               	movwf	(sprintf@val+1)^(0+128)
 11118  039D  1283               	bcf	3,5	;RP0=0, select bank0
 11119  039E  1303               	bcf	3,6	;RP1=0, select bank0
 11120  039F  0855               	movf	?___fltol,w
 11121  03A0  1683               	bsf	3,5	;RP0=1, select bank1
 11122  03A1  1303               	bcf	3,6	;RP1=0, select bank1
 11123  03A2  00BA               	movwf	sprintf@val^(0+128)
 11124                           
 11125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11126  03A3  2C55               	goto	l3515
 11127  03A4                     l3507:
 11128                           
 11129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11130  03A4  084F               	movf	sprintf@c^(0+128),w
 11131  03A5  1283               	bcf	3,5	;RP0=0, select bank0
 11132  03A6  1303               	bcf	3,6	;RP1=0, select bank0
 11133  03A7  00EA               	movwf	??_sprintf
 11134  03A8  3001               	movlw	1
 11135  03A9                     u5635:
 11136  03A9  1003               	clrc
 11137  03AA  0DEA               	rlf	??_sprintf,f
 11138  03AB  3EFF               	addlw	-1
 11139  03AC  1D03               	skipz
 11140  03AD  2BA9               	goto	u5635
 11141  03AE  1003               	clrc
 11142  03AF  0D6A               	rlf	??_sprintf,w
 11143  03B0  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11144  03B1  0084               	movwf	4
 11145  03B2  160A  118A  200A  120A  118A  	fcall	stringdir
 11146  03B7  00F3               	movwf	___lldiv@divisor
 11147  03B8  160A  118A  200A  120A  118A  	fcall	stringdir
 11148  03BD  00F4               	movwf	___lldiv@divisor+1
 11149  03BE  160A  118A  200A  120A  118A  	fcall	stringdir
 11150  03C3  00F5               	movwf	___lldiv@divisor+2
 11151  03C4  160A  118A  200A  120A  118A  	fcall	stringdir
 11152  03C9  00F6               	movwf	___lldiv@divisor+3
 11153  03CA  1683               	bsf	3,5	;RP0=1, select bank1
 11154  03CB  1303               	bcf	3,6	;RP1=0, select bank1
 11155  03CC  083D               	movf	(sprintf@val+3)^(0+128),w
 11156  03CD  00FA               	movwf	___lldiv@dividend+3
 11157  03CE  083C               	movf	(sprintf@val+2)^(0+128),w
 11158  03CF  00F9               	movwf	___lldiv@dividend+2
 11159  03D0  083B               	movf	(sprintf@val+1)^(0+128),w
 11160  03D1  00F8               	movwf	___lldiv@dividend+1
 11161  03D2  083A               	movf	sprintf@val^(0+128),w
 11162  03D3  00F7               	movwf	___lldiv@dividend
 11163  03D4  160A  158A  2553  120A  118A  	fcall	___lldiv
 11164  03D9  0876               	movf	?___lldiv+3,w
 11165  03DA  1683               	bsf	3,5	;RP0=1, select bank1
 11166  03DB  1303               	bcf	3,6	;RP1=0, select bank1
 11167  03DC  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
 11168  03DD  0875               	movf	?___lldiv+2,w
 11169  03DE  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
 11170  03DF  0874               	movf	?___lldiv+1,w
 11171  03E0  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
 11172  03E1  0873               	movf	?___lldiv,w
 11173  03E2  00C2               	movwf	sprintf@tmpval^(0+128)
 11174  03E3                     l3509:
 11175                           
 11176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11177  03E3  3000               	movlw	0
 11178  03E4  00F6               	movwf	___llmod@divisor+3
 11179  03E5  3000               	movlw	0
 11180  03E6  00F5               	movwf	___llmod@divisor+2
 11181  03E7  3000               	movlw	0
 11182  03E8  00F4               	movwf	___llmod@divisor+1
 11183  03E9  300A               	movlw	10
 11184  03EA  00F3               	movwf	___llmod@divisor
 11185  03EB  0845               	movf	(sprintf@tmpval+3)^(0+128),w
 11186  03EC  00FA               	movwf	___llmod@dividend+3
 11187  03ED  0844               	movf	(sprintf@tmpval+2)^(0+128),w
 11188  03EE  00F9               	movwf	___llmod@dividend+2
 11189  03EF  0843               	movf	(sprintf@tmpval+1)^(0+128),w
 11190  03F0  00F8               	movwf	___llmod@dividend+1
 11191  03F1  0842               	movf	sprintf@tmpval^(0+128),w
 11192  03F2  00F7               	movwf	___llmod@dividend
 11193  03F3  160A  158A  24A4  120A  118A  	fcall	___llmod
 11194  03F8  0876               	movf	?___llmod+3,w
 11195  03F9  1683               	bsf	3,5	;RP0=1, select bank1
 11196  03FA  1303               	bcf	3,6	;RP1=0, select bank1
 11197  03FB  00C5               	movwf	(sprintf@tmpval+3)^(0+128)
 11198  03FC  0875               	movf	?___llmod+2,w
 11199  03FD  00C4               	movwf	(sprintf@tmpval+2)^(0+128)
 11200  03FE  0874               	movf	?___llmod+1,w
 11201  03FF  00C3               	movwf	(sprintf@tmpval+1)^(0+128)
 11202  0400  0873               	movf	?___llmod,w
 11203  0401  00C2               	movwf	sprintf@tmpval^(0+128)
 11204  0402                     l3511:
 11205                           
 11206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11207  0402  0842               	movf	sprintf@tmpval^(0+128),w
 11208  0403  3E30               	addlw	48
 11209  0404  1283               	bcf	3,5	;RP0=0, select bank0
 11210  0405  1303               	bcf	3,6	;RP1=0, select bank0
 11211  0406  00EA               	movwf	??_sprintf
 11212  0407  1683               	bsf	3,5	;RP0=1, select bank1
 11213  0408  1303               	bcf	3,6	;RP1=0, select bank1
 11214  0409  084C               	movf	sprintf@sp^(0+128),w
 11215  040A  0084               	movwf	4
 11216  040B  1283               	bcf	3,5	;RP0=0, select bank0
 11217  040C  1303               	bcf	3,6	;RP1=0, select bank0
 11218  040D  086A               	movf	??_sprintf,w
 11219  040E  1383               	bcf	3,7	;select IRP bank0
 11220  040F  0080               	movwf	0
 11221  0410  3001               	movlw	1
 11222  0411  00EA               	movwf	??_sprintf
 11223  0412  086A               	movf	??_sprintf,w
 11224  0413  1683               	bsf	3,5	;RP0=1, select bank1
 11225  0414  1303               	bcf	3,6	;RP1=0, select bank1
 11226  0415  07CC               	addwf	sprintf@sp^(0+128),f
 11227  0416                     l3513:
 11228                           
 11229                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11230  0416  084F               	movf	sprintf@c^(0+128),w
 11231  0417  1283               	bcf	3,5	;RP0=0, select bank0
 11232  0418  1303               	bcf	3,6	;RP1=0, select bank0
 11233  0419  00EA               	movwf	??_sprintf
 11234  041A  3001               	movlw	1
 11235  041B                     u5645:
 11236  041B  1003               	clrc
 11237  041C  0DEA               	rlf	??_sprintf,f
 11238  041D  3EFF               	addlw	-1
 11239  041E  1D03               	skipz
 11240  041F  2C1B               	goto	u5645
 11241  0420  1003               	clrc
 11242  0421  0D6A               	rlf	??_sprintf,w
 11243  0422  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11244  0423  0084               	movwf	4
 11245  0424  160A  118A  200A  120A  118A  	fcall	stringdir
 11246  0429  00F3               	movwf	___llmod@divisor
 11247  042A  160A  118A  200A  120A  118A  	fcall	stringdir
 11248  042F  00F4               	movwf	___llmod@divisor+1
 11249  0430  160A  118A  200A  120A  118A  	fcall	stringdir
 11250  0435  00F5               	movwf	___llmod@divisor+2
 11251  0436  160A  118A  200A  120A  118A  	fcall	stringdir
 11252  043B  00F6               	movwf	___llmod@divisor+3
 11253  043C  1683               	bsf	3,5	;RP0=1, select bank1
 11254  043D  1303               	bcf	3,6	;RP1=0, select bank1
 11255  043E  083D               	movf	(sprintf@val+3)^(0+128),w
 11256  043F  00FA               	movwf	___llmod@dividend+3
 11257  0440  083C               	movf	(sprintf@val+2)^(0+128),w
 11258  0441  00F9               	movwf	___llmod@dividend+2
 11259  0442  083B               	movf	(sprintf@val+1)^(0+128),w
 11260  0443  00F8               	movwf	___llmod@dividend+1
 11261  0444  083A               	movf	sprintf@val^(0+128),w
 11262  0445  00F7               	movwf	___llmod@dividend
 11263  0446  160A  158A  24A4  120A  118A  	fcall	___llmod
 11264  044B  0876               	movf	?___llmod+3,w
 11265  044C  1683               	bsf	3,5	;RP0=1, select bank1
 11266  044D  1303               	bcf	3,6	;RP1=0, select bank1
 11267  044E  00BD               	movwf	(sprintf@val+3)^(0+128)
 11268  044F  0875               	movf	?___llmod+2,w
 11269  0450  00BC               	movwf	(sprintf@val+2)^(0+128)
 11270  0451  0874               	movf	?___llmod+1,w
 11271  0452  00BB               	movwf	(sprintf@val+1)^(0+128)
 11272  0453  0873               	movf	?___llmod,w
 11273  0454  00BA               	movwf	sprintf@val^(0+128)
 11274  0455                     l3515:
 11275                           
 11276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11277  0455  3001               	movlw	1
 11278  0456  02CF               	subwf	sprintf@c^(0+128),f
 11279  0457  0A4F               	incf	sprintf@c^(0+128),w
 11280  0458  1D03               	btfss	3,2
 11281  0459  2C5B               	goto	u5651
 11282  045A  2C5C               	goto	u5650
 11283  045B                     u5651:
 11284  045B  2BA4               	goto	l3507
 11285  045C                     u5650:
 11286  045C  2C76               	goto	l3523
 11287  045D                     l3517:
 11288                           
 11289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11290  045D  3030               	movlw	48
 11291  045E  1283               	bcf	3,5	;RP0=0, select bank0
 11292  045F  1303               	bcf	3,6	;RP1=0, select bank0
 11293  0460  00EA               	movwf	??_sprintf
 11294  0461  1683               	bsf	3,5	;RP0=1, select bank1
 11295  0462  1303               	bcf	3,6	;RP1=0, select bank1
 11296  0463  084C               	movf	sprintf@sp^(0+128),w
 11297  0464  0084               	movwf	4
 11298  0465  1283               	bcf	3,5	;RP0=0, select bank0
 11299  0466  1303               	bcf	3,6	;RP1=0, select bank0
 11300  0467  086A               	movf	??_sprintf,w
 11301  0468  1383               	bcf	3,7	;select IRP bank0
 11302  0469  0080               	movwf	0
 11303  046A                     l3519:
 11304  046A  3001               	movlw	1
 11305  046B  00EA               	movwf	??_sprintf
 11306  046C  086A               	movf	??_sprintf,w
 11307  046D  1683               	bsf	3,5	;RP0=1, select bank1
 11308  046E  1303               	bcf	3,6	;RP1=0, select bank1
 11309  046F  07CC               	addwf	sprintf@sp^(0+128),f
 11310  0470                     l3521:
 11311                           
 11312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11313  0470  30FF               	movlw	255
 11314  0471  07CD               	addwf	sprintf@prec^(0+128),f
 11315  0472  1803               	skipnc
 11316  0473  0ACE               	incf	(sprintf@prec+1)^(0+128),f
 11317  0474  30FF               	movlw	255
 11318  0475  07CE               	addwf	(sprintf@prec+1)^(0+128),f
 11319  0476                     l3523:
 11320                           
 11321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11322  0476  084D               	movf	sprintf@prec^(0+128),w
 11323  0477  044E               	iorwf	(sprintf@prec+1)^(0+128),w
 11324  0478  1D03               	btfss	3,2
 11325  0479  2C7B               	goto	u5661
 11326  047A  2C7C               	goto	u5660
 11327  047B                     u5661:
 11328  047B  2C5D               	goto	l3517
 11329  047C                     u5660:
 11330  047C  2D80               	goto	l3571
 11331  047D                     l3525:
 11332                           
 11333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 11334  047D  1683               	bsf	3,5	;RP0=1, select bank1
 11335  047E  1303               	bcf	3,6	;RP1=0, select bank1
 11336  047F  084D               	movf	sprintf@prec^(0+128),w
 11337  0480  044E               	iorwf	(sprintf@prec+1)^(0+128),w
 11338  0481  1D03               	btfss	3,2
 11339  0482  2C84               	goto	u5671
 11340  0483  2C85               	goto	u5670
 11341  0484                     u5671:
 11342  0484  2C93               	goto	l405
 11343  0485                     u5670:
 11344  0485                     l3527:
 11345  0485  083D               	movf	(sprintf@val+3)^(0+128),w
 11346  0486  043C               	iorwf	(sprintf@val+2)^(0+128),w
 11347  0487  043B               	iorwf	(sprintf@val+1)^(0+128),w
 11348  0488  043A               	iorwf	sprintf@val^(0+128),w
 11349  0489  1D03               	skipz
 11350  048A  2C8C               	goto	u5681
 11351  048B  2C8D               	goto	u5680
 11352  048C                     u5681:
 11353  048C  2C93               	goto	l405
 11354  048D                     u5680:
 11355  048D                     l3529:
 11356                           
 11357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11358  048D  3001               	movlw	1
 11359  048E  07CD               	addwf	sprintf@prec^(0+128),f
 11360  048F  1803               	skipnc
 11361  0490  0ACE               	incf	(sprintf@prec+1)^(0+128),f
 11362  0491  3000               	movlw	0
 11363  0492  07CE               	addwf	(sprintf@prec+1)^(0+128),f
 11364  0493                     l405:
 11365                           
 11366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11367  0493  084E               	movf	(sprintf@prec+1)^(0+128),w
 11368  0494  3A80               	xorlw	128
 11369  0495  3C80               	sublw	128
 11370  0496  1D03               	skipz
 11371  0497  2C9A               	goto	u5695
 11372  0498  084D               	movf	sprintf@prec^(0+128),w
 11373  0499  024F               	subwf	sprintf@c^(0+128),w
 11374  049A                     u5695:
 11375  049A  1803               	skipnc
 11376  049B  2C9D               	goto	u5691
 11377  049C  2C9E               	goto	u5690
 11378  049D                     u5691:
 11379  049D  2CA9               	goto	l3533
 11380  049E                     u5690:
 11381  049E                     l3531:
 11382                           
 11383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11384  049E  1683               	bsf	3,5	;RP0=1, select bank1
 11385  049F  1303               	bcf	3,6	;RP1=0, select bank1
 11386  04A0  084D               	movf	sprintf@prec^(0+128),w
 11387  04A1  1283               	bcf	3,5	;RP0=0, select bank0
 11388  04A2  1303               	bcf	3,6	;RP1=0, select bank0
 11389  04A3  00EA               	movwf	??_sprintf
 11390  04A4  086A               	movf	??_sprintf,w
 11391  04A5  1683               	bsf	3,5	;RP0=1, select bank1
 11392  04A6  1303               	bcf	3,6	;RP1=0, select bank1
 11393  04A7  00CF               	movwf	sprintf@c^(0+128)
 11394  04A8  2CCD               	goto	l3537
 11395  04A9                     l3533:
 11396  04A9  1683               	bsf	3,5	;RP0=1, select bank1
 11397  04AA  1303               	bcf	3,6	;RP1=0, select bank1
 11398  04AB  084E               	movf	(sprintf@prec+1)^(0+128),w
 11399  04AC  3A80               	xorlw	128
 11400  04AD  1283               	bcf	3,5	;RP0=0, select bank0
 11401  04AE  1303               	bcf	3,6	;RP1=0, select bank0
 11402  04AF  00EA               	movwf	??_sprintf
 11403  04B0  3080               	movlw	128
 11404  04B1  026A               	subwf	??_sprintf,w
 11405  04B2  1D03               	skipz
 11406  04B3  2CB8               	goto	u5705
 11407  04B4  1683               	bsf	3,5	;RP0=1, select bank1
 11408  04B5  1303               	bcf	3,6	;RP1=0, select bank1
 11409  04B6  084F               	movf	sprintf@c^(0+128),w
 11410  04B7  024D               	subwf	sprintf@prec^(0+128),w
 11411  04B8                     u5705:
 11412  04B8  1803               	skipnc
 11413  04B9  2CBB               	goto	u5701
 11414  04BA  2CBC               	goto	u5700
 11415  04BB                     u5701:
 11416  04BB  2CCD               	goto	l3537
 11417  04BC                     u5700:
 11418  04BC                     l3535:
 11419                           
 11420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11421  04BC  1683               	bsf	3,5	;RP0=1, select bank1
 11422  04BD  1303               	bcf	3,6	;RP1=0, select bank1
 11423  04BE  084F               	movf	sprintf@c^(0+128),w
 11424  04BF  1283               	bcf	3,5	;RP0=0, select bank0
 11425  04C0  1303               	bcf	3,6	;RP1=0, select bank0
 11426  04C1  00EA               	movwf	??_sprintf
 11427  04C2  01EB               	clrf	??_sprintf+1
 11428  04C3  086A               	movf	??_sprintf,w
 11429  04C4  1683               	bsf	3,5	;RP0=1, select bank1
 11430  04C5  1303               	bcf	3,6	;RP1=0, select bank1
 11431  04C6  00CD               	movwf	sprintf@prec^(0+128)
 11432  04C7  1283               	bcf	3,5	;RP0=0, select bank0
 11433  04C8  1303               	bcf	3,6	;RP1=0, select bank0
 11434  04C9  086B               	movf	??_sprintf+1,w
 11435  04CA  1683               	bsf	3,5	;RP0=1, select bank1
 11436  04CB  1303               	bcf	3,6	;RP1=0, select bank1
 11437  04CC  00CE               	movwf	(sprintf@prec+1)^(0+128)
 11438  04CD                     l3537:
 11439                           
 11440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11441  04CD  1683               	bsf	3,5	;RP0=1, select bank1
 11442  04CE  1303               	bcf	3,6	;RP1=0, select bank1
 11443  04CF  0840               	movf	sprintf@width^(0+128),w
 11444  04D0  0441               	iorwf	(sprintf@width+1)^(0+128),w
 11445  04D1  1903               	btfsc	3,2
 11446  04D2  2CD4               	goto	u5711
 11447  04D3  2CD5               	goto	u5710
 11448  04D4                     u5711:
 11449  04D4  2CEF               	goto	l3543
 11450  04D5                     u5710:
 11451  04D5                     l3539:
 11452  04D5  3003               	movlw	3
 11453  04D6  053E               	andwf	sprintf@flag^(0+128),w
 11454  04D7  1283               	bcf	3,5	;RP0=0, select bank0
 11455  04D8  1303               	bcf	3,6	;RP1=0, select bank0
 11456  04D9  00EA               	movwf	??_sprintf
 11457  04DA  3000               	movlw	0
 11458  04DB  1683               	bsf	3,5	;RP0=1, select bank1
 11459  04DC  1303               	bcf	3,6	;RP1=0, select bank1
 11460  04DD  053F               	andwf	(sprintf@flag+1)^(0+128),w
 11461  04DE  1283               	bcf	3,5	;RP0=0, select bank0
 11462  04DF  1303               	bcf	3,6	;RP1=0, select bank0
 11463  04E0  00EB               	movwf	??_sprintf+1
 11464  04E1  086A               	movf	??_sprintf,w
 11465  04E2  046B               	iorwf	??_sprintf+1,w
 11466  04E3  1903               	btfsc	3,2
 11467  04E4  2CE6               	goto	u5721
 11468  04E5  2CE7               	goto	u5720
 11469  04E6                     u5721:
 11470  04E6  2CEF               	goto	l3543
 11471  04E7                     u5720:
 11472  04E7                     l3541:
 11473                           
 11474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11475  04E7  30FF               	movlw	255
 11476  04E8  1683               	bsf	3,5	;RP0=1, select bank1
 11477  04E9  1303               	bcf	3,6	;RP1=0, select bank1
 11478  04EA  07C0               	addwf	sprintf@width^(0+128),f
 11479  04EB  1803               	skipnc
 11480  04EC  0AC1               	incf	(sprintf@width+1)^(0+128),f
 11481  04ED  30FF               	movlw	255
 11482  04EE  07C1               	addwf	(sprintf@width+1)^(0+128),f
 11483  04EF                     l3543:
 11484                           
 11485                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11486  04EF  1683               	bsf	3,5	;RP0=1, select bank1
 11487  04F0  1303               	bcf	3,6	;RP1=0, select bank1
 11488  04F1  1F3F               	btfss	(sprintf@flag+1)^(0+128),6
 11489  04F2  2CF4               	goto	u5731
 11490  04F3  2CF5               	goto	u5730
 11491  04F4                     u5731:
 11492  04F4  2D18               	goto	l3551
 11493  04F5                     u5730:
 11494  04F5                     l3545:
 11495                           
 11496                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11497  04F5  084E               	movf	(sprintf@prec+1)^(0+128),w
 11498  04F6  3A80               	xorlw	128
 11499  04F7  1283               	bcf	3,5	;RP0=0, select bank0
 11500  04F8  1303               	bcf	3,6	;RP1=0, select bank0
 11501  04F9  00EA               	movwf	??_sprintf
 11502  04FA  1683               	bsf	3,5	;RP0=1, select bank1
 11503  04FB  1303               	bcf	3,6	;RP1=0, select bank1
 11504  04FC  0841               	movf	(sprintf@width+1)^(0+128),w
 11505  04FD  3A80               	xorlw	128
 11506  04FE  1283               	bcf	3,5	;RP0=0, select bank0
 11507  04FF  1303               	bcf	3,6	;RP1=0, select bank0
 11508  0500  026A               	subwf	??_sprintf,w
 11509  0501  1D03               	skipz
 11510  0502  2D07               	goto	u5745
 11511  0503  1683               	bsf	3,5	;RP0=1, select bank1
 11512  0504  1303               	bcf	3,6	;RP1=0, select bank1
 11513  0505  0840               	movf	sprintf@width^(0+128),w
 11514  0506  024D               	subwf	sprintf@prec^(0+128),w
 11515  0507                     u5745:
 11516  0507  1803               	skipnc
 11517  0508  2D0A               	goto	u5741
 11518  0509  2D0B               	goto	u5740
 11519  050A                     u5741:
 11520  050A  2D14               	goto	l3549
 11521  050B                     u5740:
 11522  050B                     l3547:
 11523                           
 11524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11525  050B  1683               	bsf	3,5	;RP0=1, select bank1
 11526  050C  1303               	bcf	3,6	;RP1=0, select bank1
 11527  050D  084D               	movf	sprintf@prec^(0+128),w
 11528  050E  02C0               	subwf	sprintf@width^(0+128),f
 11529  050F  084E               	movf	(sprintf@prec+1)^(0+128),w
 11530  0510  1C03               	skipc
 11531  0511  03C1               	decf	(sprintf@width+1)^(0+128),f
 11532  0512  02C1               	subwf	(sprintf@width+1)^(0+128),f
 11533  0513  2D18               	goto	l3551
 11534  0514                     l3549:
 11535                           
 11536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11537  0514  1683               	bsf	3,5	;RP0=1, select bank1
 11538  0515  1303               	bcf	3,6	;RP1=0, select bank1
 11539  0516  01C0               	clrf	sprintf@width^(0+128)
 11540  0517  01C1               	clrf	(sprintf@width+1)^(0+128)
 11541  0518                     l3551:
 11542                           
 11543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11544  0518  0841               	movf	(sprintf@width+1)^(0+128),w
 11545  0519  3A80               	xorlw	128
 11546  051A  3C80               	sublw	128
 11547  051B  1D03               	skipz
 11548  051C  2D1F               	goto	u5755
 11549  051D  0840               	movf	sprintf@width^(0+128),w
 11550  051E  024F               	subwf	sprintf@c^(0+128),w
 11551  051F                     u5755:
 11552  051F  1803               	skipnc
 11553  0520  2D22               	goto	u5751
 11554  0521  2D23               	goto	u5750
 11555  0522                     u5751:
 11556  0522  2D37               	goto	l3555
 11557  0523                     u5750:
 11558  0523                     l3553:
 11559                           
 11560                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11561  0523  1683               	bsf	3,5	;RP0=1, select bank1
 11562  0524  1303               	bcf	3,6	;RP1=0, select bank1
 11563  0525  084F               	movf	sprintf@c^(0+128),w
 11564  0526  1283               	bcf	3,5	;RP0=0, select bank0
 11565  0527  1303               	bcf	3,6	;RP1=0, select bank0
 11566  0528  00EA               	movwf	??_sprintf
 11567  0529  01EB               	clrf	??_sprintf+1
 11568  052A  086A               	movf	??_sprintf,w
 11569  052B  1683               	bsf	3,5	;RP0=1, select bank1
 11570  052C  1303               	bcf	3,6	;RP1=0, select bank1
 11571  052D  02C0               	subwf	sprintf@width^(0+128),f
 11572  052E  1283               	bcf	3,5	;RP0=0, select bank0
 11573  052F  1303               	bcf	3,6	;RP1=0, select bank0
 11574  0530  086B               	movf	??_sprintf+1,w
 11575  0531  1683               	bsf	3,5	;RP0=1, select bank1
 11576  0532  1303               	bcf	3,6	;RP1=0, select bank1
 11577  0533  1C03               	skipc
 11578  0534  03C1               	decf	(sprintf@width+1)^(0+128),f
 11579  0535  02C1               	subwf	(sprintf@width+1)^(0+128),f
 11580  0536  2D3B               	goto	l3557
 11581  0537                     l3555:
 11582                           
 11583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11584  0537  1683               	bsf	3,5	;RP0=1, select bank1
 11585  0538  1303               	bcf	3,6	;RP1=0, select bank1
 11586  0539  01C0               	clrf	sprintf@width^(0+128)
 11587  053A  01C1               	clrf	(sprintf@width+1)^(0+128)
 11588  053B                     l3557:
 11589                           
 11590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11591  053B  0840               	movf	sprintf@width^(0+128),w
 11592  053C  0441               	iorwf	(sprintf@width+1)^(0+128),w
 11593  053D  1903               	btfsc	3,2
 11594  053E  2D40               	goto	u5761
 11595  053F  2D41               	goto	u5760
 11596  0540                     u5761:
 11597  0540  2D60               	goto	l3565
 11598  0541                     u5760:
 11599  0541                     l3559:
 11600                           
 11601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11602  0541  3020               	movlw	32
 11603  0542  1283               	bcf	3,5	;RP0=0, select bank0
 11604  0543  1303               	bcf	3,6	;RP1=0, select bank0
 11605  0544  00EA               	movwf	??_sprintf
 11606  0545  1683               	bsf	3,5	;RP0=1, select bank1
 11607  0546  1303               	bcf	3,6	;RP1=0, select bank1
 11608  0547  084C               	movf	sprintf@sp^(0+128),w
 11609  0548  0084               	movwf	4
 11610  0549  1283               	bcf	3,5	;RP0=0, select bank0
 11611  054A  1303               	bcf	3,6	;RP1=0, select bank0
 11612  054B  086A               	movf	??_sprintf,w
 11613  054C  1383               	bcf	3,7	;select IRP bank0
 11614  054D  0080               	movwf	0
 11615  054E                     l3561:
 11616  054E  3001               	movlw	1
 11617  054F  00EA               	movwf	??_sprintf
 11618  0550  086A               	movf	??_sprintf,w
 11619  0551  1683               	bsf	3,5	;RP0=1, select bank1
 11620  0552  1303               	bcf	3,6	;RP1=0, select bank1
 11621  0553  07CC               	addwf	sprintf@sp^(0+128),f
 11622  0554                     l3563:
 11623  0554  30FF               	movlw	255
 11624  0555  07C0               	addwf	sprintf@width^(0+128),f
 11625  0556  1803               	skipnc
 11626  0557  0AC1               	incf	(sprintf@width+1)^(0+128),f
 11627  0558  30FF               	movlw	255
 11628  0559  07C1               	addwf	(sprintf@width+1)^(0+128),f
 11629  055A  0840               	movf	sprintf@width^(0+128),w
 11630  055B  0441               	iorwf	(sprintf@width+1)^(0+128),w
 11631  055C  1D03               	btfss	3,2
 11632  055D  2D5F               	goto	u5771
 11633  055E  2D60               	goto	u5770
 11634  055F                     u5771:
 11635  055F  2D41               	goto	l3559
 11636  0560                     u5770:
 11637  0560                     l3565:
 11638                           
 11639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11640  0560  3003               	movlw	3
 11641  0561  053E               	andwf	sprintf@flag^(0+128),w
 11642  0562  1283               	bcf	3,5	;RP0=0, select bank0
 11643  0563  1303               	bcf	3,6	;RP1=0, select bank0
 11644  0564  00EA               	movwf	??_sprintf
 11645  0565  3000               	movlw	0
 11646  0566  1683               	bsf	3,5	;RP0=1, select bank1
 11647  0567  1303               	bcf	3,6	;RP1=0, select bank1
 11648  0568  053F               	andwf	(sprintf@flag+1)^(0+128),w
 11649  0569  1283               	bcf	3,5	;RP0=0, select bank0
 11650  056A  1303               	bcf	3,6	;RP1=0, select bank0
 11651  056B  00EB               	movwf	??_sprintf+1
 11652  056C  086A               	movf	??_sprintf,w
 11653  056D  046B               	iorwf	??_sprintf+1,w
 11654  056E  1903               	btfsc	3,2
 11655  056F  2D71               	goto	u5781
 11656  0570  2D72               	goto	u5780
 11657  0571                     u5781:
 11658  0571  2D80               	goto	l3571
 11659  0572                     u5780:
 11660  0572                     l3567:
 11661                           
 11662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11663  0572  302D               	movlw	45
 11664  0573  00EA               	movwf	??_sprintf
 11665  0574  1683               	bsf	3,5	;RP0=1, select bank1
 11666  0575  1303               	bcf	3,6	;RP1=0, select bank1
 11667  0576  084C               	movf	sprintf@sp^(0+128),w
 11668  0577  0084               	movwf	4
 11669  0578  1283               	bcf	3,5	;RP0=0, select bank0
 11670  0579  1303               	bcf	3,6	;RP1=0, select bank0
 11671  057A  086A               	movf	??_sprintf,w
 11672  057B  1383               	bcf	3,7	;select IRP bank0
 11673  057C  0080               	movwf	0
 11674  057D  160A  118A  2D1D   	goto	l3327
 11675  0580                     l3571:
 11676                           
 11677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11678  0580  3001               	movlw	1
 11679  0581  1683               	bsf	3,5	;RP0=1, select bank1
 11680  0582  1303               	bcf	3,6	;RP1=0, select bank1
 11681  0583  07A8               	addwf	sprintf@f^(0+128),f
 11682  0584  30FF               	movlw	-1
 11683  0585  0728               	addwf	sprintf@f^(0+128),w
 11684  0586  0084               	movwf	4
 11685  0587  160A  118A  200A  120A  118A  	fcall	stringdir
 11686  058C  1283               	bcf	3,5	;RP0=0, select bank0
 11687  058D  1303               	bcf	3,6	;RP1=0, select bank0
 11688  058E  00EA               	movwf	??_sprintf
 11689  058F  086A               	movf	??_sprintf,w
 11690  0590  1683               	bsf	3,5	;RP0=1, select bank1
 11691  0591  1303               	bcf	3,6	;RP1=0, select bank1
 11692  0592  00CF               	movwf	sprintf@c^(0+128)
 11693  0593  084F               	movf	sprintf@c^(0+128),w
 11694  0594  1D03               	btfss	3,2
 11695  0595  2D97               	goto	u5791
 11696  0596  2D9A               	goto	u5790
 11697  0597                     u5791:
 11698  0597  160A  118A  2D0A   	goto	l3323
 11699  059A                     u5790:
 11700  059A                     l3573:
 11701                           
 11702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11703  059A  1683               	bsf	3,5	;RP0=1, select bank1
 11704  059B  1303               	bcf	3,6	;RP1=0, select bank1
 11705  059C  084C               	movf	sprintf@sp^(0+128),w
 11706  059D  0084               	movwf	4
 11707  059E  1383               	bcf	3,7	;select IRP bank0
 11708  059F  0180               	clrf	0
 11709  05A0                     l420:
 11710  05A0  0008               	return
 11711  05A1                     __end_of_sprintf:

Data Sizes:
    Strings     39
    Constant    144
    Data        0
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     79      79
    BANK1            80     51      76
    BANK3            96      0      10
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 18
		 -> f1(BANK1[10]), STR_1(CODE[18]), 

    send_crct@st	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK1[10]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _sprintf->___awdiv
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flsub->___xxtofl
    _send_crct->_send_char
    _conv->___xxtofl
    ___flmul->___awdiv
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    _isr->_int_adc
    _isr->_int_uart

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conv->___flmul
    ___flmul->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   38485
                                             48 BANK1      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _cfg_adc
                            _cfg_clk
                           _cfg_inte
                             _cfg_io
                          _cfg_usart
                               _conv
                          _send_crct
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    37     13   31704
                                             74 BANK0      5     5      0
                                              8 BANK1     40    27     13
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              3 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _send_crct                                            4     4      0     145
                                              4 COMMON     4     4      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conv                                                13     9      4    5140
                                             34 BANK0     13     9      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              3 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _cfg_usart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_io                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_inte                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_adc                                              1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     440
                                              6 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     484
                                              7 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0     374
                                              7 COMMON     3     3      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              1 COMMON     2     2      0
                            _int_adc
                           _int_uart
 ---------------------------------------------------------------------------------
 (6) _int_uart                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _int_adc                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _cfg_adc
   _cfg_clk
   _cfg_inte
   _cfg_io
   _cfg_usart
   _conv
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _send_crct
     _send_char
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _isr (ROOT)
   _int_adc
   _int_uart

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      B0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     33      4C       7       95.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       A       9       10.4%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      B0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 27 12:31:23 2021

                        pc 0002                         _V1 00E1                         _V2 00E0  
                       _V3 00DF                         _f1 00E2                         _f2 0190  
             ___awdiv@sign 0025                         fsr 0004        ___wmul@multiplicand 0075  
      __Umul8_16@word_mpld 0022                        l211 1A29                        l131 197D  
                      l205 1AC5                        l125 19C9                        l134 19DE  
                      l143 1AA1                        l208 1C53                        l128 19F4  
                      l152 1B7D                        l217 1BC3                        l137 198F  
                      l146 1991                        l330 07AD                        l180 1B13  
                      l420 05A0                        l181 1B19                        l149 1999  
                      l405 0493                        l190 1B36                        l182 1B1A  
                      l191 1B3C                        l183 1B20                        l184 1B21  
                      l424 10E0                        l193 1B3D                        l185 1B27  
                      l177 1B09                        l337 0FFF                        l186 1B28  
                      l178 1B0C                        l610 1C72                        l426 10F8  
                      l187 1B2E                        l179 1B12                        l611 1C8E  
                      l188 1B2F                        l196 1A0E                        l612 1CA3  
                      l460 1DBA                        l189 1B35                        l605 1266  
                      l390 02B0                        l199 10D3                        l615 1EBE  
                      l623 19A4                        l359 15EB                        l641 11B5  
                      l618 1F2A                        l634 1E8A                        l642 1127  
                      l730 1C09                        l619 1F43                        l627 1E9F  
                      l652 11A8                        l740 1AFF                        l637 1E9F  
                      l645 1178                        l397 0302                        l590 1D52  
                      l751 12D7                        l911 19B6                        l904 1FC9  
                      l680 1CF9                        l905 1FD5                        l577 1E23  
                      l594 1273                        l755 137E                        l595 11D8  
                      l772 1449                        l764 14FB                        l853 0C08  
                      l757 1355                        l782 148F                        l598 1236  
                      l847 0C9C                        l776 146D                        l793 14EF  
                      l785 14CD                        l866 081C                        l794 14FB  
                      l859 0C90                        l891 1F68                        l868 082E  
                      l893 1FFF                        l797 07FD                        l897 1FAD  
                      _RC1 0039                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      _v11 00DB                        _v22 00D7                        _v33 00D3  
                      _isr 1A46                        fsr0 0004                        indf 0000  
             ___awmod@sign 0079               ___flmul@aexp 003A               ___flmul@bexp 003B  
             ___flmul@sign 0035               ___flmul@temp 0040               ___flmul@prod 003C  
             ___fltol@exp1 005F                       l3001 11F4                       l3011 1227  
                     l3003 11FD                       l3101 1F42                       l3021 1242  
                     l3013 1230                       l3005 1206                       l3031 126B  
                     l3015 123A                       l3023 1254                       l3007 1218  
                     l3201 1FBF                       l3105 199A                       l3121 1E4F  
                     l3113 1E24                       l3041 10E7                       l3009 1226  
                     l2401 1E07                       l3211 1FF2                       l3203 1FC3  
                     l3107 19A2                       l3123 1E50                       l3115 1E31  
                     l3051 1D65                       l3043 10EE                       l3035 10D4  
                     l2411 1E1F                       l2403 1E08                       l3301 1AB4  
                     l2341 080B                       l3213 1FF6                       l3205 1FCD  
                     l3109 19A4                       l2501 1274                       l3125 1E58  
                     l3061 1D94                       l3053 1D68                       l3045 10F4  
                     l3037 10D6                       l3029 125B                       l2405 1E0F  
                     l2421 1D04                       l3303 1ABA                       l3311 1B9F  
                     l2343 0812                       l3215 1FF7                       l3207 1FD7  
                     l2511 128B                       l2503 127B                       l3143 1E7F  
                     l3135 1E66                       l3127 1E5A                       l3119 1E3A  
                     l3063 1DA2                       l3055 1D75                       l3151 1CAC  
                     l3039 10DA                       l2407 1E15                       l2431 1D18  
                     l2423 1D06                       l2415 1CFA                       l2361 1B1E  
                     l2353 1B01                       l3305 1ABF                       l3313 1BA7  
                     l3241 19BA                       l2345 0816                       l3209 1FED  
                     l3081 1CA2                       l3073 1C54                       l2601 1387  
                     l2521 12A3                       l2513 1290                       l2505 1281  
                     l3145 1E8F                       l3129 1E5E                       l3137 1E78  
                     l3065 1DA3                       l3057 1D79                       l3049 1D53  
                     l3161 1CE2                       l3153 1CB1                       l2409 1E1A  
                     l2441 1D37                       l2433 1D1F                       l2425 1D0A  
                     l2417 1CFB                       l3401 1704                       l3321 14FF  
                     l2363 1B25                       l2355 1B05                       l3307 1B7E  
                     l3251 19C6                       l3243 19BC                       l2347 0825  
                     l2339 0809                       l3315 1B41                       l3075 1C6A  
                     l3091 1EDA                       l2611 13AF                       l2531 12B9  
                     l2523 12A8                       l2515 1298                       l2507 1285  
                     l3171 07B2                       l3147 1E94                       l3067 1DAC  
                     l3059 1D82                       l3163 1CEB                       l3155 1CBE  
                     l2371 1DBB                       l2443 1D3E                       l2435 1D23  
                     l2427 1D0F                       l2419 1CFF                       l3403 174F  
                     l3411 1794                       l3331 1528                       l3323 150A  
                     l2365 1B2C                       l2357 1B10                       l3309 1B83  
                     l3261 19DF                       l3245 19C0                       l2349 082A  
                     l2701 094D                       l3181 1F60                       l3317 1B75  
                     l3077 1C86                       l3093 1EDE                       l3085 1EA0  
                     l2621 13C8                       l2613 13B8                       l2605 1390  
                     l2541 12CD                       l2533 12BA                       l2525 12AE  
                     l2517 1299                       l2509 1286                       l3069 1DB2  
                     l3157 1CC2                       l3165 1CF1                       l3149 1CA4  
                     l2461 1BD8                       l2453 1BC4                       l2381 1DCD  
                     l2373 1DBE                       l2437 1D27                       l2429 1D15  
                     l2445 1D44                       l3501 0325                       l3421 0067  
                     l3413 17A3                       l3405 1768                       l3341 1574  
                     l3333 1538                       l3325 1510                       l2367 1B33  
                     l2359 1B17                       l3263 19E8                       l3255 1976  
                     l3247 19C1                       l3239 19B7                       l3271 19D1  
                     l2711 0962                       l2703 094E                       l3191 1F8B  
                     l3183 1F70                       l3175 1F47                       l3079 1CA0  
                     l3095 1F02                       l3087 1EB6                       l2631 142C  
                     l2615 13BA                       l2607 13A7                       l2623 13CD  
                     l2551 12E9                       l2535 12BF                       l2543 12CF  
                     l2527 12AF                       l2519 129B                       l3159 1CD4  
                     l2471 1BF8                       l2463 1BDC                       l2455 1BC8  
                     l2391 1DE1                       l2383 1DD2                       l2375 1DC2  
                     l2447 1D49                       l2439 1D31                       l3511 0402  
                     l3503 032B                       l3431 00C0                       l3423 0076  
                     l3415 17EA                       l3407 1771                       l3351 159E  
                     l3335 153C                       l3343 1584                       l3327 151D  
                     l2369 1B3A                       l3265 19EC                       l3257 197C  
                     l3249 19C4                       l3281 19DB                       l3273 19D5  
                     l2721 097A                       l2713 096A                       l2705 0953  
                     l3193 1F92                       l3177 1F4C                       l3097 1F06  
                     l3089 1ED2                       l2641 145F                       l2625 13E3  
                     l2633 143B                       l2617 13BE                       l2609 13AB  
                     l2561 12FD                       l2553 12ED                       l2545 12DD  
                     l2537 12C4                       l2529 12B5                       l3169 07AE  
                     l2473 1BFF                       l2465 1BE0                       l2457 1BCE  
                     l2481 1ACC                       l2393 1DE8                       l2385 1DD6  
                     l2377 1DC7                       l2449 1D4E                       l3521 0470  
                     l3513 0416                       l3505 0349                       l3441 014C  
                     l3425 0091                       l3417 0025                       l3409 178C  
                     l3361 15E9                       l3353 15B3                       l3345 1592  
                     l3337 1551                       l3329 1524                       l3601 0839  
                     l3291 1C2E                       l3283 1C0A                       l3267 19F1  
                     l3259 1986                       l3275 19D6                       l2811 0C3D  
                     l2803 0C0D                       l2731 0996                       l2723 097F  
                     l2715 096F                       l2707 0958                       l3195 1F96  
                     l3187 1F79                       l3179 1F50                       l3099 1F40  
                     l2651 1476                       l2643 1468                       l2635 1451  
                     l2627 1421                       l2619 13BF                       l2571 1311  
                     l2563 1301                       l2555 12F1                       l2547 12E1  
                     l2539 12CC                       l2467 1BF1                       l2459 1BD1  
                     l2475 1C05                       l2491 1AE8                       l2483 1ACF  
                     l2395 1DEC                       l2387 1DD8                       l2379 1DC9  
                     l3531 049E                       l3523 0476                       l3507 03A4  
                     l3515 0455                       l3443 014E                       l3435 00DF  
                     l3427 009A                       l3419 0040                       l3371 1627  
                     l3355 15CE                       l3347 1593                       l3339 156C  
                     l3611 0850                       l3603 083E                       l3293 10C7  
                     l3285 1C10                       l3277 19D9                       l3269 19CA  
                     l2821 0C74                       l2805 0C12                       l2813 0C43  
                     l2741 09B9                       l2733 099B                       l2725 0984  
                     l2717 0975                       l2709 0960                       l3197 1FA4  
                     l3189 1F7E                       l2661 1486                       l2653 147B  
                     l2645 146C                       l2637 1456                       l2629 1427  
                     l2581 1322                       l2573 1315                       l2565 1305  
                     l2557 12F5                       l2549 12E5                       l2469 1BF7  
                     l2493 1AEE                       l2485 1AD6                       l2397 1DF0  
                     l2389 1DDE                       l2901 0E53                       l3541 04E7  
                     l3533 04A9                       l3517 045D                       l3509 03E3  
                     l3461 01EC                       l3453 0197                       l3429 00A2  
                     l3437 00E8                       l3381 1673                       l3373 162B  
                     l3525 047D                       l3365 15EF                       l3357 15D6  
                     l3349 159B                       l3621 08A4                       l3613 0855  
                     l3605 0843                       l3287 1C19                       l3295 1AA3  
                     l3279 19DA                       l2831 0C94                       l2823 0C76  
                     l2815 0C50                       l2807 0C20                       l2751 0A47  
                     l2743 09C6                       l2735 09A0                       l2727 098C  
                     l2719 0979                       l3199 1FB4                       l2671 14A7  
                     l2663 148C                       l2647 1471                       l2655 147D  
                     l2591 1368                       l2583 1339                       l2575 1319  
                     l2567 1309                       l2559 12F9                       l2495 1AF5  
                     l2487 1ADA                       l2479 1AC6                       l2399 1E01  
                     l2911 0F4B                       l2903 0E5A                       l3551 0518  
                     l3543 04EF                       l3535 04BC                       l3527 0485  
                     l3519 046A                       l3471 0218                       l3463 01F5  
                     l3455 01A5                       l3439 011D                       l3391 16A5  
                     l3383 1677                       l3375 1639                       l3367 160D  
                     l3359 15E7                       l3631 08FB                       l3623 08C2  
                     l3615 085D                       l3607 0848                       l2841 19F9  
                     l3289 1C28                       l3297 1AA8                       l2825 0C84  
                     l2817 0C5B                       l2809 0C24                       l2761 0AA9  
                     l2753 0A63                       l2745 09E3                       l2729 098E  
                     l2681 14DF                       l2673 14AB                       l2649 1474  
                     l2657 1481                       l2593 1369                       l2585 1359  
                     l2577 131D                       l2569 130D                       l2489 1ADE  
                     l2497 1AFB                       l2921 19A7                       l3561 054E  
                     l3553 0523                       l3545 04F5                       l3537 04CD  
                     l3529 048D                       l3481 029C                       l3473 022C  
                     l3465 0202                       l3457 01D4                       l3449 0150  
                     l3393 16B8                       l3385 167B                       l3377 1641  
                     l3369 1621                       l3641 0928                       l3633 0901  
                     l3625 08CA                       l3617 0866                       l3609 084D  
                     l2843 19FF                       l3299 1AAD                       l2851 1A13  
                     l2827 0C88                       l2819 0C6A                       l2771 0B39  
                     l2763 0AC6                       l2755 0A6C                       l2747 09FF  
                     l2739 09A9                       l2835 1991                       l2691 14F6  
                     l2683 14E4                       l2675 14C9                       l2667 1494  
                     l2659 1482                       l2595 1372                       l2587 1362  
                     l2579 1321                       l2931 10F9                       l2923 19AD  
                     l2915 0FD3                       l3563 0554                       l3555 0537  
                     l3547 050B                       l3539 04D5                       l3491 02E0  
                     l3483 02BA                       l3475 0237                       l3459 01DA  
                     l3395 16DB                       l3387 1694                       l3379 165A  
                     l3571 0580                       l3643 092E                       l3635 0910  
                     l3627 08EE                       l3619 0886                       l2845 1A02  
                     l2853 1A19                       l2829 0C89                       l2781 0BCB  
                     l2773 0B66                       l2765 0ADF                       l2757 0A7C  
                     l2749 0A2B                       l2837 1997                       l2693 14FA  
                     l2685 14E5                       l2677 14D2                       l2669 1499  
                     l2589 1364                       l2597 1376                       l2933 110C  
                     l2861 05A4                       l2925 19B3                       l2909 0F44  
                     l3565 0560                       l3557 053B                       l3549 0514  
                     l3493 02EF                       l3485 02C7                       l3477 023E  
                     l3469 0209                       l3397 16DF                       l3389 169F  
                     l3573 059A                       l3645 0935                       l3637 0916  
                     l3629 08F7                       l2847 1A0B                       l2839 19F6  
                     l2855 1A1C                       l2783 0BD4                       l2791 0BE8  
                     l2775 0B8C                       l2767 0AFC                       l2759 0A99  
                     l2695 093C                       l3583 1A82                       l2687 14E9  
                     l2679 14D7                       l2599 1382                       l2951 1148  
                     l2943 1128                       l2871 06BF                       l2863 05AA  
                     l2927 19B5                       l2919 19A6                       l3567 0572  
                     l3559 0541                       l3495 02F8                       l3487 02CD  
                     l3479 027D                       l3399 16E5                       l3639 0921  
                     l2857 1A21                       l2849 1A10                       l2793 0BEC  
                     l2785 0BD8                       l2777 0BB4                       l2769 0B29  
                     l2697 0943                       l3585 1A85                       l2689 14EB  
                     l2961 1172                       l2953 1151                       l2945 112E  
                     l2937 1115                       l2881 0CA4                       l3497 0313  
                     l3489 02D3                       l2859 1A24                       l2795 0BED  
                     l2787 0BD9                       l2779 0BBD                       l2699 0949  
                     l3587 1A90                       l2963 117C                       l2971 1196  
                     l2955 115F                       l2947 113D                       l2875 076A  
                     l2891 0D97                       l2883 0CA6                       l3499 0318  
                     l2797 0BF1                       l2789 0BE2                       l3589 1A96  
                     l2957 1169                       l2949 113F                       l2869 06B9  
                     l2893 0D9E                       l2885 0CAD                       l3685 1605  
                     l2799 0C05                       l2983 11B6                       l2959 116A  
                     l2879 0CA0                       l3599 082F                       l2985 11C3  
                     l2977 119D                       l2969 1184                       l2897 0E26  
                     l2995 11D9                       l2979 11AD                       l2997 11E1  
                     l2989 11CC                       l2999 11F2                       ?_isr 0070  
                     STR_1 10B5                       STR_2 10A0                       u3000 1B25  
                     u3001 1B24                       u3010 1B2C                       u3011 1B2B  
                     u3020 1B33                       u3100 1E01                       u3021 1B32  
                     u3101 1E00                       u3030 1B3A                       u3031 1B39  
                     u3120 1E15                       u3040 1DC2                       u4001 0B48  
                     u3121 1E14                       u3105 1DFD                       u3041 1DC1  
                     u4010 0B72                       u4002 0B4F                       u3130 1E1A  
                     u3050 1DCD                       u3210 1D44                       u4003 0B56  
                     u3131 1E19                       u3115 1E09                       u3051 1DCC  
                     u3211 1D43                       u4100 0BF1                       u3300 1ACC  
                     u3060 1DDE                       u3220 1D49                       u3140 1CFF  
                     u4101 0BF0                       u4021 0B7E                       u3301 1ACB  
                     u3061 1DDD                       u3221 1D48                       u3205 1D38  
                     u3141 1CFE                       u4110 0C05                       u4030 0B9A  
                     u4022 0B85                       u3230 1BCE                       u3150 1D0A  
                     u4111 0C04                       u4023 0B8C                       u4015 0B6D  
                     u3231 1BCD                       u3151 1D09                       u4120 0C0C  
                     u3400 12B9                       u5000 1E77                       u3320 1ADE  
                     u4200 05AA                       u3080 1DF0                       u3160 1D15  
                     u4121 0C0B                       u4041 0BA6                       u3401 12B8  
                     u5001 1E76                       u3321 1ADD                       u4201 05A9  
                     u3081 1DEF                       u3161 1D14                       u4130 0C12  
                     u4042 0BAD                       u3410 12BF                       u5010 1E7E  
                     u3250 1BE0                       u3330 1AE8                       u4131 0C11  
                     u4043 0BB4                       u4035 0B95                       u3411 12BE  
                     u5011 1E7D                       u3251 1BDF                       u3331 1AE7  
                     u3315 1AD0                       u3075 1DE2                       u4140 0C24  
                     u3420 12C4                       u5100 1CF1                       u3180 1D27  
                     u4141 0C23                       u3421 12C3                       u5101 1CF0  
                     u3245 1BD2                       u3181 1D26                       u4150 0C33  
                     u4070 0BD8                       u5110 1F4C                       u3510 137E  
                     u3430 12DD                       u5030 1E8F                       u3270 1BF1  
                     u3350 1AFB                       u3190 1D31                       u4071 0BD7  
                     u4055 0BB6                       u5111 1F4B                       u3511 137D  
                     u3431 12DC                       u5031 1E8E                       u3271 1BF0  
                     u3351 1AFA                       u3335 1AE4                       u4215 05C7  
                     u3095 1DF1                       u3191 1D30                       u3175 1D19  
                     u4160 0C50                       u5200 1FC9                       u5120 1F50  
                     u3520 1382                       u3440 12E1                       u3360 1285  
                     u5040 1E94                       u4240 06BF                       u4161 0C4F  
                     u4065 0BCD                       u5201 1FC8                       u5121 1F4F  
                     u3601 13FA                       u3521 1381                       u3505 136B  
                     u3441 12E0                       u3361 1284                       u5041 1E93  
                     u5025 1E81                       u3265 1BE1                       u3345 1AEF  
                     u4241 06BE                       u4225 0623                       u4305 0CCF  
                     u4170 0C6A                       u4090 0BEC                       u5210 1FCD  
                     u5130 1F70                       u3610 140E                       u3602 13FB  
                     u3530 1387                       u3450 1339                       u3370 128B  
                     u5050 1CAC                       u3290 1C05                       u4410 0F4B  
                     u4330 0D9E                       u4171 0C69                       u4155 0C2E  
                     u4091 0BEB                       u5211 1FCC                       u5131 1F6F  
                     u3611 140F                       u3603 1400                       u3531 1386  
                     u3451 1338                       u3371 128A                       u5051 1CAB  
                     u3291 1C04                       u3275 1BED                       u4235 0678  
                     u3195 1D2D                       u4411 0F4A                       u4331 0D9D  
                     u4315 0D0B                       u5300 1B8D                       u4180 0C88  
                     u5220 1FE2                       u3700 1486                       u3620 142C  
                     u3612 1414                       u3604 1401                       u3460 1344  
                     u3380 1290                       u4500 115F                       u4181 0C87  
                     u4165 0C4C                       u4085 0BDB                       u3701 1485  
                     u3621 142B                       u3613 1415                       u3605 1406  
                     u3541 1399                       u3461 1342                       u3381 128F  
                     u4501 115E                       u3285 1BF9                       u4405 0F03  
                     u4325 0D56                       u5310 1BB1                       u5230 1FF2  
                     u5150 1F91                       u4190 1997                       u3710 148C  
                     u3630 1451                       u3606 1407                       u3550 13AB  
                     u3542 13A0                       u3470 1345                       u3390 12AE  
                     u5070 1CC2                       u4175 0C66                       u5231 1FF1  
                     u5151 1F90                       u4191 1996                       u3711 148B  
                     u3631 1450                       u3551 13AA                       u3543 13A7  
                     u3455 1335                       u3391 12AD                       u5071 1CC1  
                     u4255 06DC                       u5320 1BC3                       u5240 1FF6  
                     u3800 14E9                       u3720 1493                       u3640 1456  
                     u3560 13AF                       u3480 1359                       u5080 1CD4  
                     u4600 11C3                       u4520 1178                       u4280 0CA4  
                     u5400 165A                       u5321 1BC2                       u5241 1FF5  
                     u5225 1FDD                       u5145 1F83                       u3801 14E8  
                     u3721 1492                       u3641 1455                       u3561 13AE  
                     u3481 1358                       u5081 1CD3                       u5065 1CB3  
                     u4601 11C2                       u4521 1177                       u4505 115B  
                     u4265 0729                       u4425 0F5E                       u4345 0DB1  
                     u4281 0CA3                       u5401 1659                       u2930 0816  
                     u5170 1FB3                       u3810 14FA                       u3730 1499  
                     u3570 13BE                       u3490 1368                       u4610 11D7  
                     u4530 117C                       u4450 19AD                       u4370 0E5A  
                     u4290 0CAD                       u5410 1694                       u5330 1510  
                     u2931 0815                       u5171 1FB2                       u3811 14F9  
                     u3731 1498                       u3571 13BD                       u3491 1367  
                     u4611 11D6                       u4531 117B                       u4515 116B  
                     u4275 0775                       u4451 19AC                       u4435 0F9A  
                     u4371 0E59                       u4355 0DED                       u4291 0CAC  
                     u5411 1693                       u5331 150F                       u3820 094D  
                     u3740 14AB                       u3660 146C                       u4700 125A  
                     u4540 1183                       u4460 19B3                       u5500 0091  
                     u5420 16DF                       u5340 1538                       u3901 09F1  
                     u3821 094C                       u5165 1FA5                       u3741 14AA  
                     u3661 146B                       u5085 1CD0                       u4701 1259  
                     u4541 1182                       u4461 19B2                       u4445 0FD6  
                     u4365 0E29                       u5501 0090                       u5421 16DE  
                     u5341 1537                       u2950 082A                       u3902 09F8  
                     u3830 0953                       u5190 1FC3                       u3750 14BA  
                     u3670 1471                       u3590 13E3                       u4630 1218  
                     u4470 110C                       u5430 1768                       u5350 1584  
                     u2951 0829                       u3911 0A0D                       u3903 09FF  
                     u3831 0952                       u5191 1FC2                       u3671 1470  
                     u3655 1461                       u3591 13E2                       u5095 1CE3  
                     u4631 1217                       u4471 110B                       u5431 1767  
                     u5351 1583                       u2960 1B05                       u5280 1AA8  
                     u3912 0A14                       u3840 0958                       u3760 14C9  
                     u3680 147B                       u4720 126B                       u4560 1195  
                     u4480 1126                       u5600 02E0                       u5520 0196  
                     u5440 178C                       u5360 1592                       u2961 1B04  
                     u5281 1AA7                       u2945 081D                       u3921 0A39  
                     u3913 0A1B                       u3841 0957                       u5185 1FB8  
                     u3761 14C8                       u3681 147A                       u3593 13DF  
                     u3585 13C1                       u4721 126A                       u4625 11FF  
                     u4561 1194                       u4481 1125                       u4385 0E7C  
                     u5601 02DF                       u5521 0195                       u5441 178B  
                     u5361 1591                       u2970 1B10                       u5290 1ABA  
                     u3922 0A40                       u3850 0979                       u3770 14D2  
                     u3690 1481                       u4810 1D94                       u4730 10DA  
                     u4650 1236                       u4570 119C                       u5610 02EF  
                     u5530 01A5                       u5450 17A3                       u5370 15E6  
                     u2971 1B0F                       u5291 1AB9                       u3931 0A55  
                     u3923 0A47                       u3851 0978                       u3771 14D1  
                     u3755 14B5                       u3691 1480                       u4811 1D93  
                     u4731 10D9                       u4715 125D                       u4651 1235  
                     u4635 1214                       u4571 119B                       u4555 1185  
                     u4395 0EB8                       u5611 02EE                       u5531 01A4  
                     u5515 0155                       u5451 17A2                       u5371 15E5  
                     u2980 1B17                       u3932 0A5C                       u3860 097F  
                     u3780 14D7                       u4660 123A                       u5700 04BC  
                     u5620 0318                       u5540 01D4                       u5460 0025  
                     u5380 1621                       u2981 1B16                       u3933 0A63  
                     u3861 097E                       u4901 1EED                       u3781 14D6  
                     u4805 1D7B                       u4661 1239                       u4645 1229  
                     u5701 04BB                       u5621 0317                       u5605 02DC  
                     u5541 01D3                       u5525 0192                       u5461 17FA  
                     u5381 161E                       u2990 1B1E                       u3870 0984  
                     u4910 1F06                       u4902 1EEE                       u3790 14E4  
                     u4830 1DB2                       u4670 1241                       u4590 11AD  
                     u5710 04D5                       u5550 01EC                       u5470 0040  
                     u5390 1627                       u2991 1B1D                       u3951 0A8B  
                     u3871 0983                       u4911 1F05                       u4903 1EF3  
                     u3791 14E3                       u4831 1DB1                       u4815 1D90  
                     u4671 1240                       u4591 11AC                       u4495 114A  
                     u5711 04D4                       u5615 02EB                       u5551 01EB  
                     u5471 003F                       u5455 179F                       u5391 1626  
                     u3952 0A92                       u3880 099B                       u5800 1AA1  
                     u4840 1C6A                       u4904 1EF4                       u4760 10F4  
                     u5720 04E7                       u5560 0218                       u5480 0067  
                     u3961 0AB8                       u3953 0A99                       u3945 0A65  
                     u3881 099A                       u5801 1AA0                       u4841 1C69  
                     u4921 1F15                       u4905 1EF9                       u4825 1DA4  
                     u4761 10F3                       u4745 10E1                       u4585 119F  
                     u5721 04E6                       u5705 04B8                       u5561 0217  
                     u5481 0066                       u5465 17F5                       u3962 0ABF  
                     u3890 09A0                       u4850 1C86                       u4930 1F40  
                     u4922 1F16                       u4906 1EFA                       u4770 1D65  
                     u4690 1253                       u5730 04F5                       u5650 045C  
                     u5570 022C                       u5490 0076                       u3963 0AC6  
                     u3891 099F                       u4851 1C85                       u4931 1F3F  
                     u4923 1F1B                       u4771 1D64                       u4755 10E8  
                     u4691 1252                       u5731 04F4                       u5651 045B  
                     u5635 03A9                       u5571 022B                       u5491 0075  
                     u4860 1CA0                       u4924 1F1C                       u4940 19A2  
                     u5740 050B                       u5660 047C                       u3981 0AEE  
                     u4861 1C9F                       u4925 1F21                       u4941 19A1  
                     u4685 1243                       u5741 050A                       u5661 047B  
                     u5645 041B                       u5565 0214                       u3982 0AF5  
                     u4926 1F22                       u4870 1EB6                       u4950 1E31  
                     u4790 1D79                       u5750 0523                       u5670 0485  
                     u5590 02B9                       u5830 0916                       u3991 0B1B  
                     u3983 0AFC                       u3975 0AC8                       u4935 1F3C  
                     u4871 1EB5                       u4951 1E30                       u4791 1D78  
                     u5751 0522                       u5671 0484                       u5591 02B8  
                     u5495 0072                       u5831 0915                       u3992 0B22  
                     u4880 1ED2                       u4960 1E48                       u5760 0541  
                     u5680 048D                       u5840 0921                       u3993 0B29  
                     u4865 1C9C                       u4881 1ED1                       u4785 1D6A  
                     u5761 0540                       u5745 0507                       u5681 048C  
                     u5585 0243                       u5841 0920                       u4890 1EDE  
                     u4970 1E5E                       u5770 0560                       u5690 049E  
                     u5907 1C14                       u4891 1EDD                       u4971 1E5D  
                     u5771 055F                       u5755 051F                       u5691 049D  
                     u4980 1E65                       u5780 0572                       u5917 1C23  
                     u4981 1E64                       u4965 1E43                       u5781 0571  
                     u5790 059A                       u5927 1C34                       u5791 0597  
                     u5695 049A                       u5937 1A06                       u5857 0909  
                     u4995 1E67                       u5867 0932                       u5877 19EE  
                     u5887 1A1E                       u5897 1A26                       _TXIF 0064  
        ?_Lcd_Write_String 0076                       _conv 1B3E                       _main 082F  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0078  
             _sprintf$1239 00B5            __end_of_Lcd_Cmd 1A0F                      ??_isr 0071  
            ___fltol@sign1 005E                      ?_conv 0042            __end_of___fladd 14FC  
                    ?_main 0070            __end_of___awdiv 1E24            __end_of___flneg 19A5  
          __end_of___awmod 1D53            __end_of___flmul 0C9D            __end_of___flsub 07FE  
          __end_of___fltol 1EA0                      _ANSEL 0188            __end_of___lldiv 1DBB  
          ___awdiv@divisor 0020            __end_of___llmod 1CFA            __end_of___lwdiv 1C0A  
                    i1l101 1A5C                      i1l111 1A80                      i1l106 1A45  
          __end_of___lwmod 1B00            ___awdiv@counter 0024                      _RCREG 001A  
          __end_of_cfg_adc 19F5                      _SPBRG 0099                      _PORTA 0005  
          __end_of_cfg_clk 197E    __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019            __end_of_dpowers 10A0            __end_of_int_adc 1A46  
                    _scale 0C9D            __end_of_isdigit 19B7                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 05A1  
         __end_of_Lcd_Init 1C54           __end_of_Lcd_Port 1B3E            __initialization 000F  
             __end_of_conv 1B7E               __end_of_main 093C                     ??_conv 0046  
                   ??_main 00D0         __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD  
         ___llmod@dividend 0077                     ?_scale 0042                     _ADRESH 001E  
         ___awdiv@dividend 0022                     _ANSELH 0189                     i1l3221 1A35  
                   i1l3223 1A3C                     i1l3231 1A6D                     i1l3225 1A42  
                   i1l3233 1A73                     i1l3219 1A2A                     i1l3235 1A7A  
                   i1l3227 1A63                     i1l3237 1A7C                     i1l3229 1A6B  
                   i1l3591 1A46                     i1l3593 1A4C                     i1l3595 1A51  
                   i1l3597 1A57                     u525_20 1A35                     u525_21 1A34  
                   u526_20 1A6B                     u526_21 1A6A                     u527_20 1A7A  
                   u527_21 1A79                     u581_20 1A4C                     u581_21 1A4B  
                   u582_20 1A57                     u582_21 1A56                  ??_Lcd_Cmd 0074  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 001B           __end_of_cfg_inte 1990  
         __end_of___xxtofl 2000           __end_of__powers_ 1044                     ___flge 1EA0  
                   ___fleq 1C54                  ??___fladd 005E                     ___wmul 10D4  
                ??___awdiv 007A                     _cfg_io 19B7                  ??___flneg 0077  
                ??___awmod 0077                  ??___flmul 0030                  ??___flsub 007B  
                ??___fltol 0059                  ??___lldiv 0020                  ??___llmod 0020  
                ??___lwdiv 0079                  ??___lwmod 0077                  ??_cfg_adc 0073  
                ??_cfg_clk 0073                     _fround 05A1           ___awdiv@quotient 0026  
          ___awmod@divisor 0073           __end_of_int_uart 1A81            ___awmod@counter 0078  
                   conv@aa 004E                  ??_int_adc 0070                  ??_isdigit 0073  
       __size_of__Umul8_16 0029                     saved_w 007E                  ??_sprintf 006A  
          Lcd_Set_Cursor@a 0079            Lcd_Set_Cursor@b 0077                 ___flge@ff1 0073  
               ___flge@ff2 0077               ___xxtofl@arg 0022               ___xxtofl@exp 0021  
             ___xxtofl@val 0073                 ___fleq@ff1 0073                 ___fleq@ff2 0077  
  __end_of__initialization 0021                 ___flneg@f1 0073          __end_of_Lcd_Clear 10D4  
               ___fltol@f1 0055             __pcstackCOMMON 0070         __size_of_cfg_usart 0015  
            __end_of_scale 1000             _Lcd_Set_Cursor 1AA2                 __div_to_l_ 11B6  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070            __div_to_l_@exp1 0026  
          __div_to_l_@cntr 0025                    ??_scale 0046            __div_to_l_@quot 0021  
             sprintf@width 00C0                 __pbssBANK1 00D3                 __pbssBANK3 0190  
            __div_to_l_@f1 0073              __div_to_l_@f2 0077          __end_of__Umul8_16 082F  
               __pmaintext 082F                    ?___flge 0073                    ?___fleq 0073  
                  ?___wmul 0073                    ?_cfg_io 0070                 __pintentry 0004  
       __size_of_send_char 000A         __size_of_send_crct 0021                    ?_fround 0042  
__size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 1AC6                  ?_cfg_inte 0070  
                ?___xxtofl 0073                 ??_Lcd_Init 0077                 ??_Lcd_Port 0073  
              send_crct@st 0077                 __stringtab 1000          __end_of_cfg_usart 19DF  
           _Lcd_Write_Char 1A0F                    _Lcd_Cmd 19F5                  ?_int_uart 0070  
        __end_of__npowers_ 1078                 _scale$1238 0050            __size_of___flge 00A4  
          __size_of___fleq 0050                    ___fladd 1274                    ___awdiv 1DBB  
                  ___flneg 199A                    ___awmod 1CFA                    ___flmul 093C  
                  ___flsub 07AE                    ___fltol 1E24                    ___lldiv 1D53  
          __size_of___wmul 0025                    ___llmod 1CA4            __size_of_cfg_io 0013  
                  ___lwdiv 1BC4                    ___lwmod 1AC6                    _cfg_adc 19DF  
                  _cfg_clk 1976            __size_of_fround 020D            ?_Lcd_Set_Cursor 0077  
                  __ptext1 14FC                    __ptext2 0C9D                    __ptext3 1CFA  
                  __ptext4 1DBB                    __ptext5 19A5                    __ptext6 05A1  
                  __ptext7 1AC6                    __ptext8 1BC4                    __ptext9 10F9  
              ?__div_to_l_ 0073                    _dpowers 1078                    _int_adc 1A2A  
               ??_cfg_inte 0073                    _isdigit 19A5               __size_of_isr 001D  
               ??___xxtofl 0077           ___awmod@dividend 0075                    _sprintf 14FC  
                  clrloop0 197F     __end_of_Lcd_Write_Char 1A2A       end_of_initialization 0021  
        __end_of_send_char 199A          __end_of_send_crct 1AA2                 ??_int_uart 0070  
          ___lldiv@divisor 0073            ___lldiv@counter 0025                  _RCSTAbits 0018  
                  psplit$0 B0035                  Lcd_Port@a 0073             __tdiv_to_l_@f1 0073  
           __tdiv_to_l_@f2 0077              send_char@dato 0073              ??__tdiv_to_l_ 0020  
                _PORTCbits 0007                ___fladd@grs 0069              ___xxtofl@sign 0020  
                _TRISCbits 0087            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076  
        Lcd_Write_String@i 0020                 conv@result 004A                ___flmul@grs 0036  
                _TXSTAbits 0098        __size_of__div_to_l_ 00BE                  _Lcd_Clear 10C7  
           __end_of___flge 1F44             __end_of___fleq 1CA4             __end_of___wmul 10F9  
           __end_of_cfg_io 19CA           _Lcd_Write_String 1B7E          pnum$text1_split_1 0035  
              _BAUDCTLbits 0187             __end_of_fround 07AE        start_initialization 000F  
      __end_of__tdiv_to_l_ 11B6                __end_of_isr 1A63          __size_of_Lcd_Init 004A  
        __size_of_Lcd_Port 003E            ___llmod@divisor 0073            ___llmod@counter 0021  
               ?_Lcd_Clear 0070                   ??___flge 0020                   ??___fleq 0020  
                 ??___wmul 0077                   ??_cfg_io 0073                  __Umul8_16 0806  
          Lcd_Write_Char@a 0075                   ??_fround 0046              sprintf@tmpval 00C2  
                ___fladd@a 005A                  ___fladd@b 0056                 fround@prec 0055  
                ___flmul@a 002C                  ___flmul@b 0028                  ___flsub@a 00A0  
                ___flsub@b 00A4                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0          __size_of_cfg_inte 000A          __size_of___xxtofl 00BC  
             _isdigit$1052 0073                   ?_Lcd_Cmd 0070                sprintf@flag 00BE  
              sprintf@eexp 00C6                sprintf@fval 00C8                sprintf@prec 00CD  
                _cfg_usart 19CA           ___lwdiv@dividend 0022          __size_of_int_uart 001E  
         ??_Lcd_Set_Cursor 0078                   ?___fladd 0056                   ?___awdiv 0020  
                 ?___flneg 0073                   ?___awmod 0073                   ?___flmul 0028  
                 ?___flsub 00A0                   ?___fltol 0055                   ?___lldiv 0073  
                 ?___llmod 0073                  __npowers_ 1044                 ?__Umul8_16 0073  
                 ?___lwdiv 0020                   ?___lwmod 0073                   ?_cfg_adc 0070  
                 ?_cfg_clk 0070                  __pstrings 1000                __tdiv_to_l_ 10F9  
               send_crct@i 0075               ??__div_to_l_ 0020                   ?_int_adc 0070  
                 ?_isdigit 0070           ___lwdiv@quotient 0024                   ?_sprintf 00A8  
           __size_of_scale 0363          interrupt_function 0004             ___wmul@product 0077  
                clear_ram0 197E                 ?_cfg_usart 0070                   _PIE1bits 008C  
                _send_char 1990                  _send_crct 1A81                   Lcd_Cmd@a 0076  
                 _PIR1bits 000C         __end_of__div_to_l_ 1274                ??_Lcd_Clear 0077  
               _ADCON0bits 001F                __stringbase 100F                 _ADCON1bits 009F  
        ___wmul@multiplier 0073           ??_Lcd_Write_Char 0074                   _Lcd_Init 1C0A  
                 _Lcd_Port 1B00   __end_of_Lcd_Write_String 1BC4           __size_of_Lcd_Cmd 001A  
               ?_send_char 0070                 ?_send_crct 0070                ??__Umul8_16 0075  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 0059           __size_of___flmul 0361           __size_of___flsub 0050  
         __size_of___fltol 007C           __size_of___lldiv 0068           __size_of___llmod 0056  
         __size_of___lwdiv 0046           __size_of___lwmod 003A           __size_of_cfg_adc 0016  
         __size_of_cfg_clk 0008                _fround$1236 0051                _fround$1237 004D  
       __end_of__stringtab 1010                 sprintf@val 00BA                   _cfg_inte 1986  
                 ___xxtofl 1F44           __size_of_int_adc 001C           __size_of_isdigit 0012  
          ___lwdiv@divisor 0020            ___lwdiv@counter 0026                   __ptext10 11B6  
                 __ptext11 10D4                   __ptext20 1A81                   __ptext12 1CA4  
                 __ptext21 1990                   __ptext13 1D53                   __ptext30 19DF  
                 __ptext22 1B3E                   __ptext14 1E24                   __ptext31 1B7E  
                 __ptext23 1F44                   __ptext15 07AE                   __ptext40 1A2A  
                 __ptext32 1A0F                   __ptext24 093C                   __ptext16 1274  
                 __ptext33 1AA2                   __ptext25 0806                   __ptext17 199A  
                 __ptext34 1C0A                   __ptext26 19CA                   __ptext18 1EA0  
                 __ptext35 10C7                   __ptext27 19B7                   __ptext19 1C54  
                 __ptext36 19F5                   __ptext28 1986                   __ptext37 1B00  
                 __ptext29 1976                   __ptext38 1A46                   __ptext39 1A63  
                 __powers_ 1010           __size_of_sprintf F0A5              __size_of_conv 0040  
            __size_of_main 010D                  pnum$text1 000B                   _int_uart 1A63  
              ??_cfg_usart 0073                 _INTCONbits 000B                   isdigit@c 0074  
                 scale@scl 0054                   intlevel1 0000                  sprintf@ap 00B9  
         __tdiv_to_l_@exp1 0029           __tdiv_to_l_@cntr 0028                  sprintf@sp 00CC  
         __tdiv_to_l_@quot 0024           ___lwmod@dividend 0075           ___lldiv@dividend 0077  
              ??_send_char 0073                ??_send_crct 0074                  stringcode 100A  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 007A               ?__tdiv_to_l_ 0073  
   __Umul8_16@multiplicand 0073                   sprintf@c 00CF                   sprintf@f 00A8  
         ___lldiv@quotient 0021            ___lwmod@divisor 0073            ___lwmod@counter 0078  
                 stringdir 100A                   stringtab 1000              ___fladd@signs 0066  
             ___fladd@aexp 0067               ___fladd@bexp 0068       __Umul8_16@multiplier 0024  
        __Umul8_16@product 0020  
