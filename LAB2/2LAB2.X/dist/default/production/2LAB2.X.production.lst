

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jul 27 11:06:57 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F887 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  0105                     	;# 
   234  0107                     	;# 
   235  0108                     	;# 
   236  0109                     	;# 
   237  010C                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0185                     	;# 
   243  0187                     	;# 
   244  0188                     	;# 
   245  0189                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  000E                     	;# 
   264  000F                     	;# 
   265  0010                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0014                     	;# 
   270  0015                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001D                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0086                     	;# 
   286  0087                     	;# 
   287  0088                     	;# 
   288  0089                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  009F                     	;# 
   311  0105                     	;# 
   312  0107                     	;# 
   313  0108                     	;# 
   314  0109                     	;# 
   315  010C                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  0185                     	;# 
   321  0187                     	;# 
   322  0188                     	;# 
   323  0189                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  008F                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0095                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  0105                     	;# 
   390  0107                     	;# 
   391  0108                     	;# 
   392  0109                     	;# 
   393  010C                     	;# 
   394  010C                     	;# 
   395  010D                     	;# 
   396  010E                     	;# 
   397  010F                     	;# 
   398  0185                     	;# 
   399  0187                     	;# 
   400  0188                     	;# 
   401  0189                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404                           
   405                           	psect	strings
   406  1000                     __pstrings:
   407  1000                     stringtab:
   408  1000                     __stringtab:
   409                           
   410                           ;	String table - string pointers are 1 byte each
   411  1000  1BFF               	btfsc	btemp+1,7
   412  1001  280A               	ljmp	stringcode
   413  1002  1383               	bcf	3,7
   414  1003  187F               	btfsc	btemp+1,0
   415  1004  1783               	bsf	3,7
   416  1005  0800               	movf	0,w
   417  1006  0A84               	incf	4,f
   418  1007  1903               	skipnz
   419  1008  0AFF               	incf	btemp+1,f
   420  1009  0008               	return
   421  100A                     stringcode:
   422  100A                     stringdir:
   423  100A  3010               	movlw	high stringdir
   424  100B  008A               	movwf	10
   425  100C  0804               	movf	4,w
   426  100D  0A84               	incf	4,f
   427  100E  0782               	addwf	2,f
   428  100F                     __stringbase:
   429  100F  3400               	retlw	0
   430  1010                     __end_of__stringtab:
   431  1010                     __powers_:
   432  1010  3400               	retlw	0
   433  1011  3400               	retlw	0
   434  1012  3480               	retlw	128
   435  1013  343F               	retlw	63
   436  1014  3400               	retlw	0
   437  1015  3400               	retlw	0
   438  1016  3420               	retlw	32
   439  1017  3441               	retlw	65
   440  1018  3400               	retlw	0
   441  1019  3400               	retlw	0
   442  101A  34C8               	retlw	200
   443  101B  3442               	retlw	66
   444  101C  3400               	retlw	0
   445  101D  3400               	retlw	0
   446  101E  347A               	retlw	122
   447  101F  3444               	retlw	68
   448  1020  3400               	retlw	0
   449  1021  3440               	retlw	64
   450  1022  341C               	retlw	28
   451  1023  3446               	retlw	70
   452  1024  3400               	retlw	0
   453  1025  3450               	retlw	80
   454  1026  34C3               	retlw	195
   455  1027  3447               	retlw	71
   456  1028  3400               	retlw	0
   457  1029  3424               	retlw	36
   458  102A  3474               	retlw	116
   459  102B  3449               	retlw	73
   460  102C  3480               	retlw	128
   461  102D  3496               	retlw	150
   462  102E  3418               	retlw	24
   463  102F  344B               	retlw	75
   464  1030  3420               	retlw	32
   465  1031  34BC               	retlw	188
   466  1032  34BE               	retlw	190
   467  1033  344C               	retlw	76
   468  1034  3428               	retlw	40
   469  1035  346B               	retlw	107
   470  1036  346E               	retlw	110
   471  1037  344E               	retlw	78
   472  1038  34F9               	retlw	249
   473  1039  3402               	retlw	2
   474  103A  3415               	retlw	21
   475  103B  3450               	retlw	80
   476  103C  34EC               	retlw	236
   477  103D  3478               	retlw	120
   478  103E  34AD               	retlw	173
   479  103F  3460               	retlw	96
   480  1040  34CA               	retlw	202
   481  1041  34F2               	retlw	242
   482  1042  3449               	retlw	73
   483  1043  3471               	retlw	113
   484  1044                     __end_of__powers_:
   485  1044                     __npowers_:
   486  1044  3400               	retlw	0
   487  1045  3400               	retlw	0
   488  1046  3480               	retlw	128
   489  1047  343F               	retlw	63
   490  1048  34CD               	retlw	205
   491  1049  34CC               	retlw	204
   492  104A  34CC               	retlw	204
   493  104B  343D               	retlw	61
   494  104C  340A               	retlw	10
   495  104D  34D7               	retlw	215
   496  104E  3423               	retlw	35
   497  104F  343C               	retlw	60
   498  1050  346F               	retlw	111
   499  1051  3412               	retlw	18
   500  1052  3483               	retlw	131
   501  1053  343A               	retlw	58
   502  1054  3417               	retlw	23
   503  1055  34B7               	retlw	183
   504  1056  34D1               	retlw	209
   505  1057  3438               	retlw	56
   506  1058  34AC               	retlw	172
   507  1059  34C5               	retlw	197
   508  105A  3427               	retlw	39
   509  105B  3437               	retlw	55
   510  105C  34BD               	retlw	189
   511  105D  3437               	retlw	55
   512  105E  3486               	retlw	134
   513  105F  3435               	retlw	53
   514  1060  3495               	retlw	149
   515  1061  34BF               	retlw	191
   516  1062  34D6               	retlw	214
   517  1063  3433               	retlw	51
   518  1064  3477               	retlw	119
   519  1065  34CC               	retlw	204
   520  1066  342B               	retlw	43
   521  1067  3432               	retlw	50
   522  1068  345F               	retlw	95
   523  1069  3470               	retlw	112
   524  106A  3489               	retlw	137
   525  106B  3430               	retlw	48
   526  106C  34FF               	retlw	255
   527  106D  34E6               	retlw	230
   528  106E  34DB               	retlw	219
   529  106F  342E               	retlw	46
   530  1070  3408               	retlw	8
   531  1071  34E5               	retlw	229
   532  1072  343C               	retlw	60
   533  1073  341E               	retlw	30
   534  1074  3460               	retlw	96
   535  1075  3442               	retlw	66
   536  1076  34A2               	retlw	162
   537  1077  340D               	retlw	13
   538  1078                     __end_of__npowers_:
   539  1078                     _dpowers:
   540  1078  3401               	retlw	1
   541  1079  3400               	retlw	0
   542  107A  3400               	retlw	0
   543  107B  3400               	retlw	0
   544  107C  340A               	retlw	10
   545  107D  3400               	retlw	0
   546  107E  3400               	retlw	0
   547  107F  3400               	retlw	0
   548  1080  3464               	retlw	100
   549  1081  3400               	retlw	0
   550  1082  3400               	retlw	0
   551  1083  3400               	retlw	0
   552  1084  34E8               	retlw	232
   553  1085  3403               	retlw	3
   554  1086  3400               	retlw	0
   555  1087  3400               	retlw	0
   556  1088  3410               	retlw	16
   557  1089  3427               	retlw	39
   558  108A  3400               	retlw	0
   559  108B  3400               	retlw	0
   560  108C  34A0               	retlw	160
   561  108D  3486               	retlw	134
   562  108E  3401               	retlw	1
   563  108F  3400               	retlw	0
   564  1090  3440               	retlw	64
   565  1091  3442               	retlw	66
   566  1092  340F               	retlw	15
   567  1093  3400               	retlw	0
   568  1094  3480               	retlw	128
   569  1095  3496               	retlw	150
   570  1096  3498               	retlw	152
   571  1097  3400               	retlw	0
   572  1098  3400               	retlw	0
   573  1099  34E1               	retlw	225
   574  109A  34F5               	retlw	245
   575  109B  3405               	retlw	5
   576  109C  3400               	retlw	0
   577  109D  34CA               	retlw	202
   578  109E  349A               	retlw	154
   579  109F  343B               	retlw	59
   580  10A0                     __end_of_dpowers:
   581  0007                     _PORTCbits	set	7
   582  000B                     _INTCONbits	set	11
   583  0018                     _RCSTAbits	set	24
   584  0005                     _PORTA	set	5
   585  001A                     _RCREG	set	26
   586  0019                     _TXREG	set	25
   587  001E                     _ADRESH	set	30
   588  001F                     _ADCON0bits	set	31
   589  000C                     _PIR1bits	set	12
   590  0039                     _RC1	set	57
   591  0047                     _RD7	set	71
   592  0046                     _RD6	set	70
   593  0045                     _RD5	set	69
   594  0044                     _RD4	set	68
   595  0043                     _RD3	set	67
   596  0042                     _RD2	set	66
   597  0041                     _RD1	set	65
   598  0040                     _RD0	set	64
   599  0064                     _TXIF	set	100
   600  008C                     _PIE1bits	set	140
   601  009A                     _SPBRGH	set	154
   602  0099                     _SPBRG	set	153
   603  0098                     _TXSTAbits	set	152
   604  008F                     _OSCCONbits	set	143
   605  009F                     _ADCON1bits	set	159
   606  0089                     _TRISE	set	137
   607  0088                     _TRISD	set	136
   608  0085                     _TRISA	set	133
   609  0087                     _TRISC	set	135
   610  0086                     _TRISB	set	134
   611  0187                     _BAUDCTLbits	set	391
   612  0188                     _ANSEL	set	392
   613  0189                     _ANSELH	set	393
   614  10A0                     STR_2:
   615  10A0  3425               	retlw	37	;'%'
   616  10A1  3433               	retlw	51	;'3'
   617  10A2  342E               	retlw	46	;'.'
   618  10A3  3431               	retlw	49	;'1'
   619  10A4  3466               	retlw	102	;'f'
   620  10A5  3456               	retlw	86	;'V'
   621  10A6  3420               	retlw	32	;' '
   622  10A7  3425               	retlw	37	;'%'
   623  10A8  3433               	retlw	51	;'3'
   624  10A9  342E               	retlw	46	;'.'
   625  10AA  3432               	retlw	50	;'2'
   626  10AB  3466               	retlw	102	;'f'
   627  10AC  3456               	retlw	86	;'V'
   628  10AD  3420               	retlw	32	;' '
   629  10AE  3425               	retlw	37	;'%'
   630  10AF  3433               	retlw	51	;'3'
   631  10B0  342E               	retlw	46	;'.'
   632  10B1  3432               	retlw	50	;'2'
   633  10B2  3466               	retlw	102	;'f'
   634  10B3  3456               	retlw	86	;'V'
   635  10B4  3400               	retlw	0
   636  10B5                     STR_1:
   637  10B5  3420               	retlw	32	;' '
   638  10B6  3453               	retlw	83	;'S'
   639  10B7  3431               	retlw	49	;'1'
   640  10B8  343A               	retlw	58	;':'
   641  10B9  3420               	retlw	32	;' '
   642  10BA  3420               	retlw	32	;' '
   643  10BB  3420               	retlw	32	;' '
   644  10BC  3453               	retlw	83	;'S'
   645  10BD  3432               	retlw	50	;'2'
   646  10BE  343A               	retlw	58	;':'
   647  10BF  3420               	retlw	32	;' '
   648  10C0  3420               	retlw	32	;' '
   649  10C1  3453               	retlw	83	;'S'
   650  10C2  3433               	retlw	51	;'3'
   651  10C3  343A               	retlw	58	;':'
   652  10C4  3420               	retlw	32	;' '
   653  10C5  3420               	retlw	32	;' '
   654  10C6  3400               	retlw	0
   655                           
   656                           	psect	cinit
   657  000F                     start_initialization:	
   658                           ; #config settings
   659                           
   660  000F                     __initialization:
   661                           
   662                           ; Clear objects allocated to BANK1
   663  000F  1383               	bcf	3,7	;select IRP bank0
   664  0010  30D8               	movlw	low __pbssBANK1
   665  0011  0084               	movwf	4
   666  0012  30E7               	movlw	low (__pbssBANK1+15)
   667  0013  160A  118A  20C8  120A  118A  	fcall	clear_ram0
   668                           
   669                           ; Clear objects allocated to BANK3
   670  0018  1783               	bsf	3,7	;select IRP bank2
   671  0019  3090               	movlw	low __pbssBANK3
   672  001A  0084               	movwf	4
   673  001B  30A4               	movlw	low (__pbssBANK3+20)
   674  001C  160A  118A  20C8  120A  118A  	fcall	clear_ram0
   675  0021                     end_of_initialization:	
   676                           ;End of C runtime variable initialization code
   677                           
   678  0021                     __end_of__initialization:
   679  0021  0183               	clrf	3
   680  0022  120A  158A  2827   	ljmp	_main	;jump to C main() function
   681                           
   682                           	psect	bssBANK1
   683  00D8                     __pbssBANK1:
   684  00D8                     _v33:
   685  00D8                     	ds	4
   686  00DC                     _v22:
   687  00DC                     	ds	4
   688  00E0                     _v11:
   689  00E0                     	ds	4
   690  00E4                     _V3:
   691  00E4                     	ds	1
   692  00E5                     _V2:
   693  00E5                     	ds	1
   694  00E6                     _V1:
   695  00E6                     	ds	1
   696                           
   697                           	psect	bssBANK3
   698  0190                     __pbssBANK3:
   699  0190                     _f2:
   700  0190                     	ds	10
   701  019A                     _f1:
   702  019A                     	ds	10
   703                           
   704                           	psect	clrtext
   705  10C8                     clear_ram0:	
   706                           ;	Called with FSR containing the base address, and
   707                           ;	W with the last address+1
   708                           
   709  10C8  0064               	clrwdt	;clear the watchdog before getting into this loop
   710  10C9                     clrloop0:
   711  10C9  0180               	clrf	0	;clear RAM location pointed to by FSR
   712  10CA  0A84               	incf	4,f	;increment pointer
   713  10CB  0604               	xorwf	4,w	;XOR with final address
   714  10CC  1903               	btfsc	3,2	;have we reached the end yet?
   715  10CD  3400               	retlw	0	;all done for this memory range, return
   716  10CE  0604               	xorwf	4,w	;XOR again to restore value
   717  10CF  28C9               	goto	clrloop0	;do the next byte
   718                           
   719                           	psect	cstackBANK1
   720  00A0                     __pcstackBANK1:
   721  00A0                     ?___flsub:
   722  00A0                     ___flsub@a:	
   723                           ; 4 bytes @ 0x0
   724                           
   725                           
   726                           ; 4 bytes @ 0x0
   727  00A0                     	ds	4
   728  00A4                     ___flsub@b:
   729                           
   730                           ; 4 bytes @ 0x4
   731  00A4                     	ds	4
   732  00A8                     ?_sprintf:
   733  00A8                     sprintf@f:	
   734                           ; 2 bytes @ 0x8
   735                           
   736                           
   737                           ; 1 bytes @ 0x8
   738  00A8                     	ds	13
   739  00B5                     ??_sprintf:
   740                           
   741                           ; 1 bytes @ 0x15
   742  00B5                     	ds	5
   743  00BA                     _sprintf$1211:
   744                           
   745                           ; 4 bytes @ 0x1A
   746  00BA                     	ds	4
   747  00BE                     sprintf@ap:
   748                           
   749                           ; 1 bytes @ 0x1E
   750  00BE                     	ds	1
   751  00BF                     sprintf@val:
   752                           
   753                           ; 4 bytes @ 0x1F
   754  00BF                     	ds	4
   755  00C3                     sprintf@flag:
   756                           
   757                           ; 2 bytes @ 0x23
   758  00C3                     	ds	2
   759  00C5                     sprintf@width:
   760                           
   761                           ; 2 bytes @ 0x25
   762  00C5                     	ds	2
   763  00C7                     sprintf@tmpval:
   764                           
   765                           ; 4 bytes @ 0x27
   766  00C7                     	ds	4
   767  00CB                     sprintf@eexp:
   768                           
   769                           ; 2 bytes @ 0x2B
   770  00CB                     	ds	2
   771  00CD                     sprintf@fval:
   772                           
   773                           ; 4 bytes @ 0x2D
   774  00CD                     	ds	4
   775  00D1                     sprintf@sp:
   776                           
   777                           ; 1 bytes @ 0x31
   778  00D1                     	ds	1
   779  00D2                     sprintf@prec:
   780                           
   781                           ; 2 bytes @ 0x32
   782  00D2                     	ds	2
   783  00D4                     sprintf@c:
   784                           
   785                           ; 1 bytes @ 0x34
   786  00D4                     	ds	1
   787  00D5                     ??_main:
   788                           
   789                           ; 1 bytes @ 0x35
   790  00D5                     	ds	3
   791                           
   792                           	psect	cstackCOMMON
   793  0070                     __pcstackCOMMON:
   794  0070                     ?_isdigit:
   795  0070                     ?_int_adc:	
   796                           ; 1 bit 
   797                           
   798  0070                     ??_int_adc:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ?_int_uart:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ??_int_uart:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     ?_cfg_io:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     ?_cfg_clk:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ?_cfg_inte:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ?_cfg_adc:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     ?_cfg_usart:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ?_Lcd_Init:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_Lcd_Clear:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_send_crct:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ?_send_char:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ?_isr:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?_main:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_Lcd_Port:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_Lcd_Cmd:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ?_Lcd_Write_Char:	
   847                           ; 1 bytes @ 0x0
   848                           
   849                           
   850                           ; 1 bytes @ 0x0
   851  0070                     	ds	3
   852  0073                     ??_isr:
   853                           
   854                           ; 1 bytes @ 0x3
   855  0073                     	ds	2
   856  0075                     ??_cfg_io:
   857  0075                     ??_cfg_clk:	
   858                           ; 1 bytes @ 0x5
   859                           
   860  0075                     ??_cfg_inte:	
   861                           ; 1 bytes @ 0x5
   862                           
   863  0075                     ??_cfg_adc:	
   864                           ; 1 bytes @ 0x5
   865                           
   866  0075                     ??_cfg_usart:	
   867                           ; 1 bytes @ 0x5
   868                           
   869  0075                     ??_send_char:	
   870                           ; 1 bytes @ 0x5
   871                           
   872  0075                     ??_isdigit:	
   873                           ; 1 bytes @ 0x5
   874                           
   875  0075                     ??__tdiv_to_l_:	
   876                           ; 1 bytes @ 0x5
   877                           
   878  0075                     ??__div_to_l_:	
   879                           ; 1 bytes @ 0x5
   880                           
   881  0075                     ??_Lcd_Port:	
   882                           ; 1 bytes @ 0x5
   883                           
   884  0075                     ??___lldiv:	
   885                           ; 1 bytes @ 0x5
   886                           
   887  0075                     ??___fleq:	
   888                           ; 1 bytes @ 0x5
   889                           
   890  0075                     ??___flge:	
   891                           ; 1 bytes @ 0x5
   892                           
   893  0075                     ??___llmod:	
   894                           ; 1 bytes @ 0x5
   895                           
   896  0075                     ?__Umul8_16:	
   897                           ; 1 bytes @ 0x5
   898                           
   899  0075                     ?___wmul:	
   900                           ; 2 bytes @ 0x5
   901                           
   902  0075                     ?___awmod:	
   903                           ; 2 bytes @ 0x5
   904                           
   905  0075                     ?___lwmod:	
   906                           ; 2 bytes @ 0x5
   907                           
   908  0075                     ?___flneg:	
   909                           ; 2 bytes @ 0x5
   910                           
   911  0075                     ?___xxtofl:	
   912                           ; 4 bytes @ 0x5
   913                           
   914  0075                     send_char@dato:	
   915                           ; 4 bytes @ 0x5
   916                           
   917  0075                     Lcd_Port@a:	
   918                           ; 1 bytes @ 0x5
   919                           
   920  0075                     __Umul8_16@multiplicand:	
   921                           ; 1 bytes @ 0x5
   922                           
   923  0075                     _isdigit$1024:	
   924                           ; 1 bytes @ 0x5
   925                           
   926  0075                     ___wmul@multiplier:	
   927                           ; 1 bytes @ 0x5
   928                           
   929  0075                     ___awmod@divisor:	
   930                           ; 2 bytes @ 0x5
   931                           
   932  0075                     ___lwmod@divisor:	
   933                           ; 2 bytes @ 0x5
   934                           
   935  0075                     ___flneg@f1:	
   936                           ; 2 bytes @ 0x5
   937                           
   938  0075                     ___xxtofl@val:	
   939                           ; 4 bytes @ 0x5
   940                           
   941                           
   942                           ; 4 bytes @ 0x5
   943  0075                     	ds	1
   944  0076                     ??_send_crct:
   945  0076                     ??_Lcd_Cmd:	
   946                           ; 1 bytes @ 0x6
   947                           
   948  0076                     ??_Lcd_Write_Char:	
   949                           ; 1 bytes @ 0x6
   950                           
   951  0076                     ___llmod@counter:	
   952                           ; 1 bytes @ 0x6
   953                           
   954  0076                     isdigit@c:	
   955                           ; 1 bytes @ 0x6
   956                           
   957                           
   958                           ; 1 bytes @ 0x6
   959  0076                     	ds	1
   960  0077                     ??__Umul8_16:
   961  0077                     Lcd_Write_Char@a:	
   962                           ; 1 bytes @ 0x7
   963                           
   964  0077                     ___wmul@multiplicand:	
   965                           ; 1 bytes @ 0x7
   966                           
   967  0077                     ___awmod@dividend:	
   968                           ; 2 bytes @ 0x7
   969                           
   970  0077                     ___lwmod@dividend:	
   971                           ; 2 bytes @ 0x7
   972                           
   973                           
   974                           ; 2 bytes @ 0x7
   975  0077                     	ds	1
   976  0078                     Lcd_Cmd@a:
   977                           
   978                           ; 1 bytes @ 0x8
   979  0078                     	ds	1
   980  0079                     ??_Lcd_Clear:
   981  0079                     ??___wmul:	
   982                           ; 1 bytes @ 0x9
   983                           
   984  0079                     ??___flneg:	
   985                           ; 1 bytes @ 0x9
   986                           
   987  0079                     ??___flsub:	
   988                           ; 1 bytes @ 0x9
   989                           
   990                           
   991                           	psect	cstackBANK0
   992  0020                     __pcstackBANK0:	
   993                           ; 1 bytes @ 0x9
   994                           
   995  0020                     ?___fleq:
   996  0020                     ?___flge:	
   997                           ; 1 bit 
   998                           
   999  0020                     ??_Lcd_Init:	
  1000                           ; 1 bit 
  1001                           
  1002  0020                     ?_Lcd_Set_Cursor:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0020                     ?_Lcd_Write_String:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0020                     ??___awmod:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011  0020                     ??___lwmod:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  0020                     ??___xxtofl:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017  0020                     ?__tdiv_to_l_:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0020                     ?__div_to_l_:	
  1021                           ; 4 bytes @ 0x0
  1022                           
  1023  0020                     ?___lldiv:	
  1024                           ; 4 bytes @ 0x0
  1025                           
  1026  0020                     ?___llmod:	
  1027                           ; 4 bytes @ 0x0
  1028                           
  1029  0020                     Lcd_Set_Cursor@b:	
  1030                           ; 4 bytes @ 0x0
  1031                           
  1032  0020                     send_crct@i:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035  0020                     Lcd_Write_String@a:	
  1036                           ; 2 bytes @ 0x0
  1037                           
  1038  0020                     ___wmul@product:	
  1039                           ; 2 bytes @ 0x0
  1040                           
  1041  0020                     __Umul8_16@product:	
  1042                           ; 2 bytes @ 0x0
  1043                           
  1044  0020                     ___lldiv@divisor:	
  1045                           ; 2 bytes @ 0x0
  1046                           
  1047  0020                     __div_to_l_@f1:	
  1048                           ; 4 bytes @ 0x0
  1049                           
  1050  0020                     ___fleq@ff1:	
  1051                           ; 4 bytes @ 0x0
  1052                           
  1053  0020                     ___flge@ff1:	
  1054                           ; 4 bytes @ 0x0
  1055                           
  1056  0020                     __tdiv_to_l_@f1:	
  1057                           ; 4 bytes @ 0x0
  1058                           
  1059  0020                     ___llmod@divisor:	
  1060                           ; 4 bytes @ 0x0
  1061                           
  1062                           
  1063                           ; 4 bytes @ 0x0
  1064  0020                     	ds	1
  1065  0021                     ??_Lcd_Set_Cursor:
  1066  0021                     ___awmod@counter:	
  1067                           ; 1 bytes @ 0x1
  1068                           
  1069  0021                     ___lwmod@counter:	
  1070                           ; 1 bytes @ 0x1
  1071                           
  1072                           
  1073                           ; 1 bytes @ 0x1
  1074  0021                     	ds	1
  1075  0022                     ??_Lcd_Write_String:
  1076  0022                     ?___lwdiv:	
  1077                           ; 1 bytes @ 0x2
  1078                           
  1079  0022                     send_crct@st:	
  1080                           ; 2 bytes @ 0x2
  1081                           
  1082  0022                     Lcd_Set_Cursor@a:	
  1083                           ; 1 bytes @ 0x2
  1084                           
  1085  0022                     ___awmod@sign:	
  1086                           ; 1 bytes @ 0x2
  1087                           
  1088  0022                     ___lwdiv@divisor:	
  1089                           ; 1 bytes @ 0x2
  1090                           
  1091  0022                     __Umul8_16@word_mpld:	
  1092                           ; 2 bytes @ 0x2
  1093                           
  1094                           
  1095                           ; 2 bytes @ 0x2
  1096  0022                     	ds	1
  1097  0023                     ?___awdiv:
  1098  0023                     Lcd_Set_Cursor@temp:	
  1099                           ; 2 bytes @ 0x3
  1100                           
  1101  0023                     ___awdiv@divisor:	
  1102                           ; 1 bytes @ 0x3
  1103                           
  1104                           
  1105                           ; 2 bytes @ 0x3
  1106  0023                     	ds	1
  1107  0024                     __Umul8_16@multiplier:
  1108  0024                     ___xxtofl@sign:	
  1109                           ; 1 bytes @ 0x4
  1110                           
  1111  0024                     ___lwdiv@dividend:	
  1112                           ; 1 bytes @ 0x4
  1113                           
  1114  0024                     ___lldiv@dividend:	
  1115                           ; 2 bytes @ 0x4
  1116                           
  1117  0024                     __div_to_l_@f2:	
  1118                           ; 4 bytes @ 0x4
  1119                           
  1120  0024                     ___fleq@ff2:	
  1121                           ; 4 bytes @ 0x4
  1122                           
  1123  0024                     ___flge@ff2:	
  1124                           ; 4 bytes @ 0x4
  1125                           
  1126  0024                     __tdiv_to_l_@f2:	
  1127                           ; 4 bytes @ 0x4
  1128                           
  1129  0024                     ___llmod@dividend:	
  1130                           ; 4 bytes @ 0x4
  1131                           
  1132                           
  1133                           ; 4 bytes @ 0x4
  1134  0024                     	ds	1
  1135  0025                     ___xxtofl@exp:
  1136  0025                     Lcd_Write_String@i:	
  1137                           ; 1 bytes @ 0x5
  1138                           
  1139  0025                     ___awdiv@dividend:	
  1140                           ; 2 bytes @ 0x5
  1141                           
  1142                           
  1143                           ; 2 bytes @ 0x5
  1144  0025                     	ds	1
  1145  0026                     ??___lwdiv:
  1146  0026                     ___xxtofl@arg:	
  1147                           ; 1 bytes @ 0x6
  1148                           
  1149                           
  1150                           ; 4 bytes @ 0x6
  1151  0026                     	ds	1
  1152  0027                     ??___awdiv:
  1153  0027                     ___lwdiv@quotient:	
  1154                           ; 1 bytes @ 0x7
  1155                           
  1156                           
  1157                           ; 2 bytes @ 0x7
  1158  0027                     	ds	1
  1159  0028                     ___awdiv@counter:
  1160  0028                     ___lldiv@quotient:	
  1161                           ; 1 bytes @ 0x8
  1162                           
  1163  0028                     __div_to_l_@quot:	
  1164                           ; 4 bytes @ 0x8
  1165                           
  1166  0028                     __tdiv_to_l_@quot:	
  1167                           ; 4 bytes @ 0x8
  1168                           
  1169                           
  1170                           ; 4 bytes @ 0x8
  1171  0028                     	ds	1
  1172  0029                     ___awdiv@sign:
  1173  0029                     ___lwdiv@counter:	
  1174                           ; 1 bytes @ 0x9
  1175                           
  1176                           
  1177                           ; 1 bytes @ 0x9
  1178  0029                     	ds	1
  1179  002A                     ___awdiv@quotient:
  1180                           
  1181                           ; 2 bytes @ 0xA
  1182  002A                     	ds	2
  1183  002C                     ?___flmul:
  1184  002C                     ___lldiv@counter:	
  1185                           ; 4 bytes @ 0xC
  1186                           
  1187  002C                     __div_to_l_@cntr:	
  1188                           ; 1 bytes @ 0xC
  1189                           
  1190  002C                     __tdiv_to_l_@cntr:	
  1191                           ; 1 bytes @ 0xC
  1192                           
  1193  002C                     ___flmul@b:	
  1194                           ; 1 bytes @ 0xC
  1195                           
  1196                           
  1197                           ; 4 bytes @ 0xC
  1198  002C                     	ds	1
  1199  002D                     __div_to_l_@exp1:
  1200  002D                     __tdiv_to_l_@exp1:	
  1201                           ; 1 bytes @ 0xD
  1202                           
  1203                           
  1204                           ; 1 bytes @ 0xD
  1205  002D                     	ds	3
  1206  0030                     ___flmul@a:
  1207                           
  1208                           ; 4 bytes @ 0x10
  1209  0030                     	ds	4
  1210  0034                     ??___flmul:
  1211                           
  1212                           ; 1 bytes @ 0x14
  1213  0034                     	ds	5
  1214  0039                     ___flmul@sign:
  1215                           
  1216                           ; 1 bytes @ 0x19
  1217  0039                     	ds	1
  1218  003A                     ___flmul@grs:
  1219                           
  1220                           ; 4 bytes @ 0x1A
  1221  003A                     	ds	4
  1222  003E                     ___flmul@aexp:
  1223                           
  1224                           ; 1 bytes @ 0x1E
  1225  003E                     	ds	1
  1226  003F                     ___flmul@bexp:
  1227                           
  1228                           ; 1 bytes @ 0x1F
  1229  003F                     	ds	1
  1230  0040                     ___flmul@prod:
  1231                           
  1232                           ; 4 bytes @ 0x20
  1233  0040                     	ds	4
  1234  0044                     ___flmul@temp:
  1235                           
  1236                           ; 2 bytes @ 0x24
  1237  0044                     	ds	2
  1238  0046                     ?_conv:
  1239  0046                     ?_fround:	
  1240                           ; 4 bytes @ 0x26
  1241                           
  1242  0046                     ?_scale:	
  1243                           ; 4 bytes @ 0x26
  1244                           
  1245                           
  1246                           ; 4 bytes @ 0x26
  1247  0046                     	ds	4
  1248  004A                     ??_conv:
  1249  004A                     ??_fround:	
  1250                           ; 1 bytes @ 0x2A
  1251                           
  1252  004A                     ??_scale:	
  1253                           ; 1 bytes @ 0x2A
  1254                           
  1255                           
  1256                           ; 1 bytes @ 0x2A
  1257  004A                     	ds	4
  1258  004E                     conv@result:
  1259                           
  1260                           ; 4 bytes @ 0x2E
  1261  004E                     	ds	3
  1262  0051                     _fround$1209:
  1263                           
  1264                           ; 4 bytes @ 0x31
  1265  0051                     	ds	1
  1266  0052                     conv@aa:
  1267                           
  1268                           ; 1 bytes @ 0x32
  1269  0052                     	ds	2
  1270  0054                     _scale$1210:
  1271                           
  1272                           ; 4 bytes @ 0x34
  1273  0054                     	ds	1
  1274  0055                     _fround$1208:
  1275                           
  1276                           ; 4 bytes @ 0x35
  1277  0055                     	ds	3
  1278  0058                     scale@scl:
  1279                           
  1280                           ; 1 bytes @ 0x38
  1281  0058                     	ds	1
  1282  0059                     ?___fltol:
  1283  0059                     fround@prec:	
  1284                           ; 4 bytes @ 0x39
  1285                           
  1286  0059                     ___fltol@f1:	
  1287                           ; 1 bytes @ 0x39
  1288                           
  1289                           
  1290                           ; 4 bytes @ 0x39
  1291  0059                     	ds	1
  1292  005A                     ?___fladd:
  1293  005A                     ___fladd@b:	
  1294                           ; 4 bytes @ 0x3A
  1295                           
  1296                           
  1297                           ; 4 bytes @ 0x3A
  1298  005A                     	ds	3
  1299  005D                     ??___fltol:
  1300                           
  1301                           ; 1 bytes @ 0x3D
  1302  005D                     	ds	1
  1303  005E                     ___fladd@a:
  1304                           
  1305                           ; 4 bytes @ 0x3E
  1306  005E                     	ds	4
  1307  0062                     ??___fladd:
  1308  0062                     ___fltol@sign1:	
  1309                           ; 1 bytes @ 0x42
  1310                           
  1311                           
  1312                           ; 1 bytes @ 0x42
  1313  0062                     	ds	1
  1314  0063                     ___fltol@exp1:
  1315                           
  1316                           ; 1 bytes @ 0x43
  1317  0063                     	ds	7
  1318  006A                     ___fladd@signs:
  1319                           
  1320                           ; 1 bytes @ 0x4A
  1321  006A                     	ds	1
  1322  006B                     ___fladd@aexp:
  1323                           
  1324                           ; 1 bytes @ 0x4B
  1325  006B                     	ds	1
  1326  006C                     ___fladd@bexp:
  1327                           
  1328                           ; 1 bytes @ 0x4C
  1329  006C                     	ds	1
  1330  006D                     ___fladd@grs:
  1331                           
  1332                           ; 1 bytes @ 0x4D
  1333  006D                     	ds	1
  1334                           
  1335                           	psect	maintext
  1336  0827                     __pmaintext:	
  1337 ;;
  1338 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1339 ;;
  1340 ;; *************** function _main *****************
  1341 ;; Defined at:
  1342 ;;		line 128 in file "main.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : B00/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1356 ;;      Params:         0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0
  1358 ;;      Temps:          0       0       3       0       0
  1359 ;;      Totals:         0       0       3       0       0
  1360 ;;Total ram usage:        3 bytes
  1361 ;; Hardware stack levels required when called:    6
  1362 ;; This function calls:
  1363 ;;		_Lcd_Clear
  1364 ;;		_Lcd_Init
  1365 ;;		_Lcd_Set_Cursor
  1366 ;;		_Lcd_Write_String
  1367 ;;		_cfg_adc
  1368 ;;		_cfg_clk
  1369 ;;		_cfg_inte
  1370 ;;		_cfg_io
  1371 ;;		_cfg_usart
  1372 ;;		_conv
  1373 ;;		_send_crct
  1374 ;;		_sprintf
  1375 ;; This function is called by:
  1376 ;;		Startup code after reset
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           
  1381                           ;psect for function _main
  1382  0827                     _main:
  1383  0827                     l3583:	
  1384                           ;incstack = 0
  1385                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1386                           
  1387                           
  1388                           ;main.c: 129:     cfg_io();
  1389  0827  160A  158A  2156  120A  158A  	fcall	_cfg_io
  1390                           
  1391                           ;main.c: 130:     cfg_clk();
  1392  082C  160A  158A  212D  120A  158A  	fcall	_cfg_clk
  1393  0831                     l3585:
  1394                           
  1395                           ;main.c: 131:     cfg_inte();
  1396  0831  160A  158A  2135  120A  158A  	fcall	_cfg_inte
  1397  0836                     l3587:
  1398                           
  1399                           ;main.c: 132:     cfg_adc();
  1400  0836  160A  158A  218F  120A  158A  	fcall	_cfg_adc
  1401  083B                     l3589:
  1402                           
  1403                           ;main.c: 133:     cfg_usart();
  1404  083B  160A  158A  217A  120A  158A  	fcall	_cfg_usart
  1405  0840                     l3591:
  1406                           
  1407                           ;main.c: 135:     Lcd_Init();
  1408  0840  160A  158A  23B5  120A  158A  	fcall	_Lcd_Init
  1409  0845                     l3593:
  1410                           
  1411                           ;main.c: 136:     ADCON0bits.GO = 1;
  1412  0845  1283               	bcf	3,5	;RP0=0, select bank0
  1413  0846  1303               	bcf	3,6	;RP1=0, select bank0
  1414  0847  149F               	bsf	31,1	;volatile
  1415  0848                     l3595:
  1416                           
  1417                           ;main.c: 140:       Lcd_Clear();
  1418  0848  160A  158A  2149  120A  158A  	fcall	_Lcd_Clear
  1419  084D                     l3597:
  1420                           
  1421                           ;main.c: 141:       Lcd_Set_Cursor(1,1);
  1422  084D  1283               	bcf	3,5	;RP0=0, select bank0
  1423  084E  1303               	bcf	3,6	;RP1=0, select bank0
  1424  084F  01A0               	clrf	Lcd_Set_Cursor@b
  1425  0850  0AA0               	incf	Lcd_Set_Cursor@b,f
  1426  0851  3001               	movlw	1
  1427  0852  120A  158A  2001  120A  158A  	fcall	_Lcd_Set_Cursor
  1428  0857                     l3599:
  1429                           
  1430                           ;main.c: 142:       Lcd_Write_String(" S1:   S2:  S3:  ");
  1431  0857  30A6               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1432  0858  1283               	bcf	3,5	;RP0=0, select bank0
  1433  0859  1303               	bcf	3,6	;RP1=0, select bank0
  1434  085A  00A0               	movwf	Lcd_Write_String@a
  1435  085B  3080               	movlw	128
  1436  085C  00A1               	movwf	Lcd_Write_String@a+1
  1437  085D  160A  158A  2329  120A  158A  	fcall	_Lcd_Write_String
  1438  0862                     l3601:
  1439                           
  1440                           ;main.c: 143:       v11 = conv(V1);
  1441  0862  1683               	bsf	3,5	;RP0=1, select bank1
  1442  0863  1303               	bcf	3,6	;RP1=0, select bank1
  1443  0864  0866               	movf	_V1^(0+128),w
  1444  0865  160A  158A  22E9  120A  158A  	fcall	_conv
  1445  086A  1283               	bcf	3,5	;RP0=0, select bank0
  1446  086B  1303               	bcf	3,6	;RP1=0, select bank0
  1447  086C  0849               	movf	?_conv+3,w
  1448  086D  1683               	bsf	3,5	;RP0=1, select bank1
  1449  086E  1303               	bcf	3,6	;RP1=0, select bank1
  1450  086F  00E3               	movwf	(_v11+3)^(0+128)
  1451  0870  1283               	bcf	3,5	;RP0=0, select bank0
  1452  0871  1303               	bcf	3,6	;RP1=0, select bank0
  1453  0872  0848               	movf	?_conv+2,w
  1454  0873  1683               	bsf	3,5	;RP0=1, select bank1
  1455  0874  1303               	bcf	3,6	;RP1=0, select bank1
  1456  0875  00E2               	movwf	(_v11+2)^(0+128)
  1457  0876  1283               	bcf	3,5	;RP0=0, select bank0
  1458  0877  1303               	bcf	3,6	;RP1=0, select bank0
  1459  0878  0847               	movf	?_conv+1,w
  1460  0879  1683               	bsf	3,5	;RP0=1, select bank1
  1461  087A  1303               	bcf	3,6	;RP1=0, select bank1
  1462  087B  00E1               	movwf	(_v11+1)^(0+128)
  1463  087C  1283               	bcf	3,5	;RP0=0, select bank0
  1464  087D  1303               	bcf	3,6	;RP1=0, select bank0
  1465  087E  0846               	movf	?_conv,w
  1466  087F  1683               	bsf	3,5	;RP0=1, select bank1
  1467  0880  1303               	bcf	3,6	;RP1=0, select bank1
  1468  0881  00E0               	movwf	_v11^(0+128)
  1469  0882                     l3603:
  1470                           
  1471                           ;main.c: 144:       v22 = conv(V2);
  1472  0882  0865               	movf	_V2^(0+128),w
  1473  0883  160A  158A  22E9  120A  158A  	fcall	_conv
  1474  0888  1283               	bcf	3,5	;RP0=0, select bank0
  1475  0889  1303               	bcf	3,6	;RP1=0, select bank0
  1476  088A  0849               	movf	?_conv+3,w
  1477  088B  1683               	bsf	3,5	;RP0=1, select bank1
  1478  088C  1303               	bcf	3,6	;RP1=0, select bank1
  1479  088D  00DF               	movwf	(_v22+3)^(0+128)
  1480  088E  1283               	bcf	3,5	;RP0=0, select bank0
  1481  088F  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0890  0848               	movf	?_conv+2,w
  1483  0891  1683               	bsf	3,5	;RP0=1, select bank1
  1484  0892  1303               	bcf	3,6	;RP1=0, select bank1
  1485  0893  00DE               	movwf	(_v22+2)^(0+128)
  1486  0894  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0895  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0896  0847               	movf	?_conv+1,w
  1489  0897  1683               	bsf	3,5	;RP0=1, select bank1
  1490  0898  1303               	bcf	3,6	;RP1=0, select bank1
  1491  0899  00DD               	movwf	(_v22+1)^(0+128)
  1492  089A  1283               	bcf	3,5	;RP0=0, select bank0
  1493  089B  1303               	bcf	3,6	;RP1=0, select bank0
  1494  089C  0846               	movf	?_conv,w
  1495  089D  1683               	bsf	3,5	;RP0=1, select bank1
  1496  089E  1303               	bcf	3,6	;RP1=0, select bank1
  1497  089F  00DC               	movwf	_v22^(0+128)
  1498  08A0                     l3605:
  1499                           
  1500                           ;main.c: 145:       v33 = conv(V3);
  1501  08A0  3000               	movlw	0
  1502  08A1  160A  158A  22E9  120A  158A  	fcall	_conv
  1503  08A6  1283               	bcf	3,5	;RP0=0, select bank0
  1504  08A7  1303               	bcf	3,6	;RP1=0, select bank0
  1505  08A8  0849               	movf	?_conv+3,w
  1506  08A9  1683               	bsf	3,5	;RP0=1, select bank1
  1507  08AA  1303               	bcf	3,6	;RP1=0, select bank1
  1508  08AB  00DB               	movwf	(_v33+3)^(0+128)
  1509  08AC  1283               	bcf	3,5	;RP0=0, select bank0
  1510  08AD  1303               	bcf	3,6	;RP1=0, select bank0
  1511  08AE  0848               	movf	?_conv+2,w
  1512  08AF  1683               	bsf	3,5	;RP0=1, select bank1
  1513  08B0  1303               	bcf	3,6	;RP1=0, select bank1
  1514  08B1  00DA               	movwf	(_v33+2)^(0+128)
  1515  08B2  1283               	bcf	3,5	;RP0=0, select bank0
  1516  08B3  1303               	bcf	3,6	;RP1=0, select bank0
  1517  08B4  0847               	movf	?_conv+1,w
  1518  08B5  1683               	bsf	3,5	;RP0=1, select bank1
  1519  08B6  1303               	bcf	3,6	;RP1=0, select bank1
  1520  08B7  00D9               	movwf	(_v33+1)^(0+128)
  1521  08B8  1283               	bcf	3,5	;RP0=0, select bank0
  1522  08B9  1303               	bcf	3,6	;RP1=0, select bank0
  1523  08BA  0846               	movf	?_conv,w
  1524  08BB  1683               	bsf	3,5	;RP0=1, select bank1
  1525  08BC  1303               	bcf	3,6	;RP1=0, select bank1
  1526  08BD  00D8               	movwf	_v33^(0+128)
  1527  08BE                     l3607:
  1528                           
  1529                           ;main.c: 148:       Lcd_Set_Cursor(2,1);
  1530  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  1531  08BF  1303               	bcf	3,6	;RP1=0, select bank0
  1532  08C0  01A0               	clrf	Lcd_Set_Cursor@b
  1533  08C1  0AA0               	incf	Lcd_Set_Cursor@b,f
  1534  08C2  3002               	movlw	2
  1535  08C3  120A  158A  2001  120A  158A  	fcall	_Lcd_Set_Cursor
  1536  08C8                     l3609:
  1537                           
  1538                           ;main.c: 149:       sprintf(f1, "%3.1fV %3.2fV %3.2fV",v11, v22, v33);
  1539  08C8  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1540  08C9  1683               	bsf	3,5	;RP0=1, select bank1
  1541  08CA  1303               	bcf	3,6	;RP1=0, select bank1
  1542  08CB  00D5               	movwf	??_main^(0+128)
  1543  08CC  0855               	movf	??_main^(0+128),w
  1544  08CD  00A8               	movwf	sprintf@f^(0+128)
  1545  08CE  0863               	movf	(_v11+3)^(0+128),w
  1546  08CF  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1547  08D0  0862               	movf	(_v11+2)^(0+128),w
  1548  08D1  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1549  08D2  0861               	movf	(_v11+1)^(0+128),w
  1550  08D3  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1551  08D4  0860               	movf	_v11^(0+128),w
  1552  08D5  00A9               	movwf	(?_sprintf^(0+128)+1)
  1553  08D6  085F               	movf	(_v22+3)^(0+128),w
  1554  08D7  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1555  08D8  085E               	movf	(_v22+2)^(0+128),w
  1556  08D9  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1557  08DA  085D               	movf	(_v22+1)^(0+128),w
  1558  08DB  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1559  08DC  085C               	movf	_v22^(0+128),w
  1560  08DD  00AD               	movwf	(?_sprintf^(0+128)+5)
  1561  08DE  085B               	movf	(_v33+3)^(0+128),w
  1562  08DF  00B4               	movwf	((?_sprintf+3)^(0+128)+9)
  1563  08E0  085A               	movf	(_v33+2)^(0+128),w
  1564  08E1  00B3               	movwf	((?_sprintf+2)^(0+128)+9)
  1565  08E2  0859               	movf	(_v33+1)^(0+128),w
  1566  08E3  00B2               	movwf	((?_sprintf+1)^(0+128)+9)
  1567  08E4  0858               	movf	_v33^(0+128),w
  1568  08E5  00B1               	movwf	(?_sprintf^(0+128)+9)
  1569  08E6  309A               	movlw	(low (_f1| (0+256)))& (0+255)
  1570  08E7  160A  118A  24FC  120A  158A  	fcall	_sprintf
  1571  08EC                     l3611:
  1572                           
  1573                           ;main.c: 150:       Lcd_Write_String(f1);
  1574  08EC  309A               	movlw	(low (_f1| (0+256)))& (0+255)
  1575  08ED  1283               	bcf	3,5	;RP0=0, select bank0
  1576  08EE  1303               	bcf	3,6	;RP1=0, select bank0
  1577  08EF  00A0               	movwf	Lcd_Write_String@a
  1578  08F0  3001               	movlw	1
  1579  08F1  00A1               	movwf	Lcd_Write_String@a+1
  1580  08F2  160A  158A  2329  120A  158A  	fcall	_Lcd_Write_String
  1581  08F7                     l3613:
  1582                           
  1583                           ;main.c: 153:       TXREG = '\f';
  1584  08F7  300C               	movlw	12
  1585  08F8  1283               	bcf	3,5	;RP0=0, select bank0
  1586  08F9  1303               	bcf	3,6	;RP1=0, select bank0
  1587  08FA  0099               	movwf	25	;volatile
  1588  08FB                     l3615:
  1589                           
  1590                           ;main.c: 154:       send_crct(f1);
  1591  08FB  309A               	movlw	(low (_f1| (0+256)))& (0+255)
  1592  08FC  160A  158A  2213  120A  158A  	fcall	_send_crct
  1593  0901                     l3617:
  1594                           
  1595                           ;main.c: 157:       _delay((unsigned long)((100)*(8000000/4000.0)));
  1596  0901  3002               	movlw	2
  1597  0902  1683               	bsf	3,5	;RP0=1, select bank1
  1598  0903  1303               	bcf	3,6	;RP1=0, select bank1
  1599  0904  00D7               	movwf	(??_main^(0+128)+2)
  1600  0905  3004               	movlw	4
  1601  0906  00D6               	movwf	(??_main^(0+128)+1)
  1602  0907  30B9               	movlw	185
  1603  0908  00D5               	movwf	??_main^(0+128)
  1604  0909                     u5837:
  1605  0909  0BD5               	decfsz	??_main^(0+128),f
  1606  090A  2909               	goto	u5837
  1607  090B  0BD6               	decfsz	(??_main^(0+128)+1),f
  1608  090C  2909               	goto	u5837
  1609  090D  0BD7               	decfsz	(??_main^(0+128)+2),f
  1610  090E  2909               	goto	u5837
  1611  090F  2910               	nop2
  1612  0910                     l3619:
  1613                           
  1614                           ;main.c: 159:       if(ADCON0bits.GO == 0){
  1615  0910  1283               	bcf	3,5	;RP0=0, select bank0
  1616  0911  1303               	bcf	3,6	;RP1=0, select bank0
  1617  0912  189F               	btfsc	31,1	;volatile
  1618  0913  2915               	goto	u5811
  1619  0914  2916               	goto	u5810
  1620  0915                     u5811:
  1621  0915  2848               	goto	l3595
  1622  0916                     u5810:
  1623  0916                     l3621:
  1624                           
  1625                           ;main.c: 160:         if (ADCON0bits.CHS == 5){
  1626  0916  0C1F               	rrf	31,w	;volatile
  1627  0917  1683               	bsf	3,5	;RP0=1, select bank1
  1628  0918  1303               	bcf	3,6	;RP1=0, select bank1
  1629  0919  00D5               	movwf	??_main^(0+128)
  1630  091A  0C55               	rrf	??_main^(0+128),w
  1631  091B  390F               	andlw	15
  1632  091C  3A05               	xorlw	5
  1633  091D  1D03               	skipz
  1634  091E  2920               	goto	u5821
  1635  091F  2921               	goto	u5820
  1636  0920                     u5821:
  1637  0920  2928               	goto	l3625
  1638  0921                     u5820:
  1639  0921                     l3623:
  1640                           
  1641                           ;main.c: 161:             ADCON0bits.CHS = 6;
  1642  0921  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0922  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0923  081F               	movf	31,w	;volatile
  1645  0924  39C3               	andlw	-61
  1646  0925  3818               	iorlw	24
  1647  0926  009F               	movwf	31	;volatile
  1648                           
  1649                           ;main.c: 162:         }
  1650  0927  292E               	goto	l3627
  1651  0928                     l3625:
  1652                           
  1653                           ;main.c: 164:             ADCON0bits.CHS = 5;
  1654  0928  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0929  1303               	bcf	3,6	;RP1=0, select bank0
  1656  092A  081F               	movf	31,w	;volatile
  1657  092B  39C3               	andlw	-61
  1658  092C  3814               	iorlw	20
  1659  092D  009F               	movwf	31	;volatile
  1660  092E                     l3627:
  1661                           
  1662                           ;main.c: 166:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  1663  092E  3020               	movlw	32
  1664  092F  1683               	bsf	3,5	;RP0=1, select bank1
  1665  0930  1303               	bcf	3,6	;RP1=0, select bank1
  1666  0931  00D5               	movwf	??_main^(0+128)
  1667  0932                     u5847:
  1668  0932  0BD5               	decfsz	??_main^(0+128),f
  1669  0933  2932               	goto	u5847
  1670  0934  0000               	nop
  1671  0935                     l3629:
  1672                           
  1673                           ;main.c: 167:         ADCON0bits.GO = 1;
  1674  0935  1283               	bcf	3,5	;RP0=0, select bank0
  1675  0936  1303               	bcf	3,6	;RP1=0, select bank0
  1676  0937  149F               	bsf	31,1	;volatile
  1677  0938  2848               	goto	l3595
  1678  0939  120A  118A  280C   	ljmp	start
  1679  093C                     __end_of_main:
  1680                           
  1681                           	psect	text1
  1682  14FC                     __ptext1:	
  1683 ;; *************** function _sprintf *****************
  1684 ;; Defined at:
  1685 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  sp              1    wreg     PTR unsigned char 
  1688 ;;		 -> f1(10), 
  1689 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1690 ;;		 -> STR_2(21), 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  sp              1   49[BANK1 ] PTR unsigned char 
  1693 ;;		 -> f1(10), 
  1694 ;;  fval            4   45[BANK1 ] PTR unsigned char 
  1695 ;;  tmpval          4   39[BANK1 ] struct .
  1696 ;;  val             4   31[BANK1 ] unsigned long 
  1697 ;;  prec            2   50[BANK1 ] int 
  1698 ;;  eexp            2   43[BANK1 ] int 
  1699 ;;  width           2   37[BANK1 ] int 
  1700 ;;  flag            2   35[BANK1 ] unsigned short 
  1701 ;;  cp              2    0        PTR const unsigned char 
  1702 ;;  len             2    0        unsigned int 
  1703 ;;  c               1   52[BANK1 ] unsigned char 
  1704 ;;  ap              1   30[BANK1 ] PTR void [1]
  1705 ;;		 -> ?_sprintf(2), 
  1706 ;;  d               1    0        unsigned char 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  2    8[BANK1 ] int 
  1709 ;; Registers used:
  1710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1716 ;;      Params:         0       0      13       0       0
  1717 ;;      Locals:         0       0      27       0       0
  1718 ;;      Temps:          0       0       5       0       0
  1719 ;;      Totals:         0       0      45       0       0
  1720 ;;Total ram usage:       45 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    5
  1723 ;; This function calls:
  1724 ;;		___awdiv
  1725 ;;		___fladd
  1726 ;;		___fleq
  1727 ;;		___flge
  1728 ;;		___flmul
  1729 ;;		___flneg
  1730 ;;		___flsub
  1731 ;;		___fltol
  1732 ;;		___lldiv
  1733 ;;		___llmod
  1734 ;;		___wmul
  1735 ;;		___xxtofl
  1736 ;;		__div_to_l_
  1737 ;;		__tdiv_to_l_
  1738 ;;		_fround
  1739 ;;		_isdigit
  1740 ;;		_scale
  1741 ;; This function is called by:
  1742 ;;		_main
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           
  1747                           ;psect for function _sprintf
  1748  14FC                     _sprintf:
  1749                           
  1750                           ;incstack = 0
  1751                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1752                           ;sprintf@sp stored from wreg
  1753  14FC  1683               	bsf	3,5	;RP0=1, select bank1
  1754  14FD  1303               	bcf	3,6	;RP1=0, select bank1
  1755  14FE  00D1               	movwf	sprintf@sp^(0+128)
  1756  14FF                     l3305:
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1759  14FF  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1760  1500  00B5               	movwf	??_sprintf^(0+128)
  1761  1501  0835               	movf	??_sprintf^(0+128),w
  1762  1502  00BE               	movwf	sprintf@ap^(0+128)
  1763  1503                     L1:
  1764                           
  1765                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1766  1503  120A  118A  2DA4   	goto	l3555
  1767  1506                     l3307:
  1768                           
  1769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1770  1506  3025               	movlw	37
  1771  1507  0654               	xorwf	sprintf@c^(0+128),w
  1772  1508  1903               	btfsc	3,2
  1773  1509  2D0B               	goto	u5311
  1774  150A  2D0C               	goto	u5310
  1775  150B                     u5311:
  1776  150B  2D18               	goto	l3313
  1777  150C                     u5310:
  1778  150C                     l3309:
  1779                           
  1780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1781  150C  0854               	movf	sprintf@c^(0+128),w
  1782  150D  00B5               	movwf	??_sprintf^(0+128)
  1783  150E  0851               	movf	sprintf@sp^(0+128),w
  1784  150F  0084               	movwf	4
  1785  1510  0835               	movf	??_sprintf^(0+128),w
  1786  1511  1783               	bsf	3,7	;select IRP bank2
  1787  1512  0080               	movwf	0
  1788  1513                     l3311:
  1789  1513  3001               	movlw	1
  1790  1514  00B5               	movwf	??_sprintf^(0+128)
  1791  1515  0835               	movf	??_sprintf^(0+128),w
  1792  1516  07D1               	addwf	sprintf@sp^(0+128),f
  1793                           
  1794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1795  1517  2D03               	goto	L1
  1796  1518                     l3313:
  1797                           
  1798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1799  1518  01C5               	clrf	sprintf@width^(0+128)
  1800  1519  01C6               	clrf	(sprintf@width+1)^(0+128)
  1801                           
  1802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1803  151A  01C3               	clrf	sprintf@flag^(0+128)
  1804  151B  01C4               	clrf	(sprintf@flag+1)^(0+128)
  1805  151C                     l3315:
  1806                           
  1807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1808  151C  0828               	movf	sprintf@f^(0+128),w
  1809  151D  0084               	movwf	4
  1810  151E  160A  118A  200A  160A  118A  	fcall	stringdir
  1811  1523  160A  158A  2168  160A  118A  	fcall	_isdigit
  1812  1528  1C03               	btfss	3,0
  1813  1529  2D2B               	goto	u5321
  1814  152A  2D2C               	goto	u5320
  1815  152B                     u5321:
  1816  152B  2D6C               	goto	l3327
  1817  152C                     u5320:
  1818  152C                     l3317:
  1819                           
  1820                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1821  152C  1683               	bsf	3,5	;RP0=1, select bank1
  1822  152D  1303               	bcf	3,6	;RP1=0, select bank1
  1823  152E  01C5               	clrf	sprintf@width^(0+128)
  1824  152F  01C6               	clrf	(sprintf@width+1)^(0+128)
  1825  1530                     l3319:
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1828  1530  300A               	movlw	10
  1829  1531  00F5               	movwf	___wmul@multiplier
  1830  1532  3000               	movlw	0
  1831  1533  00F6               	movwf	___wmul@multiplier+1
  1832  1534  1683               	bsf	3,5	;RP0=1, select bank1
  1833  1535  1303               	bcf	3,6	;RP1=0, select bank1
  1834  1536  0846               	movf	(sprintf@width+1)^(0+128),w
  1835  1537  00F8               	movwf	___wmul@multiplicand+1
  1836  1538  0845               	movf	sprintf@width^(0+128),w
  1837  1539  00F7               	movwf	___wmul@multiplicand
  1838  153A  120A  118A  27CA  160A  118A  	fcall	___wmul
  1839  153F  0876               	movf	?___wmul+1,w
  1840  1540  1683               	bsf	3,5	;RP0=1, select bank1
  1841  1541  1303               	bcf	3,6	;RP1=0, select bank1
  1842  1542  00C6               	movwf	(sprintf@width+1)^(0+128)
  1843  1543  0875               	movf	?___wmul,w
  1844  1544  00C5               	movwf	sprintf@width^(0+128)
  1845  1545                     l3321:
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1848  1545  0828               	movf	sprintf@f^(0+128),w
  1849  1546  0084               	movwf	4
  1850  1547  160A  118A  200A  160A  118A  	fcall	stringdir
  1851  154C  3ED0               	addlw	208
  1852  154D  00B5               	movwf	??_sprintf^(0+128)
  1853  154E  30FF               	movlw	255
  1854  154F  1803               	skipnc
  1855  1550  3000               	movlw	0
  1856  1551  00B6               	movwf	(??_sprintf^(0+128)+1)
  1857  1552  0835               	movf	??_sprintf^(0+128),w
  1858  1553  07C5               	addwf	sprintf@width^(0+128),f
  1859  1554  1803               	skipnc
  1860  1555  0AC6               	incf	(sprintf@width+1)^(0+128),f
  1861  1556  0836               	movf	(??_sprintf+1)^(0+128),w
  1862  1557  07C6               	addwf	(sprintf@width+1)^(0+128),f
  1863  1558                     l3323:
  1864  1558  3001               	movlw	1
  1865  1559  00B5               	movwf	??_sprintf^(0+128)
  1866  155A  0835               	movf	??_sprintf^(0+128),w
  1867  155B  07A8               	addwf	sprintf@f^(0+128),f
  1868  155C                     l3325:
  1869                           
  1870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1871  155C  0828               	movf	sprintf@f^(0+128),w
  1872  155D  0084               	movwf	4
  1873  155E  160A  118A  200A  160A  118A  	fcall	stringdir
  1874  1563  160A  158A  2168  160A  118A  	fcall	_isdigit
  1875  1568  1803               	btfsc	3,0
  1876  1569  2D6B               	goto	u5331
  1877  156A  2D6C               	goto	u5330
  1878  156B                     u5331:
  1879  156B  2D30               	goto	l3319
  1880  156C                     u5330:
  1881  156C                     l3327:
  1882                           
  1883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1884  156C  1683               	bsf	3,5	;RP0=1, select bank1
  1885  156D  1303               	bcf	3,6	;RP1=0, select bank1
  1886  156E  0828               	movf	sprintf@f^(0+128),w
  1887  156F  0084               	movwf	4
  1888  1570  160A  118A  200A  160A  118A  	fcall	stringdir
  1889  1575  3A2E               	xorlw	46
  1890  1576  1D03               	skipz
  1891  1577  2D79               	goto	u5341
  1892  1578  2D7A               	goto	u5340
  1893  1579                     u5341:
  1894  1579  2DBF               	goto	l3343
  1895  157A                     u5340:
  1896  157A                     l3329:
  1897                           
  1898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1899  157A  1744               	bsf	(sprintf@flag^(0+128)+1),6
  1900  157B                     l3331:
  1901                           
  1902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1903  157B  3001               	movlw	1
  1904  157C  00B5               	movwf	??_sprintf^(0+128)
  1905  157D  0835               	movf	??_sprintf^(0+128),w
  1906  157E  07A8               	addwf	sprintf@f^(0+128),f
  1907  157F                     l3333:
  1908                           
  1909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1910  157F  01D2               	clrf	sprintf@prec^(0+128)
  1911  1580  01D3               	clrf	(sprintf@prec+1)^(0+128)
  1912                           
  1913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1914  1581  2DAE               	goto	l3341
  1915  1582                     l3335:
  1916                           
  1917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1918  1582  300A               	movlw	10
  1919  1583  00F5               	movwf	___wmul@multiplier
  1920  1584  3000               	movlw	0
  1921  1585  00F6               	movwf	___wmul@multiplier+1
  1922  1586  1683               	bsf	3,5	;RP0=1, select bank1
  1923  1587  1303               	bcf	3,6	;RP1=0, select bank1
  1924  1588  0853               	movf	(sprintf@prec+1)^(0+128),w
  1925  1589  00F8               	movwf	___wmul@multiplicand+1
  1926  158A  0852               	movf	sprintf@prec^(0+128),w
  1927  158B  00F7               	movwf	___wmul@multiplicand
  1928  158C  120A  118A  27CA  160A  118A  	fcall	___wmul
  1929  1591  0876               	movf	?___wmul+1,w
  1930  1592  1683               	bsf	3,5	;RP0=1, select bank1
  1931  1593  1303               	bcf	3,6	;RP1=0, select bank1
  1932  1594  00D3               	movwf	(sprintf@prec+1)^(0+128)
  1933  1595  0875               	movf	?___wmul,w
  1934  1596  00D2               	movwf	sprintf@prec^(0+128)
  1935  1597                     l3337:
  1936                           
  1937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1938  1597  0828               	movf	sprintf@f^(0+128),w
  1939  1598  0084               	movwf	4
  1940  1599  160A  118A  200A  160A  118A  	fcall	stringdir
  1941  159E  3ED0               	addlw	208
  1942  159F  00B5               	movwf	??_sprintf^(0+128)
  1943  15A0  30FF               	movlw	255
  1944  15A1  1803               	skipnc
  1945  15A2  3000               	movlw	0
  1946  15A3  00B6               	movwf	(??_sprintf^(0+128)+1)
  1947  15A4  0835               	movf	??_sprintf^(0+128),w
  1948  15A5  07D2               	addwf	sprintf@prec^(0+128),f
  1949  15A6  1803               	skipnc
  1950  15A7  0AD3               	incf	(sprintf@prec+1)^(0+128),f
  1951  15A8  0836               	movf	(??_sprintf+1)^(0+128),w
  1952  15A9  07D3               	addwf	(sprintf@prec+1)^(0+128),f
  1953  15AA                     l3339:
  1954  15AA  3001               	movlw	1
  1955  15AB  00B5               	movwf	??_sprintf^(0+128)
  1956  15AC  0835               	movf	??_sprintf^(0+128),w
  1957  15AD  07A8               	addwf	sprintf@f^(0+128),f
  1958  15AE                     l3341:
  1959                           
  1960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1961  15AE  0828               	movf	sprintf@f^(0+128),w
  1962  15AF  0084               	movwf	4
  1963  15B0  160A  118A  200A  160A  118A  	fcall	stringdir
  1964  15B5  160A  158A  2168  160A  118A  	fcall	_isdigit
  1965  15BA  1803               	btfsc	3,0
  1966  15BB  2DBD               	goto	u5351
  1967  15BC  2DBE               	goto	u5350
  1968  15BD                     u5351:
  1969  15BD  2D82               	goto	l3335
  1970  15BE                     u5350:
  1971  15BE  2DC5               	goto	l3349
  1972  15BF                     l3343:
  1973                           
  1974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1975  15BF  01D2               	clrf	sprintf@prec^(0+128)
  1976  15C0  01D3               	clrf	(sprintf@prec+1)^(0+128)
  1977  15C1                     l3345:
  1978                           
  1979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1980  15C1  1644               	bsf	(sprintf@flag^(0+128)+1),4
  1981  15C2  2DC5               	goto	l3349
  1982  15C3                     l359:	
  1983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1984                           
  1985                           
  1986                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1987  15C3  1544               	bsf	(sprintf@flag^(0+128)+1),2
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1990  15C4  2DE1               	goto	l3351
  1991  15C5                     l3349:
  1992  15C5  3001               	movlw	1
  1993  15C6  1683               	bsf	3,5	;RP0=1, select bank1
  1994  15C7  1303               	bcf	3,6	;RP1=0, select bank1
  1995  15C8  07A8               	addwf	sprintf@f^(0+128),f
  1996  15C9  30FF               	movlw	-1
  1997  15CA  0728               	addwf	sprintf@f^(0+128),w
  1998  15CB  0084               	movwf	4
  1999  15CC  160A  118A  200A  160A  118A  	fcall	stringdir
  2000  15D1  00D4               	movwf	sprintf@c^(0+128)
  2001  15D2  00B5               	movwf	??_sprintf^(0+128)
  2002  15D3  01B6               	clrf	(??_sprintf^(0+128)+1)
  2003                           
  2004                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2005                           ; Switch size 1, requested type "simple"
  2006                           ; Number of cases is 1, Range of values is 0 to 0
  2007                           ; switch strategies available:
  2008                           ; Name         Instructions Cycles
  2009                           ; simple_byte            4     3 (average)
  2010                           ; direct_byte           11     8 (fixed)
  2011                           ; jumptable            260     6 (fixed)
  2012                           ;	Chosen strategy is simple_byte
  2013  15D4  0836               	movf	(??_sprintf+1)^(0+128),w
  2014  15D5  3A00               	xorlw	0	; case 0
  2015  15D6  1903               	skipnz
  2016  15D7  2DD9               	goto	l3669
  2017  15D8  2D03               	goto	L1
  2018  15D9                     l3669:
  2019                           
  2020                           ; Switch size 1, requested type "simple"
  2021                           ; Number of cases is 2, Range of values is 0 to 102
  2022                           ; switch strategies available:
  2023                           ; Name         Instructions Cycles
  2024                           ; simple_byte            7     4 (average)
  2025                           ; jumptable            260     6 (fixed)
  2026                           ;	Chosen strategy is simple_byte
  2027  15D9  0835               	movf	??_sprintf^(0+128),w
  2028  15DA  3A00               	xorlw	0	; case 0
  2029  15DB  1903               	skipnz
  2030  15DC  2FFD               	goto	L3
  2031  15DD  3A66               	xorlw	102	; case 102
  2032  15DE  1903               	skipnz
  2033  15DF  2DC3               	goto	l359
  2034  15E0  2D03               	goto	L1
  2035  15E1                     l3351:
  2036                           
  2037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2038  15E1  3000               	movlw	0
  2039  15E2  0543               	andwf	sprintf@flag^(0+128),w
  2040  15E3  00B5               	movwf	??_sprintf^(0+128)
  2041  15E4  3007               	movlw	7
  2042  15E5  0544               	andwf	(sprintf@flag+1)^(0+128),w
  2043  15E6  00B6               	movwf	(??_sprintf+1)^(0+128)
  2044  15E7  0835               	movf	??_sprintf^(0+128),w
  2045  15E8  0436               	iorwf	(??_sprintf^(0+128)+1),w
  2046  15E9  1903               	btfsc	3,2
  2047  15EA  2DEC               	goto	u5361
  2048  15EB  2DEF               	goto	u5360
  2049  15EC                     u5361:
  2050  15EC  120A  118A  2CDF   	goto	l3509
  2051  15EF                     u5360:
  2052  15EF                     l3353:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2055  15EF  1E44               	btfss	(sprintf@flag+1)^(0+128),4
  2056  15F0  2DF2               	goto	u5371
  2057  15F1  2DF3               	goto	u5370
  2058  15F2                     u5371:
  2059  15F2  2DF7               	goto	l3357
  2060  15F3                     u5370:
  2061  15F3                     l3355:
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2064  15F3  3006               	movlw	6
  2065  15F4  00D2               	movwf	sprintf@prec^(0+128)
  2066  15F5  3000               	movlw	0
  2067  15F6  00D3               	movwf	(sprintf@prec^(0+128)+1)
  2068  15F7                     l3357:
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2071  15F7  083E               	movf	sprintf@ap^(0+128),w
  2072  15F8  0084               	movwf	4
  2073  15F9  1383               	bcf	3,7	;select IRP bank0
  2074  15FA  0800               	movf	0,w
  2075  15FB  00CD               	movwf	sprintf@fval^(0+128)
  2076  15FC  0A84               	incf	4,f
  2077  15FD  0800               	movf	0,w
  2078  15FE  00CE               	movwf	(sprintf@fval+1)^(0+128)
  2079  15FF  0A84               	incf	4,f
  2080  1600  0800               	movf	0,w
  2081  1601  00CF               	movwf	(sprintf@fval+2)^(0+128)
  2082  1602  0A84               	incf	4,f
  2083  1603  0800               	movf	0,w
  2084  1604  00D0               	movwf	(sprintf@fval+3)^(0+128)
  2085  1605                     l3359:
  2086  1605  3004               	movlw	4
  2087  1606  00B5               	movwf	??_sprintf^(0+128)
  2088  1607  0835               	movf	??_sprintf^(0+128),w
  2089  1608  07BE               	addwf	sprintf@ap^(0+128),f
  2090  1609                     l3361:
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2093  1609  0850               	movf	(sprintf@fval+3)^(0+128),w
  2094  160A  1283               	bcf	3,5	;RP0=0, select bank0
  2095  160B  1303               	bcf	3,6	;RP1=0, select bank0
  2096  160C  00A3               	movwf	___flge@ff1+3
  2097  160D  1683               	bsf	3,5	;RP0=1, select bank1
  2098  160E  1303               	bcf	3,6	;RP1=0, select bank1
  2099  160F  084F               	movf	(sprintf@fval+2)^(0+128),w
  2100  1610  1283               	bcf	3,5	;RP0=0, select bank0
  2101  1611  1303               	bcf	3,6	;RP1=0, select bank0
  2102  1612  00A2               	movwf	___flge@ff1+2
  2103  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2104  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2105  1615  084E               	movf	(sprintf@fval+1)^(0+128),w
  2106  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2107  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2108  1618  00A1               	movwf	___flge@ff1+1
  2109  1619  1683               	bsf	3,5	;RP0=1, select bank1
  2110  161A  1303               	bcf	3,6	;RP1=0, select bank1
  2111  161B  084D               	movf	sprintf@fval^(0+128),w
  2112  161C  1283               	bcf	3,5	;RP0=0, select bank0
  2113  161D  1303               	bcf	3,6	;RP1=0, select bank0
  2114  161E  00A0               	movwf	___flge@ff1
  2115  161F  3000               	movlw	0
  2116  1620  00A7               	movwf	___flge@ff2+3
  2117  1621  3000               	movlw	0
  2118  1622  00A6               	movwf	___flge@ff2+2
  2119  1623  3000               	movlw	0
  2120  1624  00A5               	movwf	___flge@ff2+1
  2121  1625  3000               	movlw	0
  2122  1626  00A4               	movwf	___flge@ff2
  2123  1627  160A  158A  26A0  160A  118A  	fcall	___flge
  2124  162C  1803               	btfsc	3,0
  2125  162D  2E2F               	goto	u5381
  2126  162E  2E30               	goto	u5380
  2127  162F                     u5381:
  2128  162F  2E4D               	goto	l3367
  2129  1630                     u5380:
  2130  1630                     l3363:
  2131                           
  2132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2133  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2134  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2135  1632  0850               	movf	(sprintf@fval+3)^(0+128),w
  2136  1633  00F8               	movwf	___flneg@f1+3
  2137  1634  084F               	movf	(sprintf@fval+2)^(0+128),w
  2138  1635  00F7               	movwf	___flneg@f1+2
  2139  1636  084E               	movf	(sprintf@fval+1)^(0+128),w
  2140  1637  00F6               	movwf	___flneg@f1+1
  2141  1638  084D               	movf	sprintf@fval^(0+128),w
  2142  1639  00F5               	movwf	___flneg@f1
  2143  163A  120A  118A  27F5  160A  118A  	fcall	___flneg
  2144  163F  0878               	movf	?___flneg+3,w
  2145  1640  1683               	bsf	3,5	;RP0=1, select bank1
  2146  1641  1303               	bcf	3,6	;RP1=0, select bank1
  2147  1642  00D0               	movwf	(sprintf@fval+3)^(0+128)
  2148  1643  0877               	movf	?___flneg+2,w
  2149  1644  00CF               	movwf	(sprintf@fval+2)^(0+128)
  2150  1645  0876               	movf	?___flneg+1,w
  2151  1646  00CE               	movwf	(sprintf@fval+1)^(0+128)
  2152  1647  0875               	movf	?___flneg,w
  2153  1648  00CD               	movwf	sprintf@fval^(0+128)
  2154  1649                     l3365:
  2155                           
  2156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2157  1649  3003               	movlw	3
  2158  164A  04C3               	iorwf	sprintf@flag^(0+128),f
  2159  164B  3000               	movlw	0
  2160  164C  04C4               	iorwf	(sprintf@flag+1)^(0+128),f
  2161  164D                     l3367:
  2162                           
  2163                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2164  164D  1683               	bsf	3,5	;RP0=1, select bank1
  2165  164E  1303               	bcf	3,6	;RP1=0, select bank1
  2166  164F  01CB               	clrf	sprintf@eexp^(0+128)
  2167  1650  01CC               	clrf	(sprintf@eexp+1)^(0+128)
  2168  1651                     l3369:
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2171  1651  0850               	movf	(sprintf@fval+3)^(0+128),w
  2172  1652  1283               	bcf	3,5	;RP0=0, select bank0
  2173  1653  1303               	bcf	3,6	;RP1=0, select bank0
  2174  1654  00A3               	movwf	___fleq@ff1+3
  2175  1655  1683               	bsf	3,5	;RP0=1, select bank1
  2176  1656  1303               	bcf	3,6	;RP1=0, select bank1
  2177  1657  084F               	movf	(sprintf@fval+2)^(0+128),w
  2178  1658  1283               	bcf	3,5	;RP0=0, select bank0
  2179  1659  1303               	bcf	3,6	;RP1=0, select bank0
  2180  165A  00A2               	movwf	___fleq@ff1+2
  2181  165B  1683               	bsf	3,5	;RP0=1, select bank1
  2182  165C  1303               	bcf	3,6	;RP1=0, select bank1
  2183  165D  084E               	movf	(sprintf@fval+1)^(0+128),w
  2184  165E  1283               	bcf	3,5	;RP0=0, select bank0
  2185  165F  1303               	bcf	3,6	;RP1=0, select bank0
  2186  1660  00A1               	movwf	___fleq@ff1+1
  2187  1661  1683               	bsf	3,5	;RP0=1, select bank1
  2188  1662  1303               	bcf	3,6	;RP1=0, select bank1
  2189  1663  084D               	movf	sprintf@fval^(0+128),w
  2190  1664  1283               	bcf	3,5	;RP0=0, select bank0
  2191  1665  1303               	bcf	3,6	;RP1=0, select bank0
  2192  1666  00A0               	movwf	___fleq@ff1
  2193  1667  3000               	movlw	0
  2194  1668  00A7               	movwf	___fleq@ff2+3
  2195  1669  3000               	movlw	0
  2196  166A  00A6               	movwf	___fleq@ff2+2
  2197  166B  3000               	movlw	0
  2198  166C  00A5               	movwf	___fleq@ff2+1
  2199  166D  3000               	movlw	0
  2200  166E  00A4               	movwf	___fleq@ff2
  2201  166F  160A  158A  2402  160A  118A  	fcall	___fleq
  2202  1674  1803               	btfsc	3,0
  2203  1675  2E77               	goto	u5391
  2204  1676  2E78               	goto	u5390
  2205  1677                     u5391:
  2206  1677  2F94               	goto	l3395
  2207  1678                     u5390:
  2208  1678                     l3371:
  2209                           
  2210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2211  1678  1003               	clrc
  2212  1679  1683               	bsf	3,5	;RP0=1, select bank1
  2213  167A  1303               	bcf	3,6	;RP1=0, select bank1
  2214  167B  0D4F               	rlf	(sprintf@fval+2)^(0+128),w
  2215  167C  0D50               	rlf	(sprintf@fval+3)^(0+128),w
  2216  167D  3E82               	addlw	130
  2217  167E  00CB               	movwf	sprintf@eexp^(0+128)
  2218  167F  30FF               	movlw	255
  2219  1680  1803               	skipnc
  2220  1681  3000               	movlw	0
  2221  1682  00CC               	movwf	(sprintf@eexp^(0+128)+1)
  2222  1683                     l3373:
  2223                           
  2224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2225  1683  30FF               	movlw	255
  2226  1684  07CB               	addwf	sprintf@eexp^(0+128),f
  2227  1685  1803               	skipnc
  2228  1686  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
  2229  1687  30FF               	movlw	255
  2230  1688  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
  2231  1689                     l3375:
  2232                           
  2233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2234  1689  3003               	movlw	3
  2235  168A  00F5               	movwf	___wmul@multiplier
  2236  168B  3000               	movlw	0
  2237  168C  00F6               	movwf	___wmul@multiplier+1
  2238  168D  084C               	movf	(sprintf@eexp+1)^(0+128),w
  2239  168E  00F8               	movwf	___wmul@multiplicand+1
  2240  168F  084B               	movf	sprintf@eexp^(0+128),w
  2241  1690  00F7               	movwf	___wmul@multiplicand
  2242  1691  120A  118A  27CA  160A  118A  	fcall	___wmul
  2243  1696  0876               	movf	?___wmul+1,w
  2244  1697  1683               	bsf	3,5	;RP0=1, select bank1
  2245  1698  1303               	bcf	3,6	;RP1=0, select bank1
  2246  1699  00CC               	movwf	(sprintf@eexp+1)^(0+128)
  2247  169A  0875               	movf	?___wmul,w
  2248  169B  00CB               	movwf	sprintf@eexp^(0+128)
  2249  169C                     l3377:
  2250                           
  2251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2252  169C  300A               	movlw	10
  2253  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2254  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2255  169F  00A3               	movwf	___awdiv@divisor
  2256  16A0  3000               	movlw	0
  2257  16A1  00A4               	movwf	___awdiv@divisor+1
  2258  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  2259  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  2260  16A4  084C               	movf	(sprintf@eexp+1)^(0+128),w
  2261  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2262  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2263  16A7  00A6               	movwf	___awdiv@dividend+1
  2264  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2265  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2266  16AA  084B               	movf	sprintf@eexp^(0+128),w
  2267  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  2268  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  2269  16AD  00A5               	movwf	___awdiv@dividend
  2270  16AE  160A  158A  25BB  160A  118A  	fcall	___awdiv
  2271  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  2272  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  2273  16B5  0824               	movf	?___awdiv+1,w
  2274  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  2275  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2276  16B8  00CC               	movwf	(sprintf@eexp+1)^(0+128)
  2277  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2278  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2279  16BB  0823               	movf	?___awdiv,w
  2280  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2281  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2282  16BE  00CB               	movwf	sprintf@eexp^(0+128)
  2283  16BF                     l3379:
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2286  16BF  1FCC               	btfss	(sprintf@eexp+1)^(0+128),7
  2287  16C0  2EC2               	goto	u5401
  2288  16C1  2EC3               	goto	u5400
  2289  16C2                     u5401:
  2290  16C2  2EC9               	goto	l3383
  2291  16C3                     u5400:
  2292  16C3                     l3381:
  2293                           
  2294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2295  16C3  30FF               	movlw	255
  2296  16C4  07CB               	addwf	sprintf@eexp^(0+128),f
  2297  16C5  1803               	skipnc
  2298  16C6  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
  2299  16C7  30FF               	movlw	255
  2300  16C8  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
  2301  16C9                     l3383:
  2302                           
  2303                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2304  16C9  034B               	decf	sprintf@eexp^(0+128),w
  2305  16CA  3AFF               	xorlw	255
  2306  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  2307  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2308  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2309  16D2  0849               	movf	?_scale+3,w
  2310  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  2311  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  2312  16D5  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
  2313  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2314  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2315  16D8  0848               	movf	?_scale+2,w
  2316  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  2317  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  2318  16DB  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
  2319  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  2320  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  2321  16DE  0847               	movf	?_scale+1,w
  2322  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  2323  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  2324  16E1  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
  2325  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2326  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2327  16E4  0846               	movf	?_scale,w
  2328  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  2329  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  2330  16E7  00C7               	movwf	sprintf@tmpval^(0+128)
  2331  16E8                     l3385:
  2332                           
  2333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2334  16E8  0850               	movf	(sprintf@fval+3)^(0+128),w
  2335  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  2336  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  2337  16EB  00AF               	movwf	___flmul@b+3
  2338  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  2339  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  2340  16EE  084F               	movf	(sprintf@fval+2)^(0+128),w
  2341  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2342  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2343  16F1  00AE               	movwf	___flmul@b+2
  2344  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  2345  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  2346  16F4  084E               	movf	(sprintf@fval+1)^(0+128),w
  2347  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  2348  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  2349  16F7  00AD               	movwf	___flmul@b+1
  2350  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  2351  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  2352  16FA  084D               	movf	sprintf@fval^(0+128),w
  2353  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  2354  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  2355  16FD  00AC               	movwf	___flmul@b
  2356  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  2357  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  2358  1700  084A               	movf	(sprintf@tmpval+3)^(0+128),w
  2359  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2360  1702  1303               	bcf	3,6	;RP1=0, select bank0
  2361  1703  00B3               	movwf	___flmul@a+3
  2362  1704  1683               	bsf	3,5	;RP0=1, select bank1
  2363  1705  1303               	bcf	3,6	;RP1=0, select bank1
  2364  1706  0849               	movf	(sprintf@tmpval+2)^(0+128),w
  2365  1707  1283               	bcf	3,5	;RP0=0, select bank0
  2366  1708  1303               	bcf	3,6	;RP1=0, select bank0
  2367  1709  00B2               	movwf	___flmul@a+2
  2368  170A  1683               	bsf	3,5	;RP0=1, select bank1
  2369  170B  1303               	bcf	3,6	;RP1=0, select bank1
  2370  170C  0848               	movf	(sprintf@tmpval+1)^(0+128),w
  2371  170D  1283               	bcf	3,5	;RP0=0, select bank0
  2372  170E  1303               	bcf	3,6	;RP1=0, select bank0
  2373  170F  00B1               	movwf	___flmul@a+1
  2374  1710  1683               	bsf	3,5	;RP0=1, select bank1
  2375  1711  1303               	bcf	3,6	;RP1=0, select bank1
  2376  1712  0847               	movf	sprintf@tmpval^(0+128),w
  2377  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2378  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2379  1715  00B0               	movwf	___flmul@a
  2380  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  2381  171B  1283               	bcf	3,5	;RP0=0, select bank0
  2382  171C  1303               	bcf	3,6	;RP1=0, select bank0
  2383  171D  082F               	movf	?___flmul+3,w
  2384  171E  1683               	bsf	3,5	;RP0=1, select bank1
  2385  171F  1303               	bcf	3,6	;RP1=0, select bank1
  2386  1720  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
  2387  1721  1283               	bcf	3,5	;RP0=0, select bank0
  2388  1722  1303               	bcf	3,6	;RP1=0, select bank0
  2389  1723  082E               	movf	?___flmul+2,w
  2390  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2391  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2392  1726  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
  2393  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2394  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2395  1729  082D               	movf	?___flmul+1,w
  2396  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2397  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2398  172C  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
  2399  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2400  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2401  172F  082C               	movf	?___flmul,w
  2402  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2403  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2404  1732  00C7               	movwf	sprintf@tmpval^(0+128)
  2405  1733                     l3387:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2408  1733  084A               	movf	(sprintf@tmpval+3)^(0+128),w
  2409  1734  1283               	bcf	3,5	;RP0=0, select bank0
  2410  1735  1303               	bcf	3,6	;RP1=0, select bank0
  2411  1736  00A3               	movwf	___flge@ff1+3
  2412  1737  1683               	bsf	3,5	;RP0=1, select bank1
  2413  1738  1303               	bcf	3,6	;RP1=0, select bank1
  2414  1739  0849               	movf	(sprintf@tmpval+2)^(0+128),w
  2415  173A  1283               	bcf	3,5	;RP0=0, select bank0
  2416  173B  1303               	bcf	3,6	;RP1=0, select bank0
  2417  173C  00A2               	movwf	___flge@ff1+2
  2418  173D  1683               	bsf	3,5	;RP0=1, select bank1
  2419  173E  1303               	bcf	3,6	;RP1=0, select bank1
  2420  173F  0848               	movf	(sprintf@tmpval+1)^(0+128),w
  2421  1740  1283               	bcf	3,5	;RP0=0, select bank0
  2422  1741  1303               	bcf	3,6	;RP1=0, select bank0
  2423  1742  00A1               	movwf	___flge@ff1+1
  2424  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2425  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2426  1745  0847               	movf	sprintf@tmpval^(0+128),w
  2427  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2428  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2429  1748  00A0               	movwf	___flge@ff1
  2430  1749  303F               	movlw	63
  2431  174A  00A7               	movwf	___flge@ff2+3
  2432  174B  3080               	movlw	128
  2433  174C  00A6               	movwf	___flge@ff2+2
  2434  174D  3000               	movlw	0
  2435  174E  00A5               	movwf	___flge@ff2+1
  2436  174F  3000               	movlw	0
  2437  1750  00A4               	movwf	___flge@ff2
  2438  1751  160A  158A  26A0  160A  118A  	fcall	___flge
  2439  1756  1803               	btfsc	3,0
  2440  1757  2F59               	goto	u5411
  2441  1758  2F5A               	goto	u5410
  2442  1759                     u5411:
  2443  1759  2F63               	goto	l3391
  2444  175A                     u5410:
  2445  175A                     l3389:
  2446                           
  2447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2448  175A  30FF               	movlw	255
  2449  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2450  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2451  175D  07CB               	addwf	sprintf@eexp^(0+128),f
  2452  175E  1803               	skipnc
  2453  175F  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
  2454  1760  30FF               	movlw	255
  2455  1761  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
  2456  1762  2F94               	goto	l3395
  2457  1763                     l3391:
  2458  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2459  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2460  1765  084A               	movf	(sprintf@tmpval+3)^(0+128),w
  2461  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2462  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2463  1768  00A3               	movwf	___flge@ff1+3
  2464  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2465  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2466  176B  0849               	movf	(sprintf@tmpval+2)^(0+128),w
  2467  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2468  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2469  176E  00A2               	movwf	___flge@ff1+2
  2470  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2471  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2472  1771  0848               	movf	(sprintf@tmpval+1)^(0+128),w
  2473  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2474  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2475  1774  00A1               	movwf	___flge@ff1+1
  2476  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2477  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2478  1777  0847               	movf	sprintf@tmpval^(0+128),w
  2479  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2480  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2481  177A  00A0               	movwf	___flge@ff1
  2482  177B  3041               	movlw	65
  2483  177C  00A7               	movwf	___flge@ff2+3
  2484  177D  3020               	movlw	32
  2485  177E  00A6               	movwf	___flge@ff2+2
  2486  177F  3000               	movlw	0
  2487  1780  00A5               	movwf	___flge@ff2+1
  2488  1781  3000               	movlw	0
  2489  1782  00A4               	movwf	___flge@ff2
  2490  1783  160A  158A  26A0  160A  118A  	fcall	___flge
  2491  1788  1C03               	btfss	3,0
  2492  1789  2F8B               	goto	u5421
  2493  178A  2F8C               	goto	u5420
  2494  178B                     u5421:
  2495  178B  2F94               	goto	l3395
  2496  178C                     u5420:
  2497  178C                     l3393:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2500  178C  3001               	movlw	1
  2501  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2502  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2503  178F  07CB               	addwf	sprintf@eexp^(0+128),f
  2504  1790  1803               	skipnc
  2505  1791  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
  2506  1792  3000               	movlw	0
  2507  1793  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
  2508  1794                     l3395:
  2509                           
  2510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2511  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2512  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2513  1796  0853               	movf	(sprintf@prec+1)^(0+128),w
  2514  1797  3A80               	xorlw	128
  2515  1798  00FF               	movwf	btemp+1
  2516  1799  3080               	movlw	128
  2517  179A  027F               	subwf	btemp+1,w
  2518  179B  1D03               	skipz
  2519  179C  2F9F               	goto	u5435
  2520  179D  300D               	movlw	13
  2521  179E  0252               	subwf	sprintf@prec^(0+128),w
  2522  179F                     u5435:
  2523  179F  1803               	skipnc
  2524  17A0  2FA2               	goto	u5431
  2525  17A1  2FA3               	goto	u5430
  2526  17A2                     u5431:
  2527  17A2  2FEA               	goto	l3399
  2528  17A3                     u5430:
  2529  17A3                     l3397:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2532  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2533  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2534  17A5  0852               	movf	sprintf@prec^(0+128),w
  2535  17A6  120A  118A  25BD  160A  118A  	fcall	_fround
  2536  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2537  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2538  17AD  0849               	movf	?_fround+3,w
  2539  17AE  00DD               	movwf	___fladd@b+3
  2540  17AF  0848               	movf	?_fround+2,w
  2541  17B0  00DC               	movwf	___fladd@b+2
  2542  17B1  0847               	movf	?_fround+1,w
  2543  17B2  00DB               	movwf	___fladd@b+1
  2544  17B3  0846               	movf	?_fround,w
  2545  17B4  00DA               	movwf	___fladd@b
  2546  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2547  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2548  17B7  0850               	movf	(sprintf@fval+3)^(0+128),w
  2549  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2550  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2551  17BA  00E1               	movwf	___fladd@a+3
  2552  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2553  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2554  17BD  084F               	movf	(sprintf@fval+2)^(0+128),w
  2555  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2556  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2557  17C0  00E0               	movwf	___fladd@a+2
  2558  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2559  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2560  17C3  084E               	movf	(sprintf@fval+1)^(0+128),w
  2561  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2562  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2563  17C6  00DF               	movwf	___fladd@a+1
  2564  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2565  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2566  17C9  084D               	movf	sprintf@fval^(0+128),w
  2567  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2568  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2569  17CC  00DE               	movwf	___fladd@a
  2570  17CD  160A  118A  2274  160A  118A  	fcall	___fladd
  2571  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2572  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2573  17D4  085D               	movf	?___fladd+3,w
  2574  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2575  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2576  17D7  00D0               	movwf	(sprintf@fval+3)^(0+128)
  2577  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2578  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2579  17DA  085C               	movf	?___fladd+2,w
  2580  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2581  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2582  17DD  00CF               	movwf	(sprintf@fval+2)^(0+128)
  2583  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2584  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2585  17E0  085B               	movf	?___fladd+1,w
  2586  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2587  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2588  17E3  00CE               	movwf	(sprintf@fval+1)^(0+128)
  2589  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2590  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2591  17E6  085A               	movf	?___fladd,w
  2592  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2593  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2594  17E9  00CD               	movwf	sprintf@fval^(0+128)
  2595  17EA                     l3399:
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2598  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2599  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2600  17EC  084C               	movf	(sprintf@eexp+1)^(0+128),w
  2601  17ED  3A80               	xorlw	128
  2602  17EE  00FF               	movwf	btemp+1
  2603  17EF  3080               	movlw	128
  2604  17F0  027F               	subwf	btemp+1,w
  2605  17F1  1D03               	skipz
  2606  17F2  2FF5               	goto	u5445
  2607  17F3  300A               	movlw	10
  2608  17F4  024B               	subwf	sprintf@eexp^(0+128),w
  2609  17F5                     u5445:
  2610  17F5  1803               	skipnc
  2611  17F6  2FFA               	goto	u5441
  2612  17F7  120A  118A  2825   	goto	u5440
  2613  17FA                     u5441:
  2614  17FA  120A  118A  2884   	goto	l3407
  2615  17FD                     L3:
  2616  17FD                     L2:
  2617  17FD  120A  118A  2DB8   	ljmp	l3557
  2618                           
  2619                           	psect	text2
  2620  0C9D                     __ptext2:	
  2621 ;; *************** function _scale *****************
  2622 ;; Defined at:
  2623 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;  scl             1    wreg     char 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  scl             1   56[BANK0 ] char 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  4   38[BANK0 ] char 
  2630 ;; Registers used:
  2631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2637 ;;      Params:         0       4       0       0       0
  2638 ;;      Locals:         0       5       0       0       0
  2639 ;;      Temps:          0      10       0       0       0
  2640 ;;      Totals:         0      19       0       0       0
  2641 ;;Total ram usage:       19 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    4
  2644 ;; This function calls:
  2645 ;;		___awdiv
  2646 ;;		___awmod
  2647 ;;		___flmul
  2648 ;; This function is called by:
  2649 ;;		_sprintf
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           
  2654                           ;psect for function _scale
  2655  0C9D                     _scale:
  2656                           
  2657                           ;incstack = 0
  2658                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2659                           ;scale@scl stored from wreg
  2660  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2662  0C9F  00D8               	movwf	scale@scl
  2663  0CA0                     l2879:
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2666  0CA0  1FD8               	btfss	scale@scl,7
  2667  0CA1  2CA3               	goto	u4281
  2668  0CA2  2CA4               	goto	u4280
  2669  0CA3                     u4281:
  2670  0CA3  2E53               	goto	l2901
  2671  0CA4                     u4280:
  2672  0CA4                     l2881:
  2673                           
  2674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2675  0CA4  09D8               	comf	scale@scl,f
  2676  0CA5  0AD8               	incf	scale@scl,f
  2677  0CA6                     l2883:
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2680  0CA6  0858               	movf	scale@scl,w
  2681  0CA7  3A80               	xorlw	128
  2682  0CA8  3E12               	addlw	-238
  2683  0CA9  1C03               	skipc
  2684  0CAA  2CAC               	goto	u4291
  2685  0CAB  2CAD               	goto	u4290
  2686  0CAC                     u4291:
  2687  0CAC  2D97               	goto	l2891
  2688  0CAD                     u4290:
  2689  0CAD                     l2885:
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2692  0CAD  300A               	movlw	10
  2693  0CAE  00A3               	movwf	___awdiv@divisor
  2694  0CAF  3000               	movlw	0
  2695  0CB0  00A4               	movwf	___awdiv@divisor+1
  2696  0CB1  0858               	movf	scale@scl,w
  2697  0CB2  00F7               	movwf	___awmod@dividend
  2698  0CB3  01F8               	clrf	___awmod@dividend+1
  2699  0CB4  1BF7               	btfsc	___awmod@dividend,7
  2700  0CB5  03F8               	decf	___awmod@dividend+1,f
  2701  0CB6  3064               	movlw	100
  2702  0CB7  00F5               	movwf	___awmod@divisor
  2703  0CB8  3000               	movlw	0
  2704  0CB9  00F6               	movwf	___awmod@divisor+1
  2705  0CBA  160A  158A  24F8  120A  158A  	fcall	___awmod
  2706  0CBF  0876               	movf	?___awmod+1,w
  2707  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2708  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2709  0CC2  00A6               	movwf	___awdiv@dividend+1
  2710  0CC3  0875               	movf	?___awmod,w
  2711  0CC4  00A5               	movwf	___awdiv@dividend
  2712  0CC5  160A  158A  25BB  120A  158A  	fcall	___awdiv
  2713  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2714  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2715  0CCC  0823               	movf	?___awdiv,w
  2716  0CCD  00CA               	movwf	??_scale
  2717  0CCE  3001               	movlw	1
  2718  0CCF                     u4305:
  2719  0CCF  1003               	clrc
  2720  0CD0  0DCA               	rlf	??_scale,f
  2721  0CD1  3EFF               	addlw	-1
  2722  0CD2  1D03               	skipz
  2723  0CD3  2CCF               	goto	u4305
  2724  0CD4  1003               	clrc
  2725  0CD5  0D4A               	rlf	??_scale,w
  2726  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2727  0CD7  0084               	movwf	4
  2728  0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  2729  0CDD  00CB               	movwf	??_scale+1
  2730  0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  2731  0CE3  00CC               	movwf	??_scale+2
  2732  0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  2733  0CE9  00CD               	movwf	??_scale+3
  2734  0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  2735  0CEF  00CE               	movwf	??_scale+4
  2736  0CF0  084E               	movf	??_scale+4,w
  2737  0CF1  00AF               	movwf	___flmul@b+3
  2738  0CF2  084D               	movf	??_scale+3,w
  2739  0CF3  00AE               	movwf	___flmul@b+2
  2740  0CF4  084C               	movf	??_scale+2,w
  2741  0CF5  00AD               	movwf	___flmul@b+1
  2742  0CF6  084B               	movf	??_scale+1,w
  2743  0CF7  00AC               	movwf	___flmul@b
  2744  0CF8  3064               	movlw	100
  2745  0CF9  00A3               	movwf	___awdiv@divisor
  2746  0CFA  3000               	movlw	0
  2747  0CFB  00A4               	movwf	___awdiv@divisor+1
  2748  0CFC  0858               	movf	scale@scl,w
  2749  0CFD  00A5               	movwf	___awdiv@dividend
  2750  0CFE  01A6               	clrf	___awdiv@dividend+1
  2751  0CFF  1BA5               	btfsc	___awdiv@dividend,7
  2752  0D00  03A6               	decf	___awdiv@dividend+1,f
  2753  0D01  160A  158A  25BB  120A  158A  	fcall	___awdiv
  2754  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0D08  0823               	movf	?___awdiv,w
  2757  0D09  00CF               	movwf	??_scale+5
  2758  0D0A  3001               	movlw	1
  2759  0D0B                     u4315:
  2760  0D0B  1003               	clrc
  2761  0D0C  0DCF               	rlf	??_scale+5,f
  2762  0D0D  3EFF               	addlw	-1
  2763  0D0E  1D03               	skipz
  2764  0D0F  2D0B               	goto	u4315
  2765  0D10  1003               	clrc
  2766  0D11  0D4F               	rlf	??_scale+5,w
  2767  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2768  0D13  0084               	movwf	4
  2769  0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  2770  0D19  00D0               	movwf	??_scale+6
  2771  0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  2772  0D1F  00D1               	movwf	??_scale+7
  2773  0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  2774  0D25  00D2               	movwf	??_scale+8
  2775  0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  2776  0D2B  00D3               	movwf	??_scale+9
  2777  0D2C  0853               	movf	??_scale+9,w
  2778  0D2D  00B3               	movwf	___flmul@a+3
  2779  0D2E  0852               	movf	??_scale+8,w
  2780  0D2F  00B2               	movwf	___flmul@a+2
  2781  0D30  0851               	movf	??_scale+7,w
  2782  0D31  00B1               	movwf	___flmul@a+1
  2783  0D32  0850               	movf	??_scale+6,w
  2784  0D33  00B0               	movwf	___flmul@a
  2785  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2786  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2787  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2788  0D3B  082F               	movf	?___flmul+3,w
  2789  0D3C  00D7               	movwf	_scale$1210+3
  2790  0D3D  082E               	movf	?___flmul+2,w
  2791  0D3E  00D6               	movwf	_scale$1210+2
  2792  0D3F  082D               	movf	?___flmul+1,w
  2793  0D40  00D5               	movwf	_scale$1210+1
  2794  0D41  082C               	movf	?___flmul,w
  2795  0D42  00D4               	movwf	_scale$1210
  2796                           
  2797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2798  0D43  300A               	movlw	10
  2799  0D44  00F5               	movwf	___awmod@divisor
  2800  0D45  3000               	movlw	0
  2801  0D46  00F6               	movwf	___awmod@divisor+1
  2802  0D47  0858               	movf	scale@scl,w
  2803  0D48  00F7               	movwf	___awmod@dividend
  2804  0D49  01F8               	clrf	___awmod@dividend+1
  2805  0D4A  1BF7               	btfsc	___awmod@dividend,7
  2806  0D4B  03F8               	decf	___awmod@dividend+1,f
  2807  0D4C  160A  158A  24F8  120A  158A  	fcall	___awmod
  2808  0D51  0875               	movf	?___awmod,w
  2809  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2810  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2811  0D54  00CA               	movwf	??_scale
  2812  0D55  3001               	movlw	1
  2813  0D56                     u4325:
  2814  0D56  1003               	clrc
  2815  0D57  0DCA               	rlf	??_scale,f
  2816  0D58  3EFF               	addlw	-1
  2817  0D59  1D03               	skipz
  2818  0D5A  2D56               	goto	u4325
  2819  0D5B  1003               	clrc
  2820  0D5C  0D4A               	rlf	??_scale,w
  2821  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2822  0D5E  0084               	movwf	4
  2823  0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  2824  0D64  00CB               	movwf	??_scale+1
  2825  0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  2826  0D6A  00CC               	movwf	??_scale+2
  2827  0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  2828  0D70  00CD               	movwf	??_scale+3
  2829  0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  2830  0D76  00CE               	movwf	??_scale+4
  2831  0D77  084E               	movf	??_scale+4,w
  2832  0D78  00AF               	movwf	___flmul@b+3
  2833  0D79  084D               	movf	??_scale+3,w
  2834  0D7A  00AE               	movwf	___flmul@b+2
  2835  0D7B  084C               	movf	??_scale+2,w
  2836  0D7C  00AD               	movwf	___flmul@b+1
  2837  0D7D  084B               	movf	??_scale+1,w
  2838  0D7E  00AC               	movwf	___flmul@b
  2839  0D7F  0857               	movf	_scale$1210+3,w
  2840  0D80  00B3               	movwf	___flmul@a+3
  2841  0D81  0856               	movf	_scale$1210+2,w
  2842  0D82  00B2               	movwf	___flmul@a+2
  2843  0D83  0855               	movf	_scale$1210+1,w
  2844  0D84  00B1               	movwf	___flmul@a+1
  2845  0D85  0854               	movf	_scale$1210,w
  2846  0D86  00B0               	movwf	___flmul@a
  2847  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2848  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2849  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2850  0D8E  082F               	movf	?___flmul+3,w
  2851  0D8F  00C9               	movwf	?_scale+3
  2852  0D90  082E               	movf	?___flmul+2,w
  2853  0D91  00C8               	movwf	?_scale+2
  2854  0D92  082D               	movf	?___flmul+1,w
  2855  0D93  00C7               	movwf	?_scale+1
  2856  0D94  082C               	movf	?___flmul,w
  2857  0D95  00C6               	movwf	?_scale
  2858  0D96  2FFF               	goto	l337
  2859  0D97                     l2891:
  2860  0D97  0858               	movf	scale@scl,w
  2861  0D98  3A80               	xorlw	128
  2862  0D99  3E75               	addlw	-139
  2863  0D9A  1C03               	skipc
  2864  0D9B  2D9D               	goto	u4331
  2865  0D9C  2D9E               	goto	u4330
  2866  0D9D                     u4331:
  2867  0D9D  2E26               	goto	l2897
  2868  0D9E                     u4330:
  2869  0D9E                     l2893:
  2870                           
  2871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2872  0D9E  300A               	movlw	10
  2873  0D9F  00F5               	movwf	___awmod@divisor
  2874  0DA0  3000               	movlw	0
  2875  0DA1  00F6               	movwf	___awmod@divisor+1
  2876  0DA2  0858               	movf	scale@scl,w
  2877  0DA3  00F7               	movwf	___awmod@dividend
  2878  0DA4  01F8               	clrf	___awmod@dividend+1
  2879  0DA5  1BF7               	btfsc	___awmod@dividend,7
  2880  0DA6  03F8               	decf	___awmod@dividend+1,f
  2881  0DA7  160A  158A  24F8  120A  158A  	fcall	___awmod
  2882  0DAC  0875               	movf	?___awmod,w
  2883  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2884  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2885  0DAF  00CA               	movwf	??_scale
  2886  0DB0  3001               	movlw	1
  2887  0DB1                     u4345:
  2888  0DB1  1003               	clrc
  2889  0DB2  0DCA               	rlf	??_scale,f
  2890  0DB3  3EFF               	addlw	-1
  2891  0DB4  1D03               	skipz
  2892  0DB5  2DB1               	goto	u4345
  2893  0DB6  1003               	clrc
  2894  0DB7  0D4A               	rlf	??_scale,w
  2895  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2896  0DB9  0084               	movwf	4
  2897  0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  2898  0DBF  00CB               	movwf	??_scale+1
  2899  0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  2900  0DC5  00CC               	movwf	??_scale+2
  2901  0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  2902  0DCB  00CD               	movwf	??_scale+3
  2903  0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  2904  0DD1  00CE               	movwf	??_scale+4
  2905  0DD2  084E               	movf	??_scale+4,w
  2906  0DD3  00AF               	movwf	___flmul@b+3
  2907  0DD4  084D               	movf	??_scale+3,w
  2908  0DD5  00AE               	movwf	___flmul@b+2
  2909  0DD6  084C               	movf	??_scale+2,w
  2910  0DD7  00AD               	movwf	___flmul@b+1
  2911  0DD8  084B               	movf	??_scale+1,w
  2912  0DD9  00AC               	movwf	___flmul@b
  2913  0DDA  300A               	movlw	10
  2914  0DDB  00A3               	movwf	___awdiv@divisor
  2915  0DDC  3000               	movlw	0
  2916  0DDD  00A4               	movwf	___awdiv@divisor+1
  2917  0DDE  0858               	movf	scale@scl,w
  2918  0DDF  00A5               	movwf	___awdiv@dividend
  2919  0DE0  01A6               	clrf	___awdiv@dividend+1
  2920  0DE1  1BA5               	btfsc	___awdiv@dividend,7
  2921  0DE2  03A6               	decf	___awdiv@dividend+1,f
  2922  0DE3  160A  158A  25BB  120A  158A  	fcall	___awdiv
  2923  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2924  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2925  0DEA  0823               	movf	?___awdiv,w
  2926  0DEB  00CF               	movwf	??_scale+5
  2927  0DEC  3001               	movlw	1
  2928  0DED                     u4355:
  2929  0DED  1003               	clrc
  2930  0DEE  0DCF               	rlf	??_scale+5,f
  2931  0DEF  3EFF               	addlw	-1
  2932  0DF0  1D03               	skipz
  2933  0DF1  2DED               	goto	u4355
  2934  0DF2  1003               	clrc
  2935  0DF3  0D4F               	rlf	??_scale+5,w
  2936  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2937  0DF5  0084               	movwf	4
  2938  0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  2939  0DFB  00D0               	movwf	??_scale+6
  2940  0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  2941  0E01  00D1               	movwf	??_scale+7
  2942  0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  2943  0E07  00D2               	movwf	??_scale+8
  2944  0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  2945  0E0D  00D3               	movwf	??_scale+9
  2946  0E0E  0853               	movf	??_scale+9,w
  2947  0E0F  00B3               	movwf	___flmul@a+3
  2948  0E10  0852               	movf	??_scale+8,w
  2949  0E11  00B2               	movwf	___flmul@a+2
  2950  0E12  0851               	movf	??_scale+7,w
  2951  0E13  00B1               	movwf	___flmul@a+1
  2952  0E14  0850               	movf	??_scale+6,w
  2953  0E15  00B0               	movwf	___flmul@a
  2954  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2955  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2956  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2957  0E1D  082F               	movf	?___flmul+3,w
  2958  0E1E  00C9               	movwf	?_scale+3
  2959  0E1F  082E               	movf	?___flmul+2,w
  2960  0E20  00C8               	movwf	?_scale+2
  2961  0E21  082D               	movf	?___flmul+1,w
  2962  0E22  00C7               	movwf	?_scale+1
  2963  0E23  082C               	movf	?___flmul,w
  2964  0E24  00C6               	movwf	?_scale
  2965  0E25  2FFF               	goto	l337
  2966  0E26                     l2897:
  2967                           
  2968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2969  0E26  0858               	movf	scale@scl,w
  2970  0E27  00CA               	movwf	??_scale
  2971  0E28  3001               	movlw	1
  2972  0E29                     u4365:
  2973  0E29  1003               	clrc
  2974  0E2A  0DCA               	rlf	??_scale,f
  2975  0E2B  3EFF               	addlw	-1
  2976  0E2C  1D03               	skipz
  2977  0E2D  2E29               	goto	u4365
  2978  0E2E  1003               	clrc
  2979  0E2F  0D4A               	rlf	??_scale,w
  2980  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2981  0E31  0084               	movwf	4
  2982  0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  2983  0E37  00CB               	movwf	??_scale+1
  2984  0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  2985  0E3D  00CC               	movwf	??_scale+2
  2986  0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  2987  0E43  00CD               	movwf	??_scale+3
  2988  0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  2989  0E49  00CE               	movwf	??_scale+4
  2990  0E4A  084E               	movf	??_scale+4,w
  2991  0E4B  00C9               	movwf	?_scale+3
  2992  0E4C  084D               	movf	??_scale+3,w
  2993  0E4D  00C8               	movwf	?_scale+2
  2994  0E4E  084C               	movf	??_scale+2,w
  2995  0E4F  00C7               	movwf	?_scale+1
  2996  0E50  084B               	movf	??_scale+1,w
  2997  0E51  00C6               	movwf	?_scale
  2998  0E52  2FFF               	goto	l337
  2999  0E53                     l2901:
  3000                           
  3001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3002  0E53  0858               	movf	scale@scl,w
  3003  0E54  3A80               	xorlw	128
  3004  0E55  3E12               	addlw	-238
  3005  0E56  1C03               	skipc
  3006  0E57  2E59               	goto	u4371
  3007  0E58  2E5A               	goto	u4370
  3008  0E59                     u4371:
  3009  0E59  2F44               	goto	l2909
  3010  0E5A                     u4370:
  3011  0E5A                     l2903:
  3012                           
  3013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3014  0E5A  300A               	movlw	10
  3015  0E5B  00A3               	movwf	___awdiv@divisor
  3016  0E5C  3000               	movlw	0
  3017  0E5D  00A4               	movwf	___awdiv@divisor+1
  3018  0E5E  0858               	movf	scale@scl,w
  3019  0E5F  00F7               	movwf	___awmod@dividend
  3020  0E60  01F8               	clrf	___awmod@dividend+1
  3021  0E61  1BF7               	btfsc	___awmod@dividend,7
  3022  0E62  03F8               	decf	___awmod@dividend+1,f
  3023  0E63  3064               	movlw	100
  3024  0E64  00F5               	movwf	___awmod@divisor
  3025  0E65  3000               	movlw	0
  3026  0E66  00F6               	movwf	___awmod@divisor+1
  3027  0E67  160A  158A  24F8  120A  158A  	fcall	___awmod
  3028  0E6C  0876               	movf	?___awmod+1,w
  3029  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3030  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3031  0E6F  00A6               	movwf	___awdiv@dividend+1
  3032  0E70  0875               	movf	?___awmod,w
  3033  0E71  00A5               	movwf	___awdiv@dividend
  3034  0E72  160A  158A  25BB  120A  158A  	fcall	___awdiv
  3035  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3036  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3037  0E79  0823               	movf	?___awdiv,w
  3038  0E7A  00CA               	movwf	??_scale
  3039  0E7B  3001               	movlw	1
  3040  0E7C                     u4385:
  3041  0E7C  1003               	clrc
  3042  0E7D  0DCA               	rlf	??_scale,f
  3043  0E7E  3EFF               	addlw	-1
  3044  0E7F  1D03               	skipz
  3045  0E80  2E7C               	goto	u4385
  3046  0E81  1003               	clrc
  3047  0E82  0D4A               	rlf	??_scale,w
  3048  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3049  0E84  0084               	movwf	4
  3050  0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  3051  0E8A  00CB               	movwf	??_scale+1
  3052  0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  3053  0E90  00CC               	movwf	??_scale+2
  3054  0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  3055  0E96  00CD               	movwf	??_scale+3
  3056  0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  3057  0E9C  00CE               	movwf	??_scale+4
  3058  0E9D  084E               	movf	??_scale+4,w
  3059  0E9E  00AF               	movwf	___flmul@b+3
  3060  0E9F  084D               	movf	??_scale+3,w
  3061  0EA0  00AE               	movwf	___flmul@b+2
  3062  0EA1  084C               	movf	??_scale+2,w
  3063  0EA2  00AD               	movwf	___flmul@b+1
  3064  0EA3  084B               	movf	??_scale+1,w
  3065  0EA4  00AC               	movwf	___flmul@b
  3066  0EA5  3064               	movlw	100
  3067  0EA6  00A3               	movwf	___awdiv@divisor
  3068  0EA7  3000               	movlw	0
  3069  0EA8  00A4               	movwf	___awdiv@divisor+1
  3070  0EA9  0858               	movf	scale@scl,w
  3071  0EAA  00A5               	movwf	___awdiv@dividend
  3072  0EAB  01A6               	clrf	___awdiv@dividend+1
  3073  0EAC  1BA5               	btfsc	___awdiv@dividend,7
  3074  0EAD  03A6               	decf	___awdiv@dividend+1,f
  3075  0EAE  160A  158A  25BB  120A  158A  	fcall	___awdiv
  3076  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3077  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3078  0EB5  0823               	movf	?___awdiv,w
  3079  0EB6  00CF               	movwf	??_scale+5
  3080  0EB7  3001               	movlw	1
  3081  0EB8                     u4395:
  3082  0EB8  1003               	clrc
  3083  0EB9  0DCF               	rlf	??_scale+5,f
  3084  0EBA  3EFF               	addlw	-1
  3085  0EBB  1D03               	skipz
  3086  0EBC  2EB8               	goto	u4395
  3087  0EBD  1003               	clrc
  3088  0EBE  0D4F               	rlf	??_scale+5,w
  3089  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3090  0EC0  0084               	movwf	4
  3091  0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  3092  0EC6  00D0               	movwf	??_scale+6
  3093  0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  3094  0ECC  00D1               	movwf	??_scale+7
  3095  0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  3096  0ED2  00D2               	movwf	??_scale+8
  3097  0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  3098  0ED8  00D3               	movwf	??_scale+9
  3099  0ED9  0853               	movf	??_scale+9,w
  3100  0EDA  00B3               	movwf	___flmul@a+3
  3101  0EDB  0852               	movf	??_scale+8,w
  3102  0EDC  00B2               	movwf	___flmul@a+2
  3103  0EDD  0851               	movf	??_scale+7,w
  3104  0EDE  00B1               	movwf	___flmul@a+1
  3105  0EDF  0850               	movf	??_scale+6,w
  3106  0EE0  00B0               	movwf	___flmul@a
  3107  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3108  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3109  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3110  0EE8  082F               	movf	?___flmul+3,w
  3111  0EE9  00D7               	movwf	_scale$1210+3
  3112  0EEA  082E               	movf	?___flmul+2,w
  3113  0EEB  00D6               	movwf	_scale$1210+2
  3114  0EEC  082D               	movf	?___flmul+1,w
  3115  0EED  00D5               	movwf	_scale$1210+1
  3116  0EEE  082C               	movf	?___flmul,w
  3117  0EEF  00D4               	movwf	_scale$1210
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3120  0EF0  300A               	movlw	10
  3121  0EF1  00F5               	movwf	___awmod@divisor
  3122  0EF2  3000               	movlw	0
  3123  0EF3  00F6               	movwf	___awmod@divisor+1
  3124  0EF4  0858               	movf	scale@scl,w
  3125  0EF5  00F7               	movwf	___awmod@dividend
  3126  0EF6  01F8               	clrf	___awmod@dividend+1
  3127  0EF7  1BF7               	btfsc	___awmod@dividend,7
  3128  0EF8  03F8               	decf	___awmod@dividend+1,f
  3129  0EF9  160A  158A  24F8  120A  158A  	fcall	___awmod
  3130  0EFE  0875               	movf	?___awmod,w
  3131  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3132  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3133  0F01  00CA               	movwf	??_scale
  3134  0F02  3001               	movlw	1
  3135  0F03                     u4405:
  3136  0F03  1003               	clrc
  3137  0F04  0DCA               	rlf	??_scale,f
  3138  0F05  3EFF               	addlw	-1
  3139  0F06  1D03               	skipz
  3140  0F07  2F03               	goto	u4405
  3141  0F08  1003               	clrc
  3142  0F09  0D4A               	rlf	??_scale,w
  3143  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3144  0F0B  0084               	movwf	4
  3145  0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3146  0F11  00CB               	movwf	??_scale+1
  3147  0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  3148  0F17  00CC               	movwf	??_scale+2
  3149  0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  3150  0F1D  00CD               	movwf	??_scale+3
  3151  0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  3152  0F23  00CE               	movwf	??_scale+4
  3153  0F24  084E               	movf	??_scale+4,w
  3154  0F25  00AF               	movwf	___flmul@b+3
  3155  0F26  084D               	movf	??_scale+3,w
  3156  0F27  00AE               	movwf	___flmul@b+2
  3157  0F28  084C               	movf	??_scale+2,w
  3158  0F29  00AD               	movwf	___flmul@b+1
  3159  0F2A  084B               	movf	??_scale+1,w
  3160  0F2B  00AC               	movwf	___flmul@b
  3161  0F2C  0857               	movf	_scale$1210+3,w
  3162  0F2D  00B3               	movwf	___flmul@a+3
  3163  0F2E  0856               	movf	_scale$1210+2,w
  3164  0F2F  00B2               	movwf	___flmul@a+2
  3165  0F30  0855               	movf	_scale$1210+1,w
  3166  0F31  00B1               	movwf	___flmul@a+1
  3167  0F32  0854               	movf	_scale$1210,w
  3168  0F33  00B0               	movwf	___flmul@a
  3169  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3170  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3171  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3172  0F3B  082F               	movf	?___flmul+3,w
  3173  0F3C  00C9               	movwf	?_scale+3
  3174  0F3D  082E               	movf	?___flmul+2,w
  3175  0F3E  00C8               	movwf	?_scale+2
  3176  0F3F  082D               	movf	?___flmul+1,w
  3177  0F40  00C7               	movwf	?_scale+1
  3178  0F41  082C               	movf	?___flmul,w
  3179  0F42  00C6               	movwf	?_scale
  3180  0F43  2FFF               	goto	l337
  3181  0F44                     l2909:
  3182  0F44  0858               	movf	scale@scl,w
  3183  0F45  3A80               	xorlw	128
  3184  0F46  3E75               	addlw	-139
  3185  0F47  1C03               	skipc
  3186  0F48  2F4A               	goto	u4411
  3187  0F49  2F4B               	goto	u4410
  3188  0F4A                     u4411:
  3189  0F4A  2FD3               	goto	l2915
  3190  0F4B                     u4410:
  3191  0F4B                     l2911:
  3192                           
  3193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3194  0F4B  300A               	movlw	10
  3195  0F4C  00F5               	movwf	___awmod@divisor
  3196  0F4D  3000               	movlw	0
  3197  0F4E  00F6               	movwf	___awmod@divisor+1
  3198  0F4F  0858               	movf	scale@scl,w
  3199  0F50  00F7               	movwf	___awmod@dividend
  3200  0F51  01F8               	clrf	___awmod@dividend+1
  3201  0F52  1BF7               	btfsc	___awmod@dividend,7
  3202  0F53  03F8               	decf	___awmod@dividend+1,f
  3203  0F54  160A  158A  24F8  120A  158A  	fcall	___awmod
  3204  0F59  0875               	movf	?___awmod,w
  3205  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3206  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3207  0F5C  00CA               	movwf	??_scale
  3208  0F5D  3001               	movlw	1
  3209  0F5E                     u4425:
  3210  0F5E  1003               	clrc
  3211  0F5F  0DCA               	rlf	??_scale,f
  3212  0F60  3EFF               	addlw	-1
  3213  0F61  1D03               	skipz
  3214  0F62  2F5E               	goto	u4425
  3215  0F63  1003               	clrc
  3216  0F64  0D4A               	rlf	??_scale,w
  3217  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3218  0F66  0084               	movwf	4
  3219  0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  3220  0F6C  00CB               	movwf	??_scale+1
  3221  0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3222  0F72  00CC               	movwf	??_scale+2
  3223  0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  3224  0F78  00CD               	movwf	??_scale+3
  3225  0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  3226  0F7E  00CE               	movwf	??_scale+4
  3227  0F7F  084E               	movf	??_scale+4,w
  3228  0F80  00AF               	movwf	___flmul@b+3
  3229  0F81  084D               	movf	??_scale+3,w
  3230  0F82  00AE               	movwf	___flmul@b+2
  3231  0F83  084C               	movf	??_scale+2,w
  3232  0F84  00AD               	movwf	___flmul@b+1
  3233  0F85  084B               	movf	??_scale+1,w
  3234  0F86  00AC               	movwf	___flmul@b
  3235  0F87  300A               	movlw	10
  3236  0F88  00A3               	movwf	___awdiv@divisor
  3237  0F89  3000               	movlw	0
  3238  0F8A  00A4               	movwf	___awdiv@divisor+1
  3239  0F8B  0858               	movf	scale@scl,w
  3240  0F8C  00A5               	movwf	___awdiv@dividend
  3241  0F8D  01A6               	clrf	___awdiv@dividend+1
  3242  0F8E  1BA5               	btfsc	___awdiv@dividend,7
  3243  0F8F  03A6               	decf	___awdiv@dividend+1,f
  3244  0F90  160A  158A  25BB  120A  158A  	fcall	___awdiv
  3245  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0F97  0823               	movf	?___awdiv,w
  3248  0F98  00CF               	movwf	??_scale+5
  3249  0F99  3001               	movlw	1
  3250  0F9A                     u4435:
  3251  0F9A  1003               	clrc
  3252  0F9B  0DCF               	rlf	??_scale+5,f
  3253  0F9C  3EFF               	addlw	-1
  3254  0F9D  1D03               	skipz
  3255  0F9E  2F9A               	goto	u4435
  3256  0F9F  1003               	clrc
  3257  0FA0  0D4F               	rlf	??_scale+5,w
  3258  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3259  0FA2  0084               	movwf	4
  3260  0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  3261  0FA8  00D0               	movwf	??_scale+6
  3262  0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  3263  0FAE  00D1               	movwf	??_scale+7
  3264  0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  3265  0FB4  00D2               	movwf	??_scale+8
  3266  0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  3267  0FBA  00D3               	movwf	??_scale+9
  3268  0FBB  0853               	movf	??_scale+9,w
  3269  0FBC  00B3               	movwf	___flmul@a+3
  3270  0FBD  0852               	movf	??_scale+8,w
  3271  0FBE  00B2               	movwf	___flmul@a+2
  3272  0FBF  0851               	movf	??_scale+7,w
  3273  0FC0  00B1               	movwf	___flmul@a+1
  3274  0FC1  0850               	movf	??_scale+6,w
  3275  0FC2  00B0               	movwf	___flmul@a
  3276  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3277  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3279  0FCA  082F               	movf	?___flmul+3,w
  3280  0FCB  00C9               	movwf	?_scale+3
  3281  0FCC  082E               	movf	?___flmul+2,w
  3282  0FCD  00C8               	movwf	?_scale+2
  3283  0FCE  082D               	movf	?___flmul+1,w
  3284  0FCF  00C7               	movwf	?_scale+1
  3285  0FD0  082C               	movf	?___flmul,w
  3286  0FD1  00C6               	movwf	?_scale
  3287  0FD2  2FFF               	goto	l337
  3288  0FD3                     l2915:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3291  0FD3  0858               	movf	scale@scl,w
  3292  0FD4  00CA               	movwf	??_scale
  3293  0FD5  3001               	movlw	1
  3294  0FD6                     u4445:
  3295  0FD6  1003               	clrc
  3296  0FD7  0DCA               	rlf	??_scale,f
  3297  0FD8  3EFF               	addlw	-1
  3298  0FD9  1D03               	skipz
  3299  0FDA  2FD6               	goto	u4445
  3300  0FDB  1003               	clrc
  3301  0FDC  0D4A               	rlf	??_scale,w
  3302  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3303  0FDE  0084               	movwf	4
  3304  0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  3305  0FE4  00CB               	movwf	??_scale+1
  3306  0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  3307  0FEA  00CC               	movwf	??_scale+2
  3308  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  3309  0FF0  00CD               	movwf	??_scale+3
  3310  0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  3311  0FF6  00CE               	movwf	??_scale+4
  3312  0FF7  084E               	movf	??_scale+4,w
  3313  0FF8  00C9               	movwf	?_scale+3
  3314  0FF9  084D               	movf	??_scale+3,w
  3315  0FFA  00C8               	movwf	?_scale+2
  3316  0FFB  084C               	movf	??_scale+2,w
  3317  0FFC  00C7               	movwf	?_scale+1
  3318  0FFD  084B               	movf	??_scale+1,w
  3319  0FFE  00C6               	movwf	?_scale
  3320  0FFF                     l337:
  3321  0FFF  0008               	return
  3322  1000                     __end_of_scale:
  3323                           
  3324                           	psect	text3
  3325  1CF8                     __ptext3:	
  3326 ;; *************** function ___awmod *****************
  3327 ;; Defined at:
  3328 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  divisor         2    5[COMMON] int 
  3331 ;;  dividend        2    7[COMMON] int 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  sign            1    2[BANK0 ] unsigned char 
  3334 ;;  counter         1    1[BANK0 ] unsigned char 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  2    5[COMMON] int 
  3337 ;; Registers used:
  3338 ;;		wreg, status,2, status,0
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3344 ;;      Params:         4       0       0       0       0
  3345 ;;      Locals:         0       2       0       0       0
  3346 ;;      Temps:          0       1       0       0       0
  3347 ;;      Totals:         4       3       0       0       0
  3348 ;;Total ram usage:        7 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:    2
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_scale
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           
  3359                           ;psect for function ___awmod
  3360  1CF8                     ___awmod:
  3361  1CF8                     l2415:	
  3362                           ;incstack = 0
  3363                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3364                           
  3365  1CF8  1283               	bcf	3,5	;RP0=0, select bank0
  3366  1CF9  1303               	bcf	3,6	;RP1=0, select bank0
  3367  1CFA  01A2               	clrf	___awmod@sign
  3368  1CFB                     l2417:
  3369  1CFB  1FF8               	btfss	___awmod@dividend+1,7
  3370  1CFC  2CFE               	goto	u3141
  3371  1CFD  2CFF               	goto	u3140
  3372  1CFE                     u3141:
  3373  1CFE  2D06               	goto	l2423
  3374  1CFF                     u3140:
  3375  1CFF                     l2419:
  3376  1CFF  09F7               	comf	___awmod@dividend,f
  3377  1D00  09F8               	comf	___awmod@dividend+1,f
  3378  1D01  0AF7               	incf	___awmod@dividend,f
  3379  1D02  1903               	skipnz
  3380  1D03  0AF8               	incf	___awmod@dividend+1,f
  3381  1D04                     l2421:
  3382  1D04  01A2               	clrf	___awmod@sign
  3383  1D05  0AA2               	incf	___awmod@sign,f
  3384  1D06                     l2423:
  3385  1D06  1FF6               	btfss	___awmod@divisor+1,7
  3386  1D07  2D09               	goto	u3151
  3387  1D08  2D0A               	goto	u3150
  3388  1D09                     u3151:
  3389  1D09  2D0F               	goto	l2427
  3390  1D0A                     u3150:
  3391  1D0A                     l2425:
  3392  1D0A  09F5               	comf	___awmod@divisor,f
  3393  1D0B  09F6               	comf	___awmod@divisor+1,f
  3394  1D0C  0AF5               	incf	___awmod@divisor,f
  3395  1D0D  1903               	skipnz
  3396  1D0E  0AF6               	incf	___awmod@divisor+1,f
  3397  1D0F                     l2427:
  3398  1D0F  0875               	movf	___awmod@divisor,w
  3399  1D10  0476               	iorwf	___awmod@divisor+1,w
  3400  1D11  1903               	btfsc	3,2
  3401  1D12  2D14               	goto	u3161
  3402  1D13  2D15               	goto	u3160
  3403  1D14                     u3161:
  3404  1D14  2D44               	goto	l2445
  3405  1D15                     u3160:
  3406  1D15                     l2429:
  3407  1D15  01A1               	clrf	___awmod@counter
  3408  1D16  0AA1               	incf	___awmod@counter,f
  3409  1D17  2D23               	goto	l2435
  3410  1D18                     l2431:
  3411  1D18  3001               	movlw	1
  3412  1D19                     u3175:
  3413  1D19  1003               	clrc
  3414  1D1A  0DF5               	rlf	___awmod@divisor,f
  3415  1D1B  0DF6               	rlf	___awmod@divisor+1,f
  3416  1D1C  3EFF               	addlw	-1
  3417  1D1D  1D03               	skipz
  3418  1D1E  2D19               	goto	u3175
  3419  1D1F                     l2433:
  3420  1D1F  3001               	movlw	1
  3421  1D20  00A0               	movwf	??___awmod
  3422  1D21  0820               	movf	??___awmod,w
  3423  1D22  07A1               	addwf	___awmod@counter,f
  3424  1D23                     l2435:
  3425  1D23  1FF6               	btfss	___awmod@divisor+1,7
  3426  1D24  2D26               	goto	u3181
  3427  1D25  2D27               	goto	u3180
  3428  1D26                     u3181:
  3429  1D26  2D18               	goto	l2431
  3430  1D27                     u3180:
  3431  1D27                     l2437:
  3432  1D27  0876               	movf	___awmod@divisor+1,w
  3433  1D28  0278               	subwf	___awmod@dividend+1,w
  3434  1D29  1D03               	skipz
  3435  1D2A  2D2D               	goto	u3195
  3436  1D2B  0875               	movf	___awmod@divisor,w
  3437  1D2C  0277               	subwf	___awmod@dividend,w
  3438  1D2D                     u3195:
  3439  1D2D  1C03               	skipc
  3440  1D2E  2D30               	goto	u3191
  3441  1D2F  2D31               	goto	u3190
  3442  1D30                     u3191:
  3443  1D30  2D37               	goto	l2441
  3444  1D31                     u3190:
  3445  1D31                     l2439:
  3446  1D31  0875               	movf	___awmod@divisor,w
  3447  1D32  02F7               	subwf	___awmod@dividend,f
  3448  1D33  0876               	movf	___awmod@divisor+1,w
  3449  1D34  1C03               	skipc
  3450  1D35  03F8               	decf	___awmod@dividend+1,f
  3451  1D36  02F8               	subwf	___awmod@dividend+1,f
  3452  1D37                     l2441:
  3453  1D37  3001               	movlw	1
  3454  1D38                     u3205:
  3455  1D38  1003               	clrc
  3456  1D39  0CF6               	rrf	___awmod@divisor+1,f
  3457  1D3A  0CF5               	rrf	___awmod@divisor,f
  3458  1D3B  3EFF               	addlw	-1
  3459  1D3C  1D03               	skipz
  3460  1D3D  2D38               	goto	u3205
  3461  1D3E                     l2443:
  3462  1D3E  3001               	movlw	1
  3463  1D3F  02A1               	subwf	___awmod@counter,f
  3464  1D40  1D03               	btfss	3,2
  3465  1D41  2D43               	goto	u3211
  3466  1D42  2D44               	goto	u3210
  3467  1D43                     u3211:
  3468  1D43  2D27               	goto	l2437
  3469  1D44                     u3210:
  3470  1D44                     l2445:
  3471  1D44  0822               	movf	___awmod@sign,w
  3472  1D45  1903               	btfsc	3,2
  3473  1D46  2D48               	goto	u3221
  3474  1D47  2D49               	goto	u3220
  3475  1D48                     u3221:
  3476  1D48  2D4E               	goto	l2449
  3477  1D49                     u3220:
  3478  1D49                     l2447:
  3479  1D49  09F7               	comf	___awmod@dividend,f
  3480  1D4A  09F8               	comf	___awmod@dividend+1,f
  3481  1D4B  0AF7               	incf	___awmod@dividend,f
  3482  1D4C  1903               	skipnz
  3483  1D4D  0AF8               	incf	___awmod@dividend+1,f
  3484  1D4E                     l2449:
  3485  1D4E  0878               	movf	___awmod@dividend+1,w
  3486  1D4F  00F6               	movwf	?___awmod+1
  3487  1D50  0877               	movf	___awmod@dividend,w
  3488  1D51  00F5               	movwf	?___awmod
  3489  1D52                     l590:
  3490  1D52  0008               	return
  3491  1D53                     __end_of___awmod:
  3492                           
  3493                           	psect	text4
  3494  1DBB                     __ptext4:	
  3495 ;; *************** function ___awdiv *****************
  3496 ;; Defined at:
  3497 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  divisor         2    3[BANK0 ] int 
  3500 ;;  dividend        2    5[BANK0 ] int 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  quotient        2   10[BANK0 ] int 
  3503 ;;  sign            1    9[BANK0 ] unsigned char 
  3504 ;;  counter         1    8[BANK0 ] unsigned char 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  2    3[BANK0 ] int 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3514 ;;      Params:         0       4       0       0       0
  3515 ;;      Locals:         0       4       0       0       0
  3516 ;;      Temps:          0       1       0       0       0
  3517 ;;      Totals:         0       9       0       0       0
  3518 ;;Total ram usage:        9 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    2
  3521 ;; This function calls:
  3522 ;;		Nothing
  3523 ;; This function is called by:
  3524 ;;		_scale
  3525 ;;		_sprintf
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           
  3530                           ;psect for function ___awdiv
  3531  1DBB                     ___awdiv:
  3532  1DBB                     l2371:	
  3533                           ;incstack = 0
  3534                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3535                           
  3536  1DBB  1283               	bcf	3,5	;RP0=0, select bank0
  3537  1DBC  1303               	bcf	3,6	;RP1=0, select bank0
  3538  1DBD  01A9               	clrf	___awdiv@sign
  3539  1DBE                     l2373:
  3540  1DBE  1FA4               	btfss	___awdiv@divisor+1,7
  3541  1DBF  2DC1               	goto	u3041
  3542  1DC0  2DC2               	goto	u3040
  3543  1DC1                     u3041:
  3544  1DC1  2DC9               	goto	l2379
  3545  1DC2                     u3040:
  3546  1DC2                     l2375:
  3547  1DC2  09A3               	comf	___awdiv@divisor,f
  3548  1DC3  09A4               	comf	___awdiv@divisor+1,f
  3549  1DC4  0AA3               	incf	___awdiv@divisor,f
  3550  1DC5  1903               	skipnz
  3551  1DC6  0AA4               	incf	___awdiv@divisor+1,f
  3552  1DC7                     l2377:
  3553  1DC7  01A9               	clrf	___awdiv@sign
  3554  1DC8  0AA9               	incf	___awdiv@sign,f
  3555  1DC9                     l2379:
  3556  1DC9  1FA6               	btfss	___awdiv@dividend+1,7
  3557  1DCA  2DCC               	goto	u3051
  3558  1DCB  2DCD               	goto	u3050
  3559  1DCC                     u3051:
  3560  1DCC  2DD6               	goto	l2385
  3561  1DCD                     u3050:
  3562  1DCD                     l2381:
  3563  1DCD  09A5               	comf	___awdiv@dividend,f
  3564  1DCE  09A6               	comf	___awdiv@dividend+1,f
  3565  1DCF  0AA5               	incf	___awdiv@dividend,f
  3566  1DD0  1903               	skipnz
  3567  1DD1  0AA6               	incf	___awdiv@dividend+1,f
  3568  1DD2                     l2383:
  3569  1DD2  3001               	movlw	1
  3570  1DD3  00A7               	movwf	??___awdiv
  3571  1DD4  0827               	movf	??___awdiv,w
  3572  1DD5  06A9               	xorwf	___awdiv@sign,f
  3573  1DD6                     l2385:
  3574  1DD6  01AA               	clrf	___awdiv@quotient
  3575  1DD7  01AB               	clrf	___awdiv@quotient+1
  3576  1DD8                     l2387:
  3577  1DD8  0823               	movf	___awdiv@divisor,w
  3578  1DD9  0424               	iorwf	___awdiv@divisor+1,w
  3579  1DDA  1903               	btfsc	3,2
  3580  1DDB  2DDD               	goto	u3061
  3581  1DDC  2DDE               	goto	u3060
  3582  1DDD                     u3061:
  3583  1DDD  2E15               	goto	l2407
  3584  1DDE                     u3060:
  3585  1DDE                     l2389:
  3586  1DDE  01A8               	clrf	___awdiv@counter
  3587  1DDF  0AA8               	incf	___awdiv@counter,f
  3588  1DE0  2DEC               	goto	l2395
  3589  1DE1                     l2391:
  3590  1DE1  3001               	movlw	1
  3591  1DE2                     u3075:
  3592  1DE2  1003               	clrc
  3593  1DE3  0DA3               	rlf	___awdiv@divisor,f
  3594  1DE4  0DA4               	rlf	___awdiv@divisor+1,f
  3595  1DE5  3EFF               	addlw	-1
  3596  1DE6  1D03               	skipz
  3597  1DE7  2DE2               	goto	u3075
  3598  1DE8                     l2393:
  3599  1DE8  3001               	movlw	1
  3600  1DE9  00A7               	movwf	??___awdiv
  3601  1DEA  0827               	movf	??___awdiv,w
  3602  1DEB  07A8               	addwf	___awdiv@counter,f
  3603  1DEC                     l2395:
  3604  1DEC  1FA4               	btfss	___awdiv@divisor+1,7
  3605  1DED  2DEF               	goto	u3081
  3606  1DEE  2DF0               	goto	u3080
  3607  1DEF                     u3081:
  3608  1DEF  2DE1               	goto	l2391
  3609  1DF0                     u3080:
  3610  1DF0                     l2397:
  3611  1DF0  3001               	movlw	1
  3612  1DF1                     u3095:
  3613  1DF1  1003               	clrc
  3614  1DF2  0DAA               	rlf	___awdiv@quotient,f
  3615  1DF3  0DAB               	rlf	___awdiv@quotient+1,f
  3616  1DF4  3EFF               	addlw	-1
  3617  1DF5  1D03               	skipz
  3618  1DF6  2DF1               	goto	u3095
  3619  1DF7  0824               	movf	___awdiv@divisor+1,w
  3620  1DF8  0226               	subwf	___awdiv@dividend+1,w
  3621  1DF9  1D03               	skipz
  3622  1DFA  2DFD               	goto	u3105
  3623  1DFB  0823               	movf	___awdiv@divisor,w
  3624  1DFC  0225               	subwf	___awdiv@dividend,w
  3625  1DFD                     u3105:
  3626  1DFD  1C03               	skipc
  3627  1DFE  2E00               	goto	u3101
  3628  1DFF  2E01               	goto	u3100
  3629  1E00                     u3101:
  3630  1E00  2E08               	goto	l2403
  3631  1E01                     u3100:
  3632  1E01                     l2399:
  3633  1E01  0823               	movf	___awdiv@divisor,w
  3634  1E02  02A5               	subwf	___awdiv@dividend,f
  3635  1E03  0824               	movf	___awdiv@divisor+1,w
  3636  1E04  1C03               	skipc
  3637  1E05  03A6               	decf	___awdiv@dividend+1,f
  3638  1E06  02A6               	subwf	___awdiv@dividend+1,f
  3639  1E07                     l2401:
  3640  1E07  142A               	bsf	___awdiv@quotient,0
  3641  1E08                     l2403:
  3642  1E08  3001               	movlw	1
  3643  1E09                     u3115:
  3644  1E09  1003               	clrc
  3645  1E0A  0CA4               	rrf	___awdiv@divisor+1,f
  3646  1E0B  0CA3               	rrf	___awdiv@divisor,f
  3647  1E0C  3EFF               	addlw	-1
  3648  1E0D  1D03               	skipz
  3649  1E0E  2E09               	goto	u3115
  3650  1E0F                     l2405:
  3651  1E0F  3001               	movlw	1
  3652  1E10  02A8               	subwf	___awdiv@counter,f
  3653  1E11  1D03               	btfss	3,2
  3654  1E12  2E14               	goto	u3121
  3655  1E13  2E15               	goto	u3120
  3656  1E14                     u3121:
  3657  1E14  2DF0               	goto	l2397
  3658  1E15                     u3120:
  3659  1E15                     l2407:
  3660  1E15  0829               	movf	___awdiv@sign,w
  3661  1E16  1903               	btfsc	3,2
  3662  1E17  2E19               	goto	u3131
  3663  1E18  2E1A               	goto	u3130
  3664  1E19                     u3131:
  3665  1E19  2E1F               	goto	l2411
  3666  1E1A                     u3130:
  3667  1E1A                     l2409:
  3668  1E1A  09AA               	comf	___awdiv@quotient,f
  3669  1E1B  09AB               	comf	___awdiv@quotient+1,f
  3670  1E1C  0AAA               	incf	___awdiv@quotient,f
  3671  1E1D  1903               	skipnz
  3672  1E1E  0AAB               	incf	___awdiv@quotient+1,f
  3673  1E1F                     l2411:
  3674  1E1F  082B               	movf	___awdiv@quotient+1,w
  3675  1E20  00A4               	movwf	?___awdiv+1
  3676  1E21  082A               	movf	___awdiv@quotient,w
  3677  1E22  00A3               	movwf	?___awdiv
  3678  1E23                     l577:
  3679  1E23  0008               	return
  3680  1E24                     __end_of___awdiv:
  3681                           
  3682                           	psect	text5
  3683  1968                     __ptext5:	
  3684 ;; *************** function _isdigit *****************
  3685 ;; Defined at:
  3686 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;  c               1    wreg     unsigned char 
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;  c               1    6[COMMON] unsigned char 
  3691 ;; Return value:  Size  Location     Type
  3692 ;;		None               void
  3693 ;; Registers used:
  3694 ;;		wreg, status,2, status,0
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3700 ;;      Params:         0       0       0       0       0
  3701 ;;      Locals:         2       0       0       0       0
  3702 ;;      Temps:          0       0       0       0       0
  3703 ;;      Totals:         2       0       0       0       0
  3704 ;;Total ram usage:        2 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    2
  3707 ;; This function calls:
  3708 ;;		Nothing
  3709 ;; This function is called by:
  3710 ;;		_sprintf
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           
  3715                           ;psect for function _isdigit
  3716  1968                     _isdigit:
  3717                           
  3718                           ;incstack = 0
  3719                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3720                           ;isdigit@c stored from wreg
  3721  1968  00F6               	movwf	isdigit@c
  3722  1969                     l2919:
  3723  1969  01F5               	clrf	_isdigit$1024
  3724  196A                     l2921:
  3725  196A  303A               	movlw	58
  3726  196B  0276               	subwf	isdigit@c,w
  3727  196C  1803               	skipnc
  3728  196D  296F               	goto	u4451
  3729  196E  2970               	goto	u4450
  3730  196F                     u4451:
  3731  196F  2978               	goto	l2927
  3732  1970                     u4450:
  3733  1970                     l2923:
  3734  1970  3030               	movlw	48
  3735  1971  0276               	subwf	isdigit@c,w
  3736  1972  1C03               	skipc
  3737  1973  2975               	goto	u4461
  3738  1974  2976               	goto	u4460
  3739  1975                     u4461:
  3740  1975  2978               	goto	l2927
  3741  1976                     u4460:
  3742  1976                     l2925:
  3743  1976  01F5               	clrf	_isdigit$1024
  3744  1977  0AF5               	incf	_isdigit$1024,f
  3745  1978                     l2927:
  3746  1978  0C75               	rrf	_isdigit$1024,w
  3747  1979                     l911:
  3748  1979  0008               	return
  3749  197A                     __end_of_isdigit:
  3750                           
  3751                           	psect	text6
  3752  05BD                     __ptext6:	
  3753 ;; *************** function _fround *****************
  3754 ;; Defined at:
  3755 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  prec            1    wreg     unsigned char 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  prec            1   57[BANK0 ] unsigned char 
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  4   38[BANK0 ] unsigned char 
  3762 ;; Registers used:
  3763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3769 ;;      Params:         0       4       0       0       0
  3770 ;;      Locals:         0       9       0       0       0
  3771 ;;      Temps:          0       7       0       0       0
  3772 ;;      Totals:         0      20       0       0       0
  3773 ;;Total ram usage:       20 bytes
  3774 ;; Hardware stack levels used:    1
  3775 ;; Hardware stack levels required when called:    4
  3776 ;; This function calls:
  3777 ;;		___flmul
  3778 ;;		___lwdiv
  3779 ;;		___lwmod
  3780 ;; This function is called by:
  3781 ;;		_sprintf
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           
  3786                           ;psect for function _fround
  3787  05BD                     _fround:
  3788                           
  3789                           ;incstack = 0
  3790                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3791                           ;fround@prec stored from wreg
  3792  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  3793  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  3794  05BF  00D9               	movwf	fround@prec
  3795  05C0                     l2861:
  3796                           
  3797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3798  05C0  306E               	movlw	110
  3799  05C1  0259               	subwf	fround@prec,w
  3800  05C2  1C03               	skipc
  3801  05C3  2DC5               	goto	u4201
  3802  05C4  2DC6               	goto	u4200
  3803  05C5                     u4201:
  3804  05C5  2ED5               	goto	l2869
  3805  05C6                     u4200:
  3806  05C6                     l2863:
  3807                           
  3808                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3809  05C6  303F               	movlw	63
  3810  05C7  00AF               	movwf	___flmul@b+3
  3811  05C8  3000               	movlw	0
  3812  05C9  00AE               	movwf	___flmul@b+2
  3813  05CA  3000               	movlw	0
  3814  05CB  00AD               	movwf	___flmul@b+1
  3815  05CC  3000               	movlw	0
  3816  05CD  00AC               	movwf	___flmul@b
  3817  05CE  3064               	movlw	100
  3818  05CF  00A2               	movwf	___lwdiv@divisor
  3819  05D0  3000               	movlw	0
  3820  05D1  00A3               	movwf	___lwdiv@divisor+1
  3821  05D2  0859               	movf	fround@prec,w
  3822  05D3  00CA               	movwf	??_fround
  3823  05D4  01CB               	clrf	??_fround+1
  3824  05D5  084A               	movf	??_fround,w
  3825  05D6  00A4               	movwf	___lwdiv@dividend
  3826  05D7  084B               	movf	??_fround+1,w
  3827  05D8  00A5               	movwf	___lwdiv@dividend+1
  3828  05D9  160A  158A  236F  120A  118A  	fcall	___lwdiv
  3829  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  3830  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  3831  05E0  0822               	movf	?___lwdiv,w
  3832  05E1  00CC               	movwf	??_fround+2
  3833  05E2  3001               	movlw	1
  3834  05E3                     u4215:
  3835  05E3  1003               	clrc
  3836  05E4  0DCC               	rlf	??_fround+2,f
  3837  05E5  3EFF               	addlw	-1
  3838  05E6  1D03               	skipz
  3839  05E7  2DE3               	goto	u4215
  3840  05E8  1003               	clrc
  3841  05E9  0D4C               	rlf	??_fround+2,w
  3842  05EA  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3843  05EB  0084               	movwf	4
  3844  05EC  160A  118A  200A  120A  118A  	fcall	stringdir
  3845  05F1  00CD               	movwf	??_fround+3
  3846  05F2  160A  118A  200A  120A  118A  	fcall	stringdir
  3847  05F7  00CE               	movwf	??_fround+4
  3848  05F8  160A  118A  200A  120A  118A  	fcall	stringdir
  3849  05FD  00CF               	movwf	??_fround+5
  3850  05FE  160A  118A  200A  120A  118A  	fcall	stringdir
  3851  0603  00D0               	movwf	??_fround+6
  3852  0604  0850               	movf	??_fround+6,w
  3853  0605  00B3               	movwf	___flmul@a+3
  3854  0606  084F               	movf	??_fround+5,w
  3855  0607  00B2               	movwf	___flmul@a+2
  3856  0608  084E               	movf	??_fround+4,w
  3857  0609  00B1               	movwf	___flmul@a+1
  3858  060A  084D               	movf	??_fround+3,w
  3859  060B  00B0               	movwf	___flmul@a
  3860  060C  120A  158A  213C  120A  118A  	fcall	___flmul
  3861  0611  1283               	bcf	3,5	;RP0=0, select bank0
  3862  0612  1303               	bcf	3,6	;RP1=0, select bank0
  3863  0613  082F               	movf	?___flmul+3,w
  3864  0614  00D8               	movwf	_fround$1208+3
  3865  0615  082E               	movf	?___flmul+2,w
  3866  0616  00D7               	movwf	_fround$1208+2
  3867  0617  082D               	movf	?___flmul+1,w
  3868  0618  00D6               	movwf	_fround$1208+1
  3869  0619  082C               	movf	?___flmul,w
  3870  061A  00D5               	movwf	_fround$1208
  3871                           
  3872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3873  061B  300A               	movlw	10
  3874  061C  00A2               	movwf	___lwdiv@divisor
  3875  061D  3000               	movlw	0
  3876  061E  00A3               	movwf	___lwdiv@divisor+1
  3877  061F  0859               	movf	fround@prec,w
  3878  0620  00CA               	movwf	??_fround
  3879  0621  01CB               	clrf	??_fround+1
  3880  0622  084A               	movf	??_fround,w
  3881  0623  00F7               	movwf	___lwmod@dividend
  3882  0624  084B               	movf	??_fround+1,w
  3883  0625  00F8               	movwf	___lwmod@dividend+1
  3884  0626  3064               	movlw	100
  3885  0627  00F5               	movwf	___lwmod@divisor
  3886  0628  3000               	movlw	0
  3887  0629  00F6               	movwf	___lwmod@divisor+1
  3888  062A  160A  158A  226F  120A  118A  	fcall	___lwmod
  3889  062F  0876               	movf	?___lwmod+1,w
  3890  0630  1283               	bcf	3,5	;RP0=0, select bank0
  3891  0631  1303               	bcf	3,6	;RP1=0, select bank0
  3892  0632  00A5               	movwf	___lwdiv@dividend+1
  3893  0633  0875               	movf	?___lwmod,w
  3894  0634  00A4               	movwf	___lwdiv@dividend
  3895  0635  160A  158A  236F  120A  118A  	fcall	___lwdiv
  3896  063A  1283               	bcf	3,5	;RP0=0, select bank0
  3897  063B  1303               	bcf	3,6	;RP1=0, select bank0
  3898  063C  0822               	movf	?___lwdiv,w
  3899  063D  00CC               	movwf	??_fround+2
  3900  063E  3001               	movlw	1
  3901  063F                     u4225:
  3902  063F  1003               	clrc
  3903  0640  0DCC               	rlf	??_fround+2,f
  3904  0641  3EFF               	addlw	-1
  3905  0642  1D03               	skipz
  3906  0643  2E3F               	goto	u4225
  3907  0644  1003               	clrc
  3908  0645  0D4C               	rlf	??_fround+2,w
  3909  0646  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3910  0647  0084               	movwf	4
  3911  0648  160A  118A  200A  120A  118A  	fcall	stringdir
  3912  064D  00CD               	movwf	??_fround+3
  3913  064E  160A  118A  200A  120A  118A  	fcall	stringdir
  3914  0653  00CE               	movwf	??_fround+4
  3915  0654  160A  118A  200A  120A  118A  	fcall	stringdir
  3916  0659  00CF               	movwf	??_fround+5
  3917  065A  160A  118A  200A  120A  118A  	fcall	stringdir
  3918  065F  00D0               	movwf	??_fround+6
  3919  0660  0850               	movf	??_fround+6,w
  3920  0661  00AF               	movwf	___flmul@b+3
  3921  0662  084F               	movf	??_fround+5,w
  3922  0663  00AE               	movwf	___flmul@b+2
  3923  0664  084E               	movf	??_fround+4,w
  3924  0665  00AD               	movwf	___flmul@b+1
  3925  0666  084D               	movf	??_fround+3,w
  3926  0667  00AC               	movwf	___flmul@b
  3927  0668  0858               	movf	_fround$1208+3,w
  3928  0669  00B3               	movwf	___flmul@a+3
  3929  066A  0857               	movf	_fround$1208+2,w
  3930  066B  00B2               	movwf	___flmul@a+2
  3931  066C  0856               	movf	_fround$1208+1,w
  3932  066D  00B1               	movwf	___flmul@a+1
  3933  066E  0855               	movf	_fround$1208,w
  3934  066F  00B0               	movwf	___flmul@a
  3935  0670  120A  158A  213C  120A  118A  	fcall	___flmul
  3936  0675  1283               	bcf	3,5	;RP0=0, select bank0
  3937  0676  1303               	bcf	3,6	;RP1=0, select bank0
  3938  0677  082F               	movf	?___flmul+3,w
  3939  0678  00D4               	movwf	_fround$1209+3
  3940  0679  082E               	movf	?___flmul+2,w
  3941  067A  00D3               	movwf	_fround$1209+2
  3942  067B  082D               	movf	?___flmul+1,w
  3943  067C  00D2               	movwf	_fround$1209+1
  3944  067D  082C               	movf	?___flmul,w
  3945  067E  00D1               	movwf	_fround$1209
  3946                           
  3947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3948  067F  300A               	movlw	10
  3949  0680  00F5               	movwf	___lwmod@divisor
  3950  0681  3000               	movlw	0
  3951  0682  00F6               	movwf	___lwmod@divisor+1
  3952  0683  0859               	movf	fround@prec,w
  3953  0684  00CA               	movwf	??_fround
  3954  0685  01CB               	clrf	??_fround+1
  3955  0686  084A               	movf	??_fround,w
  3956  0687  00F7               	movwf	___lwmod@dividend
  3957  0688  084B               	movf	??_fround+1,w
  3958  0689  00F8               	movwf	___lwmod@dividend+1
  3959  068A  160A  158A  226F  120A  118A  	fcall	___lwmod
  3960  068F  0875               	movf	?___lwmod,w
  3961  0690  1283               	bcf	3,5	;RP0=0, select bank0
  3962  0691  1303               	bcf	3,6	;RP1=0, select bank0
  3963  0692  00CC               	movwf	??_fround+2
  3964  0693  3001               	movlw	1
  3965  0694                     u4235:
  3966  0694  1003               	clrc
  3967  0695  0DCC               	rlf	??_fround+2,f
  3968  0696  3EFF               	addlw	-1
  3969  0697  1D03               	skipz
  3970  0698  2E94               	goto	u4235
  3971  0699  1003               	clrc
  3972  069A  0D4C               	rlf	??_fround+2,w
  3973  069B  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3974  069C  0084               	movwf	4
  3975  069D  160A  118A  200A  120A  118A  	fcall	stringdir
  3976  06A2  00CD               	movwf	??_fround+3
  3977  06A3  160A  118A  200A  120A  118A  	fcall	stringdir
  3978  06A8  00CE               	movwf	??_fround+4
  3979  06A9  160A  118A  200A  120A  118A  	fcall	stringdir
  3980  06AE  00CF               	movwf	??_fround+5
  3981  06AF  160A  118A  200A  120A  118A  	fcall	stringdir
  3982  06B4  00D0               	movwf	??_fround+6
  3983  06B5  0850               	movf	??_fround+6,w
  3984  06B6  00AF               	movwf	___flmul@b+3
  3985  06B7  084F               	movf	??_fround+5,w
  3986  06B8  00AE               	movwf	___flmul@b+2
  3987  06B9  084E               	movf	??_fround+4,w
  3988  06BA  00AD               	movwf	___flmul@b+1
  3989  06BB  084D               	movf	??_fround+3,w
  3990  06BC  00AC               	movwf	___flmul@b
  3991  06BD  0854               	movf	_fround$1209+3,w
  3992  06BE  00B3               	movwf	___flmul@a+3
  3993  06BF  0853               	movf	_fround$1209+2,w
  3994  06C0  00B2               	movwf	___flmul@a+2
  3995  06C1  0852               	movf	_fround$1209+1,w
  3996  06C2  00B1               	movwf	___flmul@a+1
  3997  06C3  0851               	movf	_fround$1209,w
  3998  06C4  00B0               	movwf	___flmul@a
  3999  06C5  120A  158A  213C  120A  118A  	fcall	___flmul
  4000  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  4001  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  4002  06CC  082F               	movf	?___flmul+3,w
  4003  06CD  00C9               	movwf	?_fround+3
  4004  06CE  082E               	movf	?___flmul+2,w
  4005  06CF  00C8               	movwf	?_fround+2
  4006  06D0  082D               	movf	?___flmul+1,w
  4007  06D1  00C7               	movwf	?_fround+1
  4008  06D2  082C               	movf	?___flmul,w
  4009  06D3  00C6               	movwf	?_fround
  4010  06D4  2FC9               	goto	l330
  4011  06D5                     l2869:
  4012  06D5  300B               	movlw	11
  4013  06D6  0259               	subwf	fround@prec,w
  4014  06D7  1C03               	skipc
  4015  06D8  2EDA               	goto	u4241
  4016  06D9  2EDB               	goto	u4240
  4017  06DA                     u4241:
  4018  06DA  2F86               	goto	l2875
  4019  06DB                     u4240:
  4020  06DB                     l2871:
  4021                           
  4022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4023  06DB  303F               	movlw	63
  4024  06DC  00AF               	movwf	___flmul@b+3
  4025  06DD  3000               	movlw	0
  4026  06DE  00AE               	movwf	___flmul@b+2
  4027  06DF  3000               	movlw	0
  4028  06E0  00AD               	movwf	___flmul@b+1
  4029  06E1  3000               	movlw	0
  4030  06E2  00AC               	movwf	___flmul@b
  4031  06E3  300A               	movlw	10
  4032  06E4  00A2               	movwf	___lwdiv@divisor
  4033  06E5  3000               	movlw	0
  4034  06E6  00A3               	movwf	___lwdiv@divisor+1
  4035  06E7  0859               	movf	fround@prec,w
  4036  06E8  00CA               	movwf	??_fround
  4037  06E9  01CB               	clrf	??_fround+1
  4038  06EA  084A               	movf	??_fround,w
  4039  06EB  00A4               	movwf	___lwdiv@dividend
  4040  06EC  084B               	movf	??_fround+1,w
  4041  06ED  00A5               	movwf	___lwdiv@dividend+1
  4042  06EE  160A  158A  236F  120A  118A  	fcall	___lwdiv
  4043  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  4044  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  4045  06F5  0822               	movf	?___lwdiv,w
  4046  06F6  00CC               	movwf	??_fround+2
  4047  06F7  3001               	movlw	1
  4048  06F8                     u4255:
  4049  06F8  1003               	clrc
  4050  06F9  0DCC               	rlf	??_fround+2,f
  4051  06FA  3EFF               	addlw	-1
  4052  06FB  1D03               	skipz
  4053  06FC  2EF8               	goto	u4255
  4054  06FD  1003               	clrc
  4055  06FE  0D4C               	rlf	??_fround+2,w
  4056  06FF  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4057  0700  0084               	movwf	4
  4058  0701  160A  118A  200A  120A  118A  	fcall	stringdir
  4059  0706  00CD               	movwf	??_fround+3
  4060  0707  160A  118A  200A  120A  118A  	fcall	stringdir
  4061  070C  00CE               	movwf	??_fround+4
  4062  070D  160A  118A  200A  120A  118A  	fcall	stringdir
  4063  0712  00CF               	movwf	??_fround+5
  4064  0713  160A  118A  200A  120A  118A  	fcall	stringdir
  4065  0718  00D0               	movwf	??_fround+6
  4066  0719  0850               	movf	??_fround+6,w
  4067  071A  00B3               	movwf	___flmul@a+3
  4068  071B  084F               	movf	??_fround+5,w
  4069  071C  00B2               	movwf	___flmul@a+2
  4070  071D  084E               	movf	??_fround+4,w
  4071  071E  00B1               	movwf	___flmul@a+1
  4072  071F  084D               	movf	??_fround+3,w
  4073  0720  00B0               	movwf	___flmul@a
  4074  0721  120A  158A  213C  120A  118A  	fcall	___flmul
  4075  0726  1283               	bcf	3,5	;RP0=0, select bank0
  4076  0727  1303               	bcf	3,6	;RP1=0, select bank0
  4077  0728  082F               	movf	?___flmul+3,w
  4078  0729  00D8               	movwf	_fround$1208+3
  4079  072A  082E               	movf	?___flmul+2,w
  4080  072B  00D7               	movwf	_fround$1208+2
  4081  072C  082D               	movf	?___flmul+1,w
  4082  072D  00D6               	movwf	_fround$1208+1
  4083  072E  082C               	movf	?___flmul,w
  4084  072F  00D5               	movwf	_fround$1208
  4085                           
  4086                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4087  0730  300A               	movlw	10
  4088  0731  00F5               	movwf	___lwmod@divisor
  4089  0732  3000               	movlw	0
  4090  0733  00F6               	movwf	___lwmod@divisor+1
  4091  0734  0859               	movf	fround@prec,w
  4092  0735  00CA               	movwf	??_fround
  4093  0736  01CB               	clrf	??_fround+1
  4094  0737  084A               	movf	??_fround,w
  4095  0738  00F7               	movwf	___lwmod@dividend
  4096  0739  084B               	movf	??_fround+1,w
  4097  073A  00F8               	movwf	___lwmod@dividend+1
  4098  073B  160A  158A  226F  120A  118A  	fcall	___lwmod
  4099  0740  0875               	movf	?___lwmod,w
  4100  0741  1283               	bcf	3,5	;RP0=0, select bank0
  4101  0742  1303               	bcf	3,6	;RP1=0, select bank0
  4102  0743  00CC               	movwf	??_fround+2
  4103  0744  3001               	movlw	1
  4104  0745                     u4265:
  4105  0745  1003               	clrc
  4106  0746  0DCC               	rlf	??_fround+2,f
  4107  0747  3EFF               	addlw	-1
  4108  0748  1D03               	skipz
  4109  0749  2F45               	goto	u4265
  4110  074A  1003               	clrc
  4111  074B  0D4C               	rlf	??_fround+2,w
  4112  074C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4113  074D  0084               	movwf	4
  4114  074E  160A  118A  200A  120A  118A  	fcall	stringdir
  4115  0753  00CD               	movwf	??_fround+3
  4116  0754  160A  118A  200A  120A  118A  	fcall	stringdir
  4117  0759  00CE               	movwf	??_fround+4
  4118  075A  160A  118A  200A  120A  118A  	fcall	stringdir
  4119  075F  00CF               	movwf	??_fround+5
  4120  0760  160A  118A  200A  120A  118A  	fcall	stringdir
  4121  0765  00D0               	movwf	??_fround+6
  4122  0766  0850               	movf	??_fround+6,w
  4123  0767  00AF               	movwf	___flmul@b+3
  4124  0768  084F               	movf	??_fround+5,w
  4125  0769  00AE               	movwf	___flmul@b+2
  4126  076A  084E               	movf	??_fround+4,w
  4127  076B  00AD               	movwf	___flmul@b+1
  4128  076C  084D               	movf	??_fround+3,w
  4129  076D  00AC               	movwf	___flmul@b
  4130  076E  0858               	movf	_fround$1208+3,w
  4131  076F  00B3               	movwf	___flmul@a+3
  4132  0770  0857               	movf	_fround$1208+2,w
  4133  0771  00B2               	movwf	___flmul@a+2
  4134  0772  0856               	movf	_fround$1208+1,w
  4135  0773  00B1               	movwf	___flmul@a+1
  4136  0774  0855               	movf	_fround$1208,w
  4137  0775  00B0               	movwf	___flmul@a
  4138  0776  120A  158A  213C  120A  118A  	fcall	___flmul
  4139  077B  1283               	bcf	3,5	;RP0=0, select bank0
  4140  077C  1303               	bcf	3,6	;RP1=0, select bank0
  4141  077D  082F               	movf	?___flmul+3,w
  4142  077E  00C9               	movwf	?_fround+3
  4143  077F  082E               	movf	?___flmul+2,w
  4144  0780  00C8               	movwf	?_fround+2
  4145  0781  082D               	movf	?___flmul+1,w
  4146  0782  00C7               	movwf	?_fround+1
  4147  0783  082C               	movf	?___flmul,w
  4148  0784  00C6               	movwf	?_fround
  4149  0785  2FC9               	goto	l330
  4150  0786                     l2875:
  4151                           
  4152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4153  0786  303F               	movlw	63
  4154  0787  00AF               	movwf	___flmul@b+3
  4155  0788  3000               	movlw	0
  4156  0789  00AE               	movwf	___flmul@b+2
  4157  078A  3000               	movlw	0
  4158  078B  00AD               	movwf	___flmul@b+1
  4159  078C  3000               	movlw	0
  4160  078D  00AC               	movwf	___flmul@b
  4161  078E  0859               	movf	fround@prec,w
  4162  078F  00CA               	movwf	??_fround
  4163  0790  3001               	movlw	1
  4164  0791                     u4275:
  4165  0791  1003               	clrc
  4166  0792  0DCA               	rlf	??_fround,f
  4167  0793  3EFF               	addlw	-1
  4168  0794  1D03               	skipz
  4169  0795  2F91               	goto	u4275
  4170  0796  1003               	clrc
  4171  0797  0D4A               	rlf	??_fround,w
  4172  0798  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4173  0799  0084               	movwf	4
  4174  079A  160A  118A  200A  120A  118A  	fcall	stringdir
  4175  079F  00CB               	movwf	??_fround+1
  4176  07A0  160A  118A  200A  120A  118A  	fcall	stringdir
  4177  07A5  00CC               	movwf	??_fround+2
  4178  07A6  160A  118A  200A  120A  118A  	fcall	stringdir
  4179  07AB  00CD               	movwf	??_fround+3
  4180  07AC  160A  118A  200A  120A  118A  	fcall	stringdir
  4181  07B1  00CE               	movwf	??_fround+4
  4182  07B2  084E               	movf	??_fround+4,w
  4183  07B3  00B3               	movwf	___flmul@a+3
  4184  07B4  084D               	movf	??_fround+3,w
  4185  07B5  00B2               	movwf	___flmul@a+2
  4186  07B6  084C               	movf	??_fround+2,w
  4187  07B7  00B1               	movwf	___flmul@a+1
  4188  07B8  084B               	movf	??_fround+1,w
  4189  07B9  00B0               	movwf	___flmul@a
  4190  07BA  120A  158A  213C  120A  118A  	fcall	___flmul
  4191  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  4192  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  4193  07C1  082F               	movf	?___flmul+3,w
  4194  07C2  00C9               	movwf	?_fround+3
  4195  07C3  082E               	movf	?___flmul+2,w
  4196  07C4  00C8               	movwf	?_fround+2
  4197  07C5  082D               	movf	?___flmul+1,w
  4198  07C6  00C7               	movwf	?_fround+1
  4199  07C7  082C               	movf	?___flmul,w
  4200  07C8  00C6               	movwf	?_fround
  4201  07C9                     l330:
  4202  07C9  0008               	return
  4203  07CA                     __end_of_fround:
  4204                           
  4205                           	psect	text7
  4206  1A6F                     __ptext7:	
  4207 ;; *************** function ___lwmod *****************
  4208 ;; Defined at:
  4209 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  divisor         2    5[COMMON] unsigned int 
  4212 ;;  dividend        2    7[COMMON] unsigned int 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;  counter         1    1[BANK0 ] unsigned char 
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  2    5[COMMON] unsigned int 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2, status,0
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4224 ;;      Params:         4       0       0       0       0
  4225 ;;      Locals:         0       1       0       0       0
  4226 ;;      Temps:          0       1       0       0       0
  4227 ;;      Totals:         4       2       0       0       0
  4228 ;;Total ram usage:        6 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:    2
  4231 ;; This function calls:
  4232 ;;		Nothing
  4233 ;; This function is called by:
  4234 ;;		_fround
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           
  4239                           ;psect for function ___lwmod
  4240  1A6F                     ___lwmod:
  4241  1A6F                     l2479:	
  4242                           ;incstack = 0
  4243                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4244                           
  4245  1A6F  0875               	movf	___lwmod@divisor,w
  4246  1A70  0476               	iorwf	___lwmod@divisor+1,w
  4247  1A71  1903               	btfsc	3,2
  4248  1A72  2A74               	goto	u3301
  4249  1A73  2A75               	goto	u3300
  4250  1A74                     u3301:
  4251  1A74  2AA6               	goto	l2497
  4252  1A75                     u3300:
  4253  1A75                     l2481:
  4254  1A75  1283               	bcf	3,5	;RP0=0, select bank0
  4255  1A76  1303               	bcf	3,6	;RP1=0, select bank0
  4256  1A77  01A1               	clrf	___lwmod@counter
  4257  1A78  0AA1               	incf	___lwmod@counter,f
  4258  1A79  2A85               	goto	l2487
  4259  1A7A                     l2483:
  4260  1A7A  3001               	movlw	1
  4261  1A7B                     u3315:
  4262  1A7B  1003               	clrc
  4263  1A7C  0DF5               	rlf	___lwmod@divisor,f
  4264  1A7D  0DF6               	rlf	___lwmod@divisor+1,f
  4265  1A7E  3EFF               	addlw	-1
  4266  1A7F  1D03               	skipz
  4267  1A80  2A7B               	goto	u3315
  4268  1A81                     l2485:
  4269  1A81  3001               	movlw	1
  4270  1A82  00A0               	movwf	??___lwmod
  4271  1A83  0820               	movf	??___lwmod,w
  4272  1A84  07A1               	addwf	___lwmod@counter,f
  4273  1A85                     l2487:
  4274  1A85  1FF6               	btfss	___lwmod@divisor+1,7
  4275  1A86  2A88               	goto	u3321
  4276  1A87  2A89               	goto	u3320
  4277  1A88                     u3321:
  4278  1A88  2A7A               	goto	l2483
  4279  1A89                     u3320:
  4280  1A89                     l2489:
  4281  1A89  0876               	movf	___lwmod@divisor+1,w
  4282  1A8A  0278               	subwf	___lwmod@dividend+1,w
  4283  1A8B  1D03               	skipz
  4284  1A8C  2A8F               	goto	u3335
  4285  1A8D  0875               	movf	___lwmod@divisor,w
  4286  1A8E  0277               	subwf	___lwmod@dividend,w
  4287  1A8F                     u3335:
  4288  1A8F  1C03               	skipc
  4289  1A90  2A92               	goto	u3331
  4290  1A91  2A93               	goto	u3330
  4291  1A92                     u3331:
  4292  1A92  2A99               	goto	l2493
  4293  1A93                     u3330:
  4294  1A93                     l2491:
  4295  1A93  0875               	movf	___lwmod@divisor,w
  4296  1A94  02F7               	subwf	___lwmod@dividend,f
  4297  1A95  0876               	movf	___lwmod@divisor+1,w
  4298  1A96  1C03               	skipc
  4299  1A97  03F8               	decf	___lwmod@dividend+1,f
  4300  1A98  02F8               	subwf	___lwmod@dividend+1,f
  4301  1A99                     l2493:
  4302  1A99  3001               	movlw	1
  4303  1A9A                     u3345:
  4304  1A9A  1003               	clrc
  4305  1A9B  0CF6               	rrf	___lwmod@divisor+1,f
  4306  1A9C  0CF5               	rrf	___lwmod@divisor,f
  4307  1A9D  3EFF               	addlw	-1
  4308  1A9E  1D03               	skipz
  4309  1A9F  2A9A               	goto	u3345
  4310  1AA0                     l2495:
  4311  1AA0  3001               	movlw	1
  4312  1AA1  02A1               	subwf	___lwmod@counter,f
  4313  1AA2  1D03               	btfss	3,2
  4314  1AA3  2AA5               	goto	u3351
  4315  1AA4  2AA6               	goto	u3350
  4316  1AA5                     u3351:
  4317  1AA5  2A89               	goto	l2489
  4318  1AA6                     u3350:
  4319  1AA6                     l2497:
  4320  1AA6  0878               	movf	___lwmod@dividend+1,w
  4321  1AA7  00F6               	movwf	?___lwmod+1
  4322  1AA8  0877               	movf	___lwmod@dividend,w
  4323  1AA9  00F5               	movwf	?___lwmod
  4324  1AAA                     l740:
  4325  1AAA  0008               	return
  4326  1AAB                     __end_of___lwmod:
  4327                           
  4328                           	psect	text8
  4329  1B6F                     __ptext8:	
  4330 ;; *************** function ___lwdiv *****************
  4331 ;; Defined at:
  4332 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  divisor         2    2[BANK0 ] unsigned int 
  4335 ;;  dividend        2    4[BANK0 ] unsigned int 
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;  quotient        2    7[BANK0 ] unsigned int 
  4338 ;;  counter         1    9[BANK0 ] unsigned char 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  2    2[BANK0 ] unsigned int 
  4341 ;; Registers used:
  4342 ;;		wreg, status,2, status,0
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4348 ;;      Params:         0       4       0       0       0
  4349 ;;      Locals:         0       3       0       0       0
  4350 ;;      Temps:          0       1       0       0       0
  4351 ;;      Totals:         0       8       0       0       0
  4352 ;;Total ram usage:        8 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; Hardware stack levels required when called:    2
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_fround
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           
  4363                           ;psect for function ___lwdiv
  4364  1B6F                     ___lwdiv:
  4365  1B6F                     l2453:	
  4366                           ;incstack = 0
  4367                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4368                           
  4369  1B6F  1283               	bcf	3,5	;RP0=0, select bank0
  4370  1B70  1303               	bcf	3,6	;RP1=0, select bank0
  4371  1B71  01A7               	clrf	___lwdiv@quotient
  4372  1B72  01A8               	clrf	___lwdiv@quotient+1
  4373  1B73                     l2455:
  4374  1B73  0822               	movf	___lwdiv@divisor,w
  4375  1B74  0423               	iorwf	___lwdiv@divisor+1,w
  4376  1B75  1903               	btfsc	3,2
  4377  1B76  2B78               	goto	u3231
  4378  1B77  2B79               	goto	u3230
  4379  1B78                     u3231:
  4380  1B78  2BB0               	goto	l2475
  4381  1B79                     u3230:
  4382  1B79                     l2457:
  4383  1B79  01A9               	clrf	___lwdiv@counter
  4384  1B7A  0AA9               	incf	___lwdiv@counter,f
  4385  1B7B  2B87               	goto	l2463
  4386  1B7C                     l2459:
  4387  1B7C  3001               	movlw	1
  4388  1B7D                     u3245:
  4389  1B7D  1003               	clrc
  4390  1B7E  0DA2               	rlf	___lwdiv@divisor,f
  4391  1B7F  0DA3               	rlf	___lwdiv@divisor+1,f
  4392  1B80  3EFF               	addlw	-1
  4393  1B81  1D03               	skipz
  4394  1B82  2B7D               	goto	u3245
  4395  1B83                     l2461:
  4396  1B83  3001               	movlw	1
  4397  1B84  00A6               	movwf	??___lwdiv
  4398  1B85  0826               	movf	??___lwdiv,w
  4399  1B86  07A9               	addwf	___lwdiv@counter,f
  4400  1B87                     l2463:
  4401  1B87  1FA3               	btfss	___lwdiv@divisor+1,7
  4402  1B88  2B8A               	goto	u3251
  4403  1B89  2B8B               	goto	u3250
  4404  1B8A                     u3251:
  4405  1B8A  2B7C               	goto	l2459
  4406  1B8B                     u3250:
  4407  1B8B                     l2465:
  4408  1B8B  3001               	movlw	1
  4409  1B8C                     u3265:
  4410  1B8C  1003               	clrc
  4411  1B8D  0DA7               	rlf	___lwdiv@quotient,f
  4412  1B8E  0DA8               	rlf	___lwdiv@quotient+1,f
  4413  1B8F  3EFF               	addlw	-1
  4414  1B90  1D03               	skipz
  4415  1B91  2B8C               	goto	u3265
  4416  1B92  0823               	movf	___lwdiv@divisor+1,w
  4417  1B93  0225               	subwf	___lwdiv@dividend+1,w
  4418  1B94  1D03               	skipz
  4419  1B95  2B98               	goto	u3275
  4420  1B96  0822               	movf	___lwdiv@divisor,w
  4421  1B97  0224               	subwf	___lwdiv@dividend,w
  4422  1B98                     u3275:
  4423  1B98  1C03               	skipc
  4424  1B99  2B9B               	goto	u3271
  4425  1B9A  2B9C               	goto	u3270
  4426  1B9B                     u3271:
  4427  1B9B  2BA3               	goto	l2471
  4428  1B9C                     u3270:
  4429  1B9C                     l2467:
  4430  1B9C  0822               	movf	___lwdiv@divisor,w
  4431  1B9D  02A4               	subwf	___lwdiv@dividend,f
  4432  1B9E  0823               	movf	___lwdiv@divisor+1,w
  4433  1B9F  1C03               	skipc
  4434  1BA0  03A5               	decf	___lwdiv@dividend+1,f
  4435  1BA1  02A5               	subwf	___lwdiv@dividend+1,f
  4436  1BA2                     l2469:
  4437  1BA2  1427               	bsf	___lwdiv@quotient,0
  4438  1BA3                     l2471:
  4439  1BA3  3001               	movlw	1
  4440  1BA4                     u3285:
  4441  1BA4  1003               	clrc
  4442  1BA5  0CA3               	rrf	___lwdiv@divisor+1,f
  4443  1BA6  0CA2               	rrf	___lwdiv@divisor,f
  4444  1BA7  3EFF               	addlw	-1
  4445  1BA8  1D03               	skipz
  4446  1BA9  2BA4               	goto	u3285
  4447  1BAA                     l2473:
  4448  1BAA  3001               	movlw	1
  4449  1BAB  02A9               	subwf	___lwdiv@counter,f
  4450  1BAC  1D03               	btfss	3,2
  4451  1BAD  2BAF               	goto	u3291
  4452  1BAE  2BB0               	goto	u3290
  4453  1BAF                     u3291:
  4454  1BAF  2B8B               	goto	l2465
  4455  1BB0                     u3290:
  4456  1BB0                     l2475:
  4457  1BB0  0828               	movf	___lwdiv@quotient+1,w
  4458  1BB1  00A3               	movwf	?___lwdiv+1
  4459  1BB2  0827               	movf	___lwdiv@quotient,w
  4460  1BB3  00A2               	movwf	?___lwdiv
  4461  1BB4                     l730:
  4462  1BB4  0008               	return
  4463  1BB5                     __end_of___lwdiv:
  4464                           
  4465                           	psect	text9
  4466  10F9                     __ptext9:	
  4467 ;; *************** function __tdiv_to_l_ *****************
  4468 ;; Defined at:
  4469 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;  f1              4    0[BANK0 ] float 
  4472 ;;  f2              4    4[BANK0 ] float 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  quot            4    8[BANK0 ] unsigned long 
  4475 ;;  exp1            1   13[BANK0 ] unsigned char 
  4476 ;;  cntr            1   12[BANK0 ] unsigned char 
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  4    0[BANK0 ] unsigned long 
  4479 ;; Registers used:
  4480 ;;		wreg, status,2, status,0
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4486 ;;      Params:         0       8       0       0       0
  4487 ;;      Locals:         0       6       0       0       0
  4488 ;;      Temps:          4       0       0       0       0
  4489 ;;      Totals:         4      14       0       0       0
  4490 ;;Total ram usage:       18 bytes
  4491 ;; Hardware stack levels used:    1
  4492 ;; Hardware stack levels required when called:    2
  4493 ;; This function calls:
  4494 ;;		Nothing
  4495 ;; This function is called by:
  4496 ;;		_sprintf
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           
  4501                           ;psect for function __tdiv_to_l_
  4502  10F9                     __tdiv_to_l_:
  4503  10F9                     l2931:	
  4504                           ;incstack = 0
  4505                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4506                           
  4507  10F9  1283               	bcf	3,5	;RP0=0, select bank0
  4508  10FA  1303               	bcf	3,6	;RP1=0, select bank0
  4509  10FB  0820               	movf	__tdiv_to_l_@f1,w
  4510  10FC  00F5               	movwf	??__tdiv_to_l_
  4511  10FD  0821               	movf	__tdiv_to_l_@f1+1,w
  4512  10FE  00F6               	movwf	??__tdiv_to_l_+1
  4513  10FF  0822               	movf	__tdiv_to_l_@f1+2,w
  4514  1100  00F7               	movwf	??__tdiv_to_l_+2
  4515  1101  1003               	clrc
  4516  1102  0D76               	rlf	??__tdiv_to_l_+1,w
  4517  1103  0D77               	rlf	??__tdiv_to_l_+2,w
  4518  1104  00F8               	movwf	??__tdiv_to_l_+3
  4519  1105  0878               	movf	??__tdiv_to_l_+3,w
  4520  1106  00AD               	movwf	__tdiv_to_l_@exp1
  4521  1107  082D               	movf	__tdiv_to_l_@exp1,w
  4522  1108  1D03               	btfss	3,2
  4523  1109  290B               	goto	u4471
  4524  110A  290C               	goto	u4470
  4525  110B                     u4471:
  4526  110B  2915               	goto	l2937
  4527  110C                     u4470:
  4528  110C                     l2933:
  4529  110C  3000               	movlw	0
  4530  110D  00A3               	movwf	?__tdiv_to_l_+3
  4531  110E  3000               	movlw	0
  4532  110F  00A2               	movwf	?__tdiv_to_l_+2
  4533  1110  3000               	movlw	0
  4534  1111  00A1               	movwf	?__tdiv_to_l_+1
  4535  1112  3000               	movlw	0
  4536  1113  00A0               	movwf	?__tdiv_to_l_
  4537  1114  29B5               	goto	l641
  4538  1115                     l2937:
  4539  1115  0824               	movf	__tdiv_to_l_@f2,w
  4540  1116  00F5               	movwf	??__tdiv_to_l_
  4541  1117  0825               	movf	__tdiv_to_l_@f2+1,w
  4542  1118  00F6               	movwf	??__tdiv_to_l_+1
  4543  1119  0826               	movf	__tdiv_to_l_@f2+2,w
  4544  111A  00F7               	movwf	??__tdiv_to_l_+2
  4545  111B  1003               	clrc
  4546  111C  0D76               	rlf	??__tdiv_to_l_+1,w
  4547  111D  0D77               	rlf	??__tdiv_to_l_+2,w
  4548  111E  00F8               	movwf	??__tdiv_to_l_+3
  4549  111F  0878               	movf	??__tdiv_to_l_+3,w
  4550  1120  00AC               	movwf	__tdiv_to_l_@cntr
  4551  1121  082C               	movf	__tdiv_to_l_@cntr,w
  4552  1122  1D03               	btfss	3,2
  4553  1123  2925               	goto	u4481
  4554  1124  2926               	goto	u4480
  4555  1125                     u4481:
  4556  1125  2927               	goto	l642
  4557  1126                     u4480:
  4558  1126  290C               	goto	l2933
  4559  1127                     l642:
  4560  1127  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4561  1128                     l2943:
  4562  1128  30FF               	movlw	255
  4563  1129  05A0               	andwf	__tdiv_to_l_@f1,f
  4564  112A  30FF               	movlw	255
  4565  112B  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4566  112C  3000               	movlw	0
  4567  112D  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4568  112E                     l2945:
  4569  112E  17A5               	bsf	__tdiv_to_l_@f2+1,7
  4570  112F  30FF               	movlw	255
  4571  1130  05A4               	andwf	__tdiv_to_l_@f2,f
  4572  1131  30FF               	movlw	255
  4573  1132  05A5               	andwf	__tdiv_to_l_@f2+1,f
  4574  1133  3000               	movlw	0
  4575  1134  05A6               	andwf	__tdiv_to_l_@f2+2,f
  4576  1135  3000               	movlw	0
  4577  1136  00AB               	movwf	__tdiv_to_l_@quot+3
  4578  1137  3000               	movlw	0
  4579  1138  00AA               	movwf	__tdiv_to_l_@quot+2
  4580  1139  3000               	movlw	0
  4581  113A  00A9               	movwf	__tdiv_to_l_@quot+1
  4582  113B  3000               	movlw	0
  4583  113C  00A8               	movwf	__tdiv_to_l_@quot
  4584  113D                     l2947:
  4585  113D  307F               	movlw	127
  4586  113E  02AD               	subwf	__tdiv_to_l_@exp1,f
  4587  113F                     l2949:
  4588  113F  3098               	movlw	152
  4589  1140  072C               	addwf	__tdiv_to_l_@cntr,w
  4590  1141  00F5               	movwf	??__tdiv_to_l_
  4591  1142  0875               	movf	??__tdiv_to_l_,w
  4592  1143  02AD               	subwf	__tdiv_to_l_@exp1,f
  4593  1144  3018               	movlw	24
  4594  1145  00F5               	movwf	??__tdiv_to_l_
  4595  1146  0875               	movf	??__tdiv_to_l_,w
  4596  1147  00AC               	movwf	__tdiv_to_l_@cntr
  4597  1148                     l2951:
  4598  1148  3001               	movlw	1
  4599  1149  00F5               	movwf	??__tdiv_to_l_
  4600  114A                     u4495:
  4601  114A  1003               	clrc
  4602  114B  0DA8               	rlf	__tdiv_to_l_@quot,f
  4603  114C  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  4604  114D  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  4605  114E  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  4606  114F  0BF5               	decfsz	??__tdiv_to_l_,f
  4607  1150  294A               	goto	u4495
  4608  1151                     l2953:
  4609  1151  0826               	movf	__tdiv_to_l_@f2+2,w
  4610  1152  0222               	subwf	__tdiv_to_l_@f1+2,w
  4611  1153  1D03               	skipz
  4612  1154  295B               	goto	u4505
  4613  1155  0825               	movf	__tdiv_to_l_@f2+1,w
  4614  1156  0221               	subwf	__tdiv_to_l_@f1+1,w
  4615  1157  1D03               	skipz
  4616  1158  295B               	goto	u4505
  4617  1159  0824               	movf	__tdiv_to_l_@f2,w
  4618  115A  0220               	subwf	__tdiv_to_l_@f1,w
  4619  115B                     u4505:
  4620  115B  1C03               	skipc
  4621  115C  295E               	goto	u4501
  4622  115D  295F               	goto	u4500
  4623  115E                     u4501:
  4624  115E  296A               	goto	l2959
  4625  115F                     u4500:
  4626  115F                     l2955:
  4627  115F  0824               	movf	__tdiv_to_l_@f2,w
  4628  1160  02A0               	subwf	__tdiv_to_l_@f1,f
  4629  1161  0825               	movf	__tdiv_to_l_@f2+1,w
  4630  1162  1C03               	skipc
  4631  1163  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  4632  1164  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4633  1165  0826               	movf	__tdiv_to_l_@f2+2,w
  4634  1166  1C03               	skipc
  4635  1167  0A26               	incf	__tdiv_to_l_@f2+2,w
  4636  1168  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4637  1169                     l2957:
  4638  1169  1428               	bsf	__tdiv_to_l_@quot,0
  4639  116A                     l2959:
  4640  116A  3001               	movlw	1
  4641  116B                     u4515:
  4642  116B  1003               	clrc
  4643  116C  0DA0               	rlf	__tdiv_to_l_@f1,f
  4644  116D  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4645  116E  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4646  116F  3EFF               	addlw	-1
  4647  1170  1D03               	skipz
  4648  1171  296B               	goto	u4515
  4649  1172                     l2961:
  4650  1172  3001               	movlw	1
  4651  1173  02AC               	subwf	__tdiv_to_l_@cntr,f
  4652  1174  1D03               	btfss	3,2
  4653  1175  2977               	goto	u4521
  4654  1176  2978               	goto	u4520
  4655  1177                     u4521:
  4656  1177  2948               	goto	l2951
  4657  1178                     u4520:
  4658  1178                     l645:
  4659  1178  1FAD               	btfss	__tdiv_to_l_@exp1,7
  4660  1179  297B               	goto	u4531
  4661  117A  297C               	goto	u4530
  4662  117B                     u4531:
  4663  117B  2996               	goto	l2971
  4664  117C                     u4530:
  4665  117C                     l2963:
  4666  117C  082D               	movf	__tdiv_to_l_@exp1,w
  4667  117D  3A80               	xorlw	128
  4668  117E  3E97               	addlw	151
  4669  117F  1803               	skipnc
  4670  1180  2982               	goto	u4541
  4671  1181  2983               	goto	u4540
  4672  1182                     u4541:
  4673  1182  2984               	goto	l2969
  4674  1183                     u4540:
  4675  1183  290C               	goto	l2933
  4676  1184                     l2969:
  4677  1184  3001               	movlw	1
  4678  1185                     u4555:
  4679  1185  1003               	clrc
  4680  1186  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  4681  1187  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  4682  1188  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  4683  1189  0CA8               	rrf	__tdiv_to_l_@quot,f
  4684  118A  3EFF               	addlw	-1
  4685  118B  1D03               	skipz
  4686  118C  2985               	goto	u4555
  4687  118D  3001               	movlw	1
  4688  118E  00F5               	movwf	??__tdiv_to_l_
  4689  118F  0875               	movf	??__tdiv_to_l_,w
  4690  1190  07AD               	addwf	__tdiv_to_l_@exp1,f
  4691  1191  1D03               	btfss	3,2
  4692  1192  2994               	goto	u4561
  4693  1193  2995               	goto	u4560
  4694  1194                     u4561:
  4695  1194  2984               	goto	l2969
  4696  1195                     u4560:
  4697  1195  29AD               	goto	l2979
  4698  1196                     l2971:
  4699  1196  3018               	movlw	24
  4700  1197  022D               	subwf	__tdiv_to_l_@exp1,w
  4701  1198  1C03               	skipc
  4702  1199  299B               	goto	u4571
  4703  119A  299C               	goto	u4570
  4704  119B                     u4571:
  4705  119B  29A8               	goto	l652
  4706  119C                     u4570:
  4707  119C  290C               	goto	l2933
  4708  119D                     l2977:
  4709  119D  3001               	movlw	1
  4710  119E  00F5               	movwf	??__tdiv_to_l_
  4711  119F                     u4585:
  4712  119F  1003               	clrc
  4713  11A0  0DA8               	rlf	__tdiv_to_l_@quot,f
  4714  11A1  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  4715  11A2  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  4716  11A3  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  4717  11A4  0BF5               	decfsz	??__tdiv_to_l_,f
  4718  11A5  299F               	goto	u4585
  4719  11A6  3001               	movlw	1
  4720  11A7  02AD               	subwf	__tdiv_to_l_@exp1,f
  4721  11A8                     l652:
  4722  11A8  082D               	movf	__tdiv_to_l_@exp1,w
  4723  11A9  1D03               	btfss	3,2
  4724  11AA  29AC               	goto	u4591
  4725  11AB  29AD               	goto	u4590
  4726  11AC                     u4591:
  4727  11AC  299D               	goto	l2977
  4728  11AD                     u4590:
  4729  11AD                     l2979:
  4730  11AD  082B               	movf	__tdiv_to_l_@quot+3,w
  4731  11AE  00A3               	movwf	?__tdiv_to_l_+3
  4732  11AF  082A               	movf	__tdiv_to_l_@quot+2,w
  4733  11B0  00A2               	movwf	?__tdiv_to_l_+2
  4734  11B1  0829               	movf	__tdiv_to_l_@quot+1,w
  4735  11B2  00A1               	movwf	?__tdiv_to_l_+1
  4736  11B3  0828               	movf	__tdiv_to_l_@quot,w
  4737  11B4  00A0               	movwf	?__tdiv_to_l_
  4738  11B5                     l641:
  4739  11B5  0008               	return
  4740  11B6                     __end_of__tdiv_to_l_:
  4741                           
  4742                           	psect	text10
  4743  11B6                     __ptext10:	
  4744 ;; *************** function __div_to_l_ *****************
  4745 ;; Defined at:
  4746 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  f1              4    0[BANK0 ] unsigned long 
  4749 ;;  f2              4    4[BANK0 ] unsigned long 
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  quot            4    8[BANK0 ] unsigned long 
  4752 ;;  exp1            1   13[BANK0 ] unsigned char 
  4753 ;;  cntr            1   12[BANK0 ] unsigned char 
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  4    0[BANK0 ] unsigned long 
  4756 ;; Registers used:
  4757 ;;		wreg, status,2, status,0
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4763 ;;      Params:         0       8       0       0       0
  4764 ;;      Locals:         0       6       0       0       0
  4765 ;;      Temps:          1       0       0       0       0
  4766 ;;      Totals:         1      14       0       0       0
  4767 ;;Total ram usage:       15 bytes
  4768 ;; Hardware stack levels used:    1
  4769 ;; Hardware stack levels required when called:    2
  4770 ;; This function calls:
  4771 ;;		Nothing
  4772 ;; This function is called by:
  4773 ;;		_sprintf
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           
  4778                           ;psect for function __div_to_l_
  4779  11B6                     __div_to_l_:
  4780  11B6                     l2983:	
  4781                           ;incstack = 0
  4782                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  4783                           
  4784  11B6  1003               	clrc
  4785  11B7  1283               	bcf	3,5	;RP0=0, select bank0
  4786  11B8  1303               	bcf	3,6	;RP1=0, select bank0
  4787  11B9  0D22               	rlf	__div_to_l_@f1+2,w
  4788  11BA  0D23               	rlf	__div_to_l_@f1+3,w
  4789  11BB  00F5               	movwf	??__div_to_l_
  4790  11BC  0875               	movf	??__div_to_l_,w
  4791  11BD  00AD               	movwf	__div_to_l_@exp1
  4792  11BE  082D               	movf	__div_to_l_@exp1,w
  4793  11BF  1D03               	btfss	3,2
  4794  11C0  29C2               	goto	u4601
  4795  11C1  29C3               	goto	u4600
  4796  11C2                     u4601:
  4797  11C2  29CC               	goto	l2989
  4798  11C3                     u4600:
  4799  11C3                     l2985:
  4800  11C3  3000               	movlw	0
  4801  11C4  00A3               	movwf	?__div_to_l_+3
  4802  11C5  3000               	movlw	0
  4803  11C6  00A2               	movwf	?__div_to_l_+2
  4804  11C7  3000               	movlw	0
  4805  11C8  00A1               	movwf	?__div_to_l_+1
  4806  11C9  3000               	movlw	0
  4807  11CA  00A0               	movwf	?__div_to_l_
  4808  11CB  2A73               	goto	l594
  4809  11CC                     l2989:
  4810  11CC  1003               	clrc
  4811  11CD  0D26               	rlf	__div_to_l_@f2+2,w
  4812  11CE  0D27               	rlf	__div_to_l_@f2+3,w
  4813  11CF  00F5               	movwf	??__div_to_l_
  4814  11D0  0875               	movf	??__div_to_l_,w
  4815  11D1  00AC               	movwf	__div_to_l_@cntr
  4816  11D2  082C               	movf	__div_to_l_@cntr,w
  4817  11D3  1D03               	btfss	3,2
  4818  11D4  29D6               	goto	u4611
  4819  11D5  29D7               	goto	u4610
  4820  11D6                     u4611:
  4821  11D6  29D8               	goto	l595
  4822  11D7                     u4610:
  4823  11D7  29C3               	goto	l2985
  4824  11D8                     l595:
  4825  11D8  17A2               	bsf	__div_to_l_@f1+2,7
  4826  11D9                     l2995:
  4827  11D9  30FF               	movlw	255
  4828  11DA  05A0               	andwf	__div_to_l_@f1,f
  4829  11DB  30FF               	movlw	255
  4830  11DC  05A1               	andwf	__div_to_l_@f1+1,f
  4831  11DD  30FF               	movlw	255
  4832  11DE  05A2               	andwf	__div_to_l_@f1+2,f
  4833  11DF  3000               	movlw	0
  4834  11E0  05A3               	andwf	__div_to_l_@f1+3,f
  4835  11E1                     l2997:
  4836  11E1  17A6               	bsf	__div_to_l_@f2+2,7
  4837  11E2  30FF               	movlw	255
  4838  11E3  05A4               	andwf	__div_to_l_@f2,f
  4839  11E4  30FF               	movlw	255
  4840  11E5  05A5               	andwf	__div_to_l_@f2+1,f
  4841  11E6  30FF               	movlw	255
  4842  11E7  05A6               	andwf	__div_to_l_@f2+2,f
  4843  11E8  3000               	movlw	0
  4844  11E9  05A7               	andwf	__div_to_l_@f2+3,f
  4845  11EA  3000               	movlw	0
  4846  11EB  00AB               	movwf	__div_to_l_@quot+3
  4847  11EC  3000               	movlw	0
  4848  11ED  00AA               	movwf	__div_to_l_@quot+2
  4849  11EE  3000               	movlw	0
  4850  11EF  00A9               	movwf	__div_to_l_@quot+1
  4851  11F0  3000               	movlw	0
  4852  11F1  00A8               	movwf	__div_to_l_@quot
  4853  11F2                     l2999:
  4854  11F2  307F               	movlw	127
  4855  11F3  02AD               	subwf	__div_to_l_@exp1,f
  4856  11F4                     l3001:
  4857  11F4  30A0               	movlw	160
  4858  11F5  072C               	addwf	__div_to_l_@cntr,w
  4859  11F6  00F5               	movwf	??__div_to_l_
  4860  11F7  0875               	movf	??__div_to_l_,w
  4861  11F8  02AD               	subwf	__div_to_l_@exp1,f
  4862  11F9  3020               	movlw	32
  4863  11FA  00F5               	movwf	??__div_to_l_
  4864  11FB  0875               	movf	??__div_to_l_,w
  4865  11FC  00AC               	movwf	__div_to_l_@cntr
  4866  11FD                     l3003:
  4867  11FD  3001               	movlw	1
  4868  11FE  00F5               	movwf	??__div_to_l_
  4869  11FF                     u4625:
  4870  11FF  1003               	clrc
  4871  1200  0DA8               	rlf	__div_to_l_@quot,f
  4872  1201  0DA9               	rlf	__div_to_l_@quot+1,f
  4873  1202  0DAA               	rlf	__div_to_l_@quot+2,f
  4874  1203  0DAB               	rlf	__div_to_l_@quot+3,f
  4875  1204  0BF5               	decfsz	??__div_to_l_,f
  4876  1205  29FF               	goto	u4625
  4877  1206                     l3005:
  4878  1206  0827               	movf	__div_to_l_@f2+3,w
  4879  1207  0223               	subwf	__div_to_l_@f1+3,w
  4880  1208  1D03               	skipz
  4881  1209  2A14               	goto	u4635
  4882  120A  0826               	movf	__div_to_l_@f2+2,w
  4883  120B  0222               	subwf	__div_to_l_@f1+2,w
  4884  120C  1D03               	skipz
  4885  120D  2A14               	goto	u4635
  4886  120E  0825               	movf	__div_to_l_@f2+1,w
  4887  120F  0221               	subwf	__div_to_l_@f1+1,w
  4888  1210  1D03               	skipz
  4889  1211  2A14               	goto	u4635
  4890  1212  0824               	movf	__div_to_l_@f2,w
  4891  1213  0220               	subwf	__div_to_l_@f1,w
  4892  1214                     u4635:
  4893  1214  1C03               	skipc
  4894  1215  2A17               	goto	u4631
  4895  1216  2A18               	goto	u4630
  4896  1217                     u4631:
  4897  1217  2A27               	goto	l3011
  4898  1218                     u4630:
  4899  1218                     l3007:
  4900  1218  0824               	movf	__div_to_l_@f2,w
  4901  1219  02A0               	subwf	__div_to_l_@f1,f
  4902  121A  0825               	movf	__div_to_l_@f2+1,w
  4903  121B  1C03               	skipc
  4904  121C  0F25               	incfsz	__div_to_l_@f2+1,w
  4905  121D  02A1               	subwf	__div_to_l_@f1+1,f
  4906  121E  0826               	movf	__div_to_l_@f2+2,w
  4907  121F  1C03               	skipc
  4908  1220  0F26               	incfsz	__div_to_l_@f2+2,w
  4909  1221  02A2               	subwf	__div_to_l_@f1+2,f
  4910  1222  0827               	movf	__div_to_l_@f2+3,w
  4911  1223  1C03               	skipc
  4912  1224  0F27               	incfsz	__div_to_l_@f2+3,w
  4913  1225  02A3               	subwf	__div_to_l_@f1+3,f
  4914  1226                     l3009:
  4915  1226  1428               	bsf	__div_to_l_@quot,0
  4916  1227                     l3011:
  4917  1227  3001               	movlw	1
  4918  1228  00F5               	movwf	??__div_to_l_
  4919  1229                     u4645:
  4920  1229  1003               	clrc
  4921  122A  0DA0               	rlf	__div_to_l_@f1,f
  4922  122B  0DA1               	rlf	__div_to_l_@f1+1,f
  4923  122C  0DA2               	rlf	__div_to_l_@f1+2,f
  4924  122D  0DA3               	rlf	__div_to_l_@f1+3,f
  4925  122E  0BF5               	decfsz	??__div_to_l_,f
  4926  122F  2A29               	goto	u4645
  4927  1230                     l3013:
  4928  1230  3001               	movlw	1
  4929  1231  02AC               	subwf	__div_to_l_@cntr,f
  4930  1232  1D03               	btfss	3,2
  4931  1233  2A35               	goto	u4651
  4932  1234  2A36               	goto	u4650
  4933  1235                     u4651:
  4934  1235  29FD               	goto	l3003
  4935  1236                     u4650:
  4936  1236                     l598:
  4937  1236  1FAD               	btfss	__div_to_l_@exp1,7
  4938  1237  2A39               	goto	u4661
  4939  1238  2A3A               	goto	u4660
  4940  1239                     u4661:
  4941  1239  2A54               	goto	l3023
  4942  123A                     u4660:
  4943  123A                     l3015:
  4944  123A  082D               	movf	__div_to_l_@exp1,w
  4945  123B  3A80               	xorlw	128
  4946  123C  3E9F               	addlw	159
  4947  123D  1803               	skipnc
  4948  123E  2A40               	goto	u4671
  4949  123F  2A41               	goto	u4670
  4950  1240                     u4671:
  4951  1240  2A42               	goto	l3021
  4952  1241                     u4670:
  4953  1241  29C3               	goto	l2985
  4954  1242                     l3021:
  4955  1242  3001               	movlw	1
  4956  1243                     u4685:
  4957  1243  1003               	clrc
  4958  1244  0CAB               	rrf	__div_to_l_@quot+3,f
  4959  1245  0CAA               	rrf	__div_to_l_@quot+2,f
  4960  1246  0CA9               	rrf	__div_to_l_@quot+1,f
  4961  1247  0CA8               	rrf	__div_to_l_@quot,f
  4962  1248  3EFF               	addlw	-1
  4963  1249  1D03               	skipz
  4964  124A  2A43               	goto	u4685
  4965  124B  3001               	movlw	1
  4966  124C  00F5               	movwf	??__div_to_l_
  4967  124D  0875               	movf	??__div_to_l_,w
  4968  124E  07AD               	addwf	__div_to_l_@exp1,f
  4969  124F  1D03               	btfss	3,2
  4970  1250  2A52               	goto	u4691
  4971  1251  2A53               	goto	u4690
  4972  1252                     u4691:
  4973  1252  2A42               	goto	l3021
  4974  1253                     u4690:
  4975  1253  2A6B               	goto	l3031
  4976  1254                     l3023:
  4977  1254  3020               	movlw	32
  4978  1255  022D               	subwf	__div_to_l_@exp1,w
  4979  1256  1C03               	skipc
  4980  1257  2A59               	goto	u4701
  4981  1258  2A5A               	goto	u4700
  4982  1259                     u4701:
  4983  1259  2A66               	goto	l605
  4984  125A                     u4700:
  4985  125A  29C3               	goto	l2985
  4986  125B                     l3029:
  4987  125B  3001               	movlw	1
  4988  125C  00F5               	movwf	??__div_to_l_
  4989  125D                     u4715:
  4990  125D  1003               	clrc
  4991  125E  0DA8               	rlf	__div_to_l_@quot,f
  4992  125F  0DA9               	rlf	__div_to_l_@quot+1,f
  4993  1260  0DAA               	rlf	__div_to_l_@quot+2,f
  4994  1261  0DAB               	rlf	__div_to_l_@quot+3,f
  4995  1262  0BF5               	decfsz	??__div_to_l_,f
  4996  1263  2A5D               	goto	u4715
  4997  1264  3001               	movlw	1
  4998  1265  02AD               	subwf	__div_to_l_@exp1,f
  4999  1266                     l605:
  5000  1266  082D               	movf	__div_to_l_@exp1,w
  5001  1267  1D03               	btfss	3,2
  5002  1268  2A6A               	goto	u4721
  5003  1269  2A6B               	goto	u4720
  5004  126A                     u4721:
  5005  126A  2A5B               	goto	l3029
  5006  126B                     u4720:
  5007  126B                     l3031:
  5008  126B  082B               	movf	__div_to_l_@quot+3,w
  5009  126C  00A3               	movwf	?__div_to_l_+3
  5010  126D  082A               	movf	__div_to_l_@quot+2,w
  5011  126E  00A2               	movwf	?__div_to_l_+2
  5012  126F  0829               	movf	__div_to_l_@quot+1,w
  5013  1270  00A1               	movwf	?__div_to_l_+1
  5014  1271  0828               	movf	__div_to_l_@quot,w
  5015  1272  00A0               	movwf	?__div_to_l_
  5016  1273                     l594:
  5017  1273  0008               	return
  5018  1274                     __end_of__div_to_l_:
  5019                           
  5020                           	psect	text11
  5021  07CA                     __ptext11:	
  5022 ;; *************** function ___wmul *****************
  5023 ;; Defined at:
  5024 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;  multiplier      2    5[COMMON] unsigned int 
  5027 ;;  multiplicand    2    7[COMMON] unsigned int 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  product         2    0[BANK0 ] unsigned int 
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  2    5[COMMON] unsigned int 
  5032 ;; Registers used:
  5033 ;;		wreg, status,2, status,0
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5039 ;;      Params:         4       0       0       0       0
  5040 ;;      Locals:         0       2       0       0       0
  5041 ;;      Temps:          0       0       0       0       0
  5042 ;;      Totals:         4       2       0       0       0
  5043 ;;Total ram usage:        6 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:    2
  5046 ;; This function calls:
  5047 ;;		Nothing
  5048 ;; This function is called by:
  5049 ;;		_sprintf
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           
  5054                           ;psect for function ___wmul
  5055  07CA                     ___wmul:
  5056  07CA                     l3035:	
  5057                           ;incstack = 0
  5058                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5059                           
  5060  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  5061  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  5062  07CC  01A0               	clrf	___wmul@product
  5063  07CD  01A1               	clrf	___wmul@product+1
  5064  07CE                     l3037:
  5065  07CE  1C75               	btfss	___wmul@multiplier,0
  5066  07CF  2FD1               	goto	u4731
  5067  07D0  2FD2               	goto	u4730
  5068  07D1                     u4731:
  5069  07D1  2FDA               	goto	l424
  5070  07D2                     u4730:
  5071  07D2                     l3039:
  5072  07D2  0877               	movf	___wmul@multiplicand,w
  5073  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  5074  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  5075  07D5  07A0               	addwf	___wmul@product,f
  5076  07D6  1803               	skipnc
  5077  07D7  0AA1               	incf	___wmul@product+1,f
  5078  07D8  0878               	movf	___wmul@multiplicand+1,w
  5079  07D9  07A1               	addwf	___wmul@product+1,f
  5080  07DA                     l424:
  5081  07DA  3001               	movlw	1
  5082  07DB                     u4745:
  5083  07DB  1003               	clrc
  5084  07DC  0DF7               	rlf	___wmul@multiplicand,f
  5085  07DD  0DF8               	rlf	___wmul@multiplicand+1,f
  5086  07DE  3EFF               	addlw	-1
  5087  07DF  1D03               	skipz
  5088  07E0  2FDB               	goto	u4745
  5089  07E1                     l3041:
  5090  07E1  3001               	movlw	1
  5091  07E2                     u4755:
  5092  07E2  1003               	clrc
  5093  07E3  0CF6               	rrf	___wmul@multiplier+1,f
  5094  07E4  0CF5               	rrf	___wmul@multiplier,f
  5095  07E5  3EFF               	addlw	-1
  5096  07E6  1D03               	skipz
  5097  07E7  2FE2               	goto	u4755
  5098  07E8                     l3043:
  5099  07E8  0875               	movf	___wmul@multiplier,w
  5100  07E9  0476               	iorwf	___wmul@multiplier+1,w
  5101  07EA  1D03               	btfss	3,2
  5102  07EB  2FED               	goto	u4761
  5103  07EC  2FEE               	goto	u4760
  5104  07ED                     u4761:
  5105  07ED  2FCE               	goto	l3037
  5106  07EE                     u4760:
  5107  07EE                     l3045:
  5108  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  5109  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  5110  07F0  0821               	movf	___wmul@product+1,w
  5111  07F1  00F6               	movwf	?___wmul+1
  5112  07F2  0820               	movf	___wmul@product,w
  5113  07F3  00F5               	movwf	?___wmul
  5114  07F4                     l426:
  5115  07F4  0008               	return
  5116  07F5                     __end_of___wmul:
  5117                           
  5118                           	psect	text12
  5119  1CA2                     __ptext12:	
  5120 ;; *************** function ___llmod *****************
  5121 ;; Defined at:
  5122 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;  divisor         4    0[BANK0 ] unsigned long 
  5125 ;;  dividend        4    4[BANK0 ] unsigned long 
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;  counter         1    6[COMMON] unsigned char 
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  4    0[BANK0 ] unsigned long 
  5130 ;; Registers used:
  5131 ;;		wreg, status,2, status,0
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5137 ;;      Params:         0       8       0       0       0
  5138 ;;      Locals:         1       0       0       0       0
  5139 ;;      Temps:          1       0       0       0       0
  5140 ;;      Totals:         2       8       0       0       0
  5141 ;;Total ram usage:       10 bytes
  5142 ;; Hardware stack levels used:    1
  5143 ;; Hardware stack levels required when called:    2
  5144 ;; This function calls:
  5145 ;;		Nothing
  5146 ;; This function is called by:
  5147 ;;		_sprintf
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           
  5152                           ;psect for function ___llmod
  5153  1CA2                     ___llmod:
  5154  1CA2                     l3149:	
  5155                           ;incstack = 0
  5156                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5157                           
  5158  1CA2  1283               	bcf	3,5	;RP0=0, select bank0
  5159  1CA3  1303               	bcf	3,6	;RP1=0, select bank0
  5160  1CA4  0823               	movf	___llmod@divisor+3,w
  5161  1CA5  0422               	iorwf	___llmod@divisor+2,w
  5162  1CA6  0421               	iorwf	___llmod@divisor+1,w
  5163  1CA7  0420               	iorwf	___llmod@divisor,w
  5164  1CA8  1903               	skipnz
  5165  1CA9  2CAB               	goto	u5051
  5166  1CAA  2CAC               	goto	u5050
  5167  1CAB                     u5051:
  5168  1CAB  2CEF               	goto	l3165
  5169  1CAC                     u5050:
  5170  1CAC                     l3151:
  5171  1CAC  01F6               	clrf	___llmod@counter
  5172  1CAD  0AF6               	incf	___llmod@counter,f
  5173  1CAE  2CBC               	goto	l3155
  5174  1CAF                     l3153:
  5175  1CAF  3001               	movlw	1
  5176  1CB0  00F5               	movwf	??___llmod
  5177  1CB1                     u5065:
  5178  1CB1  1003               	clrc
  5179  1CB2  0DA0               	rlf	___llmod@divisor,f
  5180  1CB3  0DA1               	rlf	___llmod@divisor+1,f
  5181  1CB4  0DA2               	rlf	___llmod@divisor+2,f
  5182  1CB5  0DA3               	rlf	___llmod@divisor+3,f
  5183  1CB6  0BF5               	decfsz	??___llmod,f
  5184  1CB7  2CB1               	goto	u5065
  5185  1CB8  3001               	movlw	1
  5186  1CB9  00F5               	movwf	??___llmod
  5187  1CBA  0875               	movf	??___llmod,w
  5188  1CBB  07F6               	addwf	___llmod@counter,f
  5189  1CBC                     l3155:
  5190  1CBC  1FA3               	btfss	___llmod@divisor+3,7
  5191  1CBD  2CBF               	goto	u5071
  5192  1CBE  2CC0               	goto	u5070
  5193  1CBF                     u5071:
  5194  1CBF  2CAF               	goto	l3153
  5195  1CC0                     u5070:
  5196  1CC0                     l3157:
  5197  1CC0  0823               	movf	___llmod@divisor+3,w
  5198  1CC1  0227               	subwf	___llmod@dividend+3,w
  5199  1CC2  1D03               	skipz
  5200  1CC3  2CCE               	goto	u5085
  5201  1CC4  0822               	movf	___llmod@divisor+2,w
  5202  1CC5  0226               	subwf	___llmod@dividend+2,w
  5203  1CC6  1D03               	skipz
  5204  1CC7  2CCE               	goto	u5085
  5205  1CC8  0821               	movf	___llmod@divisor+1,w
  5206  1CC9  0225               	subwf	___llmod@dividend+1,w
  5207  1CCA  1D03               	skipz
  5208  1CCB  2CCE               	goto	u5085
  5209  1CCC  0820               	movf	___llmod@divisor,w
  5210  1CCD  0224               	subwf	___llmod@dividend,w
  5211  1CCE                     u5085:
  5212  1CCE  1C03               	skipc
  5213  1CCF  2CD1               	goto	u5081
  5214  1CD0  2CD2               	goto	u5080
  5215  1CD1                     u5081:
  5216  1CD1  2CE0               	goto	l3161
  5217  1CD2                     u5080:
  5218  1CD2                     l3159:
  5219  1CD2  0820               	movf	___llmod@divisor,w
  5220  1CD3  02A4               	subwf	___llmod@dividend,f
  5221  1CD4  0821               	movf	___llmod@divisor+1,w
  5222  1CD5  1C03               	skipc
  5223  1CD6  0F21               	incfsz	___llmod@divisor+1,w
  5224  1CD7  02A5               	subwf	___llmod@dividend+1,f
  5225  1CD8  0822               	movf	___llmod@divisor+2,w
  5226  1CD9  1C03               	skipc
  5227  1CDA  0F22               	incfsz	___llmod@divisor+2,w
  5228  1CDB  02A6               	subwf	___llmod@dividend+2,f
  5229  1CDC  0823               	movf	___llmod@divisor+3,w
  5230  1CDD  1C03               	skipc
  5231  1CDE  0F23               	incfsz	___llmod@divisor+3,w
  5232  1CDF  02A7               	subwf	___llmod@dividend+3,f
  5233  1CE0                     l3161:
  5234  1CE0  3001               	movlw	1
  5235  1CE1                     u5095:
  5236  1CE1  1003               	clrc
  5237  1CE2  0CA3               	rrf	___llmod@divisor+3,f
  5238  1CE3  0CA2               	rrf	___llmod@divisor+2,f
  5239  1CE4  0CA1               	rrf	___llmod@divisor+1,f
  5240  1CE5  0CA0               	rrf	___llmod@divisor,f
  5241  1CE6  3EFF               	addlw	-1
  5242  1CE7  1D03               	skipz
  5243  1CE8  2CE1               	goto	u5095
  5244  1CE9                     l3163:
  5245  1CE9  3001               	movlw	1
  5246  1CEA  02F6               	subwf	___llmod@counter,f
  5247  1CEB  1D03               	btfss	3,2
  5248  1CEC  2CEE               	goto	u5101
  5249  1CED  2CEF               	goto	u5100
  5250  1CEE                     u5101:
  5251  1CEE  2CC0               	goto	l3157
  5252  1CEF                     u5100:
  5253  1CEF                     l3165:
  5254  1CEF  0827               	movf	___llmod@dividend+3,w
  5255  1CF0  00A3               	movwf	?___llmod+3
  5256  1CF1  0826               	movf	___llmod@dividend+2,w
  5257  1CF2  00A2               	movwf	?___llmod+2
  5258  1CF3  0825               	movf	___llmod@dividend+1,w
  5259  1CF4  00A1               	movwf	?___llmod+1
  5260  1CF5  0824               	movf	___llmod@dividend,w
  5261  1CF6  00A0               	movwf	?___llmod
  5262  1CF7                     l680:
  5263  1CF7  0008               	return
  5264  1CF8                     __end_of___llmod:
  5265                           
  5266                           	psect	text13
  5267  1D53                     __ptext13:	
  5268 ;; *************** function ___lldiv *****************
  5269 ;; Defined at:
  5270 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  divisor         4    0[BANK0 ] unsigned long 
  5273 ;;  dividend        4    4[BANK0 ] unsigned long 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;  quotient        4    8[BANK0 ] unsigned long 
  5276 ;;  counter         1   12[BANK0 ] unsigned char 
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  4    0[BANK0 ] unsigned long 
  5279 ;; Registers used:
  5280 ;;		wreg, status,2, status,0
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5286 ;;      Params:         0       8       0       0       0
  5287 ;;      Locals:         0       5       0       0       0
  5288 ;;      Temps:          1       0       0       0       0
  5289 ;;      Totals:         1      13       0       0       0
  5290 ;;Total ram usage:       14 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; Hardware stack levels required when called:    2
  5293 ;; This function calls:
  5294 ;;		Nothing
  5295 ;; This function is called by:
  5296 ;;		_sprintf
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           
  5301                           ;psect for function ___lldiv
  5302  1D53                     ___lldiv:
  5303  1D53                     l3049:	
  5304                           ;incstack = 0
  5305                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5306                           
  5307  1D53  3000               	movlw	0
  5308  1D54  1283               	bcf	3,5	;RP0=0, select bank0
  5309  1D55  1303               	bcf	3,6	;RP1=0, select bank0
  5310  1D56  00AB               	movwf	___lldiv@quotient+3
  5311  1D57  3000               	movlw	0
  5312  1D58  00AA               	movwf	___lldiv@quotient+2
  5313  1D59  3000               	movlw	0
  5314  1D5A  00A9               	movwf	___lldiv@quotient+1
  5315  1D5B  3000               	movlw	0
  5316  1D5C  00A8               	movwf	___lldiv@quotient
  5317  1D5D  0823               	movf	___lldiv@divisor+3,w
  5318  1D5E  0422               	iorwf	___lldiv@divisor+2,w
  5319  1D5F  0421               	iorwf	___lldiv@divisor+1,w
  5320  1D60  0420               	iorwf	___lldiv@divisor,w
  5321  1D61  1903               	skipnz
  5322  1D62  2D64               	goto	u4771
  5323  1D63  2D65               	goto	u4770
  5324  1D64                     u4771:
  5325  1D64  2DB2               	goto	l3069
  5326  1D65                     u4770:
  5327  1D65                     l3051:
  5328  1D65  01AC               	clrf	___lldiv@counter
  5329  1D66  0AAC               	incf	___lldiv@counter,f
  5330  1D67  2D75               	goto	l3055
  5331  1D68                     l3053:
  5332  1D68  3001               	movlw	1
  5333  1D69  00F5               	movwf	??___lldiv
  5334  1D6A                     u4785:
  5335  1D6A  1003               	clrc
  5336  1D6B  0DA0               	rlf	___lldiv@divisor,f
  5337  1D6C  0DA1               	rlf	___lldiv@divisor+1,f
  5338  1D6D  0DA2               	rlf	___lldiv@divisor+2,f
  5339  1D6E  0DA3               	rlf	___lldiv@divisor+3,f
  5340  1D6F  0BF5               	decfsz	??___lldiv,f
  5341  1D70  2D6A               	goto	u4785
  5342  1D71  3001               	movlw	1
  5343  1D72  00F5               	movwf	??___lldiv
  5344  1D73  0875               	movf	??___lldiv,w
  5345  1D74  07AC               	addwf	___lldiv@counter,f
  5346  1D75                     l3055:
  5347  1D75  1FA3               	btfss	___lldiv@divisor+3,7
  5348  1D76  2D78               	goto	u4791
  5349  1D77  2D79               	goto	u4790
  5350  1D78                     u4791:
  5351  1D78  2D68               	goto	l3053
  5352  1D79                     u4790:
  5353  1D79                     l3057:
  5354  1D79  3001               	movlw	1
  5355  1D7A  00F5               	movwf	??___lldiv
  5356  1D7B                     u4805:
  5357  1D7B  1003               	clrc
  5358  1D7C  0DA8               	rlf	___lldiv@quotient,f
  5359  1D7D  0DA9               	rlf	___lldiv@quotient+1,f
  5360  1D7E  0DAA               	rlf	___lldiv@quotient+2,f
  5361  1D7F  0DAB               	rlf	___lldiv@quotient+3,f
  5362  1D80  0BF5               	decfsz	??___lldiv,f
  5363  1D81  2D7B               	goto	u4805
  5364  1D82                     l3059:
  5365  1D82  0823               	movf	___lldiv@divisor+3,w
  5366  1D83  0227               	subwf	___lldiv@dividend+3,w
  5367  1D84  1D03               	skipz
  5368  1D85  2D90               	goto	u4815
  5369  1D86  0822               	movf	___lldiv@divisor+2,w
  5370  1D87  0226               	subwf	___lldiv@dividend+2,w
  5371  1D88  1D03               	skipz
  5372  1D89  2D90               	goto	u4815
  5373  1D8A  0821               	movf	___lldiv@divisor+1,w
  5374  1D8B  0225               	subwf	___lldiv@dividend+1,w
  5375  1D8C  1D03               	skipz
  5376  1D8D  2D90               	goto	u4815
  5377  1D8E  0820               	movf	___lldiv@divisor,w
  5378  1D8F  0224               	subwf	___lldiv@dividend,w
  5379  1D90                     u4815:
  5380  1D90  1C03               	skipc
  5381  1D91  2D93               	goto	u4811
  5382  1D92  2D94               	goto	u4810
  5383  1D93                     u4811:
  5384  1D93  2DA3               	goto	l3065
  5385  1D94                     u4810:
  5386  1D94                     l3061:
  5387  1D94  0820               	movf	___lldiv@divisor,w
  5388  1D95  02A4               	subwf	___lldiv@dividend,f
  5389  1D96  0821               	movf	___lldiv@divisor+1,w
  5390  1D97  1C03               	skipc
  5391  1D98  0F21               	incfsz	___lldiv@divisor+1,w
  5392  1D99  02A5               	subwf	___lldiv@dividend+1,f
  5393  1D9A  0822               	movf	___lldiv@divisor+2,w
  5394  1D9B  1C03               	skipc
  5395  1D9C  0F22               	incfsz	___lldiv@divisor+2,w
  5396  1D9D  02A6               	subwf	___lldiv@dividend+2,f
  5397  1D9E  0823               	movf	___lldiv@divisor+3,w
  5398  1D9F  1C03               	skipc
  5399  1DA0  0F23               	incfsz	___lldiv@divisor+3,w
  5400  1DA1  02A7               	subwf	___lldiv@dividend+3,f
  5401  1DA2                     l3063:
  5402  1DA2  1428               	bsf	___lldiv@quotient,0
  5403  1DA3                     l3065:
  5404  1DA3  3001               	movlw	1
  5405  1DA4                     u4825:
  5406  1DA4  1003               	clrc
  5407  1DA5  0CA3               	rrf	___lldiv@divisor+3,f
  5408  1DA6  0CA2               	rrf	___lldiv@divisor+2,f
  5409  1DA7  0CA1               	rrf	___lldiv@divisor+1,f
  5410  1DA8  0CA0               	rrf	___lldiv@divisor,f
  5411  1DA9  3EFF               	addlw	-1
  5412  1DAA  1D03               	skipz
  5413  1DAB  2DA4               	goto	u4825
  5414  1DAC                     l3067:
  5415  1DAC  3001               	movlw	1
  5416  1DAD  02AC               	subwf	___lldiv@counter,f
  5417  1DAE  1D03               	btfss	3,2
  5418  1DAF  2DB1               	goto	u4831
  5419  1DB0  2DB2               	goto	u4830
  5420  1DB1                     u4831:
  5421  1DB1  2D79               	goto	l3057
  5422  1DB2                     u4830:
  5423  1DB2                     l3069:
  5424  1DB2  082B               	movf	___lldiv@quotient+3,w
  5425  1DB3  00A3               	movwf	?___lldiv+3
  5426  1DB4  082A               	movf	___lldiv@quotient+2,w
  5427  1DB5  00A2               	movwf	?___lldiv+2
  5428  1DB6  0829               	movf	___lldiv@quotient+1,w
  5429  1DB7  00A1               	movwf	?___lldiv+1
  5430  1DB8  0828               	movf	___lldiv@quotient,w
  5431  1DB9  00A0               	movwf	?___lldiv
  5432  1DBA                     l460:
  5433  1DBA  0008               	return
  5434  1DBB                     __end_of___lldiv:
  5435                           
  5436                           	psect	text14
  5437  1E24                     __ptext14:	
  5438 ;; *************** function ___fltol *****************
  5439 ;; Defined at:
  5440 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  f1              4   57[BANK0 ] unsigned long 
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;  exp1            1   67[BANK0 ] unsigned char 
  5445 ;;  sign1           1   66[BANK0 ] unsigned char 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  4   57[BANK0 ] long 
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5455 ;;      Params:         0       4       0       0       0
  5456 ;;      Locals:         0       2       0       0       0
  5457 ;;      Temps:          0       5       0       0       0
  5458 ;;      Totals:         0      11       0       0       0
  5459 ;;Total ram usage:       11 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; Hardware stack levels required when called:    2
  5462 ;; This function calls:
  5463 ;;		Nothing
  5464 ;; This function is called by:
  5465 ;;		_sprintf
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           
  5470                           ;psect for function ___fltol
  5471  1E24                     ___fltol:
  5472  1E24                     l3113:	
  5473                           ;incstack = 0
  5474                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5475                           
  5476  1E24  1003               	clrc
  5477  1E25  1283               	bcf	3,5	;RP0=0, select bank0
  5478  1E26  1303               	bcf	3,6	;RP1=0, select bank0
  5479  1E27  0D5B               	rlf	___fltol@f1+2,w
  5480  1E28  0D5C               	rlf	___fltol@f1+3,w
  5481  1E29  00DD               	movwf	??___fltol
  5482  1E2A  085D               	movf	??___fltol,w
  5483  1E2B  00E3               	movwf	___fltol@exp1
  5484  1E2C  0863               	movf	___fltol@exp1,w
  5485  1E2D  1D03               	btfss	3,2
  5486  1E2E  2E30               	goto	u4951
  5487  1E2F  2E31               	goto	u4950
  5488  1E30                     u4951:
  5489  1E30  2E3A               	goto	l3119
  5490  1E31                     u4950:
  5491  1E31                     l3115:
  5492  1E31  3000               	movlw	0
  5493  1E32  00DC               	movwf	?___fltol+3
  5494  1E33  3000               	movlw	0
  5495  1E34  00DB               	movwf	?___fltol+2
  5496  1E35  3000               	movlw	0
  5497  1E36  00DA               	movwf	?___fltol+1
  5498  1E37  3000               	movlw	0
  5499  1E38  00D9               	movwf	?___fltol
  5500  1E39  2E9F               	goto	l627
  5501  1E3A                     l3119:
  5502  1E3A  0859               	movf	___fltol@f1,w
  5503  1E3B  00DD               	movwf	??___fltol
  5504  1E3C  085A               	movf	___fltol@f1+1,w
  5505  1E3D  00DE               	movwf	??___fltol+1
  5506  1E3E  085B               	movf	___fltol@f1+2,w
  5507  1E3F  00DF               	movwf	??___fltol+2
  5508  1E40  085C               	movf	___fltol@f1+3,w
  5509  1E41  00E0               	movwf	??___fltol+3
  5510  1E42  301F               	movlw	31
  5511  1E43                     u4965:
  5512  1E43  1003               	clrc
  5513  1E44  0CE0               	rrf	??___fltol+3,f
  5514  1E45  0CDF               	rrf	??___fltol+2,f
  5515  1E46  0CDE               	rrf	??___fltol+1,f
  5516  1E47  0CDD               	rrf	??___fltol,f
  5517  1E48                     u4960:
  5518  1E48  3EFF               	addlw	-1
  5519  1E49  1D03               	skipz
  5520  1E4A  2E43               	goto	u4965
  5521  1E4B  085D               	movf	??___fltol,w
  5522  1E4C  00E1               	movwf	??___fltol+4
  5523  1E4D  0861               	movf	??___fltol+4,w
  5524  1E4E  00E2               	movwf	___fltol@sign1
  5525  1E4F                     l3121:
  5526  1E4F  17DB               	bsf	___fltol@f1+2,7
  5527  1E50                     l3123:
  5528  1E50  30FF               	movlw	255
  5529  1E51  05D9               	andwf	___fltol@f1,f
  5530  1E52  30FF               	movlw	255
  5531  1E53  05DA               	andwf	___fltol@f1+1,f
  5532  1E54  30FF               	movlw	255
  5533  1E55  05DB               	andwf	___fltol@f1+2,f
  5534  1E56  3000               	movlw	0
  5535  1E57  05DC               	andwf	___fltol@f1+3,f
  5536  1E58                     l3125:
  5537  1E58  3096               	movlw	150
  5538  1E59  02E3               	subwf	___fltol@exp1,f
  5539  1E5A                     l3127:
  5540  1E5A  1FE3               	btfss	___fltol@exp1,7
  5541  1E5B  2E5D               	goto	u4971
  5542  1E5C  2E5E               	goto	u4970
  5543  1E5D                     u4971:
  5544  1E5D  2E78               	goto	l3137
  5545  1E5E                     u4970:
  5546  1E5E                     l3129:
  5547  1E5E  0863               	movf	___fltol@exp1,w
  5548  1E5F  3A80               	xorlw	128
  5549  1E60  3E97               	addlw	151
  5550  1E61  1803               	skipnc
  5551  1E62  2E64               	goto	u4981
  5552  1E63  2E65               	goto	u4980
  5553  1E64                     u4981:
  5554  1E64  2E66               	goto	l3135
  5555  1E65                     u4980:
  5556  1E65  2E31               	goto	l3115
  5557  1E66                     l3135:
  5558  1E66  3001               	movlw	1
  5559  1E67                     u4995:
  5560  1E67  1003               	clrc
  5561  1E68  0CDC               	rrf	___fltol@f1+3,f
  5562  1E69  0CDB               	rrf	___fltol@f1+2,f
  5563  1E6A  0CDA               	rrf	___fltol@f1+1,f
  5564  1E6B  0CD9               	rrf	___fltol@f1,f
  5565  1E6C  3EFF               	addlw	-1
  5566  1E6D  1D03               	skipz
  5567  1E6E  2E67               	goto	u4995
  5568  1E6F  3001               	movlw	1
  5569  1E70  00DD               	movwf	??___fltol
  5570  1E71  085D               	movf	??___fltol,w
  5571  1E72  07E3               	addwf	___fltol@exp1,f
  5572  1E73  1D03               	btfss	3,2
  5573  1E74  2E76               	goto	u5001
  5574  1E75  2E77               	goto	u5000
  5575  1E76                     u5001:
  5576  1E76  2E66               	goto	l3135
  5577  1E77                     u5000:
  5578  1E77  2E8F               	goto	l3145
  5579  1E78                     l3137:
  5580  1E78  3020               	movlw	32
  5581  1E79  0263               	subwf	___fltol@exp1,w
  5582  1E7A  1C03               	skipc
  5583  1E7B  2E7D               	goto	u5011
  5584  1E7C  2E7E               	goto	u5010
  5585  1E7D                     u5011:
  5586  1E7D  2E8A               	goto	l634
  5587  1E7E                     u5010:
  5588  1E7E  2E31               	goto	l3115
  5589  1E7F                     l3143:
  5590  1E7F  3001               	movlw	1
  5591  1E80  00DD               	movwf	??___fltol
  5592  1E81                     u5025:
  5593  1E81  1003               	clrc
  5594  1E82  0DD9               	rlf	___fltol@f1,f
  5595  1E83  0DDA               	rlf	___fltol@f1+1,f
  5596  1E84  0DDB               	rlf	___fltol@f1+2,f
  5597  1E85  0DDC               	rlf	___fltol@f1+3,f
  5598  1E86  0BDD               	decfsz	??___fltol,f
  5599  1E87  2E81               	goto	u5025
  5600  1E88  3001               	movlw	1
  5601  1E89  02E3               	subwf	___fltol@exp1,f
  5602  1E8A                     l634:
  5603  1E8A  0863               	movf	___fltol@exp1,w
  5604  1E8B  1D03               	btfss	3,2
  5605  1E8C  2E8E               	goto	u5031
  5606  1E8D  2E8F               	goto	u5030
  5607  1E8E                     u5031:
  5608  1E8E  2E7F               	goto	l3143
  5609  1E8F                     u5030:
  5610  1E8F                     l3145:
  5611  1E8F  0862               	movf	___fltol@sign1,w
  5612  1E90  1903               	btfsc	3,2
  5613  1E91  2E93               	goto	u5041
  5614  1E92  2E94               	goto	u5040
  5615  1E93                     u5041:
  5616  1E93  2E9F               	goto	l637
  5617  1E94                     u5040:
  5618  1E94                     l3147:
  5619  1E94  09D9               	comf	___fltol@f1,f
  5620  1E95  09DA               	comf	___fltol@f1+1,f
  5621  1E96  09DB               	comf	___fltol@f1+2,f
  5622  1E97  09DC               	comf	___fltol@f1+3,f
  5623  1E98  0AD9               	incf	___fltol@f1,f
  5624  1E99  1903               	skipnz
  5625  1E9A  0ADA               	incf	___fltol@f1+1,f
  5626  1E9B  1903               	skipnz
  5627  1E9C  0ADB               	incf	___fltol@f1+2,f
  5628  1E9D  1903               	skipnz
  5629  1E9E  0ADC               	incf	___fltol@f1+3,f
  5630  1E9F                     l637:
  5631  1E9F                     l627:
  5632  1E9F  0008               	return
  5633  1EA0                     __end_of___fltol:
  5634                           
  5635                           	psect	text15
  5636  1C52                     __ptext15:	
  5637 ;; *************** function ___flsub *****************
  5638 ;; Defined at:
  5639 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  a               4    0[BANK1 ] long 
  5642 ;;  b               4    4[BANK1 ] long 
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;		None
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  4    0[BANK1 ] long 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5654 ;;      Params:         0       0       8       0       0
  5655 ;;      Locals:         0       0       0       0       0
  5656 ;;      Temps:          0       0       0       0       0
  5657 ;;      Totals:         0       0       8       0       0
  5658 ;;Total ram usage:        8 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; Hardware stack levels required when called:    3
  5661 ;; This function calls:
  5662 ;;		___fladd
  5663 ;; This function is called by:
  5664 ;;		_sprintf
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           
  5669                           ;psect for function ___flsub
  5670  1C52                     ___flsub:
  5671  1C52                     l3169:	
  5672                           ;incstack = 0
  5673                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5674                           
  5675  1C52  3080               	movlw	128
  5676  1C53  1683               	bsf	3,5	;RP0=1, select bank1
  5677  1C54  1303               	bcf	3,6	;RP1=0, select bank1
  5678  1C55  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5679  1C56                     l3171:
  5680  1C56  0827               	movf	(___flsub@b+3)^(0+128),w
  5681  1C57  1283               	bcf	3,5	;RP0=0, select bank0
  5682  1C58  1303               	bcf	3,6	;RP1=0, select bank0
  5683  1C59  00DD               	movwf	___fladd@b+3
  5684  1C5A  1683               	bsf	3,5	;RP0=1, select bank1
  5685  1C5B  1303               	bcf	3,6	;RP1=0, select bank1
  5686  1C5C  0826               	movf	(___flsub@b+2)^(0+128),w
  5687  1C5D  1283               	bcf	3,5	;RP0=0, select bank0
  5688  1C5E  1303               	bcf	3,6	;RP1=0, select bank0
  5689  1C5F  00DC               	movwf	___fladd@b+2
  5690  1C60  1683               	bsf	3,5	;RP0=1, select bank1
  5691  1C61  1303               	bcf	3,6	;RP1=0, select bank1
  5692  1C62  0825               	movf	(___flsub@b+1)^(0+128),w
  5693  1C63  1283               	bcf	3,5	;RP0=0, select bank0
  5694  1C64  1303               	bcf	3,6	;RP1=0, select bank0
  5695  1C65  00DB               	movwf	___fladd@b+1
  5696  1C66  1683               	bsf	3,5	;RP0=1, select bank1
  5697  1C67  1303               	bcf	3,6	;RP1=0, select bank1
  5698  1C68  0824               	movf	___flsub@b^(0+128),w
  5699  1C69  1283               	bcf	3,5	;RP0=0, select bank0
  5700  1C6A  1303               	bcf	3,6	;RP1=0, select bank0
  5701  1C6B  00DA               	movwf	___fladd@b
  5702  1C6C  1683               	bsf	3,5	;RP0=1, select bank1
  5703  1C6D  1303               	bcf	3,6	;RP1=0, select bank1
  5704  1C6E  0823               	movf	(___flsub@a+3)^(0+128),w
  5705  1C6F  1283               	bcf	3,5	;RP0=0, select bank0
  5706  1C70  1303               	bcf	3,6	;RP1=0, select bank0
  5707  1C71  00E1               	movwf	___fladd@a+3
  5708  1C72  1683               	bsf	3,5	;RP0=1, select bank1
  5709  1C73  1303               	bcf	3,6	;RP1=0, select bank1
  5710  1C74  0822               	movf	(___flsub@a+2)^(0+128),w
  5711  1C75  1283               	bcf	3,5	;RP0=0, select bank0
  5712  1C76  1303               	bcf	3,6	;RP1=0, select bank0
  5713  1C77  00E0               	movwf	___fladd@a+2
  5714  1C78  1683               	bsf	3,5	;RP0=1, select bank1
  5715  1C79  1303               	bcf	3,6	;RP1=0, select bank1
  5716  1C7A  0821               	movf	(___flsub@a+1)^(0+128),w
  5717  1C7B  1283               	bcf	3,5	;RP0=0, select bank0
  5718  1C7C  1303               	bcf	3,6	;RP1=0, select bank0
  5719  1C7D  00DF               	movwf	___fladd@a+1
  5720  1C7E  1683               	bsf	3,5	;RP0=1, select bank1
  5721  1C7F  1303               	bcf	3,6	;RP1=0, select bank1
  5722  1C80  0820               	movf	___flsub@a^(0+128),w
  5723  1C81  1283               	bcf	3,5	;RP0=0, select bank0
  5724  1C82  1303               	bcf	3,6	;RP1=0, select bank0
  5725  1C83  00DE               	movwf	___fladd@a
  5726  1C84  160A  118A  2274  160A  158A  	fcall	___fladd
  5727  1C89  1283               	bcf	3,5	;RP0=0, select bank0
  5728  1C8A  1303               	bcf	3,6	;RP1=0, select bank0
  5729  1C8B  085D               	movf	?___fladd+3,w
  5730  1C8C  1683               	bsf	3,5	;RP0=1, select bank1
  5731  1C8D  1303               	bcf	3,6	;RP1=0, select bank1
  5732  1C8E  00A3               	movwf	(?___flsub+3)^(0+128)
  5733  1C8F  1283               	bcf	3,5	;RP0=0, select bank0
  5734  1C90  1303               	bcf	3,6	;RP1=0, select bank0
  5735  1C91  085C               	movf	?___fladd+2,w
  5736  1C92  1683               	bsf	3,5	;RP0=1, select bank1
  5737  1C93  1303               	bcf	3,6	;RP1=0, select bank1
  5738  1C94  00A2               	movwf	(?___flsub+2)^(0+128)
  5739  1C95  1283               	bcf	3,5	;RP0=0, select bank0
  5740  1C96  1303               	bcf	3,6	;RP1=0, select bank0
  5741  1C97  085B               	movf	?___fladd+1,w
  5742  1C98  1683               	bsf	3,5	;RP0=1, select bank1
  5743  1C99  1303               	bcf	3,6	;RP1=0, select bank1
  5744  1C9A  00A1               	movwf	(?___flsub+1)^(0+128)
  5745  1C9B  1283               	bcf	3,5	;RP0=0, select bank0
  5746  1C9C  1303               	bcf	3,6	;RP1=0, select bank0
  5747  1C9D  085A               	movf	?___fladd,w
  5748  1C9E  1683               	bsf	3,5	;RP0=1, select bank1
  5749  1C9F  1303               	bcf	3,6	;RP1=0, select bank1
  5750  1CA0  00A0               	movwf	?___flsub^(0+128)
  5751  1CA1                     l797:
  5752  1CA1  0008               	return
  5753  1CA2                     __end_of___flsub:
  5754                           
  5755                           	psect	text16
  5756  1274                     __ptext16:	
  5757 ;; *************** function ___fladd *****************
  5758 ;; Defined at:
  5759 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  b               4   58[BANK0 ] long 
  5762 ;;  a               4   62[BANK0 ] long 
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;  grs             1   77[BANK0 ] unsigned char 
  5765 ;;  bexp            1   76[BANK0 ] unsigned char 
  5766 ;;  aexp            1   75[BANK0 ] unsigned char 
  5767 ;;  signs           1   74[BANK0 ] unsigned char 
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  4   58[BANK0 ] unsigned char 
  5770 ;; Registers used:
  5771 ;;		wreg, status,2, status,0, btemp+1
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5777 ;;      Params:         0       8       0       0       0
  5778 ;;      Locals:         0       4       0       0       0
  5779 ;;      Temps:          0       8       0       0       0
  5780 ;;      Totals:         0      20       0       0       0
  5781 ;;Total ram usage:       20 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; Hardware stack levels required when called:    2
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_sprintf
  5788 ;;		___flsub
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           
  5793                           ;psect for function ___fladd
  5794  1274                     ___fladd:
  5795  1274                     l2501:	
  5796                           ;incstack = 0
  5797                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5798                           
  5799  1274  1283               	bcf	3,5	;RP0=0, select bank0
  5800  1275  1303               	bcf	3,6	;RP1=0, select bank0
  5801  1276  085D               	movf	___fladd@b+3,w
  5802  1277  3980               	andlw	128
  5803  1278  00E2               	movwf	??___fladd
  5804  1279  0862               	movf	??___fladd,w
  5805  127A  00EA               	movwf	___fladd@signs
  5806  127B                     l2503:
  5807  127B  085D               	movf	___fladd@b+3,w
  5808  127C  00E2               	movwf	??___fladd
  5809  127D  0762               	addwf	??___fladd,w
  5810  127E  00E3               	movwf	??___fladd+1
  5811  127F  0863               	movf	??___fladd+1,w
  5812  1280  00EC               	movwf	___fladd@bexp
  5813  1281                     l2505:
  5814  1281  1FDC               	btfss	___fladd@b+2,7
  5815  1282  2A84               	goto	u3361
  5816  1283  2A85               	goto	u3360
  5817  1284                     u3361:
  5818  1284  2A86               	goto	l2509
  5819  1285                     u3360:
  5820  1285                     l2507:
  5821  1285  146C               	bsf	___fladd@bexp,0
  5822  1286                     l2509:
  5823  1286  086C               	movf	___fladd@bexp,w
  5824  1287  1903               	btfsc	3,2
  5825  1288  2A8A               	goto	u3371
  5826  1289  2A8B               	goto	u3370
  5827  128A                     u3371:
  5828  128A  2A9B               	goto	l2519
  5829  128B                     u3370:
  5830  128B                     l2511:
  5831  128B  0A6C               	incf	___fladd@bexp,w
  5832  128C  1D03               	btfss	3,2
  5833  128D  2A8F               	goto	u3381
  5834  128E  2A90               	goto	u3380
  5835  128F                     u3381:
  5836  128F  2A98               	goto	l2515
  5837  1290                     u3380:
  5838  1290                     l2513:
  5839  1290  3000               	movlw	0
  5840  1291  00DD               	movwf	___fladd@b+3
  5841  1292  3000               	movlw	0
  5842  1293  00DC               	movwf	___fladd@b+2
  5843  1294  3000               	movlw	0
  5844  1295  00DB               	movwf	___fladd@b+1
  5845  1296  3000               	movlw	0
  5846  1297  00DA               	movwf	___fladd@b
  5847  1298                     l2515:
  5848  1298  17DC               	bsf	___fladd@b+2,7
  5849  1299                     l2517:
  5850  1299  01DD               	clrf	___fladd@b+3
  5851  129A  2AA3               	goto	l2521
  5852  129B                     l2519:
  5853  129B  3000               	movlw	0
  5854  129C  00DD               	movwf	___fladd@b+3
  5855  129D  3000               	movlw	0
  5856  129E  00DC               	movwf	___fladd@b+2
  5857  129F  3000               	movlw	0
  5858  12A0  00DB               	movwf	___fladd@b+1
  5859  12A1  3000               	movlw	0
  5860  12A2  00DA               	movwf	___fladd@b
  5861  12A3                     l2521:
  5862  12A3  0861               	movf	___fladd@a+3,w
  5863  12A4  3980               	andlw	128
  5864  12A5  00E2               	movwf	??___fladd
  5865  12A6  0862               	movf	??___fladd,w
  5866  12A7  00EB               	movwf	___fladd@aexp
  5867  12A8                     l2523:
  5868  12A8  086B               	movf	___fladd@aexp,w
  5869  12A9  066A               	xorwf	___fladd@signs,w
  5870  12AA  1903               	skipnz
  5871  12AB  2AAD               	goto	u3391
  5872  12AC  2AAE               	goto	u3390
  5873  12AD                     u3391:
  5874  12AD  2AAF               	goto	l2527
  5875  12AE                     u3390:
  5876  12AE                     l2525:
  5877  12AE  176A               	bsf	___fladd@signs,6
  5878  12AF                     l2527:
  5879  12AF  0861               	movf	___fladd@a+3,w
  5880  12B0  00E2               	movwf	??___fladd
  5881  12B1  0762               	addwf	??___fladd,w
  5882  12B2  00E3               	movwf	??___fladd+1
  5883  12B3  0863               	movf	??___fladd+1,w
  5884  12B4  00EB               	movwf	___fladd@aexp
  5885  12B5                     l2529:
  5886  12B5  1FE0               	btfss	___fladd@a+2,7
  5887  12B6  2AB8               	goto	u3401
  5888  12B7  2AB9               	goto	u3400
  5889  12B8                     u3401:
  5890  12B8  2ABA               	goto	l2533
  5891  12B9                     u3400:
  5892  12B9                     l2531:
  5893  12B9  146B               	bsf	___fladd@aexp,0
  5894  12BA                     l2533:
  5895  12BA  086B               	movf	___fladd@aexp,w
  5896  12BB  1903               	btfsc	3,2
  5897  12BC  2ABE               	goto	u3411
  5898  12BD  2ABF               	goto	u3410
  5899  12BE                     u3411:
  5900  12BE  2ACF               	goto	l2543
  5901  12BF                     u3410:
  5902  12BF                     l2535:
  5903  12BF  0A6B               	incf	___fladd@aexp,w
  5904  12C0  1D03               	btfss	3,2
  5905  12C1  2AC3               	goto	u3421
  5906  12C2  2AC4               	goto	u3420
  5907  12C3                     u3421:
  5908  12C3  2ACC               	goto	l2539
  5909  12C4                     u3420:
  5910  12C4                     l2537:
  5911  12C4  3000               	movlw	0
  5912  12C5  00E1               	movwf	___fladd@a+3
  5913  12C6  3000               	movlw	0
  5914  12C7  00E0               	movwf	___fladd@a+2
  5915  12C8  3000               	movlw	0
  5916  12C9  00DF               	movwf	___fladd@a+1
  5917  12CA  3000               	movlw	0
  5918  12CB  00DE               	movwf	___fladd@a
  5919  12CC                     l2539:
  5920  12CC  17E0               	bsf	___fladd@a+2,7
  5921  12CD                     l2541:
  5922  12CD  01E1               	clrf	___fladd@a+3
  5923  12CE  2AD7               	goto	l751
  5924  12CF                     l2543:
  5925  12CF  3000               	movlw	0
  5926  12D0  00E1               	movwf	___fladd@a+3
  5927  12D1  3000               	movlw	0
  5928  12D2  00E0               	movwf	___fladd@a+2
  5929  12D3  3000               	movlw	0
  5930  12D4  00DF               	movwf	___fladd@a+1
  5931  12D5  3000               	movlw	0
  5932  12D6  00DE               	movwf	___fladd@a
  5933  12D7                     l751:
  5934  12D7  086C               	movf	___fladd@bexp,w
  5935  12D8  026B               	subwf	___fladd@aexp,w
  5936  12D9  1803               	skipnc
  5937  12DA  2ADC               	goto	u3431
  5938  12DB  2ADD               	goto	u3430
  5939  12DC                     u3431:
  5940  12DC  2B21               	goto	l2579
  5941  12DD                     u3430:
  5942  12DD                     l2545:
  5943  12DD  1F6A               	btfss	___fladd@signs,6
  5944  12DE  2AE0               	goto	u3441
  5945  12DF  2AE1               	goto	u3440
  5946  12E0                     u3441:
  5947  12E0  2AE5               	goto	l2549
  5948  12E1                     u3440:
  5949  12E1                     l2547:
  5950  12E1  3080               	movlw	128
  5951  12E2  00E2               	movwf	??___fladd
  5952  12E3  0862               	movf	??___fladd,w
  5953  12E4  06EA               	xorwf	___fladd@signs,f
  5954  12E5                     l2549:
  5955  12E5  086C               	movf	___fladd@bexp,w
  5956  12E6  00E2               	movwf	??___fladd
  5957  12E7  0862               	movf	??___fladd,w
  5958  12E8  00ED               	movwf	___fladd@grs
  5959  12E9                     l2551:
  5960  12E9  086B               	movf	___fladd@aexp,w
  5961  12EA  00E2               	movwf	??___fladd
  5962  12EB  0862               	movf	??___fladd,w
  5963  12EC  00EC               	movwf	___fladd@bexp
  5964  12ED                     l2553:
  5965  12ED  086D               	movf	___fladd@grs,w
  5966  12EE  00E2               	movwf	??___fladd
  5967  12EF  0862               	movf	??___fladd,w
  5968  12F0  00EB               	movwf	___fladd@aexp
  5969  12F1                     l2555:
  5970  12F1  085A               	movf	___fladd@b,w
  5971  12F2  00E2               	movwf	??___fladd
  5972  12F3  0862               	movf	??___fladd,w
  5973  12F4  00ED               	movwf	___fladd@grs
  5974  12F5                     l2557:
  5975  12F5  085E               	movf	___fladd@a,w
  5976  12F6  00E2               	movwf	??___fladd
  5977  12F7  0862               	movf	??___fladd,w
  5978  12F8  00DA               	movwf	___fladd@b
  5979  12F9                     l2559:
  5980  12F9  086D               	movf	___fladd@grs,w
  5981  12FA  00E2               	movwf	??___fladd
  5982  12FB  0862               	movf	??___fladd,w
  5983  12FC  00DE               	movwf	___fladd@a
  5984  12FD                     l2561:
  5985  12FD  085B               	movf	___fladd@b+1,w
  5986  12FE  00E2               	movwf	??___fladd
  5987  12FF  0862               	movf	??___fladd,w
  5988  1300  00ED               	movwf	___fladd@grs
  5989  1301                     l2563:
  5990  1301  085F               	movf	___fladd@a+1,w
  5991  1302  00E2               	movwf	??___fladd
  5992  1303  0862               	movf	??___fladd,w
  5993  1304  00DB               	movwf	___fladd@b+1
  5994  1305                     l2565:
  5995  1305  086D               	movf	___fladd@grs,w
  5996  1306  00E2               	movwf	??___fladd
  5997  1307  0862               	movf	??___fladd,w
  5998  1308  00DF               	movwf	___fladd@a+1
  5999  1309                     l2567:
  6000  1309  085C               	movf	___fladd@b+2,w
  6001  130A  00E2               	movwf	??___fladd
  6002  130B  0862               	movf	??___fladd,w
  6003  130C  00ED               	movwf	___fladd@grs
  6004  130D                     l2569:
  6005  130D  0860               	movf	___fladd@a+2,w
  6006  130E  00E2               	movwf	??___fladd
  6007  130F  0862               	movf	??___fladd,w
  6008  1310  00DC               	movwf	___fladd@b+2
  6009  1311                     l2571:
  6010  1311  086D               	movf	___fladd@grs,w
  6011  1312  00E2               	movwf	??___fladd
  6012  1313  0862               	movf	??___fladd,w
  6013  1314  00E0               	movwf	___fladd@a+2
  6014  1315                     l2573:
  6015  1315  085D               	movf	___fladd@b+3,w
  6016  1316  00E2               	movwf	??___fladd
  6017  1317  0862               	movf	??___fladd,w
  6018  1318  00ED               	movwf	___fladd@grs
  6019  1319                     l2575:
  6020  1319  0861               	movf	___fladd@a+3,w
  6021  131A  00E2               	movwf	??___fladd
  6022  131B  0862               	movf	??___fladd,w
  6023  131C  00DD               	movwf	___fladd@b+3
  6024  131D                     l2577:
  6025  131D  086D               	movf	___fladd@grs,w
  6026  131E  00E2               	movwf	??___fladd
  6027  131F  0862               	movf	??___fladd,w
  6028  1320  00E1               	movwf	___fladd@a+3
  6029  1321                     l2579:
  6030  1321  01ED               	clrf	___fladd@grs
  6031  1322                     l2581:
  6032  1322  086B               	movf	___fladd@aexp,w
  6033  1323  00E2               	movwf	??___fladd
  6034  1324  01E3               	clrf	??___fladd+1
  6035  1325  0863               	movf	??___fladd+1,w
  6036  1326  00E5               	movwf	??___fladd+3
  6037  1327  086C               	movf	___fladd@bexp,w
  6038  1328  0262               	subwf	??___fladd,w
  6039  1329  00E4               	movwf	??___fladd+2
  6040  132A  1C03               	skipc
  6041  132B  03E5               	decf	??___fladd+3,f
  6042  132C  0865               	movf	??___fladd+3,w
  6043  132D  3A80               	xorlw	128
  6044  132E  00FF               	movwf	btemp+1
  6045  132F  3080               	movlw	128
  6046  1330  027F               	subwf	btemp+1,w
  6047  1331  1D03               	skipz
  6048  1332  2B35               	goto	u3455
  6049  1333  301A               	movlw	26
  6050  1334  0264               	subwf	??___fladd+2,w
  6051  1335                     u3455:
  6052  1335  1C03               	skipc
  6053  1336  2B38               	goto	u3451
  6054  1337  2B39               	goto	u3450
  6055  1338                     u3451:
  6056  1338  2B76               	goto	l2597
  6057  1339                     u3450:
  6058  1339                     l2583:
  6059  1339  1283               	bcf	3,5	;RP0=0, select bank0
  6060  133A  1303               	bcf	3,6	;RP1=0, select bank0
  6061  133B  085D               	movf	___fladd@b+3,w
  6062  133C  045C               	iorwf	___fladd@b+2,w
  6063  133D  045B               	iorwf	___fladd@b+1,w
  6064  133E  045A               	iorwf	___fladd@b,w
  6065  133F  1D03               	skipz
  6066  1340  2B42               	goto	u3461
  6067  1341  2B44               	goto	u3460
  6068  1342                     u3461:
  6069  1342  3001               	movlw	1
  6070  1343  2B45               	goto	u3470
  6071  1344                     u3460:
  6072  1344  3000               	movlw	0
  6073  1345                     u3470:
  6074  1345  00E2               	movwf	??___fladd
  6075  1346  0862               	movf	??___fladd,w
  6076  1347  00ED               	movwf	___fladd@grs
  6077  1348  3000               	movlw	0
  6078  1349  00DD               	movwf	___fladd@b+3
  6079  134A  3000               	movlw	0
  6080  134B  00DC               	movwf	___fladd@b+2
  6081  134C  3000               	movlw	0
  6082  134D  00DB               	movwf	___fladd@b+1
  6083  134E  3000               	movlw	0
  6084  134F  00DA               	movwf	___fladd@b
  6085  1350  086B               	movf	___fladd@aexp,w
  6086  1351  00E2               	movwf	??___fladd
  6087  1352  0862               	movf	??___fladd,w
  6088  1353  00EC               	movwf	___fladd@bexp
  6089  1354  2B7E               	goto	l755
  6090  1355                     l757:
  6091  1355  1C6D               	btfss	___fladd@grs,0
  6092  1356  2B58               	goto	u3481
  6093  1357  2B59               	goto	u3480
  6094  1358                     u3481:
  6095  1358  2B62               	goto	l2587
  6096  1359                     u3480:
  6097  1359                     l2585:
  6098  1359  086D               	movf	___fladd@grs,w
  6099  135A  00E2               	movwf	??___fladd
  6100  135B  1003               	clrc
  6101  135C  0C62               	rrf	??___fladd,w
  6102  135D  3801               	iorlw	1
  6103  135E  00E3               	movwf	??___fladd+1
  6104  135F  0863               	movf	??___fladd+1,w
  6105  1360  00ED               	movwf	___fladd@grs
  6106  1361  2B64               	goto	l2589
  6107  1362                     l2587:
  6108  1362  1003               	clrc
  6109  1363  0CED               	rrf	___fladd@grs,f
  6110  1364                     l2589:
  6111  1364  1C5A               	btfss	___fladd@b,0
  6112  1365  2B67               	goto	u3491
  6113  1366  2B68               	goto	u3490
  6114  1367                     u3491:
  6115  1367  2B69               	goto	l2593
  6116  1368                     u3490:
  6117  1368                     l2591:
  6118  1368  17ED               	bsf	___fladd@grs,7
  6119  1369                     l2593:
  6120  1369  3001               	movlw	1
  6121  136A  00E2               	movwf	??___fladd
  6122  136B                     u3505:
  6123  136B  0D5D               	rlf	___fladd@b+3,w
  6124  136C  0CDD               	rrf	___fladd@b+3,f
  6125  136D  0CDC               	rrf	___fladd@b+2,f
  6126  136E  0CDB               	rrf	___fladd@b+1,f
  6127  136F  0CDA               	rrf	___fladd@b,f
  6128  1370  0BE2               	decfsz	??___fladd& (0+127),f
  6129  1371  2B6B               	goto	u3505
  6130  1372                     l2595:
  6131  1372  3001               	movlw	1
  6132  1373  00E2               	movwf	??___fladd
  6133  1374  0862               	movf	??___fladd,w
  6134  1375  07EC               	addwf	___fladd@bexp,f
  6135  1376                     l2597:
  6136  1376  1283               	bcf	3,5	;RP0=0, select bank0
  6137  1377  1303               	bcf	3,6	;RP1=0, select bank0
  6138  1378  086B               	movf	___fladd@aexp,w
  6139  1379  026C               	subwf	___fladd@bexp,w
  6140  137A  1C03               	skipc
  6141  137B  2B7D               	goto	u3511
  6142  137C  2B7E               	goto	u3510
  6143  137D                     u3511:
  6144  137D  2B55               	goto	l757
  6145  137E                     u3510:
  6146  137E                     l755:
  6147  137E  1B6A               	btfsc	___fladd@signs,6
  6148  137F  2B81               	goto	u3521
  6149  1380  2B82               	goto	u3520
  6150  1381                     u3521:
  6151  1381  2BCD               	goto	l2623
  6152  1382                     u3520:
  6153  1382                     l2599:
  6154  1382  086C               	movf	___fladd@bexp,w
  6155  1383  1D03               	btfss	3,2
  6156  1384  2B86               	goto	u3531
  6157  1385  2B87               	goto	u3530
  6158  1386                     u3531:
  6159  1386  2B90               	goto	l2605
  6160  1387                     u3530:
  6161  1387                     l2601:
  6162  1387  3000               	movlw	0
  6163  1388  00DD               	movwf	?___fladd+3
  6164  1389  3000               	movlw	0
  6165  138A  00DC               	movwf	?___fladd+2
  6166  138B  3000               	movlw	0
  6167  138C  00DB               	movwf	?___fladd+1
  6168  138D  3000               	movlw	0
  6169  138E  00DA               	movwf	?___fladd
  6170  138F  2CFB               	goto	l764
  6171  1390                     l2605:
  6172  1390  085E               	movf	___fladd@a,w
  6173  1391  07DA               	addwf	___fladd@b,f
  6174  1392  085F               	movf	___fladd@a+1,w
  6175  1393  1103               	clrz
  6176  1394  1803               	skipnc
  6177  1395  3E01               	addlw	1
  6178  1396  1903               	skipnz
  6179  1397  2B99               	goto	u3541
  6180  1398  07DB               	addwf	___fladd@b+1,f
  6181  1399                     u3541:
  6182  1399  0860               	movf	___fladd@a+2,w
  6183  139A  1103               	clrz
  6184  139B  1803               	skipnc
  6185  139C  3E01               	addlw	1
  6186  139D  1903               	skipnz
  6187  139E  2BA0               	goto	u3542
  6188  139F  07DC               	addwf	___fladd@b+2,f
  6189  13A0                     u3542:
  6190  13A0  0861               	movf	___fladd@a+3,w
  6191  13A1  1103               	clrz
  6192  13A2  1803               	skipnc
  6193  13A3  3E01               	addlw	1
  6194  13A4  1903               	skipnz
  6195  13A5  2BA7               	goto	u3543
  6196  13A6  07DD               	addwf	___fladd@b+3,f
  6197  13A7                     u3543:
  6198  13A7                     l2607:
  6199  13A7  1C5D               	btfss	___fladd@b+3,0
  6200  13A8  2BAA               	goto	u3551
  6201  13A9  2BAB               	goto	u3550
  6202  13AA                     u3551:
  6203  13AA  2C81               	goto	l2657
  6204  13AB                     u3550:
  6205  13AB                     l2609:
  6206  13AB  1C6D               	btfss	___fladd@grs,0
  6207  13AC  2BAE               	goto	u3561
  6208  13AD  2BAF               	goto	u3560
  6209  13AE                     u3561:
  6210  13AE  2BB8               	goto	l2613
  6211  13AF                     u3560:
  6212  13AF                     l2611:
  6213  13AF  086D               	movf	___fladd@grs,w
  6214  13B0  00E2               	movwf	??___fladd
  6215  13B1  1003               	clrc
  6216  13B2  0C62               	rrf	??___fladd,w
  6217  13B3  3801               	iorlw	1
  6218  13B4  00E3               	movwf	??___fladd+1
  6219  13B5  0863               	movf	??___fladd+1,w
  6220  13B6  00ED               	movwf	___fladd@grs
  6221  13B7  2BBA               	goto	l2615
  6222  13B8                     l2613:
  6223  13B8  1003               	clrc
  6224  13B9  0CED               	rrf	___fladd@grs,f
  6225  13BA                     l2615:
  6226  13BA  1C5A               	btfss	___fladd@b,0
  6227  13BB  2BBD               	goto	u3571
  6228  13BC  2BBE               	goto	u3570
  6229  13BD                     u3571:
  6230  13BD  2BBF               	goto	l2619
  6231  13BE                     u3570:
  6232  13BE                     l2617:
  6233  13BE  17ED               	bsf	___fladd@grs,7
  6234  13BF                     l2619:
  6235  13BF  3001               	movlw	1
  6236  13C0  00E2               	movwf	??___fladd
  6237  13C1                     u3585:
  6238  13C1  0D5D               	rlf	___fladd@b+3,w
  6239  13C2  0CDD               	rrf	___fladd@b+3,f
  6240  13C3  0CDC               	rrf	___fladd@b+2,f
  6241  13C4  0CDB               	rrf	___fladd@b+1,f
  6242  13C5  0CDA               	rrf	___fladd@b,f
  6243  13C6  0BE2               	decfsz	??___fladd& (0+127),f
  6244  13C7  2BC1               	goto	u3585
  6245  13C8                     l2621:
  6246  13C8  3001               	movlw	1
  6247  13C9  00E2               	movwf	??___fladd
  6248  13CA  0862               	movf	??___fladd,w
  6249  13CB  07EC               	addwf	___fladd@bexp,f
  6250  13CC  2C81               	goto	l2657
  6251  13CD                     l2623:
  6252  13CD  085D               	movf	___fladd@b+3,w
  6253  13CE  3A80               	xorlw	128
  6254  13CF  00FF               	movwf	btemp+1
  6255  13D0  0861               	movf	___fladd@a+3,w
  6256  13D1  3A80               	xorlw	128
  6257  13D2  027F               	subwf	btemp+1,w
  6258  13D3  1D03               	skipz
  6259  13D4  2BDF               	goto	u3593
  6260  13D5  0860               	movf	___fladd@a+2,w
  6261  13D6  025C               	subwf	___fladd@b+2,w
  6262  13D7  1D03               	skipz
  6263  13D8  2BDF               	goto	u3593
  6264  13D9  085F               	movf	___fladd@a+1,w
  6265  13DA  025B               	subwf	___fladd@b+1,w
  6266  13DB  1D03               	skipz
  6267  13DC  2BDF               	goto	u3593
  6268  13DD  085E               	movf	___fladd@a,w
  6269  13DE  025A               	subwf	___fladd@b,w
  6270  13DF                     u3593:
  6271  13DF  1803               	skipnc
  6272  13E0  2BE2               	goto	u3591
  6273  13E1  2BE3               	goto	u3590
  6274  13E2                     u3591:
  6275  13E2  2C3B               	goto	l2633
  6276  13E3                     u3590:
  6277  13E3                     l2625:
  6278  13E3  30FF               	movlw	255
  6279  13E4  00E2               	movwf	??___fladd
  6280  13E5  30FF               	movlw	255
  6281  13E6  00E3               	movwf	??___fladd+1
  6282  13E7  30FF               	movlw	255
  6283  13E8  00E4               	movwf	??___fladd+2
  6284  13E9  30FF               	movlw	255
  6285  13EA  00E5               	movwf	??___fladd+3
  6286  13EB  085E               	movf	___fladd@a,w
  6287  13EC  00E6               	movwf	??___fladd+4
  6288  13ED  085F               	movf	___fladd@a+1,w
  6289  13EE  00E7               	movwf	??___fladd+5
  6290  13EF  0860               	movf	___fladd@a+2,w
  6291  13F0  00E8               	movwf	??___fladd+6
  6292  13F1  0861               	movf	___fladd@a+3,w
  6293  13F2  00E9               	movwf	??___fladd+7
  6294  13F3  085A               	movf	___fladd@b,w
  6295  13F4  02E6               	subwf	??___fladd+4,f
  6296  13F5  085B               	movf	___fladd@b+1,w
  6297  13F6  1C03               	skipc
  6298  13F7  0F5B               	incfsz	___fladd@b+1,w
  6299  13F8  2BFA               	goto	u3601
  6300  13F9  2BFB               	goto	u3602
  6301  13FA                     u3601:
  6302  13FA  02E7               	subwf	??___fladd+5,f
  6303  13FB                     u3602:
  6304  13FB  085C               	movf	___fladd@b+2,w
  6305  13FC  1C03               	skipc
  6306  13FD  0F5C               	incfsz	___fladd@b+2,w
  6307  13FE  2C00               	goto	u3603
  6308  13FF  2C01               	goto	u3604
  6309  1400                     u3603:
  6310  1400  02E8               	subwf	??___fladd+6,f
  6311  1401                     u3604:
  6312  1401  085D               	movf	___fladd@b+3,w
  6313  1402  1C03               	skipc
  6314  1403  0F5D               	incfsz	___fladd@b+3,w
  6315  1404  2C06               	goto	u3605
  6316  1405  2C07               	goto	u3606
  6317  1406                     u3605:
  6318  1406  02E9               	subwf	??___fladd+7,f
  6319  1407                     u3606:
  6320  1407  0866               	movf	??___fladd+4,w
  6321  1408  07E2               	addwf	??___fladd,f
  6322  1409  0867               	movf	??___fladd+5,w
  6323  140A  1803               	skipnc
  6324  140B  0F67               	incfsz	??___fladd+5,w
  6325  140C  2C0E               	goto	u3610
  6326  140D  2C0F               	goto	u3611
  6327  140E                     u3610:
  6328  140E  07E3               	addwf	??___fladd+1,f
  6329  140F                     u3611:
  6330  140F  0868               	movf	??___fladd+6,w
  6331  1410  1803               	skipnc
  6332  1411  0F68               	incfsz	??___fladd+6,w
  6333  1412  2C14               	goto	u3612
  6334  1413  2C15               	goto	u3613
  6335  1414                     u3612:
  6336  1414  07E4               	addwf	??___fladd+2,f
  6337  1415                     u3613:
  6338  1415  0869               	movf	??___fladd+7,w
  6339  1416  1803               	skipnc
  6340  1417  0A69               	incf	??___fladd+7,w
  6341  1418  07E5               	addwf	??___fladd+3,f
  6342  1419  0865               	movf	??___fladd+3,w
  6343  141A  00DD               	movwf	___fladd@b+3
  6344  141B  0864               	movf	??___fladd+2,w
  6345  141C  00DC               	movwf	___fladd@b+2
  6346  141D  0863               	movf	??___fladd+1,w
  6347  141E  00DB               	movwf	___fladd@b+1
  6348  141F  0862               	movf	??___fladd,w
  6349  1420  00DA               	movwf	___fladd@b
  6350  1421                     l2627:
  6351  1421  3080               	movlw	128
  6352  1422  00E2               	movwf	??___fladd
  6353  1423  0862               	movf	??___fladd,w
  6354  1424  06EA               	xorwf	___fladd@signs,f
  6355  1425  09ED               	comf	___fladd@grs,f
  6356  1426  0AED               	incf	___fladd@grs,f
  6357  1427                     l2629:
  6358  1427  086D               	movf	___fladd@grs,w
  6359  1428  1D03               	btfss	3,2
  6360  1429  2C2B               	goto	u3621
  6361  142A  2C2C               	goto	u3620
  6362  142B                     u3621:
  6363  142B  2C49               	goto	l772
  6364  142C                     u3620:
  6365  142C                     l2631:
  6366  142C  3001               	movlw	1
  6367  142D  07DA               	addwf	___fladd@b,f
  6368  142E  3000               	movlw	0
  6369  142F  1803               	skipnc
  6370  1430  3001               	movlw	1
  6371  1431  07DB               	addwf	___fladd@b+1,f
  6372  1432  3000               	movlw	0
  6373  1433  1803               	skipnc
  6374  1434  3001               	movlw	1
  6375  1435  07DC               	addwf	___fladd@b+2,f
  6376  1436  3000               	movlw	0
  6377  1437  1803               	skipnc
  6378  1438  3001               	movlw	1
  6379  1439  07DD               	addwf	___fladd@b+3,f
  6380  143A  2C49               	goto	l772
  6381  143B                     l2633:
  6382  143B  085E               	movf	___fladd@a,w
  6383  143C  02DA               	subwf	___fladd@b,f
  6384  143D  085F               	movf	___fladd@a+1,w
  6385  143E  1C03               	skipc
  6386  143F  0F5F               	incfsz	___fladd@a+1,w
  6387  1440  02DB               	subwf	___fladd@b+1,f
  6388  1441  0860               	movf	___fladd@a+2,w
  6389  1442  1C03               	skipc
  6390  1443  0F60               	incfsz	___fladd@a+2,w
  6391  1444  02DC               	subwf	___fladd@b+2,f
  6392  1445  0861               	movf	___fladd@a+3,w
  6393  1446  1C03               	skipc
  6394  1447  0F61               	incfsz	___fladd@a+3,w
  6395  1448  02DD               	subwf	___fladd@b+3,f
  6396  1449                     l772:
  6397  1449  085D               	movf	___fladd@b+3,w
  6398  144A  045C               	iorwf	___fladd@b+2,w
  6399  144B  045B               	iorwf	___fladd@b+1,w
  6400  144C  045A               	iorwf	___fladd@b,w
  6401  144D  1D03               	skipz
  6402  144E  2C50               	goto	u3631
  6403  144F  2C51               	goto	u3630
  6404  1450                     u3631:
  6405  1450  2C7D               	goto	l2655
  6406  1451                     u3630:
  6407  1451                     l2635:
  6408  1451  086D               	movf	___fladd@grs,w
  6409  1452  1D03               	btfss	3,2
  6410  1453  2C55               	goto	u3641
  6411  1454  2C56               	goto	u3640
  6412  1455                     u3641:
  6413  1455  2C7D               	goto	l2655
  6414  1456                     u3640:
  6415  1456                     l2637:
  6416  1456  3000               	movlw	0
  6417  1457  00DD               	movwf	?___fladd+3
  6418  1458  3000               	movlw	0
  6419  1459  00DC               	movwf	?___fladd+2
  6420  145A  3000               	movlw	0
  6421  145B  00DB               	movwf	?___fladd+1
  6422  145C  3000               	movlw	0
  6423  145D  00DA               	movwf	?___fladd
  6424  145E  2CFB               	goto	l764
  6425  145F                     l2641:
  6426  145F  3001               	movlw	1
  6427  1460  00E2               	movwf	??___fladd
  6428  1461                     u3655:
  6429  1461  1003               	clrc
  6430  1462  0DDA               	rlf	___fladd@b,f
  6431  1463  0DDB               	rlf	___fladd@b+1,f
  6432  1464  0DDC               	rlf	___fladd@b+2,f
  6433  1465  0DDD               	rlf	___fladd@b+3,f
  6434  1466  0BE2               	decfsz	??___fladd,f
  6435  1467  2C61               	goto	u3655
  6436  1468                     l2643:
  6437  1468  1FED               	btfss	___fladd@grs,7
  6438  1469  2C6B               	goto	u3661
  6439  146A  2C6C               	goto	u3660
  6440  146B                     u3661:
  6441  146B  2C6D               	goto	l776
  6442  146C                     u3660:
  6443  146C                     l2645:
  6444  146C  145A               	bsf	___fladd@b,0
  6445  146D                     l776:
  6446  146D  1C6D               	btfss	___fladd@grs,0
  6447  146E  2C70               	goto	u3671
  6448  146F  2C71               	goto	u3670
  6449  1470                     u3671:
  6450  1470  2C74               	goto	l2649
  6451  1471                     u3670:
  6452  1471                     l2647:
  6453  1471  1403               	setc
  6454  1472  0DED               	rlf	___fladd@grs,f
  6455  1473  2C76               	goto	l2651
  6456  1474                     l2649:
  6457  1474  1003               	clrc
  6458  1475  0DED               	rlf	___fladd@grs,f
  6459  1476                     l2651:
  6460  1476  086C               	movf	___fladd@bexp,w
  6461  1477  1903               	btfsc	3,2
  6462  1478  2C7A               	goto	u3681
  6463  1479  2C7B               	goto	u3680
  6464  147A                     u3681:
  6465  147A  2C7D               	goto	l2655
  6466  147B                     u3680:
  6467  147B                     l2653:
  6468  147B  3001               	movlw	1
  6469  147C  02EC               	subwf	___fladd@bexp,f
  6470  147D                     l2655:
  6471  147D  1FDC               	btfss	___fladd@b+2,7
  6472  147E  2C80               	goto	u3691
  6473  147F  2C81               	goto	u3690
  6474  1480                     u3691:
  6475  1480  2C5F               	goto	l2641
  6476  1481                     u3690:
  6477  1481                     l2657:
  6478  1481  01EB               	clrf	___fladd@aexp
  6479  1482                     l2659:
  6480  1482  1FED               	btfss	___fladd@grs,7
  6481  1483  2C85               	goto	u3701
  6482  1484  2C86               	goto	u3700
  6483  1485                     u3701:
  6484  1485  2C94               	goto	l2667
  6485  1486                     u3700:
  6486  1486                     l2661:
  6487  1486  086D               	movf	___fladd@grs,w
  6488  1487  397F               	andlw	127
  6489  1488  1903               	btfsc	3,2
  6490  1489  2C8B               	goto	u3711
  6491  148A  2C8C               	goto	u3710
  6492  148B                     u3711:
  6493  148B  2C8F               	goto	l782
  6494  148C                     u3710:
  6495  148C                     l2663:
  6496  148C  01EB               	clrf	___fladd@aexp
  6497  148D  0AEB               	incf	___fladd@aexp,f
  6498  148E  2C94               	goto	l2667
  6499  148F                     l782:
  6500  148F  1C5A               	btfss	___fladd@b,0
  6501  1490  2C92               	goto	u3721
  6502  1491  2C93               	goto	u3720
  6503  1492                     u3721:
  6504  1492  2C94               	goto	l2667
  6505  1493                     u3720:
  6506  1493  2C8C               	goto	l2663
  6507  1494                     l2667:
  6508  1494  086B               	movf	___fladd@aexp,w
  6509  1495  1903               	btfsc	3,2
  6510  1496  2C98               	goto	u3731
  6511  1497  2C99               	goto	u3730
  6512  1498                     u3731:
  6513  1498  2CCD               	goto	l785
  6514  1499                     u3730:
  6515  1499                     l2669:
  6516  1499  3001               	movlw	1
  6517  149A  07DA               	addwf	___fladd@b,f
  6518  149B  3000               	movlw	0
  6519  149C  1803               	skipnc
  6520  149D  3001               	movlw	1
  6521  149E  07DB               	addwf	___fladd@b+1,f
  6522  149F  3000               	movlw	0
  6523  14A0  1803               	skipnc
  6524  14A1  3001               	movlw	1
  6525  14A2  07DC               	addwf	___fladd@b+2,f
  6526  14A3  3000               	movlw	0
  6527  14A4  1803               	skipnc
  6528  14A5  3001               	movlw	1
  6529  14A6  07DD               	addwf	___fladd@b+3,f
  6530  14A7                     l2671:
  6531  14A7  1C5D               	btfss	___fladd@b+3,0
  6532  14A8  2CAA               	goto	u3741
  6533  14A9  2CAB               	goto	u3740
  6534  14AA                     u3741:
  6535  14AA  2CCD               	goto	l785
  6536  14AB                     u3740:
  6537  14AB                     l2673:
  6538  14AB  085A               	movf	___fladd@b,w
  6539  14AC  00E2               	movwf	??___fladd
  6540  14AD  085B               	movf	___fladd@b+1,w
  6541  14AE  00E3               	movwf	??___fladd+1
  6542  14AF  085C               	movf	___fladd@b+2,w
  6543  14B0  00E4               	movwf	??___fladd+2
  6544  14B1  085D               	movf	___fladd@b+3,w
  6545  14B2  00E5               	movwf	??___fladd+3
  6546  14B3  3001               	movlw	1
  6547  14B4  00E6               	movwf	??___fladd+4
  6548  14B5                     u3755:
  6549  14B5  0D65               	rlf	??___fladd+3,w
  6550  14B6  0CE5               	rrf	??___fladd+3,f
  6551  14B7  0CE4               	rrf	??___fladd+2,f
  6552  14B8  0CE3               	rrf	??___fladd+1,f
  6553  14B9  0CE2               	rrf	??___fladd,f
  6554  14BA                     u3750:
  6555  14BA  0BE6               	decfsz	??___fladd+4,f
  6556  14BB  2CB5               	goto	u3755
  6557  14BC  0865               	movf	??___fladd+3,w
  6558  14BD  00DD               	movwf	___fladd@b+3
  6559  14BE  0864               	movf	??___fladd+2,w
  6560  14BF  00DC               	movwf	___fladd@b+2
  6561  14C0  0863               	movf	??___fladd+1,w
  6562  14C1  00DB               	movwf	___fladd@b+1
  6563  14C2  0862               	movf	??___fladd,w
  6564  14C3  00DA               	movwf	___fladd@b
  6565  14C4  0A6C               	incf	___fladd@bexp,w
  6566  14C5  1903               	btfsc	3,2
  6567  14C6  2CC8               	goto	u3761
  6568  14C7  2CC9               	goto	u3760
  6569  14C8                     u3761:
  6570  14C8  2CCD               	goto	l785
  6571  14C9                     u3760:
  6572  14C9                     l2675:
  6573  14C9  3001               	movlw	1
  6574  14CA  00E2               	movwf	??___fladd
  6575  14CB  0862               	movf	??___fladd,w
  6576  14CC  07EC               	addwf	___fladd@bexp,f
  6577  14CD                     l785:
  6578  14CD  0A6C               	incf	___fladd@bexp,w
  6579  14CE  1903               	btfsc	3,2
  6580  14CF  2CD1               	goto	u3771
  6581  14D0  2CD2               	goto	u3770
  6582  14D1                     u3771:
  6583  14D1  2CD7               	goto	l2679
  6584  14D2                     u3770:
  6585  14D2                     l2677:
  6586  14D2  086C               	movf	___fladd@bexp,w
  6587  14D3  1D03               	btfss	3,2
  6588  14D4  2CD6               	goto	u3781
  6589  14D5  2CD7               	goto	u3780
  6590  14D6                     u3781:
  6591  14D6  2CE5               	goto	l2685
  6592  14D7                     u3780:
  6593  14D7                     l2679:
  6594  14D7  3000               	movlw	0
  6595  14D8  00DD               	movwf	___fladd@b+3
  6596  14D9  3000               	movlw	0
  6597  14DA  00DC               	movwf	___fladd@b+2
  6598  14DB  3000               	movlw	0
  6599  14DC  00DB               	movwf	___fladd@b+1
  6600  14DD  3000               	movlw	0
  6601  14DE  00DA               	movwf	___fladd@b
  6602  14DF                     l2681:
  6603  14DF  086C               	movf	___fladd@bexp,w
  6604  14E0  1D03               	btfss	3,2
  6605  14E1  2CE3               	goto	u3791
  6606  14E2  2CE4               	goto	u3790
  6607  14E3                     u3791:
  6608  14E3  2CE5               	goto	l2685
  6609  14E4                     u3790:
  6610  14E4                     l2683:
  6611  14E4  01EA               	clrf	___fladd@signs
  6612  14E5                     l2685:
  6613  14E5  1C6C               	btfss	___fladd@bexp,0
  6614  14E6  2CE8               	goto	u3801
  6615  14E7  2CE9               	goto	u3800
  6616  14E8                     u3801:
  6617  14E8  2CEB               	goto	l2689
  6618  14E9                     u3800:
  6619  14E9                     l2687:
  6620  14E9  17DC               	bsf	___fladd@b+2,7
  6621  14EA  2CEF               	goto	l793
  6622  14EB                     l2689:
  6623  14EB  307F               	movlw	127
  6624  14EC  00E2               	movwf	??___fladd
  6625  14ED  0862               	movf	??___fladd,w
  6626  14EE  05DC               	andwf	___fladd@b+2,f
  6627  14EF                     l793:
  6628  14EF  086C               	movf	___fladd@bexp,w
  6629  14F0  00E2               	movwf	??___fladd
  6630  14F1  1003               	clrc
  6631  14F2  0C62               	rrf	??___fladd,w
  6632  14F3  00E3               	movwf	??___fladd+1
  6633  14F4  0863               	movf	??___fladd+1,w
  6634  14F5  00DD               	movwf	___fladd@b+3
  6635  14F6                     l2691:
  6636  14F6  1FEA               	btfss	___fladd@signs,7
  6637  14F7  2CF9               	goto	u3811
  6638  14F8  2CFA               	goto	u3810
  6639  14F9                     u3811:
  6640  14F9  2CFB               	goto	l794
  6641  14FA                     u3810:
  6642  14FA                     l2693:
  6643  14FA  17DD               	bsf	___fladd@b+3,7
  6644  14FB                     l794:
  6645  14FB                     l764:
  6646  14FB  0008               	return
  6647  14FC                     __end_of___fladd:
  6648                           
  6649                           	psect	text17
  6650  07F5                     __ptext17:	
  6651 ;; *************** function ___flneg *****************
  6652 ;; Defined at:
  6653 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;  f1              4    5[COMMON] unsigned char 
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;		None
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  4    5[COMMON] unsigned char 
  6660 ;; Registers used:
  6661 ;;		wreg
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6667 ;;      Params:         4       0       0       0       0
  6668 ;;      Locals:         0       0       0       0       0
  6669 ;;      Temps:          0       0       0       0       0
  6670 ;;      Totals:         4       0       0       0       0
  6671 ;;Total ram usage:        4 bytes
  6672 ;; Hardware stack levels used:    1
  6673 ;; Hardware stack levels required when called:    2
  6674 ;; This function calls:
  6675 ;;		Nothing
  6676 ;; This function is called by:
  6677 ;;		_sprintf
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681                           
  6682                           ;psect for function ___flneg
  6683  07F5                     ___flneg:
  6684  07F5                     l3105:	
  6685                           ;incstack = 0
  6686                           ; Regs used in ___flneg: [wreg]
  6687                           
  6688  07F5  0878               	movf	___flneg@f1+3,w
  6689  07F6  0477               	iorwf	___flneg@f1+2,w
  6690  07F7  0476               	iorwf	___flneg@f1+1,w
  6691  07F8  0475               	iorwf	___flneg@f1,w
  6692  07F9  1903               	skipnz
  6693  07FA  2FFC               	goto	u4941
  6694  07FB  2FFD               	goto	u4940
  6695  07FC                     u4941:
  6696  07FC  2FFF               	goto	l3109
  6697  07FD                     u4940:
  6698  07FD                     l3107:
  6699  07FD  3080               	movlw	128
  6700  07FE  06F8               	xorwf	___flneg@f1+3,f
  6701  07FF                     l3109:
  6702  07FF                     l623:
  6703  07FF  0008               	return
  6704  0800                     __end_of___flneg:
  6705                           
  6706                           	psect	text18
  6707  1EA0                     __ptext18:	
  6708 ;; *************** function ___flge *****************
  6709 ;; Defined at:
  6710 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;  ff1             4    0[BANK0 ] unsigned char 
  6713 ;;  ff2             4    4[BANK0 ] unsigned char 
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;		None
  6716 ;; Return value:  Size  Location     Type
  6717 ;;		None               void
  6718 ;; Registers used:
  6719 ;;		wreg, status,2, status,0
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6725 ;;      Params:         0       8       0       0       0
  6726 ;;      Locals:         0       0       0       0       0
  6727 ;;      Temps:          4       0       0       0       0
  6728 ;;      Totals:         4       8       0       0       0
  6729 ;;Total ram usage:       12 bytes
  6730 ;; Hardware stack levels used:    1
  6731 ;; Hardware stack levels required when called:    2
  6732 ;; This function calls:
  6733 ;;		Nothing
  6734 ;; This function is called by:
  6735 ;;		_sprintf
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           
  6739                           
  6740                           ;psect for function ___flge
  6741  1EA0                     ___flge:
  6742  1EA0                     l3085:	
  6743                           ;incstack = 0
  6744                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6745                           
  6746  1EA0  3000               	movlw	0
  6747  1EA1  1283               	bcf	3,5	;RP0=0, select bank0
  6748  1EA2  1303               	bcf	3,6	;RP1=0, select bank0
  6749  1EA3  0520               	andwf	___flge@ff1,w
  6750  1EA4  00F5               	movwf	??___flge
  6751  1EA5  3000               	movlw	0
  6752  1EA6  0521               	andwf	___flge@ff1+1,w
  6753  1EA7  00F6               	movwf	??___flge+1
  6754  1EA8  3080               	movlw	128
  6755  1EA9  0522               	andwf	___flge@ff1+2,w
  6756  1EAA  00F7               	movwf	??___flge+2
  6757  1EAB  307F               	movlw	127
  6758  1EAC  0523               	andwf	___flge@ff1+3,w
  6759  1EAD  00F8               	movwf	??___flge+3
  6760  1EAE  0878               	movf	??___flge+3,w
  6761  1EAF  0477               	iorwf	??___flge+2,w
  6762  1EB0  0476               	iorwf	??___flge+1,w
  6763  1EB1  0475               	iorwf	??___flge,w
  6764  1EB2  1D03               	skipz
  6765  1EB3  2EB5               	goto	u4871
  6766  1EB4  2EB6               	goto	u4870
  6767  1EB5                     u4871:
  6768  1EB5  2EBE               	goto	l615
  6769  1EB6                     u4870:
  6770  1EB6                     l3087:
  6771  1EB6  3000               	movlw	0
  6772  1EB7  00A3               	movwf	___flge@ff1+3
  6773  1EB8  3000               	movlw	0
  6774  1EB9  00A2               	movwf	___flge@ff1+2
  6775  1EBA  3000               	movlw	0
  6776  1EBB  00A1               	movwf	___flge@ff1+1
  6777  1EBC  3000               	movlw	0
  6778  1EBD  00A0               	movwf	___flge@ff1
  6779  1EBE                     l615:
  6780  1EBE  3000               	movlw	0
  6781  1EBF  0524               	andwf	___flge@ff2,w
  6782  1EC0  00F5               	movwf	??___flge
  6783  1EC1  3000               	movlw	0
  6784  1EC2  0525               	andwf	___flge@ff2+1,w
  6785  1EC3  00F6               	movwf	??___flge+1
  6786  1EC4  3080               	movlw	128
  6787  1EC5  0526               	andwf	___flge@ff2+2,w
  6788  1EC6  00F7               	movwf	??___flge+2
  6789  1EC7  307F               	movlw	127
  6790  1EC8  0527               	andwf	___flge@ff2+3,w
  6791  1EC9  00F8               	movwf	??___flge+3
  6792  1ECA  0878               	movf	??___flge+3,w
  6793  1ECB  0477               	iorwf	??___flge+2,w
  6794  1ECC  0476               	iorwf	??___flge+1,w
  6795  1ECD  0475               	iorwf	??___flge,w
  6796  1ECE  1D03               	skipz
  6797  1ECF  2ED1               	goto	u4881
  6798  1ED0  2ED2               	goto	u4880
  6799  1ED1                     u4881:
  6800  1ED1  2EDA               	goto	l3091
  6801  1ED2                     u4880:
  6802  1ED2                     l3089:
  6803  1ED2  3000               	movlw	0
  6804  1ED3  00A7               	movwf	___flge@ff2+3
  6805  1ED4  3000               	movlw	0
  6806  1ED5  00A6               	movwf	___flge@ff2+2
  6807  1ED6  3000               	movlw	0
  6808  1ED7  00A5               	movwf	___flge@ff2+1
  6809  1ED8  3000               	movlw	0
  6810  1ED9  00A4               	movwf	___flge@ff2
  6811  1EDA                     l3091:
  6812  1EDA  1FA3               	btfss	___flge@ff1+3,7
  6813  1EDB  2EDD               	goto	u4891
  6814  1EDC  2EDE               	goto	u4890
  6815  1EDD                     u4891:
  6816  1EDD  2F02               	goto	l3095
  6817  1EDE                     u4890:
  6818  1EDE                     l3093:
  6819  1EDE  3000               	movlw	0
  6820  1EDF  00F5               	movwf	??___flge
  6821  1EE0  3000               	movlw	0
  6822  1EE1  00F6               	movwf	??___flge+1
  6823  1EE2  3000               	movlw	0
  6824  1EE3  00F7               	movwf	??___flge+2
  6825  1EE4  3080               	movlw	128
  6826  1EE5  00F8               	movwf	??___flge+3
  6827  1EE6  0820               	movf	___flge@ff1,w
  6828  1EE7  02F5               	subwf	??___flge,f
  6829  1EE8  0821               	movf	___flge@ff1+1,w
  6830  1EE9  1C03               	skipc
  6831  1EEA  0F21               	incfsz	___flge@ff1+1,w
  6832  1EEB  2EED               	goto	u4901
  6833  1EEC  2EEE               	goto	u4902
  6834  1EED                     u4901:
  6835  1EED  02F6               	subwf	??___flge+1,f
  6836  1EEE                     u4902:
  6837  1EEE  0822               	movf	___flge@ff1+2,w
  6838  1EEF  1C03               	skipc
  6839  1EF0  0F22               	incfsz	___flge@ff1+2,w
  6840  1EF1  2EF3               	goto	u4903
  6841  1EF2  2EF4               	goto	u4904
  6842  1EF3                     u4903:
  6843  1EF3  02F7               	subwf	??___flge+2,f
  6844  1EF4                     u4904:
  6845  1EF4  0823               	movf	___flge@ff1+3,w
  6846  1EF5  1C03               	skipc
  6847  1EF6  0F23               	incfsz	___flge@ff1+3,w
  6848  1EF7  2EF9               	goto	u4905
  6849  1EF8  2EFA               	goto	u4906
  6850  1EF9                     u4905:
  6851  1EF9  02F8               	subwf	??___flge+3,f
  6852  1EFA                     u4906:
  6853  1EFA  0878               	movf	??___flge+3,w
  6854  1EFB  00A3               	movwf	___flge@ff1+3
  6855  1EFC  0877               	movf	??___flge+2,w
  6856  1EFD  00A2               	movwf	___flge@ff1+2
  6857  1EFE  0876               	movf	??___flge+1,w
  6858  1EFF  00A1               	movwf	___flge@ff1+1
  6859  1F00  0875               	movf	??___flge,w
  6860  1F01  00A0               	movwf	___flge@ff1
  6861  1F02                     l3095:
  6862  1F02  1FA7               	btfss	___flge@ff2+3,7
  6863  1F03  2F05               	goto	u4911
  6864  1F04  2F06               	goto	u4910
  6865  1F05                     u4911:
  6866  1F05  2F2A               	goto	l618
  6867  1F06                     u4910:
  6868  1F06                     l3097:
  6869  1F06  3000               	movlw	0
  6870  1F07  00F5               	movwf	??___flge
  6871  1F08  3000               	movlw	0
  6872  1F09  00F6               	movwf	??___flge+1
  6873  1F0A  3000               	movlw	0
  6874  1F0B  00F7               	movwf	??___flge+2
  6875  1F0C  3080               	movlw	128
  6876  1F0D  00F8               	movwf	??___flge+3
  6877  1F0E  0824               	movf	___flge@ff2,w
  6878  1F0F  02F5               	subwf	??___flge,f
  6879  1F10  0825               	movf	___flge@ff2+1,w
  6880  1F11  1C03               	skipc
  6881  1F12  0F25               	incfsz	___flge@ff2+1,w
  6882  1F13  2F15               	goto	u4921
  6883  1F14  2F16               	goto	u4922
  6884  1F15                     u4921:
  6885  1F15  02F6               	subwf	??___flge+1,f
  6886  1F16                     u4922:
  6887  1F16  0826               	movf	___flge@ff2+2,w
  6888  1F17  1C03               	skipc
  6889  1F18  0F26               	incfsz	___flge@ff2+2,w
  6890  1F19  2F1B               	goto	u4923
  6891  1F1A  2F1C               	goto	u4924
  6892  1F1B                     u4923:
  6893  1F1B  02F7               	subwf	??___flge+2,f
  6894  1F1C                     u4924:
  6895  1F1C  0827               	movf	___flge@ff2+3,w
  6896  1F1D  1C03               	skipc
  6897  1F1E  0F27               	incfsz	___flge@ff2+3,w
  6898  1F1F  2F21               	goto	u4925
  6899  1F20  2F22               	goto	u4926
  6900  1F21                     u4925:
  6901  1F21  02F8               	subwf	??___flge+3,f
  6902  1F22                     u4926:
  6903  1F22  0878               	movf	??___flge+3,w
  6904  1F23  00A7               	movwf	___flge@ff2+3
  6905  1F24  0877               	movf	??___flge+2,w
  6906  1F25  00A6               	movwf	___flge@ff2+2
  6907  1F26  0876               	movf	??___flge+1,w
  6908  1F27  00A5               	movwf	___flge@ff2+1
  6909  1F28  0875               	movf	??___flge,w
  6910  1F29  00A4               	movwf	___flge@ff2
  6911  1F2A                     l618:
  6912  1F2A  3080               	movlw	128
  6913  1F2B  06A3               	xorwf	___flge@ff1+3,f
  6914  1F2C  3080               	movlw	128
  6915  1F2D  06A7               	xorwf	___flge@ff2+3,f
  6916  1F2E  0827               	movf	___flge@ff2+3,w
  6917  1F2F  0223               	subwf	___flge@ff1+3,w
  6918  1F30  1D03               	skipz
  6919  1F31  2F3C               	goto	u4935
  6920  1F32  0826               	movf	___flge@ff2+2,w
  6921  1F33  0222               	subwf	___flge@ff1+2,w
  6922  1F34  1D03               	skipz
  6923  1F35  2F3C               	goto	u4935
  6924  1F36  0825               	movf	___flge@ff2+1,w
  6925  1F37  0221               	subwf	___flge@ff1+1,w
  6926  1F38  1D03               	skipz
  6927  1F39  2F3C               	goto	u4935
  6928  1F3A  0824               	movf	___flge@ff2,w
  6929  1F3B  0220               	subwf	___flge@ff1,w
  6930  1F3C                     u4935:
  6931  1F3C  1803               	skipnc
  6932  1F3D  2F3F               	goto	u4931
  6933  1F3E  2F40               	goto	u4930
  6934  1F3F                     u4931:
  6935  1F3F  2F42               	goto	l3101
  6936  1F40                     u4930:
  6937  1F40                     l3099:
  6938  1F40  1003               	clrc
  6939  1F41  2F43               	goto	l619
  6940  1F42                     l3101:
  6941  1F42  1403               	setc
  6942  1F43                     l619:
  6943  1F43  0008               	return
  6944  1F44                     __end_of___flge:
  6945                           
  6946                           	psect	text19
  6947  1C02                     __ptext19:	
  6948 ;; *************** function ___fleq *****************
  6949 ;; Defined at:
  6950 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;  ff1             4    0[BANK0 ] unsigned char 
  6953 ;;  ff2             4    4[BANK0 ] unsigned char 
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;		None
  6956 ;; Return value:  Size  Location     Type
  6957 ;;		None               void
  6958 ;; Registers used:
  6959 ;;		wreg, status,2, status,0
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/0
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6965 ;;      Params:         0       8       0       0       0
  6966 ;;      Locals:         0       0       0       0       0
  6967 ;;      Temps:          4       0       0       0       0
  6968 ;;      Totals:         4       8       0       0       0
  6969 ;;Total ram usage:       12 bytes
  6970 ;; Hardware stack levels used:    1
  6971 ;; Hardware stack levels required when called:    2
  6972 ;; This function calls:
  6973 ;;		Nothing
  6974 ;; This function is called by:
  6975 ;;		_sprintf
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           
  6980                           ;psect for function ___fleq
  6981  1C02                     ___fleq:
  6982  1C02                     l3073:	
  6983                           ;incstack = 0
  6984                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6985                           
  6986  1C02  3000               	movlw	0
  6987  1C03  1283               	bcf	3,5	;RP0=0, select bank0
  6988  1C04  1303               	bcf	3,6	;RP1=0, select bank0
  6989  1C05  0520               	andwf	___fleq@ff1,w
  6990  1C06  00F5               	movwf	??___fleq
  6991  1C07  3000               	movlw	0
  6992  1C08  0521               	andwf	___fleq@ff1+1,w
  6993  1C09  00F6               	movwf	??___fleq+1
  6994  1C0A  3080               	movlw	128
  6995  1C0B  0522               	andwf	___fleq@ff1+2,w
  6996  1C0C  00F7               	movwf	??___fleq+2
  6997  1C0D  307F               	movlw	127
  6998  1C0E  0523               	andwf	___fleq@ff1+3,w
  6999  1C0F  00F8               	movwf	??___fleq+3
  7000  1C10  0878               	movf	??___fleq+3,w
  7001  1C11  0477               	iorwf	??___fleq+2,w
  7002  1C12  0476               	iorwf	??___fleq+1,w
  7003  1C13  0475               	iorwf	??___fleq,w
  7004  1C14  1D03               	skipz
  7005  1C15  2C17               	goto	u4841
  7006  1C16  2C18               	goto	u4840
  7007  1C17                     u4841:
  7008  1C17  2C20               	goto	l610
  7009  1C18                     u4840:
  7010  1C18                     l3075:
  7011  1C18  3000               	movlw	0
  7012  1C19  00A3               	movwf	___fleq@ff1+3
  7013  1C1A  3000               	movlw	0
  7014  1C1B  00A2               	movwf	___fleq@ff1+2
  7015  1C1C  3000               	movlw	0
  7016  1C1D  00A1               	movwf	___fleq@ff1+1
  7017  1C1E  3000               	movlw	0
  7018  1C1F  00A0               	movwf	___fleq@ff1
  7019  1C20                     l610:
  7020  1C20  3000               	movlw	0
  7021  1C21  0524               	andwf	___fleq@ff2,w
  7022  1C22  00F5               	movwf	??___fleq
  7023  1C23  3000               	movlw	0
  7024  1C24  0525               	andwf	___fleq@ff2+1,w
  7025  1C25  00F6               	movwf	??___fleq+1
  7026  1C26  3080               	movlw	128
  7027  1C27  0526               	andwf	___fleq@ff2+2,w
  7028  1C28  00F7               	movwf	??___fleq+2
  7029  1C29  307F               	movlw	127
  7030  1C2A  0527               	andwf	___fleq@ff2+3,w
  7031  1C2B  00F8               	movwf	??___fleq+3
  7032  1C2C  0878               	movf	??___fleq+3,w
  7033  1C2D  0477               	iorwf	??___fleq+2,w
  7034  1C2E  0476               	iorwf	??___fleq+1,w
  7035  1C2F  0475               	iorwf	??___fleq,w
  7036  1C30  1D03               	skipz
  7037  1C31  2C33               	goto	u4851
  7038  1C32  2C34               	goto	u4850
  7039  1C33                     u4851:
  7040  1C33  2C3C               	goto	l611
  7041  1C34                     u4850:
  7042  1C34                     l3077:
  7043  1C34  3000               	movlw	0
  7044  1C35  00A7               	movwf	___fleq@ff2+3
  7045  1C36  3000               	movlw	0
  7046  1C37  00A6               	movwf	___fleq@ff2+2
  7047  1C38  3000               	movlw	0
  7048  1C39  00A5               	movwf	___fleq@ff2+1
  7049  1C3A  3000               	movlw	0
  7050  1C3B  00A4               	movwf	___fleq@ff2
  7051  1C3C                     l611:
  7052  1C3C  0827               	movf	___fleq@ff2+3,w
  7053  1C3D  0623               	xorwf	___fleq@ff1+3,w
  7054  1C3E  1D03               	skipz
  7055  1C3F  2C4A               	goto	u4865
  7056  1C40  0826               	movf	___fleq@ff2+2,w
  7057  1C41  0622               	xorwf	___fleq@ff1+2,w
  7058  1C42  1D03               	skipz
  7059  1C43  2C4A               	goto	u4865
  7060  1C44  0825               	movf	___fleq@ff2+1,w
  7061  1C45  0621               	xorwf	___fleq@ff1+1,w
  7062  1C46  1D03               	skipz
  7063  1C47  2C4A               	goto	u4865
  7064  1C48  0824               	movf	___fleq@ff2,w
  7065  1C49  0620               	xorwf	___fleq@ff1,w
  7066  1C4A                     u4865:
  7067  1C4A  1903               	skipnz
  7068  1C4B  2C4D               	goto	u4861
  7069  1C4C  2C4E               	goto	u4860
  7070  1C4D                     u4861:
  7071  1C4D  2C50               	goto	l3081
  7072  1C4E                     u4860:
  7073  1C4E                     l3079:
  7074  1C4E  1003               	clrc
  7075  1C4F  2C51               	goto	l612
  7076  1C50                     l3081:
  7077  1C50  1403               	setc
  7078  1C51                     l612:
  7079  1C51  0008               	return
  7080  1C52                     __end_of___fleq:
  7081                           
  7082                           	psect	text20
  7083  1A13                     __ptext20:	
  7084 ;; *************** function _send_crct *****************
  7085 ;; Defined at:
  7086 ;;		line 235 in file "main.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;  st              1    wreg     PTR unsigned char 
  7089 ;;		 -> f1(10), 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  st              1    2[BANK0 ] PTR unsigned char 
  7092 ;;		 -> f1(10), 
  7093 ;;  i               2    0[BANK0 ] int 
  7094 ;; Return value:  Size  Location     Type
  7095 ;;                  1    wreg      void 
  7096 ;; Registers used:
  7097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7098 ;; Tracked objects:
  7099 ;;		On entry : 0/0
  7100 ;;		On exit  : 0/0
  7101 ;;		Unchanged: 0/0
  7102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7103 ;;      Params:         0       0       0       0       0
  7104 ;;      Locals:         0       3       0       0       0
  7105 ;;      Temps:          1       0       0       0       0
  7106 ;;      Totals:         1       3       0       0       0
  7107 ;;Total ram usage:        4 bytes
  7108 ;; Hardware stack levels used:    1
  7109 ;; Hardware stack levels required when called:    3
  7110 ;; This function calls:
  7111 ;;		_send_char
  7112 ;; This function is called by:
  7113 ;;		_main
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           
  7118                           ;psect for function _send_crct
  7119  1A13                     _send_crct:
  7120                           
  7121                           ;incstack = 0
  7122                           ; Regs used in _send_crct: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7123                           ;send_crct@st stored from wreg
  7124  1A13  1283               	bcf	3,5	;RP0=0, select bank0
  7125  1A14  1303               	bcf	3,6	;RP1=0, select bank0
  7126  1A15  00A2               	movwf	send_crct@st
  7127  1A16                     l3567:
  7128                           
  7129                           ;main.c: 236:     int i = 0;
  7130  1A16  01A0               	clrf	send_crct@i
  7131  1A17  01A1               	clrf	send_crct@i+1
  7132                           
  7133                           ;main.c: 237:     while (st[i] != 0){
  7134  1A18  2A2C               	goto	l3573
  7135  1A19                     l3569:
  7136                           
  7137                           ;main.c: 238:         send_char(st[i]);
  7138  1A19  0820               	movf	send_crct@i,w
  7139  1A1A  0722               	addwf	send_crct@st,w
  7140  1A1B  00F6               	movwf	??_send_crct
  7141  1A1C  0876               	movf	??_send_crct,w
  7142  1A1D  0084               	movwf	4
  7143  1A1E  0800               	movf	0,w
  7144  1A1F  160A  158A  213F  160A  158A  	fcall	_send_char
  7145  1A24                     l3571:
  7146                           
  7147                           ;main.c: 239:         i++;
  7148  1A24  3001               	movlw	1
  7149  1A25  1283               	bcf	3,5	;RP0=0, select bank0
  7150  1A26  1303               	bcf	3,6	;RP1=0, select bank0
  7151  1A27  07A0               	addwf	send_crct@i,f
  7152  1A28  1803               	skipnc
  7153  1A29  0AA1               	incf	send_crct@i+1,f
  7154  1A2A  3000               	movlw	0
  7155  1A2B  07A1               	addwf	send_crct@i+1,f
  7156  1A2C                     l3573:
  7157                           
  7158                           ;main.c: 237:     while (st[i] != 0){
  7159  1A2C  0820               	movf	send_crct@i,w
  7160  1A2D  0722               	addwf	send_crct@st,w
  7161  1A2E  00F6               	movwf	??_send_crct
  7162  1A2F  0876               	movf	??_send_crct,w
  7163  1A30  0084               	movwf	4
  7164  1A31  1783               	bsf	3,7	;select IRP bank2
  7165  1A32  0800               	movf	0,w
  7166  1A33  1D03               	btfss	3,2
  7167  1A34  2A36               	goto	u5781
  7168  1A35  2A37               	goto	u5780
  7169  1A36                     u5781:
  7170  1A36  2A19               	goto	l3569
  7171  1A37                     u5780:
  7172  1A37                     l143:
  7173  1A37  0008               	return
  7174  1A38                     __end_of_send_crct:
  7175                           
  7176                           	psect	text21
  7177  193F                     __ptext21:	
  7178 ;; *************** function _send_char *****************
  7179 ;; Defined at:
  7180 ;;		line 243 in file "main.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;  dato            1    wreg     unsigned char 
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;  dato            1    5[COMMON] unsigned char 
  7185 ;; Return value:  Size  Location     Type
  7186 ;;                  1    wreg      void 
  7187 ;; Registers used:
  7188 ;;		wreg
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7194 ;;      Params:         0       0       0       0       0
  7195 ;;      Locals:         1       0       0       0       0
  7196 ;;      Temps:          0       0       0       0       0
  7197 ;;      Totals:         1       0       0       0       0
  7198 ;;Total ram usage:        1 bytes
  7199 ;; Hardware stack levels used:    1
  7200 ;; Hardware stack levels required when called:    2
  7201 ;; This function calls:
  7202 ;;		Nothing
  7203 ;; This function is called by:
  7204 ;;		_send_crct
  7205 ;; This function uses a non-reentrant model
  7206 ;;
  7207                           
  7208                           
  7209                           ;psect for function _send_char
  7210  193F                     _send_char:
  7211                           
  7212                           ;incstack = 0
  7213                           ; Regs used in _send_char: [wreg]
  7214                           ;send_char@dato stored from wreg
  7215  193F  00F5               	movwf	send_char@dato
  7216  1940                     l2835:
  7217  1940                     l146:	
  7218                           ;main.c: 244:     while(!TXIF);
  7219                           
  7220  1940  1283               	bcf	3,5	;RP0=0, select bank0
  7221  1941  1303               	bcf	3,6	;RP1=0, select bank0
  7222  1942  1E0C               	btfss	12,4	;volatile
  7223  1943  2945               	goto	u4191
  7224  1944  2946               	goto	u4190
  7225  1945                     u4191:
  7226  1945  2940               	goto	l146
  7227  1946                     u4190:
  7228  1946                     l2837:
  7229                           
  7230                           ;main.c: 245:     TXREG = dato;
  7231  1946  0875               	movf	send_char@dato,w
  7232  1947  0099               	movwf	25	;volatile
  7233  1948                     l149:
  7234  1948  0008               	return
  7235  1949                     __end_of_send_char:
  7236                           
  7237                           	psect	text22
  7238  1AE9                     __ptext22:	
  7239 ;; *************** function _conv *****************
  7240 ;; Defined at:
  7241 ;;		line 248 in file "main.c"
  7242 ;; Parameters:    Size  Location     Type
  7243 ;;  aa              1    wreg     unsigned char 
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;  aa              1   50[BANK0 ] unsigned char 
  7246 ;;  result          4   46[BANK0 ] unsigned char 
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  4   38[BANK0 ] unsigned char 
  7249 ;; Registers used:
  7250 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7256 ;;      Params:         0       4       0       0       0
  7257 ;;      Locals:         0       5       0       0       0
  7258 ;;      Temps:          0       4       0       0       0
  7259 ;;      Totals:         0      13       0       0       0
  7260 ;;Total ram usage:       13 bytes
  7261 ;; Hardware stack levels used:    1
  7262 ;; Hardware stack levels required when called:    4
  7263 ;; This function calls:
  7264 ;;		___flmul
  7265 ;;		___xxtofl
  7266 ;; This function is called by:
  7267 ;;		_main
  7268 ;; This function uses a non-reentrant model
  7269 ;;
  7270                           
  7271                           
  7272                           ;psect for function _conv
  7273  1AE9                     _conv:
  7274                           
  7275                           ;incstack = 0
  7276                           ; Regs used in _conv: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7277                           ;conv@aa stored from wreg
  7278  1AE9  1283               	bcf	3,5	;RP0=0, select bank0
  7279  1AEA  1303               	bcf	3,6	;RP1=0, select bank0
  7280  1AEB  00D2               	movwf	conv@aa
  7281  1AEC                     l3299:
  7282                           
  7283                           ;main.c: 249:     double result;;main.c: 250:     result = aa*0.0196;
  7284  1AEC  303C               	movlw	60
  7285  1AED  00AF               	movwf	___flmul@b+3
  7286  1AEE  30A0               	movlw	160
  7287  1AEF  00AE               	movwf	___flmul@b+2
  7288  1AF0  3090               	movlw	144
  7289  1AF1  00AD               	movwf	___flmul@b+1
  7290  1AF2  302E               	movlw	46
  7291  1AF3  00AC               	movwf	___flmul@b
  7292  1AF4  0852               	movf	conv@aa,w
  7293  1AF5  00CA               	movwf	??_conv
  7294  1AF6  01CB               	clrf	??_conv+1
  7295  1AF7  01CC               	clrf	??_conv+2
  7296  1AF8  01CD               	clrf	??_conv+3
  7297  1AF9  084D               	movf	??_conv+3,w
  7298  1AFA  00F8               	movwf	___xxtofl@val+3
  7299  1AFB  084C               	movf	??_conv+2,w
  7300  1AFC  00F7               	movwf	___xxtofl@val+2
  7301  1AFD  084B               	movf	??_conv+1,w
  7302  1AFE  00F6               	movwf	___xxtofl@val+1
  7303  1AFF  084A               	movf	??_conv,w
  7304  1B00  00F5               	movwf	___xxtofl@val
  7305  1B01  3001               	movlw	1
  7306  1B02  160A  158A  2744  160A  158A  	fcall	___xxtofl
  7307  1B07  0878               	movf	?___xxtofl+3,w
  7308  1B08  1283               	bcf	3,5	;RP0=0, select bank0
  7309  1B09  1303               	bcf	3,6	;RP1=0, select bank0
  7310  1B0A  00B3               	movwf	___flmul@a+3
  7311  1B0B  0877               	movf	?___xxtofl+2,w
  7312  1B0C  00B2               	movwf	___flmul@a+2
  7313  1B0D  0876               	movf	?___xxtofl+1,w
  7314  1B0E  00B1               	movwf	___flmul@a+1
  7315  1B0F  0875               	movf	?___xxtofl,w
  7316  1B10  00B0               	movwf	___flmul@a
  7317  1B11  120A  158A  213C  160A  158A  	fcall	___flmul
  7318  1B16  1283               	bcf	3,5	;RP0=0, select bank0
  7319  1B17  1303               	bcf	3,6	;RP1=0, select bank0
  7320  1B18  082F               	movf	?___flmul+3,w
  7321  1B19  00D1               	movwf	conv@result+3
  7322  1B1A  082E               	movf	?___flmul+2,w
  7323  1B1B  00D0               	movwf	conv@result+2
  7324  1B1C  082D               	movf	?___flmul+1,w
  7325  1B1D  00CF               	movwf	conv@result+1
  7326  1B1E  082C               	movf	?___flmul,w
  7327  1B1F  00CE               	movwf	conv@result
  7328  1B20                     l3301:
  7329                           
  7330                           ;main.c: 251:     return result;
  7331  1B20  0851               	movf	conv@result+3,w
  7332  1B21  00C9               	movwf	?_conv+3
  7333  1B22  0850               	movf	conv@result+2,w
  7334  1B23  00C8               	movwf	?_conv+2
  7335  1B24  084F               	movf	conv@result+1,w
  7336  1B25  00C7               	movwf	?_conv+1
  7337  1B26  084E               	movf	conv@result,w
  7338  1B27  00C6               	movwf	?_conv
  7339  1B28                     l152:
  7340  1B28  0008               	return
  7341  1B29                     __end_of_conv:
  7342                           
  7343                           	psect	text23
  7344  1F44                     __ptext23:	
  7345 ;; *************** function ___xxtofl *****************
  7346 ;; Defined at:
  7347 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;  sign            1    wreg     unsigned char 
  7350 ;;  val             4    5[COMMON] long 
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;  sign            1    4[BANK0 ] unsigned char 
  7353 ;;  arg             4    6[BANK0 ] unsigned long 
  7354 ;;  exp             1    5[BANK0 ] unsigned char 
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  4    5[COMMON] unsigned char 
  7357 ;; Registers used:
  7358 ;;		wreg, status,2, status,0
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7364 ;;      Params:         4       0       0       0       0
  7365 ;;      Locals:         0       6       0       0       0
  7366 ;;      Temps:          0       4       0       0       0
  7367 ;;      Totals:         4      10       0       0       0
  7368 ;;Total ram usage:       14 bytes
  7369 ;; Hardware stack levels used:    1
  7370 ;; Hardware stack levels required when called:    2
  7371 ;; This function calls:
  7372 ;;		Nothing
  7373 ;; This function is called by:
  7374 ;;		_conv
  7375 ;;		_sprintf
  7376 ;;		_valadc
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           
  7381                           ;psect for function ___xxtofl
  7382  1F44                     ___xxtofl:
  7383                           
  7384                           ;incstack = 0
  7385                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7386                           ;___xxtofl@sign stored from wreg
  7387  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  7388  1F45  1303               	bcf	3,6	;RP1=0, select bank0
  7389  1F46  00A4               	movwf	___xxtofl@sign
  7390  1F47                     l3175:
  7391  1F47  0824               	movf	___xxtofl@sign,w
  7392  1F48  1903               	btfsc	3,2
  7393  1F49  2F4B               	goto	u5111
  7394  1F4A  2F4C               	goto	u5110
  7395  1F4B                     u5111:
  7396  1F4B  2F60               	goto	l3181
  7397  1F4C                     u5110:
  7398  1F4C                     l3177:
  7399  1F4C  1FF8               	btfss	___xxtofl@val+3,7
  7400  1F4D  2F4F               	goto	u5121
  7401  1F4E  2F50               	goto	u5120
  7402  1F4F                     u5121:
  7403  1F4F  2F60               	goto	l3181
  7404  1F50                     u5120:
  7405  1F50                     l3179:
  7406  1F50  0975               	comf	___xxtofl@val,w
  7407  1F51  00A6               	movwf	___xxtofl@arg
  7408  1F52  0976               	comf	___xxtofl@val+1,w
  7409  1F53  00A7               	movwf	___xxtofl@arg+1
  7410  1F54  0977               	comf	___xxtofl@val+2,w
  7411  1F55  00A8               	movwf	___xxtofl@arg+2
  7412  1F56  0978               	comf	___xxtofl@val+3,w
  7413  1F57  00A9               	movwf	___xxtofl@arg+3
  7414  1F58  0AA6               	incf	___xxtofl@arg,f
  7415  1F59  1903               	skipnz
  7416  1F5A  0AA7               	incf	___xxtofl@arg+1,f
  7417  1F5B  1903               	skipnz
  7418  1F5C  0AA8               	incf	___xxtofl@arg+2,f
  7419  1F5D  1903               	skipnz
  7420  1F5E  0AA9               	incf	___xxtofl@arg+3,f
  7421  1F5F  2F68               	goto	l891
  7422  1F60                     l3181:
  7423  1F60  0878               	movf	___xxtofl@val+3,w
  7424  1F61  00A9               	movwf	___xxtofl@arg+3
  7425  1F62  0877               	movf	___xxtofl@val+2,w
  7426  1F63  00A8               	movwf	___xxtofl@arg+2
  7427  1F64  0876               	movf	___xxtofl@val+1,w
  7428  1F65  00A7               	movwf	___xxtofl@arg+1
  7429  1F66  0875               	movf	___xxtofl@val,w
  7430  1F67  00A6               	movwf	___xxtofl@arg
  7431  1F68                     l891:
  7432  1F68  0878               	movf	___xxtofl@val+3,w
  7433  1F69  0477               	iorwf	___xxtofl@val+2,w
  7434  1F6A  0476               	iorwf	___xxtofl@val+1,w
  7435  1F6B  0475               	iorwf	___xxtofl@val,w
  7436  1F6C  1D03               	skipz
  7437  1F6D  2F6F               	goto	u5131
  7438  1F6E  2F70               	goto	u5130
  7439  1F6F                     u5131:
  7440  1F6F  2F79               	goto	l3187
  7441  1F70                     u5130:
  7442  1F70                     l3183:
  7443  1F70  3000               	movlw	0
  7444  1F71  00F8               	movwf	?___xxtofl+3
  7445  1F72  3000               	movlw	0
  7446  1F73  00F7               	movwf	?___xxtofl+2
  7447  1F74  3000               	movlw	0
  7448  1F75  00F6               	movwf	?___xxtofl+1
  7449  1F76  3000               	movlw	0
  7450  1F77  00F5               	movwf	?___xxtofl
  7451  1F78  2FFF               	goto	l893
  7452  1F79                     l3187:
  7453  1F79  3096               	movlw	150
  7454  1F7A  00A0               	movwf	??___xxtofl
  7455  1F7B  0820               	movf	??___xxtofl,w
  7456  1F7C  00A5               	movwf	___xxtofl@exp
  7457  1F7D  2F8B               	goto	l3191
  7458  1F7E                     l3189:
  7459  1F7E  3001               	movlw	1
  7460  1F7F  00A0               	movwf	??___xxtofl
  7461  1F80  0820               	movf	??___xxtofl,w
  7462  1F81  07A5               	addwf	___xxtofl@exp,f
  7463  1F82  3001               	movlw	1
  7464  1F83                     u5145:
  7465  1F83  1003               	clrc
  7466  1F84  0CA9               	rrf	___xxtofl@arg+3,f
  7467  1F85  0CA8               	rrf	___xxtofl@arg+2,f
  7468  1F86  0CA7               	rrf	___xxtofl@arg+1,f
  7469  1F87  0CA6               	rrf	___xxtofl@arg,f
  7470  1F88  3EFF               	addlw	-1
  7471  1F89  1D03               	skipz
  7472  1F8A  2F83               	goto	u5145
  7473  1F8B                     l3191:
  7474  1F8B  30FE               	movlw	254
  7475  1F8C  0529               	andwf	___xxtofl@arg+3,w
  7476  1F8D  1D03               	btfss	3,2
  7477  1F8E  2F90               	goto	u5151
  7478  1F8F  2F91               	goto	u5150
  7479  1F90                     u5151:
  7480  1F90  2F7E               	goto	l3189
  7481  1F91                     u5150:
  7482  1F91  2FAD               	goto	l897
  7483  1F92                     l3193:
  7484  1F92  3001               	movlw	1
  7485  1F93  00A0               	movwf	??___xxtofl
  7486  1F94  0820               	movf	??___xxtofl,w
  7487  1F95  07A5               	addwf	___xxtofl@exp,f
  7488  1F96                     l3195:
  7489  1F96  3001               	movlw	1
  7490  1F97  07A6               	addwf	___xxtofl@arg,f
  7491  1F98  3000               	movlw	0
  7492  1F99  1803               	skipnc
  7493  1F9A  3001               	movlw	1
  7494  1F9B  07A7               	addwf	___xxtofl@arg+1,f
  7495  1F9C  3000               	movlw	0
  7496  1F9D  1803               	skipnc
  7497  1F9E  3001               	movlw	1
  7498  1F9F  07A8               	addwf	___xxtofl@arg+2,f
  7499  1FA0  3000               	movlw	0
  7500  1FA1  1803               	skipnc
  7501  1FA2  3001               	movlw	1
  7502  1FA3  07A9               	addwf	___xxtofl@arg+3,f
  7503  1FA4                     l3197:
  7504  1FA4  3001               	movlw	1
  7505  1FA5                     u5165:
  7506  1FA5  1003               	clrc
  7507  1FA6  0CA9               	rrf	___xxtofl@arg+3,f
  7508  1FA7  0CA8               	rrf	___xxtofl@arg+2,f
  7509  1FA8  0CA7               	rrf	___xxtofl@arg+1,f
  7510  1FA9  0CA6               	rrf	___xxtofl@arg,f
  7511  1FAA  3EFF               	addlw	-1
  7512  1FAB  1D03               	skipz
  7513  1FAC  2FA5               	goto	u5165
  7514  1FAD                     l897:
  7515  1FAD  30FF               	movlw	255
  7516  1FAE  0529               	andwf	___xxtofl@arg+3,w
  7517  1FAF  1D03               	btfss	3,2
  7518  1FB0  2FB2               	goto	u5171
  7519  1FB1  2FB3               	goto	u5170
  7520  1FB2                     u5171:
  7521  1FB2  2F92               	goto	l3193
  7522  1FB3                     u5170:
  7523  1FB3  2FBF               	goto	l3201
  7524  1FB4                     l3199:
  7525  1FB4  3001               	movlw	1
  7526  1FB5  02A5               	subwf	___xxtofl@exp,f
  7527  1FB6  3001               	movlw	1
  7528  1FB7  00A0               	movwf	??___xxtofl
  7529  1FB8                     u5185:
  7530  1FB8  1003               	clrc
  7531  1FB9  0DA6               	rlf	___xxtofl@arg,f
  7532  1FBA  0DA7               	rlf	___xxtofl@arg+1,f
  7533  1FBB  0DA8               	rlf	___xxtofl@arg+2,f
  7534  1FBC  0DA9               	rlf	___xxtofl@arg+3,f
  7535  1FBD  0BA0               	decfsz	??___xxtofl,f
  7536  1FBE  2FB8               	goto	u5185
  7537  1FBF                     l3201:
  7538  1FBF  1BA8               	btfsc	___xxtofl@arg+2,7
  7539  1FC0  2FC2               	goto	u5191
  7540  1FC1  2FC3               	goto	u5190
  7541  1FC2                     u5191:
  7542  1FC2  2FC9               	goto	l904
  7543  1FC3                     u5190:
  7544  1FC3                     l3203:
  7545  1FC3  3002               	movlw	2
  7546  1FC4  0225               	subwf	___xxtofl@exp,w
  7547  1FC5  1803               	skipnc
  7548  1FC6  2FC8               	goto	u5201
  7549  1FC7  2FC9               	goto	u5200
  7550  1FC8                     u5201:
  7551  1FC8  2FB4               	goto	l3199
  7552  1FC9                     u5200:
  7553  1FC9                     l904:
  7554  1FC9  1825               	btfsc	___xxtofl@exp,0
  7555  1FCA  2FCC               	goto	u5211
  7556  1FCB  2FCD               	goto	u5210
  7557  1FCC                     u5211:
  7558  1FCC  2FD5               	goto	l905
  7559  1FCD                     u5210:
  7560  1FCD                     l3205:
  7561  1FCD  30FF               	movlw	255
  7562  1FCE  05A6               	andwf	___xxtofl@arg,f
  7563  1FCF  30FF               	movlw	255
  7564  1FD0  05A7               	andwf	___xxtofl@arg+1,f
  7565  1FD1  307F               	movlw	127
  7566  1FD2  05A8               	andwf	___xxtofl@arg+2,f
  7567  1FD3  30FF               	movlw	255
  7568  1FD4  05A9               	andwf	___xxtofl@arg+3,f
  7569  1FD5                     l905:
  7570  1FD5  1003               	clrc
  7571  1FD6  0CA5               	rrf	___xxtofl@exp,f
  7572  1FD7                     l3207:
  7573  1FD7  0825               	movf	___xxtofl@exp,w
  7574  1FD8  00A0               	movwf	??___xxtofl
  7575  1FD9  01A1               	clrf	??___xxtofl+1
  7576  1FDA  01A2               	clrf	??___xxtofl+2
  7577  1FDB  01A3               	clrf	??___xxtofl+3
  7578  1FDC  3018               	movlw	24
  7579  1FDD                     u5225:
  7580  1FDD  1003               	clrc
  7581  1FDE  0DA0               	rlf	??___xxtofl,f
  7582  1FDF  0DA1               	rlf	??___xxtofl+1,f
  7583  1FE0  0DA2               	rlf	??___xxtofl+2,f
  7584  1FE1  0DA3               	rlf	??___xxtofl+3,f
  7585  1FE2                     u5220:
  7586  1FE2  3EFF               	addlw	-1
  7587  1FE3  1D03               	skipz
  7588  1FE4  2FDD               	goto	u5225
  7589  1FE5  0820               	movf	??___xxtofl,w
  7590  1FE6  04A6               	iorwf	___xxtofl@arg,f
  7591  1FE7  0821               	movf	??___xxtofl+1,w
  7592  1FE8  04A7               	iorwf	___xxtofl@arg+1,f
  7593  1FE9  0822               	movf	??___xxtofl+2,w
  7594  1FEA  04A8               	iorwf	___xxtofl@arg+2,f
  7595  1FEB  0823               	movf	??___xxtofl+3,w
  7596  1FEC  04A9               	iorwf	___xxtofl@arg+3,f
  7597  1FED                     l3209:
  7598  1FED  0824               	movf	___xxtofl@sign,w
  7599  1FEE  1903               	btfsc	3,2
  7600  1FEF  2FF1               	goto	u5231
  7601  1FF0  2FF2               	goto	u5230
  7602  1FF1                     u5231:
  7603  1FF1  2FF7               	goto	l3215
  7604  1FF2                     u5230:
  7605  1FF2                     l3211:
  7606  1FF2  1FF8               	btfss	___xxtofl@val+3,7
  7607  1FF3  2FF5               	goto	u5241
  7608  1FF4  2FF6               	goto	u5240
  7609  1FF5                     u5241:
  7610  1FF5  2FF7               	goto	l3215
  7611  1FF6                     u5240:
  7612  1FF6                     l3213:
  7613  1FF6  17A9               	bsf	___xxtofl@arg+3,7
  7614  1FF7                     l3215:
  7615  1FF7  0829               	movf	___xxtofl@arg+3,w
  7616  1FF8  00F8               	movwf	?___xxtofl+3
  7617  1FF9  0828               	movf	___xxtofl@arg+2,w
  7618  1FFA  00F7               	movwf	?___xxtofl+2
  7619  1FFB  0827               	movf	___xxtofl@arg+1,w
  7620  1FFC  00F6               	movwf	?___xxtofl+1
  7621  1FFD  0826               	movf	___xxtofl@arg,w
  7622  1FFE  00F5               	movwf	?___xxtofl
  7623  1FFF                     l893:
  7624  1FFF  0008               	return
  7625  2000                     __end_of___xxtofl:
  7626                           
  7627                           	psect	text24
  7628  093C                     __ptext24:	
  7629 ;; *************** function ___flmul *****************
  7630 ;; Defined at:
  7631 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  b               4   12[BANK0 ] unsigned char 
  7634 ;;  a               4   16[BANK0 ] unsigned char 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;  prod            4   32[BANK0 ] struct .
  7637 ;;  grs             4   26[BANK0 ] unsigned long 
  7638 ;;  temp            2   36[BANK0 ] struct .
  7639 ;;  bexp            1   31[BANK0 ] unsigned char 
  7640 ;;  aexp            1   30[BANK0 ] unsigned char 
  7641 ;;  sign            1   25[BANK0 ] unsigned char 
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  4   12[BANK0 ] unsigned char 
  7644 ;; Registers used:
  7645 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7651 ;;      Params:         0       8       0       0       0
  7652 ;;      Locals:         0      13       0       0       0
  7653 ;;      Temps:          0       5       0       0       0
  7654 ;;      Totals:         0      26       0       0       0
  7655 ;;Total ram usage:       26 bytes
  7656 ;; Hardware stack levels used:    1
  7657 ;; Hardware stack levels required when called:    3
  7658 ;; This function calls:
  7659 ;;		__Umul8_16
  7660 ;; This function is called by:
  7661 ;;		_conv
  7662 ;;		_fround
  7663 ;;		_scale
  7664 ;;		_sprintf
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           
  7669                           ;psect for function ___flmul
  7670  093C                     ___flmul:
  7671  093C                     l2695:	
  7672                           ;incstack = 0
  7673                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7674                           
  7675  093C  1283               	bcf	3,5	;RP0=0, select bank0
  7676  093D  1303               	bcf	3,6	;RP1=0, select bank0
  7677  093E  082F               	movf	___flmul@b+3,w
  7678  093F  3980               	andlw	128
  7679  0940  00B4               	movwf	??___flmul
  7680  0941  0834               	movf	??___flmul,w
  7681  0942  00B9               	movwf	___flmul@sign
  7682  0943                     l2697:
  7683  0943  082F               	movf	___flmul@b+3,w
  7684  0944  00B4               	movwf	??___flmul
  7685  0945  0734               	addwf	??___flmul,w
  7686  0946  00B5               	movwf	??___flmul+1
  7687  0947  0835               	movf	??___flmul+1,w
  7688  0948  00BF               	movwf	___flmul@bexp
  7689  0949                     l2699:
  7690  0949  1FAE               	btfss	___flmul@b+2,7
  7691  094A  294C               	goto	u3821
  7692  094B  294D               	goto	u3820
  7693  094C                     u3821:
  7694  094C  294E               	goto	l2703
  7695  094D                     u3820:
  7696  094D                     l2701:
  7697  094D  143F               	bsf	___flmul@bexp,0
  7698  094E                     l2703:
  7699  094E  083F               	movf	___flmul@bexp,w
  7700  094F  1903               	btfsc	3,2
  7701  0950  2952               	goto	u3831
  7702  0951  2953               	goto	u3830
  7703  0952                     u3831:
  7704  0952  2962               	goto	l2711
  7705  0953                     u3830:
  7706  0953                     l2705:
  7707  0953  0A3F               	incf	___flmul@bexp,w
  7708  0954  1D03               	btfss	3,2
  7709  0955  2957               	goto	u3841
  7710  0956  2958               	goto	u3840
  7711  0957                     u3841:
  7712  0957  2960               	goto	l2709
  7713  0958                     u3840:
  7714  0958                     l2707:
  7715  0958  3000               	movlw	0
  7716  0959  00AF               	movwf	___flmul@b+3
  7717  095A  3000               	movlw	0
  7718  095B  00AE               	movwf	___flmul@b+2
  7719  095C  3000               	movlw	0
  7720  095D  00AD               	movwf	___flmul@b+1
  7721  095E  3000               	movlw	0
  7722  095F  00AC               	movwf	___flmul@b
  7723  0960                     l2709:
  7724  0960  17AE               	bsf	___flmul@b+2,7
  7725  0961  296A               	goto	l2713
  7726  0962                     l2711:
  7727  0962  3000               	movlw	0
  7728  0963  00AF               	movwf	___flmul@b+3
  7729  0964  3000               	movlw	0
  7730  0965  00AE               	movwf	___flmul@b+2
  7731  0966  3000               	movlw	0
  7732  0967  00AD               	movwf	___flmul@b+1
  7733  0968  3000               	movlw	0
  7734  0969  00AC               	movwf	___flmul@b
  7735  096A                     l2713:
  7736  096A  0833               	movf	___flmul@a+3,w
  7737  096B  3980               	andlw	128
  7738  096C  00B4               	movwf	??___flmul
  7739  096D  0834               	movf	??___flmul,w
  7740  096E  06B9               	xorwf	___flmul@sign,f
  7741  096F                     l2715:
  7742  096F  0833               	movf	___flmul@a+3,w
  7743  0970  00B4               	movwf	??___flmul
  7744  0971  0734               	addwf	??___flmul,w
  7745  0972  00B5               	movwf	??___flmul+1
  7746  0973  0835               	movf	??___flmul+1,w
  7747  0974  00BE               	movwf	___flmul@aexp
  7748  0975                     l2717:
  7749  0975  1FB2               	btfss	___flmul@a+2,7
  7750  0976  2978               	goto	u3851
  7751  0977  2979               	goto	u3850
  7752  0978                     u3851:
  7753  0978  297A               	goto	l2721
  7754  0979                     u3850:
  7755  0979                     l2719:
  7756  0979  143E               	bsf	___flmul@aexp,0
  7757  097A                     l2721:
  7758  097A  083E               	movf	___flmul@aexp,w
  7759  097B  1903               	btfsc	3,2
  7760  097C  297E               	goto	u3861
  7761  097D  297F               	goto	u3860
  7762  097E                     u3861:
  7763  097E  298E               	goto	l2729
  7764  097F                     u3860:
  7765  097F                     l2723:
  7766  097F  0A3E               	incf	___flmul@aexp,w
  7767  0980  1D03               	btfss	3,2
  7768  0981  2983               	goto	u3871
  7769  0982  2984               	goto	u3870
  7770  0983                     u3871:
  7771  0983  298C               	goto	l2727
  7772  0984                     u3870:
  7773  0984                     l2725:
  7774  0984  3000               	movlw	0
  7775  0985  00B3               	movwf	___flmul@a+3
  7776  0986  3000               	movlw	0
  7777  0987  00B2               	movwf	___flmul@a+2
  7778  0988  3000               	movlw	0
  7779  0989  00B1               	movwf	___flmul@a+1
  7780  098A  3000               	movlw	0
  7781  098B  00B0               	movwf	___flmul@a
  7782  098C                     l2727:
  7783  098C  17B2               	bsf	___flmul@a+2,7
  7784  098D  2996               	goto	l2731
  7785  098E                     l2729:
  7786  098E  3000               	movlw	0
  7787  098F  00B3               	movwf	___flmul@a+3
  7788  0990  3000               	movlw	0
  7789  0991  00B2               	movwf	___flmul@a+2
  7790  0992  3000               	movlw	0
  7791  0993  00B1               	movwf	___flmul@a+1
  7792  0994  3000               	movlw	0
  7793  0995  00B0               	movwf	___flmul@a
  7794  0996                     l2731:
  7795  0996  083E               	movf	___flmul@aexp,w
  7796  0997  1903               	btfsc	3,2
  7797  0998  299A               	goto	u3881
  7798  0999  299B               	goto	u3880
  7799  099A                     u3881:
  7800  099A  29A0               	goto	l2735
  7801  099B                     u3880:
  7802  099B                     l2733:
  7803  099B  083F               	movf	___flmul@bexp,w
  7804  099C  1D03               	btfss	3,2
  7805  099D  299F               	goto	u3891
  7806  099E  29A0               	goto	u3890
  7807  099F                     u3891:
  7808  099F  29A9               	goto	l2739
  7809  09A0                     u3890:
  7810  09A0                     l2735:
  7811  09A0  3000               	movlw	0
  7812  09A1  00AF               	movwf	?___flmul+3
  7813  09A2  3000               	movlw	0
  7814  09A3  00AE               	movwf	?___flmul+2
  7815  09A4  3000               	movlw	0
  7816  09A5  00AD               	movwf	?___flmul+1
  7817  09A6  3000               	movlw	0
  7818  09A7  00AC               	movwf	?___flmul
  7819  09A8  2C9C               	goto	l847
  7820  09A9                     l2739:
  7821  09A9  082C               	movf	___flmul@b,w
  7822  09AA  00B4               	movwf	??___flmul
  7823  09AB  0834               	movf	??___flmul,w
  7824  09AC  00F5               	movwf	__Umul8_16@multiplicand
  7825  09AD  0832               	movf	___flmul@a+2,w
  7826  09AE  160A  118A  20D0  120A  158A  	fcall	__Umul8_16
  7827  09B3  0876               	movf	?__Umul8_16+1,w
  7828  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  7829  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  7830  09B6  00C5               	movwf	___flmul@temp+1
  7831  09B7  0875               	movf	?__Umul8_16,w
  7832  09B8  00C4               	movwf	___flmul@temp
  7833  09B9                     l2741:
  7834  09B9  0844               	movf	___flmul@temp,w
  7835  09BA  00B4               	movwf	??___flmul
  7836  09BB  01B5               	clrf	??___flmul+1
  7837  09BC  01B6               	clrf	??___flmul+2
  7838  09BD  01B7               	clrf	??___flmul+3
  7839  09BE  0837               	movf	??___flmul+3,w
  7840  09BF  00BD               	movwf	___flmul@grs+3
  7841  09C0  0836               	movf	??___flmul+2,w
  7842  09C1  00BC               	movwf	___flmul@grs+2
  7843  09C2  0835               	movf	??___flmul+1,w
  7844  09C3  00BB               	movwf	___flmul@grs+1
  7845  09C4  0834               	movf	??___flmul,w
  7846  09C5  00BA               	movwf	___flmul@grs
  7847  09C6                     l2743:
  7848  09C6  0845               	movf	___flmul@temp+1,w
  7849  09C7  00B4               	movwf	??___flmul
  7850  09C8  01B5               	clrf	??___flmul+1
  7851  09C9  01B6               	clrf	??___flmul+2
  7852  09CA  01B7               	clrf	??___flmul+3
  7853  09CB  0837               	movf	??___flmul+3,w
  7854  09CC  00C3               	movwf	___flmul@prod+3
  7855  09CD  0836               	movf	??___flmul+2,w
  7856  09CE  00C2               	movwf	___flmul@prod+2
  7857  09CF  0835               	movf	??___flmul+1,w
  7858  09D0  00C1               	movwf	___flmul@prod+1
  7859  09D1  0834               	movf	??___flmul,w
  7860  09D2  00C0               	movwf	___flmul@prod
  7861  09D3  082D               	movf	___flmul@b+1,w
  7862  09D4  00B4               	movwf	??___flmul
  7863  09D5  0834               	movf	??___flmul,w
  7864  09D6  00F5               	movwf	__Umul8_16@multiplicand
  7865  09D7  0831               	movf	___flmul@a+1,w
  7866  09D8  160A  118A  20D0  120A  158A  	fcall	__Umul8_16
  7867  09DD  0876               	movf	?__Umul8_16+1,w
  7868  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  7869  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  7870  09E0  00C5               	movwf	___flmul@temp+1
  7871  09E1  0875               	movf	?__Umul8_16,w
  7872  09E2  00C4               	movwf	___flmul@temp
  7873  09E3                     l2745:
  7874  09E3  0844               	movf	___flmul@temp,w
  7875  09E4  00B4               	movwf	??___flmul
  7876  09E5  01B5               	clrf	??___flmul+1
  7877  09E6  01B6               	clrf	??___flmul+2
  7878  09E7  01B7               	clrf	??___flmul+3
  7879  09E8  0834               	movf	??___flmul,w
  7880  09E9  07BA               	addwf	___flmul@grs,f
  7881  09EA  0835               	movf	??___flmul+1,w
  7882  09EB  1103               	clrz
  7883  09EC  1803               	skipnc
  7884  09ED  3E01               	addlw	1
  7885  09EE  1903               	skipnz
  7886  09EF  29F1               	goto	u3901
  7887  09F0  07BB               	addwf	___flmul@grs+1,f
  7888  09F1                     u3901:
  7889  09F1  0836               	movf	??___flmul+2,w
  7890  09F2  1103               	clrz
  7891  09F3  1803               	skipnc
  7892  09F4  3E01               	addlw	1
  7893  09F5  1903               	skipnz
  7894  09F6  29F8               	goto	u3902
  7895  09F7  07BC               	addwf	___flmul@grs+2,f
  7896  09F8                     u3902:
  7897  09F8  0837               	movf	??___flmul+3,w
  7898  09F9  1103               	clrz
  7899  09FA  1803               	skipnc
  7900  09FB  3E01               	addlw	1
  7901  09FC  1903               	skipnz
  7902  09FD  29FF               	goto	u3903
  7903  09FE  07BD               	addwf	___flmul@grs+3,f
  7904  09FF                     u3903:
  7905  09FF                     l2747:
  7906  09FF  0845               	movf	___flmul@temp+1,w
  7907  0A00  00B4               	movwf	??___flmul
  7908  0A01  01B5               	clrf	??___flmul+1
  7909  0A02  01B6               	clrf	??___flmul+2
  7910  0A03  01B7               	clrf	??___flmul+3
  7911  0A04  0834               	movf	??___flmul,w
  7912  0A05  07C0               	addwf	___flmul@prod,f
  7913  0A06  0835               	movf	??___flmul+1,w
  7914  0A07  1103               	clrz
  7915  0A08  1803               	skipnc
  7916  0A09  3E01               	addlw	1
  7917  0A0A  1903               	skipnz
  7918  0A0B  2A0D               	goto	u3911
  7919  0A0C  07C1               	addwf	___flmul@prod+1,f
  7920  0A0D                     u3911:
  7921  0A0D  0836               	movf	??___flmul+2,w
  7922  0A0E  1103               	clrz
  7923  0A0F  1803               	skipnc
  7924  0A10  3E01               	addlw	1
  7925  0A11  1903               	skipnz
  7926  0A12  2A14               	goto	u3912
  7927  0A13  07C2               	addwf	___flmul@prod+2,f
  7928  0A14                     u3912:
  7929  0A14  0837               	movf	??___flmul+3,w
  7930  0A15  1103               	clrz
  7931  0A16  1803               	skipnc
  7932  0A17  3E01               	addlw	1
  7933  0A18  1903               	skipnz
  7934  0A19  2A1B               	goto	u3913
  7935  0A1A  07C3               	addwf	___flmul@prod+3,f
  7936  0A1B                     u3913:
  7937  0A1B  082E               	movf	___flmul@b+2,w
  7938  0A1C  00B4               	movwf	??___flmul
  7939  0A1D  0834               	movf	??___flmul,w
  7940  0A1E  00F5               	movwf	__Umul8_16@multiplicand
  7941  0A1F  0830               	movf	___flmul@a,w
  7942  0A20  160A  118A  20D0  120A  158A  	fcall	__Umul8_16
  7943  0A25  0876               	movf	?__Umul8_16+1,w
  7944  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  7945  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  7946  0A28  00C5               	movwf	___flmul@temp+1
  7947  0A29  0875               	movf	?__Umul8_16,w
  7948  0A2A  00C4               	movwf	___flmul@temp
  7949  0A2B                     l2749:
  7950  0A2B  0844               	movf	___flmul@temp,w
  7951  0A2C  00B4               	movwf	??___flmul
  7952  0A2D  01B5               	clrf	??___flmul+1
  7953  0A2E  01B6               	clrf	??___flmul+2
  7954  0A2F  01B7               	clrf	??___flmul+3
  7955  0A30  0834               	movf	??___flmul,w
  7956  0A31  07BA               	addwf	___flmul@grs,f
  7957  0A32  0835               	movf	??___flmul+1,w
  7958  0A33  1103               	clrz
  7959  0A34  1803               	skipnc
  7960  0A35  3E01               	addlw	1
  7961  0A36  1903               	skipnz
  7962  0A37  2A39               	goto	u3921
  7963  0A38  07BB               	addwf	___flmul@grs+1,f
  7964  0A39                     u3921:
  7965  0A39  0836               	movf	??___flmul+2,w
  7966  0A3A  1103               	clrz
  7967  0A3B  1803               	skipnc
  7968  0A3C  3E01               	addlw	1
  7969  0A3D  1903               	skipnz
  7970  0A3E  2A40               	goto	u3922
  7971  0A3F  07BC               	addwf	___flmul@grs+2,f
  7972  0A40                     u3922:
  7973  0A40  0837               	movf	??___flmul+3,w
  7974  0A41  1103               	clrz
  7975  0A42  1803               	skipnc
  7976  0A43  3E01               	addlw	1
  7977  0A44  1903               	skipnz
  7978  0A45  2A47               	goto	u3923
  7979  0A46  07BD               	addwf	___flmul@grs+3,f
  7980  0A47                     u3923:
  7981  0A47                     l2751:
  7982  0A47  0845               	movf	___flmul@temp+1,w
  7983  0A48  00B4               	movwf	??___flmul
  7984  0A49  01B5               	clrf	??___flmul+1
  7985  0A4A  01B6               	clrf	??___flmul+2
  7986  0A4B  01B7               	clrf	??___flmul+3
  7987  0A4C  0834               	movf	??___flmul,w
  7988  0A4D  07C0               	addwf	___flmul@prod,f
  7989  0A4E  0835               	movf	??___flmul+1,w
  7990  0A4F  1103               	clrz
  7991  0A50  1803               	skipnc
  7992  0A51  3E01               	addlw	1
  7993  0A52  1903               	skipnz
  7994  0A53  2A55               	goto	u3931
  7995  0A54  07C1               	addwf	___flmul@prod+1,f
  7996  0A55                     u3931:
  7997  0A55  0836               	movf	??___flmul+2,w
  7998  0A56  1103               	clrz
  7999  0A57  1803               	skipnc
  8000  0A58  3E01               	addlw	1
  8001  0A59  1903               	skipnz
  8002  0A5A  2A5C               	goto	u3932
  8003  0A5B  07C2               	addwf	___flmul@prod+2,f
  8004  0A5C                     u3932:
  8005  0A5C  0837               	movf	??___flmul+3,w
  8006  0A5D  1103               	clrz
  8007  0A5E  1803               	skipnc
  8008  0A5F  3E01               	addlw	1
  8009  0A60  1903               	skipnz
  8010  0A61  2A63               	goto	u3933
  8011  0A62  07C3               	addwf	___flmul@prod+3,f
  8012  0A63                     u3933:
  8013  0A63                     l2753:
  8014  0A63  3008               	movlw	8
  8015  0A64  00B4               	movwf	??___flmul
  8016  0A65                     u3945:
  8017  0A65  1003               	clrc
  8018  0A66  0DBA               	rlf	___flmul@grs,f
  8019  0A67  0DBB               	rlf	___flmul@grs+1,f
  8020  0A68  0DBC               	rlf	___flmul@grs+2,f
  8021  0A69  0DBD               	rlf	___flmul@grs+3,f
  8022  0A6A  0BB4               	decfsz	??___flmul,f
  8023  0A6B  2A65               	goto	u3945
  8024  0A6C                     l2755:
  8025  0A6C  082D               	movf	___flmul@b+1,w
  8026  0A6D  00B4               	movwf	??___flmul
  8027  0A6E  0834               	movf	??___flmul,w
  8028  0A6F  00F5               	movwf	__Umul8_16@multiplicand
  8029  0A70  0830               	movf	___flmul@a,w
  8030  0A71  160A  118A  20D0  120A  158A  	fcall	__Umul8_16
  8031  0A76  0876               	movf	?__Umul8_16+1,w
  8032  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  8033  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  8034  0A79  00C5               	movwf	___flmul@temp+1
  8035  0A7A  0875               	movf	?__Umul8_16,w
  8036  0A7B  00C4               	movwf	___flmul@temp
  8037  0A7C                     l2757:
  8038  0A7C  0844               	movf	___flmul@temp,w
  8039  0A7D  00B4               	movwf	??___flmul
  8040  0A7E  0845               	movf	___flmul@temp+1,w
  8041  0A7F  00B5               	movwf	??___flmul+1
  8042  0A80  01B6               	clrf	??___flmul+2
  8043  0A81  01B7               	clrf	??___flmul+3
  8044  0A82  0834               	movf	??___flmul,w
  8045  0A83  07BA               	addwf	___flmul@grs,f
  8046  0A84  0835               	movf	??___flmul+1,w
  8047  0A85  1103               	clrz
  8048  0A86  1803               	skipnc
  8049  0A87  3E01               	addlw	1
  8050  0A88  1903               	skipnz
  8051  0A89  2A8B               	goto	u3951
  8052  0A8A  07BB               	addwf	___flmul@grs+1,f
  8053  0A8B                     u3951:
  8054  0A8B  0836               	movf	??___flmul+2,w
  8055  0A8C  1103               	clrz
  8056  0A8D  1803               	skipnc
  8057  0A8E  3E01               	addlw	1
  8058  0A8F  1903               	skipnz
  8059  0A90  2A92               	goto	u3952
  8060  0A91  07BC               	addwf	___flmul@grs+2,f
  8061  0A92                     u3952:
  8062  0A92  0837               	movf	??___flmul+3,w
  8063  0A93  1103               	clrz
  8064  0A94  1803               	skipnc
  8065  0A95  3E01               	addlw	1
  8066  0A96  1903               	skipnz
  8067  0A97  2A99               	goto	u3953
  8068  0A98  07BD               	addwf	___flmul@grs+3,f
  8069  0A99                     u3953:
  8070  0A99                     l2759:
  8071  0A99  082C               	movf	___flmul@b,w
  8072  0A9A  00B4               	movwf	??___flmul
  8073  0A9B  0834               	movf	??___flmul,w
  8074  0A9C  00F5               	movwf	__Umul8_16@multiplicand
  8075  0A9D  0831               	movf	___flmul@a+1,w
  8076  0A9E  160A  118A  20D0  120A  158A  	fcall	__Umul8_16
  8077  0AA3  0876               	movf	?__Umul8_16+1,w
  8078  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  8079  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  8080  0AA6  00C5               	movwf	___flmul@temp+1
  8081  0AA7  0875               	movf	?__Umul8_16,w
  8082  0AA8  00C4               	movwf	___flmul@temp
  8083  0AA9                     l2761:
  8084  0AA9  0844               	movf	___flmul@temp,w
  8085  0AAA  00B4               	movwf	??___flmul
  8086  0AAB  0845               	movf	___flmul@temp+1,w
  8087  0AAC  00B5               	movwf	??___flmul+1
  8088  0AAD  01B6               	clrf	??___flmul+2
  8089  0AAE  01B7               	clrf	??___flmul+3
  8090  0AAF  0834               	movf	??___flmul,w
  8091  0AB0  07BA               	addwf	___flmul@grs,f
  8092  0AB1  0835               	movf	??___flmul+1,w
  8093  0AB2  1103               	clrz
  8094  0AB3  1803               	skipnc
  8095  0AB4  3E01               	addlw	1
  8096  0AB5  1903               	skipnz
  8097  0AB6  2AB8               	goto	u3961
  8098  0AB7  07BB               	addwf	___flmul@grs+1,f
  8099  0AB8                     u3961:
  8100  0AB8  0836               	movf	??___flmul+2,w
  8101  0AB9  1103               	clrz
  8102  0ABA  1803               	skipnc
  8103  0ABB  3E01               	addlw	1
  8104  0ABC  1903               	skipnz
  8105  0ABD  2ABF               	goto	u3962
  8106  0ABE  07BC               	addwf	___flmul@grs+2,f
  8107  0ABF                     u3962:
  8108  0ABF  0837               	movf	??___flmul+3,w
  8109  0AC0  1103               	clrz
  8110  0AC1  1803               	skipnc
  8111  0AC2  3E01               	addlw	1
  8112  0AC3  1903               	skipnz
  8113  0AC4  2AC6               	goto	u3963
  8114  0AC5  07BD               	addwf	___flmul@grs+3,f
  8115  0AC6                     u3963:
  8116  0AC6                     l2763:
  8117  0AC6  3008               	movlw	8
  8118  0AC7  00B4               	movwf	??___flmul
  8119  0AC8                     u3975:
  8120  0AC8  1003               	clrc
  8121  0AC9  0DBA               	rlf	___flmul@grs,f
  8122  0ACA  0DBB               	rlf	___flmul@grs+1,f
  8123  0ACB  0DBC               	rlf	___flmul@grs+2,f
  8124  0ACC  0DBD               	rlf	___flmul@grs+3,f
  8125  0ACD  0BB4               	decfsz	??___flmul,f
  8126  0ACE  2AC8               	goto	u3975
  8127  0ACF  082C               	movf	___flmul@b,w
  8128  0AD0  00B4               	movwf	??___flmul
  8129  0AD1  0834               	movf	??___flmul,w
  8130  0AD2  00F5               	movwf	__Umul8_16@multiplicand
  8131  0AD3  0830               	movf	___flmul@a,w
  8132  0AD4  160A  118A  20D0  120A  158A  	fcall	__Umul8_16
  8133  0AD9  0876               	movf	?__Umul8_16+1,w
  8134  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  8135  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  8136  0ADC  00C5               	movwf	___flmul@temp+1
  8137  0ADD  0875               	movf	?__Umul8_16,w
  8138  0ADE  00C4               	movwf	___flmul@temp
  8139  0ADF                     l2765:
  8140  0ADF  0844               	movf	___flmul@temp,w
  8141  0AE0  00B4               	movwf	??___flmul
  8142  0AE1  0845               	movf	___flmul@temp+1,w
  8143  0AE2  00B5               	movwf	??___flmul+1
  8144  0AE3  01B6               	clrf	??___flmul+2
  8145  0AE4  01B7               	clrf	??___flmul+3
  8146  0AE5  0834               	movf	??___flmul,w
  8147  0AE6  07BA               	addwf	___flmul@grs,f
  8148  0AE7  0835               	movf	??___flmul+1,w
  8149  0AE8  1103               	clrz
  8150  0AE9  1803               	skipnc
  8151  0AEA  3E01               	addlw	1
  8152  0AEB  1903               	skipnz
  8153  0AEC  2AEE               	goto	u3981
  8154  0AED  07BB               	addwf	___flmul@grs+1,f
  8155  0AEE                     u3981:
  8156  0AEE  0836               	movf	??___flmul+2,w
  8157  0AEF  1103               	clrz
  8158  0AF0  1803               	skipnc
  8159  0AF1  3E01               	addlw	1
  8160  0AF2  1903               	skipnz
  8161  0AF3  2AF5               	goto	u3982
  8162  0AF4  07BC               	addwf	___flmul@grs+2,f
  8163  0AF5                     u3982:
  8164  0AF5  0837               	movf	??___flmul+3,w
  8165  0AF6  1103               	clrz
  8166  0AF7  1803               	skipnc
  8167  0AF8  3E01               	addlw	1
  8168  0AF9  1903               	skipnz
  8169  0AFA  2AFC               	goto	u3983
  8170  0AFB  07BD               	addwf	___flmul@grs+3,f
  8171  0AFC                     u3983:
  8172  0AFC                     l2767:
  8173  0AFC  082D               	movf	___flmul@b+1,w
  8174  0AFD  00B4               	movwf	??___flmul
  8175  0AFE  0834               	movf	??___flmul,w
  8176  0AFF  00F5               	movwf	__Umul8_16@multiplicand
  8177  0B00  0832               	movf	___flmul@a+2,w
  8178  0B01  160A  118A  20D0  120A  158A  	fcall	__Umul8_16
  8179  0B06  0876               	movf	?__Umul8_16+1,w
  8180  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  8181  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  8182  0B09  00C5               	movwf	___flmul@temp+1
  8183  0B0A  0875               	movf	?__Umul8_16,w
  8184  0B0B  00C4               	movwf	___flmul@temp
  8185  0B0C  0844               	movf	___flmul@temp,w
  8186  0B0D  00B4               	movwf	??___flmul
  8187  0B0E  0845               	movf	___flmul@temp+1,w
  8188  0B0F  00B5               	movwf	??___flmul+1
  8189  0B10  01B6               	clrf	??___flmul+2
  8190  0B11  01B7               	clrf	??___flmul+3
  8191  0B12  0834               	movf	??___flmul,w
  8192  0B13  07C0               	addwf	___flmul@prod,f
  8193  0B14  0835               	movf	??___flmul+1,w
  8194  0B15  1103               	clrz
  8195  0B16  1803               	skipnc
  8196  0B17  3E01               	addlw	1
  8197  0B18  1903               	skipnz
  8198  0B19  2B1B               	goto	u3991
  8199  0B1A  07C1               	addwf	___flmul@prod+1,f
  8200  0B1B                     u3991:
  8201  0B1B  0836               	movf	??___flmul+2,w
  8202  0B1C  1103               	clrz
  8203  0B1D  1803               	skipnc
  8204  0B1E  3E01               	addlw	1
  8205  0B1F  1903               	skipnz
  8206  0B20  2B22               	goto	u3992
  8207  0B21  07C2               	addwf	___flmul@prod+2,f
  8208  0B22                     u3992:
  8209  0B22  0837               	movf	??___flmul+3,w
  8210  0B23  1103               	clrz
  8211  0B24  1803               	skipnc
  8212  0B25  3E01               	addlw	1
  8213  0B26  1903               	skipnz
  8214  0B27  2B29               	goto	u3993
  8215  0B28  07C3               	addwf	___flmul@prod+3,f
  8216  0B29                     u3993:
  8217  0B29                     l2769:
  8218  0B29  082E               	movf	___flmul@b+2,w
  8219  0B2A  00B4               	movwf	??___flmul
  8220  0B2B  0834               	movf	??___flmul,w
  8221  0B2C  00F5               	movwf	__Umul8_16@multiplicand
  8222  0B2D  0831               	movf	___flmul@a+1,w
  8223  0B2E  160A  118A  20D0  120A  158A  	fcall	__Umul8_16
  8224  0B33  0876               	movf	?__Umul8_16+1,w
  8225  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  8226  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  8227  0B36  00C5               	movwf	___flmul@temp+1
  8228  0B37  0875               	movf	?__Umul8_16,w
  8229  0B38  00C4               	movwf	___flmul@temp
  8230  0B39                     l2771:
  8231  0B39  0844               	movf	___flmul@temp,w
  8232  0B3A  00B4               	movwf	??___flmul
  8233  0B3B  0845               	movf	___flmul@temp+1,w
  8234  0B3C  00B5               	movwf	??___flmul+1
  8235  0B3D  01B6               	clrf	??___flmul+2
  8236  0B3E  01B7               	clrf	??___flmul+3
  8237  0B3F  0834               	movf	??___flmul,w
  8238  0B40  07C0               	addwf	___flmul@prod,f
  8239  0B41  0835               	movf	??___flmul+1,w
  8240  0B42  1103               	clrz
  8241  0B43  1803               	skipnc
  8242  0B44  3E01               	addlw	1
  8243  0B45  1903               	skipnz
  8244  0B46  2B48               	goto	u4001
  8245  0B47  07C1               	addwf	___flmul@prod+1,f
  8246  0B48                     u4001:
  8247  0B48  0836               	movf	??___flmul+2,w
  8248  0B49  1103               	clrz
  8249  0B4A  1803               	skipnc
  8250  0B4B  3E01               	addlw	1
  8251  0B4C  1903               	skipnz
  8252  0B4D  2B4F               	goto	u4002
  8253  0B4E  07C2               	addwf	___flmul@prod+2,f
  8254  0B4F                     u4002:
  8255  0B4F  0837               	movf	??___flmul+3,w
  8256  0B50  1103               	clrz
  8257  0B51  1803               	skipnc
  8258  0B52  3E01               	addlw	1
  8259  0B53  1903               	skipnz
  8260  0B54  2B56               	goto	u4003
  8261  0B55  07C3               	addwf	___flmul@prod+3,f
  8262  0B56                     u4003:
  8263  0B56  082E               	movf	___flmul@b+2,w
  8264  0B57  00B4               	movwf	??___flmul
  8265  0B58  0834               	movf	??___flmul,w
  8266  0B59  00F5               	movwf	__Umul8_16@multiplicand
  8267  0B5A  0832               	movf	___flmul@a+2,w
  8268  0B5B  160A  118A  20D0  120A  158A  	fcall	__Umul8_16
  8269  0B60  0876               	movf	?__Umul8_16+1,w
  8270  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8271  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8272  0B63  00C5               	movwf	___flmul@temp+1
  8273  0B64  0875               	movf	?__Umul8_16,w
  8274  0B65  00C4               	movwf	___flmul@temp
  8275  0B66                     l2773:
  8276  0B66  0844               	movf	___flmul@temp,w
  8277  0B67  00B4               	movwf	??___flmul
  8278  0B68  0845               	movf	___flmul@temp+1,w
  8279  0B69  00B5               	movwf	??___flmul+1
  8280  0B6A  01B6               	clrf	??___flmul+2
  8281  0B6B  01B7               	clrf	??___flmul+3
  8282  0B6C  3008               	movlw	8
  8283  0B6D                     u4015:
  8284  0B6D  1003               	clrc
  8285  0B6E  0DB4               	rlf	??___flmul,f
  8286  0B6F  0DB5               	rlf	??___flmul+1,f
  8287  0B70  0DB6               	rlf	??___flmul+2,f
  8288  0B71  0DB7               	rlf	??___flmul+3,f
  8289  0B72                     u4010:
  8290  0B72  3EFF               	addlw	-1
  8291  0B73  1D03               	skipz
  8292  0B74  2B6D               	goto	u4015
  8293  0B75  0834               	movf	??___flmul,w
  8294  0B76  07C0               	addwf	___flmul@prod,f
  8295  0B77  0835               	movf	??___flmul+1,w
  8296  0B78  1103               	clrz
  8297  0B79  1803               	skipnc
  8298  0B7A  3E01               	addlw	1
  8299  0B7B  1903               	skipnz
  8300  0B7C  2B7E               	goto	u4021
  8301  0B7D  07C1               	addwf	___flmul@prod+1,f
  8302  0B7E                     u4021:
  8303  0B7E  0836               	movf	??___flmul+2,w
  8304  0B7F  1103               	clrz
  8305  0B80  1803               	skipnc
  8306  0B81  3E01               	addlw	1
  8307  0B82  1903               	skipnz
  8308  0B83  2B85               	goto	u4022
  8309  0B84  07C2               	addwf	___flmul@prod+2,f
  8310  0B85                     u4022:
  8311  0B85  0837               	movf	??___flmul+3,w
  8312  0B86  1103               	clrz
  8313  0B87  1803               	skipnc
  8314  0B88  3E01               	addlw	1
  8315  0B89  1903               	skipnz
  8316  0B8A  2B8C               	goto	u4023
  8317  0B8B  07C3               	addwf	___flmul@prod+3,f
  8318  0B8C                     u4023:
  8319  0B8C                     l2775:
  8320  0B8C  083A               	movf	___flmul@grs,w
  8321  0B8D  00B4               	movwf	??___flmul
  8322  0B8E  083B               	movf	___flmul@grs+1,w
  8323  0B8F  00B5               	movwf	??___flmul+1
  8324  0B90  083C               	movf	___flmul@grs+2,w
  8325  0B91  00B6               	movwf	??___flmul+2
  8326  0B92  083D               	movf	___flmul@grs+3,w
  8327  0B93  00B7               	movwf	??___flmul+3
  8328  0B94  3018               	movlw	24
  8329  0B95                     u4035:
  8330  0B95  1003               	clrc
  8331  0B96  0CB7               	rrf	??___flmul+3,f
  8332  0B97  0CB6               	rrf	??___flmul+2,f
  8333  0B98  0CB5               	rrf	??___flmul+1,f
  8334  0B99  0CB4               	rrf	??___flmul,f
  8335  0B9A                     u4030:
  8336  0B9A  3EFF               	addlw	-1
  8337  0B9B  1D03               	skipz
  8338  0B9C  2B95               	goto	u4035
  8339  0B9D  0834               	movf	??___flmul,w
  8340  0B9E  07C0               	addwf	___flmul@prod,f
  8341  0B9F  0835               	movf	??___flmul+1,w
  8342  0BA0  1103               	clrz
  8343  0BA1  1803               	skipnc
  8344  0BA2  3E01               	addlw	1
  8345  0BA3  1903               	skipnz
  8346  0BA4  2BA6               	goto	u4041
  8347  0BA5  07C1               	addwf	___flmul@prod+1,f
  8348  0BA6                     u4041:
  8349  0BA6  0836               	movf	??___flmul+2,w
  8350  0BA7  1103               	clrz
  8351  0BA8  1803               	skipnc
  8352  0BA9  3E01               	addlw	1
  8353  0BAA  1903               	skipnz
  8354  0BAB  2BAD               	goto	u4042
  8355  0BAC  07C2               	addwf	___flmul@prod+2,f
  8356  0BAD                     u4042:
  8357  0BAD  0837               	movf	??___flmul+3,w
  8358  0BAE  1103               	clrz
  8359  0BAF  1803               	skipnc
  8360  0BB0  3E01               	addlw	1
  8361  0BB1  1903               	skipnz
  8362  0BB2  2BB4               	goto	u4043
  8363  0BB3  07C3               	addwf	___flmul@prod+3,f
  8364  0BB4                     u4043:
  8365  0BB4                     l2777:
  8366  0BB4  3008               	movlw	8
  8367  0BB5  00B4               	movwf	??___flmul
  8368  0BB6                     u4055:
  8369  0BB6  1003               	clrc
  8370  0BB7  0DBA               	rlf	___flmul@grs,f
  8371  0BB8  0DBB               	rlf	___flmul@grs+1,f
  8372  0BB9  0DBC               	rlf	___flmul@grs+2,f
  8373  0BBA  0DBD               	rlf	___flmul@grs+3,f
  8374  0BBB  0BB4               	decfsz	??___flmul,f
  8375  0BBC  2BB6               	goto	u4055
  8376  0BBD                     l2779:
  8377  0BBD  083F               	movf	___flmul@bexp,w
  8378  0BBE  073E               	addwf	___flmul@aexp,w
  8379  0BBF  00B4               	movwf	??___flmul
  8380  0BC0  01B5               	clrf	??___flmul+1
  8381  0BC1  0DB5               	rlf	??___flmul+1,f
  8382  0BC2  0834               	movf	??___flmul,w
  8383  0BC3  3E82               	addlw	130
  8384  0BC4  00C4               	movwf	___flmul@temp
  8385  0BC5  0835               	movf	??___flmul+1,w
  8386  0BC6  1803               	skipnc
  8387  0BC7  3E01               	addlw	1
  8388  0BC8  3EFF               	addlw	255
  8389  0BC9  00C5               	movwf	___flmul@temp+1
  8390  0BCA  2BE8               	goto	l2791
  8391  0BCB                     l2781:
  8392  0BCB  3001               	movlw	1
  8393  0BCC  00B4               	movwf	??___flmul
  8394  0BCD                     u4065:
  8395  0BCD  1003               	clrc
  8396  0BCE  0DC0               	rlf	___flmul@prod,f
  8397  0BCF  0DC1               	rlf	___flmul@prod+1,f
  8398  0BD0  0DC2               	rlf	___flmul@prod+2,f
  8399  0BD1  0DC3               	rlf	___flmul@prod+3,f
  8400  0BD2  0BB4               	decfsz	??___flmul,f
  8401  0BD3  2BCD               	goto	u4065
  8402  0BD4                     l2783:
  8403  0BD4  1FBD               	btfss	___flmul@grs+3,7
  8404  0BD5  2BD7               	goto	u4071
  8405  0BD6  2BD8               	goto	u4070
  8406  0BD7                     u4071:
  8407  0BD7  2BD9               	goto	l2787
  8408  0BD8                     u4070:
  8409  0BD8                     l2785:
  8410  0BD8  1440               	bsf	___flmul@prod,0
  8411  0BD9                     l2787:
  8412  0BD9  3001               	movlw	1
  8413  0BDA  00B4               	movwf	??___flmul
  8414  0BDB                     u4085:
  8415  0BDB  1003               	clrc
  8416  0BDC  0DBA               	rlf	___flmul@grs,f
  8417  0BDD  0DBB               	rlf	___flmul@grs+1,f
  8418  0BDE  0DBC               	rlf	___flmul@grs+2,f
  8419  0BDF  0DBD               	rlf	___flmul@grs+3,f
  8420  0BE0  0BB4               	decfsz	??___flmul,f
  8421  0BE1  2BDB               	goto	u4085
  8422  0BE2                     l2789:
  8423  0BE2  30FF               	movlw	255
  8424  0BE3  07C4               	addwf	___flmul@temp,f
  8425  0BE4  1803               	skipnc
  8426  0BE5  0AC5               	incf	___flmul@temp+1,f
  8427  0BE6  30FF               	movlw	255
  8428  0BE7  07C5               	addwf	___flmul@temp+1,f
  8429  0BE8                     l2791:
  8430  0BE8  1FC2               	btfss	___flmul@prod+2,7
  8431  0BE9  2BEB               	goto	u4091
  8432  0BEA  2BEC               	goto	u4090
  8433  0BEB                     u4091:
  8434  0BEB  2BCB               	goto	l2781
  8435  0BEC                     u4090:
  8436  0BEC                     l2793:
  8437  0BEC  01BE               	clrf	___flmul@aexp
  8438  0BED                     l2795:
  8439  0BED  1FBD               	btfss	___flmul@grs+3,7
  8440  0BEE  2BF0               	goto	u4101
  8441  0BEF  2BF1               	goto	u4100
  8442  0BF0                     u4101:
  8443  0BF0  2C0D               	goto	l2803
  8444  0BF1                     u4100:
  8445  0BF1                     l2797:
  8446  0BF1  30FF               	movlw	255
  8447  0BF2  053A               	andwf	___flmul@grs,w
  8448  0BF3  00B4               	movwf	??___flmul
  8449  0BF4  30FF               	movlw	255
  8450  0BF5  053B               	andwf	___flmul@grs+1,w
  8451  0BF6  00B5               	movwf	??___flmul+1
  8452  0BF7  30FF               	movlw	255
  8453  0BF8  053C               	andwf	___flmul@grs+2,w
  8454  0BF9  00B6               	movwf	??___flmul+2
  8455  0BFA  307F               	movlw	127
  8456  0BFB  053D               	andwf	___flmul@grs+3,w
  8457  0BFC  00B7               	movwf	??___flmul+3
  8458  0BFD  0837               	movf	??___flmul+3,w
  8459  0BFE  0436               	iorwf	??___flmul+2,w
  8460  0BFF  0435               	iorwf	??___flmul+1,w
  8461  0C00  0434               	iorwf	??___flmul,w
  8462  0C01  1903               	skipnz
  8463  0C02  2C04               	goto	u4111
  8464  0C03  2C05               	goto	u4110
  8465  0C04                     u4111:
  8466  0C04  2C08               	goto	l853
  8467  0C05                     u4110:
  8468  0C05                     l2799:
  8469  0C05  01BE               	clrf	___flmul@aexp
  8470  0C06  0ABE               	incf	___flmul@aexp,f
  8471  0C07  2C0D               	goto	l2803
  8472  0C08                     l853:
  8473  0C08  1C40               	btfss	___flmul@prod,0
  8474  0C09  2C0B               	goto	u4121
  8475  0C0A  2C0C               	goto	u4120
  8476  0C0B                     u4121:
  8477  0C0B  2C0D               	goto	l2803
  8478  0C0C                     u4120:
  8479  0C0C  2C05               	goto	l2799
  8480  0C0D                     l2803:
  8481  0C0D  083E               	movf	___flmul@aexp,w
  8482  0C0E  1903               	btfsc	3,2
  8483  0C0F  2C11               	goto	u4131
  8484  0C10  2C12               	goto	u4130
  8485  0C11                     u4131:
  8486  0C11  2C43               	goto	l2813
  8487  0C12                     u4130:
  8488  0C12                     l2805:
  8489  0C12  3001               	movlw	1
  8490  0C13  07C0               	addwf	___flmul@prod,f
  8491  0C14  3000               	movlw	0
  8492  0C15  1803               	skipnc
  8493  0C16  3001               	movlw	1
  8494  0C17  07C1               	addwf	___flmul@prod+1,f
  8495  0C18  3000               	movlw	0
  8496  0C19  1803               	skipnc
  8497  0C1A  3001               	movlw	1
  8498  0C1B  07C2               	addwf	___flmul@prod+2,f
  8499  0C1C  3000               	movlw	0
  8500  0C1D  1803               	skipnc
  8501  0C1E  3001               	movlw	1
  8502  0C1F  07C3               	addwf	___flmul@prod+3,f
  8503  0C20                     l2807:
  8504  0C20  1C43               	btfss	___flmul@prod+3,0
  8505  0C21  2C23               	goto	u4141
  8506  0C22  2C24               	goto	u4140
  8507  0C23                     u4141:
  8508  0C23  2C43               	goto	l2813
  8509  0C24                     u4140:
  8510  0C24                     l2809:
  8511  0C24  0840               	movf	___flmul@prod,w
  8512  0C25  00B4               	movwf	??___flmul
  8513  0C26  0841               	movf	___flmul@prod+1,w
  8514  0C27  00B5               	movwf	??___flmul+1
  8515  0C28  0842               	movf	___flmul@prod+2,w
  8516  0C29  00B6               	movwf	??___flmul+2
  8517  0C2A  0843               	movf	___flmul@prod+3,w
  8518  0C2B  00B7               	movwf	??___flmul+3
  8519  0C2C  3001               	movlw	1
  8520  0C2D  00B8               	movwf	??___flmul+4
  8521  0C2E                     u4155:
  8522  0C2E  0D37               	rlf	??___flmul+3,w
  8523  0C2F  0CB7               	rrf	??___flmul+3,f
  8524  0C30  0CB6               	rrf	??___flmul+2,f
  8525  0C31  0CB5               	rrf	??___flmul+1,f
  8526  0C32  0CB4               	rrf	??___flmul,f
  8527  0C33                     u4150:
  8528  0C33  0BB8               	decfsz	??___flmul+4,f
  8529  0C34  2C2E               	goto	u4155
  8530  0C35  0837               	movf	??___flmul+3,w
  8531  0C36  00C3               	movwf	___flmul@prod+3
  8532  0C37  0836               	movf	??___flmul+2,w
  8533  0C38  00C2               	movwf	___flmul@prod+2
  8534  0C39  0835               	movf	??___flmul+1,w
  8535  0C3A  00C1               	movwf	___flmul@prod+1
  8536  0C3B  0834               	movf	??___flmul,w
  8537  0C3C  00C0               	movwf	___flmul@prod
  8538  0C3D                     l2811:
  8539  0C3D  3001               	movlw	1
  8540  0C3E  07C4               	addwf	___flmul@temp,f
  8541  0C3F  1803               	skipnc
  8542  0C40  0AC5               	incf	___flmul@temp+1,f
  8543  0C41  3000               	movlw	0
  8544  0C42  07C5               	addwf	___flmul@temp+1,f
  8545  0C43                     l2813:
  8546  0C43  0845               	movf	___flmul@temp+1,w
  8547  0C44  3A80               	xorlw	128
  8548  0C45  00FF               	movwf	btemp+1
  8549  0C46  3080               	movlw	128
  8550  0C47  027F               	subwf	btemp+1,w
  8551  0C48  1D03               	skipz
  8552  0C49  2C4C               	goto	u4165
  8553  0C4A  30FF               	movlw	255
  8554  0C4B  0244               	subwf	___flmul@temp,w
  8555  0C4C                     u4165:
  8556  0C4C  1C03               	skipc
  8557  0C4D  2C4F               	goto	u4161
  8558  0C4E  2C50               	goto	u4160
  8559  0C4F                     u4161:
  8560  0C4F  2C5B               	goto	l2817
  8561  0C50                     u4160:
  8562  0C50                     l2815:
  8563  0C50  307F               	movlw	127
  8564  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  8565  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  8566  0C53  00C3               	movwf	___flmul@prod+3
  8567  0C54  3080               	movlw	128
  8568  0C55  00C2               	movwf	___flmul@prod+2
  8569  0C56  3000               	movlw	0
  8570  0C57  00C1               	movwf	___flmul@prod+1
  8571  0C58  3000               	movlw	0
  8572  0C59  00C0               	movwf	___flmul@prod
  8573  0C5A  2C90               	goto	l859
  8574  0C5B                     l2817:
  8575  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  8576  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  8577  0C5D  0845               	movf	___flmul@temp+1,w
  8578  0C5E  3A80               	xorlw	128
  8579  0C5F  00FF               	movwf	btemp+1
  8580  0C60  3080               	movlw	128
  8581  0C61  027F               	subwf	btemp+1,w
  8582  0C62  1D03               	skipz
  8583  0C63  2C66               	goto	u4175
  8584  0C64  3001               	movlw	1
  8585  0C65  0244               	subwf	___flmul@temp,w
  8586  0C66                     u4175:
  8587  0C66  1803               	skipnc
  8588  0C67  2C69               	goto	u4171
  8589  0C68  2C6A               	goto	u4170
  8590  0C69                     u4171:
  8591  0C69  2C76               	goto	l2823
  8592  0C6A                     u4170:
  8593  0C6A                     l2819:
  8594  0C6A  3000               	movlw	0
  8595  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8596  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  8597  0C6D  00C3               	movwf	___flmul@prod+3
  8598  0C6E  3000               	movlw	0
  8599  0C6F  00C2               	movwf	___flmul@prod+2
  8600  0C70  3000               	movlw	0
  8601  0C71  00C1               	movwf	___flmul@prod+1
  8602  0C72  3000               	movlw	0
  8603  0C73  00C0               	movwf	___flmul@prod
  8604  0C74                     l2821:
  8605  0C74  01B9               	clrf	___flmul@sign
  8606  0C75  2C90               	goto	l859
  8607  0C76                     l2823:
  8608  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8609  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  8610  0C78  0844               	movf	___flmul@temp,w
  8611  0C79  00B4               	movwf	??___flmul
  8612  0C7A  0834               	movf	??___flmul,w
  8613  0C7B  00BF               	movwf	___flmul@bexp
  8614  0C7C  30FF               	movlw	255
  8615  0C7D  05C0               	andwf	___flmul@prod,f
  8616  0C7E  30FF               	movlw	255
  8617  0C7F  05C1               	andwf	___flmul@prod+1,f
  8618  0C80  307F               	movlw	127
  8619  0C81  05C2               	andwf	___flmul@prod+2,f
  8620  0C82  3000               	movlw	0
  8621  0C83  05C3               	andwf	___flmul@prod+3,f
  8622  0C84                     l2825:
  8623  0C84  1C3F               	btfss	___flmul@bexp,0
  8624  0C85  2C87               	goto	u4181
  8625  0C86  2C88               	goto	u4180
  8626  0C87                     u4181:
  8627  0C87  2C89               	goto	l2829
  8628  0C88                     u4180:
  8629  0C88                     l2827:
  8630  0C88  17C2               	bsf	___flmul@prod+2,7
  8631  0C89                     l2829:
  8632  0C89  083F               	movf	___flmul@bexp,w
  8633  0C8A  00B4               	movwf	??___flmul
  8634  0C8B  1003               	clrc
  8635  0C8C  0C34               	rrf	??___flmul,w
  8636  0C8D  00B5               	movwf	??___flmul+1
  8637  0C8E  0835               	movf	??___flmul+1,w
  8638  0C8F  00C3               	movwf	___flmul@prod+3
  8639  0C90                     l859:
  8640  0C90  0839               	movf	___flmul@sign,w
  8641  0C91  00B4               	movwf	??___flmul
  8642  0C92  0834               	movf	??___flmul,w
  8643  0C93  04C3               	iorwf	___flmul@prod+3,f
  8644  0C94                     l2831:
  8645  0C94  0843               	movf	___flmul@prod+3,w
  8646  0C95  00AF               	movwf	?___flmul+3
  8647  0C96  0842               	movf	___flmul@prod+2,w
  8648  0C97  00AE               	movwf	?___flmul+2
  8649  0C98  0841               	movf	___flmul@prod+1,w
  8650  0C99  00AD               	movwf	?___flmul+1
  8651  0C9A  0840               	movf	___flmul@prod,w
  8652  0C9B  00AC               	movwf	?___flmul
  8653  0C9C                     l847:
  8654  0C9C  0008               	return
  8655  0C9D                     __end_of___flmul:
  8656                           
  8657                           	psect	text25
  8658  10D0                     __ptext25:	
  8659 ;; *************** function __Umul8_16 *****************
  8660 ;; Defined at:
  8661 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  8662 ;; Parameters:    Size  Location     Type
  8663 ;;  multiplier      1    wreg     unsigned char 
  8664 ;;  multiplicand    1    5[COMMON] unsigned char 
  8665 ;; Auto vars:     Size  Location     Type
  8666 ;;  multiplier      1    4[BANK0 ] unsigned char 
  8667 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  8668 ;;  product         2    0[BANK0 ] unsigned int 
  8669 ;; Return value:  Size  Location     Type
  8670 ;;                  2    5[COMMON] unsigned int 
  8671 ;; Registers used:
  8672 ;;		wreg, status,2, status,0
  8673 ;; Tracked objects:
  8674 ;;		On entry : 0/0
  8675 ;;		On exit  : 0/0
  8676 ;;		Unchanged: 0/0
  8677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8678 ;;      Params:         2       0       0       0       0
  8679 ;;      Locals:         0       5       0       0       0
  8680 ;;      Temps:          2       0       0       0       0
  8681 ;;      Totals:         4       5       0       0       0
  8682 ;;Total ram usage:        9 bytes
  8683 ;; Hardware stack levels used:    1
  8684 ;; Hardware stack levels required when called:    2
  8685 ;; This function calls:
  8686 ;;		Nothing
  8687 ;; This function is called by:
  8688 ;;		___flmul
  8689 ;; This function uses a non-reentrant model
  8690 ;;
  8691                           
  8692                           
  8693                           ;psect for function __Umul8_16
  8694  10D0                     __Umul8_16:
  8695                           
  8696                           ;incstack = 0
  8697                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8698                           ;__Umul8_16@multiplier stored from wreg
  8699  10D0  1283               	bcf	3,5	;RP0=0, select bank0
  8700  10D1  1303               	bcf	3,6	;RP1=0, select bank0
  8701  10D2  00A4               	movwf	__Umul8_16@multiplier
  8702  10D3                     l2339:
  8703  10D3  01A0               	clrf	__Umul8_16@product
  8704  10D4  01A1               	clrf	__Umul8_16@product+1
  8705  10D5                     l2341:
  8706  10D5  0875               	movf	__Umul8_16@multiplicand,w
  8707  10D6  00F7               	movwf	??__Umul8_16
  8708  10D7  01F8               	clrf	??__Umul8_16+1
  8709  10D8  0877               	movf	??__Umul8_16,w
  8710  10D9  00A2               	movwf	__Umul8_16@word_mpld
  8711  10DA  0878               	movf	??__Umul8_16+1,w
  8712  10DB  00A3               	movwf	__Umul8_16@word_mpld+1
  8713  10DC                     l2343:
  8714  10DC  1C24               	btfss	__Umul8_16@multiplier,0
  8715  10DD  28DF               	goto	u2931
  8716  10DE  28E0               	goto	u2930
  8717  10DF                     u2931:
  8718  10DF  28E6               	goto	l866
  8719  10E0                     u2930:
  8720  10E0                     l2345:
  8721  10E0  0822               	movf	__Umul8_16@word_mpld,w
  8722  10E1  07A0               	addwf	__Umul8_16@product,f
  8723  10E2  1803               	skipnc
  8724  10E3  0AA1               	incf	__Umul8_16@product+1,f
  8725  10E4  0823               	movf	__Umul8_16@word_mpld+1,w
  8726  10E5  07A1               	addwf	__Umul8_16@product+1,f
  8727  10E6                     l866:
  8728  10E6  3001               	movlw	1
  8729  10E7                     u2945:
  8730  10E7  1003               	clrc
  8731  10E8  0DA2               	rlf	__Umul8_16@word_mpld,f
  8732  10E9  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  8733  10EA  3EFF               	addlw	-1
  8734  10EB  1D03               	skipz
  8735  10EC  28E7               	goto	u2945
  8736  10ED  1003               	clrc
  8737  10EE  0CA4               	rrf	__Umul8_16@multiplier,f
  8738  10EF                     l2347:
  8739  10EF  0824               	movf	__Umul8_16@multiplier,w
  8740  10F0  1D03               	btfss	3,2
  8741  10F1  28F3               	goto	u2951
  8742  10F2  28F4               	goto	u2950
  8743  10F3                     u2951:
  8744  10F3  28DC               	goto	l2343
  8745  10F4                     u2950:
  8746  10F4                     l2349:
  8747  10F4  0821               	movf	__Umul8_16@product+1,w
  8748  10F5  00F6               	movwf	?__Umul8_16+1
  8749  10F6  0820               	movf	__Umul8_16@product,w
  8750  10F7  00F5               	movwf	?__Umul8_16
  8751  10F8                     l868:
  8752  10F8  0008               	return
  8753  10F9                     __end_of__Umul8_16:
  8754                           
  8755                           	psect	text26
  8756  197A                     __ptext26:	
  8757 ;; *************** function _cfg_usart *****************
  8758 ;; Defined at:
  8759 ;;		line 205 in file "main.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;		None
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;		None
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  1    wreg      void 
  8766 ;; Registers used:
  8767 ;;		wreg, status,2
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8773 ;;      Params:         0       0       0       0       0
  8774 ;;      Locals:         0       0       0       0       0
  8775 ;;      Temps:          0       0       0       0       0
  8776 ;;      Totals:         0       0       0       0       0
  8777 ;;Total ram usage:        0 bytes
  8778 ;; Hardware stack levels used:    1
  8779 ;; Hardware stack levels required when called:    2
  8780 ;; This function calls:
  8781 ;;		Nothing
  8782 ;; This function is called by:
  8783 ;;		_main
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           
  8788                           ;psect for function _cfg_usart
  8789  197A                     _cfg_usart:
  8790  197A                     l3253:	
  8791                           ;incstack = 0
  8792                           ; Regs used in _cfg_usart: [wreg+status,2]
  8793                           
  8794                           
  8795                           ;main.c: 207:     TXSTAbits.SYNC = 0;
  8796  197A  1683               	bsf	3,5	;RP0=1, select bank1
  8797  197B  1303               	bcf	3,6	;RP1=0, select bank1
  8798  197C  1218               	bcf	24,4	;volatile
  8799                           
  8800                           ;main.c: 208:     TXSTAbits.BRGH = 1;
  8801  197D  1518               	bsf	24,2	;volatile
  8802                           
  8803                           ;main.c: 210:     BAUDCTLbits.BRG16 = 1;
  8804  197E  1683               	bsf	3,5	;RP0=1, select bank3
  8805  197F  1703               	bsf	3,6	;RP1=1, select bank3
  8806  1980  1587               	bsf	7,3	;volatile
  8807  1981                     l3255:
  8808                           
  8809                           ;main.c: 212:     SPBRG = 25;
  8810  1981  3019               	movlw	25
  8811  1982  1683               	bsf	3,5	;RP0=1, select bank1
  8812  1983  1303               	bcf	3,6	;RP1=0, select bank1
  8813  1984  0099               	movwf	25	;volatile
  8814  1985                     l3257:
  8815                           
  8816                           ;main.c: 213:     SPBRGH = 0;
  8817  1985  019A               	clrf	26	;volatile
  8818  1986                     l3259:
  8819                           
  8820                           ;main.c: 215:     RCSTAbits.SPEN = 1;
  8821  1986  1283               	bcf	3,5	;RP0=0, select bank0
  8822  1987  1303               	bcf	3,6	;RP1=0, select bank0
  8823  1988  1798               	bsf	24,7	;volatile
  8824  1989                     l3261:
  8825                           
  8826                           ;main.c: 216:     RCSTAbits.RX9 = 0;
  8827  1989  1318               	bcf	24,6	;volatile
  8828  198A                     l3263:
  8829                           
  8830                           ;main.c: 217:     RCSTAbits.CREN = 1;
  8831  198A  1618               	bsf	24,4	;volatile
  8832  198B                     l3265:
  8833                           
  8834                           ;main.c: 219:     TXSTAbits.TXEN = 1;
  8835  198B  1683               	bsf	3,5	;RP0=1, select bank1
  8836  198C  1303               	bcf	3,6	;RP1=0, select bank1
  8837  198D  1698               	bsf	24,5	;volatile
  8838  198E                     l134:
  8839  198E  0008               	return
  8840  198F                     __end_of_cfg_usart:
  8841                           
  8842                           	psect	text27
  8843  1956                     __ptext27:	
  8844 ;; *************** function _cfg_io *****************
  8845 ;; Defined at:
  8846 ;;		line 175 in file "main.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;		None
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;		None
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  1    wreg      void 
  8853 ;; Registers used:
  8854 ;;		wreg, status,2
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8860 ;;      Params:         0       0       0       0       0
  8861 ;;      Locals:         0       0       0       0       0
  8862 ;;      Temps:          0       0       0       0       0
  8863 ;;      Totals:         0       0       0       0       0
  8864 ;;Total ram usage:        0 bytes
  8865 ;; Hardware stack levels used:    1
  8866 ;; Hardware stack levels required when called:    2
  8867 ;; This function calls:
  8868 ;;		Nothing
  8869 ;; This function is called by:
  8870 ;;		_main
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           
  8875                           ;psect for function _cfg_io
  8876  1956                     _cfg_io:
  8877  1956                     l3227:	
  8878                           ;incstack = 0
  8879                           ; Regs used in _cfg_io: [wreg+status,2]
  8880                           
  8881                           
  8882                           ;main.c: 176:     ANSELH = 0x00;
  8883  1956  1683               	bsf	3,5	;RP0=1, select bank3
  8884  1957  1703               	bsf	3,6	;RP1=1, select bank3
  8885  1958  0189               	clrf	9	;volatile
  8886  1959                     l3229:
  8887                           
  8888                           ;main.c: 177:     ANSEL = 0x20;
  8889  1959  3020               	movlw	32
  8890  195A  0088               	movwf	8	;volatile
  8891  195B                     l3231:
  8892                           
  8893                           ;main.c: 179:     TRISB = 0x03;
  8894  195B  3003               	movlw	3
  8895  195C  1683               	bsf	3,5	;RP0=1, select bank1
  8896  195D  1303               	bcf	3,6	;RP1=0, select bank1
  8897  195E  0086               	movwf	6	;volatile
  8898                           
  8899                           ;main.c: 180:     TRISC = 0x00;
  8900  195F  0187               	clrf	7	;volatile
  8901                           
  8902                           ;main.c: 181:     TRISA = 0X00;
  8903  1960  0185               	clrf	5	;volatile
  8904                           
  8905                           ;main.c: 182:     TRISD = 0X00;
  8906  1961  0188               	clrf	8	;volatile
  8907  1962                     l3233:
  8908                           
  8909                           ;main.c: 183:     TRISE = 0x03;
  8910  1962  3003               	movlw	3
  8911  1963  0089               	movwf	9	;volatile
  8912  1964                     l3235:
  8913                           
  8914                           ;main.c: 184:     PORTA = 0X00;
  8915  1964  1283               	bcf	3,5	;RP0=0, select bank0
  8916  1965  1303               	bcf	3,6	;RP1=0, select bank0
  8917  1966  0185               	clrf	5	;volatile
  8918  1967                     l125:
  8919  1967  0008               	return
  8920  1968                     __end_of_cfg_io:
  8921                           
  8922                           	psect	text28
  8923  1935                     __ptext28:	
  8924 ;; *************** function _cfg_inte *****************
  8925 ;; Defined at:
  8926 ;;		line 223 in file "main.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;		None
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;		None
  8931 ;; Return value:  Size  Location     Type
  8932 ;;                  1    wreg      void 
  8933 ;; Registers used:
  8934 ;;		None
  8935 ;; Tracked objects:
  8936 ;;		On entry : 0/0
  8937 ;;		On exit  : 0/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8940 ;;      Params:         0       0       0       0       0
  8941 ;;      Locals:         0       0       0       0       0
  8942 ;;      Temps:          0       0       0       0       0
  8943 ;;      Totals:         0       0       0       0       0
  8944 ;;Total ram usage:        0 bytes
  8945 ;; Hardware stack levels used:    1
  8946 ;; Hardware stack levels required when called:    2
  8947 ;; This function calls:
  8948 ;;		Nothing
  8949 ;; This function is called by:
  8950 ;;		_main
  8951 ;; This function uses a non-reentrant model
  8952 ;;
  8953                           
  8954                           
  8955                           ;psect for function _cfg_inte
  8956  1935                     _cfg_inte:
  8957  1935                     l3243:	
  8958                           ;incstack = 0
  8959                           ; Regs used in _cfg_inte: []
  8960                           
  8961                           
  8962                           ;main.c: 225:     INTCONbits.GIE = 1;
  8963  1935  178B               	bsf	11,7	;volatile
  8964                           
  8965                           ;main.c: 226:     INTCONbits.PEIE = 1;
  8966  1936  170B               	bsf	11,6	;volatile
  8967                           
  8968                           ;main.c: 227:     PIE1bits.RCIE = 1;
  8969  1937  1683               	bsf	3,5	;RP0=1, select bank1
  8970  1938  1303               	bcf	3,6	;RP1=0, select bank1
  8971  1939  168C               	bsf	12,5	;volatile
  8972                           
  8973                           ;main.c: 228:     PIE1bits.ADIE = 1;
  8974  193A  170C               	bsf	12,6	;volatile
  8975                           
  8976                           ;main.c: 229:     PIR1bits.ADIF = 0;
  8977  193B  1283               	bcf	3,5	;RP0=0, select bank0
  8978  193C  1303               	bcf	3,6	;RP1=0, select bank0
  8979  193D  130C               	bcf	12,6	;volatile
  8980  193E                     l137:
  8981  193E  0008               	return
  8982  193F                     __end_of_cfg_inte:
  8983                           
  8984                           	psect	text29
  8985  192D                     __ptext29:	
  8986 ;; *************** function _cfg_clk *****************
  8987 ;; Defined at:
  8988 ;;		line 201 in file "main.c"
  8989 ;; Parameters:    Size  Location     Type
  8990 ;;		None
  8991 ;; Auto vars:     Size  Location     Type
  8992 ;;		None
  8993 ;; Return value:  Size  Location     Type
  8994 ;;                  1    wreg      void 
  8995 ;; Registers used:
  8996 ;;		wreg, status,2, status,0
  8997 ;; Tracked objects:
  8998 ;;		On entry : 0/0
  8999 ;;		On exit  : 0/0
  9000 ;;		Unchanged: 0/0
  9001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9002 ;;      Params:         0       0       0       0       0
  9003 ;;      Locals:         0       0       0       0       0
  9004 ;;      Temps:          0       0       0       0       0
  9005 ;;      Totals:         0       0       0       0       0
  9006 ;;Total ram usage:        0 bytes
  9007 ;; Hardware stack levels used:    1
  9008 ;; Hardware stack levels required when called:    2
  9009 ;; This function calls:
  9010 ;;		Nothing
  9011 ;; This function is called by:
  9012 ;;		_main
  9013 ;; This function uses a non-reentrant model
  9014 ;;
  9015                           
  9016                           
  9017                           ;psect for function _cfg_clk
  9018  192D                     _cfg_clk:
  9019  192D                     l3239:	
  9020                           ;incstack = 0
  9021                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
  9022                           
  9023                           
  9024                           ;main.c: 202:     OSCCONbits.IRCF = 0b100;
  9025  192D  1683               	bsf	3,5	;RP0=1, select bank1
  9026  192E  1303               	bcf	3,6	;RP1=0, select bank1
  9027  192F  080F               	movf	15,w	;volatile
  9028  1930  398F               	andlw	-113
  9029  1931  3840               	iorlw	64
  9030  1932  008F               	movwf	15	;volatile
  9031  1933                     l3241:
  9032                           
  9033                           ;main.c: 203:     OSCCONbits.SCS = 1;
  9034  1933  140F               	bsf	15,0	;volatile
  9035  1934                     l131:
  9036  1934  0008               	return
  9037  1935                     __end_of_cfg_clk:
  9038                           
  9039                           	psect	text30
  9040  198F                     __ptext30:	
  9041 ;; *************** function _cfg_adc *****************
  9042 ;; Defined at:
  9043 ;;		line 188 in file "main.c"
  9044 ;; Parameters:    Size  Location     Type
  9045 ;;		None
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;		None
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  1    wreg      void 
  9050 ;; Registers used:
  9051 ;;		wreg, status,2, status,0
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9057 ;;      Params:         0       0       0       0       0
  9058 ;;      Locals:         0       0       0       0       0
  9059 ;;      Temps:          1       0       0       0       0
  9060 ;;      Totals:         1       0       0       0       0
  9061 ;;Total ram usage:        1 bytes
  9062 ;; Hardware stack levels used:    1
  9063 ;; Hardware stack levels required when called:    2
  9064 ;; This function calls:
  9065 ;;		Nothing
  9066 ;; This function is called by:
  9067 ;;		_main
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071                           
  9072                           ;psect for function _cfg_adc
  9073  198F                     _cfg_adc:
  9074  198F                     l3245:	
  9075                           ;incstack = 0
  9076                           ; Regs used in _cfg_adc: [wreg+status,2+status,0]
  9077                           
  9078                           
  9079                           ;main.c: 189:     ADCON1bits.ADFM = 0;
  9080  198F  1683               	bsf	3,5	;RP0=1, select bank1
  9081  1990  1303               	bcf	3,6	;RP1=0, select bank1
  9082  1991  139F               	bcf	31,7	;volatile
  9083                           
  9084                           ;main.c: 190:     ADCON1bits.VCFG0 = 0;
  9085  1992  121F               	bcf	31,4	;volatile
  9086                           
  9087                           ;main.c: 191:     ADCON1bits.VCFG1 = 0;
  9088  1993  129F               	bcf	31,5	;volatile
  9089                           
  9090                           ;main.c: 193:     ADCON0bits.ADCS0 = 0;
  9091  1994  1283               	bcf	3,5	;RP0=0, select bank0
  9092  1995  1303               	bcf	3,6	;RP1=0, select bank0
  9093  1996  131F               	bcf	31,6	;volatile
  9094                           
  9095                           ;main.c: 194:     ADCON0bits.ADCS1 = 0;
  9096  1997  139F               	bcf	31,7	;volatile
  9097  1998                     l3247:
  9098                           
  9099                           ;main.c: 195:     ADCON0bits.CHS = 5;
  9100  1998  081F               	movf	31,w	;volatile
  9101  1999  39C3               	andlw	-61
  9102  199A  3814               	iorlw	20
  9103  199B  009F               	movwf	31	;volatile
  9104  199C                     l3249:
  9105                           
  9106                           ;main.c: 196:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9107  199C  3042               	movlw	66
  9108  199D  00F5               	movwf	??_cfg_adc
  9109  199E                     u5857:
  9110  199E  0BF5               	decfsz	??_cfg_adc,f
  9111  199F  299E               	goto	u5857
  9112  19A0  0000               	nop
  9113  19A1                     l3251:
  9114                           
  9115                           ;main.c: 197:     ADCON0bits.ADON = 1;
  9116  19A1  1283               	bcf	3,5	;RP0=0, select bank0
  9117  19A2  1303               	bcf	3,6	;RP1=0, select bank0
  9118  19A3  141F               	bsf	31,0	;volatile
  9119  19A4                     l128:
  9120  19A4  0008               	return
  9121  19A5                     __end_of_cfg_adc:
  9122                           
  9123                           	psect	text31
  9124  1B29                     __ptext31:	
  9125 ;; *************** function _Lcd_Write_String *****************
  9126 ;; Defined at:
  9127 ;;		line 110 in file "LCD.c"
  9128 ;; Parameters:    Size  Location     Type
  9129 ;;  a               2    0[BANK0 ] PTR unsigned char 
  9130 ;;		 -> f1(10), STR_1(18), 
  9131 ;; Auto vars:     Size  Location     Type
  9132 ;;  i               2    5[BANK0 ] int 
  9133 ;; Return value:  Size  Location     Type
  9134 ;;                  1    wreg      void 
  9135 ;; Registers used:
  9136 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9137 ;; Tracked objects:
  9138 ;;		On entry : 0/0
  9139 ;;		On exit  : 0/0
  9140 ;;		Unchanged: 0/0
  9141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9142 ;;      Params:         0       2       0       0       0
  9143 ;;      Locals:         0       2       0       0       0
  9144 ;;      Temps:          0       3       0       0       0
  9145 ;;      Totals:         0       7       0       0       0
  9146 ;;Total ram usage:        7 bytes
  9147 ;; Hardware stack levels used:    1
  9148 ;; Hardware stack levels required when called:    4
  9149 ;; This function calls:
  9150 ;;		_Lcd_Write_Char
  9151 ;; This function is called by:
  9152 ;;		_main
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           
  9157                           ;psect for function _Lcd_Write_String
  9158  1B29                     _Lcd_Write_String:
  9159  1B29                     l3291:	
  9160                           ;incstack = 0
  9161                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9162                           
  9163                           
  9164                           ;LCD.c: 111:     int i;;LCD.c: 112:     for (i = 0; a[i] != '\0'; i++)
  9165  1B29  1283               	bcf	3,5	;RP0=0, select bank0
  9166  1B2A  1303               	bcf	3,6	;RP1=0, select bank0
  9167  1B2B  01A5               	clrf	Lcd_Write_String@i
  9168  1B2C  01A6               	clrf	Lcd_Write_String@i+1
  9169  1B2D  2B52               	goto	l3297
  9170  1B2E                     l3293:
  9171                           
  9172                           ;LCD.c: 113:         Lcd_Write_Char(a[i]);
  9173  1B2E  0825               	movf	Lcd_Write_String@i,w
  9174  1B2F  0720               	addwf	Lcd_Write_String@a,w
  9175  1B30  00A3               	movwf	??_Lcd_Write_String+1
  9176  1B31  0821               	movf	Lcd_Write_String@a+1,w
  9177  1B32  00A2               	movwf	??_Lcd_Write_String
  9178  1B33  1803               	skipnc
  9179  1B34  0AA2               	incf	??_Lcd_Write_String,f
  9180  1B35  1FA5               	btfss	Lcd_Write_String@i,7
  9181  1B36  2B38               	goto	u5280
  9182  1B37  03A2               	decf	??_Lcd_Write_String,f
  9183  1B38                     u5280:
  9184  1B38  1283               	bcf	3,5	;RP0=0, select bank0
  9185  1B39  1303               	bcf	3,6	;RP1=0, select bank0
  9186  1B3A  0822               	movf	??_Lcd_Write_String,w
  9187  1B3B  00A4               	movwf	??_Lcd_Write_String+2
  9188  1B3C  0824               	movf	??_Lcd_Write_String+2,w
  9189  1B3D  00FF               	movwf	btemp+1
  9190  1B3E  0823               	movf	??_Lcd_Write_String+1,w
  9191  1B3F  0084               	movwf	4
  9192  1B40  160A  118A  2000  160A  158A  	fcall	stringtab
  9193  1B45  160A  158A  21BF  160A  158A  	fcall	_Lcd_Write_Char
  9194  1B4A                     l3295:
  9195  1B4A  3001               	movlw	1
  9196  1B4B  1283               	bcf	3,5	;RP0=0, select bank0
  9197  1B4C  1303               	bcf	3,6	;RP1=0, select bank0
  9198  1B4D  07A5               	addwf	Lcd_Write_String@i,f
  9199  1B4E  1803               	skipnc
  9200  1B4F  0AA6               	incf	Lcd_Write_String@i+1,f
  9201  1B50  3000               	movlw	0
  9202  1B51  07A6               	addwf	Lcd_Write_String@i+1,f
  9203  1B52                     l3297:
  9204  1B52  0825               	movf	Lcd_Write_String@i,w
  9205  1B53  0720               	addwf	Lcd_Write_String@a,w
  9206  1B54  00A3               	movwf	??_Lcd_Write_String+1
  9207  1B55  0821               	movf	Lcd_Write_String@a+1,w
  9208  1B56  00A2               	movwf	??_Lcd_Write_String
  9209  1B57  1803               	skipnc
  9210  1B58  0AA2               	incf	??_Lcd_Write_String,f
  9211  1B59  1FA5               	btfss	Lcd_Write_String@i,7
  9212  1B5A  2B5C               	goto	u5290
  9213  1B5B  03A2               	decf	??_Lcd_Write_String,f
  9214  1B5C                     u5290:
  9215  1B5C  1283               	bcf	3,5	;RP0=0, select bank0
  9216  1B5D  1303               	bcf	3,6	;RP1=0, select bank0
  9217  1B5E  0822               	movf	??_Lcd_Write_String,w
  9218  1B5F  00A4               	movwf	??_Lcd_Write_String+2
  9219  1B60  0824               	movf	??_Lcd_Write_String+2,w
  9220  1B61  00FF               	movwf	btemp+1
  9221  1B62  0823               	movf	??_Lcd_Write_String+1,w
  9222  1B63  0084               	movwf	4
  9223  1B64  160A  118A  2000  160A  158A  	fcall	stringtab
  9224  1B69  3A00               	xorlw	0
  9225  1B6A  1D03               	skipz
  9226  1B6B  2B6D               	goto	u5301
  9227  1B6C  2B6E               	goto	u5300
  9228  1B6D                     u5301:
  9229  1B6D  2B2E               	goto	l3293
  9230  1B6E                     u5300:
  9231  1B6E                     l217:
  9232  1B6E  0008               	return
  9233  1B6F                     __end_of_Lcd_Write_String:
  9234                           
  9235                           	psect	text32
  9236  19BF                     __ptext32:	
  9237 ;; *************** function _Lcd_Write_Char *****************
  9238 ;; Defined at:
  9239 ;;		line 94 in file "LCD.c"
  9240 ;; Parameters:    Size  Location     Type
  9241 ;;  a               1    wreg     unsigned char 
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;  a               1    7[COMMON] unsigned char 
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      void 
  9246 ;; Registers used:
  9247 ;;		wreg, status,2, status,0, pclath, cstack
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9253 ;;      Params:         0       0       0       0       0
  9254 ;;      Locals:         1       0       0       0       0
  9255 ;;      Temps:          1       0       0       0       0
  9256 ;;      Totals:         2       0       0       0       0
  9257 ;;Total ram usage:        2 bytes
  9258 ;; Hardware stack levels used:    1
  9259 ;; Hardware stack levels required when called:    3
  9260 ;; This function calls:
  9261 ;;		_Lcd_Port
  9262 ;; This function is called by:
  9263 ;;		_Lcd_Write_String
  9264 ;; This function uses a non-reentrant model
  9265 ;;
  9266                           
  9267                           
  9268                           ;psect for function _Lcd_Write_Char
  9269  19BF                     _Lcd_Write_Char:
  9270                           
  9271                           ;incstack = 0
  9272                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9273                           ;Lcd_Write_Char@a stored from wreg
  9274  19BF  00F7               	movwf	Lcd_Write_Char@a
  9275  19C0                     l2849:
  9276                           
  9277                           ;LCD.c: 98:     PORTCbits.RC0 = 1;
  9278  19C0  1283               	bcf	3,5	;RP0=0, select bank0
  9279  19C1  1303               	bcf	3,6	;RP1=0, select bank0
  9280  19C2  1407               	bsf	7,0	;volatile
  9281  19C3                     l2851:
  9282                           
  9283                           ;LCD.c: 99:     Lcd_Port(a);
  9284  19C3  0877               	movf	Lcd_Write_Char@a,w
  9285  19C4  160A  158A  22AB  160A  158A  	fcall	_Lcd_Port
  9286  19C9                     l2853:
  9287                           
  9288                           ;LCD.c: 100:     RC1 = 1;
  9289  19C9  1283               	bcf	3,5	;RP0=0, select bank0
  9290  19CA  1303               	bcf	3,6	;RP1=0, select bank0
  9291  19CB  1487               	bsf	7,1	;volatile
  9292  19CC                     l2855:
  9293                           
  9294                           ;LCD.c: 101:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9295  19CC  301A               	movlw	26
  9296  19CD  00F6               	movwf	??_Lcd_Write_Char
  9297  19CE                     u5867:
  9298  19CE  0BF6               	decfsz	??_Lcd_Write_Char,f
  9299  19CF  29CE               	goto	u5867
  9300  19D0  0000               	nop
  9301  19D1                     l2857:
  9302                           
  9303                           ;LCD.c: 102:     RC1 = 0;
  9304  19D1  1283               	bcf	3,5	;RP0=0, select bank0
  9305  19D2  1303               	bcf	3,6	;RP1=0, select bank0
  9306  19D3  1087               	bcf	7,1	;volatile
  9307  19D4                     l2859:
  9308                           
  9309                           ;LCD.c: 103:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9310  19D4  301A               	movlw	26
  9311  19D5  00F6               	movwf	??_Lcd_Write_Char
  9312  19D6                     u5877:
  9313  19D6  0BF6               	decfsz	??_Lcd_Write_Char,f
  9314  19D7  29D6               	goto	u5877
  9315  19D8  0000               	nop
  9316  19D9                     l211:
  9317  19D9  0008               	return
  9318  19DA                     __end_of_Lcd_Write_Char:
  9319                           
  9320                           	psect	text33
  9321  0801                     __ptext33:	
  9322 ;; *************** function _Lcd_Set_Cursor *****************
  9323 ;; Defined at:
  9324 ;;		line 69 in file "LCD.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;  a               1    wreg     unsigned char 
  9327 ;;  b               1    0[BANK0 ] unsigned char 
  9328 ;; Auto vars:     Size  Location     Type
  9329 ;;  a               1    2[BANK0 ] unsigned char 
  9330 ;;  temp            1    3[BANK0 ] unsigned char 
  9331 ;; Return value:  Size  Location     Type
  9332 ;;                  1    wreg      void 
  9333 ;; Registers used:
  9334 ;;		wreg, status,2, status,0, pclath, cstack
  9335 ;; Tracked objects:
  9336 ;;		On entry : 0/0
  9337 ;;		On exit  : 0/0
  9338 ;;		Unchanged: 0/0
  9339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9340 ;;      Params:         0       1       0       0       0
  9341 ;;      Locals:         0       2       0       0       0
  9342 ;;      Temps:          0       1       0       0       0
  9343 ;;      Totals:         0       4       0       0       0
  9344 ;;Total ram usage:        4 bytes
  9345 ;; Hardware stack levels used:    1
  9346 ;; Hardware stack levels required when called:    4
  9347 ;; This function calls:
  9348 ;;		_Lcd_Cmd
  9349 ;; This function is called by:
  9350 ;;		_main
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354                           
  9355                           ;psect for function _Lcd_Set_Cursor
  9356  0801                     _Lcd_Set_Cursor:
  9357                           
  9358                           ;incstack = 0
  9359                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9360                           ;Lcd_Set_Cursor@a stored from wreg
  9361  0801  1283               	bcf	3,5	;RP0=0, select bank0
  9362  0802  1303               	bcf	3,6	;RP1=0, select bank0
  9363  0803  00A2               	movwf	Lcd_Set_Cursor@a
  9364  0804                     l3279:
  9365                           
  9366                           ;LCD.c: 70:     char temp;;LCD.c: 71:     if (a == 1) {
  9367  0804  0322               	decf	Lcd_Set_Cursor@a,w
  9368  0805  1D03               	btfss	3,2
  9369  0806  2808               	goto	u5261
  9370  0807  2809               	goto	u5260
  9371  0808                     u5261:
  9372  0808  2815               	goto	l3285
  9373  0809                     u5260:
  9374  0809                     l3281:
  9375                           
  9376                           ;LCD.c: 72:         temp = 0x80 + b - 1;
  9377  0809  0820               	movf	Lcd_Set_Cursor@b,w
  9378  080A  3E7F               	addlw	127
  9379  080B  00A1               	movwf	??_Lcd_Set_Cursor
  9380  080C  0821               	movf	??_Lcd_Set_Cursor,w
  9381  080D  00A3               	movwf	Lcd_Set_Cursor@temp
  9382  080E                     l3283:
  9383                           
  9384                           ;LCD.c: 73:         Lcd_Cmd(temp);
  9385  080E  0823               	movf	Lcd_Set_Cursor@temp,w
  9386  080F  160A  158A  21A5  120A  158A  	fcall	_Lcd_Cmd
  9387                           
  9388                           ;LCD.c: 74:     } else if (a == 2) {
  9389  0814  2826               	goto	l205
  9390  0815                     l3285:
  9391  0815  3002               	movlw	2
  9392  0816  0622               	xorwf	Lcd_Set_Cursor@a,w
  9393  0817  1D03               	btfss	3,2
  9394  0818  281A               	goto	u5271
  9395  0819  281B               	goto	u5270
  9396  081A                     u5271:
  9397  081A  2826               	goto	l205
  9398  081B                     u5270:
  9399  081B                     l3287:
  9400                           
  9401                           ;LCD.c: 75:         temp = 0xC0 + b - 1;
  9402  081B  0820               	movf	Lcd_Set_Cursor@b,w
  9403  081C  3EBF               	addlw	191
  9404  081D  00A1               	movwf	??_Lcd_Set_Cursor
  9405  081E  0821               	movf	??_Lcd_Set_Cursor,w
  9406  081F  00A3               	movwf	Lcd_Set_Cursor@temp
  9407  0820                     l3289:
  9408                           
  9409                           ;LCD.c: 76:         Lcd_Cmd(temp);
  9410  0820  0823               	movf	Lcd_Set_Cursor@temp,w
  9411  0821  160A  158A  21A5  120A  158A  	fcall	_Lcd_Cmd
  9412  0826                     l205:
  9413  0826  0008               	return
  9414  0827                     __end_of_Lcd_Set_Cursor:
  9415                           
  9416                           	psect	text34
  9417  1BB5                     __ptext34:	
  9418 ;; *************** function _Lcd_Init *****************
  9419 ;; Defined at:
  9420 ;;		line 80 in file "LCD.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;		None
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;		None
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  1    wreg      void 
  9427 ;; Registers used:
  9428 ;;		wreg, status,2, status,0, pclath, cstack
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9434 ;;      Params:         0       0       0       0       0
  9435 ;;      Locals:         0       0       0       0       0
  9436 ;;      Temps:          0       3       0       0       0
  9437 ;;      Totals:         0       3       0       0       0
  9438 ;;Total ram usage:        3 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:    4
  9441 ;; This function calls:
  9442 ;;		_Lcd_Cmd
  9443 ;;		_Lcd_Port
  9444 ;; This function is called by:
  9445 ;;		_main
  9446 ;; This function uses a non-reentrant model
  9447 ;;
  9448                           
  9449                           
  9450                           ;psect for function _Lcd_Init
  9451  1BB5                     _Lcd_Init:
  9452  1BB5                     l3267:	
  9453                           ;incstack = 0
  9454                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9455                           
  9456                           
  9457                           ;LCD.c: 81:     Lcd_Port(0x00);
  9458  1BB5  3000               	movlw	0
  9459  1BB6  160A  158A  22AB  160A  158A  	fcall	_Lcd_Port
  9460  1BBB                     l3269:
  9461                           
  9462                           ;LCD.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9463  1BBB  3034               	movlw	52
  9464  1BBC  1283               	bcf	3,5	;RP0=0, select bank0
  9465  1BBD  1303               	bcf	3,6	;RP1=0, select bank0
  9466  1BBE  00A1               	movwf	??_Lcd_Init+1
  9467  1BBF  30F1               	movlw	241
  9468  1BC0  00A0               	movwf	??_Lcd_Init
  9469  1BC1                     u5887:
  9470  1BC1  0BA0               	decfsz	??_Lcd_Init,f
  9471  1BC2  2BC1               	goto	u5887
  9472  1BC3  0BA1               	decfsz	??_Lcd_Init+1,f
  9473  1BC4  2BC1               	goto	u5887
  9474  1BC5                     l3271:
  9475                           
  9476                           ;LCD.c: 83:     Lcd_Cmd(0x3F);
  9477  1BC5  303F               	movlw	63
  9478  1BC6  160A  158A  21A5  160A  158A  	fcall	_Lcd_Cmd
  9479                           
  9480                           ;LCD.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9481  1BCB  300D               	movlw	13
  9482  1BCC  1283               	bcf	3,5	;RP0=0, select bank0
  9483  1BCD  1303               	bcf	3,6	;RP1=0, select bank0
  9484  1BCE  00A1               	movwf	??_Lcd_Init+1
  9485  1BCF  30FB               	movlw	251
  9486  1BD0  00A0               	movwf	??_Lcd_Init
  9487  1BD1                     u5897:
  9488  1BD1  0BA0               	decfsz	??_Lcd_Init,f
  9489  1BD2  2BD1               	goto	u5897
  9490  1BD3  0BA1               	decfsz	??_Lcd_Init+1,f
  9491  1BD4  2BD1               	goto	u5897
  9492  1BD5                     l3273:
  9493                           
  9494                           ;LCD.c: 85:     Lcd_Cmd(0x3F);
  9495  1BD5  303F               	movlw	63
  9496  1BD6  160A  158A  21A5  160A  158A  	fcall	_Lcd_Cmd
  9497  1BDB                     l3275:
  9498                           
  9499                           ;LCD.c: 86:     _delay((unsigned long)((110)*(8000000/4000.0)));
  9500  1BDB  3002               	movlw	2
  9501  1BDC  1283               	bcf	3,5	;RP0=0, select bank0
  9502  1BDD  1303               	bcf	3,6	;RP1=0, select bank0
  9503  1BDE  00A2               	movwf	??_Lcd_Init+2
  9504  1BDF  301E               	movlw	30
  9505  1BE0  00A1               	movwf	??_Lcd_Init+1
  9506  1BE1  30B3               	movlw	179
  9507  1BE2  00A0               	movwf	??_Lcd_Init
  9508  1BE3                     u5907:
  9509  1BE3  0BA0               	decfsz	??_Lcd_Init,f
  9510  1BE4  2BE3               	goto	u5907
  9511  1BE5  0BA1               	decfsz	??_Lcd_Init+1,f
  9512  1BE6  2BE3               	goto	u5907
  9513  1BE7  0BA2               	decfsz	??_Lcd_Init+2,f
  9514  1BE8  2BE3               	goto	u5907
  9515                           
  9516                           ;LCD.c: 87:     Lcd_Cmd(0x3F);
  9517  1BE9  303F               	movlw	63
  9518  1BEA  160A  158A  21A5  160A  158A  	fcall	_Lcd_Cmd
  9519                           
  9520                           ;LCD.c: 89:     Lcd_Cmd(0x38);
  9521  1BEF  3038               	movlw	56
  9522  1BF0  160A  158A  21A5  160A  158A  	fcall	_Lcd_Cmd
  9523                           
  9524                           ;LCD.c: 90:     Lcd_Cmd(0x0C);
  9525  1BF5  300C               	movlw	12
  9526  1BF6  160A  158A  21A5  160A  158A  	fcall	_Lcd_Cmd
  9527                           
  9528                           ;LCD.c: 91:     Lcd_Cmd(0x06);
  9529  1BFB  3006               	movlw	6
  9530  1BFC  160A  158A  21A5  160A  158A  	fcall	_Lcd_Cmd
  9531  1C01                     l208:
  9532  1C01  0008               	return
  9533  1C02                     __end_of_Lcd_Init:
  9534                           
  9535                           	psect	text35
  9536  1949                     __ptext35:	
  9537 ;; *************** function _Lcd_Clear *****************
  9538 ;; Defined at:
  9539 ;;		line 64 in file "LCD.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;		None
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;		None
  9544 ;; Return value:  Size  Location     Type
  9545 ;;                  1    wreg      void 
  9546 ;; Registers used:
  9547 ;;		wreg, status,2, status,0, pclath, cstack
  9548 ;; Tracked objects:
  9549 ;;		On entry : 0/0
  9550 ;;		On exit  : 0/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9553 ;;      Params:         0       0       0       0       0
  9554 ;;      Locals:         0       0       0       0       0
  9555 ;;      Temps:          0       0       0       0       0
  9556 ;;      Totals:         0       0       0       0       0
  9557 ;;Total ram usage:        0 bytes
  9558 ;; Hardware stack levels used:    1
  9559 ;; Hardware stack levels required when called:    4
  9560 ;; This function calls:
  9561 ;;		_Lcd_Cmd
  9562 ;; This function is called by:
  9563 ;;		_main
  9564 ;; This function uses a non-reentrant model
  9565 ;;
  9566                           
  9567                           
  9568                           ;psect for function _Lcd_Clear
  9569  1949                     _Lcd_Clear:
  9570  1949                     l3277:	
  9571                           ;incstack = 0
  9572                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9573                           
  9574                           
  9575                           ;LCD.c: 65:     Lcd_Cmd(0);
  9576  1949  3000               	movlw	0
  9577  194A  160A  158A  21A5  160A  158A  	fcall	_Lcd_Cmd
  9578                           
  9579                           ;LCD.c: 66:     Lcd_Cmd(1);
  9580  194F  3001               	movlw	1
  9581  1950  160A  158A  21A5  160A  158A  	fcall	_Lcd_Cmd
  9582  1955                     l199:
  9583  1955  0008               	return
  9584  1956                     __end_of_Lcd_Clear:
  9585                           
  9586                           	psect	text36
  9587  19A5                     __ptext36:	
  9588 ;; *************** function _Lcd_Cmd *****************
  9589 ;; Defined at:
  9590 ;;		line 56 in file "LCD.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;  a               1    wreg     unsigned char 
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;  a               1    8[COMMON] unsigned char 
  9595 ;; Return value:  Size  Location     Type
  9596 ;;                  1    wreg      void 
  9597 ;; Registers used:
  9598 ;;		wreg, status,2, status,0, pclath, cstack
  9599 ;; Tracked objects:
  9600 ;;		On entry : 0/0
  9601 ;;		On exit  : 0/0
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9604 ;;      Params:         0       0       0       0       0
  9605 ;;      Locals:         1       0       0       0       0
  9606 ;;      Temps:          2       0       0       0       0
  9607 ;;      Totals:         3       0       0       0       0
  9608 ;;Total ram usage:        3 bytes
  9609 ;; Hardware stack levels used:    1
  9610 ;; Hardware stack levels required when called:    3
  9611 ;; This function calls:
  9612 ;;		_Lcd_Port
  9613 ;; This function is called by:
  9614 ;;		_Lcd_Clear
  9615 ;;		_Lcd_Set_Cursor
  9616 ;;		_Lcd_Init
  9617 ;;		_Lcd_Shift_Right
  9618 ;;		_Lcd_Shift_Left
  9619 ;; This function uses a non-reentrant model
  9620 ;;
  9621                           
  9622                           
  9623                           ;psect for function _Lcd_Cmd
  9624  19A5                     _Lcd_Cmd:
  9625                           
  9626                           ;incstack = 0
  9627                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9628                           ;Lcd_Cmd@a stored from wreg
  9629  19A5  00F8               	movwf	Lcd_Cmd@a
  9630  19A6                     l2839:
  9631                           
  9632                           ;LCD.c: 57:     PORTCbits.RC0 = 0;
  9633  19A6  1283               	bcf	3,5	;RP0=0, select bank0
  9634  19A7  1303               	bcf	3,6	;RP1=0, select bank0
  9635  19A8  1007               	bcf	7,0	;volatile
  9636  19A9                     l2841:
  9637                           
  9638                           ;LCD.c: 58:     Lcd_Port(a);
  9639  19A9  0878               	movf	Lcd_Cmd@a,w
  9640  19AA  160A  158A  22AB  160A  158A  	fcall	_Lcd_Port
  9641  19AF                     l2843:
  9642                           
  9643                           ;LCD.c: 59:     RC1 = 1;
  9644  19AF  1283               	bcf	3,5	;RP0=0, select bank0
  9645  19B0  1303               	bcf	3,6	;RP1=0, select bank0
  9646  19B1  1487               	bsf	7,1	;volatile
  9647  19B2                     l2845:
  9648                           
  9649                           ;LCD.c: 60:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9650  19B2  300B               	movlw	11
  9651  19B3  00F7               	movwf	??_Lcd_Cmd+1
  9652  19B4  3062               	movlw	98
  9653  19B5  00F6               	movwf	??_Lcd_Cmd
  9654  19B6                     u5917:
  9655  19B6  0BF6               	decfsz	??_Lcd_Cmd,f
  9656  19B7  29B6               	goto	u5917
  9657  19B8  0BF7               	decfsz	??_Lcd_Cmd+1,f
  9658  19B9  29B6               	goto	u5917
  9659  19BA  0000               	nop
  9660  19BB                     l2847:
  9661                           
  9662                           ;LCD.c: 61:     RC1 = 0;
  9663  19BB  1283               	bcf	3,5	;RP0=0, select bank0
  9664  19BC  1303               	bcf	3,6	;RP1=0, select bank0
  9665  19BD  1087               	bcf	7,1	;volatile
  9666  19BE                     l196:
  9667  19BE  0008               	return
  9668  19BF                     __end_of_Lcd_Cmd:
  9669                           
  9670                           	psect	text37
  9671  1AAB                     __ptext37:	
  9672 ;; *************** function _Lcd_Port *****************
  9673 ;; Defined at:
  9674 ;;		line 13 in file "LCD.c"
  9675 ;; Parameters:    Size  Location     Type
  9676 ;;  a               1    wreg     unsigned char 
  9677 ;; Auto vars:     Size  Location     Type
  9678 ;;  a               1    5[COMMON] unsigned char 
  9679 ;; Return value:  Size  Location     Type
  9680 ;;                  1    wreg      void 
  9681 ;; Registers used:
  9682 ;;		wreg
  9683 ;; Tracked objects:
  9684 ;;		On entry : 0/0
  9685 ;;		On exit  : 0/0
  9686 ;;		Unchanged: 0/0
  9687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9688 ;;      Params:         0       0       0       0       0
  9689 ;;      Locals:         1       0       0       0       0
  9690 ;;      Temps:          0       0       0       0       0
  9691 ;;      Totals:         1       0       0       0       0
  9692 ;;Total ram usage:        1 bytes
  9693 ;; Hardware stack levels used:    1
  9694 ;; Hardware stack levels required when called:    2
  9695 ;; This function calls:
  9696 ;;		Nothing
  9697 ;; This function is called by:
  9698 ;;		_Lcd_Cmd
  9699 ;;		_Lcd_Init
  9700 ;;		_Lcd_Write_Char
  9701 ;; This function uses a non-reentrant model
  9702 ;;
  9703                           
  9704                           
  9705                           ;psect for function _Lcd_Port
  9706  1AAB                     _Lcd_Port:
  9707                           
  9708                           ;incstack = 0
  9709                           ; Regs used in _Lcd_Port: [wreg]
  9710                           ;Lcd_Port@a stored from wreg
  9711  1AAB  00F5               	movwf	Lcd_Port@a
  9712  1AAC                     l2353:
  9713                           
  9714                           ;LCD.c: 15:     if (a & 1)
  9715  1AAC  1C75               	btfss	Lcd_Port@a,0
  9716  1AAD  2AAF               	goto	u2961
  9717  1AAE  2AB0               	goto	u2960
  9718  1AAF                     u2961:
  9719  1AAF  2AB4               	goto	l177
  9720  1AB0                     u2960:
  9721  1AB0                     l2355:
  9722                           
  9723                           ;LCD.c: 16:         RD0 = 1;
  9724  1AB0  1283               	bcf	3,5	;RP0=0, select bank0
  9725  1AB1  1303               	bcf	3,6	;RP1=0, select bank0
  9726  1AB2  1408               	bsf	8,0	;volatile
  9727  1AB3  2AB7               	goto	l178
  9728  1AB4                     l177:	
  9729                           ;LCD.c: 17:     else
  9730                           
  9731                           
  9732                           ;LCD.c: 18:         RD0 = 0;
  9733  1AB4  1283               	bcf	3,5	;RP0=0, select bank0
  9734  1AB5  1303               	bcf	3,6	;RP1=0, select bank0
  9735  1AB6  1008               	bcf	8,0	;volatile
  9736  1AB7                     l178:
  9737                           
  9738                           ;LCD.c: 20:     if (a & 2)
  9739  1AB7  1CF5               	btfss	Lcd_Port@a,1
  9740  1AB8  2ABA               	goto	u2971
  9741  1AB9  2ABB               	goto	u2970
  9742  1ABA                     u2971:
  9743  1ABA  2ABD               	goto	l179
  9744  1ABB                     u2970:
  9745  1ABB                     l2357:
  9746                           
  9747                           ;LCD.c: 21:         RD1 = 1;
  9748  1ABB  1488               	bsf	8,1	;volatile
  9749  1ABC  2ABE               	goto	l180
  9750  1ABD                     l179:	
  9751                           ;LCD.c: 22:     else
  9752                           
  9753                           
  9754                           ;LCD.c: 23:         RD1 = 0;
  9755  1ABD  1088               	bcf	8,1	;volatile
  9756  1ABE                     l180:
  9757                           
  9758                           ;LCD.c: 25:     if (a & 4)
  9759  1ABE  1D75               	btfss	Lcd_Port@a,2
  9760  1ABF  2AC1               	goto	u2981
  9761  1AC0  2AC2               	goto	u2980
  9762  1AC1                     u2981:
  9763  1AC1  2AC4               	goto	l181
  9764  1AC2                     u2980:
  9765  1AC2                     l2359:
  9766                           
  9767                           ;LCD.c: 26:         RD2 = 1;
  9768  1AC2  1508               	bsf	8,2	;volatile
  9769  1AC3  2AC5               	goto	l182
  9770  1AC4                     l181:	
  9771                           ;LCD.c: 27:     else
  9772                           
  9773                           
  9774                           ;LCD.c: 28:         RD2 = 0;
  9775  1AC4  1108               	bcf	8,2	;volatile
  9776  1AC5                     l182:
  9777                           
  9778                           ;LCD.c: 30:     if (a & 8)
  9779  1AC5  1DF5               	btfss	Lcd_Port@a,3
  9780  1AC6  2AC8               	goto	u2991
  9781  1AC7  2AC9               	goto	u2990
  9782  1AC8                     u2991:
  9783  1AC8  2ACB               	goto	l183
  9784  1AC9                     u2990:
  9785  1AC9                     l2361:
  9786                           
  9787                           ;LCD.c: 31:         RD3 = 1;
  9788  1AC9  1588               	bsf	8,3	;volatile
  9789  1ACA  2ACC               	goto	l184
  9790  1ACB                     l183:	
  9791                           ;LCD.c: 32:     else
  9792                           
  9793                           
  9794                           ;LCD.c: 33:         RD3 = 0;
  9795  1ACB  1188               	bcf	8,3	;volatile
  9796  1ACC                     l184:
  9797                           
  9798                           ;LCD.c: 35:     if (a & 16)
  9799  1ACC  1E75               	btfss	Lcd_Port@a,4
  9800  1ACD  2ACF               	goto	u3001
  9801  1ACE  2AD0               	goto	u3000
  9802  1ACF                     u3001:
  9803  1ACF  2AD2               	goto	l185
  9804  1AD0                     u3000:
  9805  1AD0                     l2363:
  9806                           
  9807                           ;LCD.c: 36:         RD4 = 1;
  9808  1AD0  1608               	bsf	8,4	;volatile
  9809  1AD1  2AD3               	goto	l186
  9810  1AD2                     l185:	
  9811                           ;LCD.c: 37:     else
  9812                           
  9813                           
  9814                           ;LCD.c: 38:         RD4 = 0;
  9815  1AD2  1208               	bcf	8,4	;volatile
  9816  1AD3                     l186:
  9817                           
  9818                           ;LCD.c: 40:     if (a & 32)
  9819  1AD3  1EF5               	btfss	Lcd_Port@a,5
  9820  1AD4  2AD6               	goto	u3011
  9821  1AD5  2AD7               	goto	u3010
  9822  1AD6                     u3011:
  9823  1AD6  2AD9               	goto	l187
  9824  1AD7                     u3010:
  9825  1AD7                     l2365:
  9826                           
  9827                           ;LCD.c: 41:         RD5 = 1;
  9828  1AD7  1688               	bsf	8,5	;volatile
  9829  1AD8  2ADA               	goto	l188
  9830  1AD9                     l187:	
  9831                           ;LCD.c: 42:     else
  9832                           
  9833                           
  9834                           ;LCD.c: 43:         RD5 = 0;
  9835  1AD9  1288               	bcf	8,5	;volatile
  9836  1ADA                     l188:
  9837                           
  9838                           ;LCD.c: 45:     if (a & 64)
  9839  1ADA  1F75               	btfss	Lcd_Port@a,6
  9840  1ADB  2ADD               	goto	u3021
  9841  1ADC  2ADE               	goto	u3020
  9842  1ADD                     u3021:
  9843  1ADD  2AE0               	goto	l189
  9844  1ADE                     u3020:
  9845  1ADE                     l2367:
  9846                           
  9847                           ;LCD.c: 46:         RD6 = 1;
  9848  1ADE  1708               	bsf	8,6	;volatile
  9849  1ADF  2AE1               	goto	l190
  9850  1AE0                     l189:	
  9851                           ;LCD.c: 47:     else
  9852                           
  9853                           
  9854                           ;LCD.c: 48:         RD6 = 0;
  9855  1AE0  1308               	bcf	8,6	;volatile
  9856  1AE1                     l190:
  9857                           
  9858                           ;LCD.c: 50:     if (a & 128)
  9859  1AE1  1FF5               	btfss	Lcd_Port@a,7
  9860  1AE2  2AE4               	goto	u3031
  9861  1AE3  2AE5               	goto	u3030
  9862  1AE4                     u3031:
  9863  1AE4  2AE7               	goto	l191
  9864  1AE5                     u3030:
  9865  1AE5                     l2369:
  9866                           
  9867                           ;LCD.c: 51:         RD7 = 1;
  9868  1AE5  1788               	bsf	8,7	;volatile
  9869  1AE6  2AE8               	goto	l193
  9870  1AE7                     l191:	
  9871                           ;LCD.c: 52:     else
  9872                           
  9873                           
  9874                           ;LCD.c: 53:         RD7 = 0;
  9875  1AE7  1388               	bcf	8,7	;volatile
  9876  1AE8                     l193:
  9877  1AE8  0008               	return
  9878  1AE9                     __end_of_Lcd_Port:
  9879                           
  9880                           	psect	text38
  9881  19F6                     __ptext38:	
  9882 ;; *************** function _isr *****************
  9883 ;; Defined at:
  9884 ;;		line 89 in file "main.c"
  9885 ;; Parameters:    Size  Location     Type
  9886 ;;		None
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;		None
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  1    wreg      void 
  9891 ;; Registers used:
  9892 ;;		wreg, status,2, status,0, pclath, cstack
  9893 ;; Tracked objects:
  9894 ;;		On entry : 0/0
  9895 ;;		On exit  : 0/0
  9896 ;;		Unchanged: 0/0
  9897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9898 ;;      Params:         0       0       0       0       0
  9899 ;;      Locals:         0       0       0       0       0
  9900 ;;      Temps:          2       0       0       0       0
  9901 ;;      Totals:         2       0       0       0       0
  9902 ;;Total ram usage:        2 bytes
  9903 ;; Hardware stack levels used:    1
  9904 ;; Hardware stack levels required when called:    1
  9905 ;; This function calls:
  9906 ;;		_int_adc
  9907 ;;		_int_uart
  9908 ;; This function is called by:
  9909 ;;		Interrupt level 1
  9910 ;; This function uses a non-reentrant model
  9911 ;;
  9912                           
  9913                           
  9914                           ;psect for function _isr
  9915  19F6                     _isr:
  9916  19F6                     i1l3575:
  9917                           
  9918                           ;main.c: 91:     if (PIR1bits.ADIF){
  9919  19F6  1283               	bcf	3,5	;RP0=0, select bank0
  9920  19F7  1303               	bcf	3,6	;RP1=0, select bank0
  9921  19F8  1F0C               	btfss	12,6	;volatile
  9922  19F9  29FB               	goto	u579_21
  9923  19FA  29FC               	goto	u579_20
  9924  19FB                     u579_21:
  9925  19FB  2A01               	goto	i1l3579
  9926  19FC                     u579_20:
  9927  19FC                     i1l3577:
  9928                           
  9929                           ;main.c: 92:         int_adc();
  9930  19FC  160A  158A  21DA  160A  158A  	fcall	_int_adc
  9931  1A01                     i1l3579:
  9932                           
  9933                           ;main.c: 94:     if (PIR1bits.RCIF){
  9934  1A01  1283               	bcf	3,5	;RP0=0, select bank0
  9935  1A02  1303               	bcf	3,6	;RP1=0, select bank0
  9936  1A03  1E8C               	btfss	12,5	;volatile
  9937  1A04  2A06               	goto	u580_21
  9938  1A05  2A07               	goto	u580_20
  9939  1A06                     u580_21:
  9940  1A06  2A0C               	goto	i1l101
  9941  1A07                     u580_20:
  9942  1A07                     i1l3581:
  9943                           
  9944                           ;main.c: 95:         int_uart();
  9945  1A07  160A  158A  2238  160A  158A  	fcall	_int_uart
  9946  1A0C                     i1l101:
  9947  1A0C  0874               	movf	??_isr+1,w
  9948  1A0D  008A               	movwf	10
  9949  1A0E  0E73               	swapf	??_isr,w
  9950  1A0F  0083               	movwf	3
  9951  1A10  0EFE               	swapf	btemp,f
  9952  1A11  0E7E               	swapf	btemp,w
  9953  1A12  0009               	retfie
  9954  1A13                     __end_of_isr:
  9955                           
  9956                           	psect	intentry
  9957  0004                     __pintentry:	
  9958                           ;incstack = 0
  9959                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  9960                           
  9961  0004                     interrupt_function:
  9962  007E                     saved_w	set	btemp
  9963  0004  00FE               	movwf	btemp
  9964  0005  0E03               	swapf	3,w
  9965  0006  00F3               	movwf	??_isr
  9966  0007  080A               	movf	10,w
  9967  0008  00F4               	movwf	??_isr+1
  9968  0009  160A  158A  29F6   	ljmp	_isr
  9969                           
  9970                           	psect	text39
  9971  1A38                     __ptext39:	
  9972 ;; *************** function _int_uart *****************
  9973 ;; Defined at:
  9974 ;;		line 111 in file "main.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;		None
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;		None
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  1    wreg      void 
  9981 ;; Registers used:
  9982 ;;		wreg, status,2, status,0
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9988 ;;      Params:         0       0       0       0       0
  9989 ;;      Locals:         0       0       0       0       0
  9990 ;;      Temps:          3       0       0       0       0
  9991 ;;      Totals:         3       0       0       0       0
  9992 ;;Total ram usage:        3 bytes
  9993 ;; Hardware stack levels used:    1
  9994 ;; This function calls:
  9995 ;;		Nothing
  9996 ;; This function is called by:
  9997 ;;		_isr
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           
 10002                           ;psect for function _int_uart
 10003  1A38                     _int_uart:
 10004  1A38                     i1l1885:	
 10005                           ;incstack = 0
 10006                           ; Regs used in _int_uart: [wreg+status,2+status,0]
 10007                           
 10008                           
 10009                           ;main.c: 112:     TXREG = '\f';
 10010  1A38  300C               	movlw	12
 10011  1A39  1283               	bcf	3,5	;RP0=0, select bank0
 10012  1A3A  1303               	bcf	3,6	;RP1=0, select bank0
 10013  1A3B  0099               	movwf	25	;volatile
 10014  1A3C                     i1l1887:
 10015                           
 10016                           ;main.c: 113:     if (RCREG == 43){
 10017  1A3C  302B               	movlw	43
 10018  1A3D  061A               	xorwf	26,w	;volatile
 10019  1A3E  1D03               	btfss	3,2
 10020  1A3F  2A41               	goto	u234_21
 10021  1A40  2A42               	goto	u234_20
 10022  1A41                     u234_21:
 10023  1A41  2A55               	goto	i1l109
 10024  1A42                     u234_20:
 10025  1A42                     i1l1889:
 10026                           
 10027                           ;main.c: 114:         TXREG = 43;
 10028  1A42  302B               	movlw	43
 10029  1A43  0099               	movwf	25	;volatile
 10030  1A44                     i1l1891:
 10031                           
 10032                           ;main.c: 115:         PORTA++;
 10033  1A44  3001               	movlw	1
 10034  1A45  00F0               	movwf	??_int_uart
 10035  1A46  0870               	movf	??_int_uart,w
 10036  1A47  0785               	addwf	5,f	;volatile
 10037  1A48                     i1l1893:
 10038                           
 10039                           ;main.c: 116:         _delay((unsigned long)((3000)*(8000000/4000.0)));
 10040  1A48  301F               	movlw	31
 10041  1A49  00F2               	movwf	??_int_uart+2
 10042  1A4A  3071               	movlw	113
 10043  1A4B  00F1               	movwf	??_int_uart+1
 10044  1A4C  301E               	movlw	30
 10045  1A4D  00F0               	movwf	??_int_uart
 10046  1A4E                     u592_27:
 10047  1A4E  0BF0               	decfsz	??_int_uart,f
 10048  1A4F  2A4E               	goto	u592_27
 10049  1A50  0BF1               	decfsz	??_int_uart+1,f
 10050  1A51  2A4E               	goto	u592_27
 10051  1A52  0BF2               	decfsz	??_int_uart+2,f
 10052  1A53  2A4E               	goto	u592_27
 10053  1A54  0000               	nop
 10054  1A55                     i1l109:	
 10055                           ;main.c: 117:     }
 10056                           
 10057                           
 10058                           ;main.c: 118:     if (RCREG == 45){
 10059  1A55  302D               	movlw	45
 10060  1A56  1283               	bcf	3,5	;RP0=0, select bank0
 10061  1A57  1303               	bcf	3,6	;RP1=0, select bank0
 10062  1A58  061A               	xorwf	26,w	;volatile
 10063  1A59  1D03               	btfss	3,2
 10064  1A5A  2A5C               	goto	u235_21
 10065  1A5B  2A5D               	goto	u235_20
 10066  1A5C                     u235_21:
 10067  1A5C  2A6E               	goto	i1l111
 10068  1A5D                     u235_20:
 10069  1A5D                     i1l1895:
 10070                           
 10071                           ;main.c: 119:         TXREG = 45;
 10072  1A5D  302D               	movlw	45
 10073  1A5E  0099               	movwf	25	;volatile
 10074  1A5F                     i1l1897:
 10075                           
 10076                           ;main.c: 120:         PORTA--;
 10077  1A5F  3001               	movlw	1
 10078  1A60  0285               	subwf	5,f	;volatile
 10079  1A61                     i1l1899:
 10080                           
 10081                           ;main.c: 121:         _delay((unsigned long)((3000)*(8000000/4000.0)));
 10082  1A61  301F               	movlw	31
 10083  1A62  00F2               	movwf	??_int_uart+2
 10084  1A63  3071               	movlw	113
 10085  1A64  00F1               	movwf	??_int_uart+1
 10086  1A65  301E               	movlw	30
 10087  1A66  00F0               	movwf	??_int_uart
 10088  1A67                     u593_27:
 10089  1A67  0BF0               	decfsz	??_int_uart,f
 10090  1A68  2A67               	goto	u593_27
 10091  1A69  0BF1               	decfsz	??_int_uart+1,f
 10092  1A6A  2A67               	goto	u593_27
 10093  1A6B  0BF2               	decfsz	??_int_uart+2,f
 10094  1A6C  2A67               	goto	u593_27
 10095  1A6D  0000               	nop
 10096  1A6E                     i1l111:
 10097  1A6E  0008               	return
 10098  1A6F                     __end_of_int_uart:
 10099                           
 10100                           	psect	text40
 10101  19DA                     __ptext40:	
 10102 ;; *************** function _int_adc *****************
 10103 ;; Defined at:
 10104 ;;		line 99 in file "main.c"
 10105 ;; Parameters:    Size  Location     Type
 10106 ;;		None
 10107 ;; Auto vars:     Size  Location     Type
 10108 ;;		None
 10109 ;; Return value:  Size  Location     Type
 10110 ;;                  1    wreg      void 
 10111 ;; Registers used:
 10112 ;;		wreg, status,2, status,0
 10113 ;; Tracked objects:
 10114 ;;		On entry : 0/0
 10115 ;;		On exit  : 0/0
 10116 ;;		Unchanged: 0/0
 10117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10118 ;;      Params:         0       0       0       0       0
 10119 ;;      Locals:         0       0       0       0       0
 10120 ;;      Temps:          1       0       0       0       0
 10121 ;;      Totals:         1       0       0       0       0
 10122 ;;Total ram usage:        1 bytes
 10123 ;; Hardware stack levels used:    1
 10124 ;; This function calls:
 10125 ;;		Nothing
 10126 ;; This function is called by:
 10127 ;;		_isr
 10128 ;; This function uses a non-reentrant model
 10129 ;;
 10130                           
 10131                           
 10132                           ;psect for function _int_adc
 10133  19DA                     _int_adc:
 10134  19DA                     i1l3219:	
 10135                           ;incstack = 0
 10136                           ; Regs used in _int_adc: [wreg+status,2+status,0]
 10137                           
 10138                           
 10139                           ;main.c: 100:     if(ADCON0bits.CHS == 5){
 10140  19DA  1283               	bcf	3,5	;RP0=0, select bank0
 10141  19DB  1303               	bcf	3,6	;RP1=0, select bank0
 10142  19DC  0C1F               	rrf	31,w	;volatile
 10143  19DD  00F0               	movwf	??_int_adc
 10144  19DE  0C70               	rrf	??_int_adc,w
 10145  19DF  390F               	andlw	15
 10146  19E0  3A05               	xorlw	5
 10147  19E1  1D03               	skipz
 10148  19E2  29E4               	goto	u525_21
 10149  19E3  29E5               	goto	u525_20
 10150  19E4                     u525_21:
 10151  19E4  29EC               	goto	i1l3223
 10152  19E5                     u525_20:
 10153  19E5                     i1l3221:
 10154                           
 10155                           ;main.c: 101:         V1 = ADRESH;
 10156  19E5  081E               	movf	30,w	;volatile
 10157  19E6  00F0               	movwf	??_int_adc
 10158  19E7  0870               	movf	??_int_adc,w
 10159  19E8  1683               	bsf	3,5	;RP0=1, select bank1
 10160  19E9  1303               	bcf	3,6	;RP1=0, select bank1
 10161  19EA  00E6               	movwf	_V1^(0+128)
 10162                           
 10163                           ;main.c: 103:         }
 10164  19EB  29F2               	goto	i1l3225
 10165  19EC                     i1l3223:
 10166                           
 10167                           ;main.c: 105:         V2 = ADRESH;
 10168  19EC  081E               	movf	30,w	;volatile
 10169  19ED  00F0               	movwf	??_int_adc
 10170  19EE  0870               	movf	??_int_adc,w
 10171  19EF  1683               	bsf	3,5	;RP0=1, select bank1
 10172  19F0  1303               	bcf	3,6	;RP1=0, select bank1
 10173  19F1  00E5               	movwf	_V2^(0+128)
 10174  19F2                     i1l3225:
 10175                           
 10176                           ;main.c: 107:     PIR1bits.ADIF = 0;
 10177  19F2  1283               	bcf	3,5	;RP0=0, select bank0
 10178  19F3  1303               	bcf	3,6	;RP1=0, select bank0
 10179  19F4  130C               	bcf	12,6	;volatile
 10180  19F5                     i1l106:
 10181  19F5  0008               	return
 10182  19F6                     __end_of_int_adc:
 10183  007E                     btemp	set	126	;btemp
 10184  007E                     wtemp0	set	126
 10185                           
 10186                           	psect	config
 10187                           
 10188                           ;Config register CONFIG1 @ 0x2007
 10189                           ;	Oscillator Selection bits
 10190                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
 10191                           ;	Watchdog Timer Enable bit
 10192                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10193                           ;	Power-up Timer Enable bit
 10194                           ;	PWRTE = OFF, PWRT disabled
 10195                           ;	RE3/MCLR pin function select bit
 10196                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10197                           ;	Code Protection bit
 10198                           ;	CP = OFF, Program memory code protection is disabled
 10199                           ;	Data Code Protection bit
 10200                           ;	CPD = OFF, Data memory code protection is disabled
 10201                           ;	Brown Out Reset Selection bits
 10202                           ;	BOREN = OFF, BOR disabled
 10203                           ;	Internal External Switchover bit
 10204                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10205                           ;	Fail-Safe Clock Monitor Enabled bit
 10206                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10207                           ;	Low Voltage Programming Enable bit
 10208                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10209                           ;	In-Circuit Debugger Mode bit
 10210                           ;	DEBUG = 0x1, unprogrammed default
 10211  2007                     	org	8199
 10212  2007  20D6               	dw	8406
 10213                           
 10214                           ;Config register CONFIG2 @ 0x2008
 10215                           ;	Brown-out Reset Selection bit
 10216                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10217                           ;	Flash Program Memory Self Write Enable bits
 10218                           ;	WRT = OFF, Write protection off
 10219  2008                     	org	8200
 10220  2008  3FFF               	dw	16383
 10221                           
 10222                           	psect	text1_split_1
 10223  0025                     u5440:
 10224  0025                     l3401:
 10225  0025  1683               	bsf	3,5	;RP0=1, select bank1
 10226  0026  1303               	bcf	3,6	;RP1=0, select bank1
 10227  0027  0850               	movf	(sprintf@fval+3)^(0+128),w
 10228  0028  1283               	bcf	3,5	;RP0=0, select bank0
 10229  0029  1303               	bcf	3,6	;RP1=0, select bank0
 10230  002A  00A3               	movwf	___fleq@ff1+3
 10231  002B  1683               	bsf	3,5	;RP0=1, select bank1
 10232  002C  1303               	bcf	3,6	;RP1=0, select bank1
 10233  002D  084F               	movf	(sprintf@fval+2)^(0+128),w
 10234  002E  1283               	bcf	3,5	;RP0=0, select bank0
 10235  002F  1303               	bcf	3,6	;RP1=0, select bank0
 10236  0030  00A2               	movwf	___fleq@ff1+2
 10237  0031  1683               	bsf	3,5	;RP0=1, select bank1
 10238  0032  1303               	bcf	3,6	;RP1=0, select bank1
 10239  0033  084E               	movf	(sprintf@fval+1)^(0+128),w
 10240  0034  1283               	bcf	3,5	;RP0=0, select bank0
 10241  0035  1303               	bcf	3,6	;RP1=0, select bank0
 10242  0036  00A1               	movwf	___fleq@ff1+1
 10243  0037  1683               	bsf	3,5	;RP0=1, select bank1
 10244  0038  1303               	bcf	3,6	;RP1=0, select bank1
 10245  0039  084D               	movf	sprintf@fval^(0+128),w
 10246  003A  1283               	bcf	3,5	;RP0=0, select bank0
 10247  003B  1303               	bcf	3,6	;RP1=0, select bank0
 10248  003C  00A0               	movwf	___fleq@ff1
 10249  003D  3000               	movlw	0
 10250  003E  00A7               	movwf	___fleq@ff2+3
 10251  003F  3000               	movlw	0
 10252  0040  00A6               	movwf	___fleq@ff2+2
 10253  0041  3000               	movlw	0
 10254  0042  00A5               	movwf	___fleq@ff2+1
 10255  0043  3000               	movlw	0
 10256  0044  00A4               	movwf	___fleq@ff2
 10257  0045  160A  158A  2402  120A  118A  	fcall	___fleq
 10258  004A  1803               	btfsc	3,0
 10259  004B  284D               	goto	u5451
 10260  004C  284E               	goto	u5450
 10261  004D                     u5451:
 10262  004D  2930               	goto	l3421
 10263  004E                     u5450:
 10264  004E                     l3403:
 10265  004E  1683               	bsf	3,5	;RP0=1, select bank1
 10266  004F  1303               	bcf	3,6	;RP1=0, select bank1
 10267  0050  0850               	movf	(sprintf@fval+3)^(0+128),w
 10268  0051  1283               	bcf	3,5	;RP0=0, select bank0
 10269  0052  1303               	bcf	3,6	;RP1=0, select bank0
 10270  0053  00DC               	movwf	___fltol@f1+3
 10271  0054  1683               	bsf	3,5	;RP0=1, select bank1
 10272  0055  1303               	bcf	3,6	;RP1=0, select bank1
 10273  0056  084F               	movf	(sprintf@fval+2)^(0+128),w
 10274  0057  1283               	bcf	3,5	;RP0=0, select bank0
 10275  0058  1303               	bcf	3,6	;RP1=0, select bank0
 10276  0059  00DB               	movwf	___fltol@f1+2
 10277  005A  1683               	bsf	3,5	;RP0=1, select bank1
 10278  005B  1303               	bcf	3,6	;RP1=0, select bank1
 10279  005C  084E               	movf	(sprintf@fval+1)^(0+128),w
 10280  005D  1283               	bcf	3,5	;RP0=0, select bank0
 10281  005E  1303               	bcf	3,6	;RP1=0, select bank0
 10282  005F  00DA               	movwf	___fltol@f1+1
 10283  0060  1683               	bsf	3,5	;RP0=1, select bank1
 10284  0061  1303               	bcf	3,6	;RP1=0, select bank1
 10285  0062  084D               	movf	sprintf@fval^(0+128),w
 10286  0063  1283               	bcf	3,5	;RP0=0, select bank0
 10287  0064  1303               	bcf	3,6	;RP1=0, select bank0
 10288  0065  00D9               	movwf	___fltol@f1
 10289  0066  160A  158A  2624  120A  118A  	fcall	___fltol
 10290  006B  1283               	bcf	3,5	;RP0=0, select bank0
 10291  006C  1303               	bcf	3,6	;RP1=0, select bank0
 10292  006D  085C               	movf	?___fltol+3,w
 10293  006E  045B               	iorwf	?___fltol+2,w
 10294  006F  045A               	iorwf	?___fltol+1,w
 10295  0070  0459               	iorwf	?___fltol,w
 10296  0071  1D03               	skipz
 10297  0072  2874               	goto	u5461
 10298  0073  2875               	goto	u5460
 10299  0074                     u5461:
 10300  0074  2930               	goto	l3421
 10301  0075                     u5460:
 10302  0075                     l3405:
 10303  0075  1683               	bsf	3,5	;RP0=1, select bank1
 10304  0076  1303               	bcf	3,6	;RP1=0, select bank1
 10305  0077  084C               	movf	(sprintf@eexp+1)^(0+128),w
 10306  0078  3A80               	xorlw	128
 10307  0079  00FF               	movwf	btemp+1
 10308  007A  3080               	movlw	128
 10309  007B  027F               	subwf	btemp+1,w
 10310  007C  1D03               	skipz
 10311  007D  2880               	goto	u5475
 10312  007E  3002               	movlw	2
 10313  007F  024B               	subwf	sprintf@eexp^(0+128),w
 10314  0080                     u5475:
 10315  0080  1C03               	skipc
 10316  0081  2883               	goto	u5471
 10317  0082  2884               	goto	u5470
 10318  0083                     u5471:
 10319  0083  2930               	goto	l3421
 10320  0084                     u5470:
 10321  0084                     l3407:
 10322                           
 10323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10324  0084  1683               	bsf	3,5	;RP0=1, select bank1
 10325  0085  1303               	bcf	3,6	;RP1=0, select bank1
 10326  0086  084A               	movf	(sprintf@tmpval+3)^(0+128),w
 10327  0087  1283               	bcf	3,5	;RP0=0, select bank0
 10328  0088  1303               	bcf	3,6	;RP1=0, select bank0
 10329  0089  00A3               	movwf	___flge@ff1+3
 10330  008A  1683               	bsf	3,5	;RP0=1, select bank1
 10331  008B  1303               	bcf	3,6	;RP1=0, select bank1
 10332  008C  0849               	movf	(sprintf@tmpval+2)^(0+128),w
 10333  008D  1283               	bcf	3,5	;RP0=0, select bank0
 10334  008E  1303               	bcf	3,6	;RP1=0, select bank0
 10335  008F  00A2               	movwf	___flge@ff1+2
 10336  0090  1683               	bsf	3,5	;RP0=1, select bank1
 10337  0091  1303               	bcf	3,6	;RP1=0, select bank1
 10338  0092  0848               	movf	(sprintf@tmpval+1)^(0+128),w
 10339  0093  1283               	bcf	3,5	;RP0=0, select bank0
 10340  0094  1303               	bcf	3,6	;RP1=0, select bank0
 10341  0095  00A1               	movwf	___flge@ff1+1
 10342  0096  1683               	bsf	3,5	;RP0=1, select bank1
 10343  0097  1303               	bcf	3,6	;RP1=0, select bank1
 10344  0098  0847               	movf	sprintf@tmpval^(0+128),w
 10345  0099  1283               	bcf	3,5	;RP0=0, select bank0
 10346  009A  1303               	bcf	3,6	;RP1=0, select bank0
 10347  009B  00A0               	movwf	___flge@ff1
 10348  009C  3040               	movlw	64
 10349  009D  00A7               	movwf	___flge@ff2+3
 10350  009E  3089               	movlw	137
 10351  009F  00A6               	movwf	___flge@ff2+2
 10352  00A0  3070               	movlw	112
 10353  00A1  00A5               	movwf	___flge@ff2+1
 10354  00A2  305F               	movlw	95
 10355  00A3  00A4               	movwf	___flge@ff2
 10356  00A4  160A  158A  26A0  120A  118A  	fcall	___flge
 10357  00A9  1803               	btfsc	3,0
 10358  00AA  28AC               	goto	u5481
 10359  00AB  28AD               	goto	u5480
 10360  00AC                     u5481:
 10361  00AC  28B6               	goto	l3411
 10362  00AD                     u5480:
 10363  00AD                     l3409:
 10364                           
 10365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10366  00AD  30F7               	movlw	247
 10367  00AE  1683               	bsf	3,5	;RP0=1, select bank1
 10368  00AF  1303               	bcf	3,6	;RP1=0, select bank1
 10369  00B0  07CB               	addwf	sprintf@eexp^(0+128),f
 10370  00B1  1803               	skipnc
 10371  00B2  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
 10372  00B3  30FF               	movlw	255
 10373  00B4  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
 10374                           
 10375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10376  00B5  28BE               	goto	l3413
 10377  00B6                     l3411:
 10378                           
 10379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10380  00B6  30F8               	movlw	248
 10381  00B7  1683               	bsf	3,5	;RP0=1, select bank1
 10382  00B8  1303               	bcf	3,6	;RP1=0, select bank1
 10383  00B9  07CB               	addwf	sprintf@eexp^(0+128),f
 10384  00BA  1803               	skipnc
 10385  00BB  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
 10386  00BC  30FF               	movlw	255
 10387  00BD  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
 10388  00BE                     l3413:
 10389                           
 10390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10391  00BE  084B               	movf	sprintf@eexp^(0+128),w
 10392  00BF  120A  158A  249D  120A  118A  	fcall	_scale
 10393  00C4  1283               	bcf	3,5	;RP0=0, select bank0
 10394  00C5  1303               	bcf	3,6	;RP1=0, select bank0
 10395  00C6  0849               	movf	?_scale+3,w
 10396  00C7  1683               	bsf	3,5	;RP0=1, select bank1
 10397  00C8  1303               	bcf	3,6	;RP1=0, select bank1
 10398  00C9  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
 10399  00CA  1283               	bcf	3,5	;RP0=0, select bank0
 10400  00CB  1303               	bcf	3,6	;RP1=0, select bank0
 10401  00CC  0848               	movf	?_scale+2,w
 10402  00CD  1683               	bsf	3,5	;RP0=1, select bank1
 10403  00CE  1303               	bcf	3,6	;RP1=0, select bank1
 10404  00CF  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
 10405  00D0  1283               	bcf	3,5	;RP0=0, select bank0
 10406  00D1  1303               	bcf	3,6	;RP1=0, select bank0
 10407  00D2  0847               	movf	?_scale+1,w
 10408  00D3  1683               	bsf	3,5	;RP0=1, select bank1
 10409  00D4  1303               	bcf	3,6	;RP1=0, select bank1
 10410  00D5  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
 10411  00D6  1283               	bcf	3,5	;RP0=0, select bank0
 10412  00D7  1303               	bcf	3,6	;RP1=0, select bank0
 10413  00D8  0846               	movf	?_scale,w
 10414  00D9  1683               	bsf	3,5	;RP0=1, select bank1
 10415  00DA  1303               	bcf	3,6	;RP1=0, select bank1
 10416  00DB  00C7               	movwf	sprintf@tmpval^(0+128)
 10417  00DC                     l3415:
 10418  00DC  0850               	movf	(sprintf@fval+3)^(0+128),w
 10419  00DD  1283               	bcf	3,5	;RP0=0, select bank0
 10420  00DE  1303               	bcf	3,6	;RP1=0, select bank0
 10421  00DF  00A3               	movwf	__div_to_l_@f1+3
 10422  00E0  1683               	bsf	3,5	;RP0=1, select bank1
 10423  00E1  1303               	bcf	3,6	;RP1=0, select bank1
 10424  00E2  084F               	movf	(sprintf@fval+2)^(0+128),w
 10425  00E3  1283               	bcf	3,5	;RP0=0, select bank0
 10426  00E4  1303               	bcf	3,6	;RP1=0, select bank0
 10427  00E5  00A2               	movwf	__div_to_l_@f1+2
 10428  00E6  1683               	bsf	3,5	;RP0=1, select bank1
 10429  00E7  1303               	bcf	3,6	;RP1=0, select bank1
 10430  00E8  084E               	movf	(sprintf@fval+1)^(0+128),w
 10431  00E9  1283               	bcf	3,5	;RP0=0, select bank0
 10432  00EA  1303               	bcf	3,6	;RP1=0, select bank0
 10433  00EB  00A1               	movwf	__div_to_l_@f1+1
 10434  00EC  1683               	bsf	3,5	;RP0=1, select bank1
 10435  00ED  1303               	bcf	3,6	;RP1=0, select bank1
 10436  00EE  084D               	movf	sprintf@fval^(0+128),w
 10437  00EF  1283               	bcf	3,5	;RP0=0, select bank0
 10438  00F0  1303               	bcf	3,6	;RP1=0, select bank0
 10439  00F1  00A0               	movwf	__div_to_l_@f1
 10440  00F2  1683               	bsf	3,5	;RP0=1, select bank1
 10441  00F3  1303               	bcf	3,6	;RP1=0, select bank1
 10442  00F4  084A               	movf	(sprintf@tmpval+3)^(0+128),w
 10443  00F5  1283               	bcf	3,5	;RP0=0, select bank0
 10444  00F6  1303               	bcf	3,6	;RP1=0, select bank0
 10445  00F7  00A7               	movwf	__div_to_l_@f2+3
 10446  00F8  1683               	bsf	3,5	;RP0=1, select bank1
 10447  00F9  1303               	bcf	3,6	;RP1=0, select bank1
 10448  00FA  0849               	movf	(sprintf@tmpval+2)^(0+128),w
 10449  00FB  1283               	bcf	3,5	;RP0=0, select bank0
 10450  00FC  1303               	bcf	3,6	;RP1=0, select bank0
 10451  00FD  00A6               	movwf	__div_to_l_@f2+2
 10452  00FE  1683               	bsf	3,5	;RP0=1, select bank1
 10453  00FF  1303               	bcf	3,6	;RP1=0, select bank1
 10454  0100  0848               	movf	(sprintf@tmpval+1)^(0+128),w
 10455  0101  1283               	bcf	3,5	;RP0=0, select bank0
 10456  0102  1303               	bcf	3,6	;RP1=0, select bank0
 10457  0103  00A5               	movwf	__div_to_l_@f2+1
 10458  0104  1683               	bsf	3,5	;RP0=1, select bank1
 10459  0105  1303               	bcf	3,6	;RP1=0, select bank1
 10460  0106  0847               	movf	sprintf@tmpval^(0+128),w
 10461  0107  1283               	bcf	3,5	;RP0=0, select bank0
 10462  0108  1303               	bcf	3,6	;RP1=0, select bank0
 10463  0109  00A4               	movwf	__div_to_l_@f2
 10464  010A  160A  118A  21B6  120A  118A  	fcall	__div_to_l_
 10465  010F  1283               	bcf	3,5	;RP0=0, select bank0
 10466  0110  1303               	bcf	3,6	;RP1=0, select bank0
 10467  0111  0823               	movf	?__div_to_l_+3,w
 10468  0112  1683               	bsf	3,5	;RP0=1, select bank1
 10469  0113  1303               	bcf	3,6	;RP1=0, select bank1
 10470  0114  00C2               	movwf	(sprintf@val+3)^(0+128)
 10471  0115  1283               	bcf	3,5	;RP0=0, select bank0
 10472  0116  1303               	bcf	3,6	;RP1=0, select bank0
 10473  0117  0822               	movf	?__div_to_l_+2,w
 10474  0118  1683               	bsf	3,5	;RP0=1, select bank1
 10475  0119  1303               	bcf	3,6	;RP1=0, select bank1
 10476  011A  00C1               	movwf	(sprintf@val+2)^(0+128)
 10477  011B  1283               	bcf	3,5	;RP0=0, select bank0
 10478  011C  1303               	bcf	3,6	;RP1=0, select bank0
 10479  011D  0821               	movf	?__div_to_l_+1,w
 10480  011E  1683               	bsf	3,5	;RP0=1, select bank1
 10481  011F  1303               	bcf	3,6	;RP1=0, select bank1
 10482  0120  00C0               	movwf	(sprintf@val+1)^(0+128)
 10483  0121  1283               	bcf	3,5	;RP0=0, select bank0
 10484  0122  1303               	bcf	3,6	;RP1=0, select bank0
 10485  0123  0820               	movf	?__div_to_l_,w
 10486  0124  1683               	bsf	3,5	;RP0=1, select bank1
 10487  0125  1303               	bcf	3,6	;RP1=0, select bank1
 10488  0126  00BF               	movwf	sprintf@val^(0+128)
 10489  0127                     l3419:
 10490                           
 10491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10492  0127  3000               	movlw	0
 10493  0128  00D0               	movwf	(sprintf@fval+3)^(0+128)
 10494  0129  3000               	movlw	0
 10495  012A  00CF               	movwf	(sprintf@fval+2)^(0+128)
 10496  012B  3000               	movlw	0
 10497  012C  00CE               	movwf	(sprintf@fval+1)^(0+128)
 10498  012D  3000               	movlw	0
 10499  012E  00CD               	movwf	sprintf@fval^(0+128)
 10500                           
 10501                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10502  012F  2996               	goto	l3427
 10503  0130                     l3421:
 10504                           
 10505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10506  0130  1683               	bsf	3,5	;RP0=1, select bank1
 10507  0131  1303               	bcf	3,6	;RP1=0, select bank1
 10508  0132  0850               	movf	(sprintf@fval+3)^(0+128),w
 10509  0133  1283               	bcf	3,5	;RP0=0, select bank0
 10510  0134  1303               	bcf	3,6	;RP1=0, select bank0
 10511  0135  00DC               	movwf	___fltol@f1+3
 10512  0136  1683               	bsf	3,5	;RP0=1, select bank1
 10513  0137  1303               	bcf	3,6	;RP1=0, select bank1
 10514  0138  084F               	movf	(sprintf@fval+2)^(0+128),w
 10515  0139  1283               	bcf	3,5	;RP0=0, select bank0
 10516  013A  1303               	bcf	3,6	;RP1=0, select bank0
 10517  013B  00DB               	movwf	___fltol@f1+2
 10518  013C  1683               	bsf	3,5	;RP0=1, select bank1
 10519  013D  1303               	bcf	3,6	;RP1=0, select bank1
 10520  013E  084E               	movf	(sprintf@fval+1)^(0+128),w
 10521  013F  1283               	bcf	3,5	;RP0=0, select bank0
 10522  0140  1303               	bcf	3,6	;RP1=0, select bank0
 10523  0141  00DA               	movwf	___fltol@f1+1
 10524  0142  1683               	bsf	3,5	;RP0=1, select bank1
 10525  0143  1303               	bcf	3,6	;RP1=0, select bank1
 10526  0144  084D               	movf	sprintf@fval^(0+128),w
 10527  0145  1283               	bcf	3,5	;RP0=0, select bank0
 10528  0146  1303               	bcf	3,6	;RP1=0, select bank0
 10529  0147  00D9               	movwf	___fltol@f1
 10530  0148  160A  158A  2624  120A  118A  	fcall	___fltol
 10531  014D  1283               	bcf	3,5	;RP0=0, select bank0
 10532  014E  1303               	bcf	3,6	;RP1=0, select bank0
 10533  014F  085C               	movf	?___fltol+3,w
 10534  0150  1683               	bsf	3,5	;RP0=1, select bank1
 10535  0151  1303               	bcf	3,6	;RP1=0, select bank1
 10536  0152  00C2               	movwf	(sprintf@val+3)^(0+128)
 10537  0153  1283               	bcf	3,5	;RP0=0, select bank0
 10538  0154  1303               	bcf	3,6	;RP1=0, select bank0
 10539  0155  085B               	movf	?___fltol+2,w
 10540  0156  1683               	bsf	3,5	;RP0=1, select bank1
 10541  0157  1303               	bcf	3,6	;RP1=0, select bank1
 10542  0158  00C1               	movwf	(sprintf@val+2)^(0+128)
 10543  0159  1283               	bcf	3,5	;RP0=0, select bank0
 10544  015A  1303               	bcf	3,6	;RP1=0, select bank0
 10545  015B  085A               	movf	?___fltol+1,w
 10546  015C  1683               	bsf	3,5	;RP0=1, select bank1
 10547  015D  1303               	bcf	3,6	;RP1=0, select bank1
 10548  015E  00C0               	movwf	(sprintf@val+1)^(0+128)
 10549  015F  1283               	bcf	3,5	;RP0=0, select bank0
 10550  0160  1303               	bcf	3,6	;RP1=0, select bank0
 10551  0161  0859               	movf	?___fltol,w
 10552  0162  1683               	bsf	3,5	;RP0=1, select bank1
 10553  0163  1303               	bcf	3,6	;RP1=0, select bank1
 10554  0164  00BF               	movwf	sprintf@val^(0+128)
 10555  0165                     l3423:
 10556                           
 10557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10558  0165  0842               	movf	(sprintf@val+3)^(0+128),w
 10559  0166  00F8               	movwf	___xxtofl@val+3
 10560  0167  0841               	movf	(sprintf@val+2)^(0+128),w
 10561  0168  00F7               	movwf	___xxtofl@val+2
 10562  0169  0840               	movf	(sprintf@val+1)^(0+128),w
 10563  016A  00F6               	movwf	___xxtofl@val+1
 10564  016B  083F               	movf	sprintf@val^(0+128),w
 10565  016C  00F5               	movwf	___xxtofl@val
 10566  016D  3000               	movlw	0
 10567  016E  160A  158A  2744  120A  118A  	fcall	___xxtofl
 10568  0173  0878               	movf	?___xxtofl+3,w
 10569  0174  1683               	bsf	3,5	;RP0=1, select bank1
 10570  0175  1303               	bcf	3,6	;RP1=0, select bank1
 10571  0176  00A3               	movwf	(___flsub@a+3)^(0+128)
 10572  0177  0877               	movf	?___xxtofl+2,w
 10573  0178  00A2               	movwf	(___flsub@a+2)^(0+128)
 10574  0179  0876               	movf	?___xxtofl+1,w
 10575  017A  00A1               	movwf	(___flsub@a+1)^(0+128)
 10576  017B  0875               	movf	?___xxtofl,w
 10577  017C  00A0               	movwf	___flsub@a^(0+128)
 10578  017D  0850               	movf	(sprintf@fval+3)^(0+128),w
 10579  017E  00A7               	movwf	(___flsub@b+3)^(0+128)
 10580  017F  084F               	movf	(sprintf@fval+2)^(0+128),w
 10581  0180  00A6               	movwf	(___flsub@b+2)^(0+128)
 10582  0181  084E               	movf	(sprintf@fval+1)^(0+128),w
 10583  0182  00A5               	movwf	(___flsub@b+1)^(0+128)
 10584  0183  084D               	movf	sprintf@fval^(0+128),w
 10585  0184  00A4               	movwf	___flsub@b^(0+128)
 10586  0185  160A  158A  2452  120A  118A  	fcall	___flsub
 10587  018A  1683               	bsf	3,5	;RP0=1, select bank1
 10588  018B  1303               	bcf	3,6	;RP1=0, select bank1
 10589  018C  0823               	movf	(?___flsub+3)^(0+128),w
 10590  018D  00D0               	movwf	(sprintf@fval+3)^(0+128)
 10591  018E  0822               	movf	(?___flsub+2)^(0+128),w
 10592  018F  00CF               	movwf	(sprintf@fval+2)^(0+128)
 10593  0190  0821               	movf	(?___flsub+1)^(0+128),w
 10594  0191  00CE               	movwf	(sprintf@fval+1)^(0+128)
 10595  0192  0820               	movf	?___flsub^(0+128),w
 10596  0193  00CD               	movwf	sprintf@fval^(0+128)
 10597  0194                     l3425:
 10598                           
 10599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10600  0194  01CB               	clrf	sprintf@eexp^(0+128)
 10601  0195  01CC               	clrf	(sprintf@eexp+1)^(0+128)
 10602  0196                     l3427:
 10603                           
 10604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10605  0196  01D4               	clrf	sprintf@c^(0+128)
 10606  0197  0AD4               	incf	sprintf@c^(0+128),f
 10607  0198                     l3433:
 10608                           
 10609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10610  0198  0854               	movf	sprintf@c^(0+128),w
 10611  0199  00B5               	movwf	??_sprintf^(0+128)
 10612  019A  3001               	movlw	1
 10613  019B                     u5495:
 10614  019B  1003               	clrc
 10615  019C  0DB5               	rlf	??_sprintf^(0+128),f
 10616  019D  3EFF               	addlw	-1
 10617  019E  1D03               	skipz
 10618  019F  299B               	goto	u5495
 10619  01A0  1003               	clrc
 10620  01A1  0D35               	rlf	??_sprintf^(0+128),w
 10621  01A2  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10622  01A3  0084               	movwf	4
 10623  01A4  160A  118A  200A  120A  118A  	fcall	stringdir
 10624  01A9  00B6               	movwf	(??_sprintf+1)^(0+128)
 10625  01AA  160A  118A  200A  120A  118A  	fcall	stringdir
 10626  01AF  00B7               	movwf	((??_sprintf+1)^(0+128)+1)
 10627  01B0  160A  118A  200A  120A  118A  	fcall	stringdir
 10628  01B5  00B8               	movwf	((??_sprintf+1)^(0+128)+2)
 10629  01B6  160A  118A  200A  120A  118A  	fcall	stringdir
 10630  01BB  00B9               	movwf	((??_sprintf+1)^(0+128)+3)
 10631  01BC  0839               	movf	(??_sprintf+4)^(0+128),w
 10632  01BD  0242               	subwf	(sprintf@val+3)^(0+128),w
 10633  01BE  1D03               	skipz
 10634  01BF  29CA               	goto	u5505
 10635  01C0  0838               	movf	(??_sprintf+3)^(0+128),w
 10636  01C1  0241               	subwf	(sprintf@val+2)^(0+128),w
 10637  01C2  1D03               	skipz
 10638  01C3  29CA               	goto	u5505
 10639  01C4  0837               	movf	(??_sprintf+2)^(0+128),w
 10640  01C5  0240               	subwf	(sprintf@val+1)^(0+128),w
 10641  01C6  1D03               	skipz
 10642  01C7  29CA               	goto	u5505
 10643  01C8  0836               	movf	(??_sprintf+1)^(0+128),w
 10644  01C9  023F               	subwf	sprintf@val^(0+128),w
 10645  01CA                     u5505:
 10646  01CA  1803               	skipnc
 10647  01CB  29CD               	goto	u5501
 10648  01CC  29CE               	goto	u5500
 10649  01CD                     u5501:
 10650  01CD  29CF               	goto	l3437
 10651  01CE                     u5500:
 10652  01CE  29D9               	goto	l3439
 10653  01CF                     l3437:
 10654  01CF  3001               	movlw	1
 10655  01D0  00B5               	movwf	??_sprintf^(0+128)
 10656  01D1  0835               	movf	??_sprintf^(0+128),w
 10657  01D2  07D4               	addwf	sprintf@c^(0+128),f
 10658  01D3  300A               	movlw	10
 10659  01D4  0654               	xorwf	sprintf@c^(0+128),w
 10660  01D5  1D03               	btfss	3,2
 10661  01D6  29D8               	goto	u5511
 10662  01D7  29D9               	goto	u5510
 10663  01D8                     u5511:
 10664  01D8  2998               	goto	l3433
 10665  01D9                     u5510:
 10666  01D9                     l3439:
 10667                           
 10668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10669  01D9  0854               	movf	sprintf@c^(0+128),w
 10670  01DA  0752               	addwf	sprintf@prec^(0+128),w
 10671  01DB  00B5               	movwf	??_sprintf^(0+128)
 10672  01DC  0853               	movf	(sprintf@prec+1)^(0+128),w
 10673  01DD  1803               	skipnc
 10674  01DE  0A53               	incf	(sprintf@prec+1)^(0+128),w
 10675  01DF  00B6               	movwf	(??_sprintf^(0+128)+1)
 10676  01E0  084B               	movf	sprintf@eexp^(0+128),w
 10677  01E1  0735               	addwf	??_sprintf^(0+128),w
 10678  01E2  00B7               	movwf	(??_sprintf+2)^(0+128)
 10679  01E3  084C               	movf	(sprintf@eexp+1)^(0+128),w
 10680  01E4  1803               	skipnc
 10681  01E5  0A4C               	incf	(sprintf@eexp+1)^(0+128),w
 10682  01E6  0736               	addwf	(??_sprintf+1)^(0+128),w
 10683  01E7  00B8               	movwf	(??_sprintf+3)^(0+128)
 10684  01E8  0837               	movf	(??_sprintf+2)^(0+128),w
 10685  01E9  02C5               	subwf	sprintf@width^(0+128),f
 10686  01EA  0838               	movf	(??_sprintf+3)^(0+128),w
 10687  01EB  1C03               	skipc
 10688  01EC  03C6               	decf	(sprintf@width+1)^(0+128),f
 10689  01ED  02C6               	subwf	(sprintf@width+1)^(0+128),f
 10690                           
 10691                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10692  01EE  0852               	movf	sprintf@prec^(0+128),w
 10693  01EF  0453               	iorwf	(sprintf@prec+1)^(0+128),w
 10694  01F0  1903               	btfsc	3,2
 10695  01F1  29F3               	goto	u5521
 10696  01F2  29F4               	goto	u5520
 10697  01F3                     u5521:
 10698  01F3  29FA               	goto	l3443
 10699  01F4                     u5520:
 10700  01F4                     l3441:
 10701                           
 10702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10703  01F4  30FF               	movlw	255
 10704  01F5  07C5               	addwf	sprintf@width^(0+128),f
 10705  01F6  1803               	skipnc
 10706  01F7  0AC6               	incf	(sprintf@width+1)^(0+128),f
 10707  01F8  30FF               	movlw	255
 10708  01F9  07C6               	addwf	(sprintf@width+1)^(0+128),f
 10709  01FA                     l3443:
 10710                           
 10711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10712  01FA  3003               	movlw	3
 10713  01FB  0543               	andwf	sprintf@flag^(0+128),w
 10714  01FC  00B5               	movwf	??_sprintf^(0+128)
 10715  01FD  3000               	movlw	0
 10716  01FE  0544               	andwf	(sprintf@flag+1)^(0+128),w
 10717  01FF  00B6               	movwf	(??_sprintf+1)^(0+128)
 10718  0200  0835               	movf	??_sprintf^(0+128),w
 10719  0201  0436               	iorwf	(??_sprintf^(0+128)+1),w
 10720  0202  1903               	btfsc	3,2
 10721  0203  2A05               	goto	u5531
 10722  0204  2A06               	goto	u5530
 10723  0205                     u5531:
 10724  0205  2A1B               	goto	l3453
 10725  0206                     u5530:
 10726  0206                     l3445:
 10727                           
 10728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10729  0206  30FF               	movlw	255
 10730  0207  07C5               	addwf	sprintf@width^(0+128),f
 10731  0208  1803               	skipnc
 10732  0209  0AC6               	incf	(sprintf@width+1)^(0+128),f
 10733  020A  30FF               	movlw	255
 10734  020B  07C6               	addwf	(sprintf@width+1)^(0+128),f
 10735  020C  2A1B               	goto	l3453
 10736  020D                     l3447:
 10737                           
 10738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10739  020D  3020               	movlw	32
 10740  020E  1683               	bsf	3,5	;RP0=1, select bank1
 10741  020F  1303               	bcf	3,6	;RP1=0, select bank1
 10742  0210  00B5               	movwf	??_sprintf^(0+128)
 10743  0211  0851               	movf	sprintf@sp^(0+128),w
 10744  0212  0084               	movwf	4
 10745  0213  0835               	movf	??_sprintf^(0+128),w
 10746  0214  1783               	bsf	3,7	;select IRP bank2
 10747  0215  0080               	movwf	0
 10748  0216                     l3449:
 10749  0216  3001               	movlw	1
 10750  0217  00B5               	movwf	??_sprintf^(0+128)
 10751  0218  0835               	movf	??_sprintf^(0+128),w
 10752  0219  07D1               	addwf	sprintf@sp^(0+128),f
 10753  021A  2A06               	goto	l3445
 10754  021B                     l3453:
 10755                           
 10756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10757  021B  0846               	movf	(sprintf@width+1)^(0+128),w
 10758  021C  3A80               	xorlw	128
 10759  021D  00FF               	movwf	btemp+1
 10760  021E  3080               	movlw	128
 10761  021F  027F               	subwf	btemp+1,w
 10762  0220  1D03               	skipz
 10763  0221  2A24               	goto	u5545
 10764  0222  3001               	movlw	1
 10765  0223  0245               	subwf	sprintf@width^(0+128),w
 10766  0224                     u5545:
 10767  0224  1803               	skipnc
 10768  0225  2A27               	goto	u5541
 10769  0226  2A28               	goto	u5540
 10770  0227                     u5541:
 10771  0227  2A0D               	goto	l3447
 10772  0228                     u5540:
 10773  0228                     l3455:
 10774                           
 10775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10776  0228  3003               	movlw	3
 10777  0229  1683               	bsf	3,5	;RP0=1, select bank1
 10778  022A  1303               	bcf	3,6	;RP1=0, select bank1
 10779  022B  0543               	andwf	sprintf@flag^(0+128),w
 10780  022C  00B5               	movwf	??_sprintf^(0+128)
 10781  022D  3000               	movlw	0
 10782  022E  0544               	andwf	(sprintf@flag+1)^(0+128),w
 10783  022F  00B6               	movwf	(??_sprintf+1)^(0+128)
 10784  0230  0835               	movf	??_sprintf^(0+128),w
 10785  0231  0436               	iorwf	(??_sprintf^(0+128)+1),w
 10786  0232  1903               	btfsc	3,2
 10787  0233  2A35               	goto	u5551
 10788  0234  2A36               	goto	u5550
 10789  0235                     u5551:
 10790  0235  2AE8               	goto	l390
 10791  0236                     u5550:
 10792  0236                     l3457:
 10793                           
 10794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10795  0236  302D               	movlw	45
 10796  0237  00B5               	movwf	??_sprintf^(0+128)
 10797  0238  0851               	movf	sprintf@sp^(0+128),w
 10798  0239  0084               	movwf	4
 10799  023A  0835               	movf	??_sprintf^(0+128),w
 10800  023B  1783               	bsf	3,7	;select IRP bank2
 10801  023C  0080               	movwf	0
 10802  023D                     l3459:
 10803  023D  3001               	movlw	1
 10804  023E  00B5               	movwf	??_sprintf^(0+128)
 10805  023F  0835               	movf	??_sprintf^(0+128),w
 10806  0240  07D1               	addwf	sprintf@sp^(0+128),f
 10807  0241  2AE8               	goto	l390
 10808  0242                     l3461:
 10809                           
 10810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10811  0242  0854               	movf	sprintf@c^(0+128),w
 10812  0243  00B5               	movwf	??_sprintf^(0+128)
 10813  0244  3001               	movlw	1
 10814  0245                     u5565:
 10815  0245  1003               	clrc
 10816  0246  0DB5               	rlf	??_sprintf^(0+128),f
 10817  0247  3EFF               	addlw	-1
 10818  0248  1D03               	skipz
 10819  0249  2A45               	goto	u5565
 10820  024A  1003               	clrc
 10821  024B  0D35               	rlf	??_sprintf^(0+128),w
 10822  024C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10823  024D  0084               	movwf	4
 10824  024E  160A  118A  200A  120A  118A  	fcall	stringdir
 10825  0253  1283               	bcf	3,5	;RP0=0, select bank0
 10826  0254  1303               	bcf	3,6	;RP1=0, select bank0
 10827  0255  00A0               	movwf	___lldiv@divisor
 10828  0256  160A  118A  200A  120A  118A  	fcall	stringdir
 10829  025B  00A1               	movwf	___lldiv@divisor+1
 10830  025C  160A  118A  200A  120A  118A  	fcall	stringdir
 10831  0261  00A2               	movwf	___lldiv@divisor+2
 10832  0262  160A  118A  200A  120A  118A  	fcall	stringdir
 10833  0267  00A3               	movwf	___lldiv@divisor+3
 10834  0268  1683               	bsf	3,5	;RP0=1, select bank1
 10835  0269  1303               	bcf	3,6	;RP1=0, select bank1
 10836  026A  0842               	movf	(sprintf@val+3)^(0+128),w
 10837  026B  1283               	bcf	3,5	;RP0=0, select bank0
 10838  026C  1303               	bcf	3,6	;RP1=0, select bank0
 10839  026D  00A7               	movwf	___lldiv@dividend+3
 10840  026E  1683               	bsf	3,5	;RP0=1, select bank1
 10841  026F  1303               	bcf	3,6	;RP1=0, select bank1
 10842  0270  0841               	movf	(sprintf@val+2)^(0+128),w
 10843  0271  1283               	bcf	3,5	;RP0=0, select bank0
 10844  0272  1303               	bcf	3,6	;RP1=0, select bank0
 10845  0273  00A6               	movwf	___lldiv@dividend+2
 10846  0274  1683               	bsf	3,5	;RP0=1, select bank1
 10847  0275  1303               	bcf	3,6	;RP1=0, select bank1
 10848  0276  0840               	movf	(sprintf@val+1)^(0+128),w
 10849  0277  1283               	bcf	3,5	;RP0=0, select bank0
 10850  0278  1303               	bcf	3,6	;RP1=0, select bank0
 10851  0279  00A5               	movwf	___lldiv@dividend+1
 10852  027A  1683               	bsf	3,5	;RP0=1, select bank1
 10853  027B  1303               	bcf	3,6	;RP1=0, select bank1
 10854  027C  083F               	movf	sprintf@val^(0+128),w
 10855  027D  1283               	bcf	3,5	;RP0=0, select bank0
 10856  027E  1303               	bcf	3,6	;RP1=0, select bank0
 10857  027F  00A4               	movwf	___lldiv@dividend
 10858  0280  160A  158A  2553  120A  118A  	fcall	___lldiv
 10859  0285  1283               	bcf	3,5	;RP0=0, select bank0
 10860  0286  1303               	bcf	3,6	;RP1=0, select bank0
 10861  0287  0823               	movf	?___lldiv+3,w
 10862  0288  1683               	bsf	3,5	;RP0=1, select bank1
 10863  0289  1303               	bcf	3,6	;RP1=0, select bank1
 10864  028A  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
 10865  028B  1283               	bcf	3,5	;RP0=0, select bank0
 10866  028C  1303               	bcf	3,6	;RP1=0, select bank0
 10867  028D  0822               	movf	?___lldiv+2,w
 10868  028E  1683               	bsf	3,5	;RP0=1, select bank1
 10869  028F  1303               	bcf	3,6	;RP1=0, select bank1
 10870  0290  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
 10871  0291  1283               	bcf	3,5	;RP0=0, select bank0
 10872  0292  1303               	bcf	3,6	;RP1=0, select bank0
 10873  0293  0821               	movf	?___lldiv+1,w
 10874  0294  1683               	bsf	3,5	;RP0=1, select bank1
 10875  0295  1303               	bcf	3,6	;RP1=0, select bank1
 10876  0296  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
 10877  0297  1283               	bcf	3,5	;RP0=0, select bank0
 10878  0298  1303               	bcf	3,6	;RP1=0, select bank0
 10879  0299  0820               	movf	?___lldiv,w
 10880  029A  1683               	bsf	3,5	;RP0=1, select bank1
 10881  029B  1303               	bcf	3,6	;RP1=0, select bank1
 10882  029C  00C7               	movwf	sprintf@tmpval^(0+128)
 10883  029D                     l3463:
 10884                           
 10885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10886  029D  3000               	movlw	0
 10887  029E  1283               	bcf	3,5	;RP0=0, select bank0
 10888  029F  1303               	bcf	3,6	;RP1=0, select bank0
 10889  02A0  00A3               	movwf	___llmod@divisor+3
 10890  02A1  3000               	movlw	0
 10891  02A2  00A2               	movwf	___llmod@divisor+2
 10892  02A3  3000               	movlw	0
 10893  02A4  00A1               	movwf	___llmod@divisor+1
 10894  02A5  300A               	movlw	10
 10895  02A6  00A0               	movwf	___llmod@divisor
 10896  02A7  1683               	bsf	3,5	;RP0=1, select bank1
 10897  02A8  1303               	bcf	3,6	;RP1=0, select bank1
 10898  02A9  084A               	movf	(sprintf@tmpval+3)^(0+128),w
 10899  02AA  1283               	bcf	3,5	;RP0=0, select bank0
 10900  02AB  1303               	bcf	3,6	;RP1=0, select bank0
 10901  02AC  00A7               	movwf	___llmod@dividend+3
 10902  02AD  1683               	bsf	3,5	;RP0=1, select bank1
 10903  02AE  1303               	bcf	3,6	;RP1=0, select bank1
 10904  02AF  0849               	movf	(sprintf@tmpval+2)^(0+128),w
 10905  02B0  1283               	bcf	3,5	;RP0=0, select bank0
 10906  02B1  1303               	bcf	3,6	;RP1=0, select bank0
 10907  02B2  00A6               	movwf	___llmod@dividend+2
 10908  02B3  1683               	bsf	3,5	;RP0=1, select bank1
 10909  02B4  1303               	bcf	3,6	;RP1=0, select bank1
 10910  02B5  0848               	movf	(sprintf@tmpval+1)^(0+128),w
 10911  02B6  1283               	bcf	3,5	;RP0=0, select bank0
 10912  02B7  1303               	bcf	3,6	;RP1=0, select bank0
 10913  02B8  00A5               	movwf	___llmod@dividend+1
 10914  02B9  1683               	bsf	3,5	;RP0=1, select bank1
 10915  02BA  1303               	bcf	3,6	;RP1=0, select bank1
 10916  02BB  0847               	movf	sprintf@tmpval^(0+128),w
 10917  02BC  1283               	bcf	3,5	;RP0=0, select bank0
 10918  02BD  1303               	bcf	3,6	;RP1=0, select bank0
 10919  02BE  00A4               	movwf	___llmod@dividend
 10920  02BF  160A  158A  24A2  120A  118A  	fcall	___llmod
 10921  02C4  1283               	bcf	3,5	;RP0=0, select bank0
 10922  02C5  1303               	bcf	3,6	;RP1=0, select bank0
 10923  02C6  0823               	movf	?___llmod+3,w
 10924  02C7  1683               	bsf	3,5	;RP0=1, select bank1
 10925  02C8  1303               	bcf	3,6	;RP1=0, select bank1
 10926  02C9  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
 10927  02CA  1283               	bcf	3,5	;RP0=0, select bank0
 10928  02CB  1303               	bcf	3,6	;RP1=0, select bank0
 10929  02CC  0822               	movf	?___llmod+2,w
 10930  02CD  1683               	bsf	3,5	;RP0=1, select bank1
 10931  02CE  1303               	bcf	3,6	;RP1=0, select bank1
 10932  02CF  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
 10933  02D0  1283               	bcf	3,5	;RP0=0, select bank0
 10934  02D1  1303               	bcf	3,6	;RP1=0, select bank0
 10935  02D2  0821               	movf	?___llmod+1,w
 10936  02D3  1683               	bsf	3,5	;RP0=1, select bank1
 10937  02D4  1303               	bcf	3,6	;RP1=0, select bank1
 10938  02D5  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
 10939  02D6  1283               	bcf	3,5	;RP0=0, select bank0
 10940  02D7  1303               	bcf	3,6	;RP1=0, select bank0
 10941  02D8  0820               	movf	?___llmod,w
 10942  02D9  1683               	bsf	3,5	;RP0=1, select bank1
 10943  02DA  1303               	bcf	3,6	;RP1=0, select bank1
 10944  02DB  00C7               	movwf	sprintf@tmpval^(0+128)
 10945  02DC                     l3465:
 10946                           
 10947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10948  02DC  0847               	movf	sprintf@tmpval^(0+128),w
 10949  02DD  3E30               	addlw	48
 10950  02DE  00B5               	movwf	??_sprintf^(0+128)
 10951  02DF  0851               	movf	sprintf@sp^(0+128),w
 10952  02E0  0084               	movwf	4
 10953  02E1  0835               	movf	??_sprintf^(0+128),w
 10954  02E2  1783               	bsf	3,7	;select IRP bank2
 10955  02E3  0080               	movwf	0
 10956  02E4  3001               	movlw	1
 10957  02E5  00B5               	movwf	??_sprintf^(0+128)
 10958  02E6  0835               	movf	??_sprintf^(0+128),w
 10959  02E7  07D1               	addwf	sprintf@sp^(0+128),f
 10960  02E8                     l390:	
 10961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10962                           
 10963                           
 10964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10965  02E8  3001               	movlw	1
 10966  02E9  02D4               	subwf	sprintf@c^(0+128),f
 10967  02EA  0A54               	incf	sprintf@c^(0+128),w
 10968  02EB  1D03               	btfss	3,2
 10969  02EC  2AEE               	goto	u5571
 10970  02ED  2AEF               	goto	u5570
 10971  02EE                     u5571:
 10972  02EE  2A42               	goto	l3461
 10973  02EF                     u5570:
 10974  02EF  2B03               	goto	l3473
 10975  02F0                     l3467:
 10976                           
 10977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10978  02F0  3030               	movlw	48
 10979  02F1  1683               	bsf	3,5	;RP0=1, select bank1
 10980  02F2  1303               	bcf	3,6	;RP1=0, select bank1
 10981  02F3  00B5               	movwf	??_sprintf^(0+128)
 10982  02F4  0851               	movf	sprintf@sp^(0+128),w
 10983  02F5  0084               	movwf	4
 10984  02F6  0835               	movf	??_sprintf^(0+128),w
 10985  02F7  1783               	bsf	3,7	;select IRP bank2
 10986  02F8  0080               	movwf	0
 10987  02F9                     l3469:
 10988  02F9  3001               	movlw	1
 10989  02FA  00B5               	movwf	??_sprintf^(0+128)
 10990  02FB  0835               	movf	??_sprintf^(0+128),w
 10991  02FC  07D1               	addwf	sprintf@sp^(0+128),f
 10992  02FD                     l3471:
 10993                           
 10994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10995  02FD  30FF               	movlw	255
 10996  02FE  07CB               	addwf	sprintf@eexp^(0+128),f
 10997  02FF  1803               	skipnc
 10998  0300  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
 10999  0301  30FF               	movlw	255
 11000  0302  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
 11001  0303                     l3473:
 11002                           
 11003                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 11004  0303  084C               	movf	(sprintf@eexp+1)^(0+128),w
 11005  0304  3A80               	xorlw	128
 11006  0305  00FF               	movwf	btemp+1
 11007  0306  3080               	movlw	128
 11008  0307  027F               	subwf	btemp+1,w
 11009  0308  1D03               	skipz
 11010  0309  2B0C               	goto	u5585
 11011  030A  3001               	movlw	1
 11012  030B  024B               	subwf	sprintf@eexp^(0+128),w
 11013  030C                     u5585:
 11014  030C  1803               	skipnc
 11015  030D  2B0F               	goto	u5581
 11016  030E  2B10               	goto	u5580
 11017  030F                     u5581:
 11018  030F  2AF0               	goto	l3467
 11019  0310                     u5580:
 11020  0310                     l3475:
 11021                           
 11022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11023  0310  1683               	bsf	3,5	;RP0=1, select bank1
 11024  0311  1303               	bcf	3,6	;RP1=0, select bank1
 11025  0312  0853               	movf	(sprintf@prec+1)^(0+128),w
 11026  0313  3A80               	xorlw	128
 11027  0314  00FF               	movwf	btemp+1
 11028  0315  3080               	movlw	128
 11029  0316  027F               	subwf	btemp+1,w
 11030  0317  1D03               	skipz
 11031  0318  2B1B               	goto	u5595
 11032  0319  3009               	movlw	9
 11033  031A  0252               	subwf	sprintf@prec^(0+128),w
 11034  031B                     u5595:
 11035  031B  1C03               	skipc
 11036  031C  2B1E               	goto	u5591
 11037  031D  2B1F               	goto	u5590
 11038  031E                     u5591:
 11039  031E  2B26               	goto	l3479
 11040  031F                     u5590:
 11041  031F                     l3477:
 11042                           
 11043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 11044  031F  3008               	movlw	8
 11045  0320  1683               	bsf	3,5	;RP0=1, select bank1
 11046  0321  1303               	bcf	3,6	;RP1=0, select bank1
 11047  0322  00B5               	movwf	??_sprintf^(0+128)
 11048  0323  0835               	movf	??_sprintf^(0+128),w
 11049  0324  00D4               	movwf	sprintf@c^(0+128)
 11050  0325  2B2C               	goto	l397
 11051  0326                     l3479:
 11052                           
 11053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 11054  0326  1683               	bsf	3,5	;RP0=1, select bank1
 11055  0327  1303               	bcf	3,6	;RP1=0, select bank1
 11056  0328  0852               	movf	sprintf@prec^(0+128),w
 11057  0329  00B5               	movwf	??_sprintf^(0+128)
 11058  032A  0835               	movf	??_sprintf^(0+128),w
 11059  032B  00D4               	movwf	sprintf@c^(0+128)
 11060  032C                     l397:
 11061                           
 11062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 11063  032C  0854               	movf	sprintf@c^(0+128),w
 11064  032D  00B5               	movwf	??_sprintf^(0+128)
 11065  032E  01B6               	clrf	(??_sprintf^(0+128)+1)
 11066  032F  0835               	movf	??_sprintf^(0+128),w
 11067  0330  02D2               	subwf	sprintf@prec^(0+128),f
 11068  0331  0836               	movf	(??_sprintf+1)^(0+128),w
 11069  0332  1C03               	skipc
 11070  0333  03D3               	decf	(sprintf@prec+1)^(0+128),f
 11071  0334  02D3               	subwf	(sprintf@prec+1)^(0+128),f
 11072  0335                     l3481:
 11073                           
 11074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 11075  0335  0854               	movf	sprintf@c^(0+128),w
 11076  0336  1903               	btfsc	3,2
 11077  0337  2B39               	goto	u5601
 11078  0338  2B3A               	goto	u5600
 11079  0339                     u5601:
 11080  0339  2B45               	goto	l3487
 11081  033A                     u5600:
 11082  033A                     l3483:
 11083                           
 11084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 11085  033A  302E               	movlw	46
 11086  033B  00B5               	movwf	??_sprintf^(0+128)
 11087  033C  0851               	movf	sprintf@sp^(0+128),w
 11088  033D  0084               	movwf	4
 11089  033E  0835               	movf	??_sprintf^(0+128),w
 11090  033F  1783               	bsf	3,7	;select IRP bank2
 11091  0340  0080               	movwf	0
 11092  0341                     l3485:
 11093  0341  3001               	movlw	1
 11094  0342  00B5               	movwf	??_sprintf^(0+128)
 11095  0343  0835               	movf	??_sprintf^(0+128),w
 11096  0344  07D1               	addwf	sprintf@sp^(0+128),f
 11097  0345                     l3487:
 11098                           
 11099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11100  0345  0854               	movf	sprintf@c^(0+128),w
 11101  0346  120A  158A  249D  120A  118A  	fcall	_scale
 11102  034B  1283               	bcf	3,5	;RP0=0, select bank0
 11103  034C  1303               	bcf	3,6	;RP1=0, select bank0
 11104  034D  0849               	movf	?_scale+3,w
 11105  034E  1683               	bsf	3,5	;RP0=1, select bank1
 11106  034F  1303               	bcf	3,6	;RP1=0, select bank1
 11107  0350  00BD               	movwf	(_sprintf$1211+3)^(0+128)
 11108  0351  1283               	bcf	3,5	;RP0=0, select bank0
 11109  0352  1303               	bcf	3,6	;RP1=0, select bank0
 11110  0353  0848               	movf	?_scale+2,w
 11111  0354  1683               	bsf	3,5	;RP0=1, select bank1
 11112  0355  1303               	bcf	3,6	;RP1=0, select bank1
 11113  0356  00BC               	movwf	(_sprintf$1211+2)^(0+128)
 11114  0357  1283               	bcf	3,5	;RP0=0, select bank0
 11115  0358  1303               	bcf	3,6	;RP1=0, select bank0
 11116  0359  0847               	movf	?_scale+1,w
 11117  035A  1683               	bsf	3,5	;RP0=1, select bank1
 11118  035B  1303               	bcf	3,6	;RP1=0, select bank1
 11119  035C  00BB               	movwf	(_sprintf$1211+1)^(0+128)
 11120  035D  1283               	bcf	3,5	;RP0=0, select bank0
 11121  035E  1303               	bcf	3,6	;RP1=0, select bank0
 11122  035F  0846               	movf	?_scale,w
 11123  0360  1683               	bsf	3,5	;RP0=1, select bank1
 11124  0361  1303               	bcf	3,6	;RP1=0, select bank1
 11125  0362  00BA               	movwf	_sprintf$1211^(0+128)
 11126  0363                     l3489:
 11127                           
 11128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11129  0363  083D               	movf	(_sprintf$1211+3)^(0+128),w
 11130  0364  1283               	bcf	3,5	;RP0=0, select bank0
 11131  0365  1303               	bcf	3,6	;RP1=0, select bank0
 11132  0366  00B3               	movwf	___flmul@a+3
 11133  0367  1683               	bsf	3,5	;RP0=1, select bank1
 11134  0368  1303               	bcf	3,6	;RP1=0, select bank1
 11135  0369  083C               	movf	(_sprintf$1211+2)^(0+128),w
 11136  036A  1283               	bcf	3,5	;RP0=0, select bank0
 11137  036B  1303               	bcf	3,6	;RP1=0, select bank0
 11138  036C  00B2               	movwf	___flmul@a+2
 11139  036D  1683               	bsf	3,5	;RP0=1, select bank1
 11140  036E  1303               	bcf	3,6	;RP1=0, select bank1
 11141  036F  083B               	movf	(_sprintf$1211+1)^(0+128),w
 11142  0370  1283               	bcf	3,5	;RP0=0, select bank0
 11143  0371  1303               	bcf	3,6	;RP1=0, select bank0
 11144  0372  00B1               	movwf	___flmul@a+1
 11145  0373  1683               	bsf	3,5	;RP0=1, select bank1
 11146  0374  1303               	bcf	3,6	;RP1=0, select bank1
 11147  0375  083A               	movf	_sprintf$1211^(0+128),w
 11148  0376  1283               	bcf	3,5	;RP0=0, select bank0
 11149  0377  1303               	bcf	3,6	;RP1=0, select bank0
 11150  0378  00B0               	movwf	___flmul@a
 11151  0379  1683               	bsf	3,5	;RP0=1, select bank1
 11152  037A  1303               	bcf	3,6	;RP1=0, select bank1
 11153  037B  0850               	movf	(sprintf@fval+3)^(0+128),w
 11154  037C  1283               	bcf	3,5	;RP0=0, select bank0
 11155  037D  1303               	bcf	3,6	;RP1=0, select bank0
 11156  037E  00AF               	movwf	___flmul@b+3
 11157  037F  1683               	bsf	3,5	;RP0=1, select bank1
 11158  0380  1303               	bcf	3,6	;RP1=0, select bank1
 11159  0381  084F               	movf	(sprintf@fval+2)^(0+128),w
 11160  0382  1283               	bcf	3,5	;RP0=0, select bank0
 11161  0383  1303               	bcf	3,6	;RP1=0, select bank0
 11162  0384  00AE               	movwf	___flmul@b+2
 11163  0385  1683               	bsf	3,5	;RP0=1, select bank1
 11164  0386  1303               	bcf	3,6	;RP1=0, select bank1
 11165  0387  084E               	movf	(sprintf@fval+1)^(0+128),w
 11166  0388  1283               	bcf	3,5	;RP0=0, select bank0
 11167  0389  1303               	bcf	3,6	;RP1=0, select bank0
 11168  038A  00AD               	movwf	___flmul@b+1
 11169  038B  1683               	bsf	3,5	;RP0=1, select bank1
 11170  038C  1303               	bcf	3,6	;RP1=0, select bank1
 11171  038D  084D               	movf	sprintf@fval^(0+128),w
 11172  038E  1283               	bcf	3,5	;RP0=0, select bank0
 11173  038F  1303               	bcf	3,6	;RP1=0, select bank0
 11174  0390  00AC               	movwf	___flmul@b
 11175  0391  120A  158A  213C  120A  118A  	fcall	___flmul
 11176  0396  1283               	bcf	3,5	;RP0=0, select bank0
 11177  0397  1303               	bcf	3,6	;RP1=0, select bank0
 11178  0398  082F               	movf	?___flmul+3,w
 11179  0399  00DC               	movwf	___fltol@f1+3
 11180  039A  082E               	movf	?___flmul+2,w
 11181  039B  00DB               	movwf	___fltol@f1+2
 11182  039C  082D               	movf	?___flmul+1,w
 11183  039D  00DA               	movwf	___fltol@f1+1
 11184  039E  082C               	movf	?___flmul,w
 11185  039F  00D9               	movwf	___fltol@f1
 11186  03A0  160A  158A  2624  120A  118A  	fcall	___fltol
 11187  03A5  1283               	bcf	3,5	;RP0=0, select bank0
 11188  03A6  1303               	bcf	3,6	;RP1=0, select bank0
 11189  03A7  085C               	movf	?___fltol+3,w
 11190  03A8  1683               	bsf	3,5	;RP0=1, select bank1
 11191  03A9  1303               	bcf	3,6	;RP1=0, select bank1
 11192  03AA  00C2               	movwf	(sprintf@val+3)^(0+128)
 11193  03AB  1283               	bcf	3,5	;RP0=0, select bank0
 11194  03AC  1303               	bcf	3,6	;RP1=0, select bank0
 11195  03AD  085B               	movf	?___fltol+2,w
 11196  03AE  1683               	bsf	3,5	;RP0=1, select bank1
 11197  03AF  1303               	bcf	3,6	;RP1=0, select bank1
 11198  03B0  00C1               	movwf	(sprintf@val+2)^(0+128)
 11199  03B1  1283               	bcf	3,5	;RP0=0, select bank0
 11200  03B2  1303               	bcf	3,6	;RP1=0, select bank0
 11201  03B3  085A               	movf	?___fltol+1,w
 11202  03B4  1683               	bsf	3,5	;RP0=1, select bank1
 11203  03B5  1303               	bcf	3,6	;RP1=0, select bank1
 11204  03B6  00C0               	movwf	(sprintf@val+1)^(0+128)
 11205  03B7  1283               	bcf	3,5	;RP0=0, select bank0
 11206  03B8  1303               	bcf	3,6	;RP1=0, select bank0
 11207  03B9  0859               	movf	?___fltol,w
 11208  03BA  1683               	bsf	3,5	;RP0=1, select bank1
 11209  03BB  1303               	bcf	3,6	;RP1=0, select bank1
 11210  03BC  00BF               	movwf	sprintf@val^(0+128)
 11211                           
 11212                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11213  03BD  2CBF               	goto	l3499
 11214  03BE                     l3491:
 11215                           
 11216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11217  03BE  0854               	movf	sprintf@c^(0+128),w
 11218  03BF  00B5               	movwf	??_sprintf^(0+128)
 11219  03C0  3001               	movlw	1
 11220  03C1                     u5615:
 11221  03C1  1003               	clrc
 11222  03C2  0DB5               	rlf	??_sprintf^(0+128),f
 11223  03C3  3EFF               	addlw	-1
 11224  03C4  1D03               	skipz
 11225  03C5  2BC1               	goto	u5615
 11226  03C6  1003               	clrc
 11227  03C7  0D35               	rlf	??_sprintf^(0+128),w
 11228  03C8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11229  03C9  0084               	movwf	4
 11230  03CA  160A  118A  200A  120A  118A  	fcall	stringdir
 11231  03CF  1283               	bcf	3,5	;RP0=0, select bank0
 11232  03D0  1303               	bcf	3,6	;RP1=0, select bank0
 11233  03D1  00A0               	movwf	___lldiv@divisor
 11234  03D2  160A  118A  200A  120A  118A  	fcall	stringdir
 11235  03D7  00A1               	movwf	___lldiv@divisor+1
 11236  03D8  160A  118A  200A  120A  118A  	fcall	stringdir
 11237  03DD  00A2               	movwf	___lldiv@divisor+2
 11238  03DE  160A  118A  200A  120A  118A  	fcall	stringdir
 11239  03E3  00A3               	movwf	___lldiv@divisor+3
 11240  03E4  1683               	bsf	3,5	;RP0=1, select bank1
 11241  03E5  1303               	bcf	3,6	;RP1=0, select bank1
 11242  03E6  0842               	movf	(sprintf@val+3)^(0+128),w
 11243  03E7  1283               	bcf	3,5	;RP0=0, select bank0
 11244  03E8  1303               	bcf	3,6	;RP1=0, select bank0
 11245  03E9  00A7               	movwf	___lldiv@dividend+3
 11246  03EA  1683               	bsf	3,5	;RP0=1, select bank1
 11247  03EB  1303               	bcf	3,6	;RP1=0, select bank1
 11248  03EC  0841               	movf	(sprintf@val+2)^(0+128),w
 11249  03ED  1283               	bcf	3,5	;RP0=0, select bank0
 11250  03EE  1303               	bcf	3,6	;RP1=0, select bank0
 11251  03EF  00A6               	movwf	___lldiv@dividend+2
 11252  03F0  1683               	bsf	3,5	;RP0=1, select bank1
 11253  03F1  1303               	bcf	3,6	;RP1=0, select bank1
 11254  03F2  0840               	movf	(sprintf@val+1)^(0+128),w
 11255  03F3  1283               	bcf	3,5	;RP0=0, select bank0
 11256  03F4  1303               	bcf	3,6	;RP1=0, select bank0
 11257  03F5  00A5               	movwf	___lldiv@dividend+1
 11258  03F6  1683               	bsf	3,5	;RP0=1, select bank1
 11259  03F7  1303               	bcf	3,6	;RP1=0, select bank1
 11260  03F8  083F               	movf	sprintf@val^(0+128),w
 11261  03F9  1283               	bcf	3,5	;RP0=0, select bank0
 11262  03FA  1303               	bcf	3,6	;RP1=0, select bank0
 11263  03FB  00A4               	movwf	___lldiv@dividend
 11264  03FC  160A  158A  2553  120A  118A  	fcall	___lldiv
 11265  0401  1283               	bcf	3,5	;RP0=0, select bank0
 11266  0402  1303               	bcf	3,6	;RP1=0, select bank0
 11267  0403  0823               	movf	?___lldiv+3,w
 11268  0404  1683               	bsf	3,5	;RP0=1, select bank1
 11269  0405  1303               	bcf	3,6	;RP1=0, select bank1
 11270  0406  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
 11271  0407  1283               	bcf	3,5	;RP0=0, select bank0
 11272  0408  1303               	bcf	3,6	;RP1=0, select bank0
 11273  0409  0822               	movf	?___lldiv+2,w
 11274  040A  1683               	bsf	3,5	;RP0=1, select bank1
 11275  040B  1303               	bcf	3,6	;RP1=0, select bank1
 11276  040C  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
 11277  040D  1283               	bcf	3,5	;RP0=0, select bank0
 11278  040E  1303               	bcf	3,6	;RP1=0, select bank0
 11279  040F  0821               	movf	?___lldiv+1,w
 11280  0410  1683               	bsf	3,5	;RP0=1, select bank1
 11281  0411  1303               	bcf	3,6	;RP1=0, select bank1
 11282  0412  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
 11283  0413  1283               	bcf	3,5	;RP0=0, select bank0
 11284  0414  1303               	bcf	3,6	;RP1=0, select bank0
 11285  0415  0820               	movf	?___lldiv,w
 11286  0416  1683               	bsf	3,5	;RP0=1, select bank1
 11287  0417  1303               	bcf	3,6	;RP1=0, select bank1
 11288  0418  00C7               	movwf	sprintf@tmpval^(0+128)
 11289  0419                     l3493:
 11290                           
 11291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11292  0419  3000               	movlw	0
 11293  041A  1283               	bcf	3,5	;RP0=0, select bank0
 11294  041B  1303               	bcf	3,6	;RP1=0, select bank0
 11295  041C  00A3               	movwf	___llmod@divisor+3
 11296  041D  3000               	movlw	0
 11297  041E  00A2               	movwf	___llmod@divisor+2
 11298  041F  3000               	movlw	0
 11299  0420  00A1               	movwf	___llmod@divisor+1
 11300  0421  300A               	movlw	10
 11301  0422  00A0               	movwf	___llmod@divisor
 11302  0423  1683               	bsf	3,5	;RP0=1, select bank1
 11303  0424  1303               	bcf	3,6	;RP1=0, select bank1
 11304  0425  084A               	movf	(sprintf@tmpval+3)^(0+128),w
 11305  0426  1283               	bcf	3,5	;RP0=0, select bank0
 11306  0427  1303               	bcf	3,6	;RP1=0, select bank0
 11307  0428  00A7               	movwf	___llmod@dividend+3
 11308  0429  1683               	bsf	3,5	;RP0=1, select bank1
 11309  042A  1303               	bcf	3,6	;RP1=0, select bank1
 11310  042B  0849               	movf	(sprintf@tmpval+2)^(0+128),w
 11311  042C  1283               	bcf	3,5	;RP0=0, select bank0
 11312  042D  1303               	bcf	3,6	;RP1=0, select bank0
 11313  042E  00A6               	movwf	___llmod@dividend+2
 11314  042F  1683               	bsf	3,5	;RP0=1, select bank1
 11315  0430  1303               	bcf	3,6	;RP1=0, select bank1
 11316  0431  0848               	movf	(sprintf@tmpval+1)^(0+128),w
 11317  0432  1283               	bcf	3,5	;RP0=0, select bank0
 11318  0433  1303               	bcf	3,6	;RP1=0, select bank0
 11319  0434  00A5               	movwf	___llmod@dividend+1
 11320  0435  1683               	bsf	3,5	;RP0=1, select bank1
 11321  0436  1303               	bcf	3,6	;RP1=0, select bank1
 11322  0437  0847               	movf	sprintf@tmpval^(0+128),w
 11323  0438  1283               	bcf	3,5	;RP0=0, select bank0
 11324  0439  1303               	bcf	3,6	;RP1=0, select bank0
 11325  043A  00A4               	movwf	___llmod@dividend
 11326  043B  160A  158A  24A2  120A  118A  	fcall	___llmod
 11327  0440  1283               	bcf	3,5	;RP0=0, select bank0
 11328  0441  1303               	bcf	3,6	;RP1=0, select bank0
 11329  0442  0823               	movf	?___llmod+3,w
 11330  0443  1683               	bsf	3,5	;RP0=1, select bank1
 11331  0444  1303               	bcf	3,6	;RP1=0, select bank1
 11332  0445  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
 11333  0446  1283               	bcf	3,5	;RP0=0, select bank0
 11334  0447  1303               	bcf	3,6	;RP1=0, select bank0
 11335  0448  0822               	movf	?___llmod+2,w
 11336  0449  1683               	bsf	3,5	;RP0=1, select bank1
 11337  044A  1303               	bcf	3,6	;RP1=0, select bank1
 11338  044B  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
 11339  044C  1283               	bcf	3,5	;RP0=0, select bank0
 11340  044D  1303               	bcf	3,6	;RP1=0, select bank0
 11341  044E  0821               	movf	?___llmod+1,w
 11342  044F  1683               	bsf	3,5	;RP0=1, select bank1
 11343  0450  1303               	bcf	3,6	;RP1=0, select bank1
 11344  0451  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
 11345  0452  1283               	bcf	3,5	;RP0=0, select bank0
 11346  0453  1303               	bcf	3,6	;RP1=0, select bank0
 11347  0454  0820               	movf	?___llmod,w
 11348  0455  1683               	bsf	3,5	;RP0=1, select bank1
 11349  0456  1303               	bcf	3,6	;RP1=0, select bank1
 11350  0457  00C7               	movwf	sprintf@tmpval^(0+128)
 11351  0458                     l3495:
 11352                           
 11353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11354  0458  0847               	movf	sprintf@tmpval^(0+128),w
 11355  0459  3E30               	addlw	48
 11356  045A  00B5               	movwf	??_sprintf^(0+128)
 11357  045B  0851               	movf	sprintf@sp^(0+128),w
 11358  045C  0084               	movwf	4
 11359  045D  0835               	movf	??_sprintf^(0+128),w
 11360  045E  1783               	bsf	3,7	;select IRP bank2
 11361  045F  0080               	movwf	0
 11362  0460  3001               	movlw	1
 11363  0461  00B5               	movwf	??_sprintf^(0+128)
 11364  0462  0835               	movf	??_sprintf^(0+128),w
 11365  0463  07D1               	addwf	sprintf@sp^(0+128),f
 11366  0464                     l3497:
 11367                           
 11368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11369  0464  0854               	movf	sprintf@c^(0+128),w
 11370  0465  00B5               	movwf	??_sprintf^(0+128)
 11371  0466  3001               	movlw	1
 11372  0467                     u5625:
 11373  0467  1003               	clrc
 11374  0468  0DB5               	rlf	??_sprintf^(0+128),f
 11375  0469  3EFF               	addlw	-1
 11376  046A  1D03               	skipz
 11377  046B  2C67               	goto	u5625
 11378  046C  1003               	clrc
 11379  046D  0D35               	rlf	??_sprintf^(0+128),w
 11380  046E  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11381  046F  0084               	movwf	4
 11382  0470  160A  118A  200A  120A  118A  	fcall	stringdir
 11383  0475  1283               	bcf	3,5	;RP0=0, select bank0
 11384  0476  1303               	bcf	3,6	;RP1=0, select bank0
 11385  0477  00A0               	movwf	___llmod@divisor
 11386  0478  160A  118A  200A  120A  118A  	fcall	stringdir
 11387  047D  00A1               	movwf	___llmod@divisor+1
 11388  047E  160A  118A  200A  120A  118A  	fcall	stringdir
 11389  0483  00A2               	movwf	___llmod@divisor+2
 11390  0484  160A  118A  200A  120A  118A  	fcall	stringdir
 11391  0489  00A3               	movwf	___llmod@divisor+3
 11392  048A  1683               	bsf	3,5	;RP0=1, select bank1
 11393  048B  1303               	bcf	3,6	;RP1=0, select bank1
 11394  048C  0842               	movf	(sprintf@val+3)^(0+128),w
 11395  048D  1283               	bcf	3,5	;RP0=0, select bank0
 11396  048E  1303               	bcf	3,6	;RP1=0, select bank0
 11397  048F  00A7               	movwf	___llmod@dividend+3
 11398  0490  1683               	bsf	3,5	;RP0=1, select bank1
 11399  0491  1303               	bcf	3,6	;RP1=0, select bank1
 11400  0492  0841               	movf	(sprintf@val+2)^(0+128),w
 11401  0493  1283               	bcf	3,5	;RP0=0, select bank0
 11402  0494  1303               	bcf	3,6	;RP1=0, select bank0
 11403  0495  00A6               	movwf	___llmod@dividend+2
 11404  0496  1683               	bsf	3,5	;RP0=1, select bank1
 11405  0497  1303               	bcf	3,6	;RP1=0, select bank1
 11406  0498  0840               	movf	(sprintf@val+1)^(0+128),w
 11407  0499  1283               	bcf	3,5	;RP0=0, select bank0
 11408  049A  1303               	bcf	3,6	;RP1=0, select bank0
 11409  049B  00A5               	movwf	___llmod@dividend+1
 11410  049C  1683               	bsf	3,5	;RP0=1, select bank1
 11411  049D  1303               	bcf	3,6	;RP1=0, select bank1
 11412  049E  083F               	movf	sprintf@val^(0+128),w
 11413  049F  1283               	bcf	3,5	;RP0=0, select bank0
 11414  04A0  1303               	bcf	3,6	;RP1=0, select bank0
 11415  04A1  00A4               	movwf	___llmod@dividend
 11416  04A2  160A  158A  24A2  120A  118A  	fcall	___llmod
 11417  04A7  1283               	bcf	3,5	;RP0=0, select bank0
 11418  04A8  1303               	bcf	3,6	;RP1=0, select bank0
 11419  04A9  0823               	movf	?___llmod+3,w
 11420  04AA  1683               	bsf	3,5	;RP0=1, select bank1
 11421  04AB  1303               	bcf	3,6	;RP1=0, select bank1
 11422  04AC  00C2               	movwf	(sprintf@val+3)^(0+128)
 11423  04AD  1283               	bcf	3,5	;RP0=0, select bank0
 11424  04AE  1303               	bcf	3,6	;RP1=0, select bank0
 11425  04AF  0822               	movf	?___llmod+2,w
 11426  04B0  1683               	bsf	3,5	;RP0=1, select bank1
 11427  04B1  1303               	bcf	3,6	;RP1=0, select bank1
 11428  04B2  00C1               	movwf	(sprintf@val+2)^(0+128)
 11429  04B3  1283               	bcf	3,5	;RP0=0, select bank0
 11430  04B4  1303               	bcf	3,6	;RP1=0, select bank0
 11431  04B5  0821               	movf	?___llmod+1,w
 11432  04B6  1683               	bsf	3,5	;RP0=1, select bank1
 11433  04B7  1303               	bcf	3,6	;RP1=0, select bank1
 11434  04B8  00C0               	movwf	(sprintf@val+1)^(0+128)
 11435  04B9  1283               	bcf	3,5	;RP0=0, select bank0
 11436  04BA  1303               	bcf	3,6	;RP1=0, select bank0
 11437  04BB  0820               	movf	?___llmod,w
 11438  04BC  1683               	bsf	3,5	;RP0=1, select bank1
 11439  04BD  1303               	bcf	3,6	;RP1=0, select bank1
 11440  04BE  00BF               	movwf	sprintf@val^(0+128)
 11441  04BF                     l3499:
 11442                           
 11443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11444  04BF  3001               	movlw	1
 11445  04C0  02D4               	subwf	sprintf@c^(0+128),f
 11446  04C1  0A54               	incf	sprintf@c^(0+128),w
 11447  04C2  1D03               	btfss	3,2
 11448  04C3  2CC5               	goto	u5631
 11449  04C4  2CC6               	goto	u5630
 11450  04C5                     u5631:
 11451  04C5  2BBE               	goto	l3491
 11452  04C6                     u5630:
 11453  04C6  2CD8               	goto	l3507
 11454  04C7                     l3501:
 11455                           
 11456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11457  04C7  3030               	movlw	48
 11458  04C8  00B5               	movwf	??_sprintf^(0+128)
 11459  04C9  0851               	movf	sprintf@sp^(0+128),w
 11460  04CA  0084               	movwf	4
 11461  04CB  0835               	movf	??_sprintf^(0+128),w
 11462  04CC  1783               	bsf	3,7	;select IRP bank2
 11463  04CD  0080               	movwf	0
 11464  04CE                     l3503:
 11465  04CE  3001               	movlw	1
 11466  04CF  00B5               	movwf	??_sprintf^(0+128)
 11467  04D0  0835               	movf	??_sprintf^(0+128),w
 11468  04D1  07D1               	addwf	sprintf@sp^(0+128),f
 11469  04D2                     l3505:
 11470                           
 11471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11472  04D2  30FF               	movlw	255
 11473  04D3  07D2               	addwf	sprintf@prec^(0+128),f
 11474  04D4  1803               	skipnc
 11475  04D5  0AD3               	incf	(sprintf@prec+1)^(0+128),f
 11476  04D6  30FF               	movlw	255
 11477  04D7  07D3               	addwf	(sprintf@prec+1)^(0+128),f
 11478  04D8                     l3507:
 11479                           
 11480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11481  04D8  0852               	movf	sprintf@prec^(0+128),w
 11482  04D9  0453               	iorwf	(sprintf@prec+1)^(0+128),w
 11483  04DA  1D03               	btfss	3,2
 11484  04DB  2CDD               	goto	u5641
 11485  04DC  2CDE               	goto	u5640
 11486  04DD                     u5641:
 11487  04DD  2CC7               	goto	l3501
 11488  04DE                     u5640:
 11489  04DE  2DA4               	goto	l3555
 11490  04DF                     l3509:
 11491                           
 11492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 11493  04DF  0852               	movf	sprintf@prec^(0+128),w
 11494  04E0  0453               	iorwf	(sprintf@prec+1)^(0+128),w
 11495  04E1  1D03               	btfss	3,2
 11496  04E2  2CE4               	goto	u5651
 11497  04E3  2CE5               	goto	u5650
 11498  04E4                     u5651:
 11499  04E4  2CF3               	goto	l405
 11500  04E5                     u5650:
 11501  04E5                     l3511:
 11502  04E5  0842               	movf	(sprintf@val+3)^(0+128),w
 11503  04E6  0441               	iorwf	(sprintf@val+2)^(0+128),w
 11504  04E7  0440               	iorwf	(sprintf@val+1)^(0+128),w
 11505  04E8  043F               	iorwf	sprintf@val^(0+128),w
 11506  04E9  1D03               	skipz
 11507  04EA  2CEC               	goto	u5661
 11508  04EB  2CED               	goto	u5660
 11509  04EC                     u5661:
 11510  04EC  2CF3               	goto	l405
 11511  04ED                     u5660:
 11512  04ED                     l3513:
 11513                           
 11514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11515  04ED  3001               	movlw	1
 11516  04EE  07D2               	addwf	sprintf@prec^(0+128),f
 11517  04EF  1803               	skipnc
 11518  04F0  0AD3               	incf	(sprintf@prec+1)^(0+128),f
 11519  04F1  3000               	movlw	0
 11520  04F2  07D3               	addwf	(sprintf@prec+1)^(0+128),f
 11521  04F3                     l405:
 11522                           
 11523                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11524  04F3  0853               	movf	(sprintf@prec+1)^(0+128),w
 11525  04F4  3A80               	xorlw	128
 11526  04F5  3C80               	sublw	128
 11527  04F6  1D03               	skipz
 11528  04F7  2CFA               	goto	u5675
 11529  04F8  0852               	movf	sprintf@prec^(0+128),w
 11530  04F9  0254               	subwf	sprintf@c^(0+128),w
 11531  04FA                     u5675:
 11532  04FA  1803               	skipnc
 11533  04FB  2CFD               	goto	u5671
 11534  04FC  2CFE               	goto	u5670
 11535  04FD                     u5671:
 11536  04FD  2D05               	goto	l3517
 11537  04FE                     u5670:
 11538  04FE                     l3515:
 11539                           
 11540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11541  04FE  1683               	bsf	3,5	;RP0=1, select bank1
 11542  04FF  1303               	bcf	3,6	;RP1=0, select bank1
 11543  0500  0852               	movf	sprintf@prec^(0+128),w
 11544  0501  00B5               	movwf	??_sprintf^(0+128)
 11545  0502  0835               	movf	??_sprintf^(0+128),w
 11546  0503  00D4               	movwf	sprintf@c^(0+128)
 11547  0504  2D1D               	goto	l3521
 11548  0505                     l3517:
 11549  0505  1683               	bsf	3,5	;RP0=1, select bank1
 11550  0506  1303               	bcf	3,6	;RP1=0, select bank1
 11551  0507  0853               	movf	(sprintf@prec+1)^(0+128),w
 11552  0508  3A80               	xorlw	128
 11553  0509  00B5               	movwf	??_sprintf^(0+128)
 11554  050A  3080               	movlw	128
 11555  050B  0235               	subwf	??_sprintf^(0+128),w
 11556  050C  1D03               	skipz
 11557  050D  2D10               	goto	u5685
 11558  050E  0854               	movf	sprintf@c^(0+128),w
 11559  050F  0252               	subwf	sprintf@prec^(0+128),w
 11560  0510                     u5685:
 11561  0510  1803               	skipnc
 11562  0511  2D13               	goto	u5681
 11563  0512  2D14               	goto	u5680
 11564  0513                     u5681:
 11565  0513  2D1D               	goto	l3521
 11566  0514                     u5680:
 11567  0514                     l3519:
 11568                           
 11569                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11570  0514  1683               	bsf	3,5	;RP0=1, select bank1
 11571  0515  1303               	bcf	3,6	;RP1=0, select bank1
 11572  0516  0854               	movf	sprintf@c^(0+128),w
 11573  0517  00B5               	movwf	??_sprintf^(0+128)
 11574  0518  01B6               	clrf	(??_sprintf^(0+128)+1)
 11575  0519  0835               	movf	??_sprintf^(0+128),w
 11576  051A  00D2               	movwf	sprintf@prec^(0+128)
 11577  051B  0836               	movf	(??_sprintf+1)^(0+128),w
 11578  051C  00D3               	movwf	(sprintf@prec+1)^(0+128)
 11579  051D                     l3521:
 11580                           
 11581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11582  051D  1683               	bsf	3,5	;RP0=1, select bank1
 11583  051E  1303               	bcf	3,6	;RP1=0, select bank1
 11584  051F  0845               	movf	sprintf@width^(0+128),w
 11585  0520  0446               	iorwf	(sprintf@width+1)^(0+128),w
 11586  0521  1903               	btfsc	3,2
 11587  0522  2D24               	goto	u5691
 11588  0523  2D25               	goto	u5690
 11589  0524                     u5691:
 11590  0524  2D37               	goto	l3527
 11591  0525                     u5690:
 11592  0525                     l3523:
 11593  0525  3003               	movlw	3
 11594  0526  0543               	andwf	sprintf@flag^(0+128),w
 11595  0527  00B5               	movwf	??_sprintf^(0+128)
 11596  0528  3000               	movlw	0
 11597  0529  0544               	andwf	(sprintf@flag+1)^(0+128),w
 11598  052A  00B6               	movwf	(??_sprintf+1)^(0+128)
 11599  052B  0835               	movf	??_sprintf^(0+128),w
 11600  052C  0436               	iorwf	(??_sprintf^(0+128)+1),w
 11601  052D  1903               	btfsc	3,2
 11602  052E  2D30               	goto	u5701
 11603  052F  2D31               	goto	u5700
 11604  0530                     u5701:
 11605  0530  2D37               	goto	l3527
 11606  0531                     u5700:
 11607  0531                     l3525:
 11608                           
 11609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11610  0531  30FF               	movlw	255
 11611  0532  07C5               	addwf	sprintf@width^(0+128),f
 11612  0533  1803               	skipnc
 11613  0534  0AC6               	incf	(sprintf@width+1)^(0+128),f
 11614  0535  30FF               	movlw	255
 11615  0536  07C6               	addwf	(sprintf@width+1)^(0+128),f
 11616  0537                     l3527:
 11617                           
 11618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11619  0537  1F44               	btfss	(sprintf@flag+1)^(0+128),6
 11620  0538  2D3A               	goto	u5711
 11621  0539  2D3B               	goto	u5710
 11622  053A                     u5711:
 11623  053A  2D56               	goto	l3535
 11624  053B                     u5710:
 11625  053B                     l3529:
 11626                           
 11627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11628  053B  0853               	movf	(sprintf@prec+1)^(0+128),w
 11629  053C  3A80               	xorlw	128
 11630  053D  00B5               	movwf	??_sprintf^(0+128)
 11631  053E  0846               	movf	(sprintf@width+1)^(0+128),w
 11632  053F  3A80               	xorlw	128
 11633  0540  0235               	subwf	??_sprintf^(0+128),w
 11634  0541  1D03               	skipz
 11635  0542  2D45               	goto	u5725
 11636  0543  0845               	movf	sprintf@width^(0+128),w
 11637  0544  0252               	subwf	sprintf@prec^(0+128),w
 11638  0545                     u5725:
 11639  0545  1803               	skipnc
 11640  0546  2D48               	goto	u5721
 11641  0547  2D49               	goto	u5720
 11642  0548                     u5721:
 11643  0548  2D52               	goto	l3533
 11644  0549                     u5720:
 11645  0549                     l3531:
 11646                           
 11647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11648  0549  1683               	bsf	3,5	;RP0=1, select bank1
 11649  054A  1303               	bcf	3,6	;RP1=0, select bank1
 11650  054B  0852               	movf	sprintf@prec^(0+128),w
 11651  054C  02C5               	subwf	sprintf@width^(0+128),f
 11652  054D  0853               	movf	(sprintf@prec+1)^(0+128),w
 11653  054E  1C03               	skipc
 11654  054F  03C6               	decf	(sprintf@width+1)^(0+128),f
 11655  0550  02C6               	subwf	(sprintf@width+1)^(0+128),f
 11656  0551  2D56               	goto	l3535
 11657  0552                     l3533:
 11658                           
 11659                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11660  0552  1683               	bsf	3,5	;RP0=1, select bank1
 11661  0553  1303               	bcf	3,6	;RP1=0, select bank1
 11662  0554  01C5               	clrf	sprintf@width^(0+128)
 11663  0555  01C6               	clrf	(sprintf@width+1)^(0+128)
 11664  0556                     l3535:
 11665                           
 11666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11667  0556  0846               	movf	(sprintf@width+1)^(0+128),w
 11668  0557  3A80               	xorlw	128
 11669  0558  3C80               	sublw	128
 11670  0559  1D03               	skipz
 11671  055A  2D5D               	goto	u5735
 11672  055B  0845               	movf	sprintf@width^(0+128),w
 11673  055C  0254               	subwf	sprintf@c^(0+128),w
 11674  055D                     u5735:
 11675  055D  1803               	skipnc
 11676  055E  2D60               	goto	u5731
 11677  055F  2D61               	goto	u5730
 11678  0560                     u5731:
 11679  0560  2D6D               	goto	l3539
 11680  0561                     u5730:
 11681  0561                     l3537:
 11682                           
 11683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11684  0561  1683               	bsf	3,5	;RP0=1, select bank1
 11685  0562  1303               	bcf	3,6	;RP1=0, select bank1
 11686  0563  0854               	movf	sprintf@c^(0+128),w
 11687  0564  00B5               	movwf	??_sprintf^(0+128)
 11688  0565  01B6               	clrf	(??_sprintf^(0+128)+1)
 11689  0566  0835               	movf	??_sprintf^(0+128),w
 11690  0567  02C5               	subwf	sprintf@width^(0+128),f
 11691  0568  0836               	movf	(??_sprintf+1)^(0+128),w
 11692  0569  1C03               	skipc
 11693  056A  03C6               	decf	(sprintf@width+1)^(0+128),f
 11694  056B  02C6               	subwf	(sprintf@width+1)^(0+128),f
 11695  056C  2D71               	goto	l3541
 11696  056D                     l3539:
 11697                           
 11698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11699  056D  1683               	bsf	3,5	;RP0=1, select bank1
 11700  056E  1303               	bcf	3,6	;RP1=0, select bank1
 11701  056F  01C5               	clrf	sprintf@width^(0+128)
 11702  0570  01C6               	clrf	(sprintf@width+1)^(0+128)
 11703  0571                     l3541:
 11704                           
 11705                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11706  0571  0845               	movf	sprintf@width^(0+128),w
 11707  0572  0446               	iorwf	(sprintf@width+1)^(0+128),w
 11708  0573  1903               	btfsc	3,2
 11709  0574  2D76               	goto	u5741
 11710  0575  2D77               	goto	u5740
 11711  0576                     u5741:
 11712  0576  2D8E               	goto	l3549
 11713  0577                     u5740:
 11714  0577                     l3543:
 11715                           
 11716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11717  0577  3020               	movlw	32
 11718  0578  00B5               	movwf	??_sprintf^(0+128)
 11719  0579  0851               	movf	sprintf@sp^(0+128),w
 11720  057A  0084               	movwf	4
 11721  057B  0835               	movf	??_sprintf^(0+128),w
 11722  057C  1783               	bsf	3,7	;select IRP bank2
 11723  057D  0080               	movwf	0
 11724  057E                     l3545:
 11725  057E  3001               	movlw	1
 11726  057F  00B5               	movwf	??_sprintf^(0+128)
 11727  0580  0835               	movf	??_sprintf^(0+128),w
 11728  0581  07D1               	addwf	sprintf@sp^(0+128),f
 11729  0582                     l3547:
 11730  0582  30FF               	movlw	255
 11731  0583  07C5               	addwf	sprintf@width^(0+128),f
 11732  0584  1803               	skipnc
 11733  0585  0AC6               	incf	(sprintf@width+1)^(0+128),f
 11734  0586  30FF               	movlw	255
 11735  0587  07C6               	addwf	(sprintf@width+1)^(0+128),f
 11736  0588  0845               	movf	sprintf@width^(0+128),w
 11737  0589  0446               	iorwf	(sprintf@width+1)^(0+128),w
 11738  058A  1D03               	btfss	3,2
 11739  058B  2D8D               	goto	u5751
 11740  058C  2D8E               	goto	u5750
 11741  058D                     u5751:
 11742  058D  2D77               	goto	l3543
 11743  058E                     u5750:
 11744  058E                     l3549:
 11745                           
 11746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11747  058E  3003               	movlw	3
 11748  058F  0543               	andwf	sprintf@flag^(0+128),w
 11749  0590  00B5               	movwf	??_sprintf^(0+128)
 11750  0591  3000               	movlw	0
 11751  0592  0544               	andwf	(sprintf@flag+1)^(0+128),w
 11752  0593  00B6               	movwf	(??_sprintf+1)^(0+128)
 11753  0594  0835               	movf	??_sprintf^(0+128),w
 11754  0595  0436               	iorwf	(??_sprintf^(0+128)+1),w
 11755  0596  1903               	btfsc	3,2
 11756  0597  2D99               	goto	u5761
 11757  0598  2D9A               	goto	u5760
 11758  0599                     u5761:
 11759  0599  2DA4               	goto	l3555
 11760  059A                     u5760:
 11761  059A                     l3551:
 11762                           
 11763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11764  059A  302D               	movlw	45
 11765  059B  00B5               	movwf	??_sprintf^(0+128)
 11766  059C  0851               	movf	sprintf@sp^(0+128),w
 11767  059D  0084               	movwf	4
 11768  059E  0835               	movf	??_sprintf^(0+128),w
 11769  059F  1783               	bsf	3,7	;select IRP bank2
 11770  05A0  0080               	movwf	0
 11771  05A1  160A  118A  2D13   	goto	l3311
 11772  05A4                     l3555:
 11773                           
 11774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11775  05A4  3001               	movlw	1
 11776  05A5  07A8               	addwf	sprintf@f^(0+128),f
 11777  05A6  30FF               	movlw	-1
 11778  05A7  0728               	addwf	sprintf@f^(0+128),w
 11779  05A8  0084               	movwf	4
 11780  05A9  160A  118A  200A  120A  118A  	fcall	stringdir
 11781  05AE  00B5               	movwf	??_sprintf^(0+128)
 11782  05AF  0835               	movf	??_sprintf^(0+128),w
 11783  05B0  00D4               	movwf	sprintf@c^(0+128)
 11784  05B1  0854               	movf	sprintf@c^(0+128),w
 11785  05B2  1D03               	btfss	3,2
 11786  05B3  2DB5               	goto	u5771
 11787  05B4  2DB8               	goto	u5770
 11788  05B5                     u5771:
 11789  05B5  160A  118A  2D06   	goto	l3307
 11790  05B8                     u5770:
 11791  05B8                     l3557:
 11792                           
 11793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11794  05B8  0851               	movf	sprintf@sp^(0+128),w
 11795  05B9  0084               	movwf	4
 11796  05BA  1783               	bsf	3,7	;select IRP bank2
 11797  05BB  0180               	clrf	0
 11798  05BC                     l420:
 11799  05BC  0008               	return
 11800  05BD                     __end_of_sprintf:

Data Sizes:
    Strings     39
    Constant    144
    Data        0
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     78      78
    BANK1            80     56      71
    BANK3            96      0      20
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 18
		 -> f1(BANK3[10]), STR_1(CODE[18]), 

    send_crct@st	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK3[10]), 


Critical Paths under _main in COMMON

    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___flneg
    _sprintf->___wmul
    _sprintf->___xxtofl
    _sprintf->__tdiv_to_l_
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___flsub->___xxtofl
    _send_crct->_send_char
    _conv->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___awmod
    ___flmul->___lwmod
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    _isr->_int_uart

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conv->___flmul
    ___flmul->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   38485
                                             53 BANK1      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _cfg_adc
                            _cfg_clk
                           _cfg_inte
                             _cfg_io
                          _cfg_usart
                               _conv
                          _send_crct
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    37     13   31704
                                              8 BANK1     45    32     13
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             38 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              5 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              3 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             38 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              5 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              2 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              5 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              5 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              5 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              5 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              5 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             57 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             58 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              5 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              5 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              5 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _send_crct                                            4     4      0     145
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      22
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conv                                                13     9      4    5140
                                             38 BANK0     13     9      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              5 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                             12 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              5 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _cfg_usart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_io                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_inte                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_adc                                              1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     440
                                              0 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              6 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     484
                                              0 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0     374
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              6 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              3 COMMON     2     2      0
                            _int_adc
                           _int_uart
 ---------------------------------------------------------------------------------
 (6) _int_uart                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _int_adc                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _cfg_adc
   _cfg_clk
   _cfg_inte
   _cfg_io
   _cfg_usart
   _conv
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _send_crct
     _send_char
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _isr (ROOT)
   _int_adc
   _int_uart

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      B2       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     38      47       7       88.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      14       9       20.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      B2      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 27 11:06:57 2021

                        pc 0002                         _V1 00E6                         _V2 00E5  
                       _V3 00E4                         _f1 019A                         _f2 0190  
             ___awdiv@sign 0029                         fsr 0004        ___wmul@multiplicand 0077  
      __Umul8_16@word_mpld 0022                        l211 19D9                        l131 1934  
                      l205 0826                        l125 1967                        l134 198E  
                      l143 1A37                        l208 1C01                        l128 19A4  
                      l152 1B28                        l217 1B6E                        l137 193E  
                      l146 1940                        l330 07C9                        l180 1ABE  
                      l420 05BC                        l181 1AC4                        l149 1948  
                      l405 04F3                        l190 1AE1                        l182 1AC5  
                      l191 1AE7                        l183 1ACB                        l184 1ACC  
                      l424 07DA                        l193 1AE8                        l185 1AD2  
                      l177 1AB4                        l337 0FFF                        l186 1AD3  
                      l178 1AB7                        l610 1C20                        l426 07F4  
                      l187 1AD9                        l179 1ABD                        l611 1C3C  
                      l188 1ADA                        l196 19BE                        l612 1C51  
                      l460 1DBA                        l189 1AE0                        l605 1266  
                      l390 02E8                        l199 1955                        l615 1EBE  
                      l623 07FF                        l359 15C3                        l641 11B5  
                      l618 1F2A                        l634 1E8A                        l642 1127  
                      l730 1BB4                        l619 1F43                        l627 1E9F  
                      l652 11A8                        l740 1AAA                        l637 1E9F  
                      l645 1178                        l397 032C                        l590 1D52  
                      l751 12D7                        l911 1979                        l904 1FC9  
                      l680 1CF7                        l905 1FD5                        l577 1E23  
                      l594 1273                        l755 137E                        l595 11D8  
                      l772 1449                        l764 14FB                        l853 0C08  
                      l757 1355                        l782 148F                        l598 1236  
                      l847 0C9C                        l776 146D                        l793 14EF  
                      l785 14CD                        l866 10E6                        l794 14FB  
                      l859 0C90                        l891 1F68                        l868 10F8  
                      l893 1FFF                        l797 1CA1                        l897 1FAD  
                      _RC1 0039                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      _v11 00E0                        _v22 00DC                        _v33 00D8  
                      _isr 19F6                        fsr0 0004                        indf 0000  
             ___awmod@sign 0022               ___flmul@aexp 003E               ___flmul@bexp 003F  
             ___flmul@sign 0039               ___flmul@temp 0044               ___flmul@prod 0040  
             ___fltol@exp1 0063                       l3001 11F4                       l3011 1227  
                     l3003 11FD                       l3101 1F42                       l3021 1242  
                     l3013 1230                       l3005 1206                       l3031 126B  
                     l3015 123A                       l3023 1254                       l3007 1218  
                     l3201 1FBF                       l3105 07F5                       l3121 1E4F  
                     l3113 1E24                       l3041 07E1                       l3009 1226  
                     l2401 1E07                       l3211 1FF2                       l3203 1FC3  
                     l3107 07FD                       l3123 1E50                       l3115 1E31  
                     l3051 1D65                       l3043 07E8                       l3035 07CA  
                     l2411 1E1F                       l2403 1E08                       l2341 10D5  
                     l3213 1FF6                       l3205 1FCD                       l3301 1B20  
                     l3109 07FF                       l2501 1274                       l3125 1E58  
                     l3061 1D94                       l3053 1D68                       l3045 07EE  
                     l3037 07CE                       l3029 125B                       l2405 1E0F  
                     l2421 1D04                       l3231 195B                       l2343 10DC  
                     l3215 1FF7                       l3207 1FD7                       l2511 128B  
                     l2503 127B                       l3143 1E7F                       l3135 1E66  
                     l3127 1E5A                       l3119 1E3A                       l3063 1DA2  
                     l3055 1D75                       l3151 1CAC                       l3039 07D2  
                     l2407 1E15                       l2431 1D18                       l2423 1D06  
                     l2415 1CF8                       l3311 1513                       l2361 1AC9  
                     l2353 1AAC                       l3241 1933                       l3233 1962  
                     l2345 10E0                       l3209 1FED                       l3081 1C50  
                     l3073 1C02                       l2601 1387                       l2521 12A3  
                     l2513 1290                       l2505 1281                       l3145 1E8F  
                     l3129 1E5E                       l3137 1E78                       l3065 1DA3  
                     l3057 1D79                       l3049 1D53                       l3161 1CE0  
                     l3153 1CAF                       l2409 1E1A                       l2441 1D37  
                     l2433 1D1F                       l2425 1D0A                       l2417 1CFB  
                     l3401 0025                       l3321 1545                       l3313 1518  
                     l3305 14FF                       l2363 1AD0                       l2355 1AB0  
                     l3251 19A1                       l3243 1935                       l3235 1964  
                     l3227 1956                       l2347 10EF                       l2339 10D3  
                     l3075 1C18                       l3091 1EDA                       l2611 13AF  
                     l2531 12B9                       l2523 12A8                       l2515 1298  
                     l2507 1285                       l3171 1C56                       l3147 1E94  
                     l3067 1DAC                       l3059 1D82                       l3163 1CE9  
                     l3155 1CBC                       l2371 1DBB                       l2443 1D3E  
                     l2435 1D23                       l2427 1D0F                       l2419 1CFF  
                     l3411 00B6                       l3403 004E                       l3331 157B  
                     l3323 1558                       l3315 151C                       l3307 1506  
                     l2365 1AD7                       l2357 1ABB                       l3245 198F  
                     l3229 1959                       l3261 1989                       l3253 197A  
                     l2349 10F4                       l2701 094D                       l3181 1F60  
                     l3077 1C34                       l3093 1EDE                       l3085 1EA0  
                     l2621 13C8                       l2613 13B8                       l2605 1390  
                     l2541 12CD                       l2533 12BA                       l2525 12AE  
                     l2517 1299                       l2509 1286                       l3069 1DB2  
                     l3157 1CC0                       l3165 1CEF                       l3149 1CA2  
                     l2461 1B83                       l2453 1B6F                       l2381 1DCD  
                     l2373 1DBE                       l2437 1D27                       l2429 1D15  
                     l2445 1D44                       l3501 04C7                       l3413 00BE  
                     l3405 0075                       l3421 0130                       l3341 15AE  
                     l3333 157F                       l3325 155C                       l3317 152C  
                     l3309 150C                       l2367 1ADE                       l2359 1AC2  
                     l3271 1BC5                       l3247 1998                       l3239 192D  
                     l3263 198A                       l3255 1981                       l2711 0962  
                     l2703 094E                       l3191 1F8B                       l3183 1F70  
                     l3175 1F47                       l3079 1C4E                       l3095 1F02  
                     l3087 1EB6                       l2631 142C                       l2615 13BA  
                     l2607 13A7                       l2623 13CD                       l2551 12E9  
                     l2535 12BF                       l2543 12CF                       l2527 12AF  
                     l2519 129B                       l3159 1CD2                       l2471 1BA3  
                     l2463 1B87                       l2455 1B73                       l2391 1DE1  
                     l2383 1DD2                       l2375 1DC2                       l2447 1D49  
                     l2439 1D31                       l3511 04E5                       l3503 04CE  
                     l3423 0165                       l3415 00DC                       l3407 0084  
                     l3351 15E1                       l3335 1582                       l3343 15BF  
                     l3319 1530                       l3327 156C                       l2369 1AE5  
                     l3273 1BD5                       l3281 0809                       l3249 199C  
                     l3265 198B                       l3257 1985                       l2721 097A  
                     l2713 096A                       l2705 0953                       l3193 1F92  
                     l3177 1F4C                       l3097 1F06                       l3089 1ED2  
                     l2641 145F                       l2625 13E3                       l2633 143B  
                     l2617 13BE                       l2609 13AB                       l2561 12FD  
                     l2553 12ED                       l2545 12DD                       l2537 12C4  
                     l2529 12B5                       l3169 1C52                       l2473 1BAA  
                     l2465 1B8B                       l2457 1B79                       l2481 1A75  
                     l2393 1DE8                       l2385 1DD6                       l2377 1DC7  
                     l2449 1D4E                       l3521 051D                       l3513 04ED  
                     l3505 04D2                       l3441 01F4                       l3433 0198  
                     l3425 0194                       l3409 00AD                       l3361 1609  
                     l3353 15EF                       l3345 15C1                       l3337 1597  
                     l3329 157A                       l3601 0862                       l3275 1BDB  
                     l3267 1BB5                       l3283 080E                       l3291 1B29  
                     l3259 1986                       l2811 0C3D                       l2803 0C0D  
                     l2731 0996                       l2723 097F                       l2715 096F  
                     l2707 0958                       l3195 1F96                       l3187 1F79  
                     l3179 1F50                       l3099 1F40                       l2651 1476  
                     l2643 1468                       l2635 1451                       l2627 1421  
                     l2619 13BF                       l2571 1311                       l2563 1301  
                     l2555 12F1                       l2547 12E1                       l2539 12CC  
                     l2467 1B9C                       l2459 1B7C                       l2475 1BB0  
                     l2491 1A93                       l2483 1A7A                       l2395 1DEC  
                     l2387 1DD8                       l2379 1DC9                       l3531 0549  
                     l3523 0525                       l3515 04FE                       l3507 04D8  
                     l3443 01FA                       l3427 0196                       l3419 0127  
                     l3371 1678                       l3363 1630                       l3355 15F3  
                     l3339 15AA                       l3611 08EC                       l3603 0882  
                     l3277 1949                       l3269 1BBB                       l3285 0815  
                     l3293 1B2E                       l2821 0C74                       l2805 0C12  
                     l2813 0C43                       l2741 09B9                       l2733 099B  
                     l2725 0984                       l2717 0975                       l2709 0960  
                     l3197 1FA4                       l3189 1F7E                       l2661 1486  
                     l2653 147B                       l2645 146C                       l2637 1456  
                     l2629 1427                       l2581 1322                       l2573 1315  
                     l2565 1305                       l2557 12F5                       l2549 12E5  
                     l2469 1BA2                       l2493 1A99                       l2485 1A81  
                     l2397 1DF0                       l2389 1DDE                       l2901 0E53  
                     l3541 0571                       l3533 0552                       l3525 0531  
                     l3517 0505                       l3461 0242                       l3445 0206  
                     l3453 021B                       l3437 01CF                       l3381 16C3  
                     l3373 1683                       l3365 1649                       l3357 15F7  
                     l3509 04DF                       l3349 15C5                       l3621 0916  
                     l3613 08F7                       l3605 08A0                       l3287 081B  
                     l3279 0804                       l3295 1B4A                       l2831 0C94  
                     l2823 0C76                       l2815 0C50                       l2807 0C20  
                     l2751 0A47                       l2743 09C6                       l2735 09A0  
                     l2727 098C                       l2719 0979                       l3199 1FB4  
                     l2671 14A7                       l2663 148C                       l2647 1471  
                     l2655 147D                       l2591 1368                       l2583 1339  
                     l2575 1319                       l2567 1309                       l2559 12F9  
                     l2495 1AA0                       l2487 1A85                       l2479 1A6F  
                     l2399 1E01                       l2911 0F4B                       l2903 0E5A  
                     l3551 059A                       l3543 0577                       l3535 0556  
                     l3527 0537                       l3519 0514                       l3471 02FD  
                     l3463 029D                       l3455 0228                       l3447 020D  
                     l3439 01D9                       l3391 1763                       l3383 16C9  
                     l3375 1689                       l3367 164D                       l3359 1605  
                     l3623 0921                       l3615 08FB                       l3607 08BE  
                     l2841 19A9                       l3289 0820                       l3297 1B52  
                     l2825 0C84                       l2817 0C5B                       l2809 0C24  
                     l2761 0AA9                       l2753 0A63                       l2745 09E3  
                     l2729 098E                       l2681 14DF                       l2673 14AB  
                     l2649 1474                       l2657 1481                       l2593 1369  
                     l2585 1359                       l2577 131D                       l2569 130D  
                     l2489 1A89                       l2497 1AA6                       l2921 196A  
                     l3545 057E                       l3537 0561                       l3529 053B  
                     l3481 0335                       l3473 0303                       l3465 02DC  
                     l3457 0236                       l3449 0216                       l3393 178C  
                     l3385 16E8                       l3377 169C                       l3369 1651  
                     l3625 0928                       l3617 0901                       l3609 08C8  
                     l2843 19AF                       l2851 19C3                       l2827 0C88  
                     l2819 0C6A                       l2771 0B39                       l2763 0AC6  
                     l2755 0A6C                       l2747 09FF                       l2739 09A9  
                     l3299 1AEC                       l2835 1940                       l3571 1A24  
                     l2691 14F6                       l2683 14E4                       l2675 14C9  
                     l2667 1494                       l2659 1482                       l2595 1372  
                     l2587 1362                       l2579 1321                       l2931 10F9  
                     l2923 1970                       l2915 0FD3                       l3547 0582  
                     l3539 056D                       l3491 03BE                       l3483 033A  
                     l3475 0310                       l3467 02F0                       l3459 023D  
                     l3387 1733                       l3379 16BF                       l3395 1794  
                     l3555 05A4                       l3627 092E                       l3619 0910  
                     l2845 19B2                       l2853 19C9                       l2829 0C89  
                     l2781 0BCB                       l2773 0B66                       l2765 0ADF  
                     l2757 0A7C                       l2749 0A2B                       l2837 1946  
                     l3573 1A2C                       l2693 14FA                       l2685 14E5  
                     l2677 14D2                       l2669 1499                       l2589 1364  
                     l2597 1376                       l2933 110C                       l2861 05C0  
                     l2925 1976                       l2909 0F44                       l3549 058E  
                     l3493 0419                       l3485 0341                       l3477 031F  
                     l3469 02F9                       l3397 17A3                       l3389 175A  
                     l3557 05B8                       l3629 0935                       l2847 19BB  
                     l2839 19A6                       l2855 19CC                       l2783 0BD4  
                     l2791 0BE8                       l2775 0B8C                       l2767 0AFC  
                     l2759 0A99                       l2695 093C                       l3567 1A16  
                     l2687 14E9                       l2679 14D7                       l2599 1382  
                     l2951 1148                       l2943 1128                       l2871 06DB  
                     l2863 05C6                       l2927 1978                       l2919 1969  
                     l3495 0458                       l3487 0345                       l3479 0326  
                     l3399 17EA                       l3591 0840                       l3583 0827  
                     l2857 19D1                       l2849 19C0                       l2793 0BEC  
                     l2785 0BD8                       l2777 0BB4                       l2769 0B29  
                     l2697 0943                       l3569 1A19                       l2689 14EB  
                     l2961 1172                       l2953 1151                       l2945 112E  
                     l2937 1115                       l2881 0CA4                       l3497 0464  
                     l3489 0363                       l3593 0845                       l3585 0831  
                     l2859 19D4                       l2795 0BED                       l2787 0BD9  
                     l2779 0BBD                       l2699 0949                       l2963 117C  
                     l2971 1196                       l2955 115F                       l2947 113D  
                     l2875 0786                       l2891 0D97                       l2883 0CA6  
                     l3499 04BF                       l3595 0848                       l3587 0836  
                     l2797 0BF1                       l2789 0BE2                       l2957 1169  
                     l2949 113F                       l2869 06D5                       l2893 0D9E  
                     l2885 0CAD                       l3669 15D9                       l3597 084D  
                     l3589 083B                       l2799 0C05                       l2983 11B6  
                     l2959 116A                       l2879 0CA0                       l3599 0857  
                     l2985 11C3                       l2977 119D                       l2969 1184  
                     l2897 0E26                       l2995 11D9                       l2979 11AD  
                     l2997 11E1                       l2989 11CC                       l2999 11F2  
                     ?_isr 0070                       STR_1 10B5                       STR_2 10A0  
                     u3000 1AD0                       u3001 1ACF                       u3010 1AD7  
                     u3011 1AD6                       u3020 1ADE                       u3100 1E01  
                     u3021 1ADD                       u3101 1E00                       u3030 1AE5  
                     u3031 1AE4                       u3120 1E15                       u3040 1DC2  
                     u4001 0B48                       u3121 1E14                       u3105 1DFD  
                     u3041 1DC1                       u4010 0B72                       u4002 0B4F  
                     u3130 1E1A                       u3050 1DCD                       u3210 1D44  
                     u4003 0B56                       u3131 1E19                       u3115 1E09  
                     u3051 1DCC                       u3211 1D43                       u4100 0BF1  
                     u3300 1A75                       u3060 1DDE                       u3220 1D49  
                     u3140 1CFF                       u4101 0BF0                       u4021 0B7E  
                     u3301 1A74                       u3061 1DDD                       u3221 1D48  
                     u3205 1D38                       u3141 1CFE                       u4110 0C05  
                     u4030 0B9A                       u4022 0B85                       u3230 1B79  
                     u3150 1D0A                       u4111 0C04                       u4023 0B8C  
                     u4015 0B6D                       u3231 1B78                       u3151 1D09  
                     u4120 0C0C                       u3400 12B9                       u5000 1E77  
                     u3320 1A89                       u4200 05C6                       u3080 1DF0  
                     u3160 1D15                       u4121 0C0B                       u4041 0BA6  
                     u3401 12B8                       u5001 1E76                       u3321 1A88  
                     u4201 05C5                       u3081 1DEF                       u3161 1D14  
                     u4130 0C12                       u4042 0BAD                       u3410 12BF  
                     u5010 1E7E                       u3250 1B8B                       u3330 1A93  
                     u4131 0C11                       u4043 0BB4                       u4035 0B95  
                     u3411 12BE                       u5011 1E7D                       u3251 1B8A  
                     u3331 1A92                       u3315 1A7B                       u3075 1DE2  
                     u4140 0C24                       u3420 12C4                       u5100 1CEF  
                     u3180 1D27                       u4141 0C23                       u3421 12C3  
                     u5101 1CEE                       u3245 1B7D                       u3181 1D26  
                     u4150 0C33                       u4070 0BD8                       u5110 1F4C  
                     u3510 137E                       u3430 12DD                       u5030 1E8F  
                     u3270 1B9C                       u3350 1AA6                       u3190 1D31  
                     u4071 0BD7                       u4055 0BB6                       u5111 1F4B  
                     u3511 137D                       u3431 12DC                       u5031 1E8E  
                     u3271 1B9B                       u3351 1AA5                       u3335 1A8F  
                     u4215 05E3                       u3095 1DF1                       u3191 1D30  
                     u3175 1D19                       u4160 0C50                       u5200 1FC9  
                     u5120 1F50                       u3520 1382                       u3440 12E1  
                     u3360 1285                       u5040 1E94                       u4240 06DB  
                     u4161 0C4F                       u4065 0BCD                       u5201 1FC8  
                     u5121 1F4F                       u3601 13FA                       u3521 1381  
                     u3505 136B                       u3441 12E0                       u3361 1284  
                     u5041 1E93                       u5025 1E81                       u3265 1B8C  
                     u3345 1A9A                       u4241 06DA                       u4225 063F  
                     u4305 0CCF                       u4170 0C6A                       u4090 0BEC  
                     u5210 1FCD                       u5130 1F70                       u3610 140E  
                     u3602 13FB                       u3530 1387                       u3450 1339  
                     u3370 128B                       u5050 1CAC                       u3290 1BB0  
                     u4410 0F4B                       u4330 0D9E                       u4171 0C69  
                     u4155 0C2E                       u4091 0BEB                       u5211 1FCC  
                     u5131 1F6F                       u3611 140F                       u3603 1400  
                     u3531 1386                       u3451 1338                       u3371 128A  
                     u5051 1CAB                       u3291 1BAF                       u3275 1B98  
                     u4235 0694                       u3195 1D2D                       u4411 0F4A  
                     u4331 0D9D                       u4315 0D0B                       u5300 1B6E  
                     u4180 0C88                       u5220 1FE2                       u3700 1486  
                     u3620 142C                       u3612 1414                       u3604 1401  
                     u3460 1344                       u3380 1290                       u4500 115F  
                     u5301 1B6D                       u4181 0C87                       u4165 0C4C  
                     u4085 0BDB                       u3701 1485                       u3621 142B  
                     u3613 1415                       u3605 1406                       u3541 1399  
                     u3461 1342                       u3381 128F                       u4501 115E  
                     u3285 1BA4                       u4405 0F03                       u4325 0D56  
                     u5230 1FF2                       u5150 1F91                       u4190 1946  
                     u3710 148C                       u3630 1451                       u3606 1407  
                     u3550 13AB                       u3542 13A0                       u3470 1345  
                     u3390 12AE                       u5070 1CC0                       u5310 150C  
                     u4175 0C66                       u5231 1FF1                       u5151 1F90  
                     u4191 1945                       u3711 148B                       u3631 1450  
                     u3551 13AA                       u3543 13A7                       u3455 1335  
                     u3391 12AD                       u5071 1CBF                       u4255 06F8  
                     u5311 150B                       u5240 1FF6                       u3800 14E9  
                     u3720 1493                       u3640 1456                       u3560 13AF  
                     u3480 1359                       u5080 1CD2                       u4600 11C3  
                     u4520 1178                       u4280 0CA4                       u5400 16C3  
                     u5320 152C                       u5241 1FF5                       u5225 1FDD  
                     u5145 1F83                       u3801 14E8                       u3721 1492  
                     u3641 1455                       u3561 13AE                       u3481 1358  
                     u5081 1CD1                       u5065 1CB1                       u4601 11C2  
                     u4521 1177                       u4505 115B                       u4265 0745  
                     u4425 0F5E                       u4345 0DB1                       u4281 0CA3  
                     u5401 16C2                       u5321 152B                       u2930 10E0  
                     u5170 1FB3                       u3810 14FA                       u3730 1499  
                     u3570 13BE                       u3490 1368                       u4610 11D7  
                     u4530 117C                       u4450 1970                       u4370 0E5A  
                     u4290 0CAD                       u5410 175A                       u5330 156C  
                     u2931 10DF                       u5171 1FB2                       u3811 14F9  
                     u3731 1498                       u3571 13BD                       u3491 1367  
                     u4611 11D6                       u4531 117B                       u4515 116B  
                     u4275 0791                       u4451 196F                       u4435 0F9A  
                     u4371 0E59                       u4355 0DED                       u4291 0CAC  
                     u5411 1759                       u5331 156B                       u5260 0809  
                     u3820 094D                       u3740 14AB                       u3660 146C  
                     u4700 125A                       u4540 1183                       u4460 1976  
                     u5500 01CE                       u5420 178C                       u5340 157A  
                     u5261 0808                       u3901 09F1                       u3821 094C  
                     u5165 1FA5                       u3741 14AA                       u3661 146B  
                     u5085 1CCE                       u4701 1259                       u4541 1182  
                     u4461 1975                       u4445 0FD6                       u4365 0E29  
                     u5501 01CD                       u5421 178B                       u5341 1579  
                     u5270 081B                       u2950 10F4                       u3902 09F8  
                     u3830 0953                       u5190 1FC3                       u3750 14BA  
                     u3670 1471                       u3590 13E3                       u4630 1218  
                     u4470 110C                       u5510 01D9                       u5430 17A3  
                     u5350 15BE                       u5271 081A                       u2951 10F3  
                     u3911 0A0D                       u3903 09FF                       u3831 0952  
                     u5191 1FC2                       u3671 1470                       u3655 1461  
                     u3591 13E2                       u5095 1CE1                       u4631 1217  
                     u4471 110B                       u5511 01D8                       u5431 17A2  
                     u5351 15BD                       u2960 1AB0                       u5280 1B38  
                     u3912 0A14                       u3840 0958                       u3760 14C9  
                     u3680 147B                       u4720 126B                       u4560 1195  
                     u4480 1126                       u5600 033A                       u5520 01F4  
                     u5440 0025                       u5360 15EF                       u2961 1AAF  
                     u2945 10E7                       u3921 0A39                       u3913 0A1B  
                     u3841 0957                       u5185 1FB8                       u3761 14C8  
                     u3681 147A                       u3593 13DF                       u3585 13C1  
                     u4721 126A                       u4625 11FF                       u4561 1194  
                     u4481 1125                       u4385 0E7C                       u5601 0339  
                     u5521 01F3                       u5505 01CA                       u5441 17FA  
                     u5361 15EC                       u2970 1ABB                       u5290 1B5C  
                     u3922 0A40                       u3850 0979                       u3770 14D2  
                     u3690 1481                       u4810 1D94                       u4730 07D2  
                     u4650 1236                       u4570 119C                       u5530 0206  
                     u5450 004E                       u5370 15F3                       u2971 1ABA  
                     u3931 0A55                       u3923 0A47                       u3851 0978  
                     u3771 14D1                       u3755 14B5                       u3691 1480  
                     u4811 1D93                       u4731 07D1                       u4715 125D  
                     u4651 1235                       u4635 1214                       u4571 119B  
                     u4555 1185                       u4395 0EB8                       u5531 0205  
                     u5451 004D                       u5435 179F                       u5371 15F2  
                     u2980 1AC2                       u3932 0A5C                       u3860 097F  
                     u3780 14D7                       u4660 123A                       u5700 0531  
                     u5540 0228                       u5460 0075                       u5380 1630  
                     u2981 1AC1                       u3933 0A63                       u3861 097E  
                     u4901 1EED                       u3781 14D6                       u4805 1D7B  
                     u4661 1239                       u4645 1229                       u5701 0530  
                     u5541 0227                       u5461 0074                       u5445 17F5  
                     u5381 162F                       u2990 1AC9                       u3870 0984  
                     u4910 1F06                       u4902 1EEE                       u3790 14E4  
                     u4830 1DB2                       u4670 1241                       u4590 11AD  
                     u5710 053B                       u5630 04C6                       u5550 0236  
                     u5470 0084                       u5390 1678                       u2991 1AC8  
                     u3951 0A8B                       u3871 0983                       u4911 1F05  
                     u4903 1EF3                       u3791 14E3                       u4831 1DB1  
                     u4815 1D90                       u4671 1240                       u4591 11AC  
                     u4495 114A                       u5711 053A                       u5631 04C5  
                     u5615 03C1                       u5551 0235                       u5471 0083  
                     u5391 1677                       u3952 0A92                       u3880 099B  
                     u4840 1C18                       u4904 1EF4                       u4760 07EE  
                     u5720 0549                       u5640 04DE                       u5480 00AD  
                     u3961 0AB8                       u3953 0A99                       u3945 0A65  
                     u3881 099A                       u4841 1C17                       u4921 1F15  
                     u4905 1EF9                       u4825 1DA4                       u4761 07ED  
                     u4745 07DB                       u4585 119F                       u5721 0548  
                     u5641 04DD                       u5625 0467                       u5545 0224  
                     u5481 00AC                       u3962 0ABF                       u3890 09A0  
                     u4850 1C34                       u4930 1F40                       u4922 1F16  
                     u4906 1EFA                       u4770 1D65                       u4690 1253  
                     u5730 0561                       u5650 04E5                       u5570 02EF  
                     u5810 0916                       u3963 0AC6                       u3891 099F  
                     u4851 1C33                       u4931 1F3F                       u4923 1F1B  
                     u4771 1D64                       u4755 07E2                       u4691 1252  
                     u5731 0560                       u5651 04E4                       u5571 02EE  
                     u5475 0080                       u5811 0915                       u4860 1C4E  
                     u4924 1F1C                       u4940 07FD                       u5740 0577  
                     u5660 04ED                       u5580 0310                       u5820 0921  
                     u3981 0AEE                       u4861 1C4D                       u4925 1F21  
                     u4941 07FC                       u4685 1243                       u5741 0576  
                     u5725 0545                       u5661 04EC                       u5581 030F  
                     u5565 0245                       u5821 0920                       u3982 0AF5  
                     u4926 1F22                       u4870 1EB6                       u4950 1E31  
                     u4790 1D79                       u5750 058E                       u5670 04FE  
                     u5590 031F                       u3991 0B1B                       u3983 0AFC  
                     u3975 0AC8                       u4935 1F3C                       u4871 1EB5  
                     u4951 1E30                       u4791 1D78                       u5751 058D  
                     u5735 055D                       u5671 04FD                       u5591 031E  
                     u5495 019B                       u3992 0B22                       u4880 1ED2  
                     u4960 1E48                       u5760 059A                       u5680 0514  
                     u3993 0B29                       u4865 1C4A                       u4881 1ED1  
                     u4785 1D6A                       u5761 0599                       u5681 0513  
                     u5585 030C                       u4890 1EDE                       u4970 1E5E  
                     u5770 05B8                       u5690 0525                       u5907 1BE3  
                     u4891 1EDD                       u4971 1E5D                       u5771 05B5  
                     u5691 0524                       u5675 04FA                       u5595 031B  
                     u5780 1A37                       u4980 1E65                       u5917 19B6  
                     u5781 1A36                       u4981 1E64                       u4965 1E43  
                     u5685 0510                       u5837 0909                       u5847 0932  
                     u5857 199E                       u5867 19CE                       u4995 1E67  
                     u5877 19D6                       u5887 1BC1                       u5897 1BD1  
                     _TXIF 0064          ?_Lcd_Write_String 0020                       _conv 1AE9  
                     _main 0827                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0022               _sprintf$1211 00BA            __end_of_Lcd_Cmd 19BF  
                    ??_isr 0073              ___fltol@sign1 0062                      ?_conv 0046  
          __end_of___fladd 14FC                      ?_main 0070            __end_of___awdiv 1E24  
          __end_of___flneg 0800            __end_of___awmod 1D53            __end_of___flmul 0C9D  
          __end_of___flsub 1CA2            __end_of___fltol 1EA0                      _ANSEL 0188  
          __end_of___lldiv 1DBB            ___awdiv@divisor 0023            __end_of___llmod 1CF8  
          __end_of___lwdiv 1BB5                      i1l101 1A0C                      i1l111 1A6E  
                    i1l106 19F5                      i1l109 1A55            __end_of___lwmod 1AAB  
          ___awdiv@counter 0028                      _RCREG 001A            __end_of_cfg_adc 19A5  
                    _SPBRG 0099                      _PORTA 0005            __end_of_cfg_clk 1935  
  __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019            __end_of_dpowers 10A0            __end_of_int_adc 19F6  
                    _scale 0C9D            __end_of_isdigit 197A                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 05BD  
         __end_of_Lcd_Init 1C02           __end_of_Lcd_Port 1AE9            __initialization 000F  
             __end_of_conv 1B29               __end_of_main 093C                     ??_conv 004A  
                   ??_main 00D5         __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD  
         ___llmod@dividend 0024                     ?_scale 0046                     _ADRESH 001E  
         ___awdiv@dividend 0025                     _ANSELH 0189                     i1l3221 19E5  
                   i1l3223 19EC                     i1l3225 19F2                     i1l3219 19DA  
                   i1l1891 1A44                     i1l1893 1A48                     i1l1885 1A38  
                   i1l3581 1A07                     i1l1895 1A5D                     i1l1887 1A3C  
                   i1l3575 19F6                     i1l1897 1A5F                     i1l1889 1A42  
                   i1l3577 19FC                     i1l1899 1A61                     i1l3579 1A01  
                   u234_20 1A42                     u234_21 1A41                     u235_20 1A5D  
                   u235_21 1A5C                     u525_20 19E5                     u525_21 19E4  
                   u580_20 1A07                     u580_21 1A06                  ??_Lcd_Cmd 0076  
                   u592_27 1A4E                     u593_27 1A67                     u579_20 19FC  
                   u579_21 19FB                     _SPBRGH 009A    __size_of_Lcd_Write_Char 001B  
         __end_of_cfg_inte 193F           __end_of___xxtofl 2000           __end_of__powers_ 1044  
                   ___flge 1EA0                     ___fleq 1C02                  ??___fladd 0062  
                   ___wmul 07CA                  ??___awdiv 0027                     _cfg_io 1956  
                ??___flneg 0079                  ??___awmod 0020                  ??___flmul 0034  
                ??___flsub 0079                  ??___fltol 005D                  ??___lldiv 0075  
                ??___llmod 0075                  ??___lwdiv 0026                  ??___lwmod 0020  
                ??_cfg_adc 0075                  ??_cfg_clk 0075                     _fround 05BD  
         ___awdiv@quotient 002A            ___awmod@divisor 0075           __end_of_int_uart 1A6F  
          ___awmod@counter 0021                     conv@aa 0052                  ??_int_adc 0070  
                ??_isdigit 0075         __size_of__Umul8_16 0029                     saved_w 007E  
                ??_sprintf 00B5            Lcd_Set_Cursor@a 0022            Lcd_Set_Cursor@b 0020  
               ___flge@ff1 0020                 ___flge@ff2 0024               ___xxtofl@arg 0026  
             ___xxtofl@exp 0025               ___xxtofl@val 0075                 ___fleq@ff1 0020  
               ___fleq@ff2 0024    __end_of__initialization 0021                 ___flneg@f1 0075  
        __end_of_Lcd_Clear 1956                 ___fltol@f1 0059             __pcstackCOMMON 0070  
       __size_of_cfg_usart 0015              __end_of_scale 1000             _Lcd_Set_Cursor 0801  
               __div_to_l_ 11B6                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 002D            __div_to_l_@cntr 002C                    ??_scale 004A  
          __div_to_l_@quot 0028               sprintf@width 00C5                 __pbssBANK1 00D8  
               __pbssBANK3 0190              __div_to_l_@f1 0020              __div_to_l_@f2 0024  
        __end_of__Umul8_16 10F9                 __pmaintext 0827                    ?___flge 0020  
                  ?___fleq 0020                    ?___wmul 0075                    ?_cfg_io 0070  
               __pintentry 0004         __size_of_send_char 000A         __size_of_send_crct 0025  
                  ?_fround 0046  __size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 0827  
                ?_cfg_inte 0070                  ?___xxtofl 0075                 ??_Lcd_Init 0020  
               ??_Lcd_Port 0075                send_crct@st 0022                 __stringtab 1000  
        __end_of_cfg_usart 198F             _Lcd_Write_Char 19BF                    _Lcd_Cmd 19A5  
                ?_int_uart 0070          __end_of__npowers_ 1078                 _scale$1210 0054  
          __size_of___flge 00A4            __size_of___fleq 0050                    ___fladd 1274  
                  ___awdiv 1DBB                    ___flneg 07F5                    ___awmod 1CF8  
                  ___flmul 093C                    ___flsub 1C52                    ___fltol 1E24  
                  ___lldiv 1D53            __size_of___wmul 002B                    ___llmod 1CA2  
          __size_of_cfg_io 0012                    ___lwdiv 1B6F                    ___lwmod 1A6F  
                  _cfg_adc 198F                    _cfg_clk 192D            __size_of_fround 020D  
          ?_Lcd_Set_Cursor 0020                    __ptext1 14FC                    __ptext2 0C9D  
                  __ptext3 1CF8                    __ptext4 1DBB                    __ptext5 1968  
                  __ptext6 05BD                    __ptext7 1A6F                    __ptext8 1B6F  
                  __ptext9 10F9                ?__div_to_l_ 0020                    _dpowers 1078  
                  _int_adc 19DA                 ??_cfg_inte 0075                    _isdigit 1968  
             __size_of_isr 001D                 ??___xxtofl 0020           ___awmod@dividend 0077  
                  _sprintf 14FC                    clrloop0 10C9     __end_of_Lcd_Write_Char 19DA  
     end_of_initialization 0021          __end_of_send_char 1949          __end_of_send_crct 1A38  
               ??_int_uart 0070            ___lldiv@divisor 0020            ___lldiv@counter 002C  
                _RCSTAbits 0018                    psplit$0 B0035                  Lcd_Port@a 0075  
           __tdiv_to_l_@f1 0020             __tdiv_to_l_@f2 0024              send_char@dato 0075  
            ??__tdiv_to_l_ 0075                  _PORTCbits 0007                ___fladd@grs 006D  
            ___xxtofl@sign 0024            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0020  
        Lcd_Write_String@i 0025                 conv@result 004E                ___flmul@grs 003A  
                _TXSTAbits 0098        __size_of__div_to_l_ 00BE                  _Lcd_Clear 1949  
           __end_of___flge 1F44             __end_of___fleq 1C52             __end_of___wmul 07F5  
           __end_of_cfg_io 1968           _Lcd_Write_String 1B29          pnum$text1_split_1 0035  
              _BAUDCTLbits 0187             __end_of_fround 07CA        start_initialization 000F  
      __end_of__tdiv_to_l_ 11B6                __end_of_isr 1A13          __size_of_Lcd_Init 004D  
        __size_of_Lcd_Port 003E            ___llmod@divisor 0020            ___llmod@counter 0076  
               ?_Lcd_Clear 0070                   ??___flge 0075                   ??___fleq 0075  
                 ??___wmul 0079                   ??_cfg_io 0075                  __Umul8_16 10D0  
          Lcd_Write_Char@a 0077                   ??_fround 004A              sprintf@tmpval 00C7  
                ___fladd@a 005E                  ___fladd@b 005A                 fround@prec 0059  
                ___flmul@a 0030                  ___flmul@b 002C                  ___flsub@a 00A0  
                ___flsub@b 00A4                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0          __size_of_cfg_inte 000A          __size_of___xxtofl 00BC  
             _isdigit$1024 0075                   ?_Lcd_Cmd 0070                sprintf@flag 00C3  
              sprintf@eexp 00CB                sprintf@fval 00CD                sprintf@prec 00D2  
                _cfg_usart 197A           ___lwdiv@dividend 0024          __size_of_int_uart 0037  
         ??_Lcd_Set_Cursor 0021                   ?___fladd 005A                   ?___awdiv 0023  
                 ?___flneg 0075                   ?___awmod 0075                   ?___flmul 002C  
                 ?___flsub 00A0                   ?___fltol 0059                   ?___lldiv 0020  
                 ?___llmod 0020                  __npowers_ 1044                 ?__Umul8_16 0075  
                 ?___lwdiv 0022                   ?___lwmod 0075                   ?_cfg_adc 0070  
                 ?_cfg_clk 0070                  __pstrings 1000                __tdiv_to_l_ 10F9  
               send_crct@i 0020               ??__div_to_l_ 0075                   ?_int_adc 0070  
                 ?_isdigit 0070           ___lwdiv@quotient 0027                   ?_sprintf 00A8  
           __size_of_scale 0363          interrupt_function 0004             ___wmul@product 0020  
                clear_ram0 10C8                 ?_cfg_usart 0070                   _PIE1bits 008C  
                _send_char 193F                  _send_crct 1A13                   Lcd_Cmd@a 0078  
                 _PIR1bits 000C         __end_of__div_to_l_ 1274                ??_Lcd_Clear 0079  
               _ADCON0bits 001F                __stringbase 100F                 _ADCON1bits 009F  
        ___wmul@multiplier 0075           ??_Lcd_Write_Char 0076                   _Lcd_Init 1BB5  
                 _Lcd_Port 1AAB   __end_of_Lcd_Write_String 1B6F           __size_of_Lcd_Cmd 001A  
               ?_send_char 0070                 ?_send_crct 0070                ??__Umul8_16 0077  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 005B           __size_of___flmul 0361           __size_of___flsub 0050  
         __size_of___fltol 007C           __size_of___lldiv 0068           __size_of___llmod 0056  
         __size_of___lwdiv 0046           __size_of___lwmod 003C           __size_of_cfg_adc 0016  
         __size_of_cfg_clk 0008                _fround$1208 0055                _fround$1209 0051  
       __end_of__stringtab 1010                 sprintf@val 00BF                   _cfg_inte 1935  
                 ___xxtofl 1F44           __size_of_int_adc 001C           __size_of_isdigit 0012  
          ___lwdiv@divisor 0022            ___lwdiv@counter 0029                   __ptext10 11B6  
                 __ptext11 07CA                   __ptext20 1A13                   __ptext12 1CA2  
                 __ptext21 193F                   __ptext13 1D53                   __ptext30 198F  
                 __ptext22 1AE9                   __ptext14 1E24                   __ptext31 1B29  
                 __ptext23 1F44                   __ptext15 1C52                   __ptext40 19DA  
                 __ptext32 19BF                   __ptext24 093C                   __ptext16 1274  
                 __ptext33 0801                   __ptext25 10D0                   __ptext17 07F5  
                 __ptext34 1BB5                   __ptext26 197A                   __ptext18 1EA0  
                 __ptext35 1949                   __ptext27 1956                   __ptext19 1C02  
                 __ptext36 19A5                   __ptext28 1935                   __ptext37 1AAB  
                 __ptext29 192D                   __ptext38 19F6                   __ptext39 1A38  
                 __powers_ 1010           __size_of_sprintf F0C1              __size_of_conv 0040  
            __size_of_main 0115                  pnum$text1 000B                   _int_uart 1A38  
              ??_cfg_usart 0075                 _INTCONbits 000B                   isdigit@c 0076  
                 scale@scl 0058                   intlevel1 0000                  sprintf@ap 00BE  
         __tdiv_to_l_@exp1 002D           __tdiv_to_l_@cntr 002C                  sprintf@sp 00D1  
         __tdiv_to_l_@quot 0028           ___lwmod@dividend 0077           ___lldiv@dividend 0024  
              ??_send_char 0075                ??_send_crct 0076                  stringcode 100A  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 0023               ?__tdiv_to_l_ 0020  
   __Umul8_16@multiplicand 0075                   sprintf@c 00D4                   sprintf@f 00A8  
         ___lldiv@quotient 0028            ___lwmod@divisor 0075            ___lwmod@counter 0021  
                 stringdir 100A                   stringtab 1000              ___fladd@signs 006A  
             ___fladd@aexp 006B               ___fladd@bexp 006C       __Umul8_16@multiplier 0024  
        __Umul8_16@product 0020  
