

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jul 27 10:38:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F887 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0105                     	;# 
   157  0107                     	;# 
   158  0108                     	;# 
   159  0109                     	;# 
   160  010C                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  0185                     	;# 
   166  0187                     	;# 
   167  0188                     	;# 
   168  0189                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  008F                     	;# 
   216  0090                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0095                     	;# 
   224  0096                     	;# 
   225  0097                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  0105                     	;# 
   235  0107                     	;# 
   236  0108                     	;# 
   237  0109                     	;# 
   238  010C                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  0185                     	;# 
   244  0187                     	;# 
   245  0188                     	;# 
   246  0189                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  008F                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  0107                     	;# 
   314  0108                     	;# 
   315  0109                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  0185                     	;# 
   322  0187                     	;# 
   323  0188                     	;# 
   324  0189                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0008                     	;# 
   336  0009                     	;# 
   337  000A                     	;# 
   338  000B                     	;# 
   339  000C                     	;# 
   340  000D                     	;# 
   341  000E                     	;# 
   342  000E                     	;# 
   343  000F                     	;# 
   344  0010                     	;# 
   345  0011                     	;# 
   346  0012                     	;# 
   347  0013                     	;# 
   348  0014                     	;# 
   349  0015                     	;# 
   350  0015                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001B                     	;# 
   358  001C                     	;# 
   359  001D                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  0081                     	;# 
   363  0085                     	;# 
   364  0086                     	;# 
   365  0087                     	;# 
   366  0088                     	;# 
   367  0089                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  008F                     	;# 
   372  0090                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0094                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0097                     	;# 
   382  0098                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  009F                     	;# 
   390  0105                     	;# 
   391  0107                     	;# 
   392  0108                     	;# 
   393  0109                     	;# 
   394  010C                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  0185                     	;# 
   400  0187                     	;# 
   401  0188                     	;# 
   402  0189                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405                           
   406                           	psect	strings
   407  1000                     __pstrings:
   408  1000                     stringtab:
   409  1000                     __stringtab:
   410                           
   411                           ;	String table - string pointers are 1 byte each
   412  1000  1BFF               	btfsc	btemp+1,7
   413  1001  280A               	ljmp	stringcode
   414  1002  1383               	bcf	3,7
   415  1003  187F               	btfsc	btemp+1,0
   416  1004  1783               	bsf	3,7
   417  1005  0800               	movf	0,w
   418  1006  0A84               	incf	4,f
   419  1007  1903               	skipnz
   420  1008  0AFF               	incf	btemp+1,f
   421  1009  0008               	return
   422  100A                     stringcode:
   423  100A                     stringdir:
   424  100A  3010               	movlw	high stringdir
   425  100B  008A               	movwf	10
   426  100C  0804               	movf	4,w
   427  100D  0A84               	incf	4,f
   428  100E  0782               	addwf	2,f
   429  100F                     __stringbase:
   430  100F  3400               	retlw	0
   431  1010                     __end_of__stringtab:
   432  1010                     __powers_:
   433  1010  3400               	retlw	0
   434  1011  3400               	retlw	0
   435  1012  3480               	retlw	128
   436  1013  343F               	retlw	63
   437  1014  3400               	retlw	0
   438  1015  3400               	retlw	0
   439  1016  3420               	retlw	32
   440  1017  3441               	retlw	65
   441  1018  3400               	retlw	0
   442  1019  3400               	retlw	0
   443  101A  34C8               	retlw	200
   444  101B  3442               	retlw	66
   445  101C  3400               	retlw	0
   446  101D  3400               	retlw	0
   447  101E  347A               	retlw	122
   448  101F  3444               	retlw	68
   449  1020  3400               	retlw	0
   450  1021  3440               	retlw	64
   451  1022  341C               	retlw	28
   452  1023  3446               	retlw	70
   453  1024  3400               	retlw	0
   454  1025  3450               	retlw	80
   455  1026  34C3               	retlw	195
   456  1027  3447               	retlw	71
   457  1028  3400               	retlw	0
   458  1029  3424               	retlw	36
   459  102A  3474               	retlw	116
   460  102B  3449               	retlw	73
   461  102C  3480               	retlw	128
   462  102D  3496               	retlw	150
   463  102E  3418               	retlw	24
   464  102F  344B               	retlw	75
   465  1030  3420               	retlw	32
   466  1031  34BC               	retlw	188
   467  1032  34BE               	retlw	190
   468  1033  344C               	retlw	76
   469  1034  3428               	retlw	40
   470  1035  346B               	retlw	107
   471  1036  346E               	retlw	110
   472  1037  344E               	retlw	78
   473  1038  34F9               	retlw	249
   474  1039  3402               	retlw	2
   475  103A  3415               	retlw	21
   476  103B  3450               	retlw	80
   477  103C  34EC               	retlw	236
   478  103D  3478               	retlw	120
   479  103E  34AD               	retlw	173
   480  103F  3460               	retlw	96
   481  1040  34CA               	retlw	202
   482  1041  34F2               	retlw	242
   483  1042  3449               	retlw	73
   484  1043  3471               	retlw	113
   485  1044                     __end_of__powers_:
   486  1044                     __npowers_:
   487  1044  3400               	retlw	0
   488  1045  3400               	retlw	0
   489  1046  3480               	retlw	128
   490  1047  343F               	retlw	63
   491  1048  34CD               	retlw	205
   492  1049  34CC               	retlw	204
   493  104A  34CC               	retlw	204
   494  104B  343D               	retlw	61
   495  104C  340A               	retlw	10
   496  104D  34D7               	retlw	215
   497  104E  3423               	retlw	35
   498  104F  343C               	retlw	60
   499  1050  346F               	retlw	111
   500  1051  3412               	retlw	18
   501  1052  3483               	retlw	131
   502  1053  343A               	retlw	58
   503  1054  3417               	retlw	23
   504  1055  34B7               	retlw	183
   505  1056  34D1               	retlw	209
   506  1057  3438               	retlw	56
   507  1058  34AC               	retlw	172
   508  1059  34C5               	retlw	197
   509  105A  3427               	retlw	39
   510  105B  3437               	retlw	55
   511  105C  34BD               	retlw	189
   512  105D  3437               	retlw	55
   513  105E  3486               	retlw	134
   514  105F  3435               	retlw	53
   515  1060  3495               	retlw	149
   516  1061  34BF               	retlw	191
   517  1062  34D6               	retlw	214
   518  1063  3433               	retlw	51
   519  1064  3477               	retlw	119
   520  1065  34CC               	retlw	204
   521  1066  342B               	retlw	43
   522  1067  3432               	retlw	50
   523  1068  345F               	retlw	95
   524  1069  3470               	retlw	112
   525  106A  3489               	retlw	137
   526  106B  3430               	retlw	48
   527  106C  34FF               	retlw	255
   528  106D  34E6               	retlw	230
   529  106E  34DB               	retlw	219
   530  106F  342E               	retlw	46
   531  1070  3408               	retlw	8
   532  1071  34E5               	retlw	229
   533  1072  343C               	retlw	60
   534  1073  341E               	retlw	30
   535  1074  3460               	retlw	96
   536  1075  3442               	retlw	66
   537  1076  34A2               	retlw	162
   538  1077  340D               	retlw	13
   539  1078                     __end_of__npowers_:
   540  1078                     _dpowers:
   541  1078  3401               	retlw	1
   542  1079  3400               	retlw	0
   543  107A  3400               	retlw	0
   544  107B  3400               	retlw	0
   545  107C  340A               	retlw	10
   546  107D  3400               	retlw	0
   547  107E  3400               	retlw	0
   548  107F  3400               	retlw	0
   549  1080  3464               	retlw	100
   550  1081  3400               	retlw	0
   551  1082  3400               	retlw	0
   552  1083  3400               	retlw	0
   553  1084  34E8               	retlw	232
   554  1085  3403               	retlw	3
   555  1086  3400               	retlw	0
   556  1087  3400               	retlw	0
   557  1088  3410               	retlw	16
   558  1089  3427               	retlw	39
   559  108A  3400               	retlw	0
   560  108B  3400               	retlw	0
   561  108C  34A0               	retlw	160
   562  108D  3486               	retlw	134
   563  108E  3401               	retlw	1
   564  108F  3400               	retlw	0
   565  1090  3440               	retlw	64
   566  1091  3442               	retlw	66
   567  1092  340F               	retlw	15
   568  1093  3400               	retlw	0
   569  1094  3480               	retlw	128
   570  1095  3496               	retlw	150
   571  1096  3498               	retlw	152
   572  1097  3400               	retlw	0
   573  1098  3400               	retlw	0
   574  1099  34E1               	retlw	225
   575  109A  34F5               	retlw	245
   576  109B  3405               	retlw	5
   577  109C  3400               	retlw	0
   578  109D  34CA               	retlw	202
   579  109E  349A               	retlw	154
   580  109F  343B               	retlw	59
   581  10A0                     __end_of_dpowers:
   582  0007                     _PORTCbits	set	7
   583  000B                     _INTCONbits	set	11
   584  0018                     _RCSTAbits	set	24
   585  0005                     _PORTA	set	5
   586  001A                     _RCREG	set	26
   587  0019                     _TXREG	set	25
   588  001E                     _ADRESH	set	30
   589  001F                     _ADCON0bits	set	31
   590  000C                     _PIR1bits	set	12
   591  0039                     _RC1	set	57
   592  0047                     _RD7	set	71
   593  0046                     _RD6	set	70
   594  0045                     _RD5	set	69
   595  0044                     _RD4	set	68
   596  0043                     _RD3	set	67
   597  0042                     _RD2	set	66
   598  0041                     _RD1	set	65
   599  0040                     _RD0	set	64
   600  0064                     _TXIF	set	100
   601  008C                     _PIE1bits	set	140
   602  009A                     _SPBRGH	set	154
   603  0099                     _SPBRG	set	153
   604  0098                     _TXSTAbits	set	152
   605  008F                     _OSCCONbits	set	143
   606  009F                     _ADCON1bits	set	159
   607  0089                     _TRISE	set	137
   608  0088                     _TRISD	set	136
   609  0085                     _TRISA	set	133
   610  0087                     _TRISC	set	135
   611  0086                     _TRISB	set	134
   612  0187                     _BAUDCTLbits	set	391
   613  0188                     _ANSEL	set	392
   614  0189                     _ANSELH	set	393
   615  10A0                     STR_2:
   616  10A0  3425               	retlw	37	;'%'
   617  10A1  3433               	retlw	51	;'3'
   618  10A2  342E               	retlw	46	;'.'
   619  10A3  3431               	retlw	49	;'1'
   620  10A4  3466               	retlw	102	;'f'
   621  10A5  3456               	retlw	86	;'V'
   622  10A6  3420               	retlw	32	;' '
   623  10A7  3425               	retlw	37	;'%'
   624  10A8  3433               	retlw	51	;'3'
   625  10A9  342E               	retlw	46	;'.'
   626  10AA  3432               	retlw	50	;'2'
   627  10AB  3466               	retlw	102	;'f'
   628  10AC  3456               	retlw	86	;'V'
   629  10AD  3420               	retlw	32	;' '
   630  10AE  3425               	retlw	37	;'%'
   631  10AF  3433               	retlw	51	;'3'
   632  10B0  342E               	retlw	46	;'.'
   633  10B1  3432               	retlw	50	;'2'
   634  10B2  3466               	retlw	102	;'f'
   635  10B3  3456               	retlw	86	;'V'
   636  10B4  3400               	retlw	0
   637  10B5                     STR_1:
   638  10B5  3420               	retlw	32	;' '
   639  10B6  3453               	retlw	83	;'S'
   640  10B7  3431               	retlw	49	;'1'
   641  10B8  343A               	retlw	58	;':'
   642  10B9  3420               	retlw	32	;' '
   643  10BA  3420               	retlw	32	;' '
   644  10BB  3420               	retlw	32	;' '
   645  10BC  3453               	retlw	83	;'S'
   646  10BD  3432               	retlw	50	;'2'
   647  10BE  343A               	retlw	58	;':'
   648  10BF  3420               	retlw	32	;' '
   649  10C0  3420               	retlw	32	;' '
   650  10C1  3453               	retlw	83	;'S'
   651  10C2  3433               	retlw	51	;'3'
   652  10C3  343A               	retlw	58	;':'
   653  10C4  3420               	retlw	32	;' '
   654  10C5  3420               	retlw	32	;' '
   655  10C6  3400               	retlw	0
   656                           
   657                           	psect	cinit
   658  000F                     start_initialization:	
   659                           ; #config settings
   660                           
   661  000F                     __initialization:
   662                           
   663                           ; Clear objects allocated to COMMON
   664  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   665                           
   666                           ; Clear objects allocated to BANK1
   667  0010  1383               	bcf	3,7	;select IRP bank0
   668  0011  30D8               	movlw	low __pbssBANK1
   669  0012  0084               	movwf	4
   670  0013  30E7               	movlw	low (__pbssBANK1+15)
   671  0014  160A  158A  20A7  120A  118A  	fcall	clear_ram0
   672                           
   673                           ; Clear objects allocated to BANK3
   674  0019  1783               	bsf	3,7	;select IRP bank2
   675  001A  3090               	movlw	low __pbssBANK3
   676  001B  0084               	movwf	4
   677  001C  30A4               	movlw	low (__pbssBANK3+20)
   678  001D  160A  158A  20A7  120A  118A  	fcall	clear_ram0
   679  0022                     end_of_initialization:	
   680                           ;End of C runtime variable initialization code
   681                           
   682  0022                     __end_of__initialization:
   683  0022  0183               	clrf	3
   684  0023  120A  158A  2827   	ljmp	_main	;jump to C main() function
   685                           
   686                           	psect	bssCOMMON
   687  0078                     __pbssCOMMON:
   688  0078                     _op1:
   689  0078                     	ds	1
   690                           
   691                           	psect	bssBANK1
   692  00D8                     __pbssBANK1:
   693  00D8                     _v33:
   694  00D8                     	ds	4
   695  00DC                     _v22:
   696  00DC                     	ds	4
   697  00E0                     _v11:
   698  00E0                     	ds	4
   699  00E4                     _V3:
   700  00E4                     	ds	1
   701  00E5                     _V2:
   702  00E5                     	ds	1
   703  00E6                     _V1:
   704  00E6                     	ds	1
   705                           
   706                           	psect	bssBANK3
   707  0190                     __pbssBANK3:
   708  0190                     _f2:
   709  0190                     	ds	10
   710  019A                     _f1:
   711  019A                     	ds	10
   712                           
   713                           	psect	clrtext
   714  18A7                     clear_ram0:	
   715                           ;	Called with FSR containing the base address, and
   716                           ;	W with the last address+1
   717                           
   718  18A7  0064               	clrwdt	;clear the watchdog before getting into this loop
   719  18A8                     clrloop0:
   720  18A8  0180               	clrf	0	;clear RAM location pointed to by FSR
   721  18A9  0A84               	incf	4,f	;increment pointer
   722  18AA  0604               	xorwf	4,w	;XOR with final address
   723  18AB  1903               	btfsc	3,2	;have we reached the end yet?
   724  18AC  3400               	retlw	0	;all done for this memory range, return
   725  18AD  0604               	xorwf	4,w	;XOR again to restore value
   726  18AE  28A8               	goto	clrloop0	;do the next byte
   727                           
   728                           	psect	cstackBANK1
   729  00A0                     __pcstackBANK1:
   730  00A0                     ?___flsub:
   731  00A0                     ___flsub@a:	
   732                           ; 4 bytes @ 0x0
   733                           
   734                           
   735                           ; 4 bytes @ 0x0
   736  00A0                     	ds	4
   737  00A4                     ___flsub@b:
   738                           
   739                           ; 4 bytes @ 0x4
   740  00A4                     	ds	4
   741  00A8                     ?_sprintf:
   742  00A8                     sprintf@f:	
   743                           ; 2 bytes @ 0x8
   744                           
   745                           
   746                           ; 1 bytes @ 0x8
   747  00A8                     	ds	13
   748  00B5                     ??_sprintf:
   749                           
   750                           ; 1 bytes @ 0x15
   751  00B5                     	ds	5
   752  00BA                     _sprintf$1212:
   753                           
   754                           ; 4 bytes @ 0x1A
   755  00BA                     	ds	4
   756  00BE                     sprintf@ap:
   757                           
   758                           ; 1 bytes @ 0x1E
   759  00BE                     	ds	1
   760  00BF                     sprintf@val:
   761                           
   762                           ; 4 bytes @ 0x1F
   763  00BF                     	ds	4
   764  00C3                     sprintf@flag:
   765                           
   766                           ; 2 bytes @ 0x23
   767  00C3                     	ds	2
   768  00C5                     sprintf@width:
   769                           
   770                           ; 2 bytes @ 0x25
   771  00C5                     	ds	2
   772  00C7                     sprintf@tmpval:
   773                           
   774                           ; 4 bytes @ 0x27
   775  00C7                     	ds	4
   776  00CB                     sprintf@eexp:
   777                           
   778                           ; 2 bytes @ 0x2B
   779  00CB                     	ds	2
   780  00CD                     sprintf@fval:
   781                           
   782                           ; 4 bytes @ 0x2D
   783  00CD                     	ds	4
   784  00D1                     sprintf@sp:
   785                           
   786                           ; 1 bytes @ 0x31
   787  00D1                     	ds	1
   788  00D2                     sprintf@prec:
   789                           
   790                           ; 2 bytes @ 0x32
   791  00D2                     	ds	2
   792  00D4                     sprintf@c:
   793                           
   794                           ; 1 bytes @ 0x34
   795  00D4                     	ds	1
   796  00D5                     ??_main:
   797                           
   798                           ; 1 bytes @ 0x35
   799  00D5                     	ds	3
   800                           
   801                           	psect	cstackCOMMON
   802  0070                     __pcstackCOMMON:
   803  0070                     ?_isdigit:
   804  0070                     ?_int_adc:	
   805                           ; 1 bit 
   806                           
   807  0070                     ??_int_adc:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     ?_int_uart:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ??_int_uart:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ?_cfg_io:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     ?_cfg_clk:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ?_cfg_inte:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_cfg_adc:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_cfg_usart:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ?_Lcd_Init:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ?_Lcd_Clear:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?_send_crct:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_send_char:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_isr:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ?_main:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ?_Lcd_Port:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ?_Lcd_Cmd:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_Lcd_Write_Char:	
   856                           ; 1 bytes @ 0x0
   857                           
   858                           
   859                           ; 1 bytes @ 0x0
   860  0070                     	ds	3
   861  0073                     ??_isr:
   862                           
   863                           ; 1 bytes @ 0x3
   864  0073                     	ds	2
   865  0075                     ??_cfg_io:
   866  0075                     ??_cfg_clk:	
   867                           ; 1 bytes @ 0x5
   868                           
   869  0075                     ??_cfg_inte:	
   870                           ; 1 bytes @ 0x5
   871                           
   872  0075                     ??_cfg_adc:	
   873                           ; 1 bytes @ 0x5
   874                           
   875  0075                     ??_cfg_usart:	
   876                           ; 1 bytes @ 0x5
   877                           
   878  0075                     ??_send_char:	
   879                           ; 1 bytes @ 0x5
   880                           
   881  0075                     ??_isdigit:	
   882                           ; 1 bytes @ 0x5
   883                           
   884  0075                     ??__div_to_l_:	
   885                           ; 1 bytes @ 0x5
   886                           
   887  0075                     ??_Lcd_Port:	
   888                           ; 1 bytes @ 0x5
   889                           
   890  0075                     ??___wmul:	
   891                           ; 1 bytes @ 0x5
   892                           
   893  0075                     ??___lldiv:	
   894                           ; 1 bytes @ 0x5
   895                           
   896  0075                     ??___awmod:	
   897                           ; 1 bytes @ 0x5
   898                           
   899  0075                     ??___flneg:	
   900                           ; 1 bytes @ 0x5
   901                           
   902  0075                     ??___llmod:	
   903                           ; 1 bytes @ 0x5
   904                           
   905  0075                     ??___lwmod:	
   906                           ; 1 bytes @ 0x5
   907                           
   908  0075                     ?__Umul8_16:	
   909                           ; 1 bytes @ 0x5
   910                           
   911  0075                     send_char@dato:	
   912                           ; 2 bytes @ 0x5
   913                           
   914  0075                     Lcd_Port@a:	
   915                           ; 1 bytes @ 0x5
   916                           
   917  0075                     __Umul8_16@multiplicand:	
   918                           ; 1 bytes @ 0x5
   919                           
   920  0075                     _isdigit$1025:	
   921                           ; 1 bytes @ 0x5
   922                           
   923  0075                     ___wmul@product:	
   924                           ; 1 bytes @ 0x5
   925                           
   926                           
   927                           ; 2 bytes @ 0x5
   928  0075                     	ds	1
   929  0076                     ??_send_crct:
   930  0076                     ??_Lcd_Cmd:	
   931                           ; 1 bytes @ 0x6
   932                           
   933  0076                     ??_Lcd_Write_Char:	
   934                           ; 1 bytes @ 0x6
   935                           
   936  0076                     ___awmod@counter:	
   937                           ; 1 bytes @ 0x6
   938                           
   939  0076                     ___llmod@counter:	
   940                           ; 1 bytes @ 0x6
   941                           
   942  0076                     ___lwmod@counter:	
   943                           ; 1 bytes @ 0x6
   944                           
   945  0076                     isdigit@c:	
   946                           ; 1 bytes @ 0x6
   947                           
   948                           
   949                           ; 1 bytes @ 0x6
   950  0076                     	ds	1
   951  0077                     ??___lwdiv:
   952  0077                     Lcd_Write_Char@a:	
   953                           ; 1 bytes @ 0x7
   954                           
   955  0077                     ___awmod@sign:	
   956                           ; 1 bytes @ 0x7
   957                           
   958                           
   959                           ; 1 bytes @ 0x7
   960  0077                     	ds	1
   961  0078                     ??_Lcd_Clear:
   962  0078                     ??___flsub:	
   963                           ; 1 bytes @ 0x8
   964                           
   965                           
   966                           	psect	cstackBANK0
   967  0020                     __pcstackBANK0:	
   968                           ; 1 bytes @ 0x8
   969                           
   970  0020                     ?___fleq:
   971  0020                     ?___flge:	
   972                           ; 1 bit 
   973                           
   974  0020                     ?_Lcd_Write_String:	
   975                           ; 1 bit 
   976                           
   977  0020                     ??__Umul8_16:	
   978                           ; 1 bytes @ 0x0
   979                           
   980  0020                     ?___wmul:	
   981                           ; 1 bytes @ 0x0
   982                           
   983  0020                     ?___awmod:	
   984                           ; 2 bytes @ 0x0
   985                           
   986  0020                     ?___lwmod:	
   987                           ; 2 bytes @ 0x0
   988                           
   989  0020                     ?__tdiv_to_l_:	
   990                           ; 2 bytes @ 0x0
   991                           
   992  0020                     ?__div_to_l_:	
   993                           ; 4 bytes @ 0x0
   994                           
   995  0020                     ?___lldiv:	
   996                           ; 4 bytes @ 0x0
   997                           
   998  0020                     ?___flneg:	
   999                           ; 4 bytes @ 0x0
  1000                           
  1001  0020                     ?___llmod:	
  1002                           ; 4 bytes @ 0x0
  1003                           
  1004  0020                     ?___xxtofl:	
  1005                           ; 4 bytes @ 0x0
  1006                           
  1007  0020                     Lcd_Cmd@a:	
  1008                           ; 4 bytes @ 0x0
  1009                           
  1010  0020                     send_crct@i:	
  1011                           ; 1 bytes @ 0x0
  1012                           
  1013  0020                     Lcd_Write_String@a:	
  1014                           ; 2 bytes @ 0x0
  1015                           
  1016  0020                     ___wmul@multiplier:	
  1017                           ; 2 bytes @ 0x0
  1018                           
  1019  0020                     ___awmod@divisor:	
  1020                           ; 2 bytes @ 0x0
  1021                           
  1022  0020                     ___lwmod@divisor:	
  1023                           ; 2 bytes @ 0x0
  1024                           
  1025  0020                     ___lldiv@divisor:	
  1026                           ; 2 bytes @ 0x0
  1027                           
  1028  0020                     __div_to_l_@f1:	
  1029                           ; 4 bytes @ 0x0
  1030                           
  1031  0020                     ___fleq@ff1:	
  1032                           ; 4 bytes @ 0x0
  1033                           
  1034  0020                     ___flge@ff1:	
  1035                           ; 4 bytes @ 0x0
  1036                           
  1037  0020                     ___flneg@f1:	
  1038                           ; 4 bytes @ 0x0
  1039                           
  1040  0020                     __tdiv_to_l_@f1:	
  1041                           ; 4 bytes @ 0x0
  1042                           
  1043  0020                     ___llmod@divisor:	
  1044                           ; 4 bytes @ 0x0
  1045                           
  1046  0020                     ___xxtofl@val:	
  1047                           ; 4 bytes @ 0x0
  1048                           
  1049                           
  1050                           ; 4 bytes @ 0x0
  1051  0020                     	ds	1
  1052  0021                     ??_Lcd_Init:
  1053  0021                     ?_Lcd_Set_Cursor:	
  1054                           ; 1 bytes @ 0x1
  1055                           
  1056  0021                     Lcd_Set_Cursor@b:	
  1057                           ; 1 bytes @ 0x1
  1058                           
  1059                           
  1060                           ; 1 bytes @ 0x1
  1061  0021                     	ds	1
  1062  0022                     ??_Lcd_Set_Cursor:
  1063  0022                     ??_Lcd_Write_String:	
  1064                           ; 1 bytes @ 0x2
  1065                           
  1066  0022                     send_crct@st:	
  1067                           ; 1 bytes @ 0x2
  1068                           
  1069  0022                     ___wmul@multiplicand:	
  1070                           ; 1 bytes @ 0x2
  1071                           
  1072  0022                     ___awmod@dividend:	
  1073                           ; 2 bytes @ 0x2
  1074                           
  1075  0022                     ___lwmod@dividend:	
  1076                           ; 2 bytes @ 0x2
  1077                           
  1078  0022                     __Umul8_16@product:	
  1079                           ; 2 bytes @ 0x2
  1080                           
  1081                           
  1082                           ; 2 bytes @ 0x2
  1083  0022                     	ds	1
  1084  0023                     Lcd_Set_Cursor@a:
  1085                           
  1086                           ; 1 bytes @ 0x3
  1087  0023                     	ds	1
  1088  0024                     ??___xxtofl:
  1089  0024                     ?___awdiv:	
  1090                           ; 1 bytes @ 0x4
  1091                           
  1092  0024                     ?___lwdiv:	
  1093                           ; 2 bytes @ 0x4
  1094                           
  1095  0024                     Lcd_Set_Cursor@temp:	
  1096                           ; 2 bytes @ 0x4
  1097                           
  1098  0024                     ___awdiv@divisor:	
  1099                           ; 1 bytes @ 0x4
  1100                           
  1101  0024                     ___lwdiv@divisor:	
  1102                           ; 2 bytes @ 0x4
  1103                           
  1104  0024                     __Umul8_16@word_mpld:	
  1105                           ; 2 bytes @ 0x4
  1106                           
  1107  0024                     ___lldiv@dividend:	
  1108                           ; 2 bytes @ 0x4
  1109                           
  1110  0024                     __div_to_l_@f2:	
  1111                           ; 4 bytes @ 0x4
  1112                           
  1113  0024                     ___fleq@ff2:	
  1114                           ; 4 bytes @ 0x4
  1115                           
  1116  0024                     ___flge@ff2:	
  1117                           ; 4 bytes @ 0x4
  1118                           
  1119  0024                     __tdiv_to_l_@f2:	
  1120                           ; 4 bytes @ 0x4
  1121                           
  1122  0024                     ___llmod@dividend:	
  1123                           ; 4 bytes @ 0x4
  1124                           
  1125                           
  1126                           ; 4 bytes @ 0x4
  1127  0024                     	ds	1
  1128  0025                     Lcd_Write_String@i:
  1129                           
  1130                           ; 2 bytes @ 0x5
  1131  0025                     	ds	1
  1132  0026                     __Umul8_16@multiplier:
  1133  0026                     ___awdiv@dividend:	
  1134                           ; 1 bytes @ 0x6
  1135                           
  1136  0026                     ___lwdiv@dividend:	
  1137                           ; 2 bytes @ 0x6
  1138                           
  1139                           
  1140                           ; 2 bytes @ 0x6
  1141  0026                     	ds	2
  1142  0028                     ??__tdiv_to_l_:
  1143  0028                     ??___awdiv:	
  1144                           ; 1 bytes @ 0x8
  1145                           
  1146  0028                     ??___fleq:	
  1147                           ; 1 bytes @ 0x8
  1148                           
  1149  0028                     ??___flge:	
  1150                           ; 1 bytes @ 0x8
  1151                           
  1152  0028                     ___lwdiv@counter:	
  1153                           ; 1 bytes @ 0x8
  1154                           
  1155  0028                     ___xxtofl@sign:	
  1156                           ; 1 bytes @ 0x8
  1157                           
  1158  0028                     ___lldiv@quotient:	
  1159                           ; 1 bytes @ 0x8
  1160                           
  1161  0028                     __div_to_l_@quot:	
  1162                           ; 4 bytes @ 0x8
  1163                           
  1164                           
  1165                           ; 4 bytes @ 0x8
  1166  0028                     	ds	1
  1167  0029                     ___awdiv@counter:
  1168  0029                     ___xxtofl@exp:	
  1169                           ; 1 bytes @ 0x9
  1170                           
  1171  0029                     ___lwdiv@quotient:	
  1172                           ; 1 bytes @ 0x9
  1173                           
  1174                           
  1175                           ; 2 bytes @ 0x9
  1176  0029                     	ds	1
  1177  002A                     ___awdiv@sign:
  1178  002A                     ___xxtofl@arg:	
  1179                           ; 1 bytes @ 0xA
  1180                           
  1181                           
  1182                           ; 4 bytes @ 0xA
  1183  002A                     	ds	1
  1184  002B                     ___awdiv@quotient:
  1185                           
  1186                           ; 2 bytes @ 0xB
  1187  002B                     	ds	1
  1188  002C                     ___lldiv@counter:
  1189  002C                     __div_to_l_@cntr:	
  1190                           ; 1 bytes @ 0xC
  1191                           
  1192  002C                     __tdiv_to_l_@quot:	
  1193                           ; 1 bytes @ 0xC
  1194                           
  1195                           
  1196                           ; 4 bytes @ 0xC
  1197  002C                     	ds	1
  1198  002D                     __div_to_l_@exp1:
  1199                           
  1200                           ; 1 bytes @ 0xD
  1201  002D                     	ds	1
  1202  002E                     ?___flmul:
  1203  002E                     ___flmul@b:	
  1204                           ; 4 bytes @ 0xE
  1205                           
  1206                           
  1207                           ; 4 bytes @ 0xE
  1208  002E                     	ds	2
  1209  0030                     __tdiv_to_l_@cntr:
  1210                           
  1211                           ; 1 bytes @ 0x10
  1212  0030                     	ds	1
  1213  0031                     __tdiv_to_l_@exp1:
  1214                           
  1215                           ; 1 bytes @ 0x11
  1216  0031                     	ds	1
  1217  0032                     ___flmul@a:
  1218                           
  1219                           ; 4 bytes @ 0x12
  1220  0032                     	ds	4
  1221  0036                     ??___flmul:
  1222                           
  1223                           ; 1 bytes @ 0x16
  1224  0036                     	ds	5
  1225  003B                     ___flmul@sign:
  1226                           
  1227                           ; 1 bytes @ 0x1B
  1228  003B                     	ds	1
  1229  003C                     ___flmul@aexp:
  1230                           
  1231                           ; 1 bytes @ 0x1C
  1232  003C                     	ds	1
  1233  003D                     ___flmul@grs:
  1234                           
  1235                           ; 4 bytes @ 0x1D
  1236  003D                     	ds	4
  1237  0041                     ___flmul@bexp:
  1238                           
  1239                           ; 1 bytes @ 0x21
  1240  0041                     	ds	1
  1241  0042                     ___flmul@prod:
  1242                           
  1243                           ; 4 bytes @ 0x22
  1244  0042                     	ds	4
  1245  0046                     ___flmul@temp:
  1246                           
  1247                           ; 2 bytes @ 0x26
  1248  0046                     	ds	2
  1249  0048                     ?_conv:
  1250  0048                     ?_fround:	
  1251                           ; 4 bytes @ 0x28
  1252                           
  1253  0048                     ?_scale:	
  1254                           ; 4 bytes @ 0x28
  1255                           
  1256                           
  1257                           ; 4 bytes @ 0x28
  1258  0048                     	ds	4
  1259  004C                     ??_conv:
  1260  004C                     ??_fround:	
  1261                           ; 1 bytes @ 0x2C
  1262                           
  1263  004C                     ??_scale:	
  1264                           ; 1 bytes @ 0x2C
  1265                           
  1266                           
  1267                           ; 1 bytes @ 0x2C
  1268  004C                     	ds	4
  1269  0050                     conv@result:
  1270                           
  1271                           ; 4 bytes @ 0x30
  1272  0050                     	ds	3
  1273  0053                     _fround$1210:
  1274                           
  1275                           ; 4 bytes @ 0x33
  1276  0053                     	ds	1
  1277  0054                     conv@aa:
  1278                           
  1279                           ; 1 bytes @ 0x34
  1280  0054                     	ds	2
  1281  0056                     _scale$1211:
  1282                           
  1283                           ; 4 bytes @ 0x36
  1284  0056                     	ds	1
  1285  0057                     _fround$1209:
  1286                           
  1287                           ; 4 bytes @ 0x37
  1288  0057                     	ds	3
  1289  005A                     scale@scl:
  1290                           
  1291                           ; 1 bytes @ 0x3A
  1292  005A                     	ds	1
  1293  005B                     ?___fltol:
  1294  005B                     fround@prec:	
  1295                           ; 4 bytes @ 0x3B
  1296                           
  1297  005B                     ___fltol@f1:	
  1298                           ; 1 bytes @ 0x3B
  1299                           
  1300                           
  1301                           ; 4 bytes @ 0x3B
  1302  005B                     	ds	1
  1303  005C                     ?___fladd:
  1304  005C                     ___fladd@b:	
  1305                           ; 4 bytes @ 0x3C
  1306                           
  1307                           
  1308                           ; 4 bytes @ 0x3C
  1309  005C                     	ds	3
  1310  005F                     ??___fltol:
  1311                           
  1312                           ; 1 bytes @ 0x3F
  1313  005F                     	ds	1
  1314  0060                     ___fladd@a:
  1315                           
  1316                           ; 4 bytes @ 0x40
  1317  0060                     	ds	4
  1318  0064                     ??___fladd:
  1319  0064                     ___fltol@sign1:	
  1320                           ; 1 bytes @ 0x44
  1321                           
  1322                           
  1323                           ; 1 bytes @ 0x44
  1324  0064                     	ds	1
  1325  0065                     ___fltol@exp1:
  1326                           
  1327                           ; 1 bytes @ 0x45
  1328  0065                     	ds	7
  1329  006C                     ___fladd@signs:
  1330                           
  1331                           ; 1 bytes @ 0x4C
  1332  006C                     	ds	1
  1333  006D                     ___fladd@aexp:
  1334                           
  1335                           ; 1 bytes @ 0x4D
  1336  006D                     	ds	1
  1337  006E                     ___fladd@bexp:
  1338                           
  1339                           ; 1 bytes @ 0x4E
  1340  006E                     	ds	1
  1341  006F                     ___fladd@grs:
  1342                           
  1343                           ; 1 bytes @ 0x4F
  1344  006F                     	ds	1
  1345                           
  1346                           	psect	maintext
  1347  0827                     __pmaintext:	
  1348 ;;
  1349 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1350 ;;
  1351 ;; *************** function _main *****************
  1352 ;; Defined at:
  1353 ;;		line 140 in file "main.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : B00/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1367 ;;      Params:         0       0       0       0       0
  1368 ;;      Locals:         0       0       0       0       0
  1369 ;;      Temps:          0       0       3       0       0
  1370 ;;      Totals:         0       0       3       0       0
  1371 ;;Total ram usage:        3 bytes
  1372 ;; Hardware stack levels required when called:    6
  1373 ;; This function calls:
  1374 ;;		_Lcd_Clear
  1375 ;;		_Lcd_Init
  1376 ;;		_Lcd_Set_Cursor
  1377 ;;		_Lcd_Write_String
  1378 ;;		_cfg_adc
  1379 ;;		_cfg_clk
  1380 ;;		_cfg_inte
  1381 ;;		_cfg_io
  1382 ;;		_cfg_usart
  1383 ;;		_conv
  1384 ;;		_send_crct
  1385 ;;		_sprintf
  1386 ;; This function is called by:
  1387 ;;		Startup code after reset
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           
  1392                           ;psect for function _main
  1393  0827                     _main:
  1394  0827                     l4477:	
  1395                           ;incstack = 0
  1396                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1397                           
  1398                           
  1399                           ;main.c: 141:     cfg_io();
  1400  0827  160A  158A  20DD  120A  158A  	fcall	_cfg_io
  1401                           
  1402                           ;main.c: 142:     cfg_clk();
  1403  082C  160A  158A  209F  120A  158A  	fcall	_cfg_clk
  1404  0831                     l4479:
  1405                           
  1406                           ;main.c: 143:     cfg_inte();
  1407  0831  160A  158A  20AF  120A  158A  	fcall	_cfg_inte
  1408  0836                     l4481:
  1409                           
  1410                           ;main.c: 144:     cfg_adc();
  1411  0836  120A  118A  27E7  120A  158A  	fcall	_cfg_adc
  1412  083B                     l4483:
  1413                           
  1414                           ;main.c: 145:     cfg_usart();
  1415  083B  160A  158A  2101  120A  158A  	fcall	_cfg_usart
  1416  0840                     l4485:
  1417                           
  1418                           ;main.c: 147:     Lcd_Init();
  1419  0840  160A  158A  233E  120A  158A  	fcall	_Lcd_Init
  1420  0845                     l4487:
  1421                           
  1422                           ;main.c: 148:     ADCON0bits.GO = 1;
  1423  0845  1283               	bcf	3,5	;RP0=0, select bank0
  1424  0846  1303               	bcf	3,6	;RP1=0, select bank0
  1425  0847  149F               	bsf	31,1	;volatile
  1426  0848                     l4489:
  1427                           
  1428                           ;main.c: 152:       Lcd_Clear();
  1429  0848  160A  158A  20C3  120A  158A  	fcall	_Lcd_Clear
  1430  084D                     l4491:
  1431                           
  1432                           ;main.c: 153:       Lcd_Set_Cursor(1,1);
  1433  084D  1283               	bcf	3,5	;RP0=0, select bank0
  1434  084E  1303               	bcf	3,6	;RP1=0, select bank0
  1435  084F  01A1               	clrf	Lcd_Set_Cursor@b
  1436  0850  0AA1               	incf	Lcd_Set_Cursor@b,f
  1437  0851  3001               	movlw	1
  1438  0852  160A  158A  21A9  120A  158A  	fcall	_Lcd_Set_Cursor
  1439  0857                     l4493:
  1440                           
  1441                           ;main.c: 154:       Lcd_Write_String(" S1:   S2:  S3:  ");
  1442  0857  30A6               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1443  0858  1283               	bcf	3,5	;RP0=0, select bank0
  1444  0859  1303               	bcf	3,6	;RP1=0, select bank0
  1445  085A  00A0               	movwf	Lcd_Write_String@a
  1446  085B  3080               	movlw	128
  1447  085C  00A1               	movwf	Lcd_Write_String@a+1
  1448  085D  160A  158A  22B2  120A  158A  	fcall	_Lcd_Write_String
  1449  0862                     l4495:
  1450                           
  1451                           ;main.c: 155:       v11 = conv(V1);
  1452  0862  1683               	bsf	3,5	;RP0=1, select bank1
  1453  0863  1303               	bcf	3,6	;RP1=0, select bank1
  1454  0864  0866               	movf	_V1^(0+128),w
  1455  0865  160A  158A  2272  120A  158A  	fcall	_conv
  1456  086A  1283               	bcf	3,5	;RP0=0, select bank0
  1457  086B  1303               	bcf	3,6	;RP1=0, select bank0
  1458  086C  084B               	movf	?_conv+3,w
  1459  086D  1683               	bsf	3,5	;RP0=1, select bank1
  1460  086E  1303               	bcf	3,6	;RP1=0, select bank1
  1461  086F  00E3               	movwf	(_v11+3)^(0+128)
  1462  0870  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0871  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0872  084A               	movf	?_conv+2,w
  1465  0873  1683               	bsf	3,5	;RP0=1, select bank1
  1466  0874  1303               	bcf	3,6	;RP1=0, select bank1
  1467  0875  00E2               	movwf	(_v11+2)^(0+128)
  1468  0876  1283               	bcf	3,5	;RP0=0, select bank0
  1469  0877  1303               	bcf	3,6	;RP1=0, select bank0
  1470  0878  0849               	movf	?_conv+1,w
  1471  0879  1683               	bsf	3,5	;RP0=1, select bank1
  1472  087A  1303               	bcf	3,6	;RP1=0, select bank1
  1473  087B  00E1               	movwf	(_v11+1)^(0+128)
  1474  087C  1283               	bcf	3,5	;RP0=0, select bank0
  1475  087D  1303               	bcf	3,6	;RP1=0, select bank0
  1476  087E  0848               	movf	?_conv,w
  1477  087F  1683               	bsf	3,5	;RP0=1, select bank1
  1478  0880  1303               	bcf	3,6	;RP1=0, select bank1
  1479  0881  00E0               	movwf	_v11^(0+128)
  1480  0882                     l4497:
  1481                           
  1482                           ;main.c: 156:       v22 = conv(V2);
  1483  0882  0865               	movf	_V2^(0+128),w
  1484  0883  160A  158A  2272  120A  158A  	fcall	_conv
  1485  0888  1283               	bcf	3,5	;RP0=0, select bank0
  1486  0889  1303               	bcf	3,6	;RP1=0, select bank0
  1487  088A  084B               	movf	?_conv+3,w
  1488  088B  1683               	bsf	3,5	;RP0=1, select bank1
  1489  088C  1303               	bcf	3,6	;RP1=0, select bank1
  1490  088D  00DF               	movwf	(_v22+3)^(0+128)
  1491  088E  1283               	bcf	3,5	;RP0=0, select bank0
  1492  088F  1303               	bcf	3,6	;RP1=0, select bank0
  1493  0890  084A               	movf	?_conv+2,w
  1494  0891  1683               	bsf	3,5	;RP0=1, select bank1
  1495  0892  1303               	bcf	3,6	;RP1=0, select bank1
  1496  0893  00DE               	movwf	(_v22+2)^(0+128)
  1497  0894  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0895  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0896  0849               	movf	?_conv+1,w
  1500  0897  1683               	bsf	3,5	;RP0=1, select bank1
  1501  0898  1303               	bcf	3,6	;RP1=0, select bank1
  1502  0899  00DD               	movwf	(_v22+1)^(0+128)
  1503  089A  1283               	bcf	3,5	;RP0=0, select bank0
  1504  089B  1303               	bcf	3,6	;RP1=0, select bank0
  1505  089C  0848               	movf	?_conv,w
  1506  089D  1683               	bsf	3,5	;RP0=1, select bank1
  1507  089E  1303               	bcf	3,6	;RP1=0, select bank1
  1508  089F  00DC               	movwf	_v22^(0+128)
  1509  08A0                     l4499:
  1510                           
  1511                           ;main.c: 157:       v33 = conv(V3);
  1512  08A0  3000               	movlw	0
  1513  08A1  160A  158A  2272  120A  158A  	fcall	_conv
  1514  08A6  1283               	bcf	3,5	;RP0=0, select bank0
  1515  08A7  1303               	bcf	3,6	;RP1=0, select bank0
  1516  08A8  084B               	movf	?_conv+3,w
  1517  08A9  1683               	bsf	3,5	;RP0=1, select bank1
  1518  08AA  1303               	bcf	3,6	;RP1=0, select bank1
  1519  08AB  00DB               	movwf	(_v33+3)^(0+128)
  1520  08AC  1283               	bcf	3,5	;RP0=0, select bank0
  1521  08AD  1303               	bcf	3,6	;RP1=0, select bank0
  1522  08AE  084A               	movf	?_conv+2,w
  1523  08AF  1683               	bsf	3,5	;RP0=1, select bank1
  1524  08B0  1303               	bcf	3,6	;RP1=0, select bank1
  1525  08B1  00DA               	movwf	(_v33+2)^(0+128)
  1526  08B2  1283               	bcf	3,5	;RP0=0, select bank0
  1527  08B3  1303               	bcf	3,6	;RP1=0, select bank0
  1528  08B4  0849               	movf	?_conv+1,w
  1529  08B5  1683               	bsf	3,5	;RP0=1, select bank1
  1530  08B6  1303               	bcf	3,6	;RP1=0, select bank1
  1531  08B7  00D9               	movwf	(_v33+1)^(0+128)
  1532  08B8  1283               	bcf	3,5	;RP0=0, select bank0
  1533  08B9  1303               	bcf	3,6	;RP1=0, select bank0
  1534  08BA  0848               	movf	?_conv,w
  1535  08BB  1683               	bsf	3,5	;RP0=1, select bank1
  1536  08BC  1303               	bcf	3,6	;RP1=0, select bank1
  1537  08BD  00D8               	movwf	_v33^(0+128)
  1538  08BE                     l4501:
  1539                           
  1540                           ;main.c: 160:       Lcd_Set_Cursor(2,1);
  1541  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  1542  08BF  1303               	bcf	3,6	;RP1=0, select bank0
  1543  08C0  01A1               	clrf	Lcd_Set_Cursor@b
  1544  08C1  0AA1               	incf	Lcd_Set_Cursor@b,f
  1545  08C2  3002               	movlw	2
  1546  08C3  160A  158A  21A9  120A  158A  	fcall	_Lcd_Set_Cursor
  1547  08C8                     l4503:
  1548                           
  1549                           ;main.c: 161:       sprintf(f1, "%3.1fV %3.2fV %3.2fV",v11, v22, v33);
  1550  08C8  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1551  08C9  1683               	bsf	3,5	;RP0=1, select bank1
  1552  08CA  1303               	bcf	3,6	;RP1=0, select bank1
  1553  08CB  00D5               	movwf	??_main^(0+128)
  1554  08CC  0855               	movf	??_main^(0+128),w
  1555  08CD  00A8               	movwf	sprintf@f^(0+128)
  1556  08CE  0863               	movf	(_v11+3)^(0+128),w
  1557  08CF  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1558  08D0  0862               	movf	(_v11+2)^(0+128),w
  1559  08D1  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1560  08D2  0861               	movf	(_v11+1)^(0+128),w
  1561  08D3  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1562  08D4  0860               	movf	_v11^(0+128),w
  1563  08D5  00A9               	movwf	(?_sprintf^(0+128)+1)
  1564  08D6  085F               	movf	(_v22+3)^(0+128),w
  1565  08D7  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1566  08D8  085E               	movf	(_v22+2)^(0+128),w
  1567  08D9  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1568  08DA  085D               	movf	(_v22+1)^(0+128),w
  1569  08DB  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1570  08DC  085C               	movf	_v22^(0+128),w
  1571  08DD  00AD               	movwf	(?_sprintf^(0+128)+5)
  1572  08DE  085B               	movf	(_v33+3)^(0+128),w
  1573  08DF  00B4               	movwf	((?_sprintf+3)^(0+128)+9)
  1574  08E0  085A               	movf	(_v33+2)^(0+128),w
  1575  08E1  00B3               	movwf	((?_sprintf+2)^(0+128)+9)
  1576  08E2  0859               	movf	(_v33+1)^(0+128),w
  1577  08E3  00B2               	movwf	((?_sprintf+1)^(0+128)+9)
  1578  08E4  0858               	movf	_v33^(0+128),w
  1579  08E5  00B1               	movwf	(?_sprintf^(0+128)+9)
  1580  08E6  309A               	movlw	(low (_f1| (0+256)))& (0+255)
  1581  08E7  160A  118A  24B4  120A  158A  	fcall	_sprintf
  1582  08EC                     l4505:
  1583                           
  1584                           ;main.c: 162:       Lcd_Write_String(f1);
  1585  08EC  309A               	movlw	(low (_f1| (0+256)))& (0+255)
  1586  08ED  1283               	bcf	3,5	;RP0=0, select bank0
  1587  08EE  1303               	bcf	3,6	;RP1=0, select bank0
  1588  08EF  00A0               	movwf	Lcd_Write_String@a
  1589  08F0  3001               	movlw	1
  1590  08F1  00A1               	movwf	Lcd_Write_String@a+1
  1591  08F2  160A  158A  22B2  120A  158A  	fcall	_Lcd_Write_String
  1592  08F7                     l4507:
  1593                           
  1594                           ;main.c: 165:       TXREG = '\f';
  1595  08F7  300C               	movlw	12
  1596  08F8  1283               	bcf	3,5	;RP0=0, select bank0
  1597  08F9  1303               	bcf	3,6	;RP1=0, select bank0
  1598  08FA  0099               	movwf	25	;volatile
  1599  08FB                     l4509:
  1600                           
  1601                           ;main.c: 166:       send_crct(f1);
  1602  08FB  309A               	movlw	(low (_f1| (0+256)))& (0+255)
  1603  08FC  160A  158A  2184  120A  158A  	fcall	_send_crct
  1604  0901                     l4511:
  1605                           
  1606                           ;main.c: 169:       _delay((unsigned long)((100)*(8000000/4000.0)));
  1607  0901  3002               	movlw	2
  1608  0902  1683               	bsf	3,5	;RP0=1, select bank1
  1609  0903  1303               	bcf	3,6	;RP1=0, select bank1
  1610  0904  00D7               	movwf	(??_main^(0+128)+2)
  1611  0905  3004               	movlw	4
  1612  0906  00D6               	movwf	(??_main^(0+128)+1)
  1613  0907  30B9               	movlw	185
  1614  0908  00D5               	movwf	??_main^(0+128)
  1615  0909                     u7767:
  1616  0909  0BD5               	decfsz	??_main^(0+128),f
  1617  090A  2909               	goto	u7767
  1618  090B  0BD6               	decfsz	(??_main^(0+128)+1),f
  1619  090C  2909               	goto	u7767
  1620  090D  0BD7               	decfsz	(??_main^(0+128)+2),f
  1621  090E  2909               	goto	u7767
  1622  090F  2910               	nop2
  1623  0910                     l4513:
  1624                           
  1625                           ;main.c: 171:       if(ADCON0bits.GO == 0){
  1626  0910  1283               	bcf	3,5	;RP0=0, select bank0
  1627  0911  1303               	bcf	3,6	;RP1=0, select bank0
  1628  0912  189F               	btfsc	31,1	;volatile
  1629  0913  2915               	goto	u7741
  1630  0914  2916               	goto	u7740
  1631  0915                     u7741:
  1632  0915  2848               	goto	l4489
  1633  0916                     u7740:
  1634  0916                     l4515:
  1635                           
  1636                           ;main.c: 172:         if (ADCON0bits.CHS == 5){
  1637  0916  0C1F               	rrf	31,w	;volatile
  1638  0917  1683               	bsf	3,5	;RP0=1, select bank1
  1639  0918  1303               	bcf	3,6	;RP1=0, select bank1
  1640  0919  00D5               	movwf	??_main^(0+128)
  1641  091A  0C55               	rrf	??_main^(0+128),w
  1642  091B  390F               	andlw	15
  1643  091C  3A05               	xorlw	5
  1644  091D  1D03               	skipz
  1645  091E  2920               	goto	u7751
  1646  091F  2921               	goto	u7750
  1647  0920                     u7751:
  1648  0920  2928               	goto	l4519
  1649  0921                     u7750:
  1650  0921                     l4517:
  1651                           
  1652                           ;main.c: 173:             ADCON0bits.CHS = 6;
  1653  0921  1283               	bcf	3,5	;RP0=0, select bank0
  1654  0922  1303               	bcf	3,6	;RP1=0, select bank0
  1655  0923  081F               	movf	31,w	;volatile
  1656  0924  39C3               	andlw	-61
  1657  0925  3818               	iorlw	24
  1658  0926  009F               	movwf	31	;volatile
  1659                           
  1660                           ;main.c: 174:         }
  1661  0927  292E               	goto	l4521
  1662  0928                     l4519:
  1663                           
  1664                           ;main.c: 176:             ADCON0bits.CHS = 5;
  1665  0928  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0929  1303               	bcf	3,6	;RP1=0, select bank0
  1667  092A  081F               	movf	31,w	;volatile
  1668  092B  39C3               	andlw	-61
  1669  092C  3814               	iorlw	20
  1670  092D  009F               	movwf	31	;volatile
  1671  092E                     l4521:
  1672                           
  1673                           ;main.c: 178:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  1674  092E  3020               	movlw	32
  1675  092F  1683               	bsf	3,5	;RP0=1, select bank1
  1676  0930  1303               	bcf	3,6	;RP1=0, select bank1
  1677  0931  00D5               	movwf	??_main^(0+128)
  1678  0932                     u7777:
  1679  0932  0BD5               	decfsz	??_main^(0+128),f
  1680  0933  2932               	goto	u7777
  1681  0934  0000               	nop
  1682  0935                     l4523:
  1683                           
  1684                           ;main.c: 179:         ADCON0bits.GO = 1;
  1685  0935  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0936  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0937  149F               	bsf	31,1	;volatile
  1688  0938  2848               	goto	l4489
  1689  0939  120A  118A  280C   	ljmp	start
  1690  093C                     __end_of_main:
  1691                           
  1692                           	psect	text1
  1693  14B4                     __ptext1:	
  1694 ;; *************** function _sprintf *****************
  1695 ;; Defined at:
  1696 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  sp              1    wreg     PTR unsigned char 
  1699 ;;		 -> f1(10), 
  1700 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1701 ;;		 -> STR_2(21), 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  sp              1   49[BANK1 ] PTR unsigned char 
  1704 ;;		 -> f1(10), 
  1705 ;;  fval            4   45[BANK1 ] PTR unsigned char 
  1706 ;;  tmpval          4   39[BANK1 ] struct .
  1707 ;;  val             4   31[BANK1 ] unsigned long 
  1708 ;;  prec            2   50[BANK1 ] int 
  1709 ;;  eexp            2   43[BANK1 ] int 
  1710 ;;  width           2   37[BANK1 ] int 
  1711 ;;  flag            2   35[BANK1 ] unsigned short 
  1712 ;;  cp              2    0        PTR const unsigned char 
  1713 ;;  len             2    0        unsigned int 
  1714 ;;  c               1   52[BANK1 ] unsigned char 
  1715 ;;  ap              1   30[BANK1 ] PTR void [1]
  1716 ;;		 -> ?_sprintf(2), 
  1717 ;;  d               1    0        unsigned char 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  2    8[BANK1 ] int 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1727 ;;      Params:         0       0      13       0       0
  1728 ;;      Locals:         0       0      27       0       0
  1729 ;;      Temps:          0       0       5       0       0
  1730 ;;      Totals:         0       0      45       0       0
  1731 ;;Total ram usage:       45 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; Hardware stack levels required when called:    5
  1734 ;; This function calls:
  1735 ;;		___awdiv
  1736 ;;		___fladd
  1737 ;;		___fleq
  1738 ;;		___flge
  1739 ;;		___flmul
  1740 ;;		___flneg
  1741 ;;		___flsub
  1742 ;;		___fltol
  1743 ;;		___lldiv
  1744 ;;		___llmod
  1745 ;;		___wmul
  1746 ;;		___xxtofl
  1747 ;;		__div_to_l_
  1748 ;;		__tdiv_to_l_
  1749 ;;		_fround
  1750 ;;		_isdigit
  1751 ;;		_scale
  1752 ;; This function is called by:
  1753 ;;		_main
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           
  1758                           ;psect for function _sprintf
  1759  14B4                     _sprintf:
  1760                           
  1761                           ;incstack = 0
  1762                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1763                           ;sprintf@sp stored from wreg
  1764  14B4  1683               	bsf	3,5	;RP0=1, select bank1
  1765  14B5  1303               	bcf	3,6	;RP1=0, select bank1
  1766  14B6  00D1               	movwf	sprintf@sp^(0+128)
  1767  14B7                     l4215:
  1768                           
  1769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1770  14B7  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1771  14B8  00B5               	movwf	??_sprintf^(0+128)
  1772  14B9  0835               	movf	??_sprintf^(0+128),w
  1773  14BA  00BE               	movwf	sprintf@ap^(0+128)
  1774  14BB                     L1:
  1775                           
  1776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1777  14BB  120A  118A  2DC1   	goto	l4465
  1778  14BE                     l4217:
  1779                           
  1780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1781  14BE  3025               	movlw	37
  1782  14BF  0654               	xorwf	sprintf@c^(0+128),w
  1783  14C0  1903               	btfsc	3,2
  1784  14C1  2CC3               	goto	u7271
  1785  14C2  2CC4               	goto	u7270
  1786  14C3                     u7271:
  1787  14C3  2CD0               	goto	l4223
  1788  14C4                     u7270:
  1789  14C4                     l4219:
  1790                           
  1791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1792  14C4  0854               	movf	sprintf@c^(0+128),w
  1793  14C5  00B5               	movwf	??_sprintf^(0+128)
  1794  14C6  0851               	movf	sprintf@sp^(0+128),w
  1795  14C7  0084               	movwf	4
  1796  14C8  0835               	movf	??_sprintf^(0+128),w
  1797  14C9  1783               	bsf	3,7	;select IRP bank2
  1798  14CA  0080               	movwf	0
  1799  14CB                     l4221:
  1800  14CB  3001               	movlw	1
  1801  14CC  00B5               	movwf	??_sprintf^(0+128)
  1802  14CD  0835               	movf	??_sprintf^(0+128),w
  1803  14CE  07D1               	addwf	sprintf@sp^(0+128),f
  1804                           
  1805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1806  14CF  2CBB               	goto	L1
  1807  14D0                     l4223:
  1808                           
  1809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1810  14D0  01C5               	clrf	sprintf@width^(0+128)
  1811  14D1  01C6               	clrf	(sprintf@width+1)^(0+128)
  1812                           
  1813                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1814  14D2  01C3               	clrf	sprintf@flag^(0+128)
  1815  14D3  01C4               	clrf	(sprintf@flag+1)^(0+128)
  1816  14D4                     l4225:
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1819  14D4  0828               	movf	sprintf@f^(0+128),w
  1820  14D5  0084               	movwf	4
  1821  14D6  160A  118A  200A  160A  118A  	fcall	stringdir
  1822  14DB  160A  158A  20EF  160A  118A  	fcall	_isdigit
  1823  14E0  1C03               	btfss	3,0
  1824  14E1  2CE3               	goto	u7281
  1825  14E2  2CE4               	goto	u7280
  1826  14E3                     u7281:
  1827  14E3  2D32               	goto	l4237
  1828  14E4                     u7280:
  1829  14E4                     l4227:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1832  14E4  1683               	bsf	3,5	;RP0=1, select bank1
  1833  14E5  1303               	bcf	3,6	;RP1=0, select bank1
  1834  14E6  01C5               	clrf	sprintf@width^(0+128)
  1835  14E7  01C6               	clrf	(sprintf@width+1)^(0+128)
  1836  14E8                     l4229:
  1837                           
  1838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1839  14E8  300A               	movlw	10
  1840  14E9  1283               	bcf	3,5	;RP0=0, select bank0
  1841  14EA  1303               	bcf	3,6	;RP1=0, select bank0
  1842  14EB  00A0               	movwf	___wmul@multiplier
  1843  14EC  3000               	movlw	0
  1844  14ED  00A1               	movwf	___wmul@multiplier+1
  1845  14EE  1683               	bsf	3,5	;RP0=1, select bank1
  1846  14EF  1303               	bcf	3,6	;RP1=0, select bank1
  1847  14F0  0846               	movf	(sprintf@width+1)^(0+128),w
  1848  14F1  1283               	bcf	3,5	;RP0=0, select bank0
  1849  14F2  1303               	bcf	3,6	;RP1=0, select bank0
  1850  14F3  00A3               	movwf	___wmul@multiplicand+1
  1851  14F4  1683               	bsf	3,5	;RP0=1, select bank1
  1852  14F5  1303               	bcf	3,6	;RP1=0, select bank1
  1853  14F6  0845               	movf	sprintf@width^(0+128),w
  1854  14F7  1283               	bcf	3,5	;RP0=0, select bank0
  1855  14F8  1303               	bcf	3,6	;RP1=0, select bank0
  1856  14F9  00A2               	movwf	___wmul@multiplicand
  1857  14FA  120A  158A  2000  160A  118A  	fcall	___wmul
  1858  14FF  1283               	bcf	3,5	;RP0=0, select bank0
  1859  1500  1303               	bcf	3,6	;RP1=0, select bank0
  1860  1501  0821               	movf	?___wmul+1,w
  1861  1502  1683               	bsf	3,5	;RP0=1, select bank1
  1862  1503  1303               	bcf	3,6	;RP1=0, select bank1
  1863  1504  00C6               	movwf	(sprintf@width+1)^(0+128)
  1864  1505  1283               	bcf	3,5	;RP0=0, select bank0
  1865  1506  1303               	bcf	3,6	;RP1=0, select bank0
  1866  1507  0820               	movf	?___wmul,w
  1867  1508  1683               	bsf	3,5	;RP0=1, select bank1
  1868  1509  1303               	bcf	3,6	;RP1=0, select bank1
  1869  150A  00C5               	movwf	sprintf@width^(0+128)
  1870  150B                     l4231:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1873  150B  0828               	movf	sprintf@f^(0+128),w
  1874  150C  0084               	movwf	4
  1875  150D  160A  118A  200A  160A  118A  	fcall	stringdir
  1876  1512  3ED0               	addlw	208
  1877  1513  00B5               	movwf	??_sprintf^(0+128)
  1878  1514  30FF               	movlw	255
  1879  1515  1803               	skipnc
  1880  1516  3000               	movlw	0
  1881  1517  00B6               	movwf	(??_sprintf^(0+128)+1)
  1882  1518  0835               	movf	??_sprintf^(0+128),w
  1883  1519  07C5               	addwf	sprintf@width^(0+128),f
  1884  151A  1803               	skipnc
  1885  151B  0AC6               	incf	(sprintf@width+1)^(0+128),f
  1886  151C  0836               	movf	(??_sprintf+1)^(0+128),w
  1887  151D  07C6               	addwf	(sprintf@width+1)^(0+128),f
  1888  151E                     l4233:
  1889  151E  3001               	movlw	1
  1890  151F  00B5               	movwf	??_sprintf^(0+128)
  1891  1520  0835               	movf	??_sprintf^(0+128),w
  1892  1521  07A8               	addwf	sprintf@f^(0+128),f
  1893  1522                     l4235:
  1894                           
  1895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1896  1522  0828               	movf	sprintf@f^(0+128),w
  1897  1523  0084               	movwf	4
  1898  1524  160A  118A  200A  160A  118A  	fcall	stringdir
  1899  1529  160A  158A  20EF  160A  118A  	fcall	_isdigit
  1900  152E  1803               	btfsc	3,0
  1901  152F  2D31               	goto	u7291
  1902  1530  2D32               	goto	u7290
  1903  1531                     u7291:
  1904  1531  2CE8               	goto	l4229
  1905  1532                     u7290:
  1906  1532                     l4237:
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1909  1532  1683               	bsf	3,5	;RP0=1, select bank1
  1910  1533  1303               	bcf	3,6	;RP1=0, select bank1
  1911  1534  0828               	movf	sprintf@f^(0+128),w
  1912  1535  0084               	movwf	4
  1913  1536  160A  118A  200A  160A  118A  	fcall	stringdir
  1914  153B  3A2E               	xorlw	46
  1915  153C  1D03               	skipz
  1916  153D  2D3F               	goto	u7301
  1917  153E  2D40               	goto	u7300
  1918  153F                     u7301:
  1919  153F  2D93               	goto	l4253
  1920  1540                     u7300:
  1921  1540                     l4239:
  1922                           
  1923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1924  1540  1744               	bsf	(sprintf@flag^(0+128)+1),6
  1925  1541                     l4241:
  1926                           
  1927                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1928  1541  3001               	movlw	1
  1929  1542  00B5               	movwf	??_sprintf^(0+128)
  1930  1543  0835               	movf	??_sprintf^(0+128),w
  1931  1544  07A8               	addwf	sprintf@f^(0+128),f
  1932  1545                     l4243:
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1935  1545  01D2               	clrf	sprintf@prec^(0+128)
  1936  1546  01D3               	clrf	(sprintf@prec+1)^(0+128)
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1939  1547  2D82               	goto	l4251
  1940  1548                     l4245:
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1943  1548  300A               	movlw	10
  1944  1549  1283               	bcf	3,5	;RP0=0, select bank0
  1945  154A  1303               	bcf	3,6	;RP1=0, select bank0
  1946  154B  00A0               	movwf	___wmul@multiplier
  1947  154C  3000               	movlw	0
  1948  154D  00A1               	movwf	___wmul@multiplier+1
  1949  154E  1683               	bsf	3,5	;RP0=1, select bank1
  1950  154F  1303               	bcf	3,6	;RP1=0, select bank1
  1951  1550  0853               	movf	(sprintf@prec+1)^(0+128),w
  1952  1551  1283               	bcf	3,5	;RP0=0, select bank0
  1953  1552  1303               	bcf	3,6	;RP1=0, select bank0
  1954  1553  00A3               	movwf	___wmul@multiplicand+1
  1955  1554  1683               	bsf	3,5	;RP0=1, select bank1
  1956  1555  1303               	bcf	3,6	;RP1=0, select bank1
  1957  1556  0852               	movf	sprintf@prec^(0+128),w
  1958  1557  1283               	bcf	3,5	;RP0=0, select bank0
  1959  1558  1303               	bcf	3,6	;RP1=0, select bank0
  1960  1559  00A2               	movwf	___wmul@multiplicand
  1961  155A  120A  158A  2000  160A  118A  	fcall	___wmul
  1962  155F  1283               	bcf	3,5	;RP0=0, select bank0
  1963  1560  1303               	bcf	3,6	;RP1=0, select bank0
  1964  1561  0821               	movf	?___wmul+1,w
  1965  1562  1683               	bsf	3,5	;RP0=1, select bank1
  1966  1563  1303               	bcf	3,6	;RP1=0, select bank1
  1967  1564  00D3               	movwf	(sprintf@prec+1)^(0+128)
  1968  1565  1283               	bcf	3,5	;RP0=0, select bank0
  1969  1566  1303               	bcf	3,6	;RP1=0, select bank0
  1970  1567  0820               	movf	?___wmul,w
  1971  1568  1683               	bsf	3,5	;RP0=1, select bank1
  1972  1569  1303               	bcf	3,6	;RP1=0, select bank1
  1973  156A  00D2               	movwf	sprintf@prec^(0+128)
  1974  156B                     l4247:
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1977  156B  0828               	movf	sprintf@f^(0+128),w
  1978  156C  0084               	movwf	4
  1979  156D  160A  118A  200A  160A  118A  	fcall	stringdir
  1980  1572  3ED0               	addlw	208
  1981  1573  00B5               	movwf	??_sprintf^(0+128)
  1982  1574  30FF               	movlw	255
  1983  1575  1803               	skipnc
  1984  1576  3000               	movlw	0
  1985  1577  00B6               	movwf	(??_sprintf^(0+128)+1)
  1986  1578  0835               	movf	??_sprintf^(0+128),w
  1987  1579  07D2               	addwf	sprintf@prec^(0+128),f
  1988  157A  1803               	skipnc
  1989  157B  0AD3               	incf	(sprintf@prec+1)^(0+128),f
  1990  157C  0836               	movf	(??_sprintf+1)^(0+128),w
  1991  157D  07D3               	addwf	(sprintf@prec+1)^(0+128),f
  1992  157E                     l4249:
  1993  157E  3001               	movlw	1
  1994  157F  00B5               	movwf	??_sprintf^(0+128)
  1995  1580  0835               	movf	??_sprintf^(0+128),w
  1996  1581  07A8               	addwf	sprintf@f^(0+128),f
  1997  1582                     l4251:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2000  1582  0828               	movf	sprintf@f^(0+128),w
  2001  1583  0084               	movwf	4
  2002  1584  160A  118A  200A  160A  118A  	fcall	stringdir
  2003  1589  160A  158A  20EF  160A  118A  	fcall	_isdigit
  2004  158E  1803               	btfsc	3,0
  2005  158F  2D91               	goto	u7311
  2006  1590  2D92               	goto	u7310
  2007  1591                     u7311:
  2008  1591  2D48               	goto	l4245
  2009  1592                     u7310:
  2010  1592  2D99               	goto	l4259
  2011  1593                     l4253:
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2014  1593  01D2               	clrf	sprintf@prec^(0+128)
  2015  1594  01D3               	clrf	(sprintf@prec+1)^(0+128)
  2016  1595                     l4255:
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2019  1595  1644               	bsf	(sprintf@flag^(0+128)+1),4
  2020  1596  2D99               	goto	l4259
  2021  1597                     l365:	
  2022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2023                           
  2024                           
  2025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2026  1597  1544               	bsf	(sprintf@flag^(0+128)+1),2
  2027                           
  2028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2029  1598  2DB5               	goto	l4261
  2030  1599                     l4259:
  2031  1599  3001               	movlw	1
  2032  159A  1683               	bsf	3,5	;RP0=1, select bank1
  2033  159B  1303               	bcf	3,6	;RP1=0, select bank1
  2034  159C  07A8               	addwf	sprintf@f^(0+128),f
  2035  159D  30FF               	movlw	-1
  2036  159E  0728               	addwf	sprintf@f^(0+128),w
  2037  159F  0084               	movwf	4
  2038  15A0  160A  118A  200A  160A  118A  	fcall	stringdir
  2039  15A5  00D4               	movwf	sprintf@c^(0+128)
  2040  15A6  00B5               	movwf	??_sprintf^(0+128)
  2041  15A7  01B6               	clrf	(??_sprintf^(0+128)+1)
  2042                           
  2043                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2044                           ; Switch size 1, requested type "simple"
  2045                           ; Number of cases is 1, Range of values is 0 to 0
  2046                           ; switch strategies available:
  2047                           ; Name         Instructions Cycles
  2048                           ; simple_byte            4     3 (average)
  2049                           ; direct_byte           11     8 (fixed)
  2050                           ; jumptable            260     6 (fixed)
  2051                           ;	Chosen strategy is simple_byte
  2052  15A8  0836               	movf	(??_sprintf+1)^(0+128),w
  2053  15A9  3A00               	xorlw	0	; case 0
  2054  15AA  1903               	skipnz
  2055  15AB  2DAD               	goto	l4563
  2056  15AC  2CBB               	goto	L1
  2057  15AD                     l4563:
  2058                           
  2059                           ; Switch size 1, requested type "simple"
  2060                           ; Number of cases is 2, Range of values is 0 to 102
  2061                           ; switch strategies available:
  2062                           ; Name         Instructions Cycles
  2063                           ; simple_byte            7     4 (average)
  2064                           ; jumptable            260     6 (fixed)
  2065                           ;	Chosen strategy is simple_byte
  2066  15AD  0835               	movf	??_sprintf^(0+128),w
  2067  15AE  3A00               	xorlw	0	; case 0
  2068  15AF  1903               	skipnz
  2069  15B0  2FFD               	goto	L3
  2070  15B1  3A66               	xorlw	102	; case 102
  2071  15B2  1903               	skipnz
  2072  15B3  2D97               	goto	l365
  2073  15B4  2CBB               	goto	L1
  2074  15B5                     l4261:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2077  15B5  3000               	movlw	0
  2078  15B6  0543               	andwf	sprintf@flag^(0+128),w
  2079  15B7  00B5               	movwf	??_sprintf^(0+128)
  2080  15B8  3007               	movlw	7
  2081  15B9  0544               	andwf	(sprintf@flag+1)^(0+128),w
  2082  15BA  00B6               	movwf	(??_sprintf+1)^(0+128)
  2083  15BB  0835               	movf	??_sprintf^(0+128),w
  2084  15BC  0436               	iorwf	(??_sprintf^(0+128)+1),w
  2085  15BD  1903               	btfsc	3,2
  2086  15BE  2DC0               	goto	u7321
  2087  15BF  2DC3               	goto	u7320
  2088  15C0                     u7321:
  2089  15C0  120A  118A  2CFC   	goto	l4419
  2090  15C3                     u7320:
  2091  15C3                     l4263:
  2092                           
  2093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2094  15C3  1E44               	btfss	(sprintf@flag+1)^(0+128),4
  2095  15C4  2DC6               	goto	u7331
  2096  15C5  2DC7               	goto	u7330
  2097  15C6                     u7331:
  2098  15C6  2DCB               	goto	l4267
  2099  15C7                     u7330:
  2100  15C7                     l4265:
  2101                           
  2102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2103  15C7  3006               	movlw	6
  2104  15C8  00D2               	movwf	sprintf@prec^(0+128)
  2105  15C9  3000               	movlw	0
  2106  15CA  00D3               	movwf	(sprintf@prec^(0+128)+1)
  2107  15CB                     l4267:
  2108                           
  2109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2110  15CB  083E               	movf	sprintf@ap^(0+128),w
  2111  15CC  0084               	movwf	4
  2112  15CD  1383               	bcf	3,7	;select IRP bank0
  2113  15CE  0800               	movf	0,w
  2114  15CF  00CD               	movwf	sprintf@fval^(0+128)
  2115  15D0  0A84               	incf	4,f
  2116  15D1  0800               	movf	0,w
  2117  15D2  00CE               	movwf	(sprintf@fval+1)^(0+128)
  2118  15D3  0A84               	incf	4,f
  2119  15D4  0800               	movf	0,w
  2120  15D5  00CF               	movwf	(sprintf@fval+2)^(0+128)
  2121  15D6  0A84               	incf	4,f
  2122  15D7  0800               	movf	0,w
  2123  15D8  00D0               	movwf	(sprintf@fval+3)^(0+128)
  2124  15D9                     l4269:
  2125  15D9  3004               	movlw	4
  2126  15DA  00B5               	movwf	??_sprintf^(0+128)
  2127  15DB  0835               	movf	??_sprintf^(0+128),w
  2128  15DC  07BE               	addwf	sprintf@ap^(0+128),f
  2129  15DD                     l4271:
  2130                           
  2131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2132  15DD  0850               	movf	(sprintf@fval+3)^(0+128),w
  2133  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  2134  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  2135  15E0  00A3               	movwf	___flge@ff1+3
  2136  15E1  1683               	bsf	3,5	;RP0=1, select bank1
  2137  15E2  1303               	bcf	3,6	;RP1=0, select bank1
  2138  15E3  084F               	movf	(sprintf@fval+2)^(0+128),w
  2139  15E4  1283               	bcf	3,5	;RP0=0, select bank0
  2140  15E5  1303               	bcf	3,6	;RP1=0, select bank0
  2141  15E6  00A2               	movwf	___flge@ff1+2
  2142  15E7  1683               	bsf	3,5	;RP0=1, select bank1
  2143  15E8  1303               	bcf	3,6	;RP1=0, select bank1
  2144  15E9  084E               	movf	(sprintf@fval+1)^(0+128),w
  2145  15EA  1283               	bcf	3,5	;RP0=0, select bank0
  2146  15EB  1303               	bcf	3,6	;RP1=0, select bank0
  2147  15EC  00A1               	movwf	___flge@ff1+1
  2148  15ED  1683               	bsf	3,5	;RP0=1, select bank1
  2149  15EE  1303               	bcf	3,6	;RP1=0, select bank1
  2150  15EF  084D               	movf	sprintf@fval^(0+128),w
  2151  15F0  1283               	bcf	3,5	;RP0=0, select bank0
  2152  15F1  1303               	bcf	3,6	;RP1=0, select bank0
  2153  15F2  00A0               	movwf	___flge@ff1
  2154  15F3  3000               	movlw	0
  2155  15F4  00A7               	movwf	___flge@ff2+3
  2156  15F5  3000               	movlw	0
  2157  15F6  00A6               	movwf	___flge@ff2+2
  2158  15F7  3000               	movlw	0
  2159  15F8  00A5               	movwf	___flge@ff2+1
  2160  15F9  3000               	movlw	0
  2161  15FA  00A4               	movwf	___flge@ff2
  2162  15FB  160A  118A  20CA  160A  118A  	fcall	___flge
  2163  1600  1803               	btfsc	3,0
  2164  1601  2E03               	goto	u7341
  2165  1602  2E04               	goto	u7340
  2166  1603                     u7341:
  2167  1603  2E3D               	goto	l4277
  2168  1604                     u7340:
  2169  1604                     l4273:
  2170                           
  2171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2172  1604  1683               	bsf	3,5	;RP0=1, select bank1
  2173  1605  1303               	bcf	3,6	;RP1=0, select bank1
  2174  1606  0850               	movf	(sprintf@fval+3)^(0+128),w
  2175  1607  1283               	bcf	3,5	;RP0=0, select bank0
  2176  1608  1303               	bcf	3,6	;RP1=0, select bank0
  2177  1609  00A3               	movwf	___flneg@f1+3
  2178  160A  1683               	bsf	3,5	;RP0=1, select bank1
  2179  160B  1303               	bcf	3,6	;RP1=0, select bank1
  2180  160C  084F               	movf	(sprintf@fval+2)^(0+128),w
  2181  160D  1283               	bcf	3,5	;RP0=0, select bank0
  2182  160E  1303               	bcf	3,6	;RP1=0, select bank0
  2183  160F  00A2               	movwf	___flneg@f1+2
  2184  1610  1683               	bsf	3,5	;RP0=1, select bank1
  2185  1611  1303               	bcf	3,6	;RP1=0, select bank1
  2186  1612  084E               	movf	(sprintf@fval+1)^(0+128),w
  2187  1613  1283               	bcf	3,5	;RP0=0, select bank0
  2188  1614  1303               	bcf	3,6	;RP1=0, select bank0
  2189  1615  00A1               	movwf	___flneg@f1+1
  2190  1616  1683               	bsf	3,5	;RP0=1, select bank1
  2191  1617  1303               	bcf	3,6	;RP1=0, select bank1
  2192  1618  084D               	movf	sprintf@fval^(0+128),w
  2193  1619  1283               	bcf	3,5	;RP0=0, select bank0
  2194  161A  1303               	bcf	3,6	;RP1=0, select bank0
  2195  161B  00A0               	movwf	___flneg@f1
  2196  161C  160A  158A  20D0  160A  118A  	fcall	___flneg
  2197  1621  1283               	bcf	3,5	;RP0=0, select bank0
  2198  1622  1303               	bcf	3,6	;RP1=0, select bank0
  2199  1623  0823               	movf	?___flneg+3,w
  2200  1624  1683               	bsf	3,5	;RP0=1, select bank1
  2201  1625  1303               	bcf	3,6	;RP1=0, select bank1
  2202  1626  00D0               	movwf	(sprintf@fval+3)^(0+128)
  2203  1627  1283               	bcf	3,5	;RP0=0, select bank0
  2204  1628  1303               	bcf	3,6	;RP1=0, select bank0
  2205  1629  0822               	movf	?___flneg+2,w
  2206  162A  1683               	bsf	3,5	;RP0=1, select bank1
  2207  162B  1303               	bcf	3,6	;RP1=0, select bank1
  2208  162C  00CF               	movwf	(sprintf@fval+2)^(0+128)
  2209  162D  1283               	bcf	3,5	;RP0=0, select bank0
  2210  162E  1303               	bcf	3,6	;RP1=0, select bank0
  2211  162F  0821               	movf	?___flneg+1,w
  2212  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2213  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2214  1632  00CE               	movwf	(sprintf@fval+1)^(0+128)
  2215  1633  1283               	bcf	3,5	;RP0=0, select bank0
  2216  1634  1303               	bcf	3,6	;RP1=0, select bank0
  2217  1635  0820               	movf	?___flneg,w
  2218  1636  1683               	bsf	3,5	;RP0=1, select bank1
  2219  1637  1303               	bcf	3,6	;RP1=0, select bank1
  2220  1638  00CD               	movwf	sprintf@fval^(0+128)
  2221  1639                     l4275:
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2224  1639  3003               	movlw	3
  2225  163A  04C3               	iorwf	sprintf@flag^(0+128),f
  2226  163B  3000               	movlw	0
  2227  163C  04C4               	iorwf	(sprintf@flag+1)^(0+128),f
  2228  163D                     l4277:
  2229                           
  2230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2231  163D  1683               	bsf	3,5	;RP0=1, select bank1
  2232  163E  1303               	bcf	3,6	;RP1=0, select bank1
  2233  163F  01CB               	clrf	sprintf@eexp^(0+128)
  2234  1640  01CC               	clrf	(sprintf@eexp+1)^(0+128)
  2235  1641                     l4279:
  2236                           
  2237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2238  1641  0850               	movf	(sprintf@fval+3)^(0+128),w
  2239  1642  1283               	bcf	3,5	;RP0=0, select bank0
  2240  1643  1303               	bcf	3,6	;RP1=0, select bank0
  2241  1644  00A3               	movwf	___fleq@ff1+3
  2242  1645  1683               	bsf	3,5	;RP0=1, select bank1
  2243  1646  1303               	bcf	3,6	;RP1=0, select bank1
  2244  1647  084F               	movf	(sprintf@fval+2)^(0+128),w
  2245  1648  1283               	bcf	3,5	;RP0=0, select bank0
  2246  1649  1303               	bcf	3,6	;RP1=0, select bank0
  2247  164A  00A2               	movwf	___fleq@ff1+2
  2248  164B  1683               	bsf	3,5	;RP0=1, select bank1
  2249  164C  1303               	bcf	3,6	;RP1=0, select bank1
  2250  164D  084E               	movf	(sprintf@fval+1)^(0+128),w
  2251  164E  1283               	bcf	3,5	;RP0=0, select bank0
  2252  164F  1303               	bcf	3,6	;RP1=0, select bank0
  2253  1650  00A1               	movwf	___fleq@ff1+1
  2254  1651  1683               	bsf	3,5	;RP0=1, select bank1
  2255  1652  1303               	bcf	3,6	;RP1=0, select bank1
  2256  1653  084D               	movf	sprintf@fval^(0+128),w
  2257  1654  1283               	bcf	3,5	;RP0=0, select bank0
  2258  1655  1303               	bcf	3,6	;RP1=0, select bank0
  2259  1656  00A0               	movwf	___fleq@ff1
  2260  1657  3000               	movlw	0
  2261  1658  00A7               	movwf	___fleq@ff2+3
  2262  1659  3000               	movlw	0
  2263  165A  00A6               	movwf	___fleq@ff2+2
  2264  165B  3000               	movlw	0
  2265  165C  00A5               	movwf	___fleq@ff2+1
  2266  165D  3000               	movlw	0
  2267  165E  00A4               	movwf	___fleq@ff2
  2268  165F  160A  158A  238B  160A  118A  	fcall	___fleq
  2269  1664  1803               	btfsc	3,0
  2270  1665  2E67               	goto	u7351
  2271  1666  2E68               	goto	u7350
  2272  1667                     u7351:
  2273  1667  2F94               	goto	l4305
  2274  1668                     u7350:
  2275  1668                     l4281:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2278  1668  1003               	clrc
  2279  1669  1683               	bsf	3,5	;RP0=1, select bank1
  2280  166A  1303               	bcf	3,6	;RP1=0, select bank1
  2281  166B  0D4F               	rlf	(sprintf@fval+2)^(0+128),w
  2282  166C  0D50               	rlf	(sprintf@fval+3)^(0+128),w
  2283  166D  3E82               	addlw	130
  2284  166E  00CB               	movwf	sprintf@eexp^(0+128)
  2285  166F  30FF               	movlw	255
  2286  1670  1803               	skipnc
  2287  1671  3000               	movlw	0
  2288  1672  00CC               	movwf	(sprintf@eexp^(0+128)+1)
  2289  1673                     l4283:
  2290                           
  2291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2292  1673  30FF               	movlw	255
  2293  1674  07CB               	addwf	sprintf@eexp^(0+128),f
  2294  1675  1803               	skipnc
  2295  1676  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
  2296  1677  30FF               	movlw	255
  2297  1678  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
  2298  1679                     l4285:
  2299                           
  2300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2301  1679  3003               	movlw	3
  2302  167A  1283               	bcf	3,5	;RP0=0, select bank0
  2303  167B  1303               	bcf	3,6	;RP1=0, select bank0
  2304  167C  00A0               	movwf	___wmul@multiplier
  2305  167D  3000               	movlw	0
  2306  167E  00A1               	movwf	___wmul@multiplier+1
  2307  167F  1683               	bsf	3,5	;RP0=1, select bank1
  2308  1680  1303               	bcf	3,6	;RP1=0, select bank1
  2309  1681  084C               	movf	(sprintf@eexp+1)^(0+128),w
  2310  1682  1283               	bcf	3,5	;RP0=0, select bank0
  2311  1683  1303               	bcf	3,6	;RP1=0, select bank0
  2312  1684  00A3               	movwf	___wmul@multiplicand+1
  2313  1685  1683               	bsf	3,5	;RP0=1, select bank1
  2314  1686  1303               	bcf	3,6	;RP1=0, select bank1
  2315  1687  084B               	movf	sprintf@eexp^(0+128),w
  2316  1688  1283               	bcf	3,5	;RP0=0, select bank0
  2317  1689  1303               	bcf	3,6	;RP1=0, select bank0
  2318  168A  00A2               	movwf	___wmul@multiplicand
  2319  168B  120A  158A  2000  160A  118A  	fcall	___wmul
  2320  1690  1283               	bcf	3,5	;RP0=0, select bank0
  2321  1691  1303               	bcf	3,6	;RP1=0, select bank0
  2322  1692  0821               	movf	?___wmul+1,w
  2323  1693  1683               	bsf	3,5	;RP0=1, select bank1
  2324  1694  1303               	bcf	3,6	;RP1=0, select bank1
  2325  1695  00CC               	movwf	(sprintf@eexp+1)^(0+128)
  2326  1696  1283               	bcf	3,5	;RP0=0, select bank0
  2327  1697  1303               	bcf	3,6	;RP1=0, select bank0
  2328  1698  0820               	movf	?___wmul,w
  2329  1699  1683               	bsf	3,5	;RP0=1, select bank1
  2330  169A  1303               	bcf	3,6	;RP1=0, select bank1
  2331  169B  00CB               	movwf	sprintf@eexp^(0+128)
  2332  169C                     l4287:
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2335  169C  300A               	movlw	10
  2336  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2337  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2338  169F  00A4               	movwf	___awdiv@divisor
  2339  16A0  3000               	movlw	0
  2340  16A1  00A5               	movwf	___awdiv@divisor+1
  2341  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  2342  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  2343  16A4  084C               	movf	(sprintf@eexp+1)^(0+128),w
  2344  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2345  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2346  16A7  00A7               	movwf	___awdiv@dividend+1
  2347  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2348  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2349  16AA  084B               	movf	sprintf@eexp^(0+128),w
  2350  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  2351  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  2352  16AD  00A6               	movwf	___awdiv@dividend
  2353  16AE  160A  158A  25A2  160A  118A  	fcall	___awdiv
  2354  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  2355  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  2356  16B5  0825               	movf	?___awdiv+1,w
  2357  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  2358  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2359  16B8  00CC               	movwf	(sprintf@eexp+1)^(0+128)
  2360  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2361  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2362  16BB  0824               	movf	?___awdiv,w
  2363  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2364  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2365  16BE  00CB               	movwf	sprintf@eexp^(0+128)
  2366  16BF                     l4289:
  2367                           
  2368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2369  16BF  1FCC               	btfss	(sprintf@eexp+1)^(0+128),7
  2370  16C0  2EC2               	goto	u7361
  2371  16C1  2EC3               	goto	u7360
  2372  16C2                     u7361:
  2373  16C2  2EC9               	goto	l4293
  2374  16C3                     u7360:
  2375  16C3                     l4291:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2378  16C3  30FF               	movlw	255
  2379  16C4  07CB               	addwf	sprintf@eexp^(0+128),f
  2380  16C5  1803               	skipnc
  2381  16C6  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
  2382  16C7  30FF               	movlw	255
  2383  16C8  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
  2384  16C9                     l4293:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2387  16C9  034B               	decf	sprintf@eexp^(0+128),w
  2388  16CA  3AFF               	xorlw	255
  2389  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  2390  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2391  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2392  16D2  084B               	movf	?_scale+3,w
  2393  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  2394  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  2395  16D5  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
  2396  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2397  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2398  16D8  084A               	movf	?_scale+2,w
  2399  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  2400  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  2401  16DB  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
  2402  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  2403  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  2404  16DE  0849               	movf	?_scale+1,w
  2405  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  2406  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  2407  16E1  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
  2408  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2409  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2410  16E4  0848               	movf	?_scale,w
  2411  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  2412  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  2413  16E7  00C7               	movwf	sprintf@tmpval^(0+128)
  2414  16E8                     l4295:
  2415                           
  2416                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2417  16E8  0850               	movf	(sprintf@fval+3)^(0+128),w
  2418  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  2419  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  2420  16EB  00B1               	movwf	___flmul@b+3
  2421  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  2422  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  2423  16EE  084F               	movf	(sprintf@fval+2)^(0+128),w
  2424  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2425  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2426  16F1  00B0               	movwf	___flmul@b+2
  2427  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  2428  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  2429  16F4  084E               	movf	(sprintf@fval+1)^(0+128),w
  2430  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  2431  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  2432  16F7  00AF               	movwf	___flmul@b+1
  2433  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  2434  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  2435  16FA  084D               	movf	sprintf@fval^(0+128),w
  2436  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  2437  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  2438  16FD  00AE               	movwf	___flmul@b
  2439  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  2440  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  2441  1700  084A               	movf	(sprintf@tmpval+3)^(0+128),w
  2442  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2443  1702  1303               	bcf	3,6	;RP1=0, select bank0
  2444  1703  00B5               	movwf	___flmul@a+3
  2445  1704  1683               	bsf	3,5	;RP0=1, select bank1
  2446  1705  1303               	bcf	3,6	;RP1=0, select bank1
  2447  1706  0849               	movf	(sprintf@tmpval+2)^(0+128),w
  2448  1707  1283               	bcf	3,5	;RP0=0, select bank0
  2449  1708  1303               	bcf	3,6	;RP1=0, select bank0
  2450  1709  00B4               	movwf	___flmul@a+2
  2451  170A  1683               	bsf	3,5	;RP0=1, select bank1
  2452  170B  1303               	bcf	3,6	;RP1=0, select bank1
  2453  170C  0848               	movf	(sprintf@tmpval+1)^(0+128),w
  2454  170D  1283               	bcf	3,5	;RP0=0, select bank0
  2455  170E  1303               	bcf	3,6	;RP1=0, select bank0
  2456  170F  00B3               	movwf	___flmul@a+1
  2457  1710  1683               	bsf	3,5	;RP0=1, select bank1
  2458  1711  1303               	bcf	3,6	;RP1=0, select bank1
  2459  1712  0847               	movf	sprintf@tmpval^(0+128),w
  2460  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2461  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2462  1715  00B2               	movwf	___flmul@a
  2463  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  2464  171B  1283               	bcf	3,5	;RP0=0, select bank0
  2465  171C  1303               	bcf	3,6	;RP1=0, select bank0
  2466  171D  0831               	movf	?___flmul+3,w
  2467  171E  1683               	bsf	3,5	;RP0=1, select bank1
  2468  171F  1303               	bcf	3,6	;RP1=0, select bank1
  2469  1720  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
  2470  1721  1283               	bcf	3,5	;RP0=0, select bank0
  2471  1722  1303               	bcf	3,6	;RP1=0, select bank0
  2472  1723  0830               	movf	?___flmul+2,w
  2473  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2474  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2475  1726  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
  2476  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2477  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2478  1729  082F               	movf	?___flmul+1,w
  2479  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2480  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2481  172C  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
  2482  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2483  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2484  172F  082E               	movf	?___flmul,w
  2485  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2486  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2487  1732  00C7               	movwf	sprintf@tmpval^(0+128)
  2488  1733                     l4297:
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2491  1733  084A               	movf	(sprintf@tmpval+3)^(0+128),w
  2492  1734  1283               	bcf	3,5	;RP0=0, select bank0
  2493  1735  1303               	bcf	3,6	;RP1=0, select bank0
  2494  1736  00A3               	movwf	___flge@ff1+3
  2495  1737  1683               	bsf	3,5	;RP0=1, select bank1
  2496  1738  1303               	bcf	3,6	;RP1=0, select bank1
  2497  1739  0849               	movf	(sprintf@tmpval+2)^(0+128),w
  2498  173A  1283               	bcf	3,5	;RP0=0, select bank0
  2499  173B  1303               	bcf	3,6	;RP1=0, select bank0
  2500  173C  00A2               	movwf	___flge@ff1+2
  2501  173D  1683               	bsf	3,5	;RP0=1, select bank1
  2502  173E  1303               	bcf	3,6	;RP1=0, select bank1
  2503  173F  0848               	movf	(sprintf@tmpval+1)^(0+128),w
  2504  1740  1283               	bcf	3,5	;RP0=0, select bank0
  2505  1741  1303               	bcf	3,6	;RP1=0, select bank0
  2506  1742  00A1               	movwf	___flge@ff1+1
  2507  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2508  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2509  1745  0847               	movf	sprintf@tmpval^(0+128),w
  2510  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2511  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2512  1748  00A0               	movwf	___flge@ff1
  2513  1749  303F               	movlw	63
  2514  174A  00A7               	movwf	___flge@ff2+3
  2515  174B  3080               	movlw	128
  2516  174C  00A6               	movwf	___flge@ff2+2
  2517  174D  3000               	movlw	0
  2518  174E  00A5               	movwf	___flge@ff2+1
  2519  174F  3000               	movlw	0
  2520  1750  00A4               	movwf	___flge@ff2
  2521  1751  160A  118A  20CA  160A  118A  	fcall	___flge
  2522  1756  1803               	btfsc	3,0
  2523  1757  2F59               	goto	u7371
  2524  1758  2F5A               	goto	u7370
  2525  1759                     u7371:
  2526  1759  2F63               	goto	l4301
  2527  175A                     u7370:
  2528  175A                     l4299:
  2529                           
  2530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2531  175A  30FF               	movlw	255
  2532  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2533  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2534  175D  07CB               	addwf	sprintf@eexp^(0+128),f
  2535  175E  1803               	skipnc
  2536  175F  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
  2537  1760  30FF               	movlw	255
  2538  1761  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
  2539  1762  2F94               	goto	l4305
  2540  1763                     l4301:
  2541  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2542  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2543  1765  084A               	movf	(sprintf@tmpval+3)^(0+128),w
  2544  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2545  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2546  1768  00A3               	movwf	___flge@ff1+3
  2547  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2548  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2549  176B  0849               	movf	(sprintf@tmpval+2)^(0+128),w
  2550  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2551  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2552  176E  00A2               	movwf	___flge@ff1+2
  2553  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2554  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2555  1771  0848               	movf	(sprintf@tmpval+1)^(0+128),w
  2556  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2557  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2558  1774  00A1               	movwf	___flge@ff1+1
  2559  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2560  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2561  1777  0847               	movf	sprintf@tmpval^(0+128),w
  2562  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2563  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2564  177A  00A0               	movwf	___flge@ff1
  2565  177B  3041               	movlw	65
  2566  177C  00A7               	movwf	___flge@ff2+3
  2567  177D  3020               	movlw	32
  2568  177E  00A6               	movwf	___flge@ff2+2
  2569  177F  3000               	movlw	0
  2570  1780  00A5               	movwf	___flge@ff2+1
  2571  1781  3000               	movlw	0
  2572  1782  00A4               	movwf	___flge@ff2
  2573  1783  160A  118A  20CA  160A  118A  	fcall	___flge
  2574  1788  1C03               	btfss	3,0
  2575  1789  2F8B               	goto	u7381
  2576  178A  2F8C               	goto	u7380
  2577  178B                     u7381:
  2578  178B  2F94               	goto	l4305
  2579  178C                     u7380:
  2580  178C                     l4303:
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2583  178C  3001               	movlw	1
  2584  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2585  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2586  178F  07CB               	addwf	sprintf@eexp^(0+128),f
  2587  1790  1803               	skipnc
  2588  1791  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
  2589  1792  3000               	movlw	0
  2590  1793  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
  2591  1794                     l4305:
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2594  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2595  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2596  1796  0853               	movf	(sprintf@prec+1)^(0+128),w
  2597  1797  3A80               	xorlw	128
  2598  1798  00FF               	movwf	btemp+1
  2599  1799  3080               	movlw	128
  2600  179A  027F               	subwf	btemp+1,w
  2601  179B  1D03               	skipz
  2602  179C  2F9F               	goto	u7395
  2603  179D  300D               	movlw	13
  2604  179E  0252               	subwf	sprintf@prec^(0+128),w
  2605  179F                     u7395:
  2606  179F  1803               	skipnc
  2607  17A0  2FA2               	goto	u7391
  2608  17A1  2FA3               	goto	u7390
  2609  17A2                     u7391:
  2610  17A2  2FEA               	goto	l4309
  2611  17A3                     u7390:
  2612  17A3                     l4307:
  2613                           
  2614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2615  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2616  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2617  17A5  0852               	movf	sprintf@prec^(0+128),w
  2618  17A6  120A  118A  25DA  160A  118A  	fcall	_fround
  2619  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2620  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2621  17AD  084B               	movf	?_fround+3,w
  2622  17AE  00DF               	movwf	___fladd@b+3
  2623  17AF  084A               	movf	?_fround+2,w
  2624  17B0  00DE               	movwf	___fladd@b+2
  2625  17B1  0849               	movf	?_fround+1,w
  2626  17B2  00DD               	movwf	___fladd@b+1
  2627  17B3  0848               	movf	?_fround,w
  2628  17B4  00DC               	movwf	___fladd@b
  2629  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2630  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2631  17B7  0850               	movf	(sprintf@fval+3)^(0+128),w
  2632  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2633  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2634  17BA  00E3               	movwf	___fladd@a+3
  2635  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2636  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2637  17BD  084F               	movf	(sprintf@fval+2)^(0+128),w
  2638  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2639  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2640  17C0  00E2               	movwf	___fladd@a+2
  2641  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2642  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2643  17C3  084E               	movf	(sprintf@fval+1)^(0+128),w
  2644  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2645  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2646  17C6  00E1               	movwf	___fladd@a+1
  2647  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2648  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2649  17C9  084D               	movf	sprintf@fval^(0+128),w
  2650  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2651  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2652  17CC  00E0               	movwf	___fladd@a
  2653  17CD  160A  118A  222C  160A  118A  	fcall	___fladd
  2654  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2655  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2656  17D4  085F               	movf	?___fladd+3,w
  2657  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2658  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2659  17D7  00D0               	movwf	(sprintf@fval+3)^(0+128)
  2660  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2661  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2662  17DA  085E               	movf	?___fladd+2,w
  2663  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2664  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2665  17DD  00CF               	movwf	(sprintf@fval+2)^(0+128)
  2666  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2667  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2668  17E0  085D               	movf	?___fladd+1,w
  2669  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2670  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2671  17E3  00CE               	movwf	(sprintf@fval+1)^(0+128)
  2672  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2673  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2674  17E6  085C               	movf	?___fladd,w
  2675  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2676  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2677  17E9  00CD               	movwf	sprintf@fval^(0+128)
  2678  17EA                     l4309:
  2679                           
  2680                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2681  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2682  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2683  17EC  084C               	movf	(sprintf@eexp+1)^(0+128),w
  2684  17ED  3A80               	xorlw	128
  2685  17EE  00FF               	movwf	btemp+1
  2686  17EF  3080               	movlw	128
  2687  17F0  027F               	subwf	btemp+1,w
  2688  17F1  1D03               	skipz
  2689  17F2  2FF5               	goto	u7405
  2690  17F3  300A               	movlw	10
  2691  17F4  024B               	subwf	sprintf@eexp^(0+128),w
  2692  17F5                     u7405:
  2693  17F5  1803               	skipnc
  2694  17F6  2FFA               	goto	u7401
  2695  17F7  120A  118A  2826   	goto	u7400
  2696  17FA                     u7401:
  2697  17FA  120A  118A  2885   	goto	l4317
  2698  17FD                     L3:
  2699  17FD                     L2:
  2700  17FD  120A  118A  2DD5   	ljmp	l4467
  2701                           
  2702                           	psect	text2
  2703  0C9D                     __ptext2:	
  2704 ;; *************** function _scale *****************
  2705 ;; Defined at:
  2706 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  scl             1    wreg     char 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  scl             1   58[BANK0 ] char 
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  4   40[BANK0 ] char 
  2713 ;; Registers used:
  2714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2720 ;;      Params:         0       4       0       0       0
  2721 ;;      Locals:         0       5       0       0       0
  2722 ;;      Temps:          0      10       0       0       0
  2723 ;;      Totals:         0      19       0       0       0
  2724 ;;Total ram usage:       19 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    4
  2727 ;; This function calls:
  2728 ;;		___awdiv
  2729 ;;		___awmod
  2730 ;;		___flmul
  2731 ;; This function is called by:
  2732 ;;		_sprintf
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           
  2737                           ;psect for function _scale
  2738  0C9D                     _scale:
  2739                           
  2740                           ;incstack = 0
  2741                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2742                           ;scale@scl stored from wreg
  2743  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0C9F  00DA               	movwf	scale@scl
  2746  0CA0                     l3987:
  2747                           
  2748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2749  0CA0  1FDA               	btfss	scale@scl,7
  2750  0CA1  2CA3               	goto	u6631
  2751  0CA2  2CA4               	goto	u6630
  2752  0CA3                     u6631:
  2753  0CA3  2E53               	goto	l4009
  2754  0CA4                     u6630:
  2755  0CA4                     l3989:
  2756                           
  2757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2758  0CA4  09DA               	comf	scale@scl,f
  2759  0CA5  0ADA               	incf	scale@scl,f
  2760  0CA6                     l3991:
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2763  0CA6  085A               	movf	scale@scl,w
  2764  0CA7  3A80               	xorlw	128
  2765  0CA8  3E12               	addlw	-238
  2766  0CA9  1C03               	skipc
  2767  0CAA  2CAC               	goto	u6641
  2768  0CAB  2CAD               	goto	u6640
  2769  0CAC                     u6641:
  2770  0CAC  2D97               	goto	l3999
  2771  0CAD                     u6640:
  2772  0CAD                     l3993:
  2773                           
  2774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2775  0CAD  300A               	movlw	10
  2776  0CAE  00A4               	movwf	___awdiv@divisor
  2777  0CAF  3000               	movlw	0
  2778  0CB0  00A5               	movwf	___awdiv@divisor+1
  2779  0CB1  085A               	movf	scale@scl,w
  2780  0CB2  00A2               	movwf	___awmod@dividend
  2781  0CB3  01A3               	clrf	___awmod@dividend+1
  2782  0CB4  1BA2               	btfsc	___awmod@dividend,7
  2783  0CB5  03A3               	decf	___awmod@dividend+1,f
  2784  0CB6  3064               	movlw	100
  2785  0CB7  00A0               	movwf	___awmod@divisor
  2786  0CB8  3000               	movlw	0
  2787  0CB9  00A1               	movwf	___awmod@divisor+1
  2788  0CBA  160A  158A  2481  120A  158A  	fcall	___awmod
  2789  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  2790  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  2791  0CC1  0821               	movf	?___awmod+1,w
  2792  0CC2  00A7               	movwf	___awdiv@dividend+1
  2793  0CC3  0820               	movf	?___awmod,w
  2794  0CC4  00A6               	movwf	___awdiv@dividend
  2795  0CC5  160A  158A  25A2  120A  158A  	fcall	___awdiv
  2796  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2797  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2798  0CCC  0824               	movf	?___awdiv,w
  2799  0CCD  00CC               	movwf	??_scale
  2800  0CCE  3001               	movlw	1
  2801  0CCF                     u6655:
  2802  0CCF  1003               	clrc
  2803  0CD0  0DCC               	rlf	??_scale,f
  2804  0CD1  3EFF               	addlw	-1
  2805  0CD2  1D03               	skipz
  2806  0CD3  2CCF               	goto	u6655
  2807  0CD4  1003               	clrc
  2808  0CD5  0D4C               	rlf	??_scale,w
  2809  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2810  0CD7  0084               	movwf	4
  2811  0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  2812  0CDD  00CD               	movwf	??_scale+1
  2813  0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  2814  0CE3  00CE               	movwf	??_scale+2
  2815  0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  2816  0CE9  00CF               	movwf	??_scale+3
  2817  0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  2818  0CEF  00D0               	movwf	??_scale+4
  2819  0CF0  0850               	movf	??_scale+4,w
  2820  0CF1  00B1               	movwf	___flmul@b+3
  2821  0CF2  084F               	movf	??_scale+3,w
  2822  0CF3  00B0               	movwf	___flmul@b+2
  2823  0CF4  084E               	movf	??_scale+2,w
  2824  0CF5  00AF               	movwf	___flmul@b+1
  2825  0CF6  084D               	movf	??_scale+1,w
  2826  0CF7  00AE               	movwf	___flmul@b
  2827  0CF8  3064               	movlw	100
  2828  0CF9  00A4               	movwf	___awdiv@divisor
  2829  0CFA  3000               	movlw	0
  2830  0CFB  00A5               	movwf	___awdiv@divisor+1
  2831  0CFC  085A               	movf	scale@scl,w
  2832  0CFD  00A6               	movwf	___awdiv@dividend
  2833  0CFE  01A7               	clrf	___awdiv@dividend+1
  2834  0CFF  1BA6               	btfsc	___awdiv@dividend,7
  2835  0D00  03A7               	decf	___awdiv@dividend+1,f
  2836  0D01  160A  158A  25A2  120A  158A  	fcall	___awdiv
  2837  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2838  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2839  0D08  0824               	movf	?___awdiv,w
  2840  0D09  00D1               	movwf	??_scale+5
  2841  0D0A  3001               	movlw	1
  2842  0D0B                     u6665:
  2843  0D0B  1003               	clrc
  2844  0D0C  0DD1               	rlf	??_scale+5,f
  2845  0D0D  3EFF               	addlw	-1
  2846  0D0E  1D03               	skipz
  2847  0D0F  2D0B               	goto	u6665
  2848  0D10  1003               	clrc
  2849  0D11  0D51               	rlf	??_scale+5,w
  2850  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2851  0D13  0084               	movwf	4
  2852  0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  2853  0D19  00D2               	movwf	??_scale+6
  2854  0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  2855  0D1F  00D3               	movwf	??_scale+7
  2856  0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  2857  0D25  00D4               	movwf	??_scale+8
  2858  0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  2859  0D2B  00D5               	movwf	??_scale+9
  2860  0D2C  0855               	movf	??_scale+9,w
  2861  0D2D  00B5               	movwf	___flmul@a+3
  2862  0D2E  0854               	movf	??_scale+8,w
  2863  0D2F  00B4               	movwf	___flmul@a+2
  2864  0D30  0853               	movf	??_scale+7,w
  2865  0D31  00B3               	movwf	___flmul@a+1
  2866  0D32  0852               	movf	??_scale+6,w
  2867  0D33  00B2               	movwf	___flmul@a
  2868  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2869  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2871  0D3B  0831               	movf	?___flmul+3,w
  2872  0D3C  00D9               	movwf	_scale$1211+3
  2873  0D3D  0830               	movf	?___flmul+2,w
  2874  0D3E  00D8               	movwf	_scale$1211+2
  2875  0D3F  082F               	movf	?___flmul+1,w
  2876  0D40  00D7               	movwf	_scale$1211+1
  2877  0D41  082E               	movf	?___flmul,w
  2878  0D42  00D6               	movwf	_scale$1211
  2879                           
  2880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2881  0D43  300A               	movlw	10
  2882  0D44  00A0               	movwf	___awmod@divisor
  2883  0D45  3000               	movlw	0
  2884  0D46  00A1               	movwf	___awmod@divisor+1
  2885  0D47  085A               	movf	scale@scl,w
  2886  0D48  00A2               	movwf	___awmod@dividend
  2887  0D49  01A3               	clrf	___awmod@dividend+1
  2888  0D4A  1BA2               	btfsc	___awmod@dividend,7
  2889  0D4B  03A3               	decf	___awmod@dividend+1,f
  2890  0D4C  160A  158A  2481  120A  158A  	fcall	___awmod
  2891  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  2892  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  2893  0D53  0820               	movf	?___awmod,w
  2894  0D54  00CC               	movwf	??_scale
  2895  0D55  3001               	movlw	1
  2896  0D56                     u6675:
  2897  0D56  1003               	clrc
  2898  0D57  0DCC               	rlf	??_scale,f
  2899  0D58  3EFF               	addlw	-1
  2900  0D59  1D03               	skipz
  2901  0D5A  2D56               	goto	u6675
  2902  0D5B  1003               	clrc
  2903  0D5C  0D4C               	rlf	??_scale,w
  2904  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2905  0D5E  0084               	movwf	4
  2906  0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  2907  0D64  00CD               	movwf	??_scale+1
  2908  0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  2909  0D6A  00CE               	movwf	??_scale+2
  2910  0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  2911  0D70  00CF               	movwf	??_scale+3
  2912  0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  2913  0D76  00D0               	movwf	??_scale+4
  2914  0D77  0850               	movf	??_scale+4,w
  2915  0D78  00B1               	movwf	___flmul@b+3
  2916  0D79  084F               	movf	??_scale+3,w
  2917  0D7A  00B0               	movwf	___flmul@b+2
  2918  0D7B  084E               	movf	??_scale+2,w
  2919  0D7C  00AF               	movwf	___flmul@b+1
  2920  0D7D  084D               	movf	??_scale+1,w
  2921  0D7E  00AE               	movwf	___flmul@b
  2922  0D7F  0859               	movf	_scale$1211+3,w
  2923  0D80  00B5               	movwf	___flmul@a+3
  2924  0D81  0858               	movf	_scale$1211+2,w
  2925  0D82  00B4               	movwf	___flmul@a+2
  2926  0D83  0857               	movf	_scale$1211+1,w
  2927  0D84  00B3               	movwf	___flmul@a+1
  2928  0D85  0856               	movf	_scale$1211,w
  2929  0D86  00B2               	movwf	___flmul@a
  2930  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2931  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2932  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2933  0D8E  0831               	movf	?___flmul+3,w
  2934  0D8F  00CB               	movwf	?_scale+3
  2935  0D90  0830               	movf	?___flmul+2,w
  2936  0D91  00CA               	movwf	?_scale+2
  2937  0D92  082F               	movf	?___flmul+1,w
  2938  0D93  00C9               	movwf	?_scale+1
  2939  0D94  082E               	movf	?___flmul,w
  2940  0D95  00C8               	movwf	?_scale
  2941  0D96  2FFF               	goto	l343
  2942  0D97                     l3999:
  2943  0D97  085A               	movf	scale@scl,w
  2944  0D98  3A80               	xorlw	128
  2945  0D99  3E75               	addlw	-139
  2946  0D9A  1C03               	skipc
  2947  0D9B  2D9D               	goto	u6681
  2948  0D9C  2D9E               	goto	u6680
  2949  0D9D                     u6681:
  2950  0D9D  2E26               	goto	l4005
  2951  0D9E                     u6680:
  2952  0D9E                     l4001:
  2953                           
  2954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2955  0D9E  300A               	movlw	10
  2956  0D9F  00A0               	movwf	___awmod@divisor
  2957  0DA0  3000               	movlw	0
  2958  0DA1  00A1               	movwf	___awmod@divisor+1
  2959  0DA2  085A               	movf	scale@scl,w
  2960  0DA3  00A2               	movwf	___awmod@dividend
  2961  0DA4  01A3               	clrf	___awmod@dividend+1
  2962  0DA5  1BA2               	btfsc	___awmod@dividend,7
  2963  0DA6  03A3               	decf	___awmod@dividend+1,f
  2964  0DA7  160A  158A  2481  120A  158A  	fcall	___awmod
  2965  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  2966  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  2967  0DAE  0820               	movf	?___awmod,w
  2968  0DAF  00CC               	movwf	??_scale
  2969  0DB0  3001               	movlw	1
  2970  0DB1                     u6695:
  2971  0DB1  1003               	clrc
  2972  0DB2  0DCC               	rlf	??_scale,f
  2973  0DB3  3EFF               	addlw	-1
  2974  0DB4  1D03               	skipz
  2975  0DB5  2DB1               	goto	u6695
  2976  0DB6  1003               	clrc
  2977  0DB7  0D4C               	rlf	??_scale,w
  2978  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2979  0DB9  0084               	movwf	4
  2980  0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  2981  0DBF  00CD               	movwf	??_scale+1
  2982  0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  2983  0DC5  00CE               	movwf	??_scale+2
  2984  0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  2985  0DCB  00CF               	movwf	??_scale+3
  2986  0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  2987  0DD1  00D0               	movwf	??_scale+4
  2988  0DD2  0850               	movf	??_scale+4,w
  2989  0DD3  00B1               	movwf	___flmul@b+3
  2990  0DD4  084F               	movf	??_scale+3,w
  2991  0DD5  00B0               	movwf	___flmul@b+2
  2992  0DD6  084E               	movf	??_scale+2,w
  2993  0DD7  00AF               	movwf	___flmul@b+1
  2994  0DD8  084D               	movf	??_scale+1,w
  2995  0DD9  00AE               	movwf	___flmul@b
  2996  0DDA  300A               	movlw	10
  2997  0DDB  00A4               	movwf	___awdiv@divisor
  2998  0DDC  3000               	movlw	0
  2999  0DDD  00A5               	movwf	___awdiv@divisor+1
  3000  0DDE  085A               	movf	scale@scl,w
  3001  0DDF  00A6               	movwf	___awdiv@dividend
  3002  0DE0  01A7               	clrf	___awdiv@dividend+1
  3003  0DE1  1BA6               	btfsc	___awdiv@dividend,7
  3004  0DE2  03A7               	decf	___awdiv@dividend+1,f
  3005  0DE3  160A  158A  25A2  120A  158A  	fcall	___awdiv
  3006  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3007  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3008  0DEA  0824               	movf	?___awdiv,w
  3009  0DEB  00D1               	movwf	??_scale+5
  3010  0DEC  3001               	movlw	1
  3011  0DED                     u6705:
  3012  0DED  1003               	clrc
  3013  0DEE  0DD1               	rlf	??_scale+5,f
  3014  0DEF  3EFF               	addlw	-1
  3015  0DF0  1D03               	skipz
  3016  0DF1  2DED               	goto	u6705
  3017  0DF2  1003               	clrc
  3018  0DF3  0D51               	rlf	??_scale+5,w
  3019  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3020  0DF5  0084               	movwf	4
  3021  0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  3022  0DFB  00D2               	movwf	??_scale+6
  3023  0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  3024  0E01  00D3               	movwf	??_scale+7
  3025  0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  3026  0E07  00D4               	movwf	??_scale+8
  3027  0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  3028  0E0D  00D5               	movwf	??_scale+9
  3029  0E0E  0855               	movf	??_scale+9,w
  3030  0E0F  00B5               	movwf	___flmul@a+3
  3031  0E10  0854               	movf	??_scale+8,w
  3032  0E11  00B4               	movwf	___flmul@a+2
  3033  0E12  0853               	movf	??_scale+7,w
  3034  0E13  00B3               	movwf	___flmul@a+1
  3035  0E14  0852               	movf	??_scale+6,w
  3036  0E15  00B2               	movwf	___flmul@a
  3037  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3038  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3039  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3040  0E1D  0831               	movf	?___flmul+3,w
  3041  0E1E  00CB               	movwf	?_scale+3
  3042  0E1F  0830               	movf	?___flmul+2,w
  3043  0E20  00CA               	movwf	?_scale+2
  3044  0E21  082F               	movf	?___flmul+1,w
  3045  0E22  00C9               	movwf	?_scale+1
  3046  0E23  082E               	movf	?___flmul,w
  3047  0E24  00C8               	movwf	?_scale
  3048  0E25  2FFF               	goto	l343
  3049  0E26                     l4005:
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3052  0E26  085A               	movf	scale@scl,w
  3053  0E27  00CC               	movwf	??_scale
  3054  0E28  3001               	movlw	1
  3055  0E29                     u6715:
  3056  0E29  1003               	clrc
  3057  0E2A  0DCC               	rlf	??_scale,f
  3058  0E2B  3EFF               	addlw	-1
  3059  0E2C  1D03               	skipz
  3060  0E2D  2E29               	goto	u6715
  3061  0E2E  1003               	clrc
  3062  0E2F  0D4C               	rlf	??_scale,w
  3063  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3064  0E31  0084               	movwf	4
  3065  0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  3066  0E37  00CD               	movwf	??_scale+1
  3067  0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  3068  0E3D  00CE               	movwf	??_scale+2
  3069  0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  3070  0E43  00CF               	movwf	??_scale+3
  3071  0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  3072  0E49  00D0               	movwf	??_scale+4
  3073  0E4A  0850               	movf	??_scale+4,w
  3074  0E4B  00CB               	movwf	?_scale+3
  3075  0E4C  084F               	movf	??_scale+3,w
  3076  0E4D  00CA               	movwf	?_scale+2
  3077  0E4E  084E               	movf	??_scale+2,w
  3078  0E4F  00C9               	movwf	?_scale+1
  3079  0E50  084D               	movf	??_scale+1,w
  3080  0E51  00C8               	movwf	?_scale
  3081  0E52  2FFF               	goto	l343
  3082  0E53                     l4009:
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3085  0E53  085A               	movf	scale@scl,w
  3086  0E54  3A80               	xorlw	128
  3087  0E55  3E12               	addlw	-238
  3088  0E56  1C03               	skipc
  3089  0E57  2E59               	goto	u6721
  3090  0E58  2E5A               	goto	u6720
  3091  0E59                     u6721:
  3092  0E59  2F44               	goto	l4017
  3093  0E5A                     u6720:
  3094  0E5A                     l4011:
  3095                           
  3096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3097  0E5A  300A               	movlw	10
  3098  0E5B  00A4               	movwf	___awdiv@divisor
  3099  0E5C  3000               	movlw	0
  3100  0E5D  00A5               	movwf	___awdiv@divisor+1
  3101  0E5E  085A               	movf	scale@scl,w
  3102  0E5F  00A2               	movwf	___awmod@dividend
  3103  0E60  01A3               	clrf	___awmod@dividend+1
  3104  0E61  1BA2               	btfsc	___awmod@dividend,7
  3105  0E62  03A3               	decf	___awmod@dividend+1,f
  3106  0E63  3064               	movlw	100
  3107  0E64  00A0               	movwf	___awmod@divisor
  3108  0E65  3000               	movlw	0
  3109  0E66  00A1               	movwf	___awmod@divisor+1
  3110  0E67  160A  158A  2481  120A  158A  	fcall	___awmod
  3111  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  3113  0E6E  0821               	movf	?___awmod+1,w
  3114  0E6F  00A7               	movwf	___awdiv@dividend+1
  3115  0E70  0820               	movf	?___awmod,w
  3116  0E71  00A6               	movwf	___awdiv@dividend
  3117  0E72  160A  158A  25A2  120A  158A  	fcall	___awdiv
  3118  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3119  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3120  0E79  0824               	movf	?___awdiv,w
  3121  0E7A  00CC               	movwf	??_scale
  3122  0E7B  3001               	movlw	1
  3123  0E7C                     u6735:
  3124  0E7C  1003               	clrc
  3125  0E7D  0DCC               	rlf	??_scale,f
  3126  0E7E  3EFF               	addlw	-1
  3127  0E7F  1D03               	skipz
  3128  0E80  2E7C               	goto	u6735
  3129  0E81  1003               	clrc
  3130  0E82  0D4C               	rlf	??_scale,w
  3131  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3132  0E84  0084               	movwf	4
  3133  0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  3134  0E8A  00CD               	movwf	??_scale+1
  3135  0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  3136  0E90  00CE               	movwf	??_scale+2
  3137  0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  3138  0E96  00CF               	movwf	??_scale+3
  3139  0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  3140  0E9C  00D0               	movwf	??_scale+4
  3141  0E9D  0850               	movf	??_scale+4,w
  3142  0E9E  00B1               	movwf	___flmul@b+3
  3143  0E9F  084F               	movf	??_scale+3,w
  3144  0EA0  00B0               	movwf	___flmul@b+2
  3145  0EA1  084E               	movf	??_scale+2,w
  3146  0EA2  00AF               	movwf	___flmul@b+1
  3147  0EA3  084D               	movf	??_scale+1,w
  3148  0EA4  00AE               	movwf	___flmul@b
  3149  0EA5  3064               	movlw	100
  3150  0EA6  00A4               	movwf	___awdiv@divisor
  3151  0EA7  3000               	movlw	0
  3152  0EA8  00A5               	movwf	___awdiv@divisor+1
  3153  0EA9  085A               	movf	scale@scl,w
  3154  0EAA  00A6               	movwf	___awdiv@dividend
  3155  0EAB  01A7               	clrf	___awdiv@dividend+1
  3156  0EAC  1BA6               	btfsc	___awdiv@dividend,7
  3157  0EAD  03A7               	decf	___awdiv@dividend+1,f
  3158  0EAE  160A  158A  25A2  120A  158A  	fcall	___awdiv
  3159  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3160  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3161  0EB5  0824               	movf	?___awdiv,w
  3162  0EB6  00D1               	movwf	??_scale+5
  3163  0EB7  3001               	movlw	1
  3164  0EB8                     u6745:
  3165  0EB8  1003               	clrc
  3166  0EB9  0DD1               	rlf	??_scale+5,f
  3167  0EBA  3EFF               	addlw	-1
  3168  0EBB  1D03               	skipz
  3169  0EBC  2EB8               	goto	u6745
  3170  0EBD  1003               	clrc
  3171  0EBE  0D51               	rlf	??_scale+5,w
  3172  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3173  0EC0  0084               	movwf	4
  3174  0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  3175  0EC6  00D2               	movwf	??_scale+6
  3176  0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  3177  0ECC  00D3               	movwf	??_scale+7
  3178  0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  3179  0ED2  00D4               	movwf	??_scale+8
  3180  0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  3181  0ED8  00D5               	movwf	??_scale+9
  3182  0ED9  0855               	movf	??_scale+9,w
  3183  0EDA  00B5               	movwf	___flmul@a+3
  3184  0EDB  0854               	movf	??_scale+8,w
  3185  0EDC  00B4               	movwf	___flmul@a+2
  3186  0EDD  0853               	movf	??_scale+7,w
  3187  0EDE  00B3               	movwf	___flmul@a+1
  3188  0EDF  0852               	movf	??_scale+6,w
  3189  0EE0  00B2               	movwf	___flmul@a
  3190  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3191  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3193  0EE8  0831               	movf	?___flmul+3,w
  3194  0EE9  00D9               	movwf	_scale$1211+3
  3195  0EEA  0830               	movf	?___flmul+2,w
  3196  0EEB  00D8               	movwf	_scale$1211+2
  3197  0EEC  082F               	movf	?___flmul+1,w
  3198  0EED  00D7               	movwf	_scale$1211+1
  3199  0EEE  082E               	movf	?___flmul,w
  3200  0EEF  00D6               	movwf	_scale$1211
  3201                           
  3202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3203  0EF0  300A               	movlw	10
  3204  0EF1  00A0               	movwf	___awmod@divisor
  3205  0EF2  3000               	movlw	0
  3206  0EF3  00A1               	movwf	___awmod@divisor+1
  3207  0EF4  085A               	movf	scale@scl,w
  3208  0EF5  00A2               	movwf	___awmod@dividend
  3209  0EF6  01A3               	clrf	___awmod@dividend+1
  3210  0EF7  1BA2               	btfsc	___awmod@dividend,7
  3211  0EF8  03A3               	decf	___awmod@dividend+1,f
  3212  0EF9  160A  158A  2481  120A  158A  	fcall	___awmod
  3213  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  3214  0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  3215  0F00  0820               	movf	?___awmod,w
  3216  0F01  00CC               	movwf	??_scale
  3217  0F02  3001               	movlw	1
  3218  0F03                     u6755:
  3219  0F03  1003               	clrc
  3220  0F04  0DCC               	rlf	??_scale,f
  3221  0F05  3EFF               	addlw	-1
  3222  0F06  1D03               	skipz
  3223  0F07  2F03               	goto	u6755
  3224  0F08  1003               	clrc
  3225  0F09  0D4C               	rlf	??_scale,w
  3226  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3227  0F0B  0084               	movwf	4
  3228  0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3229  0F11  00CD               	movwf	??_scale+1
  3230  0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  3231  0F17  00CE               	movwf	??_scale+2
  3232  0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  3233  0F1D  00CF               	movwf	??_scale+3
  3234  0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  3235  0F23  00D0               	movwf	??_scale+4
  3236  0F24  0850               	movf	??_scale+4,w
  3237  0F25  00B1               	movwf	___flmul@b+3
  3238  0F26  084F               	movf	??_scale+3,w
  3239  0F27  00B0               	movwf	___flmul@b+2
  3240  0F28  084E               	movf	??_scale+2,w
  3241  0F29  00AF               	movwf	___flmul@b+1
  3242  0F2A  084D               	movf	??_scale+1,w
  3243  0F2B  00AE               	movwf	___flmul@b
  3244  0F2C  0859               	movf	_scale$1211+3,w
  3245  0F2D  00B5               	movwf	___flmul@a+3
  3246  0F2E  0858               	movf	_scale$1211+2,w
  3247  0F2F  00B4               	movwf	___flmul@a+2
  3248  0F30  0857               	movf	_scale$1211+1,w
  3249  0F31  00B3               	movwf	___flmul@a+1
  3250  0F32  0856               	movf	_scale$1211,w
  3251  0F33  00B2               	movwf	___flmul@a
  3252  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3253  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3254  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3255  0F3B  0831               	movf	?___flmul+3,w
  3256  0F3C  00CB               	movwf	?_scale+3
  3257  0F3D  0830               	movf	?___flmul+2,w
  3258  0F3E  00CA               	movwf	?_scale+2
  3259  0F3F  082F               	movf	?___flmul+1,w
  3260  0F40  00C9               	movwf	?_scale+1
  3261  0F41  082E               	movf	?___flmul,w
  3262  0F42  00C8               	movwf	?_scale
  3263  0F43  2FFF               	goto	l343
  3264  0F44                     l4017:
  3265  0F44  085A               	movf	scale@scl,w
  3266  0F45  3A80               	xorlw	128
  3267  0F46  3E75               	addlw	-139
  3268  0F47  1C03               	skipc
  3269  0F48  2F4A               	goto	u6761
  3270  0F49  2F4B               	goto	u6760
  3271  0F4A                     u6761:
  3272  0F4A  2FD3               	goto	l4023
  3273  0F4B                     u6760:
  3274  0F4B                     l4019:
  3275                           
  3276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3277  0F4B  300A               	movlw	10
  3278  0F4C  00A0               	movwf	___awmod@divisor
  3279  0F4D  3000               	movlw	0
  3280  0F4E  00A1               	movwf	___awmod@divisor+1
  3281  0F4F  085A               	movf	scale@scl,w
  3282  0F50  00A2               	movwf	___awmod@dividend
  3283  0F51  01A3               	clrf	___awmod@dividend+1
  3284  0F52  1BA2               	btfsc	___awmod@dividend,7
  3285  0F53  03A3               	decf	___awmod@dividend+1,f
  3286  0F54  160A  158A  2481  120A  158A  	fcall	___awmod
  3287  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  3288  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  3289  0F5B  0820               	movf	?___awmod,w
  3290  0F5C  00CC               	movwf	??_scale
  3291  0F5D  3001               	movlw	1
  3292  0F5E                     u6775:
  3293  0F5E  1003               	clrc
  3294  0F5F  0DCC               	rlf	??_scale,f
  3295  0F60  3EFF               	addlw	-1
  3296  0F61  1D03               	skipz
  3297  0F62  2F5E               	goto	u6775
  3298  0F63  1003               	clrc
  3299  0F64  0D4C               	rlf	??_scale,w
  3300  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3301  0F66  0084               	movwf	4
  3302  0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  3303  0F6C  00CD               	movwf	??_scale+1
  3304  0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3305  0F72  00CE               	movwf	??_scale+2
  3306  0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  3307  0F78  00CF               	movwf	??_scale+3
  3308  0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  3309  0F7E  00D0               	movwf	??_scale+4
  3310  0F7F  0850               	movf	??_scale+4,w
  3311  0F80  00B1               	movwf	___flmul@b+3
  3312  0F81  084F               	movf	??_scale+3,w
  3313  0F82  00B0               	movwf	___flmul@b+2
  3314  0F83  084E               	movf	??_scale+2,w
  3315  0F84  00AF               	movwf	___flmul@b+1
  3316  0F85  084D               	movf	??_scale+1,w
  3317  0F86  00AE               	movwf	___flmul@b
  3318  0F87  300A               	movlw	10
  3319  0F88  00A4               	movwf	___awdiv@divisor
  3320  0F89  3000               	movlw	0
  3321  0F8A  00A5               	movwf	___awdiv@divisor+1
  3322  0F8B  085A               	movf	scale@scl,w
  3323  0F8C  00A6               	movwf	___awdiv@dividend
  3324  0F8D  01A7               	clrf	___awdiv@dividend+1
  3325  0F8E  1BA6               	btfsc	___awdiv@dividend,7
  3326  0F8F  03A7               	decf	___awdiv@dividend+1,f
  3327  0F90  160A  158A  25A2  120A  158A  	fcall	___awdiv
  3328  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3329  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3330  0F97  0824               	movf	?___awdiv,w
  3331  0F98  00D1               	movwf	??_scale+5
  3332  0F99  3001               	movlw	1
  3333  0F9A                     u6785:
  3334  0F9A  1003               	clrc
  3335  0F9B  0DD1               	rlf	??_scale+5,f
  3336  0F9C  3EFF               	addlw	-1
  3337  0F9D  1D03               	skipz
  3338  0F9E  2F9A               	goto	u6785
  3339  0F9F  1003               	clrc
  3340  0FA0  0D51               	rlf	??_scale+5,w
  3341  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3342  0FA2  0084               	movwf	4
  3343  0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  3344  0FA8  00D2               	movwf	??_scale+6
  3345  0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  3346  0FAE  00D3               	movwf	??_scale+7
  3347  0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  3348  0FB4  00D4               	movwf	??_scale+8
  3349  0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  3350  0FBA  00D5               	movwf	??_scale+9
  3351  0FBB  0855               	movf	??_scale+9,w
  3352  0FBC  00B5               	movwf	___flmul@a+3
  3353  0FBD  0854               	movf	??_scale+8,w
  3354  0FBE  00B4               	movwf	___flmul@a+2
  3355  0FBF  0853               	movf	??_scale+7,w
  3356  0FC0  00B3               	movwf	___flmul@a+1
  3357  0FC1  0852               	movf	??_scale+6,w
  3358  0FC2  00B2               	movwf	___flmul@a
  3359  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3360  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3361  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3362  0FCA  0831               	movf	?___flmul+3,w
  3363  0FCB  00CB               	movwf	?_scale+3
  3364  0FCC  0830               	movf	?___flmul+2,w
  3365  0FCD  00CA               	movwf	?_scale+2
  3366  0FCE  082F               	movf	?___flmul+1,w
  3367  0FCF  00C9               	movwf	?_scale+1
  3368  0FD0  082E               	movf	?___flmul,w
  3369  0FD1  00C8               	movwf	?_scale
  3370  0FD2  2FFF               	goto	l343
  3371  0FD3                     l4023:
  3372                           
  3373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3374  0FD3  085A               	movf	scale@scl,w
  3375  0FD4  00CC               	movwf	??_scale
  3376  0FD5  3001               	movlw	1
  3377  0FD6                     u6795:
  3378  0FD6  1003               	clrc
  3379  0FD7  0DCC               	rlf	??_scale,f
  3380  0FD8  3EFF               	addlw	-1
  3381  0FD9  1D03               	skipz
  3382  0FDA  2FD6               	goto	u6795
  3383  0FDB  1003               	clrc
  3384  0FDC  0D4C               	rlf	??_scale,w
  3385  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3386  0FDE  0084               	movwf	4
  3387  0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  3388  0FE4  00CD               	movwf	??_scale+1
  3389  0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  3390  0FEA  00CE               	movwf	??_scale+2
  3391  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  3392  0FF0  00CF               	movwf	??_scale+3
  3393  0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  3394  0FF6  00D0               	movwf	??_scale+4
  3395  0FF7  0850               	movf	??_scale+4,w
  3396  0FF8  00CB               	movwf	?_scale+3
  3397  0FF9  084F               	movf	??_scale+3,w
  3398  0FFA  00CA               	movwf	?_scale+2
  3399  0FFB  084E               	movf	??_scale+2,w
  3400  0FFC  00C9               	movwf	?_scale+1
  3401  0FFD  084D               	movf	??_scale+1,w
  3402  0FFE  00C8               	movwf	?_scale
  3403  0FFF                     l343:
  3404  0FFF  0008               	return
  3405  1000                     __end_of_scale:
  3406                           
  3407                           	psect	text3
  3408  1C81                     __ptext3:	
  3409 ;; *************** function ___awmod *****************
  3410 ;; Defined at:
  3411 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  divisor         2    0[BANK0 ] int 
  3414 ;;  dividend        2    2[BANK0 ] int 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  sign            1    7[COMMON] unsigned char 
  3417 ;;  counter         1    6[COMMON] unsigned char 
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  2    0[BANK0 ] int 
  3420 ;; Registers used:
  3421 ;;		wreg, status,2, status,0
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3427 ;;      Params:         0       4       0       0       0
  3428 ;;      Locals:         2       0       0       0       0
  3429 ;;      Temps:          1       0       0       0       0
  3430 ;;      Totals:         3       4       0       0       0
  3431 ;;Total ram usage:        7 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; Hardware stack levels required when called:    2
  3434 ;; This function calls:
  3435 ;;		Nothing
  3436 ;; This function is called by:
  3437 ;;		_scale
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           
  3442                           ;psect for function ___awmod
  3443  1C81                     ___awmod:
  3444  1C81                     l3721:	
  3445                           ;incstack = 0
  3446                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3447                           
  3448  1C81  01F7               	clrf	___awmod@sign
  3449  1C82                     l3723:
  3450  1C82  1283               	bcf	3,5	;RP0=0, select bank0
  3451  1C83  1303               	bcf	3,6	;RP1=0, select bank0
  3452  1C84  1FA3               	btfss	___awmod@dividend+1,7
  3453  1C85  2C87               	goto	u5961
  3454  1C86  2C88               	goto	u5960
  3455  1C87                     u5961:
  3456  1C87  2C8F               	goto	l3729
  3457  1C88                     u5960:
  3458  1C88                     l3725:
  3459  1C88  09A2               	comf	___awmod@dividend,f
  3460  1C89  09A3               	comf	___awmod@dividend+1,f
  3461  1C8A  0AA2               	incf	___awmod@dividend,f
  3462  1C8B  1903               	skipnz
  3463  1C8C  0AA3               	incf	___awmod@dividend+1,f
  3464  1C8D                     l3727:
  3465  1C8D  01F7               	clrf	___awmod@sign
  3466  1C8E  0AF7               	incf	___awmod@sign,f
  3467  1C8F                     l3729:
  3468  1C8F  1FA1               	btfss	___awmod@divisor+1,7
  3469  1C90  2C92               	goto	u5971
  3470  1C91  2C93               	goto	u5970
  3471  1C92                     u5971:
  3472  1C92  2C98               	goto	l3733
  3473  1C93                     u5970:
  3474  1C93                     l3731:
  3475  1C93  09A0               	comf	___awmod@divisor,f
  3476  1C94  09A1               	comf	___awmod@divisor+1,f
  3477  1C95  0AA0               	incf	___awmod@divisor,f
  3478  1C96  1903               	skipnz
  3479  1C97  0AA1               	incf	___awmod@divisor+1,f
  3480  1C98                     l3733:
  3481  1C98  0820               	movf	___awmod@divisor,w
  3482  1C99  0421               	iorwf	___awmod@divisor+1,w
  3483  1C9A  1903               	btfsc	3,2
  3484  1C9B  2C9D               	goto	u5981
  3485  1C9C  2C9E               	goto	u5980
  3486  1C9D                     u5981:
  3487  1C9D  2CCD               	goto	l3751
  3488  1C9E                     u5980:
  3489  1C9E                     l3735:
  3490  1C9E  01F6               	clrf	___awmod@counter
  3491  1C9F  0AF6               	incf	___awmod@counter,f
  3492  1CA0  2CAC               	goto	l3741
  3493  1CA1                     l3737:
  3494  1CA1  3001               	movlw	1
  3495  1CA2                     u5995:
  3496  1CA2  1003               	clrc
  3497  1CA3  0DA0               	rlf	___awmod@divisor,f
  3498  1CA4  0DA1               	rlf	___awmod@divisor+1,f
  3499  1CA5  3EFF               	addlw	-1
  3500  1CA6  1D03               	skipz
  3501  1CA7  2CA2               	goto	u5995
  3502  1CA8                     l3739:
  3503  1CA8  3001               	movlw	1
  3504  1CA9  00F5               	movwf	??___awmod
  3505  1CAA  0875               	movf	??___awmod,w
  3506  1CAB  07F6               	addwf	___awmod@counter,f
  3507  1CAC                     l3741:
  3508  1CAC  1FA1               	btfss	___awmod@divisor+1,7
  3509  1CAD  2CAF               	goto	u6001
  3510  1CAE  2CB0               	goto	u6000
  3511  1CAF                     u6001:
  3512  1CAF  2CA1               	goto	l3737
  3513  1CB0                     u6000:
  3514  1CB0                     l3743:
  3515  1CB0  0821               	movf	___awmod@divisor+1,w
  3516  1CB1  0223               	subwf	___awmod@dividend+1,w
  3517  1CB2  1D03               	skipz
  3518  1CB3  2CB6               	goto	u6015
  3519  1CB4  0820               	movf	___awmod@divisor,w
  3520  1CB5  0222               	subwf	___awmod@dividend,w
  3521  1CB6                     u6015:
  3522  1CB6  1C03               	skipc
  3523  1CB7  2CB9               	goto	u6011
  3524  1CB8  2CBA               	goto	u6010
  3525  1CB9                     u6011:
  3526  1CB9  2CC0               	goto	l3747
  3527  1CBA                     u6010:
  3528  1CBA                     l3745:
  3529  1CBA  0820               	movf	___awmod@divisor,w
  3530  1CBB  02A2               	subwf	___awmod@dividend,f
  3531  1CBC  0821               	movf	___awmod@divisor+1,w
  3532  1CBD  1C03               	skipc
  3533  1CBE  03A3               	decf	___awmod@dividend+1,f
  3534  1CBF  02A3               	subwf	___awmod@dividend+1,f
  3535  1CC0                     l3747:
  3536  1CC0  3001               	movlw	1
  3537  1CC1                     u6025:
  3538  1CC1  1003               	clrc
  3539  1CC2  0CA1               	rrf	___awmod@divisor+1,f
  3540  1CC3  0CA0               	rrf	___awmod@divisor,f
  3541  1CC4  3EFF               	addlw	-1
  3542  1CC5  1D03               	skipz
  3543  1CC6  2CC1               	goto	u6025
  3544  1CC7                     l3749:
  3545  1CC7  3001               	movlw	1
  3546  1CC8  02F6               	subwf	___awmod@counter,f
  3547  1CC9  1D03               	btfss	3,2
  3548  1CCA  2CCC               	goto	u6031
  3549  1CCB  2CCD               	goto	u6030
  3550  1CCC                     u6031:
  3551  1CCC  2CB0               	goto	l3743
  3552  1CCD                     u6030:
  3553  1CCD                     l3751:
  3554  1CCD  0877               	movf	___awmod@sign,w
  3555  1CCE  1903               	btfsc	3,2
  3556  1CCF  2CD1               	goto	u6041
  3557  1CD0  2CD2               	goto	u6040
  3558  1CD1                     u6041:
  3559  1CD1  2CD7               	goto	l3755
  3560  1CD2                     u6040:
  3561  1CD2                     l3753:
  3562  1CD2  09A2               	comf	___awmod@dividend,f
  3563  1CD3  09A3               	comf	___awmod@dividend+1,f
  3564  1CD4  0AA2               	incf	___awmod@dividend,f
  3565  1CD5  1903               	skipnz
  3566  1CD6  0AA3               	incf	___awmod@dividend+1,f
  3567  1CD7                     l3755:
  3568  1CD7  0823               	movf	___awmod@dividend+1,w
  3569  1CD8  00A1               	movwf	?___awmod+1
  3570  1CD9  0822               	movf	___awmod@dividend,w
  3571  1CDA  00A0               	movwf	?___awmod
  3572  1CDB                     l596:
  3573  1CDB  0008               	return
  3574  1CDC                     __end_of___awmod:
  3575                           
  3576                           	psect	text4
  3577  1DA2                     __ptext4:	
  3578 ;; *************** function ___awdiv *****************
  3579 ;; Defined at:
  3580 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  divisor         2    4[BANK0 ] int 
  3583 ;;  dividend        2    6[BANK0 ] int 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  quotient        2   11[BANK0 ] int 
  3586 ;;  sign            1   10[BANK0 ] unsigned char 
  3587 ;;  counter         1    9[BANK0 ] unsigned char 
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  2    4[BANK0 ] int 
  3590 ;; Registers used:
  3591 ;;		wreg, status,2, status,0
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3597 ;;      Params:         0       4       0       0       0
  3598 ;;      Locals:         0       4       0       0       0
  3599 ;;      Temps:          0       1       0       0       0
  3600 ;;      Totals:         0       9       0       0       0
  3601 ;;Total ram usage:        9 bytes
  3602 ;; Hardware stack levels used:    1
  3603 ;; Hardware stack levels required when called:    2
  3604 ;; This function calls:
  3605 ;;		Nothing
  3606 ;; This function is called by:
  3607 ;;		_scale
  3608 ;;		_sprintf
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           
  3613                           ;psect for function ___awdiv
  3614  1DA2                     ___awdiv:
  3615  1DA2                     l2383:	
  3616                           ;incstack = 0
  3617                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3618                           
  3619  1DA2  1283               	bcf	3,5	;RP0=0, select bank0
  3620  1DA3  1303               	bcf	3,6	;RP1=0, select bank0
  3621  1DA4  01AA               	clrf	___awdiv@sign
  3622  1DA5                     l2385:
  3623  1DA5  1FA5               	btfss	___awdiv@divisor+1,7
  3624  1DA6  2DA8               	goto	u3061
  3625  1DA7  2DA9               	goto	u3060
  3626  1DA8                     u3061:
  3627  1DA8  2DB0               	goto	l2391
  3628  1DA9                     u3060:
  3629  1DA9                     l2387:
  3630  1DA9  09A4               	comf	___awdiv@divisor,f
  3631  1DAA  09A5               	comf	___awdiv@divisor+1,f
  3632  1DAB  0AA4               	incf	___awdiv@divisor,f
  3633  1DAC  1903               	skipnz
  3634  1DAD  0AA5               	incf	___awdiv@divisor+1,f
  3635  1DAE                     l2389:
  3636  1DAE  01AA               	clrf	___awdiv@sign
  3637  1DAF  0AAA               	incf	___awdiv@sign,f
  3638  1DB0                     l2391:
  3639  1DB0  1FA7               	btfss	___awdiv@dividend+1,7
  3640  1DB1  2DB3               	goto	u3071
  3641  1DB2  2DB4               	goto	u3070
  3642  1DB3                     u3071:
  3643  1DB3  2DBD               	goto	l2397
  3644  1DB4                     u3070:
  3645  1DB4                     l2393:
  3646  1DB4  09A6               	comf	___awdiv@dividend,f
  3647  1DB5  09A7               	comf	___awdiv@dividend+1,f
  3648  1DB6  0AA6               	incf	___awdiv@dividend,f
  3649  1DB7  1903               	skipnz
  3650  1DB8  0AA7               	incf	___awdiv@dividend+1,f
  3651  1DB9                     l2395:
  3652  1DB9  3001               	movlw	1
  3653  1DBA  00A8               	movwf	??___awdiv
  3654  1DBB  0828               	movf	??___awdiv,w
  3655  1DBC  06AA               	xorwf	___awdiv@sign,f
  3656  1DBD                     l2397:
  3657  1DBD  01AB               	clrf	___awdiv@quotient
  3658  1DBE  01AC               	clrf	___awdiv@quotient+1
  3659  1DBF                     l2399:
  3660  1DBF  0824               	movf	___awdiv@divisor,w
  3661  1DC0  0425               	iorwf	___awdiv@divisor+1,w
  3662  1DC1  1903               	btfsc	3,2
  3663  1DC2  2DC4               	goto	u3081
  3664  1DC3  2DC5               	goto	u3080
  3665  1DC4                     u3081:
  3666  1DC4  2DFC               	goto	l2419
  3667  1DC5                     u3080:
  3668  1DC5                     l2401:
  3669  1DC5  01A9               	clrf	___awdiv@counter
  3670  1DC6  0AA9               	incf	___awdiv@counter,f
  3671  1DC7  2DD3               	goto	l2407
  3672  1DC8                     l2403:
  3673  1DC8  3001               	movlw	1
  3674  1DC9                     u3095:
  3675  1DC9  1003               	clrc
  3676  1DCA  0DA4               	rlf	___awdiv@divisor,f
  3677  1DCB  0DA5               	rlf	___awdiv@divisor+1,f
  3678  1DCC  3EFF               	addlw	-1
  3679  1DCD  1D03               	skipz
  3680  1DCE  2DC9               	goto	u3095
  3681  1DCF                     l2405:
  3682  1DCF  3001               	movlw	1
  3683  1DD0  00A8               	movwf	??___awdiv
  3684  1DD1  0828               	movf	??___awdiv,w
  3685  1DD2  07A9               	addwf	___awdiv@counter,f
  3686  1DD3                     l2407:
  3687  1DD3  1FA5               	btfss	___awdiv@divisor+1,7
  3688  1DD4  2DD6               	goto	u3101
  3689  1DD5  2DD7               	goto	u3100
  3690  1DD6                     u3101:
  3691  1DD6  2DC8               	goto	l2403
  3692  1DD7                     u3100:
  3693  1DD7                     l2409:
  3694  1DD7  3001               	movlw	1
  3695  1DD8                     u3115:
  3696  1DD8  1003               	clrc
  3697  1DD9  0DAB               	rlf	___awdiv@quotient,f
  3698  1DDA  0DAC               	rlf	___awdiv@quotient+1,f
  3699  1DDB  3EFF               	addlw	-1
  3700  1DDC  1D03               	skipz
  3701  1DDD  2DD8               	goto	u3115
  3702  1DDE  0825               	movf	___awdiv@divisor+1,w
  3703  1DDF  0227               	subwf	___awdiv@dividend+1,w
  3704  1DE0  1D03               	skipz
  3705  1DE1  2DE4               	goto	u3125
  3706  1DE2  0824               	movf	___awdiv@divisor,w
  3707  1DE3  0226               	subwf	___awdiv@dividend,w
  3708  1DE4                     u3125:
  3709  1DE4  1C03               	skipc
  3710  1DE5  2DE7               	goto	u3121
  3711  1DE6  2DE8               	goto	u3120
  3712  1DE7                     u3121:
  3713  1DE7  2DEF               	goto	l2415
  3714  1DE8                     u3120:
  3715  1DE8                     l2411:
  3716  1DE8  0824               	movf	___awdiv@divisor,w
  3717  1DE9  02A6               	subwf	___awdiv@dividend,f
  3718  1DEA  0825               	movf	___awdiv@divisor+1,w
  3719  1DEB  1C03               	skipc
  3720  1DEC  03A7               	decf	___awdiv@dividend+1,f
  3721  1DED  02A7               	subwf	___awdiv@dividend+1,f
  3722  1DEE                     l2413:
  3723  1DEE  142B               	bsf	___awdiv@quotient,0
  3724  1DEF                     l2415:
  3725  1DEF  3001               	movlw	1
  3726  1DF0                     u3135:
  3727  1DF0  1003               	clrc
  3728  1DF1  0CA5               	rrf	___awdiv@divisor+1,f
  3729  1DF2  0CA4               	rrf	___awdiv@divisor,f
  3730  1DF3  3EFF               	addlw	-1
  3731  1DF4  1D03               	skipz
  3732  1DF5  2DF0               	goto	u3135
  3733  1DF6                     l2417:
  3734  1DF6  3001               	movlw	1
  3735  1DF7  02A9               	subwf	___awdiv@counter,f
  3736  1DF8  1D03               	btfss	3,2
  3737  1DF9  2DFB               	goto	u3141
  3738  1DFA  2DFC               	goto	u3140
  3739  1DFB                     u3141:
  3740  1DFB  2DD7               	goto	l2409
  3741  1DFC                     u3140:
  3742  1DFC                     l2419:
  3743  1DFC  082A               	movf	___awdiv@sign,w
  3744  1DFD  1903               	btfsc	3,2
  3745  1DFE  2E00               	goto	u3151
  3746  1DFF  2E01               	goto	u3150
  3747  1E00                     u3151:
  3748  1E00  2E06               	goto	l2423
  3749  1E01                     u3150:
  3750  1E01                     l2421:
  3751  1E01  09AB               	comf	___awdiv@quotient,f
  3752  1E02  09AC               	comf	___awdiv@quotient+1,f
  3753  1E03  0AAB               	incf	___awdiv@quotient,f
  3754  1E04  1903               	skipnz
  3755  1E05  0AAC               	incf	___awdiv@quotient+1,f
  3756  1E06                     l2423:
  3757  1E06  082C               	movf	___awdiv@quotient+1,w
  3758  1E07  00A5               	movwf	?___awdiv+1
  3759  1E08  082B               	movf	___awdiv@quotient,w
  3760  1E09  00A4               	movwf	?___awdiv
  3761  1E0A                     l583:
  3762  1E0A  0008               	return
  3763  1E0B                     __end_of___awdiv:
  3764                           
  3765                           	psect	text5
  3766  18EF                     __ptext5:	
  3767 ;; *************** function _isdigit *****************
  3768 ;; Defined at:
  3769 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  c               1    wreg     unsigned char 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  c               1    6[COMMON] unsigned char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;		None               void
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3783 ;;      Params:         0       0       0       0       0
  3784 ;;      Locals:         2       0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0
  3786 ;;      Totals:         2       0       0       0       0
  3787 ;;Total ram usage:        2 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    2
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		_sprintf
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           
  3798                           ;psect for function _isdigit
  3799  18EF                     _isdigit:
  3800                           
  3801                           ;incstack = 0
  3802                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3803                           ;isdigit@c stored from wreg
  3804  18EF  00F6               	movwf	isdigit@c
  3805  18F0                     l2931:
  3806  18F0  01F5               	clrf	_isdigit$1025
  3807  18F1                     l2933:
  3808  18F1  303A               	movlw	58
  3809  18F2  0276               	subwf	isdigit@c,w
  3810  18F3  1803               	skipnc
  3811  18F4  28F6               	goto	u4471
  3812  18F5  28F7               	goto	u4470
  3813  18F6                     u4471:
  3814  18F6  28FF               	goto	l2939
  3815  18F7                     u4470:
  3816  18F7                     l2935:
  3817  18F7  3030               	movlw	48
  3818  18F8  0276               	subwf	isdigit@c,w
  3819  18F9  1C03               	skipc
  3820  18FA  28FC               	goto	u4481
  3821  18FB  28FD               	goto	u4480
  3822  18FC                     u4481:
  3823  18FC  28FF               	goto	l2939
  3824  18FD                     u4480:
  3825  18FD                     l2937:
  3826  18FD  01F5               	clrf	_isdigit$1025
  3827  18FE  0AF5               	incf	_isdigit$1025,f
  3828  18FF                     l2939:
  3829  18FF  0C75               	rrf	_isdigit$1025,w
  3830  1900                     l917:
  3831  1900  0008               	return
  3832  1901                     __end_of_isdigit:
  3833                           
  3834                           	psect	text6
  3835  05DA                     __ptext6:	
  3836 ;; *************** function _fround *****************
  3837 ;; Defined at:
  3838 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  prec            1    wreg     unsigned char 
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;  prec            1   59[BANK0 ] unsigned char 
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  4   40[BANK0 ] unsigned char 
  3845 ;; Registers used:
  3846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3852 ;;      Params:         0       4       0       0       0
  3853 ;;      Locals:         0       9       0       0       0
  3854 ;;      Temps:          0       7       0       0       0
  3855 ;;      Totals:         0      20       0       0       0
  3856 ;;Total ram usage:       20 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:    4
  3859 ;; This function calls:
  3860 ;;		___flmul
  3861 ;;		___lwdiv
  3862 ;;		___lwmod
  3863 ;; This function is called by:
  3864 ;;		_sprintf
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           
  3869                           ;psect for function _fround
  3870  05DA                     _fround:
  3871                           
  3872                           ;incstack = 0
  3873                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3874                           ;fround@prec stored from wreg
  3875  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3876  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  3877  05DC  00DB               	movwf	fround@prec
  3878  05DD                     l3969:
  3879                           
  3880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3881  05DD  306E               	movlw	110
  3882  05DE  025B               	subwf	fround@prec,w
  3883  05DF  1C03               	skipc
  3884  05E0  2DE2               	goto	u6551
  3885  05E1  2DE3               	goto	u6550
  3886  05E2                     u6551:
  3887  05E2  2EF2               	goto	l3977
  3888  05E3                     u6550:
  3889  05E3                     l3971:
  3890                           
  3891                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3892  05E3  303F               	movlw	63
  3893  05E4  00B1               	movwf	___flmul@b+3
  3894  05E5  3000               	movlw	0
  3895  05E6  00B0               	movwf	___flmul@b+2
  3896  05E7  3000               	movlw	0
  3897  05E8  00AF               	movwf	___flmul@b+1
  3898  05E9  3000               	movlw	0
  3899  05EA  00AE               	movwf	___flmul@b
  3900  05EB  3064               	movlw	100
  3901  05EC  00A4               	movwf	___lwdiv@divisor
  3902  05ED  3000               	movlw	0
  3903  05EE  00A5               	movwf	___lwdiv@divisor+1
  3904  05EF  085B               	movf	fround@prec,w
  3905  05F0  00CC               	movwf	??_fround
  3906  05F1  01CD               	clrf	??_fround+1
  3907  05F2  084C               	movf	??_fround,w
  3908  05F3  00A6               	movwf	___lwdiv@dividend
  3909  05F4  084D               	movf	??_fround+1,w
  3910  05F5  00A7               	movwf	___lwdiv@dividend+1
  3911  05F6  160A  158A  22F8  120A  118A  	fcall	___lwdiv
  3912  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  3913  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  3914  05FD  0824               	movf	?___lwdiv,w
  3915  05FE  00CE               	movwf	??_fround+2
  3916  05FF  3001               	movlw	1
  3917  0600                     u6565:
  3918  0600  1003               	clrc
  3919  0601  0DCE               	rlf	??_fround+2,f
  3920  0602  3EFF               	addlw	-1
  3921  0603  1D03               	skipz
  3922  0604  2E00               	goto	u6565
  3923  0605  1003               	clrc
  3924  0606  0D4E               	rlf	??_fround+2,w
  3925  0607  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3926  0608  0084               	movwf	4
  3927  0609  160A  118A  200A  120A  118A  	fcall	stringdir
  3928  060E  00CF               	movwf	??_fround+3
  3929  060F  160A  118A  200A  120A  118A  	fcall	stringdir
  3930  0614  00D0               	movwf	??_fround+4
  3931  0615  160A  118A  200A  120A  118A  	fcall	stringdir
  3932  061A  00D1               	movwf	??_fround+5
  3933  061B  160A  118A  200A  120A  118A  	fcall	stringdir
  3934  0620  00D2               	movwf	??_fround+6
  3935  0621  0852               	movf	??_fround+6,w
  3936  0622  00B5               	movwf	___flmul@a+3
  3937  0623  0851               	movf	??_fround+5,w
  3938  0624  00B4               	movwf	___flmul@a+2
  3939  0625  0850               	movf	??_fround+4,w
  3940  0626  00B3               	movwf	___flmul@a+1
  3941  0627  084F               	movf	??_fround+3,w
  3942  0628  00B2               	movwf	___flmul@a
  3943  0629  120A  158A  213C  120A  118A  	fcall	___flmul
  3944  062E  1283               	bcf	3,5	;RP0=0, select bank0
  3945  062F  1303               	bcf	3,6	;RP1=0, select bank0
  3946  0630  0831               	movf	?___flmul+3,w
  3947  0631  00DA               	movwf	_fround$1209+3
  3948  0632  0830               	movf	?___flmul+2,w
  3949  0633  00D9               	movwf	_fround$1209+2
  3950  0634  082F               	movf	?___flmul+1,w
  3951  0635  00D8               	movwf	_fround$1209+1
  3952  0636  082E               	movf	?___flmul,w
  3953  0637  00D7               	movwf	_fround$1209
  3954                           
  3955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3956  0638  300A               	movlw	10
  3957  0639  00A4               	movwf	___lwdiv@divisor
  3958  063A  3000               	movlw	0
  3959  063B  00A5               	movwf	___lwdiv@divisor+1
  3960  063C  085B               	movf	fround@prec,w
  3961  063D  00CC               	movwf	??_fround
  3962  063E  01CD               	clrf	??_fround+1
  3963  063F  084C               	movf	??_fround,w
  3964  0640  00A2               	movwf	___lwmod@dividend
  3965  0641  084D               	movf	??_fround+1,w
  3966  0642  00A3               	movwf	___lwmod@dividend+1
  3967  0643  3064               	movlw	100
  3968  0644  00A0               	movwf	___lwmod@divisor
  3969  0645  3000               	movlw	0
  3970  0646  00A1               	movwf	___lwmod@divisor+1
  3971  0647  160A  158A  21F8  120A  118A  	fcall	___lwmod
  3972  064C  1283               	bcf	3,5	;RP0=0, select bank0
  3973  064D  1303               	bcf	3,6	;RP1=0, select bank0
  3974  064E  0821               	movf	?___lwmod+1,w
  3975  064F  00A7               	movwf	___lwdiv@dividend+1
  3976  0650  0820               	movf	?___lwmod,w
  3977  0651  00A6               	movwf	___lwdiv@dividend
  3978  0652  160A  158A  22F8  120A  118A  	fcall	___lwdiv
  3979  0657  1283               	bcf	3,5	;RP0=0, select bank0
  3980  0658  1303               	bcf	3,6	;RP1=0, select bank0
  3981  0659  0824               	movf	?___lwdiv,w
  3982  065A  00CE               	movwf	??_fround+2
  3983  065B  3001               	movlw	1
  3984  065C                     u6575:
  3985  065C  1003               	clrc
  3986  065D  0DCE               	rlf	??_fround+2,f
  3987  065E  3EFF               	addlw	-1
  3988  065F  1D03               	skipz
  3989  0660  2E5C               	goto	u6575
  3990  0661  1003               	clrc
  3991  0662  0D4E               	rlf	??_fround+2,w
  3992  0663  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3993  0664  0084               	movwf	4
  3994  0665  160A  118A  200A  120A  118A  	fcall	stringdir
  3995  066A  00CF               	movwf	??_fround+3
  3996  066B  160A  118A  200A  120A  118A  	fcall	stringdir
  3997  0670  00D0               	movwf	??_fround+4
  3998  0671  160A  118A  200A  120A  118A  	fcall	stringdir
  3999  0676  00D1               	movwf	??_fround+5
  4000  0677  160A  118A  200A  120A  118A  	fcall	stringdir
  4001  067C  00D2               	movwf	??_fround+6
  4002  067D  0852               	movf	??_fround+6,w
  4003  067E  00B1               	movwf	___flmul@b+3
  4004  067F  0851               	movf	??_fround+5,w
  4005  0680  00B0               	movwf	___flmul@b+2
  4006  0681  0850               	movf	??_fround+4,w
  4007  0682  00AF               	movwf	___flmul@b+1
  4008  0683  084F               	movf	??_fround+3,w
  4009  0684  00AE               	movwf	___flmul@b
  4010  0685  085A               	movf	_fround$1209+3,w
  4011  0686  00B5               	movwf	___flmul@a+3
  4012  0687  0859               	movf	_fround$1209+2,w
  4013  0688  00B4               	movwf	___flmul@a+2
  4014  0689  0858               	movf	_fround$1209+1,w
  4015  068A  00B3               	movwf	___flmul@a+1
  4016  068B  0857               	movf	_fround$1209,w
  4017  068C  00B2               	movwf	___flmul@a
  4018  068D  120A  158A  213C  120A  118A  	fcall	___flmul
  4019  0692  1283               	bcf	3,5	;RP0=0, select bank0
  4020  0693  1303               	bcf	3,6	;RP1=0, select bank0
  4021  0694  0831               	movf	?___flmul+3,w
  4022  0695  00D6               	movwf	_fround$1210+3
  4023  0696  0830               	movf	?___flmul+2,w
  4024  0697  00D5               	movwf	_fround$1210+2
  4025  0698  082F               	movf	?___flmul+1,w
  4026  0699  00D4               	movwf	_fround$1210+1
  4027  069A  082E               	movf	?___flmul,w
  4028  069B  00D3               	movwf	_fround$1210
  4029                           
  4030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4031  069C  300A               	movlw	10
  4032  069D  00A0               	movwf	___lwmod@divisor
  4033  069E  3000               	movlw	0
  4034  069F  00A1               	movwf	___lwmod@divisor+1
  4035  06A0  085B               	movf	fround@prec,w
  4036  06A1  00CC               	movwf	??_fround
  4037  06A2  01CD               	clrf	??_fround+1
  4038  06A3  084C               	movf	??_fround,w
  4039  06A4  00A2               	movwf	___lwmod@dividend
  4040  06A5  084D               	movf	??_fround+1,w
  4041  06A6  00A3               	movwf	___lwmod@dividend+1
  4042  06A7  160A  158A  21F8  120A  118A  	fcall	___lwmod
  4043  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  4044  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  4045  06AE  0820               	movf	?___lwmod,w
  4046  06AF  00CE               	movwf	??_fround+2
  4047  06B0  3001               	movlw	1
  4048  06B1                     u6585:
  4049  06B1  1003               	clrc
  4050  06B2  0DCE               	rlf	??_fround+2,f
  4051  06B3  3EFF               	addlw	-1
  4052  06B4  1D03               	skipz
  4053  06B5  2EB1               	goto	u6585
  4054  06B6  1003               	clrc
  4055  06B7  0D4E               	rlf	??_fround+2,w
  4056  06B8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4057  06B9  0084               	movwf	4
  4058  06BA  160A  118A  200A  120A  118A  	fcall	stringdir
  4059  06BF  00CF               	movwf	??_fround+3
  4060  06C0  160A  118A  200A  120A  118A  	fcall	stringdir
  4061  06C5  00D0               	movwf	??_fround+4
  4062  06C6  160A  118A  200A  120A  118A  	fcall	stringdir
  4063  06CB  00D1               	movwf	??_fround+5
  4064  06CC  160A  118A  200A  120A  118A  	fcall	stringdir
  4065  06D1  00D2               	movwf	??_fround+6
  4066  06D2  0852               	movf	??_fround+6,w
  4067  06D3  00B1               	movwf	___flmul@b+3
  4068  06D4  0851               	movf	??_fround+5,w
  4069  06D5  00B0               	movwf	___flmul@b+2
  4070  06D6  0850               	movf	??_fround+4,w
  4071  06D7  00AF               	movwf	___flmul@b+1
  4072  06D8  084F               	movf	??_fround+3,w
  4073  06D9  00AE               	movwf	___flmul@b
  4074  06DA  0856               	movf	_fround$1210+3,w
  4075  06DB  00B5               	movwf	___flmul@a+3
  4076  06DC  0855               	movf	_fround$1210+2,w
  4077  06DD  00B4               	movwf	___flmul@a+2
  4078  06DE  0854               	movf	_fround$1210+1,w
  4079  06DF  00B3               	movwf	___flmul@a+1
  4080  06E0  0853               	movf	_fround$1210,w
  4081  06E1  00B2               	movwf	___flmul@a
  4082  06E2  120A  158A  213C  120A  118A  	fcall	___flmul
  4083  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  4084  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  4085  06E9  0831               	movf	?___flmul+3,w
  4086  06EA  00CB               	movwf	?_fround+3
  4087  06EB  0830               	movf	?___flmul+2,w
  4088  06EC  00CA               	movwf	?_fround+2
  4089  06ED  082F               	movf	?___flmul+1,w
  4090  06EE  00C9               	movwf	?_fround+1
  4091  06EF  082E               	movf	?___flmul,w
  4092  06F0  00C8               	movwf	?_fround
  4093  06F1  2FE6               	goto	l336
  4094  06F2                     l3977:
  4095  06F2  300B               	movlw	11
  4096  06F3  025B               	subwf	fround@prec,w
  4097  06F4  1C03               	skipc
  4098  06F5  2EF7               	goto	u6591
  4099  06F6  2EF8               	goto	u6590
  4100  06F7                     u6591:
  4101  06F7  2FA3               	goto	l3983
  4102  06F8                     u6590:
  4103  06F8                     l3979:
  4104                           
  4105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4106  06F8  303F               	movlw	63
  4107  06F9  00B1               	movwf	___flmul@b+3
  4108  06FA  3000               	movlw	0
  4109  06FB  00B0               	movwf	___flmul@b+2
  4110  06FC  3000               	movlw	0
  4111  06FD  00AF               	movwf	___flmul@b+1
  4112  06FE  3000               	movlw	0
  4113  06FF  00AE               	movwf	___flmul@b
  4114  0700  300A               	movlw	10
  4115  0701  00A4               	movwf	___lwdiv@divisor
  4116  0702  3000               	movlw	0
  4117  0703  00A5               	movwf	___lwdiv@divisor+1
  4118  0704  085B               	movf	fround@prec,w
  4119  0705  00CC               	movwf	??_fround
  4120  0706  01CD               	clrf	??_fround+1
  4121  0707  084C               	movf	??_fround,w
  4122  0708  00A6               	movwf	___lwdiv@dividend
  4123  0709  084D               	movf	??_fround+1,w
  4124  070A  00A7               	movwf	___lwdiv@dividend+1
  4125  070B  160A  158A  22F8  120A  118A  	fcall	___lwdiv
  4126  0710  1283               	bcf	3,5	;RP0=0, select bank0
  4127  0711  1303               	bcf	3,6	;RP1=0, select bank0
  4128  0712  0824               	movf	?___lwdiv,w
  4129  0713  00CE               	movwf	??_fround+2
  4130  0714  3001               	movlw	1
  4131  0715                     u6605:
  4132  0715  1003               	clrc
  4133  0716  0DCE               	rlf	??_fround+2,f
  4134  0717  3EFF               	addlw	-1
  4135  0718  1D03               	skipz
  4136  0719  2F15               	goto	u6605
  4137  071A  1003               	clrc
  4138  071B  0D4E               	rlf	??_fround+2,w
  4139  071C  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4140  071D  0084               	movwf	4
  4141  071E  160A  118A  200A  120A  118A  	fcall	stringdir
  4142  0723  00CF               	movwf	??_fround+3
  4143  0724  160A  118A  200A  120A  118A  	fcall	stringdir
  4144  0729  00D0               	movwf	??_fround+4
  4145  072A  160A  118A  200A  120A  118A  	fcall	stringdir
  4146  072F  00D1               	movwf	??_fround+5
  4147  0730  160A  118A  200A  120A  118A  	fcall	stringdir
  4148  0735  00D2               	movwf	??_fround+6
  4149  0736  0852               	movf	??_fround+6,w
  4150  0737  00B5               	movwf	___flmul@a+3
  4151  0738  0851               	movf	??_fround+5,w
  4152  0739  00B4               	movwf	___flmul@a+2
  4153  073A  0850               	movf	??_fround+4,w
  4154  073B  00B3               	movwf	___flmul@a+1
  4155  073C  084F               	movf	??_fround+3,w
  4156  073D  00B2               	movwf	___flmul@a
  4157  073E  120A  158A  213C  120A  118A  	fcall	___flmul
  4158  0743  1283               	bcf	3,5	;RP0=0, select bank0
  4159  0744  1303               	bcf	3,6	;RP1=0, select bank0
  4160  0745  0831               	movf	?___flmul+3,w
  4161  0746  00DA               	movwf	_fround$1209+3
  4162  0747  0830               	movf	?___flmul+2,w
  4163  0748  00D9               	movwf	_fround$1209+2
  4164  0749  082F               	movf	?___flmul+1,w
  4165  074A  00D8               	movwf	_fround$1209+1
  4166  074B  082E               	movf	?___flmul,w
  4167  074C  00D7               	movwf	_fround$1209
  4168                           
  4169                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4170  074D  300A               	movlw	10
  4171  074E  00A0               	movwf	___lwmod@divisor
  4172  074F  3000               	movlw	0
  4173  0750  00A1               	movwf	___lwmod@divisor+1
  4174  0751  085B               	movf	fround@prec,w
  4175  0752  00CC               	movwf	??_fround
  4176  0753  01CD               	clrf	??_fround+1
  4177  0754  084C               	movf	??_fround,w
  4178  0755  00A2               	movwf	___lwmod@dividend
  4179  0756  084D               	movf	??_fround+1,w
  4180  0757  00A3               	movwf	___lwmod@dividend+1
  4181  0758  160A  158A  21F8  120A  118A  	fcall	___lwmod
  4182  075D  1283               	bcf	3,5	;RP0=0, select bank0
  4183  075E  1303               	bcf	3,6	;RP1=0, select bank0
  4184  075F  0820               	movf	?___lwmod,w
  4185  0760  00CE               	movwf	??_fround+2
  4186  0761  3001               	movlw	1
  4187  0762                     u6615:
  4188  0762  1003               	clrc
  4189  0763  0DCE               	rlf	??_fround+2,f
  4190  0764  3EFF               	addlw	-1
  4191  0765  1D03               	skipz
  4192  0766  2F62               	goto	u6615
  4193  0767  1003               	clrc
  4194  0768  0D4E               	rlf	??_fround+2,w
  4195  0769  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4196  076A  0084               	movwf	4
  4197  076B  160A  118A  200A  120A  118A  	fcall	stringdir
  4198  0770  00CF               	movwf	??_fround+3
  4199  0771  160A  118A  200A  120A  118A  	fcall	stringdir
  4200  0776  00D0               	movwf	??_fround+4
  4201  0777  160A  118A  200A  120A  118A  	fcall	stringdir
  4202  077C  00D1               	movwf	??_fround+5
  4203  077D  160A  118A  200A  120A  118A  	fcall	stringdir
  4204  0782  00D2               	movwf	??_fround+6
  4205  0783  0852               	movf	??_fround+6,w
  4206  0784  00B1               	movwf	___flmul@b+3
  4207  0785  0851               	movf	??_fround+5,w
  4208  0786  00B0               	movwf	___flmul@b+2
  4209  0787  0850               	movf	??_fround+4,w
  4210  0788  00AF               	movwf	___flmul@b+1
  4211  0789  084F               	movf	??_fround+3,w
  4212  078A  00AE               	movwf	___flmul@b
  4213  078B  085A               	movf	_fround$1209+3,w
  4214  078C  00B5               	movwf	___flmul@a+3
  4215  078D  0859               	movf	_fround$1209+2,w
  4216  078E  00B4               	movwf	___flmul@a+2
  4217  078F  0858               	movf	_fround$1209+1,w
  4218  0790  00B3               	movwf	___flmul@a+1
  4219  0791  0857               	movf	_fround$1209,w
  4220  0792  00B2               	movwf	___flmul@a
  4221  0793  120A  158A  213C  120A  118A  	fcall	___flmul
  4222  0798  1283               	bcf	3,5	;RP0=0, select bank0
  4223  0799  1303               	bcf	3,6	;RP1=0, select bank0
  4224  079A  0831               	movf	?___flmul+3,w
  4225  079B  00CB               	movwf	?_fround+3
  4226  079C  0830               	movf	?___flmul+2,w
  4227  079D  00CA               	movwf	?_fround+2
  4228  079E  082F               	movf	?___flmul+1,w
  4229  079F  00C9               	movwf	?_fround+1
  4230  07A0  082E               	movf	?___flmul,w
  4231  07A1  00C8               	movwf	?_fround
  4232  07A2  2FE6               	goto	l336
  4233  07A3                     l3983:
  4234                           
  4235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4236  07A3  303F               	movlw	63
  4237  07A4  00B1               	movwf	___flmul@b+3
  4238  07A5  3000               	movlw	0
  4239  07A6  00B0               	movwf	___flmul@b+2
  4240  07A7  3000               	movlw	0
  4241  07A8  00AF               	movwf	___flmul@b+1
  4242  07A9  3000               	movlw	0
  4243  07AA  00AE               	movwf	___flmul@b
  4244  07AB  085B               	movf	fround@prec,w
  4245  07AC  00CC               	movwf	??_fround
  4246  07AD  3001               	movlw	1
  4247  07AE                     u6625:
  4248  07AE  1003               	clrc
  4249  07AF  0DCC               	rlf	??_fround,f
  4250  07B0  3EFF               	addlw	-1
  4251  07B1  1D03               	skipz
  4252  07B2  2FAE               	goto	u6625
  4253  07B3  1003               	clrc
  4254  07B4  0D4C               	rlf	??_fround,w
  4255  07B5  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4256  07B6  0084               	movwf	4
  4257  07B7  160A  118A  200A  120A  118A  	fcall	stringdir
  4258  07BC  00CD               	movwf	??_fround+1
  4259  07BD  160A  118A  200A  120A  118A  	fcall	stringdir
  4260  07C2  00CE               	movwf	??_fround+2
  4261  07C3  160A  118A  200A  120A  118A  	fcall	stringdir
  4262  07C8  00CF               	movwf	??_fround+3
  4263  07C9  160A  118A  200A  120A  118A  	fcall	stringdir
  4264  07CE  00D0               	movwf	??_fround+4
  4265  07CF  0850               	movf	??_fround+4,w
  4266  07D0  00B5               	movwf	___flmul@a+3
  4267  07D1  084F               	movf	??_fround+3,w
  4268  07D2  00B4               	movwf	___flmul@a+2
  4269  07D3  084E               	movf	??_fround+2,w
  4270  07D4  00B3               	movwf	___flmul@a+1
  4271  07D5  084D               	movf	??_fround+1,w
  4272  07D6  00B2               	movwf	___flmul@a
  4273  07D7  120A  158A  213C  120A  118A  	fcall	___flmul
  4274  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  4275  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  4276  07DE  0831               	movf	?___flmul+3,w
  4277  07DF  00CB               	movwf	?_fround+3
  4278  07E0  0830               	movf	?___flmul+2,w
  4279  07E1  00CA               	movwf	?_fround+2
  4280  07E2  082F               	movf	?___flmul+1,w
  4281  07E3  00C9               	movwf	?_fround+1
  4282  07E4  082E               	movf	?___flmul,w
  4283  07E5  00C8               	movwf	?_fround
  4284  07E6                     l336:
  4285  07E6  0008               	return
  4286  07E7                     __end_of_fround:
  4287                           
  4288                           	psect	text7
  4289  19F8                     __ptext7:	
  4290 ;; *************** function ___lwmod *****************
  4291 ;; Defined at:
  4292 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;  divisor         2    0[BANK0 ] unsigned int 
  4295 ;;  dividend        2    2[BANK0 ] unsigned int 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  counter         1    6[COMMON] unsigned char 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  2    0[BANK0 ] unsigned int 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4307 ;;      Params:         0       4       0       0       0
  4308 ;;      Locals:         1       0       0       0       0
  4309 ;;      Temps:          1       0       0       0       0
  4310 ;;      Totals:         2       4       0       0       0
  4311 ;;Total ram usage:        6 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    2
  4314 ;; This function calls:
  4315 ;;		Nothing
  4316 ;; This function is called by:
  4317 ;;		_fround
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           
  4322                           ;psect for function ___lwmod
  4323  19F8                     ___lwmod:
  4324  19F8                     l3785:	
  4325                           ;incstack = 0
  4326                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4327                           
  4328  19F8  1283               	bcf	3,5	;RP0=0, select bank0
  4329  19F9  1303               	bcf	3,6	;RP1=0, select bank0
  4330  19FA  0820               	movf	___lwmod@divisor,w
  4331  19FB  0421               	iorwf	___lwmod@divisor+1,w
  4332  19FC  1903               	btfsc	3,2
  4333  19FD  29FF               	goto	u6121
  4334  19FE  2A00               	goto	u6120
  4335  19FF                     u6121:
  4336  19FF  2A2F               	goto	l3803
  4337  1A00                     u6120:
  4338  1A00                     l3787:
  4339  1A00  01F6               	clrf	___lwmod@counter
  4340  1A01  0AF6               	incf	___lwmod@counter,f
  4341  1A02  2A0E               	goto	l3793
  4342  1A03                     l3789:
  4343  1A03  3001               	movlw	1
  4344  1A04                     u6135:
  4345  1A04  1003               	clrc
  4346  1A05  0DA0               	rlf	___lwmod@divisor,f
  4347  1A06  0DA1               	rlf	___lwmod@divisor+1,f
  4348  1A07  3EFF               	addlw	-1
  4349  1A08  1D03               	skipz
  4350  1A09  2A04               	goto	u6135
  4351  1A0A                     l3791:
  4352  1A0A  3001               	movlw	1
  4353  1A0B  00F5               	movwf	??___lwmod
  4354  1A0C  0875               	movf	??___lwmod,w
  4355  1A0D  07F6               	addwf	___lwmod@counter,f
  4356  1A0E                     l3793:
  4357  1A0E  1FA1               	btfss	___lwmod@divisor+1,7
  4358  1A0F  2A11               	goto	u6141
  4359  1A10  2A12               	goto	u6140
  4360  1A11                     u6141:
  4361  1A11  2A03               	goto	l3789
  4362  1A12                     u6140:
  4363  1A12                     l3795:
  4364  1A12  0821               	movf	___lwmod@divisor+1,w
  4365  1A13  0223               	subwf	___lwmod@dividend+1,w
  4366  1A14  1D03               	skipz
  4367  1A15  2A18               	goto	u6155
  4368  1A16  0820               	movf	___lwmod@divisor,w
  4369  1A17  0222               	subwf	___lwmod@dividend,w
  4370  1A18                     u6155:
  4371  1A18  1C03               	skipc
  4372  1A19  2A1B               	goto	u6151
  4373  1A1A  2A1C               	goto	u6150
  4374  1A1B                     u6151:
  4375  1A1B  2A22               	goto	l3799
  4376  1A1C                     u6150:
  4377  1A1C                     l3797:
  4378  1A1C  0820               	movf	___lwmod@divisor,w
  4379  1A1D  02A2               	subwf	___lwmod@dividend,f
  4380  1A1E  0821               	movf	___lwmod@divisor+1,w
  4381  1A1F  1C03               	skipc
  4382  1A20  03A3               	decf	___lwmod@dividend+1,f
  4383  1A21  02A3               	subwf	___lwmod@dividend+1,f
  4384  1A22                     l3799:
  4385  1A22  3001               	movlw	1
  4386  1A23                     u6165:
  4387  1A23  1003               	clrc
  4388  1A24  0CA1               	rrf	___lwmod@divisor+1,f
  4389  1A25  0CA0               	rrf	___lwmod@divisor,f
  4390  1A26  3EFF               	addlw	-1
  4391  1A27  1D03               	skipz
  4392  1A28  2A23               	goto	u6165
  4393  1A29                     l3801:
  4394  1A29  3001               	movlw	1
  4395  1A2A  02F6               	subwf	___lwmod@counter,f
  4396  1A2B  1D03               	btfss	3,2
  4397  1A2C  2A2E               	goto	u6171
  4398  1A2D  2A2F               	goto	u6170
  4399  1A2E                     u6171:
  4400  1A2E  2A12               	goto	l3795
  4401  1A2F                     u6170:
  4402  1A2F                     l3803:
  4403  1A2F  0823               	movf	___lwmod@dividend+1,w
  4404  1A30  00A1               	movwf	?___lwmod+1
  4405  1A31  0822               	movf	___lwmod@dividend,w
  4406  1A32  00A0               	movwf	?___lwmod
  4407  1A33                     l746:
  4408  1A33  0008               	return
  4409  1A34                     __end_of___lwmod:
  4410                           
  4411                           	psect	text8
  4412  1AF8                     __ptext8:	
  4413 ;; *************** function ___lwdiv *****************
  4414 ;; Defined at:
  4415 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  divisor         2    4[BANK0 ] unsigned int 
  4418 ;;  dividend        2    6[BANK0 ] unsigned int 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  quotient        2    9[BANK0 ] unsigned int 
  4421 ;;  counter         1    8[BANK0 ] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  2    4[BANK0 ] unsigned int 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4431 ;;      Params:         0       4       0       0       0
  4432 ;;      Locals:         0       3       0       0       0
  4433 ;;      Temps:          1       0       0       0       0
  4434 ;;      Totals:         1       7       0       0       0
  4435 ;;Total ram usage:        8 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    2
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_fround
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           
  4446                           ;psect for function ___lwdiv
  4447  1AF8                     ___lwdiv:
  4448  1AF8                     l3759:	
  4449                           ;incstack = 0
  4450                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4451                           
  4452  1AF8  1283               	bcf	3,5	;RP0=0, select bank0
  4453  1AF9  1303               	bcf	3,6	;RP1=0, select bank0
  4454  1AFA  01A9               	clrf	___lwdiv@quotient
  4455  1AFB  01AA               	clrf	___lwdiv@quotient+1
  4456  1AFC                     l3761:
  4457  1AFC  0824               	movf	___lwdiv@divisor,w
  4458  1AFD  0425               	iorwf	___lwdiv@divisor+1,w
  4459  1AFE  1903               	btfsc	3,2
  4460  1AFF  2B01               	goto	u6051
  4461  1B00  2B02               	goto	u6050
  4462  1B01                     u6051:
  4463  1B01  2B39               	goto	l3781
  4464  1B02                     u6050:
  4465  1B02                     l3763:
  4466  1B02  01A8               	clrf	___lwdiv@counter
  4467  1B03  0AA8               	incf	___lwdiv@counter,f
  4468  1B04  2B10               	goto	l3769
  4469  1B05                     l3765:
  4470  1B05  3001               	movlw	1
  4471  1B06                     u6065:
  4472  1B06  1003               	clrc
  4473  1B07  0DA4               	rlf	___lwdiv@divisor,f
  4474  1B08  0DA5               	rlf	___lwdiv@divisor+1,f
  4475  1B09  3EFF               	addlw	-1
  4476  1B0A  1D03               	skipz
  4477  1B0B  2B06               	goto	u6065
  4478  1B0C                     l3767:
  4479  1B0C  3001               	movlw	1
  4480  1B0D  00F7               	movwf	??___lwdiv
  4481  1B0E  0877               	movf	??___lwdiv,w
  4482  1B0F  07A8               	addwf	___lwdiv@counter,f
  4483  1B10                     l3769:
  4484  1B10  1FA5               	btfss	___lwdiv@divisor+1,7
  4485  1B11  2B13               	goto	u6071
  4486  1B12  2B14               	goto	u6070
  4487  1B13                     u6071:
  4488  1B13  2B05               	goto	l3765
  4489  1B14                     u6070:
  4490  1B14                     l3771:
  4491  1B14  3001               	movlw	1
  4492  1B15                     u6085:
  4493  1B15  1003               	clrc
  4494  1B16  0DA9               	rlf	___lwdiv@quotient,f
  4495  1B17  0DAA               	rlf	___lwdiv@quotient+1,f
  4496  1B18  3EFF               	addlw	-1
  4497  1B19  1D03               	skipz
  4498  1B1A  2B15               	goto	u6085
  4499  1B1B  0825               	movf	___lwdiv@divisor+1,w
  4500  1B1C  0227               	subwf	___lwdiv@dividend+1,w
  4501  1B1D  1D03               	skipz
  4502  1B1E  2B21               	goto	u6095
  4503  1B1F  0824               	movf	___lwdiv@divisor,w
  4504  1B20  0226               	subwf	___lwdiv@dividend,w
  4505  1B21                     u6095:
  4506  1B21  1C03               	skipc
  4507  1B22  2B24               	goto	u6091
  4508  1B23  2B25               	goto	u6090
  4509  1B24                     u6091:
  4510  1B24  2B2C               	goto	l3777
  4511  1B25                     u6090:
  4512  1B25                     l3773:
  4513  1B25  0824               	movf	___lwdiv@divisor,w
  4514  1B26  02A6               	subwf	___lwdiv@dividend,f
  4515  1B27  0825               	movf	___lwdiv@divisor+1,w
  4516  1B28  1C03               	skipc
  4517  1B29  03A7               	decf	___lwdiv@dividend+1,f
  4518  1B2A  02A7               	subwf	___lwdiv@dividend+1,f
  4519  1B2B                     l3775:
  4520  1B2B  1429               	bsf	___lwdiv@quotient,0
  4521  1B2C                     l3777:
  4522  1B2C  3001               	movlw	1
  4523  1B2D                     u6105:
  4524  1B2D  1003               	clrc
  4525  1B2E  0CA5               	rrf	___lwdiv@divisor+1,f
  4526  1B2F  0CA4               	rrf	___lwdiv@divisor,f
  4527  1B30  3EFF               	addlw	-1
  4528  1B31  1D03               	skipz
  4529  1B32  2B2D               	goto	u6105
  4530  1B33                     l3779:
  4531  1B33  3001               	movlw	1
  4532  1B34  02A8               	subwf	___lwdiv@counter,f
  4533  1B35  1D03               	btfss	3,2
  4534  1B36  2B38               	goto	u6111
  4535  1B37  2B39               	goto	u6110
  4536  1B38                     u6111:
  4537  1B38  2B14               	goto	l3771
  4538  1B39                     u6110:
  4539  1B39                     l3781:
  4540  1B39  082A               	movf	___lwdiv@quotient+1,w
  4541  1B3A  00A5               	movwf	?___lwdiv+1
  4542  1B3B  0829               	movf	___lwdiv@quotient,w
  4543  1B3C  00A4               	movwf	?___lwdiv
  4544  1B3D                     l736:
  4545  1B3D  0008               	return
  4546  1B3E                     __end_of___lwdiv:
  4547                           
  4548                           	psect	text9
  4549  1F43                     __ptext9:	
  4550 ;; *************** function __tdiv_to_l_ *****************
  4551 ;; Defined at:
  4552 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  f1              4    0[BANK0 ] float 
  4555 ;;  f2              4    4[BANK0 ] float 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  quot            4   12[BANK0 ] unsigned long 
  4558 ;;  exp1            1   17[BANK0 ] unsigned char 
  4559 ;;  cntr            1   16[BANK0 ] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  4    0[BANK0 ] unsigned long 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4569 ;;      Params:         0       8       0       0       0
  4570 ;;      Locals:         0       6       0       0       0
  4571 ;;      Temps:          0       4       0       0       0
  4572 ;;      Totals:         0      18       0       0       0
  4573 ;;Total ram usage:       18 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    2
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_sprintf
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           
  4584                           ;psect for function __tdiv_to_l_
  4585  1F43                     __tdiv_to_l_:
  4586  1F43                     l4027:	
  4587                           ;incstack = 0
  4588                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4589                           
  4590  1F43  1283               	bcf	3,5	;RP0=0, select bank0
  4591  1F44  1303               	bcf	3,6	;RP1=0, select bank0
  4592  1F45  0820               	movf	__tdiv_to_l_@f1,w
  4593  1F46  00A8               	movwf	??__tdiv_to_l_
  4594  1F47  0821               	movf	__tdiv_to_l_@f1+1,w
  4595  1F48  00A9               	movwf	??__tdiv_to_l_+1
  4596  1F49  0822               	movf	__tdiv_to_l_@f1+2,w
  4597  1F4A  00AA               	movwf	??__tdiv_to_l_+2
  4598  1F4B  1003               	clrc
  4599  1F4C  0D29               	rlf	??__tdiv_to_l_+1,w
  4600  1F4D  0D2A               	rlf	??__tdiv_to_l_+2,w
  4601  1F4E  00AB               	movwf	??__tdiv_to_l_+3
  4602  1F4F  082B               	movf	??__tdiv_to_l_+3,w
  4603  1F50  00B1               	movwf	__tdiv_to_l_@exp1
  4604  1F51  0831               	movf	__tdiv_to_l_@exp1,w
  4605  1F52  1D03               	btfss	3,2
  4606  1F53  2F55               	goto	u6801
  4607  1F54  2F56               	goto	u6800
  4608  1F55                     u6801:
  4609  1F55  2F5F               	goto	l4033
  4610  1F56                     u6800:
  4611  1F56                     l4029:
  4612  1F56  3000               	movlw	0
  4613  1F57  00A3               	movwf	?__tdiv_to_l_+3
  4614  1F58  3000               	movlw	0
  4615  1F59  00A2               	movwf	?__tdiv_to_l_+2
  4616  1F5A  3000               	movlw	0
  4617  1F5B  00A1               	movwf	?__tdiv_to_l_+1
  4618  1F5C  3000               	movlw	0
  4619  1F5D  00A0               	movwf	?__tdiv_to_l_
  4620  1F5E  2FFF               	goto	l647
  4621  1F5F                     l4033:
  4622  1F5F  0824               	movf	__tdiv_to_l_@f2,w
  4623  1F60  00A8               	movwf	??__tdiv_to_l_
  4624  1F61  0825               	movf	__tdiv_to_l_@f2+1,w
  4625  1F62  00A9               	movwf	??__tdiv_to_l_+1
  4626  1F63  0826               	movf	__tdiv_to_l_@f2+2,w
  4627  1F64  00AA               	movwf	??__tdiv_to_l_+2
  4628  1F65  1003               	clrc
  4629  1F66  0D29               	rlf	??__tdiv_to_l_+1,w
  4630  1F67  0D2A               	rlf	??__tdiv_to_l_+2,w
  4631  1F68  00AB               	movwf	??__tdiv_to_l_+3
  4632  1F69  082B               	movf	??__tdiv_to_l_+3,w
  4633  1F6A  00B0               	movwf	__tdiv_to_l_@cntr
  4634  1F6B  0830               	movf	__tdiv_to_l_@cntr,w
  4635  1F6C  1D03               	btfss	3,2
  4636  1F6D  2F6F               	goto	u6811
  4637  1F6E  2F70               	goto	u6810
  4638  1F6F                     u6811:
  4639  1F6F  2F71               	goto	l648
  4640  1F70                     u6810:
  4641  1F70  2F56               	goto	l4029
  4642  1F71                     l648:
  4643  1F71  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4644  1F72                     l4039:
  4645  1F72  30FF               	movlw	255
  4646  1F73  05A0               	andwf	__tdiv_to_l_@f1,f
  4647  1F74  30FF               	movlw	255
  4648  1F75  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4649  1F76  3000               	movlw	0
  4650  1F77  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4651  1F78                     l4041:
  4652  1F78  17A5               	bsf	__tdiv_to_l_@f2+1,7
  4653  1F79  30FF               	movlw	255
  4654  1F7A  05A4               	andwf	__tdiv_to_l_@f2,f
  4655  1F7B  30FF               	movlw	255
  4656  1F7C  05A5               	andwf	__tdiv_to_l_@f2+1,f
  4657  1F7D  3000               	movlw	0
  4658  1F7E  05A6               	andwf	__tdiv_to_l_@f2+2,f
  4659  1F7F  3000               	movlw	0
  4660  1F80  00AF               	movwf	__tdiv_to_l_@quot+3
  4661  1F81  3000               	movlw	0
  4662  1F82  00AE               	movwf	__tdiv_to_l_@quot+2
  4663  1F83  3000               	movlw	0
  4664  1F84  00AD               	movwf	__tdiv_to_l_@quot+1
  4665  1F85  3000               	movlw	0
  4666  1F86  00AC               	movwf	__tdiv_to_l_@quot
  4667  1F87                     l4043:
  4668  1F87  307F               	movlw	127
  4669  1F88  02B1               	subwf	__tdiv_to_l_@exp1,f
  4670  1F89                     l4045:
  4671  1F89  3098               	movlw	152
  4672  1F8A  0730               	addwf	__tdiv_to_l_@cntr,w
  4673  1F8B  00A8               	movwf	??__tdiv_to_l_
  4674  1F8C  0828               	movf	??__tdiv_to_l_,w
  4675  1F8D  02B1               	subwf	__tdiv_to_l_@exp1,f
  4676  1F8E  3018               	movlw	24
  4677  1F8F  00A8               	movwf	??__tdiv_to_l_
  4678  1F90  0828               	movf	??__tdiv_to_l_,w
  4679  1F91  00B0               	movwf	__tdiv_to_l_@cntr
  4680  1F92                     l4047:
  4681  1F92  3001               	movlw	1
  4682  1F93  00A8               	movwf	??__tdiv_to_l_
  4683  1F94                     u6825:
  4684  1F94  1003               	clrc
  4685  1F95  0DAC               	rlf	__tdiv_to_l_@quot,f
  4686  1F96  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  4687  1F97  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  4688  1F98  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  4689  1F99  0BA8               	decfsz	??__tdiv_to_l_,f
  4690  1F9A  2F94               	goto	u6825
  4691  1F9B                     l4049:
  4692  1F9B  0826               	movf	__tdiv_to_l_@f2+2,w
  4693  1F9C  0222               	subwf	__tdiv_to_l_@f1+2,w
  4694  1F9D  1D03               	skipz
  4695  1F9E  2FA5               	goto	u6835
  4696  1F9F  0825               	movf	__tdiv_to_l_@f2+1,w
  4697  1FA0  0221               	subwf	__tdiv_to_l_@f1+1,w
  4698  1FA1  1D03               	skipz
  4699  1FA2  2FA5               	goto	u6835
  4700  1FA3  0824               	movf	__tdiv_to_l_@f2,w
  4701  1FA4  0220               	subwf	__tdiv_to_l_@f1,w
  4702  1FA5                     u6835:
  4703  1FA5  1C03               	skipc
  4704  1FA6  2FA8               	goto	u6831
  4705  1FA7  2FA9               	goto	u6830
  4706  1FA8                     u6831:
  4707  1FA8  2FB4               	goto	l4055
  4708  1FA9                     u6830:
  4709  1FA9                     l4051:
  4710  1FA9  0824               	movf	__tdiv_to_l_@f2,w
  4711  1FAA  02A0               	subwf	__tdiv_to_l_@f1,f
  4712  1FAB  0825               	movf	__tdiv_to_l_@f2+1,w
  4713  1FAC  1C03               	skipc
  4714  1FAD  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  4715  1FAE  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4716  1FAF  0826               	movf	__tdiv_to_l_@f2+2,w
  4717  1FB0  1C03               	skipc
  4718  1FB1  0A26               	incf	__tdiv_to_l_@f2+2,w
  4719  1FB2  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4720  1FB3                     l4053:
  4721  1FB3  142C               	bsf	__tdiv_to_l_@quot,0
  4722  1FB4                     l4055:
  4723  1FB4  3001               	movlw	1
  4724  1FB5                     u6845:
  4725  1FB5  1003               	clrc
  4726  1FB6  0DA0               	rlf	__tdiv_to_l_@f1,f
  4727  1FB7  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4728  1FB8  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4729  1FB9  3EFF               	addlw	-1
  4730  1FBA  1D03               	skipz
  4731  1FBB  2FB5               	goto	u6845
  4732  1FBC                     l4057:
  4733  1FBC  3001               	movlw	1
  4734  1FBD  02B0               	subwf	__tdiv_to_l_@cntr,f
  4735  1FBE  1D03               	btfss	3,2
  4736  1FBF  2FC1               	goto	u6851
  4737  1FC0  2FC2               	goto	u6850
  4738  1FC1                     u6851:
  4739  1FC1  2F92               	goto	l4047
  4740  1FC2                     u6850:
  4741  1FC2                     l651:
  4742  1FC2  1FB1               	btfss	__tdiv_to_l_@exp1,7
  4743  1FC3  2FC5               	goto	u6861
  4744  1FC4  2FC6               	goto	u6860
  4745  1FC5                     u6861:
  4746  1FC5  2FE0               	goto	l4067
  4747  1FC6                     u6860:
  4748  1FC6                     l4059:
  4749  1FC6  0831               	movf	__tdiv_to_l_@exp1,w
  4750  1FC7  3A80               	xorlw	128
  4751  1FC8  3E97               	addlw	151
  4752  1FC9  1803               	skipnc
  4753  1FCA  2FCC               	goto	u6871
  4754  1FCB  2FCD               	goto	u6870
  4755  1FCC                     u6871:
  4756  1FCC  2FCE               	goto	l4065
  4757  1FCD                     u6870:
  4758  1FCD  2F56               	goto	l4029
  4759  1FCE                     l4065:
  4760  1FCE  3001               	movlw	1
  4761  1FCF                     u6885:
  4762  1FCF  1003               	clrc
  4763  1FD0  0CAF               	rrf	__tdiv_to_l_@quot+3,f
  4764  1FD1  0CAE               	rrf	__tdiv_to_l_@quot+2,f
  4765  1FD2  0CAD               	rrf	__tdiv_to_l_@quot+1,f
  4766  1FD3  0CAC               	rrf	__tdiv_to_l_@quot,f
  4767  1FD4  3EFF               	addlw	-1
  4768  1FD5  1D03               	skipz
  4769  1FD6  2FCF               	goto	u6885
  4770  1FD7  3001               	movlw	1
  4771  1FD8  00A8               	movwf	??__tdiv_to_l_
  4772  1FD9  0828               	movf	??__tdiv_to_l_,w
  4773  1FDA  07B1               	addwf	__tdiv_to_l_@exp1,f
  4774  1FDB  1D03               	btfss	3,2
  4775  1FDC  2FDE               	goto	u6891
  4776  1FDD  2FDF               	goto	u6890
  4777  1FDE                     u6891:
  4778  1FDE  2FCE               	goto	l4065
  4779  1FDF                     u6890:
  4780  1FDF  2FF7               	goto	l4075
  4781  1FE0                     l4067:
  4782  1FE0  3018               	movlw	24
  4783  1FE1  0231               	subwf	__tdiv_to_l_@exp1,w
  4784  1FE2  1C03               	skipc
  4785  1FE3  2FE5               	goto	u6901
  4786  1FE4  2FE6               	goto	u6900
  4787  1FE5                     u6901:
  4788  1FE5  2FF2               	goto	l658
  4789  1FE6                     u6900:
  4790  1FE6  2F56               	goto	l4029
  4791  1FE7                     l4073:
  4792  1FE7  3001               	movlw	1
  4793  1FE8  00A8               	movwf	??__tdiv_to_l_
  4794  1FE9                     u6915:
  4795  1FE9  1003               	clrc
  4796  1FEA  0DAC               	rlf	__tdiv_to_l_@quot,f
  4797  1FEB  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  4798  1FEC  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  4799  1FED  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  4800  1FEE  0BA8               	decfsz	??__tdiv_to_l_,f
  4801  1FEF  2FE9               	goto	u6915
  4802  1FF0  3001               	movlw	1
  4803  1FF1  02B1               	subwf	__tdiv_to_l_@exp1,f
  4804  1FF2                     l658:
  4805  1FF2  0831               	movf	__tdiv_to_l_@exp1,w
  4806  1FF3  1D03               	btfss	3,2
  4807  1FF4  2FF6               	goto	u6921
  4808  1FF5  2FF7               	goto	u6920
  4809  1FF6                     u6921:
  4810  1FF6  2FE7               	goto	l4073
  4811  1FF7                     u6920:
  4812  1FF7                     l4075:
  4813  1FF7  082F               	movf	__tdiv_to_l_@quot+3,w
  4814  1FF8  00A3               	movwf	?__tdiv_to_l_+3
  4815  1FF9  082E               	movf	__tdiv_to_l_@quot+2,w
  4816  1FFA  00A2               	movwf	?__tdiv_to_l_+2
  4817  1FFB  082D               	movf	__tdiv_to_l_@quot+1,w
  4818  1FFC  00A1               	movwf	?__tdiv_to_l_+1
  4819  1FFD  082C               	movf	__tdiv_to_l_@quot,w
  4820  1FFE  00A0               	movwf	?__tdiv_to_l_
  4821  1FFF                     l647:
  4822  1FFF  0008               	return
  4823  2000                     __end_of__tdiv_to_l_:
  4824                           
  4825                           	psect	text10
  4826  116E                     __ptext10:	
  4827 ;; *************** function __div_to_l_ *****************
  4828 ;; Defined at:
  4829 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;  f1              4    0[BANK0 ] unsigned long 
  4832 ;;  f2              4    4[BANK0 ] unsigned long 
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  quot            4    8[BANK0 ] unsigned long 
  4835 ;;  exp1            1   13[BANK0 ] unsigned char 
  4836 ;;  cntr            1   12[BANK0 ] unsigned char 
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  4    0[BANK0 ] unsigned long 
  4839 ;; Registers used:
  4840 ;;		wreg, status,2, status,0
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4846 ;;      Params:         0       8       0       0       0
  4847 ;;      Locals:         0       6       0       0       0
  4848 ;;      Temps:          1       0       0       0       0
  4849 ;;      Totals:         1      14       0       0       0
  4850 ;;Total ram usage:       15 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:    2
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_sprintf
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           
  4861                           ;psect for function __div_to_l_
  4862  116E                     __div_to_l_:
  4863  116E                     l2995:	
  4864                           ;incstack = 0
  4865                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  4866                           
  4867  116E  1003               	clrc
  4868  116F  1283               	bcf	3,5	;RP0=0, select bank0
  4869  1170  1303               	bcf	3,6	;RP1=0, select bank0
  4870  1171  0D22               	rlf	__div_to_l_@f1+2,w
  4871  1172  0D23               	rlf	__div_to_l_@f1+3,w
  4872  1173  00F5               	movwf	??__div_to_l_
  4873  1174  0875               	movf	??__div_to_l_,w
  4874  1175  00AD               	movwf	__div_to_l_@exp1
  4875  1176  082D               	movf	__div_to_l_@exp1,w
  4876  1177  1D03               	btfss	3,2
  4877  1178  297A               	goto	u4621
  4878  1179  297B               	goto	u4620
  4879  117A                     u4621:
  4880  117A  2984               	goto	l3001
  4881  117B                     u4620:
  4882  117B                     l2997:
  4883  117B  3000               	movlw	0
  4884  117C  00A3               	movwf	?__div_to_l_+3
  4885  117D  3000               	movlw	0
  4886  117E  00A2               	movwf	?__div_to_l_+2
  4887  117F  3000               	movlw	0
  4888  1180  00A1               	movwf	?__div_to_l_+1
  4889  1181  3000               	movlw	0
  4890  1182  00A0               	movwf	?__div_to_l_
  4891  1183  2A2B               	goto	l600
  4892  1184                     l3001:
  4893  1184  1003               	clrc
  4894  1185  0D26               	rlf	__div_to_l_@f2+2,w
  4895  1186  0D27               	rlf	__div_to_l_@f2+3,w
  4896  1187  00F5               	movwf	??__div_to_l_
  4897  1188  0875               	movf	??__div_to_l_,w
  4898  1189  00AC               	movwf	__div_to_l_@cntr
  4899  118A  082C               	movf	__div_to_l_@cntr,w
  4900  118B  1D03               	btfss	3,2
  4901  118C  298E               	goto	u4631
  4902  118D  298F               	goto	u4630
  4903  118E                     u4631:
  4904  118E  2990               	goto	l601
  4905  118F                     u4630:
  4906  118F  297B               	goto	l2997
  4907  1190                     l601:
  4908  1190  17A2               	bsf	__div_to_l_@f1+2,7
  4909  1191                     l3007:
  4910  1191  30FF               	movlw	255
  4911  1192  05A0               	andwf	__div_to_l_@f1,f
  4912  1193  30FF               	movlw	255
  4913  1194  05A1               	andwf	__div_to_l_@f1+1,f
  4914  1195  30FF               	movlw	255
  4915  1196  05A2               	andwf	__div_to_l_@f1+2,f
  4916  1197  3000               	movlw	0
  4917  1198  05A3               	andwf	__div_to_l_@f1+3,f
  4918  1199                     l3009:
  4919  1199  17A6               	bsf	__div_to_l_@f2+2,7
  4920  119A  30FF               	movlw	255
  4921  119B  05A4               	andwf	__div_to_l_@f2,f
  4922  119C  30FF               	movlw	255
  4923  119D  05A5               	andwf	__div_to_l_@f2+1,f
  4924  119E  30FF               	movlw	255
  4925  119F  05A6               	andwf	__div_to_l_@f2+2,f
  4926  11A0  3000               	movlw	0
  4927  11A1  05A7               	andwf	__div_to_l_@f2+3,f
  4928  11A2  3000               	movlw	0
  4929  11A3  00AB               	movwf	__div_to_l_@quot+3
  4930  11A4  3000               	movlw	0
  4931  11A5  00AA               	movwf	__div_to_l_@quot+2
  4932  11A6  3000               	movlw	0
  4933  11A7  00A9               	movwf	__div_to_l_@quot+1
  4934  11A8  3000               	movlw	0
  4935  11A9  00A8               	movwf	__div_to_l_@quot
  4936  11AA                     l3011:
  4937  11AA  307F               	movlw	127
  4938  11AB  02AD               	subwf	__div_to_l_@exp1,f
  4939  11AC                     l3013:
  4940  11AC  30A0               	movlw	160
  4941  11AD  072C               	addwf	__div_to_l_@cntr,w
  4942  11AE  00F5               	movwf	??__div_to_l_
  4943  11AF  0875               	movf	??__div_to_l_,w
  4944  11B0  02AD               	subwf	__div_to_l_@exp1,f
  4945  11B1  3020               	movlw	32
  4946  11B2  00F5               	movwf	??__div_to_l_
  4947  11B3  0875               	movf	??__div_to_l_,w
  4948  11B4  00AC               	movwf	__div_to_l_@cntr
  4949  11B5                     l3015:
  4950  11B5  3001               	movlw	1
  4951  11B6  00F5               	movwf	??__div_to_l_
  4952  11B7                     u4645:
  4953  11B7  1003               	clrc
  4954  11B8  0DA8               	rlf	__div_to_l_@quot,f
  4955  11B9  0DA9               	rlf	__div_to_l_@quot+1,f
  4956  11BA  0DAA               	rlf	__div_to_l_@quot+2,f
  4957  11BB  0DAB               	rlf	__div_to_l_@quot+3,f
  4958  11BC  0BF5               	decfsz	??__div_to_l_,f
  4959  11BD  29B7               	goto	u4645
  4960  11BE                     l3017:
  4961  11BE  0827               	movf	__div_to_l_@f2+3,w
  4962  11BF  0223               	subwf	__div_to_l_@f1+3,w
  4963  11C0  1D03               	skipz
  4964  11C1  29CC               	goto	u4655
  4965  11C2  0826               	movf	__div_to_l_@f2+2,w
  4966  11C3  0222               	subwf	__div_to_l_@f1+2,w
  4967  11C4  1D03               	skipz
  4968  11C5  29CC               	goto	u4655
  4969  11C6  0825               	movf	__div_to_l_@f2+1,w
  4970  11C7  0221               	subwf	__div_to_l_@f1+1,w
  4971  11C8  1D03               	skipz
  4972  11C9  29CC               	goto	u4655
  4973  11CA  0824               	movf	__div_to_l_@f2,w
  4974  11CB  0220               	subwf	__div_to_l_@f1,w
  4975  11CC                     u4655:
  4976  11CC  1C03               	skipc
  4977  11CD  29CF               	goto	u4651
  4978  11CE  29D0               	goto	u4650
  4979  11CF                     u4651:
  4980  11CF  29DF               	goto	l3023
  4981  11D0                     u4650:
  4982  11D0                     l3019:
  4983  11D0  0824               	movf	__div_to_l_@f2,w
  4984  11D1  02A0               	subwf	__div_to_l_@f1,f
  4985  11D2  0825               	movf	__div_to_l_@f2+1,w
  4986  11D3  1C03               	skipc
  4987  11D4  0F25               	incfsz	__div_to_l_@f2+1,w
  4988  11D5  02A1               	subwf	__div_to_l_@f1+1,f
  4989  11D6  0826               	movf	__div_to_l_@f2+2,w
  4990  11D7  1C03               	skipc
  4991  11D8  0F26               	incfsz	__div_to_l_@f2+2,w
  4992  11D9  02A2               	subwf	__div_to_l_@f1+2,f
  4993  11DA  0827               	movf	__div_to_l_@f2+3,w
  4994  11DB  1C03               	skipc
  4995  11DC  0F27               	incfsz	__div_to_l_@f2+3,w
  4996  11DD  02A3               	subwf	__div_to_l_@f1+3,f
  4997  11DE                     l3021:
  4998  11DE  1428               	bsf	__div_to_l_@quot,0
  4999  11DF                     l3023:
  5000  11DF  3001               	movlw	1
  5001  11E0  00F5               	movwf	??__div_to_l_
  5002  11E1                     u4665:
  5003  11E1  1003               	clrc
  5004  11E2  0DA0               	rlf	__div_to_l_@f1,f
  5005  11E3  0DA1               	rlf	__div_to_l_@f1+1,f
  5006  11E4  0DA2               	rlf	__div_to_l_@f1+2,f
  5007  11E5  0DA3               	rlf	__div_to_l_@f1+3,f
  5008  11E6  0BF5               	decfsz	??__div_to_l_,f
  5009  11E7  29E1               	goto	u4665
  5010  11E8                     l3025:
  5011  11E8  3001               	movlw	1
  5012  11E9  02AC               	subwf	__div_to_l_@cntr,f
  5013  11EA  1D03               	btfss	3,2
  5014  11EB  29ED               	goto	u4671
  5015  11EC  29EE               	goto	u4670
  5016  11ED                     u4671:
  5017  11ED  29B5               	goto	l3015
  5018  11EE                     u4670:
  5019  11EE                     l604:
  5020  11EE  1FAD               	btfss	__div_to_l_@exp1,7
  5021  11EF  29F1               	goto	u4681
  5022  11F0  29F2               	goto	u4680
  5023  11F1                     u4681:
  5024  11F1  2A0C               	goto	l3035
  5025  11F2                     u4680:
  5026  11F2                     l3027:
  5027  11F2  082D               	movf	__div_to_l_@exp1,w
  5028  11F3  3A80               	xorlw	128
  5029  11F4  3E9F               	addlw	159
  5030  11F5  1803               	skipnc
  5031  11F6  29F8               	goto	u4691
  5032  11F7  29F9               	goto	u4690
  5033  11F8                     u4691:
  5034  11F8  29FA               	goto	l3033
  5035  11F9                     u4690:
  5036  11F9  297B               	goto	l2997
  5037  11FA                     l3033:
  5038  11FA  3001               	movlw	1
  5039  11FB                     u4705:
  5040  11FB  1003               	clrc
  5041  11FC  0CAB               	rrf	__div_to_l_@quot+3,f
  5042  11FD  0CAA               	rrf	__div_to_l_@quot+2,f
  5043  11FE  0CA9               	rrf	__div_to_l_@quot+1,f
  5044  11FF  0CA8               	rrf	__div_to_l_@quot,f
  5045  1200  3EFF               	addlw	-1
  5046  1201  1D03               	skipz
  5047  1202  29FB               	goto	u4705
  5048  1203  3001               	movlw	1
  5049  1204  00F5               	movwf	??__div_to_l_
  5050  1205  0875               	movf	??__div_to_l_,w
  5051  1206  07AD               	addwf	__div_to_l_@exp1,f
  5052  1207  1D03               	btfss	3,2
  5053  1208  2A0A               	goto	u4711
  5054  1209  2A0B               	goto	u4710
  5055  120A                     u4711:
  5056  120A  29FA               	goto	l3033
  5057  120B                     u4710:
  5058  120B  2A23               	goto	l3043
  5059  120C                     l3035:
  5060  120C  3020               	movlw	32
  5061  120D  022D               	subwf	__div_to_l_@exp1,w
  5062  120E  1C03               	skipc
  5063  120F  2A11               	goto	u4721
  5064  1210  2A12               	goto	u4720
  5065  1211                     u4721:
  5066  1211  2A1E               	goto	l611
  5067  1212                     u4720:
  5068  1212  297B               	goto	l2997
  5069  1213                     l3041:
  5070  1213  3001               	movlw	1
  5071  1214  00F5               	movwf	??__div_to_l_
  5072  1215                     u4735:
  5073  1215  1003               	clrc
  5074  1216  0DA8               	rlf	__div_to_l_@quot,f
  5075  1217  0DA9               	rlf	__div_to_l_@quot+1,f
  5076  1218  0DAA               	rlf	__div_to_l_@quot+2,f
  5077  1219  0DAB               	rlf	__div_to_l_@quot+3,f
  5078  121A  0BF5               	decfsz	??__div_to_l_,f
  5079  121B  2A15               	goto	u4735
  5080  121C  3001               	movlw	1
  5081  121D  02AD               	subwf	__div_to_l_@exp1,f
  5082  121E                     l611:
  5083  121E  082D               	movf	__div_to_l_@exp1,w
  5084  121F  1D03               	btfss	3,2
  5085  1220  2A22               	goto	u4741
  5086  1221  2A23               	goto	u4740
  5087  1222                     u4741:
  5088  1222  2A13               	goto	l3041
  5089  1223                     u4740:
  5090  1223                     l3043:
  5091  1223  082B               	movf	__div_to_l_@quot+3,w
  5092  1224  00A3               	movwf	?__div_to_l_+3
  5093  1225  082A               	movf	__div_to_l_@quot+2,w
  5094  1226  00A2               	movwf	?__div_to_l_+2
  5095  1227  0829               	movf	__div_to_l_@quot+1,w
  5096  1228  00A1               	movwf	?__div_to_l_+1
  5097  1229  0828               	movf	__div_to_l_@quot,w
  5098  122A  00A0               	movwf	?__div_to_l_
  5099  122B                     l600:
  5100  122B  0008               	return
  5101  122C                     __end_of__div_to_l_:
  5102                           
  5103                           	psect	text11
  5104  0800                     __ptext11:	
  5105 ;; *************** function ___wmul *****************
  5106 ;; Defined at:
  5107 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5110 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;  product         2    5[COMMON] unsigned int 
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  2    0[BANK0 ] unsigned int 
  5115 ;; Registers used:
  5116 ;;		wreg, status,2, status,0
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5122 ;;      Params:         0       4       0       0       0
  5123 ;;      Locals:         2       0       0       0       0
  5124 ;;      Temps:          0       0       0       0       0
  5125 ;;      Totals:         2       4       0       0       0
  5126 ;;Total ram usage:        6 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; Hardware stack levels required when called:    2
  5129 ;; This function calls:
  5130 ;;		Nothing
  5131 ;; This function is called by:
  5132 ;;		_sprintf
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           
  5137                           ;psect for function ___wmul
  5138  0800                     ___wmul:
  5139  0800                     l4079:	
  5140                           ;incstack = 0
  5141                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5142                           
  5143  0800  01F5               	clrf	___wmul@product
  5144  0801  01F6               	clrf	___wmul@product+1
  5145  0802                     l4081:
  5146  0802  1283               	bcf	3,5	;RP0=0, select bank0
  5147  0803  1303               	bcf	3,6	;RP1=0, select bank0
  5148  0804  1C20               	btfss	___wmul@multiplier,0
  5149  0805  2807               	goto	u6931
  5150  0806  2808               	goto	u6930
  5151  0807                     u6931:
  5152  0807  280E               	goto	l430
  5153  0808                     u6930:
  5154  0808                     l4083:
  5155  0808  0822               	movf	___wmul@multiplicand,w
  5156  0809  07F5               	addwf	___wmul@product,f
  5157  080A  1803               	skipnc
  5158  080B  0AF6               	incf	___wmul@product+1,f
  5159  080C  0823               	movf	___wmul@multiplicand+1,w
  5160  080D  07F6               	addwf	___wmul@product+1,f
  5161  080E                     l430:
  5162  080E  3001               	movlw	1
  5163  080F                     u6945:
  5164  080F  1003               	clrc
  5165  0810  0DA2               	rlf	___wmul@multiplicand,f
  5166  0811  0DA3               	rlf	___wmul@multiplicand+1,f
  5167  0812  3EFF               	addlw	-1
  5168  0813  1D03               	skipz
  5169  0814  280F               	goto	u6945
  5170  0815                     l4085:
  5171  0815  3001               	movlw	1
  5172  0816                     u6955:
  5173  0816  1003               	clrc
  5174  0817  0CA1               	rrf	___wmul@multiplier+1,f
  5175  0818  0CA0               	rrf	___wmul@multiplier,f
  5176  0819  3EFF               	addlw	-1
  5177  081A  1D03               	skipz
  5178  081B  2816               	goto	u6955
  5179  081C                     l4087:
  5180  081C  0820               	movf	___wmul@multiplier,w
  5181  081D  0421               	iorwf	___wmul@multiplier+1,w
  5182  081E  1D03               	btfss	3,2
  5183  081F  2821               	goto	u6961
  5184  0820  2822               	goto	u6960
  5185  0821                     u6961:
  5186  0821  2802               	goto	l4081
  5187  0822                     u6960:
  5188  0822                     l4089:
  5189  0822  0876               	movf	___wmul@product+1,w
  5190  0823  00A1               	movwf	?___wmul+1
  5191  0824  0875               	movf	___wmul@product,w
  5192  0825  00A0               	movwf	?___wmul
  5193  0826                     l432:
  5194  0826  0008               	return
  5195  0827                     __end_of___wmul:
  5196                           
  5197                           	psect	text12
  5198  1C2B                     __ptext12:	
  5199 ;; *************** function ___llmod *****************
  5200 ;; Defined at:
  5201 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  divisor         4    0[BANK0 ] unsigned long 
  5204 ;;  dividend        4    4[BANK0 ] unsigned long 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  counter         1    6[COMMON] unsigned char 
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  4    0[BANK0 ] unsigned long 
  5209 ;; Registers used:
  5210 ;;		wreg, status,2, status,0
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5216 ;;      Params:         0       8       0       0       0
  5217 ;;      Locals:         1       0       0       0       0
  5218 ;;      Temps:          1       0       0       0       0
  5219 ;;      Totals:         2       8       0       0       0
  5220 ;;Total ram usage:       10 bytes
  5221 ;; Hardware stack levels used:    1
  5222 ;; Hardware stack levels required when called:    2
  5223 ;; This function calls:
  5224 ;;		Nothing
  5225 ;; This function is called by:
  5226 ;;		_sprintf
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           
  5231                           ;psect for function ___llmod
  5232  1C2B                     ___llmod:
  5233  1C2B                     l3161:	
  5234                           ;incstack = 0
  5235                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5236                           
  5237  1C2B  1283               	bcf	3,5	;RP0=0, select bank0
  5238  1C2C  1303               	bcf	3,6	;RP1=0, select bank0
  5239  1C2D  0823               	movf	___llmod@divisor+3,w
  5240  1C2E  0422               	iorwf	___llmod@divisor+2,w
  5241  1C2F  0421               	iorwf	___llmod@divisor+1,w
  5242  1C30  0420               	iorwf	___llmod@divisor,w
  5243  1C31  1903               	skipnz
  5244  1C32  2C34               	goto	u5071
  5245  1C33  2C35               	goto	u5070
  5246  1C34                     u5071:
  5247  1C34  2C78               	goto	l3177
  5248  1C35                     u5070:
  5249  1C35                     l3163:
  5250  1C35  01F6               	clrf	___llmod@counter
  5251  1C36  0AF6               	incf	___llmod@counter,f
  5252  1C37  2C45               	goto	l3167
  5253  1C38                     l3165:
  5254  1C38  3001               	movlw	1
  5255  1C39  00F5               	movwf	??___llmod
  5256  1C3A                     u5085:
  5257  1C3A  1003               	clrc
  5258  1C3B  0DA0               	rlf	___llmod@divisor,f
  5259  1C3C  0DA1               	rlf	___llmod@divisor+1,f
  5260  1C3D  0DA2               	rlf	___llmod@divisor+2,f
  5261  1C3E  0DA3               	rlf	___llmod@divisor+3,f
  5262  1C3F  0BF5               	decfsz	??___llmod,f
  5263  1C40  2C3A               	goto	u5085
  5264  1C41  3001               	movlw	1
  5265  1C42  00F5               	movwf	??___llmod
  5266  1C43  0875               	movf	??___llmod,w
  5267  1C44  07F6               	addwf	___llmod@counter,f
  5268  1C45                     l3167:
  5269  1C45  1FA3               	btfss	___llmod@divisor+3,7
  5270  1C46  2C48               	goto	u5091
  5271  1C47  2C49               	goto	u5090
  5272  1C48                     u5091:
  5273  1C48  2C38               	goto	l3165
  5274  1C49                     u5090:
  5275  1C49                     l3169:
  5276  1C49  0823               	movf	___llmod@divisor+3,w
  5277  1C4A  0227               	subwf	___llmod@dividend+3,w
  5278  1C4B  1D03               	skipz
  5279  1C4C  2C57               	goto	u5105
  5280  1C4D  0822               	movf	___llmod@divisor+2,w
  5281  1C4E  0226               	subwf	___llmod@dividend+2,w
  5282  1C4F  1D03               	skipz
  5283  1C50  2C57               	goto	u5105
  5284  1C51  0821               	movf	___llmod@divisor+1,w
  5285  1C52  0225               	subwf	___llmod@dividend+1,w
  5286  1C53  1D03               	skipz
  5287  1C54  2C57               	goto	u5105
  5288  1C55  0820               	movf	___llmod@divisor,w
  5289  1C56  0224               	subwf	___llmod@dividend,w
  5290  1C57                     u5105:
  5291  1C57  1C03               	skipc
  5292  1C58  2C5A               	goto	u5101
  5293  1C59  2C5B               	goto	u5100
  5294  1C5A                     u5101:
  5295  1C5A  2C69               	goto	l3173
  5296  1C5B                     u5100:
  5297  1C5B                     l3171:
  5298  1C5B  0820               	movf	___llmod@divisor,w
  5299  1C5C  02A4               	subwf	___llmod@dividend,f
  5300  1C5D  0821               	movf	___llmod@divisor+1,w
  5301  1C5E  1C03               	skipc
  5302  1C5F  0F21               	incfsz	___llmod@divisor+1,w
  5303  1C60  02A5               	subwf	___llmod@dividend+1,f
  5304  1C61  0822               	movf	___llmod@divisor+2,w
  5305  1C62  1C03               	skipc
  5306  1C63  0F22               	incfsz	___llmod@divisor+2,w
  5307  1C64  02A6               	subwf	___llmod@dividend+2,f
  5308  1C65  0823               	movf	___llmod@divisor+3,w
  5309  1C66  1C03               	skipc
  5310  1C67  0F23               	incfsz	___llmod@divisor+3,w
  5311  1C68  02A7               	subwf	___llmod@dividend+3,f
  5312  1C69                     l3173:
  5313  1C69  3001               	movlw	1
  5314  1C6A                     u5115:
  5315  1C6A  1003               	clrc
  5316  1C6B  0CA3               	rrf	___llmod@divisor+3,f
  5317  1C6C  0CA2               	rrf	___llmod@divisor+2,f
  5318  1C6D  0CA1               	rrf	___llmod@divisor+1,f
  5319  1C6E  0CA0               	rrf	___llmod@divisor,f
  5320  1C6F  3EFF               	addlw	-1
  5321  1C70  1D03               	skipz
  5322  1C71  2C6A               	goto	u5115
  5323  1C72                     l3175:
  5324  1C72  3001               	movlw	1
  5325  1C73  02F6               	subwf	___llmod@counter,f
  5326  1C74  1D03               	btfss	3,2
  5327  1C75  2C77               	goto	u5121
  5328  1C76  2C78               	goto	u5120
  5329  1C77                     u5121:
  5330  1C77  2C49               	goto	l3169
  5331  1C78                     u5120:
  5332  1C78                     l3177:
  5333  1C78  0827               	movf	___llmod@dividend+3,w
  5334  1C79  00A3               	movwf	?___llmod+3
  5335  1C7A  0826               	movf	___llmod@dividend+2,w
  5336  1C7B  00A2               	movwf	?___llmod+2
  5337  1C7C  0825               	movf	___llmod@dividend+1,w
  5338  1C7D  00A1               	movwf	?___llmod+1
  5339  1C7E  0824               	movf	___llmod@dividend,w
  5340  1C7F  00A0               	movwf	?___llmod
  5341  1C80                     l686:
  5342  1C80  0008               	return
  5343  1C81                     __end_of___llmod:
  5344                           
  5345                           	psect	text13
  5346  1D3A                     __ptext13:	
  5347 ;; *************** function ___lldiv *****************
  5348 ;; Defined at:
  5349 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  divisor         4    0[BANK0 ] unsigned long 
  5352 ;;  dividend        4    4[BANK0 ] unsigned long 
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;  quotient        4    8[BANK0 ] unsigned long 
  5355 ;;  counter         1   12[BANK0 ] unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  4    0[BANK0 ] unsigned long 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5365 ;;      Params:         0       8       0       0       0
  5366 ;;      Locals:         0       5       0       0       0
  5367 ;;      Temps:          1       0       0       0       0
  5368 ;;      Totals:         1      13       0       0       0
  5369 ;;Total ram usage:       14 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    2
  5372 ;; This function calls:
  5373 ;;		Nothing
  5374 ;; This function is called by:
  5375 ;;		_sprintf
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           
  5380                           ;psect for function ___lldiv
  5381  1D3A                     ___lldiv:
  5382  1D3A                     l3061:	
  5383                           ;incstack = 0
  5384                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5385                           
  5386  1D3A  3000               	movlw	0
  5387  1D3B  1283               	bcf	3,5	;RP0=0, select bank0
  5388  1D3C  1303               	bcf	3,6	;RP1=0, select bank0
  5389  1D3D  00AB               	movwf	___lldiv@quotient+3
  5390  1D3E  3000               	movlw	0
  5391  1D3F  00AA               	movwf	___lldiv@quotient+2
  5392  1D40  3000               	movlw	0
  5393  1D41  00A9               	movwf	___lldiv@quotient+1
  5394  1D42  3000               	movlw	0
  5395  1D43  00A8               	movwf	___lldiv@quotient
  5396  1D44  0823               	movf	___lldiv@divisor+3,w
  5397  1D45  0422               	iorwf	___lldiv@divisor+2,w
  5398  1D46  0421               	iorwf	___lldiv@divisor+1,w
  5399  1D47  0420               	iorwf	___lldiv@divisor,w
  5400  1D48  1903               	skipnz
  5401  1D49  2D4B               	goto	u4791
  5402  1D4A  2D4C               	goto	u4790
  5403  1D4B                     u4791:
  5404  1D4B  2D99               	goto	l3081
  5405  1D4C                     u4790:
  5406  1D4C                     l3063:
  5407  1D4C  01AC               	clrf	___lldiv@counter
  5408  1D4D  0AAC               	incf	___lldiv@counter,f
  5409  1D4E  2D5C               	goto	l3067
  5410  1D4F                     l3065:
  5411  1D4F  3001               	movlw	1
  5412  1D50  00F5               	movwf	??___lldiv
  5413  1D51                     u4805:
  5414  1D51  1003               	clrc
  5415  1D52  0DA0               	rlf	___lldiv@divisor,f
  5416  1D53  0DA1               	rlf	___lldiv@divisor+1,f
  5417  1D54  0DA2               	rlf	___lldiv@divisor+2,f
  5418  1D55  0DA3               	rlf	___lldiv@divisor+3,f
  5419  1D56  0BF5               	decfsz	??___lldiv,f
  5420  1D57  2D51               	goto	u4805
  5421  1D58  3001               	movlw	1
  5422  1D59  00F5               	movwf	??___lldiv
  5423  1D5A  0875               	movf	??___lldiv,w
  5424  1D5B  07AC               	addwf	___lldiv@counter,f
  5425  1D5C                     l3067:
  5426  1D5C  1FA3               	btfss	___lldiv@divisor+3,7
  5427  1D5D  2D5F               	goto	u4811
  5428  1D5E  2D60               	goto	u4810
  5429  1D5F                     u4811:
  5430  1D5F  2D4F               	goto	l3065
  5431  1D60                     u4810:
  5432  1D60                     l3069:
  5433  1D60  3001               	movlw	1
  5434  1D61  00F5               	movwf	??___lldiv
  5435  1D62                     u4825:
  5436  1D62  1003               	clrc
  5437  1D63  0DA8               	rlf	___lldiv@quotient,f
  5438  1D64  0DA9               	rlf	___lldiv@quotient+1,f
  5439  1D65  0DAA               	rlf	___lldiv@quotient+2,f
  5440  1D66  0DAB               	rlf	___lldiv@quotient+3,f
  5441  1D67  0BF5               	decfsz	??___lldiv,f
  5442  1D68  2D62               	goto	u4825
  5443  1D69                     l3071:
  5444  1D69  0823               	movf	___lldiv@divisor+3,w
  5445  1D6A  0227               	subwf	___lldiv@dividend+3,w
  5446  1D6B  1D03               	skipz
  5447  1D6C  2D77               	goto	u4835
  5448  1D6D  0822               	movf	___lldiv@divisor+2,w
  5449  1D6E  0226               	subwf	___lldiv@dividend+2,w
  5450  1D6F  1D03               	skipz
  5451  1D70  2D77               	goto	u4835
  5452  1D71  0821               	movf	___lldiv@divisor+1,w
  5453  1D72  0225               	subwf	___lldiv@dividend+1,w
  5454  1D73  1D03               	skipz
  5455  1D74  2D77               	goto	u4835
  5456  1D75  0820               	movf	___lldiv@divisor,w
  5457  1D76  0224               	subwf	___lldiv@dividend,w
  5458  1D77                     u4835:
  5459  1D77  1C03               	skipc
  5460  1D78  2D7A               	goto	u4831
  5461  1D79  2D7B               	goto	u4830
  5462  1D7A                     u4831:
  5463  1D7A  2D8A               	goto	l3077
  5464  1D7B                     u4830:
  5465  1D7B                     l3073:
  5466  1D7B  0820               	movf	___lldiv@divisor,w
  5467  1D7C  02A4               	subwf	___lldiv@dividend,f
  5468  1D7D  0821               	movf	___lldiv@divisor+1,w
  5469  1D7E  1C03               	skipc
  5470  1D7F  0F21               	incfsz	___lldiv@divisor+1,w
  5471  1D80  02A5               	subwf	___lldiv@dividend+1,f
  5472  1D81  0822               	movf	___lldiv@divisor+2,w
  5473  1D82  1C03               	skipc
  5474  1D83  0F22               	incfsz	___lldiv@divisor+2,w
  5475  1D84  02A6               	subwf	___lldiv@dividend+2,f
  5476  1D85  0823               	movf	___lldiv@divisor+3,w
  5477  1D86  1C03               	skipc
  5478  1D87  0F23               	incfsz	___lldiv@divisor+3,w
  5479  1D88  02A7               	subwf	___lldiv@dividend+3,f
  5480  1D89                     l3075:
  5481  1D89  1428               	bsf	___lldiv@quotient,0
  5482  1D8A                     l3077:
  5483  1D8A  3001               	movlw	1
  5484  1D8B                     u4845:
  5485  1D8B  1003               	clrc
  5486  1D8C  0CA3               	rrf	___lldiv@divisor+3,f
  5487  1D8D  0CA2               	rrf	___lldiv@divisor+2,f
  5488  1D8E  0CA1               	rrf	___lldiv@divisor+1,f
  5489  1D8F  0CA0               	rrf	___lldiv@divisor,f
  5490  1D90  3EFF               	addlw	-1
  5491  1D91  1D03               	skipz
  5492  1D92  2D8B               	goto	u4845
  5493  1D93                     l3079:
  5494  1D93  3001               	movlw	1
  5495  1D94  02AC               	subwf	___lldiv@counter,f
  5496  1D95  1D03               	btfss	3,2
  5497  1D96  2D98               	goto	u4851
  5498  1D97  2D99               	goto	u4850
  5499  1D98                     u4851:
  5500  1D98  2D60               	goto	l3069
  5501  1D99                     u4850:
  5502  1D99                     l3081:
  5503  1D99  082B               	movf	___lldiv@quotient+3,w
  5504  1D9A  00A3               	movwf	?___lldiv+3
  5505  1D9B  082A               	movf	___lldiv@quotient+2,w
  5506  1D9C  00A2               	movwf	?___lldiv+2
  5507  1D9D  0829               	movf	___lldiv@quotient+1,w
  5508  1D9E  00A1               	movwf	?___lldiv+1
  5509  1D9F  0828               	movf	___lldiv@quotient,w
  5510  1DA0  00A0               	movwf	?___lldiv
  5511  1DA1                     l466:
  5512  1DA1  0008               	return
  5513  1DA2                     __end_of___lldiv:
  5514                           
  5515                           	psect	text14
  5516  1E0B                     __ptext14:	
  5517 ;; *************** function ___fltol *****************
  5518 ;; Defined at:
  5519 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  f1              4   59[BANK0 ] unsigned long 
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;  exp1            1   69[BANK0 ] unsigned char 
  5524 ;;  sign1           1   68[BANK0 ] unsigned char 
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  4   59[BANK0 ] long 
  5527 ;; Registers used:
  5528 ;;		wreg, status,2, status,0
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5534 ;;      Params:         0       4       0       0       0
  5535 ;;      Locals:         0       2       0       0       0
  5536 ;;      Temps:          0       5       0       0       0
  5537 ;;      Totals:         0      11       0       0       0
  5538 ;;Total ram usage:       11 bytes
  5539 ;; Hardware stack levels used:    1
  5540 ;; Hardware stack levels required when called:    2
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_sprintf
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           
  5549                           ;psect for function ___fltol
  5550  1E0B                     ___fltol:
  5551  1E0B                     l3125:	
  5552                           ;incstack = 0
  5553                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5554                           
  5555  1E0B  1003               	clrc
  5556  1E0C  1283               	bcf	3,5	;RP0=0, select bank0
  5557  1E0D  1303               	bcf	3,6	;RP1=0, select bank0
  5558  1E0E  0D5D               	rlf	___fltol@f1+2,w
  5559  1E0F  0D5E               	rlf	___fltol@f1+3,w
  5560  1E10  00DF               	movwf	??___fltol
  5561  1E11  085F               	movf	??___fltol,w
  5562  1E12  00E5               	movwf	___fltol@exp1
  5563  1E13  0865               	movf	___fltol@exp1,w
  5564  1E14  1D03               	btfss	3,2
  5565  1E15  2E17               	goto	u4971
  5566  1E16  2E18               	goto	u4970
  5567  1E17                     u4971:
  5568  1E17  2E21               	goto	l3131
  5569  1E18                     u4970:
  5570  1E18                     l3127:
  5571  1E18  3000               	movlw	0
  5572  1E19  00DE               	movwf	?___fltol+3
  5573  1E1A  3000               	movlw	0
  5574  1E1B  00DD               	movwf	?___fltol+2
  5575  1E1C  3000               	movlw	0
  5576  1E1D  00DC               	movwf	?___fltol+1
  5577  1E1E  3000               	movlw	0
  5578  1E1F  00DB               	movwf	?___fltol
  5579  1E20  2E86               	goto	l633
  5580  1E21                     l3131:
  5581  1E21  085B               	movf	___fltol@f1,w
  5582  1E22  00DF               	movwf	??___fltol
  5583  1E23  085C               	movf	___fltol@f1+1,w
  5584  1E24  00E0               	movwf	??___fltol+1
  5585  1E25  085D               	movf	___fltol@f1+2,w
  5586  1E26  00E1               	movwf	??___fltol+2
  5587  1E27  085E               	movf	___fltol@f1+3,w
  5588  1E28  00E2               	movwf	??___fltol+3
  5589  1E29  301F               	movlw	31
  5590  1E2A                     u4985:
  5591  1E2A  1003               	clrc
  5592  1E2B  0CE2               	rrf	??___fltol+3,f
  5593  1E2C  0CE1               	rrf	??___fltol+2,f
  5594  1E2D  0CE0               	rrf	??___fltol+1,f
  5595  1E2E  0CDF               	rrf	??___fltol,f
  5596  1E2F                     u4980:
  5597  1E2F  3EFF               	addlw	-1
  5598  1E30  1D03               	skipz
  5599  1E31  2E2A               	goto	u4985
  5600  1E32  085F               	movf	??___fltol,w
  5601  1E33  00E3               	movwf	??___fltol+4
  5602  1E34  0863               	movf	??___fltol+4,w
  5603  1E35  00E4               	movwf	___fltol@sign1
  5604  1E36                     l3133:
  5605  1E36  17DD               	bsf	___fltol@f1+2,7
  5606  1E37                     l3135:
  5607  1E37  30FF               	movlw	255
  5608  1E38  05DB               	andwf	___fltol@f1,f
  5609  1E39  30FF               	movlw	255
  5610  1E3A  05DC               	andwf	___fltol@f1+1,f
  5611  1E3B  30FF               	movlw	255
  5612  1E3C  05DD               	andwf	___fltol@f1+2,f
  5613  1E3D  3000               	movlw	0
  5614  1E3E  05DE               	andwf	___fltol@f1+3,f
  5615  1E3F                     l3137:
  5616  1E3F  3096               	movlw	150
  5617  1E40  02E5               	subwf	___fltol@exp1,f
  5618  1E41                     l3139:
  5619  1E41  1FE5               	btfss	___fltol@exp1,7
  5620  1E42  2E44               	goto	u4991
  5621  1E43  2E45               	goto	u4990
  5622  1E44                     u4991:
  5623  1E44  2E5F               	goto	l3149
  5624  1E45                     u4990:
  5625  1E45                     l3141:
  5626  1E45  0865               	movf	___fltol@exp1,w
  5627  1E46  3A80               	xorlw	128
  5628  1E47  3E97               	addlw	151
  5629  1E48  1803               	skipnc
  5630  1E49  2E4B               	goto	u5001
  5631  1E4A  2E4C               	goto	u5000
  5632  1E4B                     u5001:
  5633  1E4B  2E4D               	goto	l3147
  5634  1E4C                     u5000:
  5635  1E4C  2E18               	goto	l3127
  5636  1E4D                     l3147:
  5637  1E4D  3001               	movlw	1
  5638  1E4E                     u5015:
  5639  1E4E  1003               	clrc
  5640  1E4F  0CDE               	rrf	___fltol@f1+3,f
  5641  1E50  0CDD               	rrf	___fltol@f1+2,f
  5642  1E51  0CDC               	rrf	___fltol@f1+1,f
  5643  1E52  0CDB               	rrf	___fltol@f1,f
  5644  1E53  3EFF               	addlw	-1
  5645  1E54  1D03               	skipz
  5646  1E55  2E4E               	goto	u5015
  5647  1E56  3001               	movlw	1
  5648  1E57  00DF               	movwf	??___fltol
  5649  1E58  085F               	movf	??___fltol,w
  5650  1E59  07E5               	addwf	___fltol@exp1,f
  5651  1E5A  1D03               	btfss	3,2
  5652  1E5B  2E5D               	goto	u5021
  5653  1E5C  2E5E               	goto	u5020
  5654  1E5D                     u5021:
  5655  1E5D  2E4D               	goto	l3147
  5656  1E5E                     u5020:
  5657  1E5E  2E76               	goto	l3157
  5658  1E5F                     l3149:
  5659  1E5F  3020               	movlw	32
  5660  1E60  0265               	subwf	___fltol@exp1,w
  5661  1E61  1C03               	skipc
  5662  1E62  2E64               	goto	u5031
  5663  1E63  2E65               	goto	u5030
  5664  1E64                     u5031:
  5665  1E64  2E71               	goto	l640
  5666  1E65                     u5030:
  5667  1E65  2E18               	goto	l3127
  5668  1E66                     l3155:
  5669  1E66  3001               	movlw	1
  5670  1E67  00DF               	movwf	??___fltol
  5671  1E68                     u5045:
  5672  1E68  1003               	clrc
  5673  1E69  0DDB               	rlf	___fltol@f1,f
  5674  1E6A  0DDC               	rlf	___fltol@f1+1,f
  5675  1E6B  0DDD               	rlf	___fltol@f1+2,f
  5676  1E6C  0DDE               	rlf	___fltol@f1+3,f
  5677  1E6D  0BDF               	decfsz	??___fltol,f
  5678  1E6E  2E68               	goto	u5045
  5679  1E6F  3001               	movlw	1
  5680  1E70  02E5               	subwf	___fltol@exp1,f
  5681  1E71                     l640:
  5682  1E71  0865               	movf	___fltol@exp1,w
  5683  1E72  1D03               	btfss	3,2
  5684  1E73  2E75               	goto	u5051
  5685  1E74  2E76               	goto	u5050
  5686  1E75                     u5051:
  5687  1E75  2E66               	goto	l3155
  5688  1E76                     u5050:
  5689  1E76                     l3157:
  5690  1E76  0864               	movf	___fltol@sign1,w
  5691  1E77  1903               	btfsc	3,2
  5692  1E78  2E7A               	goto	u5061
  5693  1E79  2E7B               	goto	u5060
  5694  1E7A                     u5061:
  5695  1E7A  2E86               	goto	l643
  5696  1E7B                     u5060:
  5697  1E7B                     l3159:
  5698  1E7B  09DB               	comf	___fltol@f1,f
  5699  1E7C  09DC               	comf	___fltol@f1+1,f
  5700  1E7D  09DD               	comf	___fltol@f1+2,f
  5701  1E7E  09DE               	comf	___fltol@f1+3,f
  5702  1E7F  0ADB               	incf	___fltol@f1,f
  5703  1E80  1903               	skipnz
  5704  1E81  0ADC               	incf	___fltol@f1+1,f
  5705  1E82  1903               	skipnz
  5706  1E83  0ADD               	incf	___fltol@f1+2,f
  5707  1E84  1903               	skipnz
  5708  1E85  0ADE               	incf	___fltol@f1+3,f
  5709  1E86                     l643:
  5710  1E86                     l633:
  5711  1E86  0008               	return
  5712  1E87                     __end_of___fltol:
  5713                           
  5714                           	psect	text15
  5715  1BDB                     __ptext15:	
  5716 ;; *************** function ___flsub *****************
  5717 ;; Defined at:
  5718 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  a               4    0[BANK1 ] long 
  5721 ;;  b               4    4[BANK1 ] long 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;		None
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  4    0[BANK1 ] long 
  5726 ;; Registers used:
  5727 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5733 ;;      Params:         0       0       8       0       0
  5734 ;;      Locals:         0       0       0       0       0
  5735 ;;      Temps:          0       0       0       0       0
  5736 ;;      Totals:         0       0       8       0       0
  5737 ;;Total ram usage:        8 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:    3
  5740 ;; This function calls:
  5741 ;;		___fladd
  5742 ;; This function is called by:
  5743 ;;		_sprintf
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           
  5748                           ;psect for function ___flsub
  5749  1BDB                     ___flsub:
  5750  1BDB                     l3181:	
  5751                           ;incstack = 0
  5752                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5753                           
  5754  1BDB  3080               	movlw	128
  5755  1BDC  1683               	bsf	3,5	;RP0=1, select bank1
  5756  1BDD  1303               	bcf	3,6	;RP1=0, select bank1
  5757  1BDE  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5758  1BDF                     l3183:
  5759  1BDF  0827               	movf	(___flsub@b+3)^(0+128),w
  5760  1BE0  1283               	bcf	3,5	;RP0=0, select bank0
  5761  1BE1  1303               	bcf	3,6	;RP1=0, select bank0
  5762  1BE2  00DF               	movwf	___fladd@b+3
  5763  1BE3  1683               	bsf	3,5	;RP0=1, select bank1
  5764  1BE4  1303               	bcf	3,6	;RP1=0, select bank1
  5765  1BE5  0826               	movf	(___flsub@b+2)^(0+128),w
  5766  1BE6  1283               	bcf	3,5	;RP0=0, select bank0
  5767  1BE7  1303               	bcf	3,6	;RP1=0, select bank0
  5768  1BE8  00DE               	movwf	___fladd@b+2
  5769  1BE9  1683               	bsf	3,5	;RP0=1, select bank1
  5770  1BEA  1303               	bcf	3,6	;RP1=0, select bank1
  5771  1BEB  0825               	movf	(___flsub@b+1)^(0+128),w
  5772  1BEC  1283               	bcf	3,5	;RP0=0, select bank0
  5773  1BED  1303               	bcf	3,6	;RP1=0, select bank0
  5774  1BEE  00DD               	movwf	___fladd@b+1
  5775  1BEF  1683               	bsf	3,5	;RP0=1, select bank1
  5776  1BF0  1303               	bcf	3,6	;RP1=0, select bank1
  5777  1BF1  0824               	movf	___flsub@b^(0+128),w
  5778  1BF2  1283               	bcf	3,5	;RP0=0, select bank0
  5779  1BF3  1303               	bcf	3,6	;RP1=0, select bank0
  5780  1BF4  00DC               	movwf	___fladd@b
  5781  1BF5  1683               	bsf	3,5	;RP0=1, select bank1
  5782  1BF6  1303               	bcf	3,6	;RP1=0, select bank1
  5783  1BF7  0823               	movf	(___flsub@a+3)^(0+128),w
  5784  1BF8  1283               	bcf	3,5	;RP0=0, select bank0
  5785  1BF9  1303               	bcf	3,6	;RP1=0, select bank0
  5786  1BFA  00E3               	movwf	___fladd@a+3
  5787  1BFB  1683               	bsf	3,5	;RP0=1, select bank1
  5788  1BFC  1303               	bcf	3,6	;RP1=0, select bank1
  5789  1BFD  0822               	movf	(___flsub@a+2)^(0+128),w
  5790  1BFE  1283               	bcf	3,5	;RP0=0, select bank0
  5791  1BFF  1303               	bcf	3,6	;RP1=0, select bank0
  5792  1C00  00E2               	movwf	___fladd@a+2
  5793  1C01  1683               	bsf	3,5	;RP0=1, select bank1
  5794  1C02  1303               	bcf	3,6	;RP1=0, select bank1
  5795  1C03  0821               	movf	(___flsub@a+1)^(0+128),w
  5796  1C04  1283               	bcf	3,5	;RP0=0, select bank0
  5797  1C05  1303               	bcf	3,6	;RP1=0, select bank0
  5798  1C06  00E1               	movwf	___fladd@a+1
  5799  1C07  1683               	bsf	3,5	;RP0=1, select bank1
  5800  1C08  1303               	bcf	3,6	;RP1=0, select bank1
  5801  1C09  0820               	movf	___flsub@a^(0+128),w
  5802  1C0A  1283               	bcf	3,5	;RP0=0, select bank0
  5803  1C0B  1303               	bcf	3,6	;RP1=0, select bank0
  5804  1C0C  00E0               	movwf	___fladd@a
  5805  1C0D  160A  118A  222C  160A  158A  	fcall	___fladd
  5806  1C12  1283               	bcf	3,5	;RP0=0, select bank0
  5807  1C13  1303               	bcf	3,6	;RP1=0, select bank0
  5808  1C14  085F               	movf	?___fladd+3,w
  5809  1C15  1683               	bsf	3,5	;RP0=1, select bank1
  5810  1C16  1303               	bcf	3,6	;RP1=0, select bank1
  5811  1C17  00A3               	movwf	(?___flsub+3)^(0+128)
  5812  1C18  1283               	bcf	3,5	;RP0=0, select bank0
  5813  1C19  1303               	bcf	3,6	;RP1=0, select bank0
  5814  1C1A  085E               	movf	?___fladd+2,w
  5815  1C1B  1683               	bsf	3,5	;RP0=1, select bank1
  5816  1C1C  1303               	bcf	3,6	;RP1=0, select bank1
  5817  1C1D  00A2               	movwf	(?___flsub+2)^(0+128)
  5818  1C1E  1283               	bcf	3,5	;RP0=0, select bank0
  5819  1C1F  1303               	bcf	3,6	;RP1=0, select bank0
  5820  1C20  085D               	movf	?___fladd+1,w
  5821  1C21  1683               	bsf	3,5	;RP0=1, select bank1
  5822  1C22  1303               	bcf	3,6	;RP1=0, select bank1
  5823  1C23  00A1               	movwf	(?___flsub+1)^(0+128)
  5824  1C24  1283               	bcf	3,5	;RP0=0, select bank0
  5825  1C25  1303               	bcf	3,6	;RP1=0, select bank0
  5826  1C26  085C               	movf	?___fladd,w
  5827  1C27  1683               	bsf	3,5	;RP0=1, select bank1
  5828  1C28  1303               	bcf	3,6	;RP1=0, select bank1
  5829  1C29  00A0               	movwf	?___flsub^(0+128)
  5830  1C2A                     l803:
  5831  1C2A  0008               	return
  5832  1C2B                     __end_of___flsub:
  5833                           
  5834                           	psect	text16
  5835  122C                     __ptext16:	
  5836 ;; *************** function ___fladd *****************
  5837 ;; Defined at:
  5838 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;  b               4   60[BANK0 ] long 
  5841 ;;  a               4   64[BANK0 ] long 
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;  grs             1   79[BANK0 ] unsigned char 
  5844 ;;  bexp            1   78[BANK0 ] unsigned char 
  5845 ;;  aexp            1   77[BANK0 ] unsigned char 
  5846 ;;  signs           1   76[BANK0 ] unsigned char 
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  4   60[BANK0 ] unsigned char 
  5849 ;; Registers used:
  5850 ;;		wreg, status,2, status,0, btemp+1
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5856 ;;      Params:         0       8       0       0       0
  5857 ;;      Locals:         0       4       0       0       0
  5858 ;;      Temps:          0       8       0       0       0
  5859 ;;      Totals:         0      20       0       0       0
  5860 ;;Total ram usage:       20 bytes
  5861 ;; Hardware stack levels used:    1
  5862 ;; Hardware stack levels required when called:    2
  5863 ;; This function calls:
  5864 ;;		Nothing
  5865 ;; This function is called by:
  5866 ;;		_sprintf
  5867 ;;		___flsub
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           
  5872                           ;psect for function ___fladd
  5873  122C                     ___fladd:
  5874  122C                     l2513:	
  5875                           ;incstack = 0
  5876                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5877                           
  5878  122C  1283               	bcf	3,5	;RP0=0, select bank0
  5879  122D  1303               	bcf	3,6	;RP1=0, select bank0
  5880  122E  085F               	movf	___fladd@b+3,w
  5881  122F  3980               	andlw	128
  5882  1230  00E4               	movwf	??___fladd
  5883  1231  0864               	movf	??___fladd,w
  5884  1232  00EC               	movwf	___fladd@signs
  5885  1233                     l2515:
  5886  1233  085F               	movf	___fladd@b+3,w
  5887  1234  00E4               	movwf	??___fladd
  5888  1235  0764               	addwf	??___fladd,w
  5889  1236  00E5               	movwf	??___fladd+1
  5890  1237  0865               	movf	??___fladd+1,w
  5891  1238  00EE               	movwf	___fladd@bexp
  5892  1239                     l2517:
  5893  1239  1FDE               	btfss	___fladd@b+2,7
  5894  123A  2A3C               	goto	u3381
  5895  123B  2A3D               	goto	u3380
  5896  123C                     u3381:
  5897  123C  2A3E               	goto	l2521
  5898  123D                     u3380:
  5899  123D                     l2519:
  5900  123D  146E               	bsf	___fladd@bexp,0
  5901  123E                     l2521:
  5902  123E  086E               	movf	___fladd@bexp,w
  5903  123F  1903               	btfsc	3,2
  5904  1240  2A42               	goto	u3391
  5905  1241  2A43               	goto	u3390
  5906  1242                     u3391:
  5907  1242  2A53               	goto	l2531
  5908  1243                     u3390:
  5909  1243                     l2523:
  5910  1243  0A6E               	incf	___fladd@bexp,w
  5911  1244  1D03               	btfss	3,2
  5912  1245  2A47               	goto	u3401
  5913  1246  2A48               	goto	u3400
  5914  1247                     u3401:
  5915  1247  2A50               	goto	l2527
  5916  1248                     u3400:
  5917  1248                     l2525:
  5918  1248  3000               	movlw	0
  5919  1249  00DF               	movwf	___fladd@b+3
  5920  124A  3000               	movlw	0
  5921  124B  00DE               	movwf	___fladd@b+2
  5922  124C  3000               	movlw	0
  5923  124D  00DD               	movwf	___fladd@b+1
  5924  124E  3000               	movlw	0
  5925  124F  00DC               	movwf	___fladd@b
  5926  1250                     l2527:
  5927  1250  17DE               	bsf	___fladd@b+2,7
  5928  1251                     l2529:
  5929  1251  01DF               	clrf	___fladd@b+3
  5930  1252  2A5B               	goto	l2533
  5931  1253                     l2531:
  5932  1253  3000               	movlw	0
  5933  1254  00DF               	movwf	___fladd@b+3
  5934  1255  3000               	movlw	0
  5935  1256  00DE               	movwf	___fladd@b+2
  5936  1257  3000               	movlw	0
  5937  1258  00DD               	movwf	___fladd@b+1
  5938  1259  3000               	movlw	0
  5939  125A  00DC               	movwf	___fladd@b
  5940  125B                     l2533:
  5941  125B  0863               	movf	___fladd@a+3,w
  5942  125C  3980               	andlw	128
  5943  125D  00E4               	movwf	??___fladd
  5944  125E  0864               	movf	??___fladd,w
  5945  125F  00ED               	movwf	___fladd@aexp
  5946  1260                     l2535:
  5947  1260  086D               	movf	___fladd@aexp,w
  5948  1261  066C               	xorwf	___fladd@signs,w
  5949  1262  1903               	skipnz
  5950  1263  2A65               	goto	u3411
  5951  1264  2A66               	goto	u3410
  5952  1265                     u3411:
  5953  1265  2A67               	goto	l2539
  5954  1266                     u3410:
  5955  1266                     l2537:
  5956  1266  176C               	bsf	___fladd@signs,6
  5957  1267                     l2539:
  5958  1267  0863               	movf	___fladd@a+3,w
  5959  1268  00E4               	movwf	??___fladd
  5960  1269  0764               	addwf	??___fladd,w
  5961  126A  00E5               	movwf	??___fladd+1
  5962  126B  0865               	movf	??___fladd+1,w
  5963  126C  00ED               	movwf	___fladd@aexp
  5964  126D                     l2541:
  5965  126D  1FE2               	btfss	___fladd@a+2,7
  5966  126E  2A70               	goto	u3421
  5967  126F  2A71               	goto	u3420
  5968  1270                     u3421:
  5969  1270  2A72               	goto	l2545
  5970  1271                     u3420:
  5971  1271                     l2543:
  5972  1271  146D               	bsf	___fladd@aexp,0
  5973  1272                     l2545:
  5974  1272  086D               	movf	___fladd@aexp,w
  5975  1273  1903               	btfsc	3,2
  5976  1274  2A76               	goto	u3431
  5977  1275  2A77               	goto	u3430
  5978  1276                     u3431:
  5979  1276  2A87               	goto	l2555
  5980  1277                     u3430:
  5981  1277                     l2547:
  5982  1277  0A6D               	incf	___fladd@aexp,w
  5983  1278  1D03               	btfss	3,2
  5984  1279  2A7B               	goto	u3441
  5985  127A  2A7C               	goto	u3440
  5986  127B                     u3441:
  5987  127B  2A84               	goto	l2551
  5988  127C                     u3440:
  5989  127C                     l2549:
  5990  127C  3000               	movlw	0
  5991  127D  00E3               	movwf	___fladd@a+3
  5992  127E  3000               	movlw	0
  5993  127F  00E2               	movwf	___fladd@a+2
  5994  1280  3000               	movlw	0
  5995  1281  00E1               	movwf	___fladd@a+1
  5996  1282  3000               	movlw	0
  5997  1283  00E0               	movwf	___fladd@a
  5998  1284                     l2551:
  5999  1284  17E2               	bsf	___fladd@a+2,7
  6000  1285                     l2553:
  6001  1285  01E3               	clrf	___fladd@a+3
  6002  1286  2A8F               	goto	l757
  6003  1287                     l2555:
  6004  1287  3000               	movlw	0
  6005  1288  00E3               	movwf	___fladd@a+3
  6006  1289  3000               	movlw	0
  6007  128A  00E2               	movwf	___fladd@a+2
  6008  128B  3000               	movlw	0
  6009  128C  00E1               	movwf	___fladd@a+1
  6010  128D  3000               	movlw	0
  6011  128E  00E0               	movwf	___fladd@a
  6012  128F                     l757:
  6013  128F  086E               	movf	___fladd@bexp,w
  6014  1290  026D               	subwf	___fladd@aexp,w
  6015  1291  1803               	skipnc
  6016  1292  2A94               	goto	u3451
  6017  1293  2A95               	goto	u3450
  6018  1294                     u3451:
  6019  1294  2AD9               	goto	l2591
  6020  1295                     u3450:
  6021  1295                     l2557:
  6022  1295  1F6C               	btfss	___fladd@signs,6
  6023  1296  2A98               	goto	u3461
  6024  1297  2A99               	goto	u3460
  6025  1298                     u3461:
  6026  1298  2A9D               	goto	l2561
  6027  1299                     u3460:
  6028  1299                     l2559:
  6029  1299  3080               	movlw	128
  6030  129A  00E4               	movwf	??___fladd
  6031  129B  0864               	movf	??___fladd,w
  6032  129C  06EC               	xorwf	___fladd@signs,f
  6033  129D                     l2561:
  6034  129D  086E               	movf	___fladd@bexp,w
  6035  129E  00E4               	movwf	??___fladd
  6036  129F  0864               	movf	??___fladd,w
  6037  12A0  00EF               	movwf	___fladd@grs
  6038  12A1                     l2563:
  6039  12A1  086D               	movf	___fladd@aexp,w
  6040  12A2  00E4               	movwf	??___fladd
  6041  12A3  0864               	movf	??___fladd,w
  6042  12A4  00EE               	movwf	___fladd@bexp
  6043  12A5                     l2565:
  6044  12A5  086F               	movf	___fladd@grs,w
  6045  12A6  00E4               	movwf	??___fladd
  6046  12A7  0864               	movf	??___fladd,w
  6047  12A8  00ED               	movwf	___fladd@aexp
  6048  12A9                     l2567:
  6049  12A9  085C               	movf	___fladd@b,w
  6050  12AA  00E4               	movwf	??___fladd
  6051  12AB  0864               	movf	??___fladd,w
  6052  12AC  00EF               	movwf	___fladd@grs
  6053  12AD                     l2569:
  6054  12AD  0860               	movf	___fladd@a,w
  6055  12AE  00E4               	movwf	??___fladd
  6056  12AF  0864               	movf	??___fladd,w
  6057  12B0  00DC               	movwf	___fladd@b
  6058  12B1                     l2571:
  6059  12B1  086F               	movf	___fladd@grs,w
  6060  12B2  00E4               	movwf	??___fladd
  6061  12B3  0864               	movf	??___fladd,w
  6062  12B4  00E0               	movwf	___fladd@a
  6063  12B5                     l2573:
  6064  12B5  085D               	movf	___fladd@b+1,w
  6065  12B6  00E4               	movwf	??___fladd
  6066  12B7  0864               	movf	??___fladd,w
  6067  12B8  00EF               	movwf	___fladd@grs
  6068  12B9                     l2575:
  6069  12B9  0861               	movf	___fladd@a+1,w
  6070  12BA  00E4               	movwf	??___fladd
  6071  12BB  0864               	movf	??___fladd,w
  6072  12BC  00DD               	movwf	___fladd@b+1
  6073  12BD                     l2577:
  6074  12BD  086F               	movf	___fladd@grs,w
  6075  12BE  00E4               	movwf	??___fladd
  6076  12BF  0864               	movf	??___fladd,w
  6077  12C0  00E1               	movwf	___fladd@a+1
  6078  12C1                     l2579:
  6079  12C1  085E               	movf	___fladd@b+2,w
  6080  12C2  00E4               	movwf	??___fladd
  6081  12C3  0864               	movf	??___fladd,w
  6082  12C4  00EF               	movwf	___fladd@grs
  6083  12C5                     l2581:
  6084  12C5  0862               	movf	___fladd@a+2,w
  6085  12C6  00E4               	movwf	??___fladd
  6086  12C7  0864               	movf	??___fladd,w
  6087  12C8  00DE               	movwf	___fladd@b+2
  6088  12C9                     l2583:
  6089  12C9  086F               	movf	___fladd@grs,w
  6090  12CA  00E4               	movwf	??___fladd
  6091  12CB  0864               	movf	??___fladd,w
  6092  12CC  00E2               	movwf	___fladd@a+2
  6093  12CD                     l2585:
  6094  12CD  085F               	movf	___fladd@b+3,w
  6095  12CE  00E4               	movwf	??___fladd
  6096  12CF  0864               	movf	??___fladd,w
  6097  12D0  00EF               	movwf	___fladd@grs
  6098  12D1                     l2587:
  6099  12D1  0863               	movf	___fladd@a+3,w
  6100  12D2  00E4               	movwf	??___fladd
  6101  12D3  0864               	movf	??___fladd,w
  6102  12D4  00DF               	movwf	___fladd@b+3
  6103  12D5                     l2589:
  6104  12D5  086F               	movf	___fladd@grs,w
  6105  12D6  00E4               	movwf	??___fladd
  6106  12D7  0864               	movf	??___fladd,w
  6107  12D8  00E3               	movwf	___fladd@a+3
  6108  12D9                     l2591:
  6109  12D9  01EF               	clrf	___fladd@grs
  6110  12DA                     l2593:
  6111  12DA  086D               	movf	___fladd@aexp,w
  6112  12DB  00E4               	movwf	??___fladd
  6113  12DC  01E5               	clrf	??___fladd+1
  6114  12DD  0865               	movf	??___fladd+1,w
  6115  12DE  00E7               	movwf	??___fladd+3
  6116  12DF  086E               	movf	___fladd@bexp,w
  6117  12E0  0264               	subwf	??___fladd,w
  6118  12E1  00E6               	movwf	??___fladd+2
  6119  12E2  1C03               	skipc
  6120  12E3  03E7               	decf	??___fladd+3,f
  6121  12E4  0867               	movf	??___fladd+3,w
  6122  12E5  3A80               	xorlw	128
  6123  12E6  00FF               	movwf	btemp+1
  6124  12E7  3080               	movlw	128
  6125  12E8  027F               	subwf	btemp+1,w
  6126  12E9  1D03               	skipz
  6127  12EA  2AED               	goto	u3475
  6128  12EB  301A               	movlw	26
  6129  12EC  0266               	subwf	??___fladd+2,w
  6130  12ED                     u3475:
  6131  12ED  1C03               	skipc
  6132  12EE  2AF0               	goto	u3471
  6133  12EF  2AF1               	goto	u3470
  6134  12F0                     u3471:
  6135  12F0  2B2E               	goto	l2609
  6136  12F1                     u3470:
  6137  12F1                     l2595:
  6138  12F1  1283               	bcf	3,5	;RP0=0, select bank0
  6139  12F2  1303               	bcf	3,6	;RP1=0, select bank0
  6140  12F3  085F               	movf	___fladd@b+3,w
  6141  12F4  045E               	iorwf	___fladd@b+2,w
  6142  12F5  045D               	iorwf	___fladd@b+1,w
  6143  12F6  045C               	iorwf	___fladd@b,w
  6144  12F7  1D03               	skipz
  6145  12F8  2AFA               	goto	u3481
  6146  12F9  2AFC               	goto	u3480
  6147  12FA                     u3481:
  6148  12FA  3001               	movlw	1
  6149  12FB  2AFD               	goto	u3490
  6150  12FC                     u3480:
  6151  12FC  3000               	movlw	0
  6152  12FD                     u3490:
  6153  12FD  00E4               	movwf	??___fladd
  6154  12FE  0864               	movf	??___fladd,w
  6155  12FF  00EF               	movwf	___fladd@grs
  6156  1300  3000               	movlw	0
  6157  1301  00DF               	movwf	___fladd@b+3
  6158  1302  3000               	movlw	0
  6159  1303  00DE               	movwf	___fladd@b+2
  6160  1304  3000               	movlw	0
  6161  1305  00DD               	movwf	___fladd@b+1
  6162  1306  3000               	movlw	0
  6163  1307  00DC               	movwf	___fladd@b
  6164  1308  086D               	movf	___fladd@aexp,w
  6165  1309  00E4               	movwf	??___fladd
  6166  130A  0864               	movf	??___fladd,w
  6167  130B  00EE               	movwf	___fladd@bexp
  6168  130C  2B36               	goto	l761
  6169  130D                     l763:
  6170  130D  1C6F               	btfss	___fladd@grs,0
  6171  130E  2B10               	goto	u3501
  6172  130F  2B11               	goto	u3500
  6173  1310                     u3501:
  6174  1310  2B1A               	goto	l2599
  6175  1311                     u3500:
  6176  1311                     l2597:
  6177  1311  086F               	movf	___fladd@grs,w
  6178  1312  00E4               	movwf	??___fladd
  6179  1313  1003               	clrc
  6180  1314  0C64               	rrf	??___fladd,w
  6181  1315  3801               	iorlw	1
  6182  1316  00E5               	movwf	??___fladd+1
  6183  1317  0865               	movf	??___fladd+1,w
  6184  1318  00EF               	movwf	___fladd@grs
  6185  1319  2B1C               	goto	l2601
  6186  131A                     l2599:
  6187  131A  1003               	clrc
  6188  131B  0CEF               	rrf	___fladd@grs,f
  6189  131C                     l2601:
  6190  131C  1C5C               	btfss	___fladd@b,0
  6191  131D  2B1F               	goto	u3511
  6192  131E  2B20               	goto	u3510
  6193  131F                     u3511:
  6194  131F  2B21               	goto	l2605
  6195  1320                     u3510:
  6196  1320                     l2603:
  6197  1320  17EF               	bsf	___fladd@grs,7
  6198  1321                     l2605:
  6199  1321  3001               	movlw	1
  6200  1322  00E4               	movwf	??___fladd
  6201  1323                     u3525:
  6202  1323  0D5F               	rlf	___fladd@b+3,w
  6203  1324  0CDF               	rrf	___fladd@b+3,f
  6204  1325  0CDE               	rrf	___fladd@b+2,f
  6205  1326  0CDD               	rrf	___fladd@b+1,f
  6206  1327  0CDC               	rrf	___fladd@b,f
  6207  1328  0BE4               	decfsz	??___fladd& (0+127),f
  6208  1329  2B23               	goto	u3525
  6209  132A                     l2607:
  6210  132A  3001               	movlw	1
  6211  132B  00E4               	movwf	??___fladd
  6212  132C  0864               	movf	??___fladd,w
  6213  132D  07EE               	addwf	___fladd@bexp,f
  6214  132E                     l2609:
  6215  132E  1283               	bcf	3,5	;RP0=0, select bank0
  6216  132F  1303               	bcf	3,6	;RP1=0, select bank0
  6217  1330  086D               	movf	___fladd@aexp,w
  6218  1331  026E               	subwf	___fladd@bexp,w
  6219  1332  1C03               	skipc
  6220  1333  2B35               	goto	u3531
  6221  1334  2B36               	goto	u3530
  6222  1335                     u3531:
  6223  1335  2B0D               	goto	l763
  6224  1336                     u3530:
  6225  1336                     l761:
  6226  1336  1B6C               	btfsc	___fladd@signs,6
  6227  1337  2B39               	goto	u3541
  6228  1338  2B3A               	goto	u3540
  6229  1339                     u3541:
  6230  1339  2B85               	goto	l2635
  6231  133A                     u3540:
  6232  133A                     l2611:
  6233  133A  086E               	movf	___fladd@bexp,w
  6234  133B  1D03               	btfss	3,2
  6235  133C  2B3E               	goto	u3551
  6236  133D  2B3F               	goto	u3550
  6237  133E                     u3551:
  6238  133E  2B48               	goto	l2617
  6239  133F                     u3550:
  6240  133F                     l2613:
  6241  133F  3000               	movlw	0
  6242  1340  00DF               	movwf	?___fladd+3
  6243  1341  3000               	movlw	0
  6244  1342  00DE               	movwf	?___fladd+2
  6245  1343  3000               	movlw	0
  6246  1344  00DD               	movwf	?___fladd+1
  6247  1345  3000               	movlw	0
  6248  1346  00DC               	movwf	?___fladd
  6249  1347  2CB3               	goto	l770
  6250  1348                     l2617:
  6251  1348  0860               	movf	___fladd@a,w
  6252  1349  07DC               	addwf	___fladd@b,f
  6253  134A  0861               	movf	___fladd@a+1,w
  6254  134B  1103               	clrz
  6255  134C  1803               	skipnc
  6256  134D  3E01               	addlw	1
  6257  134E  1903               	skipnz
  6258  134F  2B51               	goto	u3561
  6259  1350  07DD               	addwf	___fladd@b+1,f
  6260  1351                     u3561:
  6261  1351  0862               	movf	___fladd@a+2,w
  6262  1352  1103               	clrz
  6263  1353  1803               	skipnc
  6264  1354  3E01               	addlw	1
  6265  1355  1903               	skipnz
  6266  1356  2B58               	goto	u3562
  6267  1357  07DE               	addwf	___fladd@b+2,f
  6268  1358                     u3562:
  6269  1358  0863               	movf	___fladd@a+3,w
  6270  1359  1103               	clrz
  6271  135A  1803               	skipnc
  6272  135B  3E01               	addlw	1
  6273  135C  1903               	skipnz
  6274  135D  2B5F               	goto	u3563
  6275  135E  07DF               	addwf	___fladd@b+3,f
  6276  135F                     u3563:
  6277  135F                     l2619:
  6278  135F  1C5F               	btfss	___fladd@b+3,0
  6279  1360  2B62               	goto	u3571
  6280  1361  2B63               	goto	u3570
  6281  1362                     u3571:
  6282  1362  2C39               	goto	l2669
  6283  1363                     u3570:
  6284  1363                     l2621:
  6285  1363  1C6F               	btfss	___fladd@grs,0
  6286  1364  2B66               	goto	u3581
  6287  1365  2B67               	goto	u3580
  6288  1366                     u3581:
  6289  1366  2B70               	goto	l2625
  6290  1367                     u3580:
  6291  1367                     l2623:
  6292  1367  086F               	movf	___fladd@grs,w
  6293  1368  00E4               	movwf	??___fladd
  6294  1369  1003               	clrc
  6295  136A  0C64               	rrf	??___fladd,w
  6296  136B  3801               	iorlw	1
  6297  136C  00E5               	movwf	??___fladd+1
  6298  136D  0865               	movf	??___fladd+1,w
  6299  136E  00EF               	movwf	___fladd@grs
  6300  136F  2B72               	goto	l2627
  6301  1370                     l2625:
  6302  1370  1003               	clrc
  6303  1371  0CEF               	rrf	___fladd@grs,f
  6304  1372                     l2627:
  6305  1372  1C5C               	btfss	___fladd@b,0
  6306  1373  2B75               	goto	u3591
  6307  1374  2B76               	goto	u3590
  6308  1375                     u3591:
  6309  1375  2B77               	goto	l2631
  6310  1376                     u3590:
  6311  1376                     l2629:
  6312  1376  17EF               	bsf	___fladd@grs,7
  6313  1377                     l2631:
  6314  1377  3001               	movlw	1
  6315  1378  00E4               	movwf	??___fladd
  6316  1379                     u3605:
  6317  1379  0D5F               	rlf	___fladd@b+3,w
  6318  137A  0CDF               	rrf	___fladd@b+3,f
  6319  137B  0CDE               	rrf	___fladd@b+2,f
  6320  137C  0CDD               	rrf	___fladd@b+1,f
  6321  137D  0CDC               	rrf	___fladd@b,f
  6322  137E  0BE4               	decfsz	??___fladd& (0+127),f
  6323  137F  2B79               	goto	u3605
  6324  1380                     l2633:
  6325  1380  3001               	movlw	1
  6326  1381  00E4               	movwf	??___fladd
  6327  1382  0864               	movf	??___fladd,w
  6328  1383  07EE               	addwf	___fladd@bexp,f
  6329  1384  2C39               	goto	l2669
  6330  1385                     l2635:
  6331  1385  085F               	movf	___fladd@b+3,w
  6332  1386  3A80               	xorlw	128
  6333  1387  00FF               	movwf	btemp+1
  6334  1388  0863               	movf	___fladd@a+3,w
  6335  1389  3A80               	xorlw	128
  6336  138A  027F               	subwf	btemp+1,w
  6337  138B  1D03               	skipz
  6338  138C  2B97               	goto	u3613
  6339  138D  0862               	movf	___fladd@a+2,w
  6340  138E  025E               	subwf	___fladd@b+2,w
  6341  138F  1D03               	skipz
  6342  1390  2B97               	goto	u3613
  6343  1391  0861               	movf	___fladd@a+1,w
  6344  1392  025D               	subwf	___fladd@b+1,w
  6345  1393  1D03               	skipz
  6346  1394  2B97               	goto	u3613
  6347  1395  0860               	movf	___fladd@a,w
  6348  1396  025C               	subwf	___fladd@b,w
  6349  1397                     u3613:
  6350  1397  1803               	skipnc
  6351  1398  2B9A               	goto	u3611
  6352  1399  2B9B               	goto	u3610
  6353  139A                     u3611:
  6354  139A  2BF3               	goto	l2645
  6355  139B                     u3610:
  6356  139B                     l2637:
  6357  139B  30FF               	movlw	255
  6358  139C  00E4               	movwf	??___fladd
  6359  139D  30FF               	movlw	255
  6360  139E  00E5               	movwf	??___fladd+1
  6361  139F  30FF               	movlw	255
  6362  13A0  00E6               	movwf	??___fladd+2
  6363  13A1  30FF               	movlw	255
  6364  13A2  00E7               	movwf	??___fladd+3
  6365  13A3  0860               	movf	___fladd@a,w
  6366  13A4  00E8               	movwf	??___fladd+4
  6367  13A5  0861               	movf	___fladd@a+1,w
  6368  13A6  00E9               	movwf	??___fladd+5
  6369  13A7  0862               	movf	___fladd@a+2,w
  6370  13A8  00EA               	movwf	??___fladd+6
  6371  13A9  0863               	movf	___fladd@a+3,w
  6372  13AA  00EB               	movwf	??___fladd+7
  6373  13AB  085C               	movf	___fladd@b,w
  6374  13AC  02E8               	subwf	??___fladd+4,f
  6375  13AD  085D               	movf	___fladd@b+1,w
  6376  13AE  1C03               	skipc
  6377  13AF  0F5D               	incfsz	___fladd@b+1,w
  6378  13B0  2BB2               	goto	u3621
  6379  13B1  2BB3               	goto	u3622
  6380  13B2                     u3621:
  6381  13B2  02E9               	subwf	??___fladd+5,f
  6382  13B3                     u3622:
  6383  13B3  085E               	movf	___fladd@b+2,w
  6384  13B4  1C03               	skipc
  6385  13B5  0F5E               	incfsz	___fladd@b+2,w
  6386  13B6  2BB8               	goto	u3623
  6387  13B7  2BB9               	goto	u3624
  6388  13B8                     u3623:
  6389  13B8  02EA               	subwf	??___fladd+6,f
  6390  13B9                     u3624:
  6391  13B9  085F               	movf	___fladd@b+3,w
  6392  13BA  1C03               	skipc
  6393  13BB  0F5F               	incfsz	___fladd@b+3,w
  6394  13BC  2BBE               	goto	u3625
  6395  13BD  2BBF               	goto	u3626
  6396  13BE                     u3625:
  6397  13BE  02EB               	subwf	??___fladd+7,f
  6398  13BF                     u3626:
  6399  13BF  0868               	movf	??___fladd+4,w
  6400  13C0  07E4               	addwf	??___fladd,f
  6401  13C1  0869               	movf	??___fladd+5,w
  6402  13C2  1803               	skipnc
  6403  13C3  0F69               	incfsz	??___fladd+5,w
  6404  13C4  2BC6               	goto	u3630
  6405  13C5  2BC7               	goto	u3631
  6406  13C6                     u3630:
  6407  13C6  07E5               	addwf	??___fladd+1,f
  6408  13C7                     u3631:
  6409  13C7  086A               	movf	??___fladd+6,w
  6410  13C8  1803               	skipnc
  6411  13C9  0F6A               	incfsz	??___fladd+6,w
  6412  13CA  2BCC               	goto	u3632
  6413  13CB  2BCD               	goto	u3633
  6414  13CC                     u3632:
  6415  13CC  07E6               	addwf	??___fladd+2,f
  6416  13CD                     u3633:
  6417  13CD  086B               	movf	??___fladd+7,w
  6418  13CE  1803               	skipnc
  6419  13CF  0A6B               	incf	??___fladd+7,w
  6420  13D0  07E7               	addwf	??___fladd+3,f
  6421  13D1  0867               	movf	??___fladd+3,w
  6422  13D2  00DF               	movwf	___fladd@b+3
  6423  13D3  0866               	movf	??___fladd+2,w
  6424  13D4  00DE               	movwf	___fladd@b+2
  6425  13D5  0865               	movf	??___fladd+1,w
  6426  13D6  00DD               	movwf	___fladd@b+1
  6427  13D7  0864               	movf	??___fladd,w
  6428  13D8  00DC               	movwf	___fladd@b
  6429  13D9                     l2639:
  6430  13D9  3080               	movlw	128
  6431  13DA  00E4               	movwf	??___fladd
  6432  13DB  0864               	movf	??___fladd,w
  6433  13DC  06EC               	xorwf	___fladd@signs,f
  6434  13DD  09EF               	comf	___fladd@grs,f
  6435  13DE  0AEF               	incf	___fladd@grs,f
  6436  13DF                     l2641:
  6437  13DF  086F               	movf	___fladd@grs,w
  6438  13E0  1D03               	btfss	3,2
  6439  13E1  2BE3               	goto	u3641
  6440  13E2  2BE4               	goto	u3640
  6441  13E3                     u3641:
  6442  13E3  2C01               	goto	l778
  6443  13E4                     u3640:
  6444  13E4                     l2643:
  6445  13E4  3001               	movlw	1
  6446  13E5  07DC               	addwf	___fladd@b,f
  6447  13E6  3000               	movlw	0
  6448  13E7  1803               	skipnc
  6449  13E8  3001               	movlw	1
  6450  13E9  07DD               	addwf	___fladd@b+1,f
  6451  13EA  3000               	movlw	0
  6452  13EB  1803               	skipnc
  6453  13EC  3001               	movlw	1
  6454  13ED  07DE               	addwf	___fladd@b+2,f
  6455  13EE  3000               	movlw	0
  6456  13EF  1803               	skipnc
  6457  13F0  3001               	movlw	1
  6458  13F1  07DF               	addwf	___fladd@b+3,f
  6459  13F2  2C01               	goto	l778
  6460  13F3                     l2645:
  6461  13F3  0860               	movf	___fladd@a,w
  6462  13F4  02DC               	subwf	___fladd@b,f
  6463  13F5  0861               	movf	___fladd@a+1,w
  6464  13F6  1C03               	skipc
  6465  13F7  0F61               	incfsz	___fladd@a+1,w
  6466  13F8  02DD               	subwf	___fladd@b+1,f
  6467  13F9  0862               	movf	___fladd@a+2,w
  6468  13FA  1C03               	skipc
  6469  13FB  0F62               	incfsz	___fladd@a+2,w
  6470  13FC  02DE               	subwf	___fladd@b+2,f
  6471  13FD  0863               	movf	___fladd@a+3,w
  6472  13FE  1C03               	skipc
  6473  13FF  0F63               	incfsz	___fladd@a+3,w
  6474  1400  02DF               	subwf	___fladd@b+3,f
  6475  1401                     l778:
  6476  1401  085F               	movf	___fladd@b+3,w
  6477  1402  045E               	iorwf	___fladd@b+2,w
  6478  1403  045D               	iorwf	___fladd@b+1,w
  6479  1404  045C               	iorwf	___fladd@b,w
  6480  1405  1D03               	skipz
  6481  1406  2C08               	goto	u3651
  6482  1407  2C09               	goto	u3650
  6483  1408                     u3651:
  6484  1408  2C35               	goto	l2667
  6485  1409                     u3650:
  6486  1409                     l2647:
  6487  1409  086F               	movf	___fladd@grs,w
  6488  140A  1D03               	btfss	3,2
  6489  140B  2C0D               	goto	u3661
  6490  140C  2C0E               	goto	u3660
  6491  140D                     u3661:
  6492  140D  2C35               	goto	l2667
  6493  140E                     u3660:
  6494  140E                     l2649:
  6495  140E  3000               	movlw	0
  6496  140F  00DF               	movwf	?___fladd+3
  6497  1410  3000               	movlw	0
  6498  1411  00DE               	movwf	?___fladd+2
  6499  1412  3000               	movlw	0
  6500  1413  00DD               	movwf	?___fladd+1
  6501  1414  3000               	movlw	0
  6502  1415  00DC               	movwf	?___fladd
  6503  1416  2CB3               	goto	l770
  6504  1417                     l2653:
  6505  1417  3001               	movlw	1
  6506  1418  00E4               	movwf	??___fladd
  6507  1419                     u3675:
  6508  1419  1003               	clrc
  6509  141A  0DDC               	rlf	___fladd@b,f
  6510  141B  0DDD               	rlf	___fladd@b+1,f
  6511  141C  0DDE               	rlf	___fladd@b+2,f
  6512  141D  0DDF               	rlf	___fladd@b+3,f
  6513  141E  0BE4               	decfsz	??___fladd,f
  6514  141F  2C19               	goto	u3675
  6515  1420                     l2655:
  6516  1420  1FEF               	btfss	___fladd@grs,7
  6517  1421  2C23               	goto	u3681
  6518  1422  2C24               	goto	u3680
  6519  1423                     u3681:
  6520  1423  2C25               	goto	l782
  6521  1424                     u3680:
  6522  1424                     l2657:
  6523  1424  145C               	bsf	___fladd@b,0
  6524  1425                     l782:
  6525  1425  1C6F               	btfss	___fladd@grs,0
  6526  1426  2C28               	goto	u3691
  6527  1427  2C29               	goto	u3690
  6528  1428                     u3691:
  6529  1428  2C2C               	goto	l2661
  6530  1429                     u3690:
  6531  1429                     l2659:
  6532  1429  1403               	setc
  6533  142A  0DEF               	rlf	___fladd@grs,f
  6534  142B  2C2E               	goto	l2663
  6535  142C                     l2661:
  6536  142C  1003               	clrc
  6537  142D  0DEF               	rlf	___fladd@grs,f
  6538  142E                     l2663:
  6539  142E  086E               	movf	___fladd@bexp,w
  6540  142F  1903               	btfsc	3,2
  6541  1430  2C32               	goto	u3701
  6542  1431  2C33               	goto	u3700
  6543  1432                     u3701:
  6544  1432  2C35               	goto	l2667
  6545  1433                     u3700:
  6546  1433                     l2665:
  6547  1433  3001               	movlw	1
  6548  1434  02EE               	subwf	___fladd@bexp,f
  6549  1435                     l2667:
  6550  1435  1FDE               	btfss	___fladd@b+2,7
  6551  1436  2C38               	goto	u3711
  6552  1437  2C39               	goto	u3710
  6553  1438                     u3711:
  6554  1438  2C17               	goto	l2653
  6555  1439                     u3710:
  6556  1439                     l2669:
  6557  1439  01ED               	clrf	___fladd@aexp
  6558  143A                     l2671:
  6559  143A  1FEF               	btfss	___fladd@grs,7
  6560  143B  2C3D               	goto	u3721
  6561  143C  2C3E               	goto	u3720
  6562  143D                     u3721:
  6563  143D  2C4C               	goto	l2679
  6564  143E                     u3720:
  6565  143E                     l2673:
  6566  143E  086F               	movf	___fladd@grs,w
  6567  143F  397F               	andlw	127
  6568  1440  1903               	btfsc	3,2
  6569  1441  2C43               	goto	u3731
  6570  1442  2C44               	goto	u3730
  6571  1443                     u3731:
  6572  1443  2C47               	goto	l788
  6573  1444                     u3730:
  6574  1444                     l2675:
  6575  1444  01ED               	clrf	___fladd@aexp
  6576  1445  0AED               	incf	___fladd@aexp,f
  6577  1446  2C4C               	goto	l2679
  6578  1447                     l788:
  6579  1447  1C5C               	btfss	___fladd@b,0
  6580  1448  2C4A               	goto	u3741
  6581  1449  2C4B               	goto	u3740
  6582  144A                     u3741:
  6583  144A  2C4C               	goto	l2679
  6584  144B                     u3740:
  6585  144B  2C44               	goto	l2675
  6586  144C                     l2679:
  6587  144C  086D               	movf	___fladd@aexp,w
  6588  144D  1903               	btfsc	3,2
  6589  144E  2C50               	goto	u3751
  6590  144F  2C51               	goto	u3750
  6591  1450                     u3751:
  6592  1450  2C85               	goto	l791
  6593  1451                     u3750:
  6594  1451                     l2681:
  6595  1451  3001               	movlw	1
  6596  1452  07DC               	addwf	___fladd@b,f
  6597  1453  3000               	movlw	0
  6598  1454  1803               	skipnc
  6599  1455  3001               	movlw	1
  6600  1456  07DD               	addwf	___fladd@b+1,f
  6601  1457  3000               	movlw	0
  6602  1458  1803               	skipnc
  6603  1459  3001               	movlw	1
  6604  145A  07DE               	addwf	___fladd@b+2,f
  6605  145B  3000               	movlw	0
  6606  145C  1803               	skipnc
  6607  145D  3001               	movlw	1
  6608  145E  07DF               	addwf	___fladd@b+3,f
  6609  145F                     l2683:
  6610  145F  1C5F               	btfss	___fladd@b+3,0
  6611  1460  2C62               	goto	u3761
  6612  1461  2C63               	goto	u3760
  6613  1462                     u3761:
  6614  1462  2C85               	goto	l791
  6615  1463                     u3760:
  6616  1463                     l2685:
  6617  1463  085C               	movf	___fladd@b,w
  6618  1464  00E4               	movwf	??___fladd
  6619  1465  085D               	movf	___fladd@b+1,w
  6620  1466  00E5               	movwf	??___fladd+1
  6621  1467  085E               	movf	___fladd@b+2,w
  6622  1468  00E6               	movwf	??___fladd+2
  6623  1469  085F               	movf	___fladd@b+3,w
  6624  146A  00E7               	movwf	??___fladd+3
  6625  146B  3001               	movlw	1
  6626  146C  00E8               	movwf	??___fladd+4
  6627  146D                     u3775:
  6628  146D  0D67               	rlf	??___fladd+3,w
  6629  146E  0CE7               	rrf	??___fladd+3,f
  6630  146F  0CE6               	rrf	??___fladd+2,f
  6631  1470  0CE5               	rrf	??___fladd+1,f
  6632  1471  0CE4               	rrf	??___fladd,f
  6633  1472                     u3770:
  6634  1472  0BE8               	decfsz	??___fladd+4,f
  6635  1473  2C6D               	goto	u3775
  6636  1474  0867               	movf	??___fladd+3,w
  6637  1475  00DF               	movwf	___fladd@b+3
  6638  1476  0866               	movf	??___fladd+2,w
  6639  1477  00DE               	movwf	___fladd@b+2
  6640  1478  0865               	movf	??___fladd+1,w
  6641  1479  00DD               	movwf	___fladd@b+1
  6642  147A  0864               	movf	??___fladd,w
  6643  147B  00DC               	movwf	___fladd@b
  6644  147C  0A6E               	incf	___fladd@bexp,w
  6645  147D  1903               	btfsc	3,2
  6646  147E  2C80               	goto	u3781
  6647  147F  2C81               	goto	u3780
  6648  1480                     u3781:
  6649  1480  2C85               	goto	l791
  6650  1481                     u3780:
  6651  1481                     l2687:
  6652  1481  3001               	movlw	1
  6653  1482  00E4               	movwf	??___fladd
  6654  1483  0864               	movf	??___fladd,w
  6655  1484  07EE               	addwf	___fladd@bexp,f
  6656  1485                     l791:
  6657  1485  0A6E               	incf	___fladd@bexp,w
  6658  1486  1903               	btfsc	3,2
  6659  1487  2C89               	goto	u3791
  6660  1488  2C8A               	goto	u3790
  6661  1489                     u3791:
  6662  1489  2C8F               	goto	l2691
  6663  148A                     u3790:
  6664  148A                     l2689:
  6665  148A  086E               	movf	___fladd@bexp,w
  6666  148B  1D03               	btfss	3,2
  6667  148C  2C8E               	goto	u3801
  6668  148D  2C8F               	goto	u3800
  6669  148E                     u3801:
  6670  148E  2C9D               	goto	l2697
  6671  148F                     u3800:
  6672  148F                     l2691:
  6673  148F  3000               	movlw	0
  6674  1490  00DF               	movwf	___fladd@b+3
  6675  1491  3000               	movlw	0
  6676  1492  00DE               	movwf	___fladd@b+2
  6677  1493  3000               	movlw	0
  6678  1494  00DD               	movwf	___fladd@b+1
  6679  1495  3000               	movlw	0
  6680  1496  00DC               	movwf	___fladd@b
  6681  1497                     l2693:
  6682  1497  086E               	movf	___fladd@bexp,w
  6683  1498  1D03               	btfss	3,2
  6684  1499  2C9B               	goto	u3811
  6685  149A  2C9C               	goto	u3810
  6686  149B                     u3811:
  6687  149B  2C9D               	goto	l2697
  6688  149C                     u3810:
  6689  149C                     l2695:
  6690  149C  01EC               	clrf	___fladd@signs
  6691  149D                     l2697:
  6692  149D  1C6E               	btfss	___fladd@bexp,0
  6693  149E  2CA0               	goto	u3821
  6694  149F  2CA1               	goto	u3820
  6695  14A0                     u3821:
  6696  14A0  2CA3               	goto	l2701
  6697  14A1                     u3820:
  6698  14A1                     l2699:
  6699  14A1  17DE               	bsf	___fladd@b+2,7
  6700  14A2  2CA7               	goto	l799
  6701  14A3                     l2701:
  6702  14A3  307F               	movlw	127
  6703  14A4  00E4               	movwf	??___fladd
  6704  14A5  0864               	movf	??___fladd,w
  6705  14A6  05DE               	andwf	___fladd@b+2,f
  6706  14A7                     l799:
  6707  14A7  086E               	movf	___fladd@bexp,w
  6708  14A8  00E4               	movwf	??___fladd
  6709  14A9  1003               	clrc
  6710  14AA  0C64               	rrf	??___fladd,w
  6711  14AB  00E5               	movwf	??___fladd+1
  6712  14AC  0865               	movf	??___fladd+1,w
  6713  14AD  00DF               	movwf	___fladd@b+3
  6714  14AE                     l2703:
  6715  14AE  1FEC               	btfss	___fladd@signs,7
  6716  14AF  2CB1               	goto	u3831
  6717  14B0  2CB2               	goto	u3830
  6718  14B1                     u3831:
  6719  14B1  2CB3               	goto	l800
  6720  14B2                     u3830:
  6721  14B2                     l2705:
  6722  14B2  17DF               	bsf	___fladd@b+3,7
  6723  14B3                     l800:
  6724  14B3                     l770:
  6725  14B3  0008               	return
  6726  14B4                     __end_of___fladd:
  6727                           
  6728                           	psect	text17
  6729  18D0                     __ptext17:	
  6730 ;; *************** function ___flneg *****************
  6731 ;; Defined at:
  6732 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;  f1              4    0[BANK0 ] unsigned char 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;		None
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  4    0[BANK0 ] unsigned char 
  6739 ;; Registers used:
  6740 ;;		wreg
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6746 ;;      Params:         0       4       0       0       0
  6747 ;;      Locals:         0       0       0       0       0
  6748 ;;      Temps:          0       0       0       0       0
  6749 ;;      Totals:         0       4       0       0       0
  6750 ;;Total ram usage:        4 bytes
  6751 ;; Hardware stack levels used:    1
  6752 ;; Hardware stack levels required when called:    2
  6753 ;; This function calls:
  6754 ;;		Nothing
  6755 ;; This function is called by:
  6756 ;;		_sprintf
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760                           
  6761                           ;psect for function ___flneg
  6762  18D0                     ___flneg:
  6763  18D0                     l4125:	
  6764                           ;incstack = 0
  6765                           ; Regs used in ___flneg: [wreg]
  6766                           
  6767  18D0  1283               	bcf	3,5	;RP0=0, select bank0
  6768  18D1  1303               	bcf	3,6	;RP1=0, select bank0
  6769  18D2  0823               	movf	___flneg@f1+3,w
  6770  18D3  0422               	iorwf	___flneg@f1+2,w
  6771  18D4  0421               	iorwf	___flneg@f1+1,w
  6772  18D5  0420               	iorwf	___flneg@f1,w
  6773  18D6  1903               	skipnz
  6774  18D7  28D9               	goto	u7071
  6775  18D8  28DA               	goto	u7070
  6776  18D9                     u7071:
  6777  18D9  28DC               	goto	l4129
  6778  18DA                     u7070:
  6779  18DA                     l4127:
  6780  18DA  3080               	movlw	128
  6781  18DB  06A3               	xorwf	___flneg@f1+3,f
  6782  18DC                     l4129:
  6783  18DC                     l629:
  6784  18DC  0008               	return
  6785  18DD                     __end_of___flneg:
  6786                           
  6787                           	psect	text18
  6788  10CA                     __ptext18:	
  6789 ;; *************** function ___flge *****************
  6790 ;; Defined at:
  6791 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;  ff1             4    0[BANK0 ] unsigned char 
  6794 ;;  ff2             4    4[BANK0 ] unsigned char 
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;		None
  6797 ;; Return value:  Size  Location     Type
  6798 ;;		None               void
  6799 ;; Registers used:
  6800 ;;		wreg, status,2, status,0
  6801 ;; Tracked objects:
  6802 ;;		On entry : 0/0
  6803 ;;		On exit  : 0/0
  6804 ;;		Unchanged: 0/0
  6805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6806 ;;      Params:         0       8       0       0       0
  6807 ;;      Locals:         0       0       0       0       0
  6808 ;;      Temps:          0       4       0       0       0
  6809 ;;      Totals:         0      12       0       0       0
  6810 ;;Total ram usage:       12 bytes
  6811 ;; Hardware stack levels used:    1
  6812 ;; Hardware stack levels required when called:    2
  6813 ;; This function calls:
  6814 ;;		Nothing
  6815 ;; This function is called by:
  6816 ;;		_sprintf
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           
  6821                           ;psect for function ___flge
  6822  10CA                     ___flge:
  6823  10CA                     l4105:	
  6824                           ;incstack = 0
  6825                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6826                           
  6827  10CA  3000               	movlw	0
  6828  10CB  1283               	bcf	3,5	;RP0=0, select bank0
  6829  10CC  1303               	bcf	3,6	;RP1=0, select bank0
  6830  10CD  0520               	andwf	___flge@ff1,w
  6831  10CE  00A8               	movwf	??___flge
  6832  10CF  3000               	movlw	0
  6833  10D0  0521               	andwf	___flge@ff1+1,w
  6834  10D1  00A9               	movwf	??___flge+1
  6835  10D2  3080               	movlw	128
  6836  10D3  0522               	andwf	___flge@ff1+2,w
  6837  10D4  00AA               	movwf	??___flge+2
  6838  10D5  307F               	movlw	127
  6839  10D6  0523               	andwf	___flge@ff1+3,w
  6840  10D7  00AB               	movwf	??___flge+3
  6841  10D8  082B               	movf	??___flge+3,w
  6842  10D9  042A               	iorwf	??___flge+2,w
  6843  10DA  0429               	iorwf	??___flge+1,w
  6844  10DB  0428               	iorwf	??___flge,w
  6845  10DC  1D03               	skipz
  6846  10DD  28DF               	goto	u7001
  6847  10DE  28E0               	goto	u7000
  6848  10DF                     u7001:
  6849  10DF  28E8               	goto	l621
  6850  10E0                     u7000:
  6851  10E0                     l4107:
  6852  10E0  3000               	movlw	0
  6853  10E1  00A3               	movwf	___flge@ff1+3
  6854  10E2  3000               	movlw	0
  6855  10E3  00A2               	movwf	___flge@ff1+2
  6856  10E4  3000               	movlw	0
  6857  10E5  00A1               	movwf	___flge@ff1+1
  6858  10E6  3000               	movlw	0
  6859  10E7  00A0               	movwf	___flge@ff1
  6860  10E8                     l621:
  6861  10E8  3000               	movlw	0
  6862  10E9  0524               	andwf	___flge@ff2,w
  6863  10EA  00A8               	movwf	??___flge
  6864  10EB  3000               	movlw	0
  6865  10EC  0525               	andwf	___flge@ff2+1,w
  6866  10ED  00A9               	movwf	??___flge+1
  6867  10EE  3080               	movlw	128
  6868  10EF  0526               	andwf	___flge@ff2+2,w
  6869  10F0  00AA               	movwf	??___flge+2
  6870  10F1  307F               	movlw	127
  6871  10F2  0527               	andwf	___flge@ff2+3,w
  6872  10F3  00AB               	movwf	??___flge+3
  6873  10F4  082B               	movf	??___flge+3,w
  6874  10F5  042A               	iorwf	??___flge+2,w
  6875  10F6  0429               	iorwf	??___flge+1,w
  6876  10F7  0428               	iorwf	??___flge,w
  6877  10F8  1D03               	skipz
  6878  10F9  28FB               	goto	u7011
  6879  10FA  28FC               	goto	u7010
  6880  10FB                     u7011:
  6881  10FB  2904               	goto	l4111
  6882  10FC                     u7010:
  6883  10FC                     l4109:
  6884  10FC  3000               	movlw	0
  6885  10FD  00A7               	movwf	___flge@ff2+3
  6886  10FE  3000               	movlw	0
  6887  10FF  00A6               	movwf	___flge@ff2+2
  6888  1100  3000               	movlw	0
  6889  1101  00A5               	movwf	___flge@ff2+1
  6890  1102  3000               	movlw	0
  6891  1103  00A4               	movwf	___flge@ff2
  6892  1104                     l4111:
  6893  1104  1FA3               	btfss	___flge@ff1+3,7
  6894  1105  2907               	goto	u7021
  6895  1106  2908               	goto	u7020
  6896  1107                     u7021:
  6897  1107  292C               	goto	l4115
  6898  1108                     u7020:
  6899  1108                     l4113:
  6900  1108  3000               	movlw	0
  6901  1109  00A8               	movwf	??___flge
  6902  110A  3000               	movlw	0
  6903  110B  00A9               	movwf	??___flge+1
  6904  110C  3000               	movlw	0
  6905  110D  00AA               	movwf	??___flge+2
  6906  110E  3080               	movlw	128
  6907  110F  00AB               	movwf	??___flge+3
  6908  1110  0820               	movf	___flge@ff1,w
  6909  1111  02A8               	subwf	??___flge,f
  6910  1112  0821               	movf	___flge@ff1+1,w
  6911  1113  1C03               	skipc
  6912  1114  0F21               	incfsz	___flge@ff1+1,w
  6913  1115  2917               	goto	u7031
  6914  1116  2918               	goto	u7032
  6915  1117                     u7031:
  6916  1117  02A9               	subwf	??___flge+1,f
  6917  1118                     u7032:
  6918  1118  0822               	movf	___flge@ff1+2,w
  6919  1119  1C03               	skipc
  6920  111A  0F22               	incfsz	___flge@ff1+2,w
  6921  111B  291D               	goto	u7033
  6922  111C  291E               	goto	u7034
  6923  111D                     u7033:
  6924  111D  02AA               	subwf	??___flge+2,f
  6925  111E                     u7034:
  6926  111E  0823               	movf	___flge@ff1+3,w
  6927  111F  1C03               	skipc
  6928  1120  0F23               	incfsz	___flge@ff1+3,w
  6929  1121  2923               	goto	u7035
  6930  1122  2924               	goto	u7036
  6931  1123                     u7035:
  6932  1123  02AB               	subwf	??___flge+3,f
  6933  1124                     u7036:
  6934  1124  082B               	movf	??___flge+3,w
  6935  1125  00A3               	movwf	___flge@ff1+3
  6936  1126  082A               	movf	??___flge+2,w
  6937  1127  00A2               	movwf	___flge@ff1+2
  6938  1128  0829               	movf	??___flge+1,w
  6939  1129  00A1               	movwf	___flge@ff1+1
  6940  112A  0828               	movf	??___flge,w
  6941  112B  00A0               	movwf	___flge@ff1
  6942  112C                     l4115:
  6943  112C  1FA7               	btfss	___flge@ff2+3,7
  6944  112D  292F               	goto	u7041
  6945  112E  2930               	goto	u7040
  6946  112F                     u7041:
  6947  112F  2954               	goto	l624
  6948  1130                     u7040:
  6949  1130                     l4117:
  6950  1130  3000               	movlw	0
  6951  1131  00A8               	movwf	??___flge
  6952  1132  3000               	movlw	0
  6953  1133  00A9               	movwf	??___flge+1
  6954  1134  3000               	movlw	0
  6955  1135  00AA               	movwf	??___flge+2
  6956  1136  3080               	movlw	128
  6957  1137  00AB               	movwf	??___flge+3
  6958  1138  0824               	movf	___flge@ff2,w
  6959  1139  02A8               	subwf	??___flge,f
  6960  113A  0825               	movf	___flge@ff2+1,w
  6961  113B  1C03               	skipc
  6962  113C  0F25               	incfsz	___flge@ff2+1,w
  6963  113D  293F               	goto	u7051
  6964  113E  2940               	goto	u7052
  6965  113F                     u7051:
  6966  113F  02A9               	subwf	??___flge+1,f
  6967  1140                     u7052:
  6968  1140  0826               	movf	___flge@ff2+2,w
  6969  1141  1C03               	skipc
  6970  1142  0F26               	incfsz	___flge@ff2+2,w
  6971  1143  2945               	goto	u7053
  6972  1144  2946               	goto	u7054
  6973  1145                     u7053:
  6974  1145  02AA               	subwf	??___flge+2,f
  6975  1146                     u7054:
  6976  1146  0827               	movf	___flge@ff2+3,w
  6977  1147  1C03               	skipc
  6978  1148  0F27               	incfsz	___flge@ff2+3,w
  6979  1149  294B               	goto	u7055
  6980  114A  294C               	goto	u7056
  6981  114B                     u7055:
  6982  114B  02AB               	subwf	??___flge+3,f
  6983  114C                     u7056:
  6984  114C  082B               	movf	??___flge+3,w
  6985  114D  00A7               	movwf	___flge@ff2+3
  6986  114E  082A               	movf	??___flge+2,w
  6987  114F  00A6               	movwf	___flge@ff2+2
  6988  1150  0829               	movf	??___flge+1,w
  6989  1151  00A5               	movwf	___flge@ff2+1
  6990  1152  0828               	movf	??___flge,w
  6991  1153  00A4               	movwf	___flge@ff2
  6992  1154                     l624:
  6993  1154  3080               	movlw	128
  6994  1155  06A3               	xorwf	___flge@ff1+3,f
  6995  1156  3080               	movlw	128
  6996  1157  06A7               	xorwf	___flge@ff2+3,f
  6997  1158  0827               	movf	___flge@ff2+3,w
  6998  1159  0223               	subwf	___flge@ff1+3,w
  6999  115A  1D03               	skipz
  7000  115B  2966               	goto	u7065
  7001  115C  0826               	movf	___flge@ff2+2,w
  7002  115D  0222               	subwf	___flge@ff1+2,w
  7003  115E  1D03               	skipz
  7004  115F  2966               	goto	u7065
  7005  1160  0825               	movf	___flge@ff2+1,w
  7006  1161  0221               	subwf	___flge@ff1+1,w
  7007  1162  1D03               	skipz
  7008  1163  2966               	goto	u7065
  7009  1164  0824               	movf	___flge@ff2,w
  7010  1165  0220               	subwf	___flge@ff1,w
  7011  1166                     u7065:
  7012  1166  1803               	skipnc
  7013  1167  2969               	goto	u7061
  7014  1168  296A               	goto	u7060
  7015  1169                     u7061:
  7016  1169  296C               	goto	l4121
  7017  116A                     u7060:
  7018  116A                     l4119:
  7019  116A  1003               	clrc
  7020  116B  296D               	goto	l625
  7021  116C                     l4121:
  7022  116C  1403               	setc
  7023  116D                     l625:
  7024  116D  0008               	return
  7025  116E                     __end_of___flge:
  7026                           
  7027                           	psect	text19
  7028  1B8B                     __ptext19:	
  7029 ;; *************** function ___fleq *****************
  7030 ;; Defined at:
  7031 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;  ff1             4    0[BANK0 ] unsigned char 
  7034 ;;  ff2             4    4[BANK0 ] unsigned char 
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;		None
  7037 ;; Return value:  Size  Location     Type
  7038 ;;		None               void
  7039 ;; Registers used:
  7040 ;;		wreg, status,2, status,0
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7046 ;;      Params:         0       8       0       0       0
  7047 ;;      Locals:         0       0       0       0       0
  7048 ;;      Temps:          0       4       0       0       0
  7049 ;;      Totals:         0      12       0       0       0
  7050 ;;Total ram usage:       12 bytes
  7051 ;; Hardware stack levels used:    1
  7052 ;; Hardware stack levels required when called:    2
  7053 ;; This function calls:
  7054 ;;		Nothing
  7055 ;; This function is called by:
  7056 ;;		_sprintf
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           
  7061                           ;psect for function ___fleq
  7062  1B8B                     ___fleq:
  7063  1B8B                     l4093:	
  7064                           ;incstack = 0
  7065                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7066                           
  7067  1B8B  3000               	movlw	0
  7068  1B8C  1283               	bcf	3,5	;RP0=0, select bank0
  7069  1B8D  1303               	bcf	3,6	;RP1=0, select bank0
  7070  1B8E  0520               	andwf	___fleq@ff1,w
  7071  1B8F  00A8               	movwf	??___fleq
  7072  1B90  3000               	movlw	0
  7073  1B91  0521               	andwf	___fleq@ff1+1,w
  7074  1B92  00A9               	movwf	??___fleq+1
  7075  1B93  3080               	movlw	128
  7076  1B94  0522               	andwf	___fleq@ff1+2,w
  7077  1B95  00AA               	movwf	??___fleq+2
  7078  1B96  307F               	movlw	127
  7079  1B97  0523               	andwf	___fleq@ff1+3,w
  7080  1B98  00AB               	movwf	??___fleq+3
  7081  1B99  082B               	movf	??___fleq+3,w
  7082  1B9A  042A               	iorwf	??___fleq+2,w
  7083  1B9B  0429               	iorwf	??___fleq+1,w
  7084  1B9C  0428               	iorwf	??___fleq,w
  7085  1B9D  1D03               	skipz
  7086  1B9E  2BA0               	goto	u6971
  7087  1B9F  2BA1               	goto	u6970
  7088  1BA0                     u6971:
  7089  1BA0  2BA9               	goto	l616
  7090  1BA1                     u6970:
  7091  1BA1                     l4095:
  7092  1BA1  3000               	movlw	0
  7093  1BA2  00A3               	movwf	___fleq@ff1+3
  7094  1BA3  3000               	movlw	0
  7095  1BA4  00A2               	movwf	___fleq@ff1+2
  7096  1BA5  3000               	movlw	0
  7097  1BA6  00A1               	movwf	___fleq@ff1+1
  7098  1BA7  3000               	movlw	0
  7099  1BA8  00A0               	movwf	___fleq@ff1
  7100  1BA9                     l616:
  7101  1BA9  3000               	movlw	0
  7102  1BAA  0524               	andwf	___fleq@ff2,w
  7103  1BAB  00A8               	movwf	??___fleq
  7104  1BAC  3000               	movlw	0
  7105  1BAD  0525               	andwf	___fleq@ff2+1,w
  7106  1BAE  00A9               	movwf	??___fleq+1
  7107  1BAF  3080               	movlw	128
  7108  1BB0  0526               	andwf	___fleq@ff2+2,w
  7109  1BB1  00AA               	movwf	??___fleq+2
  7110  1BB2  307F               	movlw	127
  7111  1BB3  0527               	andwf	___fleq@ff2+3,w
  7112  1BB4  00AB               	movwf	??___fleq+3
  7113  1BB5  082B               	movf	??___fleq+3,w
  7114  1BB6  042A               	iorwf	??___fleq+2,w
  7115  1BB7  0429               	iorwf	??___fleq+1,w
  7116  1BB8  0428               	iorwf	??___fleq,w
  7117  1BB9  1D03               	skipz
  7118  1BBA  2BBC               	goto	u6981
  7119  1BBB  2BBD               	goto	u6980
  7120  1BBC                     u6981:
  7121  1BBC  2BC5               	goto	l617
  7122  1BBD                     u6980:
  7123  1BBD                     l4097:
  7124  1BBD  3000               	movlw	0
  7125  1BBE  00A7               	movwf	___fleq@ff2+3
  7126  1BBF  3000               	movlw	0
  7127  1BC0  00A6               	movwf	___fleq@ff2+2
  7128  1BC1  3000               	movlw	0
  7129  1BC2  00A5               	movwf	___fleq@ff2+1
  7130  1BC3  3000               	movlw	0
  7131  1BC4  00A4               	movwf	___fleq@ff2
  7132  1BC5                     l617:
  7133  1BC5  0827               	movf	___fleq@ff2+3,w
  7134  1BC6  0623               	xorwf	___fleq@ff1+3,w
  7135  1BC7  1D03               	skipz
  7136  1BC8  2BD3               	goto	u6995
  7137  1BC9  0826               	movf	___fleq@ff2+2,w
  7138  1BCA  0622               	xorwf	___fleq@ff1+2,w
  7139  1BCB  1D03               	skipz
  7140  1BCC  2BD3               	goto	u6995
  7141  1BCD  0825               	movf	___fleq@ff2+1,w
  7142  1BCE  0621               	xorwf	___fleq@ff1+1,w
  7143  1BCF  1D03               	skipz
  7144  1BD0  2BD3               	goto	u6995
  7145  1BD1  0824               	movf	___fleq@ff2,w
  7146  1BD2  0620               	xorwf	___fleq@ff1,w
  7147  1BD3                     u6995:
  7148  1BD3  1903               	skipnz
  7149  1BD4  2BD6               	goto	u6991
  7150  1BD5  2BD7               	goto	u6990
  7151  1BD6                     u6991:
  7152  1BD6  2BD9               	goto	l4101
  7153  1BD7                     u6990:
  7154  1BD7                     l4099:
  7155  1BD7  1003               	clrc
  7156  1BD8  2BDA               	goto	l618
  7157  1BD9                     l4101:
  7158  1BD9  1403               	setc
  7159  1BDA                     l618:
  7160  1BDA  0008               	return
  7161  1BDB                     __end_of___fleq:
  7162                           
  7163                           	psect	text20
  7164  1984                     __ptext20:	
  7165 ;; *************** function _send_crct *****************
  7166 ;; Defined at:
  7167 ;;		line 247 in file "main.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  st              1    wreg     PTR unsigned char 
  7170 ;;		 -> f1(10), 
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  st              1    2[BANK0 ] PTR unsigned char 
  7173 ;;		 -> f1(10), 
  7174 ;;  i               2    0[BANK0 ] int 
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  1    wreg      void 
  7177 ;; Registers used:
  7178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7184 ;;      Params:         0       0       0       0       0
  7185 ;;      Locals:         0       3       0       0       0
  7186 ;;      Temps:          1       0       0       0       0
  7187 ;;      Totals:         1       3       0       0       0
  7188 ;;Total ram usage:        4 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:    3
  7191 ;; This function calls:
  7192 ;;		_send_char
  7193 ;; This function is called by:
  7194 ;;		_main
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           
  7199                           ;psect for function _send_crct
  7200  1984                     _send_crct:
  7201                           
  7202                           ;incstack = 0
  7203                           ; Regs used in _send_crct: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7204                           ;send_crct@st stored from wreg
  7205  1984  1283               	bcf	3,5	;RP0=0, select bank0
  7206  1985  1303               	bcf	3,6	;RP1=0, select bank0
  7207  1986  00A2               	movwf	send_crct@st
  7208  1987                     l3579:
  7209                           
  7210                           ;main.c: 248:     int i = 0;
  7211  1987  01A0               	clrf	send_crct@i
  7212  1988  01A1               	clrf	send_crct@i+1
  7213                           
  7214                           ;main.c: 249:     while (st[i] != 0){
  7215  1989  299D               	goto	l3585
  7216  198A                     l3581:
  7217                           
  7218                           ;main.c: 250:         send_char(st[i]);
  7219  198A  0820               	movf	send_crct@i,w
  7220  198B  0722               	addwf	send_crct@st,w
  7221  198C  00F6               	movwf	??_send_crct
  7222  198D  0876               	movf	??_send_crct,w
  7223  198E  0084               	movwf	4
  7224  198F  0800               	movf	0,w
  7225  1990  160A  158A  20B9  160A  158A  	fcall	_send_char
  7226  1995                     l3583:
  7227                           
  7228                           ;main.c: 251:         i++;
  7229  1995  3001               	movlw	1
  7230  1996  1283               	bcf	3,5	;RP0=0, select bank0
  7231  1997  1303               	bcf	3,6	;RP1=0, select bank0
  7232  1998  07A0               	addwf	send_crct@i,f
  7233  1999  1803               	skipnc
  7234  199A  0AA1               	incf	send_crct@i+1,f
  7235  199B  3000               	movlw	0
  7236  199C  07A1               	addwf	send_crct@i+1,f
  7237  199D                     l3585:
  7238                           
  7239                           ;main.c: 249:     while (st[i] != 0){
  7240  199D  0820               	movf	send_crct@i,w
  7241  199E  0722               	addwf	send_crct@st,w
  7242  199F  00F6               	movwf	??_send_crct
  7243  19A0  0876               	movf	??_send_crct,w
  7244  19A1  0084               	movwf	4
  7245  19A2  1783               	bsf	3,7	;select IRP bank2
  7246  19A3  0800               	movf	0,w
  7247  19A4  1D03               	btfss	3,2
  7248  19A5  29A7               	goto	u5801
  7249  19A6  29A8               	goto	u5800
  7250  19A7                     u5801:
  7251  19A7  298A               	goto	l3581
  7252  19A8                     u5800:
  7253  19A8                     l149:
  7254  19A8  0008               	return
  7255  19A9                     __end_of_send_crct:
  7256                           
  7257                           	psect	text21
  7258  18B9                     __ptext21:	
  7259 ;; *************** function _send_char *****************
  7260 ;; Defined at:
  7261 ;;		line 255 in file "main.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  dato            1    wreg     unsigned char 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  dato            1    5[COMMON] unsigned char 
  7266 ;; Return value:  Size  Location     Type
  7267 ;;                  1    wreg      void 
  7268 ;; Registers used:
  7269 ;;		wreg
  7270 ;; Tracked objects:
  7271 ;;		On entry : 0/0
  7272 ;;		On exit  : 0/0
  7273 ;;		Unchanged: 0/0
  7274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7275 ;;      Params:         0       0       0       0       0
  7276 ;;      Locals:         1       0       0       0       0
  7277 ;;      Temps:          0       0       0       0       0
  7278 ;;      Totals:         1       0       0       0       0
  7279 ;;Total ram usage:        1 bytes
  7280 ;; Hardware stack levels used:    1
  7281 ;; Hardware stack levels required when called:    2
  7282 ;; This function calls:
  7283 ;;		Nothing
  7284 ;; This function is called by:
  7285 ;;		_send_crct
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289                           
  7290                           ;psect for function _send_char
  7291  18B9                     _send_char:
  7292                           
  7293                           ;incstack = 0
  7294                           ; Regs used in _send_char: [wreg]
  7295                           ;send_char@dato stored from wreg
  7296  18B9  00F5               	movwf	send_char@dato
  7297  18BA                     l2847:
  7298  18BA                     l152:	
  7299                           ;main.c: 256:     while(!TXIF);
  7300                           
  7301  18BA  1283               	bcf	3,5	;RP0=0, select bank0
  7302  18BB  1303               	bcf	3,6	;RP1=0, select bank0
  7303  18BC  1E0C               	btfss	12,4	;volatile
  7304  18BD  28BF               	goto	u4211
  7305  18BE  28C0               	goto	u4210
  7306  18BF                     u4211:
  7307  18BF  28BA               	goto	l152
  7308  18C0                     u4210:
  7309  18C0                     l2849:
  7310                           
  7311                           ;main.c: 257:     TXREG = dato;
  7312  18C0  0875               	movf	send_char@dato,w
  7313  18C1  0099               	movwf	25	;volatile
  7314  18C2                     l155:
  7315  18C2  0008               	return
  7316  18C3                     __end_of_send_char:
  7317                           
  7318                           	psect	text22
  7319  1A72                     __ptext22:	
  7320 ;; *************** function _conv *****************
  7321 ;; Defined at:
  7322 ;;		line 260 in file "main.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  aa              1    wreg     unsigned char 
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;  aa              1   52[BANK0 ] unsigned char 
  7327 ;;  result          4   48[BANK0 ] unsigned char 
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  4   40[BANK0 ] unsigned char 
  7330 ;; Registers used:
  7331 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7337 ;;      Params:         0       4       0       0       0
  7338 ;;      Locals:         0       5       0       0       0
  7339 ;;      Temps:          0       4       0       0       0
  7340 ;;      Totals:         0      13       0       0       0
  7341 ;;Total ram usage:       13 bytes
  7342 ;; Hardware stack levels used:    1
  7343 ;; Hardware stack levels required when called:    4
  7344 ;; This function calls:
  7345 ;;		___flmul
  7346 ;;		___xxtofl
  7347 ;; This function is called by:
  7348 ;;		_main
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           
  7353                           ;psect for function _conv
  7354  1A72                     _conv:
  7355                           
  7356                           ;incstack = 0
  7357                           ; Regs used in _conv: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7358                           ;conv@aa stored from wreg
  7359  1A72  1283               	bcf	3,5	;RP0=0, select bank0
  7360  1A73  1303               	bcf	3,6	;RP1=0, select bank0
  7361  1A74  00D4               	movwf	conv@aa
  7362  1A75                     l4209:
  7363                           
  7364                           ;main.c: 261:     double result;;main.c: 262:     result = aa*0.0196;
  7365  1A75  303C               	movlw	60
  7366  1A76  00B1               	movwf	___flmul@b+3
  7367  1A77  30A0               	movlw	160
  7368  1A78  00B0               	movwf	___flmul@b+2
  7369  1A79  3090               	movlw	144
  7370  1A7A  00AF               	movwf	___flmul@b+1
  7371  1A7B  302E               	movlw	46
  7372  1A7C  00AE               	movwf	___flmul@b
  7373  1A7D  0854               	movf	conv@aa,w
  7374  1A7E  00CC               	movwf	??_conv
  7375  1A7F  01CD               	clrf	??_conv+1
  7376  1A80  01CE               	clrf	??_conv+2
  7377  1A81  01CF               	clrf	??_conv+3
  7378  1A82  084F               	movf	??_conv+3,w
  7379  1A83  00A3               	movwf	___xxtofl@val+3
  7380  1A84  084E               	movf	??_conv+2,w
  7381  1A85  00A2               	movwf	___xxtofl@val+2
  7382  1A86  084D               	movf	??_conv+1,w
  7383  1A87  00A1               	movwf	___xxtofl@val+1
  7384  1A88  084C               	movf	??_conv,w
  7385  1A89  00A0               	movwf	___xxtofl@val
  7386  1A8A  3001               	movlw	1
  7387  1A8B  160A  158A  2687  160A  158A  	fcall	___xxtofl
  7388  1A90  1283               	bcf	3,5	;RP0=0, select bank0
  7389  1A91  1303               	bcf	3,6	;RP1=0, select bank0
  7390  1A92  0823               	movf	?___xxtofl+3,w
  7391  1A93  00B5               	movwf	___flmul@a+3
  7392  1A94  0822               	movf	?___xxtofl+2,w
  7393  1A95  00B4               	movwf	___flmul@a+2
  7394  1A96  0821               	movf	?___xxtofl+1,w
  7395  1A97  00B3               	movwf	___flmul@a+1
  7396  1A98  0820               	movf	?___xxtofl,w
  7397  1A99  00B2               	movwf	___flmul@a
  7398  1A9A  120A  158A  213C  160A  158A  	fcall	___flmul
  7399  1A9F  1283               	bcf	3,5	;RP0=0, select bank0
  7400  1AA0  1303               	bcf	3,6	;RP1=0, select bank0
  7401  1AA1  0831               	movf	?___flmul+3,w
  7402  1AA2  00D3               	movwf	conv@result+3
  7403  1AA3  0830               	movf	?___flmul+2,w
  7404  1AA4  00D2               	movwf	conv@result+2
  7405  1AA5  082F               	movf	?___flmul+1,w
  7406  1AA6  00D1               	movwf	conv@result+1
  7407  1AA7  082E               	movf	?___flmul,w
  7408  1AA8  00D0               	movwf	conv@result
  7409  1AA9                     l4211:
  7410                           
  7411                           ;main.c: 263:     return result;
  7412  1AA9  0853               	movf	conv@result+3,w
  7413  1AAA  00CB               	movwf	?_conv+3
  7414  1AAB  0852               	movf	conv@result+2,w
  7415  1AAC  00CA               	movwf	?_conv+2
  7416  1AAD  0851               	movf	conv@result+1,w
  7417  1AAE  00C9               	movwf	?_conv+1
  7418  1AAF  0850               	movf	conv@result,w
  7419  1AB0  00C8               	movwf	?_conv
  7420  1AB1                     l158:
  7421  1AB1  0008               	return
  7422  1AB2                     __end_of_conv:
  7423                           
  7424                           	psect	text23
  7425  1E87                     __ptext23:	
  7426 ;; *************** function ___xxtofl *****************
  7427 ;; Defined at:
  7428 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;  sign            1    wreg     unsigned char 
  7431 ;;  val             4    0[BANK0 ] long 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  sign            1    8[BANK0 ] unsigned char 
  7434 ;;  arg             4   10[BANK0 ] unsigned long 
  7435 ;;  exp             1    9[BANK0 ] unsigned char 
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  4    0[BANK0 ] unsigned char 
  7438 ;; Registers used:
  7439 ;;		wreg, status,2, status,0
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7445 ;;      Params:         0       4       0       0       0
  7446 ;;      Locals:         0       6       0       0       0
  7447 ;;      Temps:          0       4       0       0       0
  7448 ;;      Totals:         0      14       0       0       0
  7449 ;;Total ram usage:       14 bytes
  7450 ;; Hardware stack levels used:    1
  7451 ;; Hardware stack levels required when called:    2
  7452 ;; This function calls:
  7453 ;;		Nothing
  7454 ;; This function is called by:
  7455 ;;		_conv
  7456 ;;		_sprintf
  7457 ;;		_valadc
  7458 ;; This function uses a non-reentrant model
  7459 ;;
  7460                           
  7461                           
  7462                           ;psect for function ___xxtofl
  7463  1E87                     ___xxtofl:
  7464                           
  7465                           ;incstack = 0
  7466                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7467                           ;___xxtofl@sign stored from wreg
  7468  1E87  1283               	bcf	3,5	;RP0=0, select bank0
  7469  1E88  1303               	bcf	3,6	;RP1=0, select bank0
  7470  1E89  00A8               	movwf	___xxtofl@sign
  7471  1E8A                     l4133:
  7472  1E8A  0828               	movf	___xxtofl@sign,w
  7473  1E8B  1903               	btfsc	3,2
  7474  1E8C  2E8E               	goto	u7081
  7475  1E8D  2E8F               	goto	u7080
  7476  1E8E                     u7081:
  7477  1E8E  2EA3               	goto	l4139
  7478  1E8F                     u7080:
  7479  1E8F                     l4135:
  7480  1E8F  1FA3               	btfss	___xxtofl@val+3,7
  7481  1E90  2E92               	goto	u7091
  7482  1E91  2E93               	goto	u7090
  7483  1E92                     u7091:
  7484  1E92  2EA3               	goto	l4139
  7485  1E93                     u7090:
  7486  1E93                     l4137:
  7487  1E93  0920               	comf	___xxtofl@val,w
  7488  1E94  00AA               	movwf	___xxtofl@arg
  7489  1E95  0921               	comf	___xxtofl@val+1,w
  7490  1E96  00AB               	movwf	___xxtofl@arg+1
  7491  1E97  0922               	comf	___xxtofl@val+2,w
  7492  1E98  00AC               	movwf	___xxtofl@arg+2
  7493  1E99  0923               	comf	___xxtofl@val+3,w
  7494  1E9A  00AD               	movwf	___xxtofl@arg+3
  7495  1E9B  0AAA               	incf	___xxtofl@arg,f
  7496  1E9C  1903               	skipnz
  7497  1E9D  0AAB               	incf	___xxtofl@arg+1,f
  7498  1E9E  1903               	skipnz
  7499  1E9F  0AAC               	incf	___xxtofl@arg+2,f
  7500  1EA0  1903               	skipnz
  7501  1EA1  0AAD               	incf	___xxtofl@arg+3,f
  7502  1EA2  2EAB               	goto	l897
  7503  1EA3                     l4139:
  7504  1EA3  0823               	movf	___xxtofl@val+3,w
  7505  1EA4  00AD               	movwf	___xxtofl@arg+3
  7506  1EA5  0822               	movf	___xxtofl@val+2,w
  7507  1EA6  00AC               	movwf	___xxtofl@arg+2
  7508  1EA7  0821               	movf	___xxtofl@val+1,w
  7509  1EA8  00AB               	movwf	___xxtofl@arg+1
  7510  1EA9  0820               	movf	___xxtofl@val,w
  7511  1EAA  00AA               	movwf	___xxtofl@arg
  7512  1EAB                     l897:
  7513  1EAB  0823               	movf	___xxtofl@val+3,w
  7514  1EAC  0422               	iorwf	___xxtofl@val+2,w
  7515  1EAD  0421               	iorwf	___xxtofl@val+1,w
  7516  1EAE  0420               	iorwf	___xxtofl@val,w
  7517  1EAF  1D03               	skipz
  7518  1EB0  2EB2               	goto	u7101
  7519  1EB1  2EB3               	goto	u7100
  7520  1EB2                     u7101:
  7521  1EB2  2EBC               	goto	l4145
  7522  1EB3                     u7100:
  7523  1EB3                     l4141:
  7524  1EB3  3000               	movlw	0
  7525  1EB4  00A3               	movwf	?___xxtofl+3
  7526  1EB5  3000               	movlw	0
  7527  1EB6  00A2               	movwf	?___xxtofl+2
  7528  1EB7  3000               	movlw	0
  7529  1EB8  00A1               	movwf	?___xxtofl+1
  7530  1EB9  3000               	movlw	0
  7531  1EBA  00A0               	movwf	?___xxtofl
  7532  1EBB  2F42               	goto	l899
  7533  1EBC                     l4145:
  7534  1EBC  3096               	movlw	150
  7535  1EBD  00A4               	movwf	??___xxtofl
  7536  1EBE  0824               	movf	??___xxtofl,w
  7537  1EBF  00A9               	movwf	___xxtofl@exp
  7538  1EC0  2ECE               	goto	l4149
  7539  1EC1                     l4147:
  7540  1EC1  3001               	movlw	1
  7541  1EC2  00A4               	movwf	??___xxtofl
  7542  1EC3  0824               	movf	??___xxtofl,w
  7543  1EC4  07A9               	addwf	___xxtofl@exp,f
  7544  1EC5  3001               	movlw	1
  7545  1EC6                     u7115:
  7546  1EC6  1003               	clrc
  7547  1EC7  0CAD               	rrf	___xxtofl@arg+3,f
  7548  1EC8  0CAC               	rrf	___xxtofl@arg+2,f
  7549  1EC9  0CAB               	rrf	___xxtofl@arg+1,f
  7550  1ECA  0CAA               	rrf	___xxtofl@arg,f
  7551  1ECB  3EFF               	addlw	-1
  7552  1ECC  1D03               	skipz
  7553  1ECD  2EC6               	goto	u7115
  7554  1ECE                     l4149:
  7555  1ECE  30FE               	movlw	254
  7556  1ECF  052D               	andwf	___xxtofl@arg+3,w
  7557  1ED0  1D03               	btfss	3,2
  7558  1ED1  2ED3               	goto	u7121
  7559  1ED2  2ED4               	goto	u7120
  7560  1ED3                     u7121:
  7561  1ED3  2EC1               	goto	l4147
  7562  1ED4                     u7120:
  7563  1ED4  2EF0               	goto	l903
  7564  1ED5                     l4151:
  7565  1ED5  3001               	movlw	1
  7566  1ED6  00A4               	movwf	??___xxtofl
  7567  1ED7  0824               	movf	??___xxtofl,w
  7568  1ED8  07A9               	addwf	___xxtofl@exp,f
  7569  1ED9                     l4153:
  7570  1ED9  3001               	movlw	1
  7571  1EDA  07AA               	addwf	___xxtofl@arg,f
  7572  1EDB  3000               	movlw	0
  7573  1EDC  1803               	skipnc
  7574  1EDD  3001               	movlw	1
  7575  1EDE  07AB               	addwf	___xxtofl@arg+1,f
  7576  1EDF  3000               	movlw	0
  7577  1EE0  1803               	skipnc
  7578  1EE1  3001               	movlw	1
  7579  1EE2  07AC               	addwf	___xxtofl@arg+2,f
  7580  1EE3  3000               	movlw	0
  7581  1EE4  1803               	skipnc
  7582  1EE5  3001               	movlw	1
  7583  1EE6  07AD               	addwf	___xxtofl@arg+3,f
  7584  1EE7                     l4155:
  7585  1EE7  3001               	movlw	1
  7586  1EE8                     u7135:
  7587  1EE8  1003               	clrc
  7588  1EE9  0CAD               	rrf	___xxtofl@arg+3,f
  7589  1EEA  0CAC               	rrf	___xxtofl@arg+2,f
  7590  1EEB  0CAB               	rrf	___xxtofl@arg+1,f
  7591  1EEC  0CAA               	rrf	___xxtofl@arg,f
  7592  1EED  3EFF               	addlw	-1
  7593  1EEE  1D03               	skipz
  7594  1EEF  2EE8               	goto	u7135
  7595  1EF0                     l903:
  7596  1EF0  30FF               	movlw	255
  7597  1EF1  052D               	andwf	___xxtofl@arg+3,w
  7598  1EF2  1D03               	btfss	3,2
  7599  1EF3  2EF5               	goto	u7141
  7600  1EF4  2EF6               	goto	u7140
  7601  1EF5                     u7141:
  7602  1EF5  2ED5               	goto	l4151
  7603  1EF6                     u7140:
  7604  1EF6  2F02               	goto	l4159
  7605  1EF7                     l4157:
  7606  1EF7  3001               	movlw	1
  7607  1EF8  02A9               	subwf	___xxtofl@exp,f
  7608  1EF9  3001               	movlw	1
  7609  1EFA  00A4               	movwf	??___xxtofl
  7610  1EFB                     u7155:
  7611  1EFB  1003               	clrc
  7612  1EFC  0DAA               	rlf	___xxtofl@arg,f
  7613  1EFD  0DAB               	rlf	___xxtofl@arg+1,f
  7614  1EFE  0DAC               	rlf	___xxtofl@arg+2,f
  7615  1EFF  0DAD               	rlf	___xxtofl@arg+3,f
  7616  1F00  0BA4               	decfsz	??___xxtofl,f
  7617  1F01  2EFB               	goto	u7155
  7618  1F02                     l4159:
  7619  1F02  1BAC               	btfsc	___xxtofl@arg+2,7
  7620  1F03  2F05               	goto	u7161
  7621  1F04  2F06               	goto	u7160
  7622  1F05                     u7161:
  7623  1F05  2F0C               	goto	l910
  7624  1F06                     u7160:
  7625  1F06                     l4161:
  7626  1F06  3002               	movlw	2
  7627  1F07  0229               	subwf	___xxtofl@exp,w
  7628  1F08  1803               	skipnc
  7629  1F09  2F0B               	goto	u7171
  7630  1F0A  2F0C               	goto	u7170
  7631  1F0B                     u7171:
  7632  1F0B  2EF7               	goto	l4157
  7633  1F0C                     u7170:
  7634  1F0C                     l910:
  7635  1F0C  1829               	btfsc	___xxtofl@exp,0
  7636  1F0D  2F0F               	goto	u7181
  7637  1F0E  2F10               	goto	u7180
  7638  1F0F                     u7181:
  7639  1F0F  2F18               	goto	l911
  7640  1F10                     u7180:
  7641  1F10                     l4163:
  7642  1F10  30FF               	movlw	255
  7643  1F11  05AA               	andwf	___xxtofl@arg,f
  7644  1F12  30FF               	movlw	255
  7645  1F13  05AB               	andwf	___xxtofl@arg+1,f
  7646  1F14  307F               	movlw	127
  7647  1F15  05AC               	andwf	___xxtofl@arg+2,f
  7648  1F16  30FF               	movlw	255
  7649  1F17  05AD               	andwf	___xxtofl@arg+3,f
  7650  1F18                     l911:
  7651  1F18  1003               	clrc
  7652  1F19  0CA9               	rrf	___xxtofl@exp,f
  7653  1F1A                     l4165:
  7654  1F1A  0829               	movf	___xxtofl@exp,w
  7655  1F1B  00A4               	movwf	??___xxtofl
  7656  1F1C  01A5               	clrf	??___xxtofl+1
  7657  1F1D  01A6               	clrf	??___xxtofl+2
  7658  1F1E  01A7               	clrf	??___xxtofl+3
  7659  1F1F  3018               	movlw	24
  7660  1F20                     u7195:
  7661  1F20  1003               	clrc
  7662  1F21  0DA4               	rlf	??___xxtofl,f
  7663  1F22  0DA5               	rlf	??___xxtofl+1,f
  7664  1F23  0DA6               	rlf	??___xxtofl+2,f
  7665  1F24  0DA7               	rlf	??___xxtofl+3,f
  7666  1F25                     u7190:
  7667  1F25  3EFF               	addlw	-1
  7668  1F26  1D03               	skipz
  7669  1F27  2F20               	goto	u7195
  7670  1F28  0824               	movf	??___xxtofl,w
  7671  1F29  04AA               	iorwf	___xxtofl@arg,f
  7672  1F2A  0825               	movf	??___xxtofl+1,w
  7673  1F2B  04AB               	iorwf	___xxtofl@arg+1,f
  7674  1F2C  0826               	movf	??___xxtofl+2,w
  7675  1F2D  04AC               	iorwf	___xxtofl@arg+2,f
  7676  1F2E  0827               	movf	??___xxtofl+3,w
  7677  1F2F  04AD               	iorwf	___xxtofl@arg+3,f
  7678  1F30                     l4167:
  7679  1F30  0828               	movf	___xxtofl@sign,w
  7680  1F31  1903               	btfsc	3,2
  7681  1F32  2F34               	goto	u7201
  7682  1F33  2F35               	goto	u7200
  7683  1F34                     u7201:
  7684  1F34  2F3A               	goto	l4173
  7685  1F35                     u7200:
  7686  1F35                     l4169:
  7687  1F35  1FA3               	btfss	___xxtofl@val+3,7
  7688  1F36  2F38               	goto	u7211
  7689  1F37  2F39               	goto	u7210
  7690  1F38                     u7211:
  7691  1F38  2F3A               	goto	l4173
  7692  1F39                     u7210:
  7693  1F39                     l4171:
  7694  1F39  17AD               	bsf	___xxtofl@arg+3,7
  7695  1F3A                     l4173:
  7696  1F3A  082D               	movf	___xxtofl@arg+3,w
  7697  1F3B  00A3               	movwf	?___xxtofl+3
  7698  1F3C  082C               	movf	___xxtofl@arg+2,w
  7699  1F3D  00A2               	movwf	?___xxtofl+2
  7700  1F3E  082B               	movf	___xxtofl@arg+1,w
  7701  1F3F  00A1               	movwf	?___xxtofl+1
  7702  1F40  082A               	movf	___xxtofl@arg,w
  7703  1F41  00A0               	movwf	?___xxtofl
  7704  1F42                     l899:
  7705  1F42  0008               	return
  7706  1F43                     __end_of___xxtofl:
  7707                           
  7708                           	psect	text24
  7709  093C                     __ptext24:	
  7710 ;; *************** function ___flmul *****************
  7711 ;; Defined at:
  7712 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;  b               4   14[BANK0 ] unsigned char 
  7715 ;;  a               4   18[BANK0 ] unsigned char 
  7716 ;; Auto vars:     Size  Location     Type
  7717 ;;  prod            4   34[BANK0 ] struct .
  7718 ;;  grs             4   29[BANK0 ] unsigned long 
  7719 ;;  temp            2   38[BANK0 ] struct .
  7720 ;;  bexp            1   33[BANK0 ] unsigned char 
  7721 ;;  aexp            1   28[BANK0 ] unsigned char 
  7722 ;;  sign            1   27[BANK0 ] unsigned char 
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  4   14[BANK0 ] unsigned char 
  7725 ;; Registers used:
  7726 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7732 ;;      Params:         0       8       0       0       0
  7733 ;;      Locals:         0      13       0       0       0
  7734 ;;      Temps:          0       5       0       0       0
  7735 ;;      Totals:         0      26       0       0       0
  7736 ;;Total ram usage:       26 bytes
  7737 ;; Hardware stack levels used:    1
  7738 ;; Hardware stack levels required when called:    3
  7739 ;; This function calls:
  7740 ;;		__Umul8_16
  7741 ;; This function is called by:
  7742 ;;		_conv
  7743 ;;		_fround
  7744 ;;		_scale
  7745 ;;		_sprintf
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748                           
  7749                           
  7750                           ;psect for function ___flmul
  7751  093C                     ___flmul:
  7752  093C                     l3807:	
  7753                           ;incstack = 0
  7754                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7755                           
  7756  093C  1283               	bcf	3,5	;RP0=0, select bank0
  7757  093D  1303               	bcf	3,6	;RP1=0, select bank0
  7758  093E  0831               	movf	___flmul@b+3,w
  7759  093F  3980               	andlw	128
  7760  0940  00B6               	movwf	??___flmul
  7761  0941  0836               	movf	??___flmul,w
  7762  0942  00BB               	movwf	___flmul@sign
  7763  0943                     l3809:
  7764  0943  0831               	movf	___flmul@b+3,w
  7765  0944  00B6               	movwf	??___flmul
  7766  0945  0736               	addwf	??___flmul,w
  7767  0946  00B7               	movwf	??___flmul+1
  7768  0947  0837               	movf	??___flmul+1,w
  7769  0948  00C1               	movwf	___flmul@bexp
  7770  0949                     l3811:
  7771  0949  1FB0               	btfss	___flmul@b+2,7
  7772  094A  294C               	goto	u6181
  7773  094B  294D               	goto	u6180
  7774  094C                     u6181:
  7775  094C  294E               	goto	l3815
  7776  094D                     u6180:
  7777  094D                     l3813:
  7778  094D  1441               	bsf	___flmul@bexp,0
  7779  094E                     l3815:
  7780  094E  0841               	movf	___flmul@bexp,w
  7781  094F  1903               	btfsc	3,2
  7782  0950  2952               	goto	u6191
  7783  0951  2953               	goto	u6190
  7784  0952                     u6191:
  7785  0952  2962               	goto	l3823
  7786  0953                     u6190:
  7787  0953                     l3817:
  7788  0953  0A41               	incf	___flmul@bexp,w
  7789  0954  1D03               	btfss	3,2
  7790  0955  2957               	goto	u6201
  7791  0956  2958               	goto	u6200
  7792  0957                     u6201:
  7793  0957  2960               	goto	l3821
  7794  0958                     u6200:
  7795  0958                     l3819:
  7796  0958  3000               	movlw	0
  7797  0959  00B1               	movwf	___flmul@b+3
  7798  095A  3000               	movlw	0
  7799  095B  00B0               	movwf	___flmul@b+2
  7800  095C  3000               	movlw	0
  7801  095D  00AF               	movwf	___flmul@b+1
  7802  095E  3000               	movlw	0
  7803  095F  00AE               	movwf	___flmul@b
  7804  0960                     l3821:
  7805  0960  17B0               	bsf	___flmul@b+2,7
  7806  0961  296A               	goto	l3825
  7807  0962                     l3823:
  7808  0962  3000               	movlw	0
  7809  0963  00B1               	movwf	___flmul@b+3
  7810  0964  3000               	movlw	0
  7811  0965  00B0               	movwf	___flmul@b+2
  7812  0966  3000               	movlw	0
  7813  0967  00AF               	movwf	___flmul@b+1
  7814  0968  3000               	movlw	0
  7815  0969  00AE               	movwf	___flmul@b
  7816  096A                     l3825:
  7817  096A  0835               	movf	___flmul@a+3,w
  7818  096B  3980               	andlw	128
  7819  096C  00B6               	movwf	??___flmul
  7820  096D  0836               	movf	??___flmul,w
  7821  096E  06BB               	xorwf	___flmul@sign,f
  7822  096F                     l3827:
  7823  096F  0835               	movf	___flmul@a+3,w
  7824  0970  00B6               	movwf	??___flmul
  7825  0971  0736               	addwf	??___flmul,w
  7826  0972  00B7               	movwf	??___flmul+1
  7827  0973  0837               	movf	??___flmul+1,w
  7828  0974  00BC               	movwf	___flmul@aexp
  7829  0975                     l3829:
  7830  0975  1FB4               	btfss	___flmul@a+2,7
  7831  0976  2978               	goto	u6211
  7832  0977  2979               	goto	u6210
  7833  0978                     u6211:
  7834  0978  297A               	goto	l3833
  7835  0979                     u6210:
  7836  0979                     l3831:
  7837  0979  143C               	bsf	___flmul@aexp,0
  7838  097A                     l3833:
  7839  097A  083C               	movf	___flmul@aexp,w
  7840  097B  1903               	btfsc	3,2
  7841  097C  297E               	goto	u6221
  7842  097D  297F               	goto	u6220
  7843  097E                     u6221:
  7844  097E  298E               	goto	l3841
  7845  097F                     u6220:
  7846  097F                     l3835:
  7847  097F  0A3C               	incf	___flmul@aexp,w
  7848  0980  1D03               	btfss	3,2
  7849  0981  2983               	goto	u6231
  7850  0982  2984               	goto	u6230
  7851  0983                     u6231:
  7852  0983  298C               	goto	l3839
  7853  0984                     u6230:
  7854  0984                     l3837:
  7855  0984  3000               	movlw	0
  7856  0985  00B5               	movwf	___flmul@a+3
  7857  0986  3000               	movlw	0
  7858  0987  00B4               	movwf	___flmul@a+2
  7859  0988  3000               	movlw	0
  7860  0989  00B3               	movwf	___flmul@a+1
  7861  098A  3000               	movlw	0
  7862  098B  00B2               	movwf	___flmul@a
  7863  098C                     l3839:
  7864  098C  17B4               	bsf	___flmul@a+2,7
  7865  098D  2996               	goto	l3843
  7866  098E                     l3841:
  7867  098E  3000               	movlw	0
  7868  098F  00B5               	movwf	___flmul@a+3
  7869  0990  3000               	movlw	0
  7870  0991  00B4               	movwf	___flmul@a+2
  7871  0992  3000               	movlw	0
  7872  0993  00B3               	movwf	___flmul@a+1
  7873  0994  3000               	movlw	0
  7874  0995  00B2               	movwf	___flmul@a
  7875  0996                     l3843:
  7876  0996  083C               	movf	___flmul@aexp,w
  7877  0997  1903               	btfsc	3,2
  7878  0998  299A               	goto	u6241
  7879  0999  299B               	goto	u6240
  7880  099A                     u6241:
  7881  099A  29A0               	goto	l3847
  7882  099B                     u6240:
  7883  099B                     l3845:
  7884  099B  0841               	movf	___flmul@bexp,w
  7885  099C  1D03               	btfss	3,2
  7886  099D  299F               	goto	u6251
  7887  099E  29A0               	goto	u6250
  7888  099F                     u6251:
  7889  099F  29A9               	goto	l3851
  7890  09A0                     u6250:
  7891  09A0                     l3847:
  7892  09A0  3000               	movlw	0
  7893  09A1  00B1               	movwf	?___flmul+3
  7894  09A2  3000               	movlw	0
  7895  09A3  00B0               	movwf	?___flmul+2
  7896  09A4  3000               	movlw	0
  7897  09A5  00AF               	movwf	?___flmul+1
  7898  09A6  3000               	movlw	0
  7899  09A7  00AE               	movwf	?___flmul
  7900  09A8  2C9C               	goto	l853
  7901  09A9                     l3851:
  7902  09A9  082E               	movf	___flmul@b,w
  7903  09AA  00B6               	movwf	??___flmul
  7904  09AB  0836               	movf	??___flmul,w
  7905  09AC  00F5               	movwf	__Umul8_16@multiplicand
  7906  09AD  0834               	movf	___flmul@a+2,w
  7907  09AE  160A  158A  21CF  120A  158A  	fcall	__Umul8_16
  7908  09B3  0876               	movf	?__Umul8_16+1,w
  7909  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  7910  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  7911  09B6  00C7               	movwf	___flmul@temp+1
  7912  09B7  0875               	movf	?__Umul8_16,w
  7913  09B8  00C6               	movwf	___flmul@temp
  7914  09B9                     l3853:
  7915  09B9  0846               	movf	___flmul@temp,w
  7916  09BA  00B6               	movwf	??___flmul
  7917  09BB  01B7               	clrf	??___flmul+1
  7918  09BC  01B8               	clrf	??___flmul+2
  7919  09BD  01B9               	clrf	??___flmul+3
  7920  09BE  0839               	movf	??___flmul+3,w
  7921  09BF  00C0               	movwf	___flmul@grs+3
  7922  09C0  0838               	movf	??___flmul+2,w
  7923  09C1  00BF               	movwf	___flmul@grs+2
  7924  09C2  0837               	movf	??___flmul+1,w
  7925  09C3  00BE               	movwf	___flmul@grs+1
  7926  09C4  0836               	movf	??___flmul,w
  7927  09C5  00BD               	movwf	___flmul@grs
  7928  09C6                     l3855:
  7929  09C6  0847               	movf	___flmul@temp+1,w
  7930  09C7  00B6               	movwf	??___flmul
  7931  09C8  01B7               	clrf	??___flmul+1
  7932  09C9  01B8               	clrf	??___flmul+2
  7933  09CA  01B9               	clrf	??___flmul+3
  7934  09CB  0839               	movf	??___flmul+3,w
  7935  09CC  00C5               	movwf	___flmul@prod+3
  7936  09CD  0838               	movf	??___flmul+2,w
  7937  09CE  00C4               	movwf	___flmul@prod+2
  7938  09CF  0837               	movf	??___flmul+1,w
  7939  09D0  00C3               	movwf	___flmul@prod+1
  7940  09D1  0836               	movf	??___flmul,w
  7941  09D2  00C2               	movwf	___flmul@prod
  7942  09D3  082F               	movf	___flmul@b+1,w
  7943  09D4  00B6               	movwf	??___flmul
  7944  09D5  0836               	movf	??___flmul,w
  7945  09D6  00F5               	movwf	__Umul8_16@multiplicand
  7946  09D7  0833               	movf	___flmul@a+1,w
  7947  09D8  160A  158A  21CF  120A  158A  	fcall	__Umul8_16
  7948  09DD  0876               	movf	?__Umul8_16+1,w
  7949  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  7950  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  7951  09E0  00C7               	movwf	___flmul@temp+1
  7952  09E1  0875               	movf	?__Umul8_16,w
  7953  09E2  00C6               	movwf	___flmul@temp
  7954  09E3                     l3857:
  7955  09E3  0846               	movf	___flmul@temp,w
  7956  09E4  00B6               	movwf	??___flmul
  7957  09E5  01B7               	clrf	??___flmul+1
  7958  09E6  01B8               	clrf	??___flmul+2
  7959  09E7  01B9               	clrf	??___flmul+3
  7960  09E8  0836               	movf	??___flmul,w
  7961  09E9  07BD               	addwf	___flmul@grs,f
  7962  09EA  0837               	movf	??___flmul+1,w
  7963  09EB  1103               	clrz
  7964  09EC  1803               	skipnc
  7965  09ED  3E01               	addlw	1
  7966  09EE  1903               	skipnz
  7967  09EF  29F1               	goto	u6261
  7968  09F0  07BE               	addwf	___flmul@grs+1,f
  7969  09F1                     u6261:
  7970  09F1  0838               	movf	??___flmul+2,w
  7971  09F2  1103               	clrz
  7972  09F3  1803               	skipnc
  7973  09F4  3E01               	addlw	1
  7974  09F5  1903               	skipnz
  7975  09F6  29F8               	goto	u6262
  7976  09F7  07BF               	addwf	___flmul@grs+2,f
  7977  09F8                     u6262:
  7978  09F8  0839               	movf	??___flmul+3,w
  7979  09F9  1103               	clrz
  7980  09FA  1803               	skipnc
  7981  09FB  3E01               	addlw	1
  7982  09FC  1903               	skipnz
  7983  09FD  29FF               	goto	u6263
  7984  09FE  07C0               	addwf	___flmul@grs+3,f
  7985  09FF                     u6263:
  7986  09FF                     l3859:
  7987  09FF  0847               	movf	___flmul@temp+1,w
  7988  0A00  00B6               	movwf	??___flmul
  7989  0A01  01B7               	clrf	??___flmul+1
  7990  0A02  01B8               	clrf	??___flmul+2
  7991  0A03  01B9               	clrf	??___flmul+3
  7992  0A04  0836               	movf	??___flmul,w
  7993  0A05  07C2               	addwf	___flmul@prod,f
  7994  0A06  0837               	movf	??___flmul+1,w
  7995  0A07  1103               	clrz
  7996  0A08  1803               	skipnc
  7997  0A09  3E01               	addlw	1
  7998  0A0A  1903               	skipnz
  7999  0A0B  2A0D               	goto	u6271
  8000  0A0C  07C3               	addwf	___flmul@prod+1,f
  8001  0A0D                     u6271:
  8002  0A0D  0838               	movf	??___flmul+2,w
  8003  0A0E  1103               	clrz
  8004  0A0F  1803               	skipnc
  8005  0A10  3E01               	addlw	1
  8006  0A11  1903               	skipnz
  8007  0A12  2A14               	goto	u6272
  8008  0A13  07C4               	addwf	___flmul@prod+2,f
  8009  0A14                     u6272:
  8010  0A14  0839               	movf	??___flmul+3,w
  8011  0A15  1103               	clrz
  8012  0A16  1803               	skipnc
  8013  0A17  3E01               	addlw	1
  8014  0A18  1903               	skipnz
  8015  0A19  2A1B               	goto	u6273
  8016  0A1A  07C5               	addwf	___flmul@prod+3,f
  8017  0A1B                     u6273:
  8018  0A1B  0830               	movf	___flmul@b+2,w
  8019  0A1C  00B6               	movwf	??___flmul
  8020  0A1D  0836               	movf	??___flmul,w
  8021  0A1E  00F5               	movwf	__Umul8_16@multiplicand
  8022  0A1F  0832               	movf	___flmul@a,w
  8023  0A20  160A  158A  21CF  120A  158A  	fcall	__Umul8_16
  8024  0A25  0876               	movf	?__Umul8_16+1,w
  8025  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  8026  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  8027  0A28  00C7               	movwf	___flmul@temp+1
  8028  0A29  0875               	movf	?__Umul8_16,w
  8029  0A2A  00C6               	movwf	___flmul@temp
  8030  0A2B                     l3861:
  8031  0A2B  0846               	movf	___flmul@temp,w
  8032  0A2C  00B6               	movwf	??___flmul
  8033  0A2D  01B7               	clrf	??___flmul+1
  8034  0A2E  01B8               	clrf	??___flmul+2
  8035  0A2F  01B9               	clrf	??___flmul+3
  8036  0A30  0836               	movf	??___flmul,w
  8037  0A31  07BD               	addwf	___flmul@grs,f
  8038  0A32  0837               	movf	??___flmul+1,w
  8039  0A33  1103               	clrz
  8040  0A34  1803               	skipnc
  8041  0A35  3E01               	addlw	1
  8042  0A36  1903               	skipnz
  8043  0A37  2A39               	goto	u6281
  8044  0A38  07BE               	addwf	___flmul@grs+1,f
  8045  0A39                     u6281:
  8046  0A39  0838               	movf	??___flmul+2,w
  8047  0A3A  1103               	clrz
  8048  0A3B  1803               	skipnc
  8049  0A3C  3E01               	addlw	1
  8050  0A3D  1903               	skipnz
  8051  0A3E  2A40               	goto	u6282
  8052  0A3F  07BF               	addwf	___flmul@grs+2,f
  8053  0A40                     u6282:
  8054  0A40  0839               	movf	??___flmul+3,w
  8055  0A41  1103               	clrz
  8056  0A42  1803               	skipnc
  8057  0A43  3E01               	addlw	1
  8058  0A44  1903               	skipnz
  8059  0A45  2A47               	goto	u6283
  8060  0A46  07C0               	addwf	___flmul@grs+3,f
  8061  0A47                     u6283:
  8062  0A47                     l3863:
  8063  0A47  0847               	movf	___flmul@temp+1,w
  8064  0A48  00B6               	movwf	??___flmul
  8065  0A49  01B7               	clrf	??___flmul+1
  8066  0A4A  01B8               	clrf	??___flmul+2
  8067  0A4B  01B9               	clrf	??___flmul+3
  8068  0A4C  0836               	movf	??___flmul,w
  8069  0A4D  07C2               	addwf	___flmul@prod,f
  8070  0A4E  0837               	movf	??___flmul+1,w
  8071  0A4F  1103               	clrz
  8072  0A50  1803               	skipnc
  8073  0A51  3E01               	addlw	1
  8074  0A52  1903               	skipnz
  8075  0A53  2A55               	goto	u6291
  8076  0A54  07C3               	addwf	___flmul@prod+1,f
  8077  0A55                     u6291:
  8078  0A55  0838               	movf	??___flmul+2,w
  8079  0A56  1103               	clrz
  8080  0A57  1803               	skipnc
  8081  0A58  3E01               	addlw	1
  8082  0A59  1903               	skipnz
  8083  0A5A  2A5C               	goto	u6292
  8084  0A5B  07C4               	addwf	___flmul@prod+2,f
  8085  0A5C                     u6292:
  8086  0A5C  0839               	movf	??___flmul+3,w
  8087  0A5D  1103               	clrz
  8088  0A5E  1803               	skipnc
  8089  0A5F  3E01               	addlw	1
  8090  0A60  1903               	skipnz
  8091  0A61  2A63               	goto	u6293
  8092  0A62  07C5               	addwf	___flmul@prod+3,f
  8093  0A63                     u6293:
  8094  0A63                     l3865:
  8095  0A63  3008               	movlw	8
  8096  0A64  00B6               	movwf	??___flmul
  8097  0A65                     u6305:
  8098  0A65  1003               	clrc
  8099  0A66  0DBD               	rlf	___flmul@grs,f
  8100  0A67  0DBE               	rlf	___flmul@grs+1,f
  8101  0A68  0DBF               	rlf	___flmul@grs+2,f
  8102  0A69  0DC0               	rlf	___flmul@grs+3,f
  8103  0A6A  0BB6               	decfsz	??___flmul,f
  8104  0A6B  2A65               	goto	u6305
  8105  0A6C                     l3867:
  8106  0A6C  082F               	movf	___flmul@b+1,w
  8107  0A6D  00B6               	movwf	??___flmul
  8108  0A6E  0836               	movf	??___flmul,w
  8109  0A6F  00F5               	movwf	__Umul8_16@multiplicand
  8110  0A70  0832               	movf	___flmul@a,w
  8111  0A71  160A  158A  21CF  120A  158A  	fcall	__Umul8_16
  8112  0A76  0876               	movf	?__Umul8_16+1,w
  8113  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  8114  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  8115  0A79  00C7               	movwf	___flmul@temp+1
  8116  0A7A  0875               	movf	?__Umul8_16,w
  8117  0A7B  00C6               	movwf	___flmul@temp
  8118  0A7C                     l3869:
  8119  0A7C  0846               	movf	___flmul@temp,w
  8120  0A7D  00B6               	movwf	??___flmul
  8121  0A7E  0847               	movf	___flmul@temp+1,w
  8122  0A7F  00B7               	movwf	??___flmul+1
  8123  0A80  01B8               	clrf	??___flmul+2
  8124  0A81  01B9               	clrf	??___flmul+3
  8125  0A82  0836               	movf	??___flmul,w
  8126  0A83  07BD               	addwf	___flmul@grs,f
  8127  0A84  0837               	movf	??___flmul+1,w
  8128  0A85  1103               	clrz
  8129  0A86  1803               	skipnc
  8130  0A87  3E01               	addlw	1
  8131  0A88  1903               	skipnz
  8132  0A89  2A8B               	goto	u6311
  8133  0A8A  07BE               	addwf	___flmul@grs+1,f
  8134  0A8B                     u6311:
  8135  0A8B  0838               	movf	??___flmul+2,w
  8136  0A8C  1103               	clrz
  8137  0A8D  1803               	skipnc
  8138  0A8E  3E01               	addlw	1
  8139  0A8F  1903               	skipnz
  8140  0A90  2A92               	goto	u6312
  8141  0A91  07BF               	addwf	___flmul@grs+2,f
  8142  0A92                     u6312:
  8143  0A92  0839               	movf	??___flmul+3,w
  8144  0A93  1103               	clrz
  8145  0A94  1803               	skipnc
  8146  0A95  3E01               	addlw	1
  8147  0A96  1903               	skipnz
  8148  0A97  2A99               	goto	u6313
  8149  0A98  07C0               	addwf	___flmul@grs+3,f
  8150  0A99                     u6313:
  8151  0A99                     l3871:
  8152  0A99  082E               	movf	___flmul@b,w
  8153  0A9A  00B6               	movwf	??___flmul
  8154  0A9B  0836               	movf	??___flmul,w
  8155  0A9C  00F5               	movwf	__Umul8_16@multiplicand
  8156  0A9D  0833               	movf	___flmul@a+1,w
  8157  0A9E  160A  158A  21CF  120A  158A  	fcall	__Umul8_16
  8158  0AA3  0876               	movf	?__Umul8_16+1,w
  8159  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  8160  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  8161  0AA6  00C7               	movwf	___flmul@temp+1
  8162  0AA7  0875               	movf	?__Umul8_16,w
  8163  0AA8  00C6               	movwf	___flmul@temp
  8164  0AA9                     l3873:
  8165  0AA9  0846               	movf	___flmul@temp,w
  8166  0AAA  00B6               	movwf	??___flmul
  8167  0AAB  0847               	movf	___flmul@temp+1,w
  8168  0AAC  00B7               	movwf	??___flmul+1
  8169  0AAD  01B8               	clrf	??___flmul+2
  8170  0AAE  01B9               	clrf	??___flmul+3
  8171  0AAF  0836               	movf	??___flmul,w
  8172  0AB0  07BD               	addwf	___flmul@grs,f
  8173  0AB1  0837               	movf	??___flmul+1,w
  8174  0AB2  1103               	clrz
  8175  0AB3  1803               	skipnc
  8176  0AB4  3E01               	addlw	1
  8177  0AB5  1903               	skipnz
  8178  0AB6  2AB8               	goto	u6321
  8179  0AB7  07BE               	addwf	___flmul@grs+1,f
  8180  0AB8                     u6321:
  8181  0AB8  0838               	movf	??___flmul+2,w
  8182  0AB9  1103               	clrz
  8183  0ABA  1803               	skipnc
  8184  0ABB  3E01               	addlw	1
  8185  0ABC  1903               	skipnz
  8186  0ABD  2ABF               	goto	u6322
  8187  0ABE  07BF               	addwf	___flmul@grs+2,f
  8188  0ABF                     u6322:
  8189  0ABF  0839               	movf	??___flmul+3,w
  8190  0AC0  1103               	clrz
  8191  0AC1  1803               	skipnc
  8192  0AC2  3E01               	addlw	1
  8193  0AC3  1903               	skipnz
  8194  0AC4  2AC6               	goto	u6323
  8195  0AC5  07C0               	addwf	___flmul@grs+3,f
  8196  0AC6                     u6323:
  8197  0AC6                     l3875:
  8198  0AC6  3008               	movlw	8
  8199  0AC7  00B6               	movwf	??___flmul
  8200  0AC8                     u6335:
  8201  0AC8  1003               	clrc
  8202  0AC9  0DBD               	rlf	___flmul@grs,f
  8203  0ACA  0DBE               	rlf	___flmul@grs+1,f
  8204  0ACB  0DBF               	rlf	___flmul@grs+2,f
  8205  0ACC  0DC0               	rlf	___flmul@grs+3,f
  8206  0ACD  0BB6               	decfsz	??___flmul,f
  8207  0ACE  2AC8               	goto	u6335
  8208  0ACF  082E               	movf	___flmul@b,w
  8209  0AD0  00B6               	movwf	??___flmul
  8210  0AD1  0836               	movf	??___flmul,w
  8211  0AD2  00F5               	movwf	__Umul8_16@multiplicand
  8212  0AD3  0832               	movf	___flmul@a,w
  8213  0AD4  160A  158A  21CF  120A  158A  	fcall	__Umul8_16
  8214  0AD9  0876               	movf	?__Umul8_16+1,w
  8215  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  8216  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  8217  0ADC  00C7               	movwf	___flmul@temp+1
  8218  0ADD  0875               	movf	?__Umul8_16,w
  8219  0ADE  00C6               	movwf	___flmul@temp
  8220  0ADF                     l3877:
  8221  0ADF  0846               	movf	___flmul@temp,w
  8222  0AE0  00B6               	movwf	??___flmul
  8223  0AE1  0847               	movf	___flmul@temp+1,w
  8224  0AE2  00B7               	movwf	??___flmul+1
  8225  0AE3  01B8               	clrf	??___flmul+2
  8226  0AE4  01B9               	clrf	??___flmul+3
  8227  0AE5  0836               	movf	??___flmul,w
  8228  0AE6  07BD               	addwf	___flmul@grs,f
  8229  0AE7  0837               	movf	??___flmul+1,w
  8230  0AE8  1103               	clrz
  8231  0AE9  1803               	skipnc
  8232  0AEA  3E01               	addlw	1
  8233  0AEB  1903               	skipnz
  8234  0AEC  2AEE               	goto	u6341
  8235  0AED  07BE               	addwf	___flmul@grs+1,f
  8236  0AEE                     u6341:
  8237  0AEE  0838               	movf	??___flmul+2,w
  8238  0AEF  1103               	clrz
  8239  0AF0  1803               	skipnc
  8240  0AF1  3E01               	addlw	1
  8241  0AF2  1903               	skipnz
  8242  0AF3  2AF5               	goto	u6342
  8243  0AF4  07BF               	addwf	___flmul@grs+2,f
  8244  0AF5                     u6342:
  8245  0AF5  0839               	movf	??___flmul+3,w
  8246  0AF6  1103               	clrz
  8247  0AF7  1803               	skipnc
  8248  0AF8  3E01               	addlw	1
  8249  0AF9  1903               	skipnz
  8250  0AFA  2AFC               	goto	u6343
  8251  0AFB  07C0               	addwf	___flmul@grs+3,f
  8252  0AFC                     u6343:
  8253  0AFC                     l3879:
  8254  0AFC  082F               	movf	___flmul@b+1,w
  8255  0AFD  00B6               	movwf	??___flmul
  8256  0AFE  0836               	movf	??___flmul,w
  8257  0AFF  00F5               	movwf	__Umul8_16@multiplicand
  8258  0B00  0834               	movf	___flmul@a+2,w
  8259  0B01  160A  158A  21CF  120A  158A  	fcall	__Umul8_16
  8260  0B06  0876               	movf	?__Umul8_16+1,w
  8261  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  8262  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  8263  0B09  00C7               	movwf	___flmul@temp+1
  8264  0B0A  0875               	movf	?__Umul8_16,w
  8265  0B0B  00C6               	movwf	___flmul@temp
  8266  0B0C  0846               	movf	___flmul@temp,w
  8267  0B0D  00B6               	movwf	??___flmul
  8268  0B0E  0847               	movf	___flmul@temp+1,w
  8269  0B0F  00B7               	movwf	??___flmul+1
  8270  0B10  01B8               	clrf	??___flmul+2
  8271  0B11  01B9               	clrf	??___flmul+3
  8272  0B12  0836               	movf	??___flmul,w
  8273  0B13  07C2               	addwf	___flmul@prod,f
  8274  0B14  0837               	movf	??___flmul+1,w
  8275  0B15  1103               	clrz
  8276  0B16  1803               	skipnc
  8277  0B17  3E01               	addlw	1
  8278  0B18  1903               	skipnz
  8279  0B19  2B1B               	goto	u6351
  8280  0B1A  07C3               	addwf	___flmul@prod+1,f
  8281  0B1B                     u6351:
  8282  0B1B  0838               	movf	??___flmul+2,w
  8283  0B1C  1103               	clrz
  8284  0B1D  1803               	skipnc
  8285  0B1E  3E01               	addlw	1
  8286  0B1F  1903               	skipnz
  8287  0B20  2B22               	goto	u6352
  8288  0B21  07C4               	addwf	___flmul@prod+2,f
  8289  0B22                     u6352:
  8290  0B22  0839               	movf	??___flmul+3,w
  8291  0B23  1103               	clrz
  8292  0B24  1803               	skipnc
  8293  0B25  3E01               	addlw	1
  8294  0B26  1903               	skipnz
  8295  0B27  2B29               	goto	u6353
  8296  0B28  07C5               	addwf	___flmul@prod+3,f
  8297  0B29                     u6353:
  8298  0B29                     l3881:
  8299  0B29  0830               	movf	___flmul@b+2,w
  8300  0B2A  00B6               	movwf	??___flmul
  8301  0B2B  0836               	movf	??___flmul,w
  8302  0B2C  00F5               	movwf	__Umul8_16@multiplicand
  8303  0B2D  0833               	movf	___flmul@a+1,w
  8304  0B2E  160A  158A  21CF  120A  158A  	fcall	__Umul8_16
  8305  0B33  0876               	movf	?__Umul8_16+1,w
  8306  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  8307  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  8308  0B36  00C7               	movwf	___flmul@temp+1
  8309  0B37  0875               	movf	?__Umul8_16,w
  8310  0B38  00C6               	movwf	___flmul@temp
  8311  0B39                     l3883:
  8312  0B39  0846               	movf	___flmul@temp,w
  8313  0B3A  00B6               	movwf	??___flmul
  8314  0B3B  0847               	movf	___flmul@temp+1,w
  8315  0B3C  00B7               	movwf	??___flmul+1
  8316  0B3D  01B8               	clrf	??___flmul+2
  8317  0B3E  01B9               	clrf	??___flmul+3
  8318  0B3F  0836               	movf	??___flmul,w
  8319  0B40  07C2               	addwf	___flmul@prod,f
  8320  0B41  0837               	movf	??___flmul+1,w
  8321  0B42  1103               	clrz
  8322  0B43  1803               	skipnc
  8323  0B44  3E01               	addlw	1
  8324  0B45  1903               	skipnz
  8325  0B46  2B48               	goto	u6361
  8326  0B47  07C3               	addwf	___flmul@prod+1,f
  8327  0B48                     u6361:
  8328  0B48  0838               	movf	??___flmul+2,w
  8329  0B49  1103               	clrz
  8330  0B4A  1803               	skipnc
  8331  0B4B  3E01               	addlw	1
  8332  0B4C  1903               	skipnz
  8333  0B4D  2B4F               	goto	u6362
  8334  0B4E  07C4               	addwf	___flmul@prod+2,f
  8335  0B4F                     u6362:
  8336  0B4F  0839               	movf	??___flmul+3,w
  8337  0B50  1103               	clrz
  8338  0B51  1803               	skipnc
  8339  0B52  3E01               	addlw	1
  8340  0B53  1903               	skipnz
  8341  0B54  2B56               	goto	u6363
  8342  0B55  07C5               	addwf	___flmul@prod+3,f
  8343  0B56                     u6363:
  8344  0B56  0830               	movf	___flmul@b+2,w
  8345  0B57  00B6               	movwf	??___flmul
  8346  0B58  0836               	movf	??___flmul,w
  8347  0B59  00F5               	movwf	__Umul8_16@multiplicand
  8348  0B5A  0834               	movf	___flmul@a+2,w
  8349  0B5B  160A  158A  21CF  120A  158A  	fcall	__Umul8_16
  8350  0B60  0876               	movf	?__Umul8_16+1,w
  8351  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8352  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8353  0B63  00C7               	movwf	___flmul@temp+1
  8354  0B64  0875               	movf	?__Umul8_16,w
  8355  0B65  00C6               	movwf	___flmul@temp
  8356  0B66                     l3885:
  8357  0B66  0846               	movf	___flmul@temp,w
  8358  0B67  00B6               	movwf	??___flmul
  8359  0B68  0847               	movf	___flmul@temp+1,w
  8360  0B69  00B7               	movwf	??___flmul+1
  8361  0B6A  01B8               	clrf	??___flmul+2
  8362  0B6B  01B9               	clrf	??___flmul+3
  8363  0B6C  3008               	movlw	8
  8364  0B6D                     u6375:
  8365  0B6D  1003               	clrc
  8366  0B6E  0DB6               	rlf	??___flmul,f
  8367  0B6F  0DB7               	rlf	??___flmul+1,f
  8368  0B70  0DB8               	rlf	??___flmul+2,f
  8369  0B71  0DB9               	rlf	??___flmul+3,f
  8370  0B72                     u6370:
  8371  0B72  3EFF               	addlw	-1
  8372  0B73  1D03               	skipz
  8373  0B74  2B6D               	goto	u6375
  8374  0B75  0836               	movf	??___flmul,w
  8375  0B76  07C2               	addwf	___flmul@prod,f
  8376  0B77  0837               	movf	??___flmul+1,w
  8377  0B78  1103               	clrz
  8378  0B79  1803               	skipnc
  8379  0B7A  3E01               	addlw	1
  8380  0B7B  1903               	skipnz
  8381  0B7C  2B7E               	goto	u6381
  8382  0B7D  07C3               	addwf	___flmul@prod+1,f
  8383  0B7E                     u6381:
  8384  0B7E  0838               	movf	??___flmul+2,w
  8385  0B7F  1103               	clrz
  8386  0B80  1803               	skipnc
  8387  0B81  3E01               	addlw	1
  8388  0B82  1903               	skipnz
  8389  0B83  2B85               	goto	u6382
  8390  0B84  07C4               	addwf	___flmul@prod+2,f
  8391  0B85                     u6382:
  8392  0B85  0839               	movf	??___flmul+3,w
  8393  0B86  1103               	clrz
  8394  0B87  1803               	skipnc
  8395  0B88  3E01               	addlw	1
  8396  0B89  1903               	skipnz
  8397  0B8A  2B8C               	goto	u6383
  8398  0B8B  07C5               	addwf	___flmul@prod+3,f
  8399  0B8C                     u6383:
  8400  0B8C                     l3887:
  8401  0B8C  083D               	movf	___flmul@grs,w
  8402  0B8D  00B6               	movwf	??___flmul
  8403  0B8E  083E               	movf	___flmul@grs+1,w
  8404  0B8F  00B7               	movwf	??___flmul+1
  8405  0B90  083F               	movf	___flmul@grs+2,w
  8406  0B91  00B8               	movwf	??___flmul+2
  8407  0B92  0840               	movf	___flmul@grs+3,w
  8408  0B93  00B9               	movwf	??___flmul+3
  8409  0B94  3018               	movlw	24
  8410  0B95                     u6395:
  8411  0B95  1003               	clrc
  8412  0B96  0CB9               	rrf	??___flmul+3,f
  8413  0B97  0CB8               	rrf	??___flmul+2,f
  8414  0B98  0CB7               	rrf	??___flmul+1,f
  8415  0B99  0CB6               	rrf	??___flmul,f
  8416  0B9A                     u6390:
  8417  0B9A  3EFF               	addlw	-1
  8418  0B9B  1D03               	skipz
  8419  0B9C  2B95               	goto	u6395
  8420  0B9D  0836               	movf	??___flmul,w
  8421  0B9E  07C2               	addwf	___flmul@prod,f
  8422  0B9F  0837               	movf	??___flmul+1,w
  8423  0BA0  1103               	clrz
  8424  0BA1  1803               	skipnc
  8425  0BA2  3E01               	addlw	1
  8426  0BA3  1903               	skipnz
  8427  0BA4  2BA6               	goto	u6401
  8428  0BA5  07C3               	addwf	___flmul@prod+1,f
  8429  0BA6                     u6401:
  8430  0BA6  0838               	movf	??___flmul+2,w
  8431  0BA7  1103               	clrz
  8432  0BA8  1803               	skipnc
  8433  0BA9  3E01               	addlw	1
  8434  0BAA  1903               	skipnz
  8435  0BAB  2BAD               	goto	u6402
  8436  0BAC  07C4               	addwf	___flmul@prod+2,f
  8437  0BAD                     u6402:
  8438  0BAD  0839               	movf	??___flmul+3,w
  8439  0BAE  1103               	clrz
  8440  0BAF  1803               	skipnc
  8441  0BB0  3E01               	addlw	1
  8442  0BB1  1903               	skipnz
  8443  0BB2  2BB4               	goto	u6403
  8444  0BB3  07C5               	addwf	___flmul@prod+3,f
  8445  0BB4                     u6403:
  8446  0BB4                     l3889:
  8447  0BB4  3008               	movlw	8
  8448  0BB5  00B6               	movwf	??___flmul
  8449  0BB6                     u6415:
  8450  0BB6  1003               	clrc
  8451  0BB7  0DBD               	rlf	___flmul@grs,f
  8452  0BB8  0DBE               	rlf	___flmul@grs+1,f
  8453  0BB9  0DBF               	rlf	___flmul@grs+2,f
  8454  0BBA  0DC0               	rlf	___flmul@grs+3,f
  8455  0BBB  0BB6               	decfsz	??___flmul,f
  8456  0BBC  2BB6               	goto	u6415
  8457  0BBD                     l3891:
  8458  0BBD  0841               	movf	___flmul@bexp,w
  8459  0BBE  073C               	addwf	___flmul@aexp,w
  8460  0BBF  00B6               	movwf	??___flmul
  8461  0BC0  01B7               	clrf	??___flmul+1
  8462  0BC1  0DB7               	rlf	??___flmul+1,f
  8463  0BC2  0836               	movf	??___flmul,w
  8464  0BC3  3E82               	addlw	130
  8465  0BC4  00C6               	movwf	___flmul@temp
  8466  0BC5  0837               	movf	??___flmul+1,w
  8467  0BC6  1803               	skipnc
  8468  0BC7  3E01               	addlw	1
  8469  0BC8  3EFF               	addlw	255
  8470  0BC9  00C7               	movwf	___flmul@temp+1
  8471  0BCA  2BE8               	goto	l3903
  8472  0BCB                     l3893:
  8473  0BCB  3001               	movlw	1
  8474  0BCC  00B6               	movwf	??___flmul
  8475  0BCD                     u6425:
  8476  0BCD  1003               	clrc
  8477  0BCE  0DC2               	rlf	___flmul@prod,f
  8478  0BCF  0DC3               	rlf	___flmul@prod+1,f
  8479  0BD0  0DC4               	rlf	___flmul@prod+2,f
  8480  0BD1  0DC5               	rlf	___flmul@prod+3,f
  8481  0BD2  0BB6               	decfsz	??___flmul,f
  8482  0BD3  2BCD               	goto	u6425
  8483  0BD4                     l3895:
  8484  0BD4  1FC0               	btfss	___flmul@grs+3,7
  8485  0BD5  2BD7               	goto	u6431
  8486  0BD6  2BD8               	goto	u6430
  8487  0BD7                     u6431:
  8488  0BD7  2BD9               	goto	l3899
  8489  0BD8                     u6430:
  8490  0BD8                     l3897:
  8491  0BD8  1442               	bsf	___flmul@prod,0
  8492  0BD9                     l3899:
  8493  0BD9  3001               	movlw	1
  8494  0BDA  00B6               	movwf	??___flmul
  8495  0BDB                     u6445:
  8496  0BDB  1003               	clrc
  8497  0BDC  0DBD               	rlf	___flmul@grs,f
  8498  0BDD  0DBE               	rlf	___flmul@grs+1,f
  8499  0BDE  0DBF               	rlf	___flmul@grs+2,f
  8500  0BDF  0DC0               	rlf	___flmul@grs+3,f
  8501  0BE0  0BB6               	decfsz	??___flmul,f
  8502  0BE1  2BDB               	goto	u6445
  8503  0BE2                     l3901:
  8504  0BE2  30FF               	movlw	255
  8505  0BE3  07C6               	addwf	___flmul@temp,f
  8506  0BE4  1803               	skipnc
  8507  0BE5  0AC7               	incf	___flmul@temp+1,f
  8508  0BE6  30FF               	movlw	255
  8509  0BE7  07C7               	addwf	___flmul@temp+1,f
  8510  0BE8                     l3903:
  8511  0BE8  1FC4               	btfss	___flmul@prod+2,7
  8512  0BE9  2BEB               	goto	u6451
  8513  0BEA  2BEC               	goto	u6450
  8514  0BEB                     u6451:
  8515  0BEB  2BCB               	goto	l3893
  8516  0BEC                     u6450:
  8517  0BEC                     l3905:
  8518  0BEC  01BC               	clrf	___flmul@aexp
  8519  0BED                     l3907:
  8520  0BED  1FC0               	btfss	___flmul@grs+3,7
  8521  0BEE  2BF0               	goto	u6461
  8522  0BEF  2BF1               	goto	u6460
  8523  0BF0                     u6461:
  8524  0BF0  2C0D               	goto	l3915
  8525  0BF1                     u6460:
  8526  0BF1                     l3909:
  8527  0BF1  30FF               	movlw	255
  8528  0BF2  053D               	andwf	___flmul@grs,w
  8529  0BF3  00B6               	movwf	??___flmul
  8530  0BF4  30FF               	movlw	255
  8531  0BF5  053E               	andwf	___flmul@grs+1,w
  8532  0BF6  00B7               	movwf	??___flmul+1
  8533  0BF7  30FF               	movlw	255
  8534  0BF8  053F               	andwf	___flmul@grs+2,w
  8535  0BF9  00B8               	movwf	??___flmul+2
  8536  0BFA  307F               	movlw	127
  8537  0BFB  0540               	andwf	___flmul@grs+3,w
  8538  0BFC  00B9               	movwf	??___flmul+3
  8539  0BFD  0839               	movf	??___flmul+3,w
  8540  0BFE  0438               	iorwf	??___flmul+2,w
  8541  0BFF  0437               	iorwf	??___flmul+1,w
  8542  0C00  0436               	iorwf	??___flmul,w
  8543  0C01  1903               	skipnz
  8544  0C02  2C04               	goto	u6471
  8545  0C03  2C05               	goto	u6470
  8546  0C04                     u6471:
  8547  0C04  2C08               	goto	l859
  8548  0C05                     u6470:
  8549  0C05                     l3911:
  8550  0C05  01BC               	clrf	___flmul@aexp
  8551  0C06  0ABC               	incf	___flmul@aexp,f
  8552  0C07  2C0D               	goto	l3915
  8553  0C08                     l859:
  8554  0C08  1C42               	btfss	___flmul@prod,0
  8555  0C09  2C0B               	goto	u6481
  8556  0C0A  2C0C               	goto	u6480
  8557  0C0B                     u6481:
  8558  0C0B  2C0D               	goto	l3915
  8559  0C0C                     u6480:
  8560  0C0C  2C05               	goto	l3911
  8561  0C0D                     l3915:
  8562  0C0D  083C               	movf	___flmul@aexp,w
  8563  0C0E  1903               	btfsc	3,2
  8564  0C0F  2C11               	goto	u6491
  8565  0C10  2C12               	goto	u6490
  8566  0C11                     u6491:
  8567  0C11  2C43               	goto	l3925
  8568  0C12                     u6490:
  8569  0C12                     l3917:
  8570  0C12  3001               	movlw	1
  8571  0C13  07C2               	addwf	___flmul@prod,f
  8572  0C14  3000               	movlw	0
  8573  0C15  1803               	skipnc
  8574  0C16  3001               	movlw	1
  8575  0C17  07C3               	addwf	___flmul@prod+1,f
  8576  0C18  3000               	movlw	0
  8577  0C19  1803               	skipnc
  8578  0C1A  3001               	movlw	1
  8579  0C1B  07C4               	addwf	___flmul@prod+2,f
  8580  0C1C  3000               	movlw	0
  8581  0C1D  1803               	skipnc
  8582  0C1E  3001               	movlw	1
  8583  0C1F  07C5               	addwf	___flmul@prod+3,f
  8584  0C20                     l3919:
  8585  0C20  1C45               	btfss	___flmul@prod+3,0
  8586  0C21  2C23               	goto	u6501
  8587  0C22  2C24               	goto	u6500
  8588  0C23                     u6501:
  8589  0C23  2C43               	goto	l3925
  8590  0C24                     u6500:
  8591  0C24                     l3921:
  8592  0C24  0842               	movf	___flmul@prod,w
  8593  0C25  00B6               	movwf	??___flmul
  8594  0C26  0843               	movf	___flmul@prod+1,w
  8595  0C27  00B7               	movwf	??___flmul+1
  8596  0C28  0844               	movf	___flmul@prod+2,w
  8597  0C29  00B8               	movwf	??___flmul+2
  8598  0C2A  0845               	movf	___flmul@prod+3,w
  8599  0C2B  00B9               	movwf	??___flmul+3
  8600  0C2C  3001               	movlw	1
  8601  0C2D  00BA               	movwf	??___flmul+4
  8602  0C2E                     u6515:
  8603  0C2E  0D39               	rlf	??___flmul+3,w
  8604  0C2F  0CB9               	rrf	??___flmul+3,f
  8605  0C30  0CB8               	rrf	??___flmul+2,f
  8606  0C31  0CB7               	rrf	??___flmul+1,f
  8607  0C32  0CB6               	rrf	??___flmul,f
  8608  0C33                     u6510:
  8609  0C33  0BBA               	decfsz	??___flmul+4,f
  8610  0C34  2C2E               	goto	u6515
  8611  0C35  0839               	movf	??___flmul+3,w
  8612  0C36  00C5               	movwf	___flmul@prod+3
  8613  0C37  0838               	movf	??___flmul+2,w
  8614  0C38  00C4               	movwf	___flmul@prod+2
  8615  0C39  0837               	movf	??___flmul+1,w
  8616  0C3A  00C3               	movwf	___flmul@prod+1
  8617  0C3B  0836               	movf	??___flmul,w
  8618  0C3C  00C2               	movwf	___flmul@prod
  8619  0C3D                     l3923:
  8620  0C3D  3001               	movlw	1
  8621  0C3E  07C6               	addwf	___flmul@temp,f
  8622  0C3F  1803               	skipnc
  8623  0C40  0AC7               	incf	___flmul@temp+1,f
  8624  0C41  3000               	movlw	0
  8625  0C42  07C7               	addwf	___flmul@temp+1,f
  8626  0C43                     l3925:
  8627  0C43  0847               	movf	___flmul@temp+1,w
  8628  0C44  3A80               	xorlw	128
  8629  0C45  00FF               	movwf	btemp+1
  8630  0C46  3080               	movlw	128
  8631  0C47  027F               	subwf	btemp+1,w
  8632  0C48  1D03               	skipz
  8633  0C49  2C4C               	goto	u6525
  8634  0C4A  30FF               	movlw	255
  8635  0C4B  0246               	subwf	___flmul@temp,w
  8636  0C4C                     u6525:
  8637  0C4C  1C03               	skipc
  8638  0C4D  2C4F               	goto	u6521
  8639  0C4E  2C50               	goto	u6520
  8640  0C4F                     u6521:
  8641  0C4F  2C5B               	goto	l3929
  8642  0C50                     u6520:
  8643  0C50                     l3927:
  8644  0C50  307F               	movlw	127
  8645  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  8646  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  8647  0C53  00C5               	movwf	___flmul@prod+3
  8648  0C54  3080               	movlw	128
  8649  0C55  00C4               	movwf	___flmul@prod+2
  8650  0C56  3000               	movlw	0
  8651  0C57  00C3               	movwf	___flmul@prod+1
  8652  0C58  3000               	movlw	0
  8653  0C59  00C2               	movwf	___flmul@prod
  8654  0C5A  2C90               	goto	l865
  8655  0C5B                     l3929:
  8656  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  8657  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  8658  0C5D  0847               	movf	___flmul@temp+1,w
  8659  0C5E  3A80               	xorlw	128
  8660  0C5F  00FF               	movwf	btemp+1
  8661  0C60  3080               	movlw	128
  8662  0C61  027F               	subwf	btemp+1,w
  8663  0C62  1D03               	skipz
  8664  0C63  2C66               	goto	u6535
  8665  0C64  3001               	movlw	1
  8666  0C65  0246               	subwf	___flmul@temp,w
  8667  0C66                     u6535:
  8668  0C66  1803               	skipnc
  8669  0C67  2C69               	goto	u6531
  8670  0C68  2C6A               	goto	u6530
  8671  0C69                     u6531:
  8672  0C69  2C76               	goto	l3935
  8673  0C6A                     u6530:
  8674  0C6A                     l3931:
  8675  0C6A  3000               	movlw	0
  8676  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8677  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  8678  0C6D  00C5               	movwf	___flmul@prod+3
  8679  0C6E  3000               	movlw	0
  8680  0C6F  00C4               	movwf	___flmul@prod+2
  8681  0C70  3000               	movlw	0
  8682  0C71  00C3               	movwf	___flmul@prod+1
  8683  0C72  3000               	movlw	0
  8684  0C73  00C2               	movwf	___flmul@prod
  8685  0C74                     l3933:
  8686  0C74  01BB               	clrf	___flmul@sign
  8687  0C75  2C90               	goto	l865
  8688  0C76                     l3935:
  8689  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8690  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  8691  0C78  0846               	movf	___flmul@temp,w
  8692  0C79  00B6               	movwf	??___flmul
  8693  0C7A  0836               	movf	??___flmul,w
  8694  0C7B  00C1               	movwf	___flmul@bexp
  8695  0C7C  30FF               	movlw	255
  8696  0C7D  05C2               	andwf	___flmul@prod,f
  8697  0C7E  30FF               	movlw	255
  8698  0C7F  05C3               	andwf	___flmul@prod+1,f
  8699  0C80  307F               	movlw	127
  8700  0C81  05C4               	andwf	___flmul@prod+2,f
  8701  0C82  3000               	movlw	0
  8702  0C83  05C5               	andwf	___flmul@prod+3,f
  8703  0C84                     l3937:
  8704  0C84  1C41               	btfss	___flmul@bexp,0
  8705  0C85  2C87               	goto	u6541
  8706  0C86  2C88               	goto	u6540
  8707  0C87                     u6541:
  8708  0C87  2C89               	goto	l3941
  8709  0C88                     u6540:
  8710  0C88                     l3939:
  8711  0C88  17C4               	bsf	___flmul@prod+2,7
  8712  0C89                     l3941:
  8713  0C89  0841               	movf	___flmul@bexp,w
  8714  0C8A  00B6               	movwf	??___flmul
  8715  0C8B  1003               	clrc
  8716  0C8C  0C36               	rrf	??___flmul,w
  8717  0C8D  00B7               	movwf	??___flmul+1
  8718  0C8E  0837               	movf	??___flmul+1,w
  8719  0C8F  00C5               	movwf	___flmul@prod+3
  8720  0C90                     l865:
  8721  0C90  083B               	movf	___flmul@sign,w
  8722  0C91  00B6               	movwf	??___flmul
  8723  0C92  0836               	movf	??___flmul,w
  8724  0C93  04C5               	iorwf	___flmul@prod+3,f
  8725  0C94                     l3943:
  8726  0C94  0845               	movf	___flmul@prod+3,w
  8727  0C95  00B1               	movwf	?___flmul+3
  8728  0C96  0844               	movf	___flmul@prod+2,w
  8729  0C97  00B0               	movwf	?___flmul+2
  8730  0C98  0843               	movf	___flmul@prod+1,w
  8731  0C99  00AF               	movwf	?___flmul+1
  8732  0C9A  0842               	movf	___flmul@prod,w
  8733  0C9B  00AE               	movwf	?___flmul
  8734  0C9C                     l853:
  8735  0C9C  0008               	return
  8736  0C9D                     __end_of___flmul:
  8737                           
  8738                           	psect	text25
  8739  19CF                     __ptext25:	
  8740 ;; *************** function __Umul8_16 *****************
  8741 ;; Defined at:
  8742 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;  multiplier      1    wreg     unsigned char 
  8745 ;;  multiplicand    1    5[COMMON] unsigned char 
  8746 ;; Auto vars:     Size  Location     Type
  8747 ;;  multiplier      1    6[BANK0 ] unsigned char 
  8748 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  8749 ;;  product         2    2[BANK0 ] unsigned int 
  8750 ;; Return value:  Size  Location     Type
  8751 ;;                  2    5[COMMON] unsigned int 
  8752 ;; Registers used:
  8753 ;;		wreg, status,2, status,0
  8754 ;; Tracked objects:
  8755 ;;		On entry : 0/0
  8756 ;;		On exit  : 0/0
  8757 ;;		Unchanged: 0/0
  8758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8759 ;;      Params:         2       0       0       0       0
  8760 ;;      Locals:         0       5       0       0       0
  8761 ;;      Temps:          0       2       0       0       0
  8762 ;;      Totals:         2       7       0       0       0
  8763 ;;Total ram usage:        9 bytes
  8764 ;; Hardware stack levels used:    1
  8765 ;; Hardware stack levels required when called:    2
  8766 ;; This function calls:
  8767 ;;		Nothing
  8768 ;; This function is called by:
  8769 ;;		___flmul
  8770 ;; This function uses a non-reentrant model
  8771 ;;
  8772                           
  8773                           
  8774                           ;psect for function __Umul8_16
  8775  19CF                     __Umul8_16:
  8776                           
  8777                           ;incstack = 0
  8778                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8779                           ;__Umul8_16@multiplier stored from wreg
  8780  19CF  1283               	bcf	3,5	;RP0=0, select bank0
  8781  19D0  1303               	bcf	3,6	;RP1=0, select bank0
  8782  19D1  00A6               	movwf	__Umul8_16@multiplier
  8783  19D2                     l3689:
  8784  19D2  01A2               	clrf	__Umul8_16@product
  8785  19D3  01A3               	clrf	__Umul8_16@product+1
  8786  19D4                     l3691:
  8787  19D4  0875               	movf	__Umul8_16@multiplicand,w
  8788  19D5  00A0               	movwf	??__Umul8_16
  8789  19D6  01A1               	clrf	??__Umul8_16+1
  8790  19D7  0820               	movf	??__Umul8_16,w
  8791  19D8  00A4               	movwf	__Umul8_16@word_mpld
  8792  19D9  0821               	movf	??__Umul8_16+1,w
  8793  19DA  00A5               	movwf	__Umul8_16@word_mpld+1
  8794  19DB                     l3693:
  8795  19DB  1C26               	btfss	__Umul8_16@multiplier,0
  8796  19DC  29DE               	goto	u5851
  8797  19DD  29DF               	goto	u5850
  8798  19DE                     u5851:
  8799  19DE  29E5               	goto	l872
  8800  19DF                     u5850:
  8801  19DF                     l3695:
  8802  19DF  0824               	movf	__Umul8_16@word_mpld,w
  8803  19E0  07A2               	addwf	__Umul8_16@product,f
  8804  19E1  1803               	skipnc
  8805  19E2  0AA3               	incf	__Umul8_16@product+1,f
  8806  19E3  0825               	movf	__Umul8_16@word_mpld+1,w
  8807  19E4  07A3               	addwf	__Umul8_16@product+1,f
  8808  19E5                     l872:
  8809  19E5  3001               	movlw	1
  8810  19E6                     u5865:
  8811  19E6  1003               	clrc
  8812  19E7  0DA4               	rlf	__Umul8_16@word_mpld,f
  8813  19E8  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  8814  19E9  3EFF               	addlw	-1
  8815  19EA  1D03               	skipz
  8816  19EB  29E6               	goto	u5865
  8817  19EC  1003               	clrc
  8818  19ED  0CA6               	rrf	__Umul8_16@multiplier,f
  8819  19EE                     l3697:
  8820  19EE  0826               	movf	__Umul8_16@multiplier,w
  8821  19EF  1D03               	btfss	3,2
  8822  19F0  29F2               	goto	u5871
  8823  19F1  29F3               	goto	u5870
  8824  19F2                     u5871:
  8825  19F2  29DB               	goto	l3693
  8826  19F3                     u5870:
  8827  19F3                     l3699:
  8828  19F3  0823               	movf	__Umul8_16@product+1,w
  8829  19F4  00F6               	movwf	?__Umul8_16+1
  8830  19F5  0822               	movf	__Umul8_16@product,w
  8831  19F6  00F5               	movwf	?__Umul8_16
  8832  19F7                     l874:
  8833  19F7  0008               	return
  8834  19F8                     __end_of__Umul8_16:
  8835                           
  8836                           	psect	text26
  8837  1901                     __ptext26:	
  8838 ;; *************** function _cfg_usart *****************
  8839 ;; Defined at:
  8840 ;;		line 217 in file "main.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;		None
  8843 ;; Auto vars:     Size  Location     Type
  8844 ;;		None
  8845 ;; Return value:  Size  Location     Type
  8846 ;;                  1    wreg      void 
  8847 ;; Registers used:
  8848 ;;		wreg, status,2
  8849 ;; Tracked objects:
  8850 ;;		On entry : 0/0
  8851 ;;		On exit  : 0/0
  8852 ;;		Unchanged: 0/0
  8853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8854 ;;      Params:         0       0       0       0       0
  8855 ;;      Locals:         0       0       0       0       0
  8856 ;;      Temps:          0       0       0       0       0
  8857 ;;      Totals:         0       0       0       0       0
  8858 ;;Total ram usage:        0 bytes
  8859 ;; Hardware stack levels used:    1
  8860 ;; Hardware stack levels required when called:    2
  8861 ;; This function calls:
  8862 ;;		Nothing
  8863 ;; This function is called by:
  8864 ;;		_main
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868                           
  8869                           ;psect for function _cfg_usart
  8870  1901                     _cfg_usart:
  8871  1901                     l3265:	
  8872                           ;incstack = 0
  8873                           ; Regs used in _cfg_usart: [wreg+status,2]
  8874                           
  8875                           
  8876                           ;main.c: 219:     TXSTAbits.SYNC = 0;
  8877  1901  1683               	bsf	3,5	;RP0=1, select bank1
  8878  1902  1303               	bcf	3,6	;RP1=0, select bank1
  8879  1903  1218               	bcf	24,4	;volatile
  8880                           
  8881                           ;main.c: 220:     TXSTAbits.BRGH = 1;
  8882  1904  1518               	bsf	24,2	;volatile
  8883                           
  8884                           ;main.c: 222:     BAUDCTLbits.BRG16 = 1;
  8885  1905  1683               	bsf	3,5	;RP0=1, select bank3
  8886  1906  1703               	bsf	3,6	;RP1=1, select bank3
  8887  1907  1587               	bsf	7,3	;volatile
  8888  1908                     l3267:
  8889                           
  8890                           ;main.c: 224:     SPBRG = 25;
  8891  1908  3019               	movlw	25
  8892  1909  1683               	bsf	3,5	;RP0=1, select bank1
  8893  190A  1303               	bcf	3,6	;RP1=0, select bank1
  8894  190B  0099               	movwf	25	;volatile
  8895  190C                     l3269:
  8896                           
  8897                           ;main.c: 225:     SPBRGH = 0;
  8898  190C  019A               	clrf	26	;volatile
  8899  190D                     l3271:
  8900                           
  8901                           ;main.c: 227:     RCSTAbits.SPEN = 1;
  8902  190D  1283               	bcf	3,5	;RP0=0, select bank0
  8903  190E  1303               	bcf	3,6	;RP1=0, select bank0
  8904  190F  1798               	bsf	24,7	;volatile
  8905  1910                     l3273:
  8906                           
  8907                           ;main.c: 228:     RCSTAbits.RX9 = 0;
  8908  1910  1318               	bcf	24,6	;volatile
  8909  1911                     l3275:
  8910                           
  8911                           ;main.c: 229:     RCSTAbits.CREN = 1;
  8912  1911  1618               	bsf	24,4	;volatile
  8913  1912                     l3277:
  8914                           
  8915                           ;main.c: 231:     TXSTAbits.TXEN = 1;
  8916  1912  1683               	bsf	3,5	;RP0=1, select bank1
  8917  1913  1303               	bcf	3,6	;RP1=0, select bank1
  8918  1914  1698               	bsf	24,5	;volatile
  8919  1915                     l140:
  8920  1915  0008               	return
  8921  1916                     __end_of_cfg_usart:
  8922                           
  8923                           	psect	text27
  8924  18DD                     __ptext27:	
  8925 ;; *************** function _cfg_io *****************
  8926 ;; Defined at:
  8927 ;;		line 187 in file "main.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;		None
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;		None
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  1    wreg      void 
  8934 ;; Registers used:
  8935 ;;		wreg, status,2
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8941 ;;      Params:         0       0       0       0       0
  8942 ;;      Locals:         0       0       0       0       0
  8943 ;;      Temps:          0       0       0       0       0
  8944 ;;      Totals:         0       0       0       0       0
  8945 ;;Total ram usage:        0 bytes
  8946 ;; Hardware stack levels used:    1
  8947 ;; Hardware stack levels required when called:    2
  8948 ;; This function calls:
  8949 ;;		Nothing
  8950 ;; This function is called by:
  8951 ;;		_main
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           
  8956                           ;psect for function _cfg_io
  8957  18DD                     _cfg_io:
  8958  18DD                     l3239:	
  8959                           ;incstack = 0
  8960                           ; Regs used in _cfg_io: [wreg+status,2]
  8961                           
  8962                           
  8963                           ;main.c: 188:     ANSELH = 0x00;
  8964  18DD  1683               	bsf	3,5	;RP0=1, select bank3
  8965  18DE  1703               	bsf	3,6	;RP1=1, select bank3
  8966  18DF  0189               	clrf	9	;volatile
  8967  18E0                     l3241:
  8968                           
  8969                           ;main.c: 189:     ANSEL = 0x20;
  8970  18E0  3020               	movlw	32
  8971  18E1  0088               	movwf	8	;volatile
  8972  18E2                     l3243:
  8973                           
  8974                           ;main.c: 191:     TRISB = 0x03;
  8975  18E2  3003               	movlw	3
  8976  18E3  1683               	bsf	3,5	;RP0=1, select bank1
  8977  18E4  1303               	bcf	3,6	;RP1=0, select bank1
  8978  18E5  0086               	movwf	6	;volatile
  8979                           
  8980                           ;main.c: 192:     TRISC = 0x00;
  8981  18E6  0187               	clrf	7	;volatile
  8982                           
  8983                           ;main.c: 193:     TRISA = 0X00;
  8984  18E7  0185               	clrf	5	;volatile
  8985                           
  8986                           ;main.c: 194:     TRISD = 0X00;
  8987  18E8  0188               	clrf	8	;volatile
  8988  18E9                     l3245:
  8989                           
  8990                           ;main.c: 195:     TRISE = 0x03;
  8991  18E9  3003               	movlw	3
  8992  18EA  0089               	movwf	9	;volatile
  8993  18EB                     l3247:
  8994                           
  8995                           ;main.c: 196:     PORTA = 0X00;
  8996  18EB  1283               	bcf	3,5	;RP0=0, select bank0
  8997  18EC  1303               	bcf	3,6	;RP1=0, select bank0
  8998  18ED  0185               	clrf	5	;volatile
  8999  18EE                     l131:
  9000  18EE  0008               	return
  9001  18EF                     __end_of_cfg_io:
  9002                           
  9003                           	psect	text28
  9004  18AF                     __ptext28:	
  9005 ;; *************** function _cfg_inte *****************
  9006 ;; Defined at:
  9007 ;;		line 235 in file "main.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;		None
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;		None
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  1    wreg      void 
  9014 ;; Registers used:
  9015 ;;		None
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9021 ;;      Params:         0       0       0       0       0
  9022 ;;      Locals:         0       0       0       0       0
  9023 ;;      Temps:          0       0       0       0       0
  9024 ;;      Totals:         0       0       0       0       0
  9025 ;;Total ram usage:        0 bytes
  9026 ;; Hardware stack levels used:    1
  9027 ;; Hardware stack levels required when called:    2
  9028 ;; This function calls:
  9029 ;;		Nothing
  9030 ;; This function is called by:
  9031 ;;		_main
  9032 ;; This function uses a non-reentrant model
  9033 ;;
  9034                           
  9035                           
  9036                           ;psect for function _cfg_inte
  9037  18AF                     _cfg_inte:
  9038  18AF                     l3255:	
  9039                           ;incstack = 0
  9040                           ; Regs used in _cfg_inte: []
  9041                           
  9042                           
  9043                           ;main.c: 237:     INTCONbits.GIE = 1;
  9044  18AF  178B               	bsf	11,7	;volatile
  9045                           
  9046                           ;main.c: 238:     INTCONbits.PEIE = 1;
  9047  18B0  170B               	bsf	11,6	;volatile
  9048                           
  9049                           ;main.c: 239:     PIE1bits.RCIE = 1;
  9050  18B1  1683               	bsf	3,5	;RP0=1, select bank1
  9051  18B2  1303               	bcf	3,6	;RP1=0, select bank1
  9052  18B3  168C               	bsf	12,5	;volatile
  9053                           
  9054                           ;main.c: 240:     PIE1bits.ADIE = 1;
  9055  18B4  170C               	bsf	12,6	;volatile
  9056                           
  9057                           ;main.c: 241:     PIR1bits.ADIF = 0;
  9058  18B5  1283               	bcf	3,5	;RP0=0, select bank0
  9059  18B6  1303               	bcf	3,6	;RP1=0, select bank0
  9060  18B7  130C               	bcf	12,6	;volatile
  9061  18B8                     l143:
  9062  18B8  0008               	return
  9063  18B9                     __end_of_cfg_inte:
  9064                           
  9065                           	psect	text29
  9066  189F                     __ptext29:	
  9067 ;; *************** function _cfg_clk *****************
  9068 ;; Defined at:
  9069 ;;		line 213 in file "main.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;		None
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;		None
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      void 
  9076 ;; Registers used:
  9077 ;;		wreg, status,2, status,0
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9083 ;;      Params:         0       0       0       0       0
  9084 ;;      Locals:         0       0       0       0       0
  9085 ;;      Temps:          0       0       0       0       0
  9086 ;;      Totals:         0       0       0       0       0
  9087 ;;Total ram usage:        0 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; Hardware stack levels required when called:    2
  9090 ;; This function calls:
  9091 ;;		Nothing
  9092 ;; This function is called by:
  9093 ;;		_main
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           
  9097                           
  9098                           ;psect for function _cfg_clk
  9099  189F                     _cfg_clk:
  9100  189F                     l3251:	
  9101                           ;incstack = 0
  9102                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
  9103                           
  9104                           
  9105                           ;main.c: 214:     OSCCONbits.IRCF = 0b100;
  9106  189F  1683               	bsf	3,5	;RP0=1, select bank1
  9107  18A0  1303               	bcf	3,6	;RP1=0, select bank1
  9108  18A1  080F               	movf	15,w	;volatile
  9109  18A2  398F               	andlw	-113
  9110  18A3  3840               	iorlw	64
  9111  18A4  008F               	movwf	15	;volatile
  9112  18A5                     l3253:
  9113                           
  9114                           ;main.c: 215:     OSCCONbits.SCS = 1;
  9115  18A5  140F               	bsf	15,0	;volatile
  9116  18A6                     l137:
  9117  18A6  0008               	return
  9118  18A7                     __end_of_cfg_clk:
  9119                           
  9120                           	psect	text30
  9121  07E7                     __ptext30:	
  9122 ;; *************** function _cfg_adc *****************
  9123 ;; Defined at:
  9124 ;;		line 200 in file "main.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;		None
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;		None
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  1    wreg      void 
  9131 ;; Registers used:
  9132 ;;		wreg, status,2, status,0
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9138 ;;      Params:         0       0       0       0       0
  9139 ;;      Locals:         0       0       0       0       0
  9140 ;;      Temps:          1       0       0       0       0
  9141 ;;      Totals:         1       0       0       0       0
  9142 ;;Total ram usage:        1 bytes
  9143 ;; Hardware stack levels used:    1
  9144 ;; Hardware stack levels required when called:    2
  9145 ;; This function calls:
  9146 ;;		Nothing
  9147 ;; This function is called by:
  9148 ;;		_main
  9149 ;; This function uses a non-reentrant model
  9150 ;;
  9151                           
  9152                           
  9153                           ;psect for function _cfg_adc
  9154  07E7                     _cfg_adc:
  9155  07E7                     l3257:	
  9156                           ;incstack = 0
  9157                           ; Regs used in _cfg_adc: [wreg+status,2+status,0]
  9158                           
  9159                           
  9160                           ;main.c: 201:     ADCON1bits.ADFM = 0;
  9161  07E7  1683               	bsf	3,5	;RP0=1, select bank1
  9162  07E8  1303               	bcf	3,6	;RP1=0, select bank1
  9163  07E9  139F               	bcf	31,7	;volatile
  9164                           
  9165                           ;main.c: 202:     ADCON1bits.VCFG0 = 0;
  9166  07EA  121F               	bcf	31,4	;volatile
  9167                           
  9168                           ;main.c: 203:     ADCON1bits.VCFG1 = 0;
  9169  07EB  129F               	bcf	31,5	;volatile
  9170                           
  9171                           ;main.c: 205:     ADCON0bits.ADCS0 = 0;
  9172  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  9173  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  9174  07EE  131F               	bcf	31,6	;volatile
  9175                           
  9176                           ;main.c: 206:     ADCON0bits.ADCS1 = 0;
  9177  07EF  139F               	bcf	31,7	;volatile
  9178  07F0                     l3259:
  9179                           
  9180                           ;main.c: 207:     ADCON0bits.CHS = 5;
  9181  07F0  081F               	movf	31,w	;volatile
  9182  07F1  39C3               	andlw	-61
  9183  07F2  3814               	iorlw	20
  9184  07F3  009F               	movwf	31	;volatile
  9185  07F4                     l3261:
  9186                           
  9187                           ;main.c: 208:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9188  07F4  3042               	movlw	66
  9189  07F5  00F5               	movwf	??_cfg_adc
  9190  07F6                     u7787:
  9191  07F6  0BF5               	decfsz	??_cfg_adc,f
  9192  07F7  2FF6               	goto	u7787
  9193  07F8  0000               	nop
  9194  07F9                     l3263:
  9195                           
  9196                           ;main.c: 209:     ADCON0bits.ADON = 1;
  9197  07F9  1283               	bcf	3,5	;RP0=0, select bank0
  9198  07FA  1303               	bcf	3,6	;RP1=0, select bank0
  9199  07FB  141F               	bsf	31,0	;volatile
  9200  07FC                     l134:
  9201  07FC  0008               	return
  9202  07FD                     __end_of_cfg_adc:
  9203                           
  9204                           	psect	text31
  9205  1AB2                     __ptext31:	
  9206 ;; *************** function _Lcd_Write_String *****************
  9207 ;; Defined at:
  9208 ;;		line 110 in file "LCD.c"
  9209 ;; Parameters:    Size  Location     Type
  9210 ;;  a               2    0[BANK0 ] PTR unsigned char 
  9211 ;;		 -> f1(10), STR_1(18), 
  9212 ;; Auto vars:     Size  Location     Type
  9213 ;;  i               2    5[BANK0 ] int 
  9214 ;; Return value:  Size  Location     Type
  9215 ;;                  1    wreg      void 
  9216 ;; Registers used:
  9217 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9218 ;; Tracked objects:
  9219 ;;		On entry : 0/0
  9220 ;;		On exit  : 0/0
  9221 ;;		Unchanged: 0/0
  9222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9223 ;;      Params:         0       2       0       0       0
  9224 ;;      Locals:         0       2       0       0       0
  9225 ;;      Temps:          0       3       0       0       0
  9226 ;;      Totals:         0       7       0       0       0
  9227 ;;Total ram usage:        7 bytes
  9228 ;; Hardware stack levels used:    1
  9229 ;; Hardware stack levels required when called:    4
  9230 ;; This function calls:
  9231 ;;		_Lcd_Write_Char
  9232 ;; This function is called by:
  9233 ;;		_main
  9234 ;; This function uses a non-reentrant model
  9235 ;;
  9236                           
  9237                           
  9238                           ;psect for function _Lcd_Write_String
  9239  1AB2                     _Lcd_Write_String:
  9240  1AB2                     l4201:	
  9241                           ;incstack = 0
  9242                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9243                           
  9244                           
  9245                           ;LCD.c: 111:     int i;;LCD.c: 112:     for (i = 0; a[i] != '\0'; i++)
  9246  1AB2  1283               	bcf	3,5	;RP0=0, select bank0
  9247  1AB3  1303               	bcf	3,6	;RP1=0, select bank0
  9248  1AB4  01A5               	clrf	Lcd_Write_String@i
  9249  1AB5  01A6               	clrf	Lcd_Write_String@i+1
  9250  1AB6  2ADB               	goto	l4207
  9251  1AB7                     l4203:
  9252                           
  9253                           ;LCD.c: 113:         Lcd_Write_Char(a[i]);
  9254  1AB7  0825               	movf	Lcd_Write_String@i,w
  9255  1AB8  0720               	addwf	Lcd_Write_String@a,w
  9256  1AB9  00A3               	movwf	??_Lcd_Write_String+1
  9257  1ABA  0821               	movf	Lcd_Write_String@a+1,w
  9258  1ABB  00A2               	movwf	??_Lcd_Write_String
  9259  1ABC  1803               	skipnc
  9260  1ABD  0AA2               	incf	??_Lcd_Write_String,f
  9261  1ABE  1FA5               	btfss	Lcd_Write_String@i,7
  9262  1ABF  2AC1               	goto	u7240
  9263  1AC0  03A2               	decf	??_Lcd_Write_String,f
  9264  1AC1                     u7240:
  9265  1AC1  1283               	bcf	3,5	;RP0=0, select bank0
  9266  1AC2  1303               	bcf	3,6	;RP1=0, select bank0
  9267  1AC3  0822               	movf	??_Lcd_Write_String,w
  9268  1AC4  00A4               	movwf	??_Lcd_Write_String+2
  9269  1AC5  0824               	movf	??_Lcd_Write_String+2,w
  9270  1AC6  00FF               	movwf	btemp+1
  9271  1AC7  0823               	movf	??_Lcd_Write_String+1,w
  9272  1AC8  0084               	movwf	4
  9273  1AC9  160A  118A  2000  160A  158A  	fcall	stringtab
  9274  1ACE  160A  158A  2130  160A  158A  	fcall	_Lcd_Write_Char
  9275  1AD3                     l4205:
  9276  1AD3  3001               	movlw	1
  9277  1AD4  1283               	bcf	3,5	;RP0=0, select bank0
  9278  1AD5  1303               	bcf	3,6	;RP1=0, select bank0
  9279  1AD6  07A5               	addwf	Lcd_Write_String@i,f
  9280  1AD7  1803               	skipnc
  9281  1AD8  0AA6               	incf	Lcd_Write_String@i+1,f
  9282  1AD9  3000               	movlw	0
  9283  1ADA  07A6               	addwf	Lcd_Write_String@i+1,f
  9284  1ADB                     l4207:
  9285  1ADB  0825               	movf	Lcd_Write_String@i,w
  9286  1ADC  0720               	addwf	Lcd_Write_String@a,w
  9287  1ADD  00A3               	movwf	??_Lcd_Write_String+1
  9288  1ADE  0821               	movf	Lcd_Write_String@a+1,w
  9289  1ADF  00A2               	movwf	??_Lcd_Write_String
  9290  1AE0  1803               	skipnc
  9291  1AE1  0AA2               	incf	??_Lcd_Write_String,f
  9292  1AE2  1FA5               	btfss	Lcd_Write_String@i,7
  9293  1AE3  2AE5               	goto	u7250
  9294  1AE4  03A2               	decf	??_Lcd_Write_String,f
  9295  1AE5                     u7250:
  9296  1AE5  1283               	bcf	3,5	;RP0=0, select bank0
  9297  1AE6  1303               	bcf	3,6	;RP1=0, select bank0
  9298  1AE7  0822               	movf	??_Lcd_Write_String,w
  9299  1AE8  00A4               	movwf	??_Lcd_Write_String+2
  9300  1AE9  0824               	movf	??_Lcd_Write_String+2,w
  9301  1AEA  00FF               	movwf	btemp+1
  9302  1AEB  0823               	movf	??_Lcd_Write_String+1,w
  9303  1AEC  0084               	movwf	4
  9304  1AED  160A  118A  2000  160A  158A  	fcall	stringtab
  9305  1AF2  3A00               	xorlw	0
  9306  1AF3  1D03               	skipz
  9307  1AF4  2AF6               	goto	u7261
  9308  1AF5  2AF7               	goto	u7260
  9309  1AF6                     u7261:
  9310  1AF6  2AB7               	goto	l4203
  9311  1AF7                     u7260:
  9312  1AF7                     l223:
  9313  1AF7  0008               	return
  9314  1AF8                     __end_of_Lcd_Write_String:
  9315                           
  9316                           	psect	text32
  9317  1930                     __ptext32:	
  9318 ;; *************** function _Lcd_Write_Char *****************
  9319 ;; Defined at:
  9320 ;;		line 94 in file "LCD.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;  a               1    wreg     unsigned char 
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;  a               1    7[COMMON] unsigned char 
  9325 ;; Return value:  Size  Location     Type
  9326 ;;                  1    wreg      void 
  9327 ;; Registers used:
  9328 ;;		wreg, status,2, status,0, pclath, cstack
  9329 ;; Tracked objects:
  9330 ;;		On entry : 0/0
  9331 ;;		On exit  : 0/0
  9332 ;;		Unchanged: 0/0
  9333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9334 ;;      Params:         0       0       0       0       0
  9335 ;;      Locals:         1       0       0       0       0
  9336 ;;      Temps:          1       0       0       0       0
  9337 ;;      Totals:         2       0       0       0       0
  9338 ;;Total ram usage:        2 bytes
  9339 ;; Hardware stack levels used:    1
  9340 ;; Hardware stack levels required when called:    3
  9341 ;; This function calls:
  9342 ;;		_Lcd_Port
  9343 ;; This function is called by:
  9344 ;;		_Lcd_Write_String
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348                           
  9349                           ;psect for function _Lcd_Write_Char
  9350  1930                     _Lcd_Write_Char:
  9351                           
  9352                           ;incstack = 0
  9353                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9354                           ;Lcd_Write_Char@a stored from wreg
  9355  1930  00F7               	movwf	Lcd_Write_Char@a
  9356  1931                     l3957:
  9357                           
  9358                           ;LCD.c: 98:     PORTCbits.RC0 = 1;
  9359  1931  1283               	bcf	3,5	;RP0=0, select bank0
  9360  1932  1303               	bcf	3,6	;RP1=0, select bank0
  9361  1933  1407               	bsf	7,0	;volatile
  9362  1934                     l3959:
  9363                           
  9364                           ;LCD.c: 99:     Lcd_Port(a);
  9365  1934  0877               	movf	Lcd_Write_Char@a,w
  9366  1935  160A  158A  2234  160A  158A  	fcall	_Lcd_Port
  9367  193A                     l3961:
  9368                           
  9369                           ;LCD.c: 100:     RC1 = 1;
  9370  193A  1283               	bcf	3,5	;RP0=0, select bank0
  9371  193B  1303               	bcf	3,6	;RP1=0, select bank0
  9372  193C  1487               	bsf	7,1	;volatile
  9373  193D                     l3963:
  9374                           
  9375                           ;LCD.c: 101:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9376  193D  301A               	movlw	26
  9377  193E  00F6               	movwf	??_Lcd_Write_Char
  9378  193F                     u7797:
  9379  193F  0BF6               	decfsz	??_Lcd_Write_Char,f
  9380  1940  293F               	goto	u7797
  9381  1941  0000               	nop
  9382  1942                     l3965:
  9383                           
  9384                           ;LCD.c: 102:     RC1 = 0;
  9385  1942  1283               	bcf	3,5	;RP0=0, select bank0
  9386  1943  1303               	bcf	3,6	;RP1=0, select bank0
  9387  1944  1087               	bcf	7,1	;volatile
  9388  1945                     l3967:
  9389                           
  9390                           ;LCD.c: 103:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9391  1945  301A               	movlw	26
  9392  1946  00F6               	movwf	??_Lcd_Write_Char
  9393  1947                     u7807:
  9394  1947  0BF6               	decfsz	??_Lcd_Write_Char,f
  9395  1948  2947               	goto	u7807
  9396  1949  0000               	nop
  9397  194A                     l217:
  9398  194A  0008               	return
  9399  194B                     __end_of_Lcd_Write_Char:
  9400                           
  9401                           	psect	text33
  9402  19A9                     __ptext33:	
  9403 ;; *************** function _Lcd_Set_Cursor *****************
  9404 ;; Defined at:
  9405 ;;		line 69 in file "LCD.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;  a               1    wreg     unsigned char 
  9408 ;;  b               1    1[BANK0 ] unsigned char 
  9409 ;; Auto vars:     Size  Location     Type
  9410 ;;  a               1    3[BANK0 ] unsigned char 
  9411 ;;  temp            1    4[BANK0 ] unsigned char 
  9412 ;; Return value:  Size  Location     Type
  9413 ;;                  1    wreg      void 
  9414 ;; Registers used:
  9415 ;;		wreg, status,2, status,0, pclath, cstack
  9416 ;; Tracked objects:
  9417 ;;		On entry : 0/0
  9418 ;;		On exit  : 0/0
  9419 ;;		Unchanged: 0/0
  9420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9421 ;;      Params:         0       1       0       0       0
  9422 ;;      Locals:         0       2       0       0       0
  9423 ;;      Temps:          0       1       0       0       0
  9424 ;;      Totals:         0       4       0       0       0
  9425 ;;Total ram usage:        4 bytes
  9426 ;; Hardware stack levels used:    1
  9427 ;; Hardware stack levels required when called:    4
  9428 ;; This function calls:
  9429 ;;		_Lcd_Cmd
  9430 ;; This function is called by:
  9431 ;;		_main
  9432 ;; This function uses a non-reentrant model
  9433 ;;
  9434                           
  9435                           
  9436                           ;psect for function _Lcd_Set_Cursor
  9437  19A9                     _Lcd_Set_Cursor:
  9438                           
  9439                           ;incstack = 0
  9440                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9441                           ;Lcd_Set_Cursor@a stored from wreg
  9442  19A9  1283               	bcf	3,5	;RP0=0, select bank0
  9443  19AA  1303               	bcf	3,6	;RP1=0, select bank0
  9444  19AB  00A3               	movwf	Lcd_Set_Cursor@a
  9445  19AC                     l4189:
  9446                           
  9447                           ;LCD.c: 70:     char temp;;LCD.c: 71:     if (a == 1) {
  9448  19AC  0323               	decf	Lcd_Set_Cursor@a,w
  9449  19AD  1D03               	btfss	3,2
  9450  19AE  29B0               	goto	u7221
  9451  19AF  29B1               	goto	u7220
  9452  19B0                     u7221:
  9453  19B0  29BD               	goto	l4195
  9454  19B1                     u7220:
  9455  19B1                     l4191:
  9456                           
  9457                           ;LCD.c: 72:         temp = 0x80 + b - 1;
  9458  19B1  0821               	movf	Lcd_Set_Cursor@b,w
  9459  19B2  3E7F               	addlw	127
  9460  19B3  00A2               	movwf	??_Lcd_Set_Cursor
  9461  19B4  0822               	movf	??_Lcd_Set_Cursor,w
  9462  19B5  00A4               	movwf	Lcd_Set_Cursor@temp
  9463  19B6                     l4193:
  9464                           
  9465                           ;LCD.c: 73:         Lcd_Cmd(temp);
  9466  19B6  0824               	movf	Lcd_Set_Cursor@temp,w
  9467  19B7  160A  158A  2116  160A  158A  	fcall	_Lcd_Cmd
  9468                           
  9469                           ;LCD.c: 74:     } else if (a == 2) {
  9470  19BC  29CE               	goto	l211
  9471  19BD                     l4195:
  9472  19BD  3002               	movlw	2
  9473  19BE  0623               	xorwf	Lcd_Set_Cursor@a,w
  9474  19BF  1D03               	btfss	3,2
  9475  19C0  29C2               	goto	u7231
  9476  19C1  29C3               	goto	u7230
  9477  19C2                     u7231:
  9478  19C2  29CE               	goto	l211
  9479  19C3                     u7230:
  9480  19C3                     l4197:
  9481                           
  9482                           ;LCD.c: 75:         temp = 0xC0 + b - 1;
  9483  19C3  0821               	movf	Lcd_Set_Cursor@b,w
  9484  19C4  3EBF               	addlw	191
  9485  19C5  00A2               	movwf	??_Lcd_Set_Cursor
  9486  19C6  0822               	movf	??_Lcd_Set_Cursor,w
  9487  19C7  00A4               	movwf	Lcd_Set_Cursor@temp
  9488  19C8                     l4199:
  9489                           
  9490                           ;LCD.c: 76:         Lcd_Cmd(temp);
  9491  19C8  0824               	movf	Lcd_Set_Cursor@temp,w
  9492  19C9  160A  158A  2116  160A  158A  	fcall	_Lcd_Cmd
  9493  19CE                     l211:
  9494  19CE  0008               	return
  9495  19CF                     __end_of_Lcd_Set_Cursor:
  9496                           
  9497                           	psect	text34
  9498  1B3E                     __ptext34:	
  9499 ;; *************** function _Lcd_Init *****************
  9500 ;; Defined at:
  9501 ;;		line 80 in file "LCD.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;		None
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		wreg, status,2, status,0, pclath, cstack
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9515 ;;      Params:         0       0       0       0       0
  9516 ;;      Locals:         0       0       0       0       0
  9517 ;;      Temps:          0       3       0       0       0
  9518 ;;      Totals:         0       3       0       0       0
  9519 ;;Total ram usage:        3 bytes
  9520 ;; Hardware stack levels used:    1
  9521 ;; Hardware stack levels required when called:    4
  9522 ;; This function calls:
  9523 ;;		_Lcd_Cmd
  9524 ;;		_Lcd_Port
  9525 ;; This function is called by:
  9526 ;;		_main
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           
  9531                           ;psect for function _Lcd_Init
  9532  1B3E                     _Lcd_Init:
  9533  1B3E                     l4177:	
  9534                           ;incstack = 0
  9535                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9536                           
  9537                           
  9538                           ;LCD.c: 81:     Lcd_Port(0x00);
  9539  1B3E  3000               	movlw	0
  9540  1B3F  160A  158A  2234  160A  158A  	fcall	_Lcd_Port
  9541  1B44                     l4179:
  9542                           
  9543                           ;LCD.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9544  1B44  3034               	movlw	52
  9545  1B45  1283               	bcf	3,5	;RP0=0, select bank0
  9546  1B46  1303               	bcf	3,6	;RP1=0, select bank0
  9547  1B47  00A2               	movwf	??_Lcd_Init+1
  9548  1B48  30F1               	movlw	241
  9549  1B49  00A1               	movwf	??_Lcd_Init
  9550  1B4A                     u7817:
  9551  1B4A  0BA1               	decfsz	??_Lcd_Init,f
  9552  1B4B  2B4A               	goto	u7817
  9553  1B4C  0BA2               	decfsz	??_Lcd_Init+1,f
  9554  1B4D  2B4A               	goto	u7817
  9555  1B4E                     l4181:
  9556                           
  9557                           ;LCD.c: 83:     Lcd_Cmd(0x3F);
  9558  1B4E  303F               	movlw	63
  9559  1B4F  160A  158A  2116  160A  158A  	fcall	_Lcd_Cmd
  9560                           
  9561                           ;LCD.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9562  1B54  300D               	movlw	13
  9563  1B55  1283               	bcf	3,5	;RP0=0, select bank0
  9564  1B56  1303               	bcf	3,6	;RP1=0, select bank0
  9565  1B57  00A2               	movwf	??_Lcd_Init+1
  9566  1B58  30FB               	movlw	251
  9567  1B59  00A1               	movwf	??_Lcd_Init
  9568  1B5A                     u7827:
  9569  1B5A  0BA1               	decfsz	??_Lcd_Init,f
  9570  1B5B  2B5A               	goto	u7827
  9571  1B5C  0BA2               	decfsz	??_Lcd_Init+1,f
  9572  1B5D  2B5A               	goto	u7827
  9573  1B5E                     l4183:
  9574                           
  9575                           ;LCD.c: 85:     Lcd_Cmd(0x3F);
  9576  1B5E  303F               	movlw	63
  9577  1B5F  160A  158A  2116  160A  158A  	fcall	_Lcd_Cmd
  9578  1B64                     l4185:
  9579                           
  9580                           ;LCD.c: 86:     _delay((unsigned long)((110)*(8000000/4000.0)));
  9581  1B64  3002               	movlw	2
  9582  1B65  1283               	bcf	3,5	;RP0=0, select bank0
  9583  1B66  1303               	bcf	3,6	;RP1=0, select bank0
  9584  1B67  00A3               	movwf	??_Lcd_Init+2
  9585  1B68  301E               	movlw	30
  9586  1B69  00A2               	movwf	??_Lcd_Init+1
  9587  1B6A  30B3               	movlw	179
  9588  1B6B  00A1               	movwf	??_Lcd_Init
  9589  1B6C                     u7837:
  9590  1B6C  0BA1               	decfsz	??_Lcd_Init,f
  9591  1B6D  2B6C               	goto	u7837
  9592  1B6E  0BA2               	decfsz	??_Lcd_Init+1,f
  9593  1B6F  2B6C               	goto	u7837
  9594  1B70  0BA3               	decfsz	??_Lcd_Init+2,f
  9595  1B71  2B6C               	goto	u7837
  9596                           
  9597                           ;LCD.c: 87:     Lcd_Cmd(0x3F);
  9598  1B72  303F               	movlw	63
  9599  1B73  160A  158A  2116  160A  158A  	fcall	_Lcd_Cmd
  9600                           
  9601                           ;LCD.c: 89:     Lcd_Cmd(0x38);
  9602  1B78  3038               	movlw	56
  9603  1B79  160A  158A  2116  160A  158A  	fcall	_Lcd_Cmd
  9604                           
  9605                           ;LCD.c: 90:     Lcd_Cmd(0x0C);
  9606  1B7E  300C               	movlw	12
  9607  1B7F  160A  158A  2116  160A  158A  	fcall	_Lcd_Cmd
  9608                           
  9609                           ;LCD.c: 91:     Lcd_Cmd(0x06);
  9610  1B84  3006               	movlw	6
  9611  1B85  160A  158A  2116  160A  158A  	fcall	_Lcd_Cmd
  9612  1B8A                     l214:
  9613  1B8A  0008               	return
  9614  1B8B                     __end_of_Lcd_Init:
  9615                           
  9616                           	psect	text35
  9617  18C3                     __ptext35:	
  9618 ;; *************** function _Lcd_Clear *****************
  9619 ;; Defined at:
  9620 ;;		line 64 in file "LCD.c"
  9621 ;; Parameters:    Size  Location     Type
  9622 ;;		None
  9623 ;; Auto vars:     Size  Location     Type
  9624 ;;		None
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  1    wreg      void 
  9627 ;; Registers used:
  9628 ;;		wreg, status,2, status,0, pclath, cstack
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9634 ;;      Params:         0       0       0       0       0
  9635 ;;      Locals:         0       0       0       0       0
  9636 ;;      Temps:          0       0       0       0       0
  9637 ;;      Totals:         0       0       0       0       0
  9638 ;;Total ram usage:        0 bytes
  9639 ;; Hardware stack levels used:    1
  9640 ;; Hardware stack levels required when called:    4
  9641 ;; This function calls:
  9642 ;;		_Lcd_Cmd
  9643 ;; This function is called by:
  9644 ;;		_main
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648                           
  9649                           ;psect for function _Lcd_Clear
  9650  18C3                     _Lcd_Clear:
  9651  18C3                     l4187:	
  9652                           ;incstack = 0
  9653                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9654                           
  9655                           
  9656                           ;LCD.c: 65:     Lcd_Cmd(0);
  9657  18C3  3000               	movlw	0
  9658  18C4  160A  158A  2116  160A  158A  	fcall	_Lcd_Cmd
  9659                           
  9660                           ;LCD.c: 66:     Lcd_Cmd(1);
  9661  18C9  3001               	movlw	1
  9662  18CA  160A  158A  2116  160A  158A  	fcall	_Lcd_Cmd
  9663  18CF                     l205:
  9664  18CF  0008               	return
  9665  18D0                     __end_of_Lcd_Clear:
  9666                           
  9667                           	psect	text36
  9668  1916                     __ptext36:	
  9669 ;; *************** function _Lcd_Cmd *****************
  9670 ;; Defined at:
  9671 ;;		line 56 in file "LCD.c"
  9672 ;; Parameters:    Size  Location     Type
  9673 ;;  a               1    wreg     unsigned char 
  9674 ;; Auto vars:     Size  Location     Type
  9675 ;;  a               1    0[BANK0 ] unsigned char 
  9676 ;; Return value:  Size  Location     Type
  9677 ;;                  1    wreg      void 
  9678 ;; Registers used:
  9679 ;;		wreg, status,2, status,0, pclath, cstack
  9680 ;; Tracked objects:
  9681 ;;		On entry : 0/0
  9682 ;;		On exit  : 0/0
  9683 ;;		Unchanged: 0/0
  9684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9685 ;;      Params:         0       0       0       0       0
  9686 ;;      Locals:         0       1       0       0       0
  9687 ;;      Temps:          2       0       0       0       0
  9688 ;;      Totals:         2       1       0       0       0
  9689 ;;Total ram usage:        3 bytes
  9690 ;; Hardware stack levels used:    1
  9691 ;; Hardware stack levels required when called:    3
  9692 ;; This function calls:
  9693 ;;		_Lcd_Port
  9694 ;; This function is called by:
  9695 ;;		_Lcd_Clear
  9696 ;;		_Lcd_Set_Cursor
  9697 ;;		_Lcd_Init
  9698 ;;		_Lcd_Shift_Right
  9699 ;;		_Lcd_Shift_Left
  9700 ;; This function uses a non-reentrant model
  9701 ;;
  9702                           
  9703                           
  9704                           ;psect for function _Lcd_Cmd
  9705  1916                     _Lcd_Cmd:
  9706                           
  9707                           ;incstack = 0
  9708                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9709                           ;Lcd_Cmd@a stored from wreg
  9710  1916  1283               	bcf	3,5	;RP0=0, select bank0
  9711  1917  1303               	bcf	3,6	;RP1=0, select bank0
  9712  1918  00A0               	movwf	Lcd_Cmd@a
  9713  1919                     l3947:
  9714                           
  9715                           ;LCD.c: 57:     PORTCbits.RC0 = 0;
  9716  1919  1007               	bcf	7,0	;volatile
  9717  191A                     l3949:
  9718                           
  9719                           ;LCD.c: 58:     Lcd_Port(a);
  9720  191A  0820               	movf	Lcd_Cmd@a,w
  9721  191B  160A  158A  2234  160A  158A  	fcall	_Lcd_Port
  9722  1920                     l3951:
  9723                           
  9724                           ;LCD.c: 59:     RC1 = 1;
  9725  1920  1283               	bcf	3,5	;RP0=0, select bank0
  9726  1921  1303               	bcf	3,6	;RP1=0, select bank0
  9727  1922  1487               	bsf	7,1	;volatile
  9728  1923                     l3953:
  9729                           
  9730                           ;LCD.c: 60:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9731  1923  300B               	movlw	11
  9732  1924  00F7               	movwf	??_Lcd_Cmd+1
  9733  1925  3062               	movlw	98
  9734  1926  00F6               	movwf	??_Lcd_Cmd
  9735  1927                     u7847:
  9736  1927  0BF6               	decfsz	??_Lcd_Cmd,f
  9737  1928  2927               	goto	u7847
  9738  1929  0BF7               	decfsz	??_Lcd_Cmd+1,f
  9739  192A  2927               	goto	u7847
  9740  192B  0000               	nop
  9741  192C                     l3955:
  9742                           
  9743                           ;LCD.c: 61:     RC1 = 0;
  9744  192C  1283               	bcf	3,5	;RP0=0, select bank0
  9745  192D  1303               	bcf	3,6	;RP1=0, select bank0
  9746  192E  1087               	bcf	7,1	;volatile
  9747  192F                     l202:
  9748  192F  0008               	return
  9749  1930                     __end_of_Lcd_Cmd:
  9750                           
  9751                           	psect	text37
  9752  1A34                     __ptext37:	
  9753 ;; *************** function _Lcd_Port *****************
  9754 ;; Defined at:
  9755 ;;		line 13 in file "LCD.c"
  9756 ;; Parameters:    Size  Location     Type
  9757 ;;  a               1    wreg     unsigned char 
  9758 ;; Auto vars:     Size  Location     Type
  9759 ;;  a               1    5[COMMON] unsigned char 
  9760 ;; Return value:  Size  Location     Type
  9761 ;;                  1    wreg      void 
  9762 ;; Registers used:
  9763 ;;		wreg
  9764 ;; Tracked objects:
  9765 ;;		On entry : 0/0
  9766 ;;		On exit  : 0/0
  9767 ;;		Unchanged: 0/0
  9768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9769 ;;      Params:         0       0       0       0       0
  9770 ;;      Locals:         1       0       0       0       0
  9771 ;;      Temps:          0       0       0       0       0
  9772 ;;      Totals:         1       0       0       0       0
  9773 ;;Total ram usage:        1 bytes
  9774 ;; Hardware stack levels used:    1
  9775 ;; Hardware stack levels required when called:    2
  9776 ;; This function calls:
  9777 ;;		Nothing
  9778 ;; This function is called by:
  9779 ;;		_Lcd_Cmd
  9780 ;;		_Lcd_Init
  9781 ;;		_Lcd_Write_Char
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           
  9786                           ;psect for function _Lcd_Port
  9787  1A34                     _Lcd_Port:
  9788                           
  9789                           ;incstack = 0
  9790                           ; Regs used in _Lcd_Port: [wreg]
  9791                           ;Lcd_Port@a stored from wreg
  9792  1A34  00F5               	movwf	Lcd_Port@a
  9793  1A35                     l3703:
  9794                           
  9795                           ;LCD.c: 15:     if (a & 1)
  9796  1A35  1C75               	btfss	Lcd_Port@a,0
  9797  1A36  2A38               	goto	u5881
  9798  1A37  2A39               	goto	u5880
  9799  1A38                     u5881:
  9800  1A38  2A3D               	goto	l183
  9801  1A39                     u5880:
  9802  1A39                     l3705:
  9803                           
  9804                           ;LCD.c: 16:         RD0 = 1;
  9805  1A39  1283               	bcf	3,5	;RP0=0, select bank0
  9806  1A3A  1303               	bcf	3,6	;RP1=0, select bank0
  9807  1A3B  1408               	bsf	8,0	;volatile
  9808  1A3C  2A40               	goto	l184
  9809  1A3D                     l183:	
  9810                           ;LCD.c: 17:     else
  9811                           
  9812                           
  9813                           ;LCD.c: 18:         RD0 = 0;
  9814  1A3D  1283               	bcf	3,5	;RP0=0, select bank0
  9815  1A3E  1303               	bcf	3,6	;RP1=0, select bank0
  9816  1A3F  1008               	bcf	8,0	;volatile
  9817  1A40                     l184:
  9818                           
  9819                           ;LCD.c: 20:     if (a & 2)
  9820  1A40  1CF5               	btfss	Lcd_Port@a,1
  9821  1A41  2A43               	goto	u5891
  9822  1A42  2A44               	goto	u5890
  9823  1A43                     u5891:
  9824  1A43  2A46               	goto	l185
  9825  1A44                     u5890:
  9826  1A44                     l3707:
  9827                           
  9828                           ;LCD.c: 21:         RD1 = 1;
  9829  1A44  1488               	bsf	8,1	;volatile
  9830  1A45  2A47               	goto	l186
  9831  1A46                     l185:	
  9832                           ;LCD.c: 22:     else
  9833                           
  9834                           
  9835                           ;LCD.c: 23:         RD1 = 0;
  9836  1A46  1088               	bcf	8,1	;volatile
  9837  1A47                     l186:
  9838                           
  9839                           ;LCD.c: 25:     if (a & 4)
  9840  1A47  1D75               	btfss	Lcd_Port@a,2
  9841  1A48  2A4A               	goto	u5901
  9842  1A49  2A4B               	goto	u5900
  9843  1A4A                     u5901:
  9844  1A4A  2A4D               	goto	l187
  9845  1A4B                     u5900:
  9846  1A4B                     l3709:
  9847                           
  9848                           ;LCD.c: 26:         RD2 = 1;
  9849  1A4B  1508               	bsf	8,2	;volatile
  9850  1A4C  2A4E               	goto	l188
  9851  1A4D                     l187:	
  9852                           ;LCD.c: 27:     else
  9853                           
  9854                           
  9855                           ;LCD.c: 28:         RD2 = 0;
  9856  1A4D  1108               	bcf	8,2	;volatile
  9857  1A4E                     l188:
  9858                           
  9859                           ;LCD.c: 30:     if (a & 8)
  9860  1A4E  1DF5               	btfss	Lcd_Port@a,3
  9861  1A4F  2A51               	goto	u5911
  9862  1A50  2A52               	goto	u5910
  9863  1A51                     u5911:
  9864  1A51  2A54               	goto	l189
  9865  1A52                     u5910:
  9866  1A52                     l3711:
  9867                           
  9868                           ;LCD.c: 31:         RD3 = 1;
  9869  1A52  1588               	bsf	8,3	;volatile
  9870  1A53  2A55               	goto	l190
  9871  1A54                     l189:	
  9872                           ;LCD.c: 32:     else
  9873                           
  9874                           
  9875                           ;LCD.c: 33:         RD3 = 0;
  9876  1A54  1188               	bcf	8,3	;volatile
  9877  1A55                     l190:
  9878                           
  9879                           ;LCD.c: 35:     if (a & 16)
  9880  1A55  1E75               	btfss	Lcd_Port@a,4
  9881  1A56  2A58               	goto	u5921
  9882  1A57  2A59               	goto	u5920
  9883  1A58                     u5921:
  9884  1A58  2A5B               	goto	l191
  9885  1A59                     u5920:
  9886  1A59                     l3713:
  9887                           
  9888                           ;LCD.c: 36:         RD4 = 1;
  9889  1A59  1608               	bsf	8,4	;volatile
  9890  1A5A  2A5C               	goto	l192
  9891  1A5B                     l191:	
  9892                           ;LCD.c: 37:     else
  9893                           
  9894                           
  9895                           ;LCD.c: 38:         RD4 = 0;
  9896  1A5B  1208               	bcf	8,4	;volatile
  9897  1A5C                     l192:
  9898                           
  9899                           ;LCD.c: 40:     if (a & 32)
  9900  1A5C  1EF5               	btfss	Lcd_Port@a,5
  9901  1A5D  2A5F               	goto	u5931
  9902  1A5E  2A60               	goto	u5930
  9903  1A5F                     u5931:
  9904  1A5F  2A62               	goto	l193
  9905  1A60                     u5930:
  9906  1A60                     l3715:
  9907                           
  9908                           ;LCD.c: 41:         RD5 = 1;
  9909  1A60  1688               	bsf	8,5	;volatile
  9910  1A61  2A63               	goto	l194
  9911  1A62                     l193:	
  9912                           ;LCD.c: 42:     else
  9913                           
  9914                           
  9915                           ;LCD.c: 43:         RD5 = 0;
  9916  1A62  1288               	bcf	8,5	;volatile
  9917  1A63                     l194:
  9918                           
  9919                           ;LCD.c: 45:     if (a & 64)
  9920  1A63  1F75               	btfss	Lcd_Port@a,6
  9921  1A64  2A66               	goto	u5941
  9922  1A65  2A67               	goto	u5940
  9923  1A66                     u5941:
  9924  1A66  2A69               	goto	l195
  9925  1A67                     u5940:
  9926  1A67                     l3717:
  9927                           
  9928                           ;LCD.c: 46:         RD6 = 1;
  9929  1A67  1708               	bsf	8,6	;volatile
  9930  1A68  2A6A               	goto	l196
  9931  1A69                     l195:	
  9932                           ;LCD.c: 47:     else
  9933                           
  9934                           
  9935                           ;LCD.c: 48:         RD6 = 0;
  9936  1A69  1308               	bcf	8,6	;volatile
  9937  1A6A                     l196:
  9938                           
  9939                           ;LCD.c: 50:     if (a & 128)
  9940  1A6A  1FF5               	btfss	Lcd_Port@a,7
  9941  1A6B  2A6D               	goto	u5951
  9942  1A6C  2A6E               	goto	u5950
  9943  1A6D                     u5951:
  9944  1A6D  2A70               	goto	l197
  9945  1A6E                     u5950:
  9946  1A6E                     l3719:
  9947                           
  9948                           ;LCD.c: 51:         RD7 = 1;
  9949  1A6E  1788               	bsf	8,7	;volatile
  9950  1A6F  2A71               	goto	l199
  9951  1A70                     l197:	
  9952                           ;LCD.c: 52:     else
  9953                           
  9954                           
  9955                           ;LCD.c: 53:         RD7 = 0;
  9956  1A70  1388               	bcf	8,7	;volatile
  9957  1A71                     l199:
  9958  1A71  0008               	return
  9959  1A72                     __end_of_Lcd_Port:
  9960                           
  9961                           	psect	text38
  9962  1967                     __ptext38:	
  9963 ;; *************** function _isr *****************
  9964 ;; Defined at:
  9965 ;;		line 90 in file "main.c"
  9966 ;; Parameters:    Size  Location     Type
  9967 ;;		None
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;		None
  9970 ;; Return value:  Size  Location     Type
  9971 ;;                  1    wreg      void 
  9972 ;; Registers used:
  9973 ;;		wreg, status,2, status,0, pclath, cstack
  9974 ;; Tracked objects:
  9975 ;;		On entry : 0/0
  9976 ;;		On exit  : 0/0
  9977 ;;		Unchanged: 0/0
  9978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9979 ;;      Params:         0       0       0       0       0
  9980 ;;      Locals:         0       0       0       0       0
  9981 ;;      Temps:          2       0       0       0       0
  9982 ;;      Totals:         2       0       0       0       0
  9983 ;;Total ram usage:        2 bytes
  9984 ;; Hardware stack levels used:    1
  9985 ;; Hardware stack levels required when called:    1
  9986 ;; This function calls:
  9987 ;;		_int_adc
  9988 ;;		_int_uart
  9989 ;; This function is called by:
  9990 ;;		Interrupt level 1
  9991 ;; This function uses a non-reentrant model
  9992 ;;
  9993                           
  9994                           
  9995                           ;psect for function _isr
  9996  1967                     _isr:
  9997  1967                     i1l3587:
  9998                           
  9999                           ;main.c: 92:     if (PIR1bits.ADIF){
 10000  1967  1283               	bcf	3,5	;RP0=0, select bank0
 10001  1968  1303               	bcf	3,6	;RP1=0, select bank0
 10002  1969  1F0C               	btfss	12,6	;volatile
 10003  196A  296C               	goto	u581_21
 10004  196B  296D               	goto	u581_20
 10005  196C                     u581_21:
 10006  196C  2972               	goto	i1l3591
 10007  196D                     u581_20:
 10008  196D                     i1l3589:
 10009                           
 10010                           ;main.c: 93:         int_adc();
 10011  196D  160A  158A  214B  160A  158A  	fcall	_int_adc
 10012  1972                     i1l3591:
 10013                           
 10014                           ;main.c: 95:     if (PIR1bits.RCIF){
 10015  1972  1283               	bcf	3,5	;RP0=0, select bank0
 10016  1973  1303               	bcf	3,6	;RP1=0, select bank0
 10017  1974  1E8C               	btfss	12,5	;volatile
 10018  1975  2977               	goto	u582_21
 10019  1976  2978               	goto	u582_20
 10020  1977                     u582_21:
 10021  1977  297D               	goto	i1l103
 10022  1978                     u582_20:
 10023  1978                     i1l3593:
 10024                           
 10025                           ;main.c: 96:         int_uart();
 10026  1978  160A  158A  24DC  160A  158A  	fcall	_int_uart
 10027  197D                     i1l103:
 10028  197D  0874               	movf	??_isr+1,w
 10029  197E  008A               	movwf	10
 10030  197F  0E73               	swapf	??_isr,w
 10031  1980  0083               	movwf	3
 10032  1981  0EFE               	swapf	btemp,f
 10033  1982  0E7E               	swapf	btemp,w
 10034  1983  0009               	retfie
 10035  1984                     __end_of_isr:
 10036                           
 10037                           	psect	intentry
 10038  0004                     __pintentry:	
 10039                           ;incstack = 0
 10040                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
 10041                           
 10042  0004                     interrupt_function:
 10043  007E                     saved_w	set	btemp
 10044  0004  00FE               	movwf	btemp
 10045  0005  0E03               	swapf	3,w
 10046  0006  00F3               	movwf	??_isr
 10047  0007  080A               	movf	10,w
 10048  0008  00F4               	movwf	??_isr+1
 10049  0009  160A  158A  2967   	ljmp	_isr
 10050                           
 10051                           	psect	text39
 10052  1CDC                     __ptext39:	
 10053 ;; *************** function _int_uart *****************
 10054 ;; Defined at:
 10055 ;;		line 112 in file "main.c"
 10056 ;; Parameters:    Size  Location     Type
 10057 ;;		None
 10058 ;; Auto vars:     Size  Location     Type
 10059 ;;		None
 10060 ;; Return value:  Size  Location     Type
 10061 ;;                  1    wreg      void 
 10062 ;; Registers used:
 10063 ;;		wreg, status,2, status,0
 10064 ;; Tracked objects:
 10065 ;;		On entry : 0/0
 10066 ;;		On exit  : 0/0
 10067 ;;		Unchanged: 0/0
 10068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10069 ;;      Params:         0       0       0       0       0
 10070 ;;      Locals:         0       0       0       0       0
 10071 ;;      Temps:          3       0       0       0       0
 10072 ;;      Totals:         3       0       0       0       0
 10073 ;;Total ram usage:        3 bytes
 10074 ;; Hardware stack levels used:    1
 10075 ;; This function calls:
 10076 ;;		Nothing
 10077 ;; This function is called by:
 10078 ;;		_isr
 10079 ;; This function uses a non-reentrant model
 10080 ;;
 10081                           
 10082                           
 10083                           ;psect for function _int_uart
 10084  1CDC                     _int_uart:
 10085  1CDC                     i1l1891:	
 10086                           ;incstack = 0
 10087                           ; Regs used in _int_uart: [wreg+status,2+status,0]
 10088                           
 10089                           
 10090                           ;main.c: 113:     TXREG = '\f';
 10091  1CDC  300C               	movlw	12
 10092  1CDD  1283               	bcf	3,5	;RP0=0, select bank0
 10093  1CDE  1303               	bcf	3,6	;RP1=0, select bank0
 10094  1CDF  0099               	movwf	25	;volatile
 10095  1CE0                     i1l1893:
 10096                           
 10097                           ;main.c: 114:     if (RCREG == 43){
 10098  1CE0  302B               	movlw	43
 10099  1CE1  061A               	xorwf	26,w	;volatile
 10100  1CE2  1D03               	btfss	3,2
 10101  1CE3  2CE5               	goto	u234_21
 10102  1CE4  2CE6               	goto	u234_20
 10103  1CE5                     u234_21:
 10104  1CE5  2D39               	goto	i1l117
 10105  1CE6                     u234_20:
 10106  1CE6                     i1l1895:
 10107                           
 10108                           ;main.c: 115:         TXREG = 43;
 10109  1CE6  302B               	movlw	43
 10110  1CE7  0099               	movwf	25	;volatile
 10111                           
 10112                           ;main.c: 116:         _delay((unsigned long)((1)*(8000000/4000.0)));
 10113  1CE8  3003               	movlw	3
 10114  1CE9  00F1               	movwf	??_int_uart+1
 10115  1CEA  3097               	movlw	151
 10116  1CEB  00F0               	movwf	??_int_uart
 10117  1CEC                     u785_27:
 10118  1CEC  0BF0               	decfsz	??_int_uart,f
 10119  1CED  2CEC               	goto	u785_27
 10120  1CEE  0BF1               	decfsz	??_int_uart+1,f
 10121  1CEF  2CEC               	goto	u785_27
 10122  1CF0  2CF1               	nop2
 10123                           
 10124                           ;main.c: 117:         TXREG = 0x0D;
 10125  1CF1  300D               	movlw	13
 10126  1CF2  1283               	bcf	3,5	;RP0=0, select bank0
 10127  1CF3  1303               	bcf	3,6	;RP1=0, select bank0
 10128  1CF4  0099               	movwf	25	;volatile
 10129  1CF5                     i1l1897:
 10130                           
 10131                           ;main.c: 119:         op1 = 1;
 10132  1CF5  01F8               	clrf	_op1
 10133  1CF6  0AF8               	incf	_op1,f
 10134                           
 10135                           ;main.c: 120:             while (op1 == 1){
 10136  1CF7  2D1D               	goto	i1l1907
 10137  1CF8                     i1l1899:
 10138                           
 10139                           ;main.c: 121:                 if (RCREG != 43){
 10140  1CF8  302B               	movlw	43
 10141  1CF9  1283               	bcf	3,5	;RP0=0, select bank0
 10142  1CFA  1303               	bcf	3,6	;RP1=0, select bank0
 10143  1CFB  061A               	xorwf	26,w	;volatile
 10144  1CFC  1903               	btfsc	3,2
 10145  1CFD  2CFF               	goto	u235_21
 10146  1CFE  2D00               	goto	u235_20
 10147  1CFF                     u235_21:
 10148  1CFF  2D10               	goto	i1l1905
 10149  1D00                     u235_20:
 10150  1D00                     i1l1901:
 10151                           
 10152                           ;main.c: 122:                     PORTA = RCREG;
 10153  1D00  081A               	movf	26,w	;volatile
 10154  1D01  0085               	movwf	5	;volatile
 10155                           
 10156                           ;main.c: 123:                     _delay((unsigned long)((1500)*(8000000/4000.0)));
 10157  1D02  3010               	movlw	16
 10158  1D03  00F2               	movwf	??_int_uart+2
 10159  1D04  3039               	movlw	57
 10160  1D05  00F1               	movwf	??_int_uart+1
 10161  1D06  300D               	movlw	13
 10162  1D07  00F0               	movwf	??_int_uart
 10163  1D08                     u786_27:
 10164  1D08  0BF0               	decfsz	??_int_uart,f
 10165  1D09  2D08               	goto	u786_27
 10166  1D0A  0BF1               	decfsz	??_int_uart+1,f
 10167  1D0B  2D08               	goto	u786_27
 10168  1D0C  0BF2               	decfsz	??_int_uart+2,f
 10169  1D0D  2D08               	goto	u786_27
 10170  1D0E  2D0F               	nop2
 10171  1D0F                     i1l1903:
 10172                           
 10173                           ;main.c: 124:                     op1 = 0;
 10174  1D0F  01F8               	clrf	_op1
 10175  1D10                     i1l1905:
 10176                           
 10177                           ;main.c: 127:         _delay((unsigned long)((3000)*(8000000/4000.0)));
 10178  1D10  301F               	movlw	31
 10179  1D11  00F2               	movwf	??_int_uart+2
 10180  1D12  3071               	movlw	113
 10181  1D13  00F1               	movwf	??_int_uart+1
 10182  1D14  301E               	movlw	30
 10183  1D15  00F0               	movwf	??_int_uart
 10184  1D16                     u787_27:
 10185  1D16  0BF0               	decfsz	??_int_uart,f
 10186  1D17  2D16               	goto	u787_27
 10187  1D18  0BF1               	decfsz	??_int_uart+1,f
 10188  1D19  2D16               	goto	u787_27
 10189  1D1A  0BF2               	decfsz	??_int_uart+2,f
 10190  1D1B  2D16               	goto	u787_27
 10191  1D1C  0000               	nop
 10192  1D1D                     i1l1907:
 10193                           
 10194                           ;main.c: 120:             while (op1 == 1){
 10195  1D1D  0378               	decf	_op1,w
 10196  1D1E  1903               	btfsc	3,2
 10197  1D1F  2D21               	goto	u236_21
 10198  1D20  2D22               	goto	u236_20
 10199  1D21                     u236_21:
 10200  1D21  2CF8               	goto	i1l1899
 10201  1D22                     u236_20:
 10202  1D22                     i1l1909:
 10203                           
 10204                           ;main.c: 129:     if (RCREG == 45){
 10205  1D22  302D               	movlw	45
 10206  1D23  1283               	bcf	3,5	;RP0=0, select bank0
 10207  1D24  1303               	bcf	3,6	;RP1=0, select bank0
 10208  1D25  061A               	xorwf	26,w	;volatile
 10209  1D26  1D03               	btfss	3,2
 10210  1D27  2D29               	goto	u237_21
 10211  1D28  2D2A               	goto	u237_20
 10212  1D29                     u237_21:
 10213  1D29  2D39               	goto	i1l117
 10214  1D2A                     u237_20:
 10215  1D2A                     i1l1911:
 10216                           
 10217                           ;main.c: 130:         TXREG = 45;
 10218  1D2A  302D               	movlw	45
 10219  1D2B  0099               	movwf	25	;volatile
 10220                           
 10221                           ;main.c: 132:         _delay((unsigned long)((3000)*(8000000/4000.0)));
 10222  1D2C  301F               	movlw	31
 10223  1D2D  00F2               	movwf	??_int_uart+2
 10224  1D2E  3071               	movlw	113
 10225  1D2F  00F1               	movwf	??_int_uart+1
 10226  1D30  301E               	movlw	30
 10227  1D31  00F0               	movwf	??_int_uart
 10228  1D32                     u788_27:
 10229  1D32  0BF0               	decfsz	??_int_uart,f
 10230  1D33  2D32               	goto	u788_27
 10231  1D34  0BF1               	decfsz	??_int_uart+1,f
 10232  1D35  2D32               	goto	u788_27
 10233  1D36  0BF2               	decfsz	??_int_uart+2,f
 10234  1D37  2D32               	goto	u788_27
 10235  1D38  0000               	nop
 10236  1D39                     i1l117:
 10237  1D39  0008               	return
 10238  1D3A                     __end_of_int_uart:
 10239                           
 10240                           	psect	text40
 10241  194B                     __ptext40:	
 10242 ;; *************** function _int_adc *****************
 10243 ;; Defined at:
 10244 ;;		line 100 in file "main.c"
 10245 ;; Parameters:    Size  Location     Type
 10246 ;;		None
 10247 ;; Auto vars:     Size  Location     Type
 10248 ;;		None
 10249 ;; Return value:  Size  Location     Type
 10250 ;;                  1    wreg      void 
 10251 ;; Registers used:
 10252 ;;		wreg, status,2, status,0
 10253 ;; Tracked objects:
 10254 ;;		On entry : 0/0
 10255 ;;		On exit  : 0/0
 10256 ;;		Unchanged: 0/0
 10257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10258 ;;      Params:         0       0       0       0       0
 10259 ;;      Locals:         0       0       0       0       0
 10260 ;;      Temps:          1       0       0       0       0
 10261 ;;      Totals:         1       0       0       0       0
 10262 ;;Total ram usage:        1 bytes
 10263 ;; Hardware stack levels used:    1
 10264 ;; This function calls:
 10265 ;;		Nothing
 10266 ;; This function is called by:
 10267 ;;		_isr
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           
 10272                           ;psect for function _int_adc
 10273  194B                     _int_adc:
 10274  194B                     i1l3231:	
 10275                           ;incstack = 0
 10276                           ; Regs used in _int_adc: [wreg+status,2+status,0]
 10277                           
 10278                           
 10279                           ;main.c: 101:     if(ADCON0bits.CHS == 5){
 10280  194B  1283               	bcf	3,5	;RP0=0, select bank0
 10281  194C  1303               	bcf	3,6	;RP1=0, select bank0
 10282  194D  0C1F               	rrf	31,w	;volatile
 10283  194E  00F0               	movwf	??_int_adc
 10284  194F  0C70               	rrf	??_int_adc,w
 10285  1950  390F               	andlw	15
 10286  1951  3A05               	xorlw	5
 10287  1952  1D03               	skipz
 10288  1953  2955               	goto	u527_21
 10289  1954  2956               	goto	u527_20
 10290  1955                     u527_21:
 10291  1955  295D               	goto	i1l3235
 10292  1956                     u527_20:
 10293  1956                     i1l3233:
 10294                           
 10295                           ;main.c: 102:         V1 = ADRESH;
 10296  1956  081E               	movf	30,w	;volatile
 10297  1957  00F0               	movwf	??_int_adc
 10298  1958  0870               	movf	??_int_adc,w
 10299  1959  1683               	bsf	3,5	;RP0=1, select bank1
 10300  195A  1303               	bcf	3,6	;RP1=0, select bank1
 10301  195B  00E6               	movwf	_V1^(0+128)
 10302                           
 10303                           ;main.c: 104:         }
 10304  195C  2963               	goto	i1l3237
 10305  195D                     i1l3235:
 10306                           
 10307                           ;main.c: 106:         V2 = ADRESH;
 10308  195D  081E               	movf	30,w	;volatile
 10309  195E  00F0               	movwf	??_int_adc
 10310  195F  0870               	movf	??_int_adc,w
 10311  1960  1683               	bsf	3,5	;RP0=1, select bank1
 10312  1961  1303               	bcf	3,6	;RP1=0, select bank1
 10313  1962  00E5               	movwf	_V2^(0+128)
 10314  1963                     i1l3237:
 10315                           
 10316                           ;main.c: 108:     PIR1bits.ADIF = 0;
 10317  1963  1283               	bcf	3,5	;RP0=0, select bank0
 10318  1964  1303               	bcf	3,6	;RP1=0, select bank0
 10319  1965  130C               	bcf	12,6	;volatile
 10320  1966                     i1l108:
 10321  1966  0008               	return
 10322  1967                     __end_of_int_adc:
 10323  007E                     btemp	set	126	;btemp
 10324  007E                     wtemp0	set	126
 10325                           
 10326                           	psect	config
 10327                           
 10328                           ;Config register CONFIG1 @ 0x2007
 10329                           ;	Oscillator Selection bits
 10330                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
 10331                           ;	Watchdog Timer Enable bit
 10332                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10333                           ;	Power-up Timer Enable bit
 10334                           ;	PWRTE = OFF, PWRT disabled
 10335                           ;	RE3/MCLR pin function select bit
 10336                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10337                           ;	Code Protection bit
 10338                           ;	CP = OFF, Program memory code protection is disabled
 10339                           ;	Data Code Protection bit
 10340                           ;	CPD = OFF, Data memory code protection is disabled
 10341                           ;	Brown Out Reset Selection bits
 10342                           ;	BOREN = OFF, BOR disabled
 10343                           ;	Internal External Switchover bit
 10344                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10345                           ;	Fail-Safe Clock Monitor Enabled bit
 10346                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10347                           ;	Low Voltage Programming Enable bit
 10348                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10349                           ;	In-Circuit Debugger Mode bit
 10350                           ;	DEBUG = 0x1, unprogrammed default
 10351  2007                     	org	8199
 10352  2007  20D6               	dw	8406
 10353                           
 10354                           ;Config register CONFIG2 @ 0x2008
 10355                           ;	Brown-out Reset Selection bit
 10356                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10357                           ;	Flash Program Memory Self Write Enable bits
 10358                           ;	WRT = OFF, Write protection off
 10359  2008                     	org	8200
 10360  2008  3FFF               	dw	16383
 10361                           
 10362                           	psect	text1_split_1
 10363  0026                     u7400:
 10364  0026                     l4311:
 10365  0026  1683               	bsf	3,5	;RP0=1, select bank1
 10366  0027  1303               	bcf	3,6	;RP1=0, select bank1
 10367  0028  0850               	movf	(sprintf@fval+3)^(0+128),w
 10368  0029  1283               	bcf	3,5	;RP0=0, select bank0
 10369  002A  1303               	bcf	3,6	;RP1=0, select bank0
 10370  002B  00A3               	movwf	___fleq@ff1+3
 10371  002C  1683               	bsf	3,5	;RP0=1, select bank1
 10372  002D  1303               	bcf	3,6	;RP1=0, select bank1
 10373  002E  084F               	movf	(sprintf@fval+2)^(0+128),w
 10374  002F  1283               	bcf	3,5	;RP0=0, select bank0
 10375  0030  1303               	bcf	3,6	;RP1=0, select bank0
 10376  0031  00A2               	movwf	___fleq@ff1+2
 10377  0032  1683               	bsf	3,5	;RP0=1, select bank1
 10378  0033  1303               	bcf	3,6	;RP1=0, select bank1
 10379  0034  084E               	movf	(sprintf@fval+1)^(0+128),w
 10380  0035  1283               	bcf	3,5	;RP0=0, select bank0
 10381  0036  1303               	bcf	3,6	;RP1=0, select bank0
 10382  0037  00A1               	movwf	___fleq@ff1+1
 10383  0038  1683               	bsf	3,5	;RP0=1, select bank1
 10384  0039  1303               	bcf	3,6	;RP1=0, select bank1
 10385  003A  084D               	movf	sprintf@fval^(0+128),w
 10386  003B  1283               	bcf	3,5	;RP0=0, select bank0
 10387  003C  1303               	bcf	3,6	;RP1=0, select bank0
 10388  003D  00A0               	movwf	___fleq@ff1
 10389  003E  3000               	movlw	0
 10390  003F  00A7               	movwf	___fleq@ff2+3
 10391  0040  3000               	movlw	0
 10392  0041  00A6               	movwf	___fleq@ff2+2
 10393  0042  3000               	movlw	0
 10394  0043  00A5               	movwf	___fleq@ff2+1
 10395  0044  3000               	movlw	0
 10396  0045  00A4               	movwf	___fleq@ff2
 10397  0046  160A  158A  238B  120A  118A  	fcall	___fleq
 10398  004B  1803               	btfsc	3,0
 10399  004C  284E               	goto	u7411
 10400  004D  284F               	goto	u7410
 10401  004E                     u7411:
 10402  004E  2931               	goto	l4331
 10403  004F                     u7410:
 10404  004F                     l4313:
 10405  004F  1683               	bsf	3,5	;RP0=1, select bank1
 10406  0050  1303               	bcf	3,6	;RP1=0, select bank1
 10407  0051  0850               	movf	(sprintf@fval+3)^(0+128),w
 10408  0052  1283               	bcf	3,5	;RP0=0, select bank0
 10409  0053  1303               	bcf	3,6	;RP1=0, select bank0
 10410  0054  00DE               	movwf	___fltol@f1+3
 10411  0055  1683               	bsf	3,5	;RP0=1, select bank1
 10412  0056  1303               	bcf	3,6	;RP1=0, select bank1
 10413  0057  084F               	movf	(sprintf@fval+2)^(0+128),w
 10414  0058  1283               	bcf	3,5	;RP0=0, select bank0
 10415  0059  1303               	bcf	3,6	;RP1=0, select bank0
 10416  005A  00DD               	movwf	___fltol@f1+2
 10417  005B  1683               	bsf	3,5	;RP0=1, select bank1
 10418  005C  1303               	bcf	3,6	;RP1=0, select bank1
 10419  005D  084E               	movf	(sprintf@fval+1)^(0+128),w
 10420  005E  1283               	bcf	3,5	;RP0=0, select bank0
 10421  005F  1303               	bcf	3,6	;RP1=0, select bank0
 10422  0060  00DC               	movwf	___fltol@f1+1
 10423  0061  1683               	bsf	3,5	;RP0=1, select bank1
 10424  0062  1303               	bcf	3,6	;RP1=0, select bank1
 10425  0063  084D               	movf	sprintf@fval^(0+128),w
 10426  0064  1283               	bcf	3,5	;RP0=0, select bank0
 10427  0065  1303               	bcf	3,6	;RP1=0, select bank0
 10428  0066  00DB               	movwf	___fltol@f1
 10429  0067  160A  158A  260B  120A  118A  	fcall	___fltol
 10430  006C  1283               	bcf	3,5	;RP0=0, select bank0
 10431  006D  1303               	bcf	3,6	;RP1=0, select bank0
 10432  006E  085E               	movf	?___fltol+3,w
 10433  006F  045D               	iorwf	?___fltol+2,w
 10434  0070  045C               	iorwf	?___fltol+1,w
 10435  0071  045B               	iorwf	?___fltol,w
 10436  0072  1D03               	skipz
 10437  0073  2875               	goto	u7421
 10438  0074  2876               	goto	u7420
 10439  0075                     u7421:
 10440  0075  2931               	goto	l4331
 10441  0076                     u7420:
 10442  0076                     l4315:
 10443  0076  1683               	bsf	3,5	;RP0=1, select bank1
 10444  0077  1303               	bcf	3,6	;RP1=0, select bank1
 10445  0078  084C               	movf	(sprintf@eexp+1)^(0+128),w
 10446  0079  3A80               	xorlw	128
 10447  007A  00FF               	movwf	btemp+1
 10448  007B  3080               	movlw	128
 10449  007C  027F               	subwf	btemp+1,w
 10450  007D  1D03               	skipz
 10451  007E  2881               	goto	u7435
 10452  007F  3002               	movlw	2
 10453  0080  024B               	subwf	sprintf@eexp^(0+128),w
 10454  0081                     u7435:
 10455  0081  1C03               	skipc
 10456  0082  2884               	goto	u7431
 10457  0083  2885               	goto	u7430
 10458  0084                     u7431:
 10459  0084  2931               	goto	l4331
 10460  0085                     u7430:
 10461  0085                     l4317:
 10462                           
 10463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10464  0085  1683               	bsf	3,5	;RP0=1, select bank1
 10465  0086  1303               	bcf	3,6	;RP1=0, select bank1
 10466  0087  084A               	movf	(sprintf@tmpval+3)^(0+128),w
 10467  0088  1283               	bcf	3,5	;RP0=0, select bank0
 10468  0089  1303               	bcf	3,6	;RP1=0, select bank0
 10469  008A  00A3               	movwf	___flge@ff1+3
 10470  008B  1683               	bsf	3,5	;RP0=1, select bank1
 10471  008C  1303               	bcf	3,6	;RP1=0, select bank1
 10472  008D  0849               	movf	(sprintf@tmpval+2)^(0+128),w
 10473  008E  1283               	bcf	3,5	;RP0=0, select bank0
 10474  008F  1303               	bcf	3,6	;RP1=0, select bank0
 10475  0090  00A2               	movwf	___flge@ff1+2
 10476  0091  1683               	bsf	3,5	;RP0=1, select bank1
 10477  0092  1303               	bcf	3,6	;RP1=0, select bank1
 10478  0093  0848               	movf	(sprintf@tmpval+1)^(0+128),w
 10479  0094  1283               	bcf	3,5	;RP0=0, select bank0
 10480  0095  1303               	bcf	3,6	;RP1=0, select bank0
 10481  0096  00A1               	movwf	___flge@ff1+1
 10482  0097  1683               	bsf	3,5	;RP0=1, select bank1
 10483  0098  1303               	bcf	3,6	;RP1=0, select bank1
 10484  0099  0847               	movf	sprintf@tmpval^(0+128),w
 10485  009A  1283               	bcf	3,5	;RP0=0, select bank0
 10486  009B  1303               	bcf	3,6	;RP1=0, select bank0
 10487  009C  00A0               	movwf	___flge@ff1
 10488  009D  3040               	movlw	64
 10489  009E  00A7               	movwf	___flge@ff2+3
 10490  009F  3089               	movlw	137
 10491  00A0  00A6               	movwf	___flge@ff2+2
 10492  00A1  3070               	movlw	112
 10493  00A2  00A5               	movwf	___flge@ff2+1
 10494  00A3  305F               	movlw	95
 10495  00A4  00A4               	movwf	___flge@ff2
 10496  00A5  160A  118A  20CA  120A  118A  	fcall	___flge
 10497  00AA  1803               	btfsc	3,0
 10498  00AB  28AD               	goto	u7441
 10499  00AC  28AE               	goto	u7440
 10500  00AD                     u7441:
 10501  00AD  28B7               	goto	l4321
 10502  00AE                     u7440:
 10503  00AE                     l4319:
 10504                           
 10505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10506  00AE  30F7               	movlw	247
 10507  00AF  1683               	bsf	3,5	;RP0=1, select bank1
 10508  00B0  1303               	bcf	3,6	;RP1=0, select bank1
 10509  00B1  07CB               	addwf	sprintf@eexp^(0+128),f
 10510  00B2  1803               	skipnc
 10511  00B3  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
 10512  00B4  30FF               	movlw	255
 10513  00B5  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
 10514                           
 10515                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10516  00B6  28BF               	goto	l4323
 10517  00B7                     l4321:
 10518                           
 10519                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10520  00B7  30F8               	movlw	248
 10521  00B8  1683               	bsf	3,5	;RP0=1, select bank1
 10522  00B9  1303               	bcf	3,6	;RP1=0, select bank1
 10523  00BA  07CB               	addwf	sprintf@eexp^(0+128),f
 10524  00BB  1803               	skipnc
 10525  00BC  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
 10526  00BD  30FF               	movlw	255
 10527  00BE  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
 10528  00BF                     l4323:
 10529                           
 10530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10531  00BF  084B               	movf	sprintf@eexp^(0+128),w
 10532  00C0  120A  158A  249D  120A  118A  	fcall	_scale
 10533  00C5  1283               	bcf	3,5	;RP0=0, select bank0
 10534  00C6  1303               	bcf	3,6	;RP1=0, select bank0
 10535  00C7  084B               	movf	?_scale+3,w
 10536  00C8  1683               	bsf	3,5	;RP0=1, select bank1
 10537  00C9  1303               	bcf	3,6	;RP1=0, select bank1
 10538  00CA  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
 10539  00CB  1283               	bcf	3,5	;RP0=0, select bank0
 10540  00CC  1303               	bcf	3,6	;RP1=0, select bank0
 10541  00CD  084A               	movf	?_scale+2,w
 10542  00CE  1683               	bsf	3,5	;RP0=1, select bank1
 10543  00CF  1303               	bcf	3,6	;RP1=0, select bank1
 10544  00D0  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
 10545  00D1  1283               	bcf	3,5	;RP0=0, select bank0
 10546  00D2  1303               	bcf	3,6	;RP1=0, select bank0
 10547  00D3  0849               	movf	?_scale+1,w
 10548  00D4  1683               	bsf	3,5	;RP0=1, select bank1
 10549  00D5  1303               	bcf	3,6	;RP1=0, select bank1
 10550  00D6  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
 10551  00D7  1283               	bcf	3,5	;RP0=0, select bank0
 10552  00D8  1303               	bcf	3,6	;RP1=0, select bank0
 10553  00D9  0848               	movf	?_scale,w
 10554  00DA  1683               	bsf	3,5	;RP0=1, select bank1
 10555  00DB  1303               	bcf	3,6	;RP1=0, select bank1
 10556  00DC  00C7               	movwf	sprintf@tmpval^(0+128)
 10557  00DD                     l4325:
 10558  00DD  0850               	movf	(sprintf@fval+3)^(0+128),w
 10559  00DE  1283               	bcf	3,5	;RP0=0, select bank0
 10560  00DF  1303               	bcf	3,6	;RP1=0, select bank0
 10561  00E0  00A3               	movwf	__div_to_l_@f1+3
 10562  00E1  1683               	bsf	3,5	;RP0=1, select bank1
 10563  00E2  1303               	bcf	3,6	;RP1=0, select bank1
 10564  00E3  084F               	movf	(sprintf@fval+2)^(0+128),w
 10565  00E4  1283               	bcf	3,5	;RP0=0, select bank0
 10566  00E5  1303               	bcf	3,6	;RP1=0, select bank0
 10567  00E6  00A2               	movwf	__div_to_l_@f1+2
 10568  00E7  1683               	bsf	3,5	;RP0=1, select bank1
 10569  00E8  1303               	bcf	3,6	;RP1=0, select bank1
 10570  00E9  084E               	movf	(sprintf@fval+1)^(0+128),w
 10571  00EA  1283               	bcf	3,5	;RP0=0, select bank0
 10572  00EB  1303               	bcf	3,6	;RP1=0, select bank0
 10573  00EC  00A1               	movwf	__div_to_l_@f1+1
 10574  00ED  1683               	bsf	3,5	;RP0=1, select bank1
 10575  00EE  1303               	bcf	3,6	;RP1=0, select bank1
 10576  00EF  084D               	movf	sprintf@fval^(0+128),w
 10577  00F0  1283               	bcf	3,5	;RP0=0, select bank0
 10578  00F1  1303               	bcf	3,6	;RP1=0, select bank0
 10579  00F2  00A0               	movwf	__div_to_l_@f1
 10580  00F3  1683               	bsf	3,5	;RP0=1, select bank1
 10581  00F4  1303               	bcf	3,6	;RP1=0, select bank1
 10582  00F5  084A               	movf	(sprintf@tmpval+3)^(0+128),w
 10583  00F6  1283               	bcf	3,5	;RP0=0, select bank0
 10584  00F7  1303               	bcf	3,6	;RP1=0, select bank0
 10585  00F8  00A7               	movwf	__div_to_l_@f2+3
 10586  00F9  1683               	bsf	3,5	;RP0=1, select bank1
 10587  00FA  1303               	bcf	3,6	;RP1=0, select bank1
 10588  00FB  0849               	movf	(sprintf@tmpval+2)^(0+128),w
 10589  00FC  1283               	bcf	3,5	;RP0=0, select bank0
 10590  00FD  1303               	bcf	3,6	;RP1=0, select bank0
 10591  00FE  00A6               	movwf	__div_to_l_@f2+2
 10592  00FF  1683               	bsf	3,5	;RP0=1, select bank1
 10593  0100  1303               	bcf	3,6	;RP1=0, select bank1
 10594  0101  0848               	movf	(sprintf@tmpval+1)^(0+128),w
 10595  0102  1283               	bcf	3,5	;RP0=0, select bank0
 10596  0103  1303               	bcf	3,6	;RP1=0, select bank0
 10597  0104  00A5               	movwf	__div_to_l_@f2+1
 10598  0105  1683               	bsf	3,5	;RP0=1, select bank1
 10599  0106  1303               	bcf	3,6	;RP1=0, select bank1
 10600  0107  0847               	movf	sprintf@tmpval^(0+128),w
 10601  0108  1283               	bcf	3,5	;RP0=0, select bank0
 10602  0109  1303               	bcf	3,6	;RP1=0, select bank0
 10603  010A  00A4               	movwf	__div_to_l_@f2
 10604  010B  160A  118A  216E  120A  118A  	fcall	__div_to_l_
 10605  0110  1283               	bcf	3,5	;RP0=0, select bank0
 10606  0111  1303               	bcf	3,6	;RP1=0, select bank0
 10607  0112  0823               	movf	?__div_to_l_+3,w
 10608  0113  1683               	bsf	3,5	;RP0=1, select bank1
 10609  0114  1303               	bcf	3,6	;RP1=0, select bank1
 10610  0115  00C2               	movwf	(sprintf@val+3)^(0+128)
 10611  0116  1283               	bcf	3,5	;RP0=0, select bank0
 10612  0117  1303               	bcf	3,6	;RP1=0, select bank0
 10613  0118  0822               	movf	?__div_to_l_+2,w
 10614  0119  1683               	bsf	3,5	;RP0=1, select bank1
 10615  011A  1303               	bcf	3,6	;RP1=0, select bank1
 10616  011B  00C1               	movwf	(sprintf@val+2)^(0+128)
 10617  011C  1283               	bcf	3,5	;RP0=0, select bank0
 10618  011D  1303               	bcf	3,6	;RP1=0, select bank0
 10619  011E  0821               	movf	?__div_to_l_+1,w
 10620  011F  1683               	bsf	3,5	;RP0=1, select bank1
 10621  0120  1303               	bcf	3,6	;RP1=0, select bank1
 10622  0121  00C0               	movwf	(sprintf@val+1)^(0+128)
 10623  0122  1283               	bcf	3,5	;RP0=0, select bank0
 10624  0123  1303               	bcf	3,6	;RP1=0, select bank0
 10625  0124  0820               	movf	?__div_to_l_,w
 10626  0125  1683               	bsf	3,5	;RP0=1, select bank1
 10627  0126  1303               	bcf	3,6	;RP1=0, select bank1
 10628  0127  00BF               	movwf	sprintf@val^(0+128)
 10629  0128                     l4329:
 10630                           
 10631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10632  0128  3000               	movlw	0
 10633  0129  00D0               	movwf	(sprintf@fval+3)^(0+128)
 10634  012A  3000               	movlw	0
 10635  012B  00CF               	movwf	(sprintf@fval+2)^(0+128)
 10636  012C  3000               	movlw	0
 10637  012D  00CE               	movwf	(sprintf@fval+1)^(0+128)
 10638  012E  3000               	movlw	0
 10639  012F  00CD               	movwf	sprintf@fval^(0+128)
 10640                           
 10641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10642  0130  29B3               	goto	l4337
 10643  0131                     l4331:
 10644                           
 10645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10646  0131  1683               	bsf	3,5	;RP0=1, select bank1
 10647  0132  1303               	bcf	3,6	;RP1=0, select bank1
 10648  0133  0850               	movf	(sprintf@fval+3)^(0+128),w
 10649  0134  1283               	bcf	3,5	;RP0=0, select bank0
 10650  0135  1303               	bcf	3,6	;RP1=0, select bank0
 10651  0136  00DE               	movwf	___fltol@f1+3
 10652  0137  1683               	bsf	3,5	;RP0=1, select bank1
 10653  0138  1303               	bcf	3,6	;RP1=0, select bank1
 10654  0139  084F               	movf	(sprintf@fval+2)^(0+128),w
 10655  013A  1283               	bcf	3,5	;RP0=0, select bank0
 10656  013B  1303               	bcf	3,6	;RP1=0, select bank0
 10657  013C  00DD               	movwf	___fltol@f1+2
 10658  013D  1683               	bsf	3,5	;RP0=1, select bank1
 10659  013E  1303               	bcf	3,6	;RP1=0, select bank1
 10660  013F  084E               	movf	(sprintf@fval+1)^(0+128),w
 10661  0140  1283               	bcf	3,5	;RP0=0, select bank0
 10662  0141  1303               	bcf	3,6	;RP1=0, select bank0
 10663  0142  00DC               	movwf	___fltol@f1+1
 10664  0143  1683               	bsf	3,5	;RP0=1, select bank1
 10665  0144  1303               	bcf	3,6	;RP1=0, select bank1
 10666  0145  084D               	movf	sprintf@fval^(0+128),w
 10667  0146  1283               	bcf	3,5	;RP0=0, select bank0
 10668  0147  1303               	bcf	3,6	;RP1=0, select bank0
 10669  0148  00DB               	movwf	___fltol@f1
 10670  0149  160A  158A  260B  120A  118A  	fcall	___fltol
 10671  014E  1283               	bcf	3,5	;RP0=0, select bank0
 10672  014F  1303               	bcf	3,6	;RP1=0, select bank0
 10673  0150  085E               	movf	?___fltol+3,w
 10674  0151  1683               	bsf	3,5	;RP0=1, select bank1
 10675  0152  1303               	bcf	3,6	;RP1=0, select bank1
 10676  0153  00C2               	movwf	(sprintf@val+3)^(0+128)
 10677  0154  1283               	bcf	3,5	;RP0=0, select bank0
 10678  0155  1303               	bcf	3,6	;RP1=0, select bank0
 10679  0156  085D               	movf	?___fltol+2,w
 10680  0157  1683               	bsf	3,5	;RP0=1, select bank1
 10681  0158  1303               	bcf	3,6	;RP1=0, select bank1
 10682  0159  00C1               	movwf	(sprintf@val+2)^(0+128)
 10683  015A  1283               	bcf	3,5	;RP0=0, select bank0
 10684  015B  1303               	bcf	3,6	;RP1=0, select bank0
 10685  015C  085C               	movf	?___fltol+1,w
 10686  015D  1683               	bsf	3,5	;RP0=1, select bank1
 10687  015E  1303               	bcf	3,6	;RP1=0, select bank1
 10688  015F  00C0               	movwf	(sprintf@val+1)^(0+128)
 10689  0160  1283               	bcf	3,5	;RP0=0, select bank0
 10690  0161  1303               	bcf	3,6	;RP1=0, select bank0
 10691  0162  085B               	movf	?___fltol,w
 10692  0163  1683               	bsf	3,5	;RP0=1, select bank1
 10693  0164  1303               	bcf	3,6	;RP1=0, select bank1
 10694  0165  00BF               	movwf	sprintf@val^(0+128)
 10695  0166                     l4333:
 10696                           
 10697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10698  0166  0842               	movf	(sprintf@val+3)^(0+128),w
 10699  0167  1283               	bcf	3,5	;RP0=0, select bank0
 10700  0168  1303               	bcf	3,6	;RP1=0, select bank0
 10701  0169  00A3               	movwf	___xxtofl@val+3
 10702  016A  1683               	bsf	3,5	;RP0=1, select bank1
 10703  016B  1303               	bcf	3,6	;RP1=0, select bank1
 10704  016C  0841               	movf	(sprintf@val+2)^(0+128),w
 10705  016D  1283               	bcf	3,5	;RP0=0, select bank0
 10706  016E  1303               	bcf	3,6	;RP1=0, select bank0
 10707  016F  00A2               	movwf	___xxtofl@val+2
 10708  0170  1683               	bsf	3,5	;RP0=1, select bank1
 10709  0171  1303               	bcf	3,6	;RP1=0, select bank1
 10710  0172  0840               	movf	(sprintf@val+1)^(0+128),w
 10711  0173  1283               	bcf	3,5	;RP0=0, select bank0
 10712  0174  1303               	bcf	3,6	;RP1=0, select bank0
 10713  0175  00A1               	movwf	___xxtofl@val+1
 10714  0176  1683               	bsf	3,5	;RP0=1, select bank1
 10715  0177  1303               	bcf	3,6	;RP1=0, select bank1
 10716  0178  083F               	movf	sprintf@val^(0+128),w
 10717  0179  1283               	bcf	3,5	;RP0=0, select bank0
 10718  017A  1303               	bcf	3,6	;RP1=0, select bank0
 10719  017B  00A0               	movwf	___xxtofl@val
 10720  017C  3000               	movlw	0
 10721  017D  160A  158A  2687  120A  118A  	fcall	___xxtofl
 10722  0182  1283               	bcf	3,5	;RP0=0, select bank0
 10723  0183  1303               	bcf	3,6	;RP1=0, select bank0
 10724  0184  0823               	movf	?___xxtofl+3,w
 10725  0185  1683               	bsf	3,5	;RP0=1, select bank1
 10726  0186  1303               	bcf	3,6	;RP1=0, select bank1
 10727  0187  00A3               	movwf	(___flsub@a+3)^(0+128)
 10728  0188  1283               	bcf	3,5	;RP0=0, select bank0
 10729  0189  1303               	bcf	3,6	;RP1=0, select bank0
 10730  018A  0822               	movf	?___xxtofl+2,w
 10731  018B  1683               	bsf	3,5	;RP0=1, select bank1
 10732  018C  1303               	bcf	3,6	;RP1=0, select bank1
 10733  018D  00A2               	movwf	(___flsub@a+2)^(0+128)
 10734  018E  1283               	bcf	3,5	;RP0=0, select bank0
 10735  018F  1303               	bcf	3,6	;RP1=0, select bank0
 10736  0190  0821               	movf	?___xxtofl+1,w
 10737  0191  1683               	bsf	3,5	;RP0=1, select bank1
 10738  0192  1303               	bcf	3,6	;RP1=0, select bank1
 10739  0193  00A1               	movwf	(___flsub@a+1)^(0+128)
 10740  0194  1283               	bcf	3,5	;RP0=0, select bank0
 10741  0195  1303               	bcf	3,6	;RP1=0, select bank0
 10742  0196  0820               	movf	?___xxtofl,w
 10743  0197  1683               	bsf	3,5	;RP0=1, select bank1
 10744  0198  1303               	bcf	3,6	;RP1=0, select bank1
 10745  0199  00A0               	movwf	___flsub@a^(0+128)
 10746  019A  0850               	movf	(sprintf@fval+3)^(0+128),w
 10747  019B  00A7               	movwf	(___flsub@b+3)^(0+128)
 10748  019C  084F               	movf	(sprintf@fval+2)^(0+128),w
 10749  019D  00A6               	movwf	(___flsub@b+2)^(0+128)
 10750  019E  084E               	movf	(sprintf@fval+1)^(0+128),w
 10751  019F  00A5               	movwf	(___flsub@b+1)^(0+128)
 10752  01A0  084D               	movf	sprintf@fval^(0+128),w
 10753  01A1  00A4               	movwf	___flsub@b^(0+128)
 10754  01A2  160A  158A  23DB  120A  118A  	fcall	___flsub
 10755  01A7  1683               	bsf	3,5	;RP0=1, select bank1
 10756  01A8  1303               	bcf	3,6	;RP1=0, select bank1
 10757  01A9  0823               	movf	(?___flsub+3)^(0+128),w
 10758  01AA  00D0               	movwf	(sprintf@fval+3)^(0+128)
 10759  01AB  0822               	movf	(?___flsub+2)^(0+128),w
 10760  01AC  00CF               	movwf	(sprintf@fval+2)^(0+128)
 10761  01AD  0821               	movf	(?___flsub+1)^(0+128),w
 10762  01AE  00CE               	movwf	(sprintf@fval+1)^(0+128)
 10763  01AF  0820               	movf	?___flsub^(0+128),w
 10764  01B0  00CD               	movwf	sprintf@fval^(0+128)
 10765  01B1                     l4335:
 10766                           
 10767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10768  01B1  01CB               	clrf	sprintf@eexp^(0+128)
 10769  01B2  01CC               	clrf	(sprintf@eexp+1)^(0+128)
 10770  01B3                     l4337:
 10771                           
 10772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10773  01B3  01D4               	clrf	sprintf@c^(0+128)
 10774  01B4  0AD4               	incf	sprintf@c^(0+128),f
 10775  01B5                     l4343:
 10776                           
 10777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10778  01B5  0854               	movf	sprintf@c^(0+128),w
 10779  01B6  00B5               	movwf	??_sprintf^(0+128)
 10780  01B7  3001               	movlw	1
 10781  01B8                     u7455:
 10782  01B8  1003               	clrc
 10783  01B9  0DB5               	rlf	??_sprintf^(0+128),f
 10784  01BA  3EFF               	addlw	-1
 10785  01BB  1D03               	skipz
 10786  01BC  29B8               	goto	u7455
 10787  01BD  1003               	clrc
 10788  01BE  0D35               	rlf	??_sprintf^(0+128),w
 10789  01BF  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10790  01C0  0084               	movwf	4
 10791  01C1  160A  118A  200A  120A  118A  	fcall	stringdir
 10792  01C6  00B6               	movwf	(??_sprintf+1)^(0+128)
 10793  01C7  160A  118A  200A  120A  118A  	fcall	stringdir
 10794  01CC  00B7               	movwf	((??_sprintf+1)^(0+128)+1)
 10795  01CD  160A  118A  200A  120A  118A  	fcall	stringdir
 10796  01D2  00B8               	movwf	((??_sprintf+1)^(0+128)+2)
 10797  01D3  160A  118A  200A  120A  118A  	fcall	stringdir
 10798  01D8  00B9               	movwf	((??_sprintf+1)^(0+128)+3)
 10799  01D9  0839               	movf	(??_sprintf+4)^(0+128),w
 10800  01DA  0242               	subwf	(sprintf@val+3)^(0+128),w
 10801  01DB  1D03               	skipz
 10802  01DC  29E7               	goto	u7465
 10803  01DD  0838               	movf	(??_sprintf+3)^(0+128),w
 10804  01DE  0241               	subwf	(sprintf@val+2)^(0+128),w
 10805  01DF  1D03               	skipz
 10806  01E0  29E7               	goto	u7465
 10807  01E1  0837               	movf	(??_sprintf+2)^(0+128),w
 10808  01E2  0240               	subwf	(sprintf@val+1)^(0+128),w
 10809  01E3  1D03               	skipz
 10810  01E4  29E7               	goto	u7465
 10811  01E5  0836               	movf	(??_sprintf+1)^(0+128),w
 10812  01E6  023F               	subwf	sprintf@val^(0+128),w
 10813  01E7                     u7465:
 10814  01E7  1803               	skipnc
 10815  01E8  29EA               	goto	u7461
 10816  01E9  29EB               	goto	u7460
 10817  01EA                     u7461:
 10818  01EA  29EC               	goto	l4347
 10819  01EB                     u7460:
 10820  01EB  29F6               	goto	l4349
 10821  01EC                     l4347:
 10822  01EC  3001               	movlw	1
 10823  01ED  00B5               	movwf	??_sprintf^(0+128)
 10824  01EE  0835               	movf	??_sprintf^(0+128),w
 10825  01EF  07D4               	addwf	sprintf@c^(0+128),f
 10826  01F0  300A               	movlw	10
 10827  01F1  0654               	xorwf	sprintf@c^(0+128),w
 10828  01F2  1D03               	btfss	3,2
 10829  01F3  29F5               	goto	u7471
 10830  01F4  29F6               	goto	u7470
 10831  01F5                     u7471:
 10832  01F5  29B5               	goto	l4343
 10833  01F6                     u7470:
 10834  01F6                     l4349:
 10835                           
 10836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10837  01F6  0854               	movf	sprintf@c^(0+128),w
 10838  01F7  0752               	addwf	sprintf@prec^(0+128),w
 10839  01F8  00B5               	movwf	??_sprintf^(0+128)
 10840  01F9  0853               	movf	(sprintf@prec+1)^(0+128),w
 10841  01FA  1803               	skipnc
 10842  01FB  0A53               	incf	(sprintf@prec+1)^(0+128),w
 10843  01FC  00B6               	movwf	(??_sprintf^(0+128)+1)
 10844  01FD  084B               	movf	sprintf@eexp^(0+128),w
 10845  01FE  0735               	addwf	??_sprintf^(0+128),w
 10846  01FF  00B7               	movwf	(??_sprintf+2)^(0+128)
 10847  0200  084C               	movf	(sprintf@eexp+1)^(0+128),w
 10848  0201  1803               	skipnc
 10849  0202  0A4C               	incf	(sprintf@eexp+1)^(0+128),w
 10850  0203  0736               	addwf	(??_sprintf+1)^(0+128),w
 10851  0204  00B8               	movwf	(??_sprintf+3)^(0+128)
 10852  0205  0837               	movf	(??_sprintf+2)^(0+128),w
 10853  0206  02C5               	subwf	sprintf@width^(0+128),f
 10854  0207  0838               	movf	(??_sprintf+3)^(0+128),w
 10855  0208  1C03               	skipc
 10856  0209  03C6               	decf	(sprintf@width+1)^(0+128),f
 10857  020A  02C6               	subwf	(sprintf@width+1)^(0+128),f
 10858                           
 10859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10860  020B  0852               	movf	sprintf@prec^(0+128),w
 10861  020C  0453               	iorwf	(sprintf@prec+1)^(0+128),w
 10862  020D  1903               	btfsc	3,2
 10863  020E  2A10               	goto	u7481
 10864  020F  2A11               	goto	u7480
 10865  0210                     u7481:
 10866  0210  2A17               	goto	l4353
 10867  0211                     u7480:
 10868  0211                     l4351:
 10869                           
 10870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10871  0211  30FF               	movlw	255
 10872  0212  07C5               	addwf	sprintf@width^(0+128),f
 10873  0213  1803               	skipnc
 10874  0214  0AC6               	incf	(sprintf@width+1)^(0+128),f
 10875  0215  30FF               	movlw	255
 10876  0216  07C6               	addwf	(sprintf@width+1)^(0+128),f
 10877  0217                     l4353:
 10878                           
 10879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10880  0217  3003               	movlw	3
 10881  0218  0543               	andwf	sprintf@flag^(0+128),w
 10882  0219  00B5               	movwf	??_sprintf^(0+128)
 10883  021A  3000               	movlw	0
 10884  021B  0544               	andwf	(sprintf@flag+1)^(0+128),w
 10885  021C  00B6               	movwf	(??_sprintf+1)^(0+128)
 10886  021D  0835               	movf	??_sprintf^(0+128),w
 10887  021E  0436               	iorwf	(??_sprintf^(0+128)+1),w
 10888  021F  1903               	btfsc	3,2
 10889  0220  2A22               	goto	u7491
 10890  0221  2A23               	goto	u7490
 10891  0222                     u7491:
 10892  0222  2A38               	goto	l4363
 10893  0223                     u7490:
 10894  0223                     l4355:
 10895                           
 10896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10897  0223  30FF               	movlw	255
 10898  0224  07C5               	addwf	sprintf@width^(0+128),f
 10899  0225  1803               	skipnc
 10900  0226  0AC6               	incf	(sprintf@width+1)^(0+128),f
 10901  0227  30FF               	movlw	255
 10902  0228  07C6               	addwf	(sprintf@width+1)^(0+128),f
 10903  0229  2A38               	goto	l4363
 10904  022A                     l4357:
 10905                           
 10906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10907  022A  3020               	movlw	32
 10908  022B  1683               	bsf	3,5	;RP0=1, select bank1
 10909  022C  1303               	bcf	3,6	;RP1=0, select bank1
 10910  022D  00B5               	movwf	??_sprintf^(0+128)
 10911  022E  0851               	movf	sprintf@sp^(0+128),w
 10912  022F  0084               	movwf	4
 10913  0230  0835               	movf	??_sprintf^(0+128),w
 10914  0231  1783               	bsf	3,7	;select IRP bank2
 10915  0232  0080               	movwf	0
 10916  0233                     l4359:
 10917  0233  3001               	movlw	1
 10918  0234  00B5               	movwf	??_sprintf^(0+128)
 10919  0235  0835               	movf	??_sprintf^(0+128),w
 10920  0236  07D1               	addwf	sprintf@sp^(0+128),f
 10921  0237  2A23               	goto	l4355
 10922  0238                     l4363:
 10923                           
 10924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10925  0238  0846               	movf	(sprintf@width+1)^(0+128),w
 10926  0239  3A80               	xorlw	128
 10927  023A  00FF               	movwf	btemp+1
 10928  023B  3080               	movlw	128
 10929  023C  027F               	subwf	btemp+1,w
 10930  023D  1D03               	skipz
 10931  023E  2A41               	goto	u7505
 10932  023F  3001               	movlw	1
 10933  0240  0245               	subwf	sprintf@width^(0+128),w
 10934  0241                     u7505:
 10935  0241  1803               	skipnc
 10936  0242  2A44               	goto	u7501
 10937  0243  2A45               	goto	u7500
 10938  0244                     u7501:
 10939  0244  2A2A               	goto	l4357
 10940  0245                     u7500:
 10941  0245                     l4365:
 10942                           
 10943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10944  0245  3003               	movlw	3
 10945  0246  1683               	bsf	3,5	;RP0=1, select bank1
 10946  0247  1303               	bcf	3,6	;RP1=0, select bank1
 10947  0248  0543               	andwf	sprintf@flag^(0+128),w
 10948  0249  00B5               	movwf	??_sprintf^(0+128)
 10949  024A  3000               	movlw	0
 10950  024B  0544               	andwf	(sprintf@flag+1)^(0+128),w
 10951  024C  00B6               	movwf	(??_sprintf+1)^(0+128)
 10952  024D  0835               	movf	??_sprintf^(0+128),w
 10953  024E  0436               	iorwf	(??_sprintf^(0+128)+1),w
 10954  024F  1903               	btfsc	3,2
 10955  0250  2A52               	goto	u7511
 10956  0251  2A53               	goto	u7510
 10957  0252                     u7511:
 10958  0252  2B05               	goto	l396
 10959  0253                     u7510:
 10960  0253                     l4367:
 10961                           
 10962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10963  0253  302D               	movlw	45
 10964  0254  00B5               	movwf	??_sprintf^(0+128)
 10965  0255  0851               	movf	sprintf@sp^(0+128),w
 10966  0256  0084               	movwf	4
 10967  0257  0835               	movf	??_sprintf^(0+128),w
 10968  0258  1783               	bsf	3,7	;select IRP bank2
 10969  0259  0080               	movwf	0
 10970  025A                     l4369:
 10971  025A  3001               	movlw	1
 10972  025B  00B5               	movwf	??_sprintf^(0+128)
 10973  025C  0835               	movf	??_sprintf^(0+128),w
 10974  025D  07D1               	addwf	sprintf@sp^(0+128),f
 10975  025E  2B05               	goto	l396
 10976  025F                     l4371:
 10977                           
 10978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10979  025F  0854               	movf	sprintf@c^(0+128),w
 10980  0260  00B5               	movwf	??_sprintf^(0+128)
 10981  0261  3001               	movlw	1
 10982  0262                     u7525:
 10983  0262  1003               	clrc
 10984  0263  0DB5               	rlf	??_sprintf^(0+128),f
 10985  0264  3EFF               	addlw	-1
 10986  0265  1D03               	skipz
 10987  0266  2A62               	goto	u7525
 10988  0267  1003               	clrc
 10989  0268  0D35               	rlf	??_sprintf^(0+128),w
 10990  0269  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10991  026A  0084               	movwf	4
 10992  026B  160A  118A  200A  120A  118A  	fcall	stringdir
 10993  0270  1283               	bcf	3,5	;RP0=0, select bank0
 10994  0271  1303               	bcf	3,6	;RP1=0, select bank0
 10995  0272  00A0               	movwf	___lldiv@divisor
 10996  0273  160A  118A  200A  120A  118A  	fcall	stringdir
 10997  0278  00A1               	movwf	___lldiv@divisor+1
 10998  0279  160A  118A  200A  120A  118A  	fcall	stringdir
 10999  027E  00A2               	movwf	___lldiv@divisor+2
 11000  027F  160A  118A  200A  120A  118A  	fcall	stringdir
 11001  0284  00A3               	movwf	___lldiv@divisor+3
 11002  0285  1683               	bsf	3,5	;RP0=1, select bank1
 11003  0286  1303               	bcf	3,6	;RP1=0, select bank1
 11004  0287  0842               	movf	(sprintf@val+3)^(0+128),w
 11005  0288  1283               	bcf	3,5	;RP0=0, select bank0
 11006  0289  1303               	bcf	3,6	;RP1=0, select bank0
 11007  028A  00A7               	movwf	___lldiv@dividend+3
 11008  028B  1683               	bsf	3,5	;RP0=1, select bank1
 11009  028C  1303               	bcf	3,6	;RP1=0, select bank1
 11010  028D  0841               	movf	(sprintf@val+2)^(0+128),w
 11011  028E  1283               	bcf	3,5	;RP0=0, select bank0
 11012  028F  1303               	bcf	3,6	;RP1=0, select bank0
 11013  0290  00A6               	movwf	___lldiv@dividend+2
 11014  0291  1683               	bsf	3,5	;RP0=1, select bank1
 11015  0292  1303               	bcf	3,6	;RP1=0, select bank1
 11016  0293  0840               	movf	(sprintf@val+1)^(0+128),w
 11017  0294  1283               	bcf	3,5	;RP0=0, select bank0
 11018  0295  1303               	bcf	3,6	;RP1=0, select bank0
 11019  0296  00A5               	movwf	___lldiv@dividend+1
 11020  0297  1683               	bsf	3,5	;RP0=1, select bank1
 11021  0298  1303               	bcf	3,6	;RP1=0, select bank1
 11022  0299  083F               	movf	sprintf@val^(0+128),w
 11023  029A  1283               	bcf	3,5	;RP0=0, select bank0
 11024  029B  1303               	bcf	3,6	;RP1=0, select bank0
 11025  029C  00A4               	movwf	___lldiv@dividend
 11026  029D  160A  158A  253A  120A  118A  	fcall	___lldiv
 11027  02A2  1283               	bcf	3,5	;RP0=0, select bank0
 11028  02A3  1303               	bcf	3,6	;RP1=0, select bank0
 11029  02A4  0823               	movf	?___lldiv+3,w
 11030  02A5  1683               	bsf	3,5	;RP0=1, select bank1
 11031  02A6  1303               	bcf	3,6	;RP1=0, select bank1
 11032  02A7  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
 11033  02A8  1283               	bcf	3,5	;RP0=0, select bank0
 11034  02A9  1303               	bcf	3,6	;RP1=0, select bank0
 11035  02AA  0822               	movf	?___lldiv+2,w
 11036  02AB  1683               	bsf	3,5	;RP0=1, select bank1
 11037  02AC  1303               	bcf	3,6	;RP1=0, select bank1
 11038  02AD  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
 11039  02AE  1283               	bcf	3,5	;RP0=0, select bank0
 11040  02AF  1303               	bcf	3,6	;RP1=0, select bank0
 11041  02B0  0821               	movf	?___lldiv+1,w
 11042  02B1  1683               	bsf	3,5	;RP0=1, select bank1
 11043  02B2  1303               	bcf	3,6	;RP1=0, select bank1
 11044  02B3  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
 11045  02B4  1283               	bcf	3,5	;RP0=0, select bank0
 11046  02B5  1303               	bcf	3,6	;RP1=0, select bank0
 11047  02B6  0820               	movf	?___lldiv,w
 11048  02B7  1683               	bsf	3,5	;RP0=1, select bank1
 11049  02B8  1303               	bcf	3,6	;RP1=0, select bank1
 11050  02B9  00C7               	movwf	sprintf@tmpval^(0+128)
 11051  02BA                     l4373:
 11052                           
 11053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 11054  02BA  3000               	movlw	0
 11055  02BB  1283               	bcf	3,5	;RP0=0, select bank0
 11056  02BC  1303               	bcf	3,6	;RP1=0, select bank0
 11057  02BD  00A3               	movwf	___llmod@divisor+3
 11058  02BE  3000               	movlw	0
 11059  02BF  00A2               	movwf	___llmod@divisor+2
 11060  02C0  3000               	movlw	0
 11061  02C1  00A1               	movwf	___llmod@divisor+1
 11062  02C2  300A               	movlw	10
 11063  02C3  00A0               	movwf	___llmod@divisor
 11064  02C4  1683               	bsf	3,5	;RP0=1, select bank1
 11065  02C5  1303               	bcf	3,6	;RP1=0, select bank1
 11066  02C6  084A               	movf	(sprintf@tmpval+3)^(0+128),w
 11067  02C7  1283               	bcf	3,5	;RP0=0, select bank0
 11068  02C8  1303               	bcf	3,6	;RP1=0, select bank0
 11069  02C9  00A7               	movwf	___llmod@dividend+3
 11070  02CA  1683               	bsf	3,5	;RP0=1, select bank1
 11071  02CB  1303               	bcf	3,6	;RP1=0, select bank1
 11072  02CC  0849               	movf	(sprintf@tmpval+2)^(0+128),w
 11073  02CD  1283               	bcf	3,5	;RP0=0, select bank0
 11074  02CE  1303               	bcf	3,6	;RP1=0, select bank0
 11075  02CF  00A6               	movwf	___llmod@dividend+2
 11076  02D0  1683               	bsf	3,5	;RP0=1, select bank1
 11077  02D1  1303               	bcf	3,6	;RP1=0, select bank1
 11078  02D2  0848               	movf	(sprintf@tmpval+1)^(0+128),w
 11079  02D3  1283               	bcf	3,5	;RP0=0, select bank0
 11080  02D4  1303               	bcf	3,6	;RP1=0, select bank0
 11081  02D5  00A5               	movwf	___llmod@dividend+1
 11082  02D6  1683               	bsf	3,5	;RP0=1, select bank1
 11083  02D7  1303               	bcf	3,6	;RP1=0, select bank1
 11084  02D8  0847               	movf	sprintf@tmpval^(0+128),w
 11085  02D9  1283               	bcf	3,5	;RP0=0, select bank0
 11086  02DA  1303               	bcf	3,6	;RP1=0, select bank0
 11087  02DB  00A4               	movwf	___llmod@dividend
 11088  02DC  160A  158A  242B  120A  118A  	fcall	___llmod
 11089  02E1  1283               	bcf	3,5	;RP0=0, select bank0
 11090  02E2  1303               	bcf	3,6	;RP1=0, select bank0
 11091  02E3  0823               	movf	?___llmod+3,w
 11092  02E4  1683               	bsf	3,5	;RP0=1, select bank1
 11093  02E5  1303               	bcf	3,6	;RP1=0, select bank1
 11094  02E6  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
 11095  02E7  1283               	bcf	3,5	;RP0=0, select bank0
 11096  02E8  1303               	bcf	3,6	;RP1=0, select bank0
 11097  02E9  0822               	movf	?___llmod+2,w
 11098  02EA  1683               	bsf	3,5	;RP0=1, select bank1
 11099  02EB  1303               	bcf	3,6	;RP1=0, select bank1
 11100  02EC  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
 11101  02ED  1283               	bcf	3,5	;RP0=0, select bank0
 11102  02EE  1303               	bcf	3,6	;RP1=0, select bank0
 11103  02EF  0821               	movf	?___llmod+1,w
 11104  02F0  1683               	bsf	3,5	;RP0=1, select bank1
 11105  02F1  1303               	bcf	3,6	;RP1=0, select bank1
 11106  02F2  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
 11107  02F3  1283               	bcf	3,5	;RP0=0, select bank0
 11108  02F4  1303               	bcf	3,6	;RP1=0, select bank0
 11109  02F5  0820               	movf	?___llmod,w
 11110  02F6  1683               	bsf	3,5	;RP0=1, select bank1
 11111  02F7  1303               	bcf	3,6	;RP1=0, select bank1
 11112  02F8  00C7               	movwf	sprintf@tmpval^(0+128)
 11113  02F9                     l4375:
 11114                           
 11115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 11116  02F9  0847               	movf	sprintf@tmpval^(0+128),w
 11117  02FA  3E30               	addlw	48
 11118  02FB  00B5               	movwf	??_sprintf^(0+128)
 11119  02FC  0851               	movf	sprintf@sp^(0+128),w
 11120  02FD  0084               	movwf	4
 11121  02FE  0835               	movf	??_sprintf^(0+128),w
 11122  02FF  1783               	bsf	3,7	;select IRP bank2
 11123  0300  0080               	movwf	0
 11124  0301  3001               	movlw	1
 11125  0302  00B5               	movwf	??_sprintf^(0+128)
 11126  0303  0835               	movf	??_sprintf^(0+128),w
 11127  0304  07D1               	addwf	sprintf@sp^(0+128),f
 11128  0305                     l396:	
 11129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 11130                           
 11131                           
 11132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 11133  0305  3001               	movlw	1
 11134  0306  02D4               	subwf	sprintf@c^(0+128),f
 11135  0307  0A54               	incf	sprintf@c^(0+128),w
 11136  0308  1D03               	btfss	3,2
 11137  0309  2B0B               	goto	u7531
 11138  030A  2B0C               	goto	u7530
 11139  030B                     u7531:
 11140  030B  2A5F               	goto	l4371
 11141  030C                     u7530:
 11142  030C  2B20               	goto	l4383
 11143  030D                     l4377:
 11144                           
 11145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 11146  030D  3030               	movlw	48
 11147  030E  1683               	bsf	3,5	;RP0=1, select bank1
 11148  030F  1303               	bcf	3,6	;RP1=0, select bank1
 11149  0310  00B5               	movwf	??_sprintf^(0+128)
 11150  0311  0851               	movf	sprintf@sp^(0+128),w
 11151  0312  0084               	movwf	4
 11152  0313  0835               	movf	??_sprintf^(0+128),w
 11153  0314  1783               	bsf	3,7	;select IRP bank2
 11154  0315  0080               	movwf	0
 11155  0316                     l4379:
 11156  0316  3001               	movlw	1
 11157  0317  00B5               	movwf	??_sprintf^(0+128)
 11158  0318  0835               	movf	??_sprintf^(0+128),w
 11159  0319  07D1               	addwf	sprintf@sp^(0+128),f
 11160  031A                     l4381:
 11161                           
 11162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 11163  031A  30FF               	movlw	255
 11164  031B  07CB               	addwf	sprintf@eexp^(0+128),f
 11165  031C  1803               	skipnc
 11166  031D  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
 11167  031E  30FF               	movlw	255
 11168  031F  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
 11169  0320                     l4383:
 11170                           
 11171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 11172  0320  084C               	movf	(sprintf@eexp+1)^(0+128),w
 11173  0321  3A80               	xorlw	128
 11174  0322  00FF               	movwf	btemp+1
 11175  0323  3080               	movlw	128
 11176  0324  027F               	subwf	btemp+1,w
 11177  0325  1D03               	skipz
 11178  0326  2B29               	goto	u7545
 11179  0327  3001               	movlw	1
 11180  0328  024B               	subwf	sprintf@eexp^(0+128),w
 11181  0329                     u7545:
 11182  0329  1803               	skipnc
 11183  032A  2B2C               	goto	u7541
 11184  032B  2B2D               	goto	u7540
 11185  032C                     u7541:
 11186  032C  2B0D               	goto	l4377
 11187  032D                     u7540:
 11188  032D                     l4385:
 11189                           
 11190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11191  032D  1683               	bsf	3,5	;RP0=1, select bank1
 11192  032E  1303               	bcf	3,6	;RP1=0, select bank1
 11193  032F  0853               	movf	(sprintf@prec+1)^(0+128),w
 11194  0330  3A80               	xorlw	128
 11195  0331  00FF               	movwf	btemp+1
 11196  0332  3080               	movlw	128
 11197  0333  027F               	subwf	btemp+1,w
 11198  0334  1D03               	skipz
 11199  0335  2B38               	goto	u7555
 11200  0336  3009               	movlw	9
 11201  0337  0252               	subwf	sprintf@prec^(0+128),w
 11202  0338                     u7555:
 11203  0338  1C03               	skipc
 11204  0339  2B3B               	goto	u7551
 11205  033A  2B3C               	goto	u7550
 11206  033B                     u7551:
 11207  033B  2B43               	goto	l4389
 11208  033C                     u7550:
 11209  033C                     l4387:
 11210                           
 11211                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 11212  033C  3008               	movlw	8
 11213  033D  1683               	bsf	3,5	;RP0=1, select bank1
 11214  033E  1303               	bcf	3,6	;RP1=0, select bank1
 11215  033F  00B5               	movwf	??_sprintf^(0+128)
 11216  0340  0835               	movf	??_sprintf^(0+128),w
 11217  0341  00D4               	movwf	sprintf@c^(0+128)
 11218  0342  2B49               	goto	l403
 11219  0343                     l4389:
 11220                           
 11221                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 11222  0343  1683               	bsf	3,5	;RP0=1, select bank1
 11223  0344  1303               	bcf	3,6	;RP1=0, select bank1
 11224  0345  0852               	movf	sprintf@prec^(0+128),w
 11225  0346  00B5               	movwf	??_sprintf^(0+128)
 11226  0347  0835               	movf	??_sprintf^(0+128),w
 11227  0348  00D4               	movwf	sprintf@c^(0+128)
 11228  0349                     l403:
 11229                           
 11230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 11231  0349  0854               	movf	sprintf@c^(0+128),w
 11232  034A  00B5               	movwf	??_sprintf^(0+128)
 11233  034B  01B6               	clrf	(??_sprintf^(0+128)+1)
 11234  034C  0835               	movf	??_sprintf^(0+128),w
 11235  034D  02D2               	subwf	sprintf@prec^(0+128),f
 11236  034E  0836               	movf	(??_sprintf+1)^(0+128),w
 11237  034F  1C03               	skipc
 11238  0350  03D3               	decf	(sprintf@prec+1)^(0+128),f
 11239  0351  02D3               	subwf	(sprintf@prec+1)^(0+128),f
 11240  0352                     l4391:
 11241                           
 11242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 11243  0352  0854               	movf	sprintf@c^(0+128),w
 11244  0353  1903               	btfsc	3,2
 11245  0354  2B56               	goto	u7561
 11246  0355  2B57               	goto	u7560
 11247  0356                     u7561:
 11248  0356  2B62               	goto	l4397
 11249  0357                     u7560:
 11250  0357                     l4393:
 11251                           
 11252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 11253  0357  302E               	movlw	46
 11254  0358  00B5               	movwf	??_sprintf^(0+128)
 11255  0359  0851               	movf	sprintf@sp^(0+128),w
 11256  035A  0084               	movwf	4
 11257  035B  0835               	movf	??_sprintf^(0+128),w
 11258  035C  1783               	bsf	3,7	;select IRP bank2
 11259  035D  0080               	movwf	0
 11260  035E                     l4395:
 11261  035E  3001               	movlw	1
 11262  035F  00B5               	movwf	??_sprintf^(0+128)
 11263  0360  0835               	movf	??_sprintf^(0+128),w
 11264  0361  07D1               	addwf	sprintf@sp^(0+128),f
 11265  0362                     l4397:
 11266                           
 11267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11268  0362  0854               	movf	sprintf@c^(0+128),w
 11269  0363  120A  158A  249D  120A  118A  	fcall	_scale
 11270  0368  1283               	bcf	3,5	;RP0=0, select bank0
 11271  0369  1303               	bcf	3,6	;RP1=0, select bank0
 11272  036A  084B               	movf	?_scale+3,w
 11273  036B  1683               	bsf	3,5	;RP0=1, select bank1
 11274  036C  1303               	bcf	3,6	;RP1=0, select bank1
 11275  036D  00BD               	movwf	(_sprintf$1212+3)^(0+128)
 11276  036E  1283               	bcf	3,5	;RP0=0, select bank0
 11277  036F  1303               	bcf	3,6	;RP1=0, select bank0
 11278  0370  084A               	movf	?_scale+2,w
 11279  0371  1683               	bsf	3,5	;RP0=1, select bank1
 11280  0372  1303               	bcf	3,6	;RP1=0, select bank1
 11281  0373  00BC               	movwf	(_sprintf$1212+2)^(0+128)
 11282  0374  1283               	bcf	3,5	;RP0=0, select bank0
 11283  0375  1303               	bcf	3,6	;RP1=0, select bank0
 11284  0376  0849               	movf	?_scale+1,w
 11285  0377  1683               	bsf	3,5	;RP0=1, select bank1
 11286  0378  1303               	bcf	3,6	;RP1=0, select bank1
 11287  0379  00BB               	movwf	(_sprintf$1212+1)^(0+128)
 11288  037A  1283               	bcf	3,5	;RP0=0, select bank0
 11289  037B  1303               	bcf	3,6	;RP1=0, select bank0
 11290  037C  0848               	movf	?_scale,w
 11291  037D  1683               	bsf	3,5	;RP0=1, select bank1
 11292  037E  1303               	bcf	3,6	;RP1=0, select bank1
 11293  037F  00BA               	movwf	_sprintf$1212^(0+128)
 11294  0380                     l4399:
 11295                           
 11296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11297  0380  083D               	movf	(_sprintf$1212+3)^(0+128),w
 11298  0381  1283               	bcf	3,5	;RP0=0, select bank0
 11299  0382  1303               	bcf	3,6	;RP1=0, select bank0
 11300  0383  00B5               	movwf	___flmul@a+3
 11301  0384  1683               	bsf	3,5	;RP0=1, select bank1
 11302  0385  1303               	bcf	3,6	;RP1=0, select bank1
 11303  0386  083C               	movf	(_sprintf$1212+2)^(0+128),w
 11304  0387  1283               	bcf	3,5	;RP0=0, select bank0
 11305  0388  1303               	bcf	3,6	;RP1=0, select bank0
 11306  0389  00B4               	movwf	___flmul@a+2
 11307  038A  1683               	bsf	3,5	;RP0=1, select bank1
 11308  038B  1303               	bcf	3,6	;RP1=0, select bank1
 11309  038C  083B               	movf	(_sprintf$1212+1)^(0+128),w
 11310  038D  1283               	bcf	3,5	;RP0=0, select bank0
 11311  038E  1303               	bcf	3,6	;RP1=0, select bank0
 11312  038F  00B3               	movwf	___flmul@a+1
 11313  0390  1683               	bsf	3,5	;RP0=1, select bank1
 11314  0391  1303               	bcf	3,6	;RP1=0, select bank1
 11315  0392  083A               	movf	_sprintf$1212^(0+128),w
 11316  0393  1283               	bcf	3,5	;RP0=0, select bank0
 11317  0394  1303               	bcf	3,6	;RP1=0, select bank0
 11318  0395  00B2               	movwf	___flmul@a
 11319  0396  1683               	bsf	3,5	;RP0=1, select bank1
 11320  0397  1303               	bcf	3,6	;RP1=0, select bank1
 11321  0398  0850               	movf	(sprintf@fval+3)^(0+128),w
 11322  0399  1283               	bcf	3,5	;RP0=0, select bank0
 11323  039A  1303               	bcf	3,6	;RP1=0, select bank0
 11324  039B  00B1               	movwf	___flmul@b+3
 11325  039C  1683               	bsf	3,5	;RP0=1, select bank1
 11326  039D  1303               	bcf	3,6	;RP1=0, select bank1
 11327  039E  084F               	movf	(sprintf@fval+2)^(0+128),w
 11328  039F  1283               	bcf	3,5	;RP0=0, select bank0
 11329  03A0  1303               	bcf	3,6	;RP1=0, select bank0
 11330  03A1  00B0               	movwf	___flmul@b+2
 11331  03A2  1683               	bsf	3,5	;RP0=1, select bank1
 11332  03A3  1303               	bcf	3,6	;RP1=0, select bank1
 11333  03A4  084E               	movf	(sprintf@fval+1)^(0+128),w
 11334  03A5  1283               	bcf	3,5	;RP0=0, select bank0
 11335  03A6  1303               	bcf	3,6	;RP1=0, select bank0
 11336  03A7  00AF               	movwf	___flmul@b+1
 11337  03A8  1683               	bsf	3,5	;RP0=1, select bank1
 11338  03A9  1303               	bcf	3,6	;RP1=0, select bank1
 11339  03AA  084D               	movf	sprintf@fval^(0+128),w
 11340  03AB  1283               	bcf	3,5	;RP0=0, select bank0
 11341  03AC  1303               	bcf	3,6	;RP1=0, select bank0
 11342  03AD  00AE               	movwf	___flmul@b
 11343  03AE  120A  158A  213C  120A  118A  	fcall	___flmul
 11344  03B3  1283               	bcf	3,5	;RP0=0, select bank0
 11345  03B4  1303               	bcf	3,6	;RP1=0, select bank0
 11346  03B5  0831               	movf	?___flmul+3,w
 11347  03B6  00DE               	movwf	___fltol@f1+3
 11348  03B7  0830               	movf	?___flmul+2,w
 11349  03B8  00DD               	movwf	___fltol@f1+2
 11350  03B9  082F               	movf	?___flmul+1,w
 11351  03BA  00DC               	movwf	___fltol@f1+1
 11352  03BB  082E               	movf	?___flmul,w
 11353  03BC  00DB               	movwf	___fltol@f1
 11354  03BD  160A  158A  260B  120A  118A  	fcall	___fltol
 11355  03C2  1283               	bcf	3,5	;RP0=0, select bank0
 11356  03C3  1303               	bcf	3,6	;RP1=0, select bank0
 11357  03C4  085E               	movf	?___fltol+3,w
 11358  03C5  1683               	bsf	3,5	;RP0=1, select bank1
 11359  03C6  1303               	bcf	3,6	;RP1=0, select bank1
 11360  03C7  00C2               	movwf	(sprintf@val+3)^(0+128)
 11361  03C8  1283               	bcf	3,5	;RP0=0, select bank0
 11362  03C9  1303               	bcf	3,6	;RP1=0, select bank0
 11363  03CA  085D               	movf	?___fltol+2,w
 11364  03CB  1683               	bsf	3,5	;RP0=1, select bank1
 11365  03CC  1303               	bcf	3,6	;RP1=0, select bank1
 11366  03CD  00C1               	movwf	(sprintf@val+2)^(0+128)
 11367  03CE  1283               	bcf	3,5	;RP0=0, select bank0
 11368  03CF  1303               	bcf	3,6	;RP1=0, select bank0
 11369  03D0  085C               	movf	?___fltol+1,w
 11370  03D1  1683               	bsf	3,5	;RP0=1, select bank1
 11371  03D2  1303               	bcf	3,6	;RP1=0, select bank1
 11372  03D3  00C0               	movwf	(sprintf@val+1)^(0+128)
 11373  03D4  1283               	bcf	3,5	;RP0=0, select bank0
 11374  03D5  1303               	bcf	3,6	;RP1=0, select bank0
 11375  03D6  085B               	movf	?___fltol,w
 11376  03D7  1683               	bsf	3,5	;RP0=1, select bank1
 11377  03D8  1303               	bcf	3,6	;RP1=0, select bank1
 11378  03D9  00BF               	movwf	sprintf@val^(0+128)
 11379                           
 11380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11381  03DA  2CDC               	goto	l4409
 11382  03DB                     l4401:
 11383                           
 11384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11385  03DB  0854               	movf	sprintf@c^(0+128),w
 11386  03DC  00B5               	movwf	??_sprintf^(0+128)
 11387  03DD  3001               	movlw	1
 11388  03DE                     u7575:
 11389  03DE  1003               	clrc
 11390  03DF  0DB5               	rlf	??_sprintf^(0+128),f
 11391  03E0  3EFF               	addlw	-1
 11392  03E1  1D03               	skipz
 11393  03E2  2BDE               	goto	u7575
 11394  03E3  1003               	clrc
 11395  03E4  0D35               	rlf	??_sprintf^(0+128),w
 11396  03E5  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11397  03E6  0084               	movwf	4
 11398  03E7  160A  118A  200A  120A  118A  	fcall	stringdir
 11399  03EC  1283               	bcf	3,5	;RP0=0, select bank0
 11400  03ED  1303               	bcf	3,6	;RP1=0, select bank0
 11401  03EE  00A0               	movwf	___lldiv@divisor
 11402  03EF  160A  118A  200A  120A  118A  	fcall	stringdir
 11403  03F4  00A1               	movwf	___lldiv@divisor+1
 11404  03F5  160A  118A  200A  120A  118A  	fcall	stringdir
 11405  03FA  00A2               	movwf	___lldiv@divisor+2
 11406  03FB  160A  118A  200A  120A  118A  	fcall	stringdir
 11407  0400  00A3               	movwf	___lldiv@divisor+3
 11408  0401  1683               	bsf	3,5	;RP0=1, select bank1
 11409  0402  1303               	bcf	3,6	;RP1=0, select bank1
 11410  0403  0842               	movf	(sprintf@val+3)^(0+128),w
 11411  0404  1283               	bcf	3,5	;RP0=0, select bank0
 11412  0405  1303               	bcf	3,6	;RP1=0, select bank0
 11413  0406  00A7               	movwf	___lldiv@dividend+3
 11414  0407  1683               	bsf	3,5	;RP0=1, select bank1
 11415  0408  1303               	bcf	3,6	;RP1=0, select bank1
 11416  0409  0841               	movf	(sprintf@val+2)^(0+128),w
 11417  040A  1283               	bcf	3,5	;RP0=0, select bank0
 11418  040B  1303               	bcf	3,6	;RP1=0, select bank0
 11419  040C  00A6               	movwf	___lldiv@dividend+2
 11420  040D  1683               	bsf	3,5	;RP0=1, select bank1
 11421  040E  1303               	bcf	3,6	;RP1=0, select bank1
 11422  040F  0840               	movf	(sprintf@val+1)^(0+128),w
 11423  0410  1283               	bcf	3,5	;RP0=0, select bank0
 11424  0411  1303               	bcf	3,6	;RP1=0, select bank0
 11425  0412  00A5               	movwf	___lldiv@dividend+1
 11426  0413  1683               	bsf	3,5	;RP0=1, select bank1
 11427  0414  1303               	bcf	3,6	;RP1=0, select bank1
 11428  0415  083F               	movf	sprintf@val^(0+128),w
 11429  0416  1283               	bcf	3,5	;RP0=0, select bank0
 11430  0417  1303               	bcf	3,6	;RP1=0, select bank0
 11431  0418  00A4               	movwf	___lldiv@dividend
 11432  0419  160A  158A  253A  120A  118A  	fcall	___lldiv
 11433  041E  1283               	bcf	3,5	;RP0=0, select bank0
 11434  041F  1303               	bcf	3,6	;RP1=0, select bank0
 11435  0420  0823               	movf	?___lldiv+3,w
 11436  0421  1683               	bsf	3,5	;RP0=1, select bank1
 11437  0422  1303               	bcf	3,6	;RP1=0, select bank1
 11438  0423  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
 11439  0424  1283               	bcf	3,5	;RP0=0, select bank0
 11440  0425  1303               	bcf	3,6	;RP1=0, select bank0
 11441  0426  0822               	movf	?___lldiv+2,w
 11442  0427  1683               	bsf	3,5	;RP0=1, select bank1
 11443  0428  1303               	bcf	3,6	;RP1=0, select bank1
 11444  0429  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
 11445  042A  1283               	bcf	3,5	;RP0=0, select bank0
 11446  042B  1303               	bcf	3,6	;RP1=0, select bank0
 11447  042C  0821               	movf	?___lldiv+1,w
 11448  042D  1683               	bsf	3,5	;RP0=1, select bank1
 11449  042E  1303               	bcf	3,6	;RP1=0, select bank1
 11450  042F  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
 11451  0430  1283               	bcf	3,5	;RP0=0, select bank0
 11452  0431  1303               	bcf	3,6	;RP1=0, select bank0
 11453  0432  0820               	movf	?___lldiv,w
 11454  0433  1683               	bsf	3,5	;RP0=1, select bank1
 11455  0434  1303               	bcf	3,6	;RP1=0, select bank1
 11456  0435  00C7               	movwf	sprintf@tmpval^(0+128)
 11457  0436                     l4403:
 11458                           
 11459                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11460  0436  3000               	movlw	0
 11461  0437  1283               	bcf	3,5	;RP0=0, select bank0
 11462  0438  1303               	bcf	3,6	;RP1=0, select bank0
 11463  0439  00A3               	movwf	___llmod@divisor+3
 11464  043A  3000               	movlw	0
 11465  043B  00A2               	movwf	___llmod@divisor+2
 11466  043C  3000               	movlw	0
 11467  043D  00A1               	movwf	___llmod@divisor+1
 11468  043E  300A               	movlw	10
 11469  043F  00A0               	movwf	___llmod@divisor
 11470  0440  1683               	bsf	3,5	;RP0=1, select bank1
 11471  0441  1303               	bcf	3,6	;RP1=0, select bank1
 11472  0442  084A               	movf	(sprintf@tmpval+3)^(0+128),w
 11473  0443  1283               	bcf	3,5	;RP0=0, select bank0
 11474  0444  1303               	bcf	3,6	;RP1=0, select bank0
 11475  0445  00A7               	movwf	___llmod@dividend+3
 11476  0446  1683               	bsf	3,5	;RP0=1, select bank1
 11477  0447  1303               	bcf	3,6	;RP1=0, select bank1
 11478  0448  0849               	movf	(sprintf@tmpval+2)^(0+128),w
 11479  0449  1283               	bcf	3,5	;RP0=0, select bank0
 11480  044A  1303               	bcf	3,6	;RP1=0, select bank0
 11481  044B  00A6               	movwf	___llmod@dividend+2
 11482  044C  1683               	bsf	3,5	;RP0=1, select bank1
 11483  044D  1303               	bcf	3,6	;RP1=0, select bank1
 11484  044E  0848               	movf	(sprintf@tmpval+1)^(0+128),w
 11485  044F  1283               	bcf	3,5	;RP0=0, select bank0
 11486  0450  1303               	bcf	3,6	;RP1=0, select bank0
 11487  0451  00A5               	movwf	___llmod@dividend+1
 11488  0452  1683               	bsf	3,5	;RP0=1, select bank1
 11489  0453  1303               	bcf	3,6	;RP1=0, select bank1
 11490  0454  0847               	movf	sprintf@tmpval^(0+128),w
 11491  0455  1283               	bcf	3,5	;RP0=0, select bank0
 11492  0456  1303               	bcf	3,6	;RP1=0, select bank0
 11493  0457  00A4               	movwf	___llmod@dividend
 11494  0458  160A  158A  242B  120A  118A  	fcall	___llmod
 11495  045D  1283               	bcf	3,5	;RP0=0, select bank0
 11496  045E  1303               	bcf	3,6	;RP1=0, select bank0
 11497  045F  0823               	movf	?___llmod+3,w
 11498  0460  1683               	bsf	3,5	;RP0=1, select bank1
 11499  0461  1303               	bcf	3,6	;RP1=0, select bank1
 11500  0462  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
 11501  0463  1283               	bcf	3,5	;RP0=0, select bank0
 11502  0464  1303               	bcf	3,6	;RP1=0, select bank0
 11503  0465  0822               	movf	?___llmod+2,w
 11504  0466  1683               	bsf	3,5	;RP0=1, select bank1
 11505  0467  1303               	bcf	3,6	;RP1=0, select bank1
 11506  0468  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
 11507  0469  1283               	bcf	3,5	;RP0=0, select bank0
 11508  046A  1303               	bcf	3,6	;RP1=0, select bank0
 11509  046B  0821               	movf	?___llmod+1,w
 11510  046C  1683               	bsf	3,5	;RP0=1, select bank1
 11511  046D  1303               	bcf	3,6	;RP1=0, select bank1
 11512  046E  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
 11513  046F  1283               	bcf	3,5	;RP0=0, select bank0
 11514  0470  1303               	bcf	3,6	;RP1=0, select bank0
 11515  0471  0820               	movf	?___llmod,w
 11516  0472  1683               	bsf	3,5	;RP0=1, select bank1
 11517  0473  1303               	bcf	3,6	;RP1=0, select bank1
 11518  0474  00C7               	movwf	sprintf@tmpval^(0+128)
 11519  0475                     l4405:
 11520                           
 11521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11522  0475  0847               	movf	sprintf@tmpval^(0+128),w
 11523  0476  3E30               	addlw	48
 11524  0477  00B5               	movwf	??_sprintf^(0+128)
 11525  0478  0851               	movf	sprintf@sp^(0+128),w
 11526  0479  0084               	movwf	4
 11527  047A  0835               	movf	??_sprintf^(0+128),w
 11528  047B  1783               	bsf	3,7	;select IRP bank2
 11529  047C  0080               	movwf	0
 11530  047D  3001               	movlw	1
 11531  047E  00B5               	movwf	??_sprintf^(0+128)
 11532  047F  0835               	movf	??_sprintf^(0+128),w
 11533  0480  07D1               	addwf	sprintf@sp^(0+128),f
 11534  0481                     l4407:
 11535                           
 11536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11537  0481  0854               	movf	sprintf@c^(0+128),w
 11538  0482  00B5               	movwf	??_sprintf^(0+128)
 11539  0483  3001               	movlw	1
 11540  0484                     u7585:
 11541  0484  1003               	clrc
 11542  0485  0DB5               	rlf	??_sprintf^(0+128),f
 11543  0486  3EFF               	addlw	-1
 11544  0487  1D03               	skipz
 11545  0488  2C84               	goto	u7585
 11546  0489  1003               	clrc
 11547  048A  0D35               	rlf	??_sprintf^(0+128),w
 11548  048B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11549  048C  0084               	movwf	4
 11550  048D  160A  118A  200A  120A  118A  	fcall	stringdir
 11551  0492  1283               	bcf	3,5	;RP0=0, select bank0
 11552  0493  1303               	bcf	3,6	;RP1=0, select bank0
 11553  0494  00A0               	movwf	___llmod@divisor
 11554  0495  160A  118A  200A  120A  118A  	fcall	stringdir
 11555  049A  00A1               	movwf	___llmod@divisor+1
 11556  049B  160A  118A  200A  120A  118A  	fcall	stringdir
 11557  04A0  00A2               	movwf	___llmod@divisor+2
 11558  04A1  160A  118A  200A  120A  118A  	fcall	stringdir
 11559  04A6  00A3               	movwf	___llmod@divisor+3
 11560  04A7  1683               	bsf	3,5	;RP0=1, select bank1
 11561  04A8  1303               	bcf	3,6	;RP1=0, select bank1
 11562  04A9  0842               	movf	(sprintf@val+3)^(0+128),w
 11563  04AA  1283               	bcf	3,5	;RP0=0, select bank0
 11564  04AB  1303               	bcf	3,6	;RP1=0, select bank0
 11565  04AC  00A7               	movwf	___llmod@dividend+3
 11566  04AD  1683               	bsf	3,5	;RP0=1, select bank1
 11567  04AE  1303               	bcf	3,6	;RP1=0, select bank1
 11568  04AF  0841               	movf	(sprintf@val+2)^(0+128),w
 11569  04B0  1283               	bcf	3,5	;RP0=0, select bank0
 11570  04B1  1303               	bcf	3,6	;RP1=0, select bank0
 11571  04B2  00A6               	movwf	___llmod@dividend+2
 11572  04B3  1683               	bsf	3,5	;RP0=1, select bank1
 11573  04B4  1303               	bcf	3,6	;RP1=0, select bank1
 11574  04B5  0840               	movf	(sprintf@val+1)^(0+128),w
 11575  04B6  1283               	bcf	3,5	;RP0=0, select bank0
 11576  04B7  1303               	bcf	3,6	;RP1=0, select bank0
 11577  04B8  00A5               	movwf	___llmod@dividend+1
 11578  04B9  1683               	bsf	3,5	;RP0=1, select bank1
 11579  04BA  1303               	bcf	3,6	;RP1=0, select bank1
 11580  04BB  083F               	movf	sprintf@val^(0+128),w
 11581  04BC  1283               	bcf	3,5	;RP0=0, select bank0
 11582  04BD  1303               	bcf	3,6	;RP1=0, select bank0
 11583  04BE  00A4               	movwf	___llmod@dividend
 11584  04BF  160A  158A  242B  120A  118A  	fcall	___llmod
 11585  04C4  1283               	bcf	3,5	;RP0=0, select bank0
 11586  04C5  1303               	bcf	3,6	;RP1=0, select bank0
 11587  04C6  0823               	movf	?___llmod+3,w
 11588  04C7  1683               	bsf	3,5	;RP0=1, select bank1
 11589  04C8  1303               	bcf	3,6	;RP1=0, select bank1
 11590  04C9  00C2               	movwf	(sprintf@val+3)^(0+128)
 11591  04CA  1283               	bcf	3,5	;RP0=0, select bank0
 11592  04CB  1303               	bcf	3,6	;RP1=0, select bank0
 11593  04CC  0822               	movf	?___llmod+2,w
 11594  04CD  1683               	bsf	3,5	;RP0=1, select bank1
 11595  04CE  1303               	bcf	3,6	;RP1=0, select bank1
 11596  04CF  00C1               	movwf	(sprintf@val+2)^(0+128)
 11597  04D0  1283               	bcf	3,5	;RP0=0, select bank0
 11598  04D1  1303               	bcf	3,6	;RP1=0, select bank0
 11599  04D2  0821               	movf	?___llmod+1,w
 11600  04D3  1683               	bsf	3,5	;RP0=1, select bank1
 11601  04D4  1303               	bcf	3,6	;RP1=0, select bank1
 11602  04D5  00C0               	movwf	(sprintf@val+1)^(0+128)
 11603  04D6  1283               	bcf	3,5	;RP0=0, select bank0
 11604  04D7  1303               	bcf	3,6	;RP1=0, select bank0
 11605  04D8  0820               	movf	?___llmod,w
 11606  04D9  1683               	bsf	3,5	;RP0=1, select bank1
 11607  04DA  1303               	bcf	3,6	;RP1=0, select bank1
 11608  04DB  00BF               	movwf	sprintf@val^(0+128)
 11609  04DC                     l4409:
 11610                           
 11611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11612  04DC  3001               	movlw	1
 11613  04DD  02D4               	subwf	sprintf@c^(0+128),f
 11614  04DE  0A54               	incf	sprintf@c^(0+128),w
 11615  04DF  1D03               	btfss	3,2
 11616  04E0  2CE2               	goto	u7591
 11617  04E1  2CE3               	goto	u7590
 11618  04E2                     u7591:
 11619  04E2  2BDB               	goto	l4401
 11620  04E3                     u7590:
 11621  04E3  2CF5               	goto	l4417
 11622  04E4                     l4411:
 11623                           
 11624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11625  04E4  3030               	movlw	48
 11626  04E5  00B5               	movwf	??_sprintf^(0+128)
 11627  04E6  0851               	movf	sprintf@sp^(0+128),w
 11628  04E7  0084               	movwf	4
 11629  04E8  0835               	movf	??_sprintf^(0+128),w
 11630  04E9  1783               	bsf	3,7	;select IRP bank2
 11631  04EA  0080               	movwf	0
 11632  04EB                     l4413:
 11633  04EB  3001               	movlw	1
 11634  04EC  00B5               	movwf	??_sprintf^(0+128)
 11635  04ED  0835               	movf	??_sprintf^(0+128),w
 11636  04EE  07D1               	addwf	sprintf@sp^(0+128),f
 11637  04EF                     l4415:
 11638                           
 11639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11640  04EF  30FF               	movlw	255
 11641  04F0  07D2               	addwf	sprintf@prec^(0+128),f
 11642  04F1  1803               	skipnc
 11643  04F2  0AD3               	incf	(sprintf@prec+1)^(0+128),f
 11644  04F3  30FF               	movlw	255
 11645  04F4  07D3               	addwf	(sprintf@prec+1)^(0+128),f
 11646  04F5                     l4417:
 11647                           
 11648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11649  04F5  0852               	movf	sprintf@prec^(0+128),w
 11650  04F6  0453               	iorwf	(sprintf@prec+1)^(0+128),w
 11651  04F7  1D03               	btfss	3,2
 11652  04F8  2CFA               	goto	u7601
 11653  04F9  2CFB               	goto	u7600
 11654  04FA                     u7601:
 11655  04FA  2CE4               	goto	l4411
 11656  04FB                     u7600:
 11657  04FB  2DC1               	goto	l4465
 11658  04FC                     l4419:
 11659                           
 11660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 11661  04FC  0852               	movf	sprintf@prec^(0+128),w
 11662  04FD  0453               	iorwf	(sprintf@prec+1)^(0+128),w
 11663  04FE  1D03               	btfss	3,2
 11664  04FF  2D01               	goto	u7611
 11665  0500  2D02               	goto	u7610
 11666  0501                     u7611:
 11667  0501  2D10               	goto	l411
 11668  0502                     u7610:
 11669  0502                     l4421:
 11670  0502  0842               	movf	(sprintf@val+3)^(0+128),w
 11671  0503  0441               	iorwf	(sprintf@val+2)^(0+128),w
 11672  0504  0440               	iorwf	(sprintf@val+1)^(0+128),w
 11673  0505  043F               	iorwf	sprintf@val^(0+128),w
 11674  0506  1D03               	skipz
 11675  0507  2D09               	goto	u7621
 11676  0508  2D0A               	goto	u7620
 11677  0509                     u7621:
 11678  0509  2D10               	goto	l411
 11679  050A                     u7620:
 11680  050A                     l4423:
 11681                           
 11682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11683  050A  3001               	movlw	1
 11684  050B  07D2               	addwf	sprintf@prec^(0+128),f
 11685  050C  1803               	skipnc
 11686  050D  0AD3               	incf	(sprintf@prec+1)^(0+128),f
 11687  050E  3000               	movlw	0
 11688  050F  07D3               	addwf	(sprintf@prec+1)^(0+128),f
 11689  0510                     l411:
 11690                           
 11691                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11692  0510  0853               	movf	(sprintf@prec+1)^(0+128),w
 11693  0511  3A80               	xorlw	128
 11694  0512  3C80               	sublw	128
 11695  0513  1D03               	skipz
 11696  0514  2D17               	goto	u7635
 11697  0515  0852               	movf	sprintf@prec^(0+128),w
 11698  0516  0254               	subwf	sprintf@c^(0+128),w
 11699  0517                     u7635:
 11700  0517  1803               	skipnc
 11701  0518  2D1A               	goto	u7631
 11702  0519  2D1B               	goto	u7630
 11703  051A                     u7631:
 11704  051A  2D22               	goto	l4427
 11705  051B                     u7630:
 11706  051B                     l4425:
 11707                           
 11708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11709  051B  1683               	bsf	3,5	;RP0=1, select bank1
 11710  051C  1303               	bcf	3,6	;RP1=0, select bank1
 11711  051D  0852               	movf	sprintf@prec^(0+128),w
 11712  051E  00B5               	movwf	??_sprintf^(0+128)
 11713  051F  0835               	movf	??_sprintf^(0+128),w
 11714  0520  00D4               	movwf	sprintf@c^(0+128)
 11715  0521  2D3A               	goto	l4431
 11716  0522                     l4427:
 11717  0522  1683               	bsf	3,5	;RP0=1, select bank1
 11718  0523  1303               	bcf	3,6	;RP1=0, select bank1
 11719  0524  0853               	movf	(sprintf@prec+1)^(0+128),w
 11720  0525  3A80               	xorlw	128
 11721  0526  00B5               	movwf	??_sprintf^(0+128)
 11722  0527  3080               	movlw	128
 11723  0528  0235               	subwf	??_sprintf^(0+128),w
 11724  0529  1D03               	skipz
 11725  052A  2D2D               	goto	u7645
 11726  052B  0854               	movf	sprintf@c^(0+128),w
 11727  052C  0252               	subwf	sprintf@prec^(0+128),w
 11728  052D                     u7645:
 11729  052D  1803               	skipnc
 11730  052E  2D30               	goto	u7641
 11731  052F  2D31               	goto	u7640
 11732  0530                     u7641:
 11733  0530  2D3A               	goto	l4431
 11734  0531                     u7640:
 11735  0531                     l4429:
 11736                           
 11737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11738  0531  1683               	bsf	3,5	;RP0=1, select bank1
 11739  0532  1303               	bcf	3,6	;RP1=0, select bank1
 11740  0533  0854               	movf	sprintf@c^(0+128),w
 11741  0534  00B5               	movwf	??_sprintf^(0+128)
 11742  0535  01B6               	clrf	(??_sprintf^(0+128)+1)
 11743  0536  0835               	movf	??_sprintf^(0+128),w
 11744  0537  00D2               	movwf	sprintf@prec^(0+128)
 11745  0538  0836               	movf	(??_sprintf+1)^(0+128),w
 11746  0539  00D3               	movwf	(sprintf@prec+1)^(0+128)
 11747  053A                     l4431:
 11748                           
 11749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11750  053A  1683               	bsf	3,5	;RP0=1, select bank1
 11751  053B  1303               	bcf	3,6	;RP1=0, select bank1
 11752  053C  0845               	movf	sprintf@width^(0+128),w
 11753  053D  0446               	iorwf	(sprintf@width+1)^(0+128),w
 11754  053E  1903               	btfsc	3,2
 11755  053F  2D41               	goto	u7651
 11756  0540  2D42               	goto	u7650
 11757  0541                     u7651:
 11758  0541  2D54               	goto	l4437
 11759  0542                     u7650:
 11760  0542                     l4433:
 11761  0542  3003               	movlw	3
 11762  0543  0543               	andwf	sprintf@flag^(0+128),w
 11763  0544  00B5               	movwf	??_sprintf^(0+128)
 11764  0545  3000               	movlw	0
 11765  0546  0544               	andwf	(sprintf@flag+1)^(0+128),w
 11766  0547  00B6               	movwf	(??_sprintf+1)^(0+128)
 11767  0548  0835               	movf	??_sprintf^(0+128),w
 11768  0549  0436               	iorwf	(??_sprintf^(0+128)+1),w
 11769  054A  1903               	btfsc	3,2
 11770  054B  2D4D               	goto	u7661
 11771  054C  2D4E               	goto	u7660
 11772  054D                     u7661:
 11773  054D  2D54               	goto	l4437
 11774  054E                     u7660:
 11775  054E                     l4435:
 11776                           
 11777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11778  054E  30FF               	movlw	255
 11779  054F  07C5               	addwf	sprintf@width^(0+128),f
 11780  0550  1803               	skipnc
 11781  0551  0AC6               	incf	(sprintf@width+1)^(0+128),f
 11782  0552  30FF               	movlw	255
 11783  0553  07C6               	addwf	(sprintf@width+1)^(0+128),f
 11784  0554                     l4437:
 11785                           
 11786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11787  0554  1F44               	btfss	(sprintf@flag+1)^(0+128),6
 11788  0555  2D57               	goto	u7671
 11789  0556  2D58               	goto	u7670
 11790  0557                     u7671:
 11791  0557  2D73               	goto	l4445
 11792  0558                     u7670:
 11793  0558                     l4439:
 11794                           
 11795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11796  0558  0853               	movf	(sprintf@prec+1)^(0+128),w
 11797  0559  3A80               	xorlw	128
 11798  055A  00B5               	movwf	??_sprintf^(0+128)
 11799  055B  0846               	movf	(sprintf@width+1)^(0+128),w
 11800  055C  3A80               	xorlw	128
 11801  055D  0235               	subwf	??_sprintf^(0+128),w
 11802  055E  1D03               	skipz
 11803  055F  2D62               	goto	u7685
 11804  0560  0845               	movf	sprintf@width^(0+128),w
 11805  0561  0252               	subwf	sprintf@prec^(0+128),w
 11806  0562                     u7685:
 11807  0562  1803               	skipnc
 11808  0563  2D65               	goto	u7681
 11809  0564  2D66               	goto	u7680
 11810  0565                     u7681:
 11811  0565  2D6F               	goto	l4443
 11812  0566                     u7680:
 11813  0566                     l4441:
 11814                           
 11815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11816  0566  1683               	bsf	3,5	;RP0=1, select bank1
 11817  0567  1303               	bcf	3,6	;RP1=0, select bank1
 11818  0568  0852               	movf	sprintf@prec^(0+128),w
 11819  0569  02C5               	subwf	sprintf@width^(0+128),f
 11820  056A  0853               	movf	(sprintf@prec+1)^(0+128),w
 11821  056B  1C03               	skipc
 11822  056C  03C6               	decf	(sprintf@width+1)^(0+128),f
 11823  056D  02C6               	subwf	(sprintf@width+1)^(0+128),f
 11824  056E  2D73               	goto	l4445
 11825  056F                     l4443:
 11826                           
 11827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11828  056F  1683               	bsf	3,5	;RP0=1, select bank1
 11829  0570  1303               	bcf	3,6	;RP1=0, select bank1
 11830  0571  01C5               	clrf	sprintf@width^(0+128)
 11831  0572  01C6               	clrf	(sprintf@width+1)^(0+128)
 11832  0573                     l4445:
 11833                           
 11834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11835  0573  0846               	movf	(sprintf@width+1)^(0+128),w
 11836  0574  3A80               	xorlw	128
 11837  0575  3C80               	sublw	128
 11838  0576  1D03               	skipz
 11839  0577  2D7A               	goto	u7695
 11840  0578  0845               	movf	sprintf@width^(0+128),w
 11841  0579  0254               	subwf	sprintf@c^(0+128),w
 11842  057A                     u7695:
 11843  057A  1803               	skipnc
 11844  057B  2D7D               	goto	u7691
 11845  057C  2D7E               	goto	u7690
 11846  057D                     u7691:
 11847  057D  2D8A               	goto	l4449
 11848  057E                     u7690:
 11849  057E                     l4447:
 11850                           
 11851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11852  057E  1683               	bsf	3,5	;RP0=1, select bank1
 11853  057F  1303               	bcf	3,6	;RP1=0, select bank1
 11854  0580  0854               	movf	sprintf@c^(0+128),w
 11855  0581  00B5               	movwf	??_sprintf^(0+128)
 11856  0582  01B6               	clrf	(??_sprintf^(0+128)+1)
 11857  0583  0835               	movf	??_sprintf^(0+128),w
 11858  0584  02C5               	subwf	sprintf@width^(0+128),f
 11859  0585  0836               	movf	(??_sprintf+1)^(0+128),w
 11860  0586  1C03               	skipc
 11861  0587  03C6               	decf	(sprintf@width+1)^(0+128),f
 11862  0588  02C6               	subwf	(sprintf@width+1)^(0+128),f
 11863  0589  2D8E               	goto	l4451
 11864  058A                     l4449:
 11865                           
 11866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11867  058A  1683               	bsf	3,5	;RP0=1, select bank1
 11868  058B  1303               	bcf	3,6	;RP1=0, select bank1
 11869  058C  01C5               	clrf	sprintf@width^(0+128)
 11870  058D  01C6               	clrf	(sprintf@width+1)^(0+128)
 11871  058E                     l4451:
 11872                           
 11873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11874  058E  0845               	movf	sprintf@width^(0+128),w
 11875  058F  0446               	iorwf	(sprintf@width+1)^(0+128),w
 11876  0590  1903               	btfsc	3,2
 11877  0591  2D93               	goto	u7701
 11878  0592  2D94               	goto	u7700
 11879  0593                     u7701:
 11880  0593  2DAB               	goto	l4459
 11881  0594                     u7700:
 11882  0594                     l4453:
 11883                           
 11884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11885  0594  3020               	movlw	32
 11886  0595  00B5               	movwf	??_sprintf^(0+128)
 11887  0596  0851               	movf	sprintf@sp^(0+128),w
 11888  0597  0084               	movwf	4
 11889  0598  0835               	movf	??_sprintf^(0+128),w
 11890  0599  1783               	bsf	3,7	;select IRP bank2
 11891  059A  0080               	movwf	0
 11892  059B                     l4455:
 11893  059B  3001               	movlw	1
 11894  059C  00B5               	movwf	??_sprintf^(0+128)
 11895  059D  0835               	movf	??_sprintf^(0+128),w
 11896  059E  07D1               	addwf	sprintf@sp^(0+128),f
 11897  059F                     l4457:
 11898  059F  30FF               	movlw	255
 11899  05A0  07C5               	addwf	sprintf@width^(0+128),f
 11900  05A1  1803               	skipnc
 11901  05A2  0AC6               	incf	(sprintf@width+1)^(0+128),f
 11902  05A3  30FF               	movlw	255
 11903  05A4  07C6               	addwf	(sprintf@width+1)^(0+128),f
 11904  05A5  0845               	movf	sprintf@width^(0+128),w
 11905  05A6  0446               	iorwf	(sprintf@width+1)^(0+128),w
 11906  05A7  1D03               	btfss	3,2
 11907  05A8  2DAA               	goto	u7711
 11908  05A9  2DAB               	goto	u7710
 11909  05AA                     u7711:
 11910  05AA  2D94               	goto	l4453
 11911  05AB                     u7710:
 11912  05AB                     l4459:
 11913                           
 11914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11915  05AB  3003               	movlw	3
 11916  05AC  0543               	andwf	sprintf@flag^(0+128),w
 11917  05AD  00B5               	movwf	??_sprintf^(0+128)
 11918  05AE  3000               	movlw	0
 11919  05AF  0544               	andwf	(sprintf@flag+1)^(0+128),w
 11920  05B0  00B6               	movwf	(??_sprintf+1)^(0+128)
 11921  05B1  0835               	movf	??_sprintf^(0+128),w
 11922  05B2  0436               	iorwf	(??_sprintf^(0+128)+1),w
 11923  05B3  1903               	btfsc	3,2
 11924  05B4  2DB6               	goto	u7721
 11925  05B5  2DB7               	goto	u7720
 11926  05B6                     u7721:
 11927  05B6  2DC1               	goto	l4465
 11928  05B7                     u7720:
 11929  05B7                     l4461:
 11930                           
 11931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11932  05B7  302D               	movlw	45
 11933  05B8  00B5               	movwf	??_sprintf^(0+128)
 11934  05B9  0851               	movf	sprintf@sp^(0+128),w
 11935  05BA  0084               	movwf	4
 11936  05BB  0835               	movf	??_sprintf^(0+128),w
 11937  05BC  1783               	bsf	3,7	;select IRP bank2
 11938  05BD  0080               	movwf	0
 11939  05BE  160A  118A  2CCB   	goto	l4221
 11940  05C1                     l4465:
 11941                           
 11942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11943  05C1  3001               	movlw	1
 11944  05C2  07A8               	addwf	sprintf@f^(0+128),f
 11945  05C3  30FF               	movlw	-1
 11946  05C4  0728               	addwf	sprintf@f^(0+128),w
 11947  05C5  0084               	movwf	4
 11948  05C6  160A  118A  200A  120A  118A  	fcall	stringdir
 11949  05CB  00B5               	movwf	??_sprintf^(0+128)
 11950  05CC  0835               	movf	??_sprintf^(0+128),w
 11951  05CD  00D4               	movwf	sprintf@c^(0+128)
 11952  05CE  0854               	movf	sprintf@c^(0+128),w
 11953  05CF  1D03               	btfss	3,2
 11954  05D0  2DD2               	goto	u7731
 11955  05D1  2DD5               	goto	u7730
 11956  05D2                     u7731:
 11957  05D2  160A  118A  2CBE   	goto	l4217
 11958  05D5                     u7730:
 11959  05D5                     l4467:
 11960                           
 11961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11962  05D5  0851               	movf	sprintf@sp^(0+128),w
 11963  05D6  0084               	movwf	4
 11964  05D7  1783               	bsf	3,7	;select IRP bank2
 11965  05D8  0180               	clrf	0
 11966  05D9                     l426:
 11967  05D9  0008               	return
 11968  05DA                     __end_of_sprintf:

Data Sizes:
    Strings     39
    Constant    144
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80     80      80
    BANK1            80     56      71
    BANK3            96      0      20
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK3[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 18
		 -> f1(BANK3[10]), STR_1(CODE[18]), 

    send_crct@st	PTR unsigned char  size(1) Largest target is 10
		 -> f1(BANK3[10]), 


Critical Paths under _main in COMMON

    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    _send_crct->_send_char
    ___flmul->___awmod
    ___flmul->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    _isr->_int_uart

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conv->___flmul
    ___flmul->___xxtofl
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   47437
                                             53 BANK1      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _cfg_adc
                            _cfg_clk
                           _cfg_inte
                             _cfg_io
                          _cfg_usart
                               _conv
                          _send_crct
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    37     13   38562
                                              8 BANK1     45    32     13
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    9379
                                             40 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              5 COMMON     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              4 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    7776
                                             40 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              7 COMMON     1     1      0
                                              4 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              0 BANK0     18    10      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              5 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              5 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              5 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             59 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             60 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _send_crct                                            4     4      0     145
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      22
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conv                                                13     9      4    6684
                                             40 BANK0     13     9      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    5873
                                             14 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              5 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _cfg_usart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_io                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_inte                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_adc                                              1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     589
                                              0 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     279
                                              6 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     651
                                              1 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0     527
                                              1 BANK0      3     3      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     279
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     279
                                              6 COMMON     2     2      0
                                              0 BANK0      1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     248
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              3 COMMON     2     2      0
                            _int_adc
                           _int_uart
 ---------------------------------------------------------------------------------
 (6) _int_uart                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _int_adc                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _cfg_adc
   _cfg_clk
   _cfg_inte
   _cfg_io
   _cfg_usart
   _conv
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _send_crct
     _send_char
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _isr (ROOT)
   _int_adc
   _int_uart

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      B4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     38      47       7       88.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      14       9       20.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      B4      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 27 10:38:37 2021

                        pc 0002                         _V1 00E6                         _V2 00E5  
                       _V3 00E4                         _f1 019A                         _f2 0190  
             ___awdiv@sign 002A                         fsr 0004        ___wmul@multiplicand 0022  
      __Umul8_16@word_mpld 0024                        l202 192F                        l211 19CE  
                      l131 18EE                        l140 1915                        l205 18CF  
                      l214 1B8A                        l134 07FC                        l223 1AF7  
                      l143 18B8                        l152 18BA                        l217 194A  
                      l137 18A6                        l155 18C2                        l411 0510  
                      l403 0349                        l149 19A8                        l190 1A55  
                      l158 1AB1                        l430 080E                        l191 1A5B  
                      l183 1A3D                        l343 0FFF                        l192 1A5C  
                      l184 1A40                        l432 0826                        l600 122B  
                      l336 07E6                        l193 1A62                        l185 1A46  
                      l601 1190                        l194 1A63                        l186 1A47  
                      l426 05D9                        l195 1A69                        l187 1A4D  
                      l611 121E                        l196 1A6A                        l188 1A4E  
                      l604 11EE                        l197 1A70                        l189 1A54  
                      l621 10E8                        l365 1597                        l199 1A71  
                      l616 1BA9                        l624 1154                        l800 14B3  
                      l640 1E71                        l617 1BC5                        l625 116D  
                      l633 1E86                        l618 1BDA                        l466 1DA1  
                      l803 1C2A                        l643 1E86                        l651 1FC2  
                      l396 0305                        l629 18DC                        l910 1F0C  
                      l911 1F18                        l903 1EF0                        l647 1FFF  
                      l583 1E0A                        l648 1F71                        l736 1B3D  
                      l761 1336                        l770 14B3                        l658 1FF2  
                      l746 1A33                        l763 130D                        l596 1CDB  
                      l853 0C9C                        l757 128F                        l917 1900  
                      l782 1425                        l686 1C80                        l791 1485  
                      l872 19E5                        l865 0C90                        l874 19F7  
                      l778 1401                        l859 0C08                        l788 1447  
                      l799 14A7                        l897 1EAB                        l899 1F42  
                      _RC1 0039                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      _v11 00E0                        _v22 00DC                        _v33 00D8  
                      _op1 0078                        _isr 1967                        fsr0 0004  
                      indf 0000               ___awmod@sign 0077               ___flmul@aexp 003C  
             ___flmul@bexp 0041               ___flmul@sign 003B               ___flmul@temp 0046  
             ___flmul@prod 0042               ___fltol@exp1 0065                       l3001 1184  
                     l3011 11AA                       l3021 11DE                       l3013 11AC  
                     l3023 11DF                       l3015 11B5                       l3007 1191  
                     l3041 1213                       l3033 11FA                       l3025 11E8  
                     l3017 11BE                       l3009 1199                       l2401 1DC5  
                     l4001 0D9E                       l3131 1E21                       l3043 1223  
                     l3027 11F2                       l3035 120C                       l3019 11D0  
                     l2411 1DE8                       l2403 1DC8                       l4011 0E5A  
                     l4101 1BD9                       l3141 1E45                       l3133 1E36  
                     l3125 1E0B                       l3061 1D3A                       l2421 1E01  
                     l2413 1DEE                       l2405 1DCF                       l4005 0E26  
                     l4111 1104                       l3135 1E37                       l3127 1E18  
                     l3071 1D69                       l3063 1D4C                       l2423 1E06  
                     l2415 1DEF                       l2407 1DD3                       l4023 0FD3  
                     l4201 1AB2                       l3241 18E0                       l4121 116C  
                     l4113 1108                       l4105 10CA                       l2601 131C  
                     l2521 123E                       l2513 122C                       l3137 1E3F  
                     l3073 1D7B                       l3065 1D4F                       l3081 1D99  
                     l3161 1C2B                       l4041 1F78                       l4033 1F5F  
                     l2417 1DF6                       l2409 1DD7                       l4017 0F44  
                     l4009 0E53                       l4203 1AB7                       l3251 189F  
                     l3243 18E2                       l4211 1AA9                       l4115 112C  
                     l4107 10E0                       l2611 133A                       l2603 1320  
                     l2523 1243                       l2531 1253                       l2515 1233  
                     l3155 1E66                       l3147 1E4D                       l3139 1E41  
                     l3075 1D89                       l3067 1D5C                       l3171 1C5B  
                     l3163 1C35                       l4051 1FA9                       l4043 1F87  
                     l4027 1F43                       l2419 1DFC                       l4019 0F4B  
                     l4205 1AD3                       l3261 07F4                       l3253 18A5  
                     l3245 18E9                       l4141 1EB3                       l4133 1E8A  
                     l4117 1130                       l4109 10FC                       l4125 18D0  
                     l2701 14A3                       l2621 1363                       l2613 133F  
                     l2605 1321                       l2541 126D                       l2533 125B  
                     l2525 1248                       l2517 1239                       l3181 1BDB  
                     l3157 1E76                       l3149 1E5F                       l3077 1D8A  
                     l3069 1D60                       l3173 1C69                       l3165 1C38  
                     l4053 1FB3                       l4045 1F89                       l4029 1F56  
                     l4301 1763                       l4221 14CB                       l4207 1ADB  
                     l3263 07F9                       l3255 18AF                       l3247 18EB  
                     l3239 18DD                       l3271 190D                       l4151 1ED5  
                     l4135 1E8F                       l4119 116A                       l4127 18DA  
                     l2703 14AE                       l2631 1377                       l2623 1367  
                     l2607 132A                       l2551 1284                       l2543 1271  
                     l2535 1260                       l2527 1250                       l2519 123D  
                     l3183 1BDF                       l3159 1E7B                       l3079 1D93  
                     l3175 1C72                       l3167 1C45                       l4055 1FB4  
                     l4047 1F92                       l4039 1F72                       l2391 1DB0  
                     l2383 1DA2                       l4311 0026                       l4303 178C  
                     l4231 150B                       l4223 14D0                       l4215 14B7  
                     l3257 07E7                       l3273 1910                       l3265 1901  
                     l4161 1F06                       l4153 1ED9                       l4145 1EBC  
                     l4137 1E93                       l4209 1A75                       l4129 18DC  
                     l2705 14B2                       l2641 13DF                       l2633 1380  
                     l2625 1370                       l2617 1348                       l2609 132E  
                     l2561 129D                       l2553 1285                       l2545 1272  
                     l2537 1266                       l2529 1251                       l3169 1C49  
                     l3177 1C78                       l4081 0802                       l4073 1FE7  
                     l4065 1FCE                       l4057 1FBC                       l4049 1F9B  
                     l2393 1DB4                       l2385 1DA5                       l4401 03DB  
                     l4321 00B7                       l4313 004F                       l4305 1794  
                     l4241 1541                       l4233 151E                       l4225 14D4  
                     l4217 14BE                       l3259 07F0                       l3275 1911  
                     l3267 1908                       l4171 1F39                       l4163 1F10  
                     l4155 1EE7                       l4147 1EC1                       l4139 1EA3  
                     l2643 13E4                       l2627 1372                       l2619 135F  
                     l2635 1385                       l2571 12B1                       l2563 12A1  
                     l2547 1277                       l2555 1287                       l2539 1267  
                     l4083 0808                       l4075 1FF7                       l4059 1FC6  
                     l4067 1FE0                       l2395 1DB9                       l2387 1DA9  
                     l4411 04E4                       l4403 0436                       l4323 00BF  
                     l4315 0076                       l4331 0131                       l4307 17A3  
                     l4251 1582                       l4243 1545                       l4235 1522  
                     l4227 14E4                       l4219 14C4                       l4181 1B4E  
                     l3277 1912                       l3269 190C                       l4173 1F3A  
                     l4165 1F1A                       l4157 1EF7                       l4149 1ECE  
                     l4093 1B8B                       l2661 142C                       l2653 1417  
                     l2637 139B                       l2645 13F3                       l2629 1376  
                     l2581 12C5                       l2573 12B5                       l2565 12A5  
                     l2557 1295                       l2549 127C                       l4085 0815  
                     l2397 1DBD                       l2389 1DAE                       l4421 0502  
                     l4413 04EB                       l4405 0475                       l4333 0166  
                     l4325 00DD                       l4317 0085                       l4309 17EA  
                     l4261 15B5                       l4245 1548                       l4253 1593  
                     l4229 14E8                       l4237 1532                       l4501 08BE  
                     l3711 1A52                       l3703 1A35                       l4183 1B5E  
                     l4191 19B1                       l4167 1F30                       l4159 1F02  
                     l4095 1BA1                       l2671 143A                       l2663 142E  
                     l2655 1420                       l2647 1409                       l2639 13D9  
                     l2583 12C9                       l2575 12B9                       l2567 12A9  
                     l2559 1299                       l2591 12D9                       l4087 081C  
                     l4079 0800                       l2399 1DBF                       l4431 053A  
                     l4423 050A                       l4415 04EF                       l4407 0481  
                     l4351 0211                       l4343 01B5                       l4335 01B1  
                     l4319 00AE                       l4271 15DD                       l4263 15C3  
                     l4255 1595                       l4247 156B                       l4239 1540  
                     l4511 0901                       l4503 08C8                       l3713 1A59  
                     l3705 1A39                       l4185 1B64                       l4177 1B3E  
                     l4193 19B6                       l4169 1F35                       l4097 1BBD  
                     l2681 1451                       l2673 143E                       l2665 1433  
                     l2657 1424                       l2649 140E                       l2593 12DA  
                     l2585 12CD                       l2577 12BD                       l2569 12AD  
                     l4089 0822                       l3801 1A29                       l3721 1C81  
                     l4441 0566                       l4433 0542                       l4425 051B  
                     l4417 04F5                       l4409 04DC                       l4353 0217  
                     l4337 01B3                       l4329 0128                       l4281 1668  
                     l4273 1604                       l4265 15C7                       l4249 157E  
                     l4521 092E                       l4513 0910                       l4505 08EC  
                     l3715 1A60                       l3707 1A44                       l4187 18C3  
                     l4179 1B44                       l4195 19BD                       l3811 0949  
                     l4099 1BD7                       l2691 148F                       l2683 145F  
                     l2675 1444                       l2659 1429                       l2667 1435  
                     l2595 12F1                       l2587 12D1                       l2579 12C1  
                     l3803 1A2F                       l2931 18F0                       l3731 1C93  
                     l3723 1C82                       l4451 058E                       l4443 056F  
                     l4435 054E                       l4427 0522                       l4371 025F  
                     l4355 0223                       l4363 0238                       l4347 01EC  
                     l4291 16C3                       l4283 1673                       l4275 1639  
                     l4267 15CB                       l4419 04FC                       l4259 1599  
                     l4523 0935                       l4515 0916                       l4507 08F7  
                     l3717 1A67                       l3709 1A4B                       l4197 19C3  
                     l4189 19AC                       l3901 0BE2                       l3821 0960  
                     l3813 094D                       l3581 198A                       l2693 1497  
                     l2685 1463                       l2669 1439                       l2597 1311  
                     l2589 12D5                       l2933 18F1                       l3741 1CAC  
                     l3733 1C98                       l3725 1C88                       l4461 05B7  
                     l4453 0594                       l4445 0573                       l4437 0554  
                     l4429 0531                       l4381 031A                       l4373 02BA  
                     l4365 0245                       l4357 022A                       l4349 01F6  
                     l4293 16C9                       l4285 1679                       l4277 163D  
                     l4269 15D9                       l4517 0921                       l4509 08FB  
                     l3719 1A6E                       l4199 19C8                       l3911 0C05  
                     l3903 0BE8                       l3831 0979                       l3823 0962  
                     l3815 094E                       l3807 093C                       l2847 18BA  
                     l3583 1995                       l2695 149C                       l2687 1481  
                     l2679 144C                       l2599 131A                       l2935 18F7  
                     l3743 1CB0                       l3735 1C9E                       l3751 1CCD  
                     l3727 1C8D                       l4455 059B                       l4447 057E  
                     l4439 0558                       l4391 0352                       l4383 0320  
                     l4375 02F9                       l4367 0253                       l4359 0233  
                     l4295 16E8                       l4287 169C                       l4279 1641  
                     l4519 0928                       l3921 0C24                       l3905 0BEC  
                     l3841 098E                       l3833 097A                       l3825 096A  
                     l3817 0953                       l3809 0943                       l2849 18C0  
                     l3585 199D                       l2697 149D                       l2689 148A  
                     l3761 1AFC                       l2937 18FD                       l3753 1CD2  
                     l3745 1CBA                       l3737 1CA1                       l3729 1C8F  
                     l4457 059F                       l4449 058A                       l4393 0357  
                     l4385 032D                       l4377 030D                       l4369 025A  
                     l4297 1733                       l4289 16BF                       l4465 05C1  
                     l4481 0836                       l3691 19D4                       l3931 0C6A  
                     l3923 0C3D                       l3915 0C0D                       l3907 0BED  
                     l3851 09A9                       l3843 0996                       l3835 097F  
                     l3827 096F                       l3819 0958                       l3579 1987  
                     l2699 14A1                       l3771 1B14                       l3763 1B02  
                     l2939 18FF                       l3755 1CD7                       l3747 1CC0  
                     l3739 1CA8                       l4459 05AB                       l4395 035E  
                     l4387 033C                       l4379 0316                       l4299 175A  
                     l4467 05D5                       l4563 15AD                       l4491 084D  
                     l4483 083B                       l3693 19DB                       l3941 0C89  
                     l3933 0C74                       l3917 0C12                       l3925 0C43  
                     l3909 0BF1                       l3861 0A2B                       l3853 09B9  
                     l3845 099B                       l3837 0984                       l3829 0975  
                     l3773 1B25                       l3765 1B05                       l3781 1B39  
                     l3749 1CC7                       l4397 0362                       l4389 0343  
                     l4493 0857                       l4485 0840                       l4477 0827  
                     l3951 1920                       l3695 19DF                       l3943 0C94  
                     l3935 0C76                       l3927 0C50                       l3919 0C20  
                     l3871 0A99                       l3863 0A47                       l3855 09C6  
                     l3847 09A0                       l3839 098C                       l3775 1B2B  
                     l3767 1B0C                       l3759 1AF8                       l3791 1A0A  
                     l4399 0380                       l4495 0862                       l4487 0845  
                     l4479 0831                       l3953 1923                       l3961 193A  
                     l3697 19EE                       l3689 19D2                       l3937 0C84  
                     l3929 0C5B                       l3881 0B29                       l3873 0AA9  
                     l3865 0A63                       l3857 09E3                       l3777 1B2C  
                     l3769 1B10                       l3793 1A0E                       l3785 19F8  
                     l4497 0882                       l4489 0848                       l3955 192C  
                     l3947 1919                       l3963 193D                       l3699 19F3  
                     l3939 0C88                       l3891 0BBD                       l3883 0B39  
                     l3875 0AC6                       l3867 0A6C                       l3859 09FF  
                     l2995 116E                       l3779 1B33                       l3795 1A12  
                     l3787 1A00                       l3971 05E3                       l4499 08A0  
                     l3949 191A                       l3965 1942                       l3957 1931  
                     l3893 0BCB                       l3885 0B66                       l3877 0ADF  
                     l3869 0A7C                       l2997 117B                       l3797 1A1C  
                     l3789 1A03                       l3967 1945                       l3959 1934  
                     l3895 0BD4                       l3887 0B8C                       l3879 0AFC  
                     l3799 1A22                       l3983 07A3                       l3991 0CA6  
                     l3897 0BD8                       l3889 0BB4                       l3977 06F2  
                     l3969 05DD                       l3993 0CAD                       l3899 0BD9  
                     l3979 06F8                       l3987 0CA0                       ?_isr 0070  
                     l3989 0CA4                       l3999 0D97                       STR_1 10B5  
                     STR_2 10A0                       u3100 1DD7                       u3101 1DD6  
                     u3120 1DE8                       u3121 1DE7                       u3115 1DD8  
                     u3140 1DFC                       u3060 1DA9                       u3141 1DFB  
                     u3125 1DE4                       u3061 1DA8                       u3150 1E01  
                     u3070 1DB4                       u3151 1E00                       u3135 1DF0  
                     u3071 1DB3                       u3400 1248                       u5000 1E4C  
                     u3080 1DC5                       u3401 1247                       u5001 1E4B  
                     u3081 1DC4                       u4210 18C0                       u3410 1266  
                     u4211 18BF                       u3411 1265                       u3500 1311  
                     u3420 1271                       u5020 1E5E                       u5100 1C5B  
                     u3501 1310                       u3421 1270                       u5021 1E5D  
                     u5101 1C5A                       u3510 1320                       u3430 1277  
                     u5030 1E65                       u3511 131F                       u3431 1276  
                     u5031 1E64                       u5015 1E4E                       u3095 1DC9  
                     u3440 127C                       u5120 1C78                       u6000 1CB0  
                     u3441 127B                       u5121 1C77                       u5105 1C57  
                     u6001 1CAF                       u3610 139B                       u3530 1336  
                     u3450 1295                       u5050 1E76                       u6010 1CBA  
                     u3611 139A                       u3531 1335                       u3451 1294  
                     u5051 1E75                       u5115 1C6A                       u6011 1CB9  
                     u3700 1433                       u3540 133A                       u3460 1299  
                     u3380 123D                       u5060 1E7B                       u3701 1432  
                     u3621 13B2                       u3613 1397                       u3605 1379  
                     u3541 1339                       u3525 1323                       u3461 1298  
                     u3381 123C                       u5061 1E7A                       u5045 1E68  
                     u3710 1439                       u3630 13C6                       u3622 13B3  
                     u3550 133F                       u3470 12F1                       u3390 1243  
                     u5070 1C35                       u6110 1B39                       u6030 1CCD  
                     u3711 1438                       u3631 13C7                       u3623 13B8  
                     u3551 133E                       u3471 12F0                       u3391 1242  
                     u5071 1C34                       u6111 1B38                       u6031 1CCC  
                     u6015 1CB6                       u6200 0958                       u7000 10E0  
                     u3800 148F                       u3720 143E                       u3640 13E4  
                     u3632 13CC                       u3624 13B9                       u3480 12FC  
                     u6120 1A00                       u6040 1CD2                       u6201 0957  
                     u7001 10DF                       u3801 148E                       u3721 143D  
                     u3641 13E3                       u3633 13CD                       u3625 13BE  
                     u3561 1351                       u3481 12FA                       u6105 1B2D  
                     u6121 19FF                       u6041 1CD1                       u6025 1CC1  
                     u6210 0979                       u7010 10FC                       u3810 149C  
                     u3730 1444                       u3650 1409                       u3626 13BF  
                     u3570 1363                       u3562 1358                       u3490 12FD  
                     u5090 1C49                       u6050 1B02                       u6211 0978  
                     u7011 10FB                       u3811 149B                       u3731 1443  
                     u3651 1408                       u3571 1362                       u3563 135F  
                     u3475 12ED                       u5091 1C48                       u6051 1B01  
                     u6220 097F                       u7100 1EB3                       u7020 1108  
                     u3820 14A1                       u3740 144B                       u3660 140E  
                     u3580 1367                       u4620 117B                       u6140 1A12  
                     u6221 097E                       u7101 1EB2                       u7021 1107  
                     u3821 14A0                       u3741 144A                       u3661 140D  
                     u3581 1366                       u5085 1C3A                       u4621 117A  
                     u6141 1A11                       u6230 0984                       u3830 14B2  
                     u3750 1451                       u3590 1376                       u4710 120B  
                     u4630 118F                       u6070 1B14                       u6150 1A1C  
                     u4470 18F7                       u6311 0A8B                       u6231 0983  
                     u7031 1117                       u3831 14B1                       u3751 1450  
                     u3591 1375                       u4711 120A                       u4631 118E  
                     u6071 1B13                       u6151 1A1B                       u6135 1A04  
                     u4471 18F6                       u6312 0A92                       u6240 099B  
                     u7200 1F35                       u7120 1ED4                       u7040 1130  
                     u7032 1118                       u3760 1463                       u3680 1424  
                     u4720 1212                       u4480 18FD                       u6401 0BA6  
                     u6321 0AB8                       u6313 0A99                       u6305 0A65  
                     u6241 099A                       u7201 1F34                       u7121 1ED3  
                     u7041 112F                       u7033 111D                       u3761 1462  
                     u3681 1423                       u4721 1211                       u4705 11FB  
                     u6065 1B06                       u4481 18FC                       u6402 0BAD  
                     u6322 0ABF                       u6250 09A0                       u7210 1F39  
                     u7034 111E                       u3770 1472                       u3690 1429  
                     u4810 1D60                       u4650 11D0                       u6090 1B25  
                     u6170 1A2F                       u6403 0BB4                       u6323 0AC6  
                     u6251 099F                       u7211 1F38                       u7115 1EC6  
                     u7051 113F                       u7035 1123                       u3691 1428  
                     u3675 1419                       u4811 1D5F                       u4651 11CF  
                     u6091 1B24                       u6171 1A2E                       u6155 1A18  
                     u7220 19B1                       u6500 0C24                       u6180 094D  
                     u7140 1EF6                       u7060 116A                       u7052 1140  
                     u7036 1124                       u3780 1481                       u4740 1223  
                     u7300 1540                       u7221 19B0                       u6501 0C23  
                     u6341 0AEE                       u6261 09F1                       u6181 094C  
                     u7141 1EF5                       u7061 1169                       u7053 1145  
                     u3781 1480                       u4805 1D51                       u4741 1222  
                     u4645 11B7                       u6085 1B15                       u6165 1A23  
                     u7301 153F                       u7230 19C3                       u6510 0C33  
                     u6430 0BD8                       u6342 0AF5                       u6262 09F8  
                     u6190 0953                       u7054 1146                       u7070 18DA  
                     u3790 148A                       u4830 1D7B                       u4670 11EE  
                     u7310 1592                       u7231 19C2                       u6431 0BD7  
                     u6415 0BB6                       u6351 0B1B                       u6343 0AFC  
                     u6335 0AC8                       u6271 0A0D                       u6263 09FF  
                     u6191 0952                       u7135 1EE8                       u7055 114B  
                     u7071 18D9                       u3791 1489                       u3775 146D  
                     u4831 1D7A                       u4735 1215                       u4671 11ED  
                     u4655 11CC                       u6095 1B21                       u7311 1591  
                     u7240 1AC1                       u6520 0C50                       u6352 0B22  
                     u6272 0A14                       u7160 1F06                       u7080 1E8F  
                     u5800 19A8                       u7056 114C                       u4680 11F2  
                     u7400 0026                       u7320 15C3                       u6521 0C4F  
                     u6425 0BCD                       u6361 0B48                       u6353 0B29  
                     u6281 0A39                       u6273 0A1B                       u7161 1F05  
                     u7081 1E8E                       u5801 19A7                       u7065 1166  
                     u4825 1D62                       u4681 11F1                       u4665 11E1  
                     u7401 17FA                       u7321 15C0                       u7250 1AE5  
                     u6530 0C6A                       u6450 0BEC                       u6370 0B72  
                     u6362 0B4F                       u6282 0A40                       u7170 1F0C  
                     u7090 1E93                       u4850 1D99                       u4690 11F9  
                     u7410 004F                       u7330 15C7                       u6531 0C69  
                     u6515 0C2E                       u6451 0BEB                       u6363 0B56  
                     u6291 0A55                       u6283 0A47                       u7171 1F0B  
                     u7155 1EFB                       u7091 1E92                       u4851 1D98  
                     u4835 1D77                       u4691 11F8                       u7411 004E  
                     u7331 15C6                       u5900 1A4B                       u7260 1AF7  
                     u6540 0C88                       u6460 0BF1                       u6292 0A5C  
                     u7180 1F10                       u7500 0245                       u7420 0076  
                     u7340 1604                       u5901 1A4A                       u7261 1AF6  
                     u6541 0C87                       u6525 0C4C                       u6461 0BF0  
                     u6445 0BDB                       u6381 0B7E                       u6293 0A63  
                     u7181 1F0F                       u4845 1D8B                       u6605 0715  
                     u7501 0244                       u7421 0075                       u7405 17F5  
                     u7341 1603                       u5910 1A52                       u6470 0C05  
                     u6390 0B9A                       u6382 0B85                       u7190 1F25  
                     u4790 1D4C                       u6550 05E3                       u6630 0CA4  
                     u7510 0253                       u7430 0085                       u7350 1668  
                     u7270 14C4                       u5911 1A51                       u6535 0C66  
                     u6471 0C04                       u6383 0B8C                       u6375 0B6D  
                     u4791 1D4B                       u6615 0762                       u6551 05E2  
                     u6631 0CA3                       u7511 0252                       u7431 0084  
                     u7351 1667                       u7271 14C3                       u5920 1A59  
                     u6480 0C0C                       u6800 1F56                       u6720 0E5A  
                     u6640 0CAD                       u7600 04FB                       u7440 00AE  
                     u7360 16C3                       u7280 14E4                       u5921 1A58  
                     u6481 0C0B                       u6801 1F55                       u6625 07AE  
                     u6721 0E59                       u6705 0DED                       u6641 0CAC  
                     u7601 04FA                       u7505 0241                       u7441 00AD  
                     u7361 16C2                       u7281 14E3                       u5930 1A60  
                     u5850 19DF                       u6490 0C12                       u4970 1E18  
                     u6810 1F70                       u7610 0502                       u7530 030C  
                     u7370 175A                       u7290 1532                       u5931 1A5F  
                     u5851 19DE                       u6491 0C11                       u6395 0B95  
                     u7195 1F20                       u4971 1E17                       u6811 1F6F  
                     u6715 0E29                       u7611 0501                       u7531 030B  
                     u7435 0081                       u7371 1759                       u7291 1531  
                     u5940 1A67                       u4980 1E2F                       u6900 1FE6  
                     u7700 0594                       u7620 050A                       u7540 032D  
                     u7460 01EB                       u7380 178C                       u5941 1A66  
                     u6901 1FE5                       u6565 0600                       u7701 0593  
                     u7621 0509                       u7541 032C                       u7525 0262  
                     u7461 01EA                       u7381 178B                       u5950 1A6E  
                     u5870 19F3                       u4990 1E45                       u6830 1FA9  
                     u6590 06F8                       u7710 05AB                       u7630 051B  
                     u7550 033C                       u7470 01F6                       u7390 17A3  
                     u5951 1A6D                       u5871 19F2                       u4991 1E44  
                     u6831 1FA8                       u6591 06F7                       u6575 065C  
                     u6735 0E7C                       u6655 0CCF                       u7711 05AA  
                     u7631 051A                       u7551 033B                       u7471 01F5  
                     u7455 01B8                       u7391 17A2                       u5880 1A39  
                     u6920 1FF7                       u5960 1C88                       u6760 0F4B  
                     u6680 0D9E                       u7720 05B7                       u7640 0531  
                     u7560 0357                       u7480 0211                       u5881 1A38  
                     u5865 19E6                       u4985 1E2A                       u6921 1FF6  
                     u6825 1F94                       u6585 06B1                       u5961 1C87  
                     u6761 0F4A                       u6745 0EB8                       u6681 0D9D  
                     u6665 0D0B                       u7721 05B6                       u7641 0530  
                     u7561 0356                       u7545 0329                       u7481 0210  
                     u7465 01E7                       u5890 1A44                       u6930 0808  
                     u6850 1FC2                       u5970 1C93                       u7730 05D5  
                     u7650 0542                       u7490 0223                       u5891 1A43  
                     u6931 0807                       u6915 1FE9                       u6851 1FC1  
                     u6835 1FA5                       u5971 1C92                       u6755 0F03  
                     u6675 0D56                       u7731 05D2                       u7651 0541  
                     u7635 0517                       u7555 0338                       u7491 0222  
                     u7395 179F                       u6860 1FC6                       u5980 1C9E  
                     u7660 054E                       u7740 0916                       u6861 1FC5  
                     u6845 1FB5                       u5981 1C9D                       u7661 054D  
                     u7645 052D                       u7741 0915                       u6870 1FCD  
                     u7670 0558                       u7590 04E3                       u7750 0921  
                     u7807 1947                       u6871 1FCC                       u6775 0F5E  
                     u6695 0DB1                       u7671 0557                       u7591 04E2  
                     u7575 03DE                       u7751 0920                       u6960 0822  
                     u7680 0566                       u7817 1B4A                       u6961 0821  
                     u6945 080F                       u6785 0F9A                       u7681 0565  
                     u7585 0484                       u6970 1BA1                       u6890 1FDF  
                     u7690 057E                       u7827 1B5A                       u6971 1BA0  
                     u6955 0816                       u6891 1FDE                       u5995 1CA2  
                     u6795 0FD6                       u7691 057D                       u6980 1BBD  
                     u7837 1B6C                       u6981 1BBC                       u6885 1FCF  
                     u7685 0562                       u6990 1BD7                       u7847 1927  
                     u6991 1BD6                       u7695 057A                       u7767 0909  
                     u7777 0932                       u7787 07F6                       u6995 1BD3  
                     u7797 193F                       _TXIF 0064          ?_Lcd_Write_String 0020  
                     _conv 1A72                       _main 0827                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0022               _sprintf$1212 00BA  
          __end_of_Lcd_Cmd 1930                      ??_isr 0073              ___fltol@sign1 0064  
                    ?_conv 0048            __end_of___fladd 14B4                      ?_main 0070  
          __end_of___awdiv 1E0B            __end_of___flneg 18DD            __end_of___awmod 1CDC  
          __end_of___flmul 0C9D            __end_of___flsub 1C2B            __end_of___fltol 1E87  
                    _ANSEL 0188            __end_of___lldiv 1DA2            ___awdiv@divisor 0024  
          __end_of___llmod 1C81            __end_of___lwdiv 1B3E                      i1l103 197D  
                    i1l108 1966                      i1l117 1D39            __end_of___lwmod 1A34  
          ___awdiv@counter 0029                      _RCREG 001A            __end_of_cfg_adc 07FD  
                    _SPBRG 0099                      _PORTA 0005            __end_of_cfg_clk 18A7  
  __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019            __end_of_dpowers 10A0            __end_of_int_adc 1967  
                    _scale 0C9D            __end_of_isdigit 1901                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 05DA  
         __end_of_Lcd_Init 1B8B           __end_of_Lcd_Port 1A72            __initialization 000F  
             __end_of_conv 1AB2               __end_of_main 093C                     ??_conv 004C  
                   ??_main 00D5         __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD  
         ___llmod@dividend 0024                     ?_scale 0048                     _ADRESH 001E  
         ___awdiv@dividend 0026                     _ANSELH 0189                     i1l3231 194B  
                   i1l3233 1956                     i1l3235 195D                     i1l3237 1963  
                   i1l1901 1D00                     i1l1911 1D2A                     i1l1903 1D0F  
                   i1l1905 1D10                     i1l1907 1D1D                     i1l1909 1D22  
                   i1l1891 1CDC                     i1l1893 1CE0                     i1l1895 1CE6  
                   i1l3591 1972                     i1l1897 1CF5                     i1l3593 1978  
                   i1l1899 1CF8                     i1l3587 1967                     i1l3589 196D  
                   u234_20 1CE6                     u234_21 1CE5                     u235_20 1D00  
                   u235_21 1CFF                     u236_20 1D22                     u236_21 1D21  
                   u237_20 1D2A                     u237_21 1D29                     u527_20 1956  
                   u527_21 1955                     u581_20 196D                     u581_21 196C  
                   u582_20 1978                     u582_21 1977                  ??_Lcd_Cmd 0076  
                   _SPBRGH 009A                     u785_27 1CEC                     u786_27 1D08  
                   u787_27 1D16                     u788_27 1D32    __size_of_Lcd_Write_Char 001B  
         __end_of_cfg_inte 18B9           __end_of___xxtofl 1F43           __end_of__powers_ 1044  
                   ___flge 10CA                     ___fleq 1B8B                  ??___fladd 0064  
                   ___wmul 0800                  ??___awdiv 0028                     _cfg_io 18DD  
                ??___flneg 0075                  ??___awmod 0075                  ??___flmul 0036  
                ??___flsub 0078                  ??___fltol 005F                  ??___lldiv 0075  
                ??___llmod 0075                  ??___lwdiv 0077                  ??___lwmod 0075  
                ??_cfg_adc 0075                  ??_cfg_clk 0075                     _fround 05DA  
         ___awdiv@quotient 002B            ___awmod@divisor 0020           __end_of_int_uart 1D3A  
          ___awmod@counter 0076                     conv@aa 0054                  ??_int_adc 0070  
                ??_isdigit 0075         __size_of__Umul8_16 0029                     saved_w 007E  
                ??_sprintf 00B5            Lcd_Set_Cursor@a 0023            Lcd_Set_Cursor@b 0021  
               ___flge@ff1 0020                 ___flge@ff2 0024               ___xxtofl@arg 002A  
             ___xxtofl@exp 0029               ___xxtofl@val 0020                 ___fleq@ff1 0020  
               ___fleq@ff2 0024    __end_of__initialization 0022                 ___flneg@f1 0020  
        __end_of_Lcd_Clear 18D0                 ___fltol@f1 005B             __pcstackCOMMON 0070  
       __size_of_cfg_usart 0015              __end_of_scale 1000             _Lcd_Set_Cursor 19A9  
               __div_to_l_ 116E                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 002D            __div_to_l_@cntr 002C                    ??_scale 004C  
          __div_to_l_@quot 0028               sprintf@width 00C5                 __pbssBANK1 00D8  
               __pbssBANK3 0190              __div_to_l_@f1 0020              __div_to_l_@f2 0024  
        __end_of__Umul8_16 19F8                 __pmaintext 0827                    ?___flge 0020  
                  ?___fleq 0020                    ?___wmul 0020                    ?_cfg_io 0070  
               __pintentry 0004         __size_of_send_char 000A         __size_of_send_crct 0025  
                  ?_fround 0048  __size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 19CF  
                ?_cfg_inte 0070                  ?___xxtofl 0020                 ??_Lcd_Init 0021  
               ??_Lcd_Port 0075                send_crct@st 0022                 __stringtab 1000  
        __end_of_cfg_usart 1916             _Lcd_Write_Char 1930                    _Lcd_Cmd 1916  
                ?_int_uart 0070          __end_of__npowers_ 1078                 _scale$1211 0056  
          __size_of___flge 00A4            __size_of___fleq 0050                    ___fladd 122C  
                  ___awdiv 1DA2                    ___flneg 18D0                    ___awmod 1C81  
                  ___flmul 093C                    ___flsub 1BDB                    ___fltol 1E0B  
                  ___lldiv 1D3A            __size_of___wmul 0027                    ___llmod 1C2B  
          __size_of_cfg_io 0012                    ___lwdiv 1AF8                    ___lwmod 19F8  
                  _cfg_adc 07E7                    _cfg_clk 189F            __size_of_fround 020D  
          ?_Lcd_Set_Cursor 0021                    __ptext1 14B4                    __ptext2 0C9D  
                  __ptext3 1C81                    __ptext4 1DA2                    __ptext5 18EF  
                  __ptext6 05DA                    __ptext7 19F8                    __ptext8 1AF8  
                  __ptext9 1F43                ?__div_to_l_ 0020                    _dpowers 1078  
                  _int_adc 194B                 ??_cfg_inte 0075                    _isdigit 18EF  
             __size_of_isr 001D                 ??___xxtofl 0024           ___awmod@dividend 0022  
                  _sprintf 14B4                    clrloop0 18A8     __end_of_Lcd_Write_Char 194B  
     end_of_initialization 0022          __end_of_send_char 18C3          __end_of_send_crct 19A9  
               ??_int_uart 0070            ___lldiv@divisor 0020            ___lldiv@counter 002C  
                _RCSTAbits 0018                    psplit$0 C0036                  Lcd_Port@a 0075  
           __tdiv_to_l_@f1 0020             __tdiv_to_l_@f2 0024              send_char@dato 0075  
            ??__tdiv_to_l_ 0028                  _PORTCbits 0007                ___fladd@grs 006F  
            ___xxtofl@sign 0028            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0020  
        Lcd_Write_String@i 0025                 conv@result 0050                ___flmul@grs 003D  
                _TXSTAbits 0098        __size_of__div_to_l_ 00BE                  _Lcd_Clear 18C3  
           __end_of___flge 116E             __end_of___fleq 1BDB             __end_of___wmul 0827  
           __end_of_cfg_io 18EF           _Lcd_Write_String 1AB2          pnum$text1_split_1 0036  
              _BAUDCTLbits 0187             __end_of_fround 07E7        start_initialization 000F  
      __end_of__tdiv_to_l_ 2000                __end_of_isr 1984          __size_of_Lcd_Init 004D  
        __size_of_Lcd_Port 003E            ___llmod@divisor 0020            ___llmod@counter 0076  
               ?_Lcd_Clear 0070                   ??___flge 0028                   ??___fleq 0028  
                 ??___wmul 0075                   ??_cfg_io 0075                  __Umul8_16 19CF  
          Lcd_Write_Char@a 0077                   ??_fround 004C              sprintf@tmpval 00C7  
                ___fladd@a 0060                  ___fladd@b 005C                 fround@prec 005B  
                ___flmul@a 0032                  ___flmul@b 002E                __pbssCOMMON 0078  
                ___flsub@a 00A0                  ___flsub@b 00A4                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0          __size_of_cfg_inte 000A  
        __size_of___xxtofl 00BC               _isdigit$1025 0075                   ?_Lcd_Cmd 0070  
              sprintf@flag 00C3                sprintf@eexp 00CB                sprintf@fval 00CD  
              sprintf@prec 00D2                  _cfg_usart 1901           ___lwdiv@dividend 0026  
        __size_of_int_uart 005E           ??_Lcd_Set_Cursor 0022                   ?___fladd 005C  
                 ?___awdiv 0024                   ?___flneg 0020                   ?___awmod 0020  
                 ?___flmul 002E                   ?___flsub 00A0                   ?___fltol 005B  
                 ?___lldiv 0020                   ?___llmod 0020                  __npowers_ 1044  
               ?__Umul8_16 0075                   ?___lwdiv 0024                   ?___lwmod 0020  
                 ?_cfg_adc 0070                   ?_cfg_clk 0070                  __pstrings 1000  
              __tdiv_to_l_ 1F43                 send_crct@i 0020               ??__div_to_l_ 0075  
                 ?_int_adc 0070                   ?_isdigit 0070           ___lwdiv@quotient 0029  
                 ?_sprintf 00A8             __size_of_scale 0363          interrupt_function 0004  
           ___wmul@product 0075                  clear_ram0 18A7                 ?_cfg_usart 0070  
                 _PIE1bits 008C                  _send_char 18B9                  _send_crct 1984  
                 Lcd_Cmd@a 0020                   _PIR1bits 000C         __end_of__div_to_l_ 122C  
              ??_Lcd_Clear 0078                 _ADCON0bits 001F                __stringbase 100F  
               _ADCON1bits 009F          ___wmul@multiplier 0020           ??_Lcd_Write_Char 0076  
                 _Lcd_Init 1B3E                   _Lcd_Port 1A34   __end_of_Lcd_Write_String 1AF8  
         __size_of_Lcd_Cmd 001A                 ?_send_char 0070                 ?_send_crct 0070  
              ??__Umul8_16 0020           __size_of___fladd 0288           __size_of___awdiv 0069  
         __size_of___flneg 000D           __size_of___awmod 005B           __size_of___flmul 0361  
         __size_of___flsub 0050           __size_of___fltol 007C           __size_of___lldiv 0068  
         __size_of___llmod 0056           __size_of___lwdiv 0046           __size_of___lwmod 003C  
         __size_of_cfg_adc 0016                _fround$1210 0053           __size_of_cfg_clk 0008  
              _fround$1209 0057         __end_of__stringtab 1010                 sprintf@val 00BF  
                 _cfg_inte 18AF                   ___xxtofl 1E87           __size_of_int_adc 001C  
         __size_of_isdigit 0012            ___lwdiv@divisor 0024            ___lwdiv@counter 0028  
                 __ptext10 116E                   __ptext11 0800                   __ptext20 1984  
                 __ptext12 1C2B                   __ptext21 18B9                   __ptext13 1D3A  
                 __ptext30 07E7                   __ptext22 1A72                   __ptext14 1E0B  
                 __ptext31 1AB2                   __ptext23 1E87                   __ptext15 1BDB  
                 __ptext40 194B                   __ptext32 1930                   __ptext24 093C  
                 __ptext16 122C                   __ptext33 19A9                   __ptext25 19CF  
                 __ptext17 18D0                   __ptext34 1B3E                   __ptext26 1901  
                 __ptext18 10CA                   __ptext35 18C3                   __ptext27 18DD  
                 __ptext19 1B8B                   __ptext36 1916                   __ptext28 18AF  
                 __ptext37 1A34                   __ptext29 189F                   __ptext38 1967  
                 __ptext39 1CDC                   __powers_ 1010           __size_of_sprintf F126  
            __size_of_conv 0040              __size_of_main 0115                  pnum$text1 000C  
                 _int_uart 1CDC                ??_cfg_usart 0075                 _INTCONbits 000B  
                 isdigit@c 0076                   scale@scl 005A                   intlevel1 0000  
                sprintf@ap 00BE           __tdiv_to_l_@exp1 0031           __tdiv_to_l_@cntr 0030  
                sprintf@sp 00D1           __tdiv_to_l_@quot 002C           ___lwmod@dividend 0022  
         ___lldiv@dividend 0024                ??_send_char 0075                ??_send_crct 0076  
                stringcode 100A                 _OSCCONbits 008F         Lcd_Set_Cursor@temp 0024  
             ?__tdiv_to_l_ 0020     __Umul8_16@multiplicand 0075                   sprintf@c 00D4  
                 sprintf@f 00A8           ___lldiv@quotient 0028            ___lwmod@divisor 0020  
          ___lwmod@counter 0076                   stringdir 100A                   stringtab 1000  
            ___fladd@signs 006C               ___fladd@aexp 006D               ___fladd@bexp 006E  
     __Umul8_16@multiplier 0026          __Umul8_16@product 0022  
