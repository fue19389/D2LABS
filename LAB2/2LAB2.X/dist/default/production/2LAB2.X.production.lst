

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
<<<<<<< HEAD
                                                                                               Tue Jul 27 10:52:53 2021
=======
                                                                                               Mon Jul 26 18:40:37 2021
>>>>>>> parent of a4453d3 (Todo funciona menos último contador)

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
<<<<<<< HEAD
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
=======
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
>>>>>>> parent of a4453d3 (Todo funciona menos último contador)
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F887 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  0105                     	;# 
   234  0107                     	;# 
   235  0108                     	;# 
   236  0109                     	;# 
   237  010C                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0185                     	;# 
   243  0187                     	;# 
   244  0188                     	;# 
   245  0189                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  000E                     	;# 
   264  000F                     	;# 
   265  0010                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0014                     	;# 
   270  0015                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001D                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0086                     	;# 
   286  0087                     	;# 
   287  0088                     	;# 
   288  0089                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  009F                     	;# 
   311  0105                     	;# 
   312  0107                     	;# 
   313  0108                     	;# 
   314  0109                     	;# 
   315  010C                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  0185                     	;# 
   321  0187                     	;# 
   322  0188                     	;# 
   323  0189                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  008F                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0095                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  0105                     	;# 
   390  0107                     	;# 
   391  0108                     	;# 
   392  0109                     	;# 
   393  010C                     	;# 
   394  010C                     	;# 
<<<<<<< HEAD
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  0185                     	;# 
   400  0187                     	;# 
   401  0188                     	;# 
   402  0189                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405                           
   406                           	psect	idataBANK1
   407  07FC                     __pidataBANK1:
   408                           
   409                           ;initializer for _bmenu
   410  07FC  3401               	retlw	1
   411                           
   412                           	psect	strings
   413  1000                     __pstrings:
   414  1000                     stringtab:
   415  1000                     __stringtab:
   416                           
   417                           ;	String table - string pointers are 1 byte each
   418  1000  1BFF               	btfsc	btemp+1,7
   419  1001  280A               	ljmp	stringcode
   420  1002  1383               	bcf	3,7
   421  1003  187F               	btfsc	btemp+1,0
   422  1004  1783               	bsf	3,7
   423  1005  0800               	movf	0,w
   424  1006  0A84               	incf	4,f
   425  1007  1903               	skipnz
   426  1008  0AFF               	incf	btemp+1,f
   427  1009  0008               	return
   428  100A                     stringcode:
   429  100A                     stringdir:
   430  100A  3010               	movlw	high stringdir
   431  100B  008A               	movwf	10
   432  100C  0804               	movf	4,w
   433  100D  0A84               	incf	4,f
   434  100E  0782               	addwf	2,f
   435  100F                     __stringbase:
   436  100F  3400               	retlw	0
   437  1010                     __end_of__stringtab:
   438  1010                     __powers_:
   439  1010  3400               	retlw	0
   440  1011  3400               	retlw	0
   441  1012  3480               	retlw	128
   442  1013  343F               	retlw	63
   443  1014  3400               	retlw	0
   444  1015  3400               	retlw	0
   445  1016  3420               	retlw	32
   446  1017  3441               	retlw	65
   447  1018  3400               	retlw	0
   448  1019  3400               	retlw	0
   449  101A  34C8               	retlw	200
   450  101B  3442               	retlw	66
   451  101C  3400               	retlw	0
   452  101D  3400               	retlw	0
   453  101E  347A               	retlw	122
   454  101F  3444               	retlw	68
   455  1020  3400               	retlw	0
   456  1021  3440               	retlw	64
   457  1022  341C               	retlw	28
   458  1023  3446               	retlw	70
   459  1024  3400               	retlw	0
   460  1025  3450               	retlw	80
   461  1026  34C3               	retlw	195
   462  1027  3447               	retlw	71
   463  1028  3400               	retlw	0
   464  1029  3424               	retlw	36
   465  102A  3474               	retlw	116
   466  102B  3449               	retlw	73
   467  102C  3480               	retlw	128
   468  102D  3496               	retlw	150
   469  102E  3418               	retlw	24
   470  102F  344B               	retlw	75
   471  1030  3420               	retlw	32
   472  1031  34BC               	retlw	188
   473  1032  34BE               	retlw	190
   474  1033  344C               	retlw	76
   475  1034  3428               	retlw	40
   476  1035  346B               	retlw	107
   477  1036  346E               	retlw	110
   478  1037  344E               	retlw	78
   479  1038  34F9               	retlw	249
   480  1039  3402               	retlw	2
   481  103A  3415               	retlw	21
   482  103B  3450               	retlw	80
   483  103C  34EC               	retlw	236
   484  103D  3478               	retlw	120
   485  103E  34AD               	retlw	173
   486  103F  3460               	retlw	96
   487  1040  34CA               	retlw	202
   488  1041  34F2               	retlw	242
   489  1042  3449               	retlw	73
   490  1043  3471               	retlw	113
   491  1044                     __end_of__powers_:
   492  1044                     __npowers_:
   493  1044  3400               	retlw	0
   494  1045  3400               	retlw	0
   495  1046  3480               	retlw	128
   496  1047  343F               	retlw	63
   497  1048  34CD               	retlw	205
   498  1049  34CC               	retlw	204
   499  104A  34CC               	retlw	204
   500  104B  343D               	retlw	61
   501  104C  340A               	retlw	10
   502  104D  34D7               	retlw	215
   503  104E  3423               	retlw	35
   504  104F  343C               	retlw	60
   505  1050  346F               	retlw	111
   506  1051  3412               	retlw	18
   507  1052  3483               	retlw	131
   508  1053  343A               	retlw	58
   509  1054  3417               	retlw	23
   510  1055  34B7               	retlw	183
   511  1056  34D1               	retlw	209
   512  1057  3438               	retlw	56
   513  1058  34AC               	retlw	172
   514  1059  34C5               	retlw	197
   515  105A  3427               	retlw	39
   516  105B  3437               	retlw	55
   517  105C  34BD               	retlw	189
   518  105D  3437               	retlw	55
   519  105E  3486               	retlw	134
   520  105F  3435               	retlw	53
   521  1060  3495               	retlw	149
   522  1061  34BF               	retlw	191
   523  1062  34D6               	retlw	214
   524  1063  3433               	retlw	51
   525  1064  3477               	retlw	119
   526  1065  34CC               	retlw	204
   527  1066  342B               	retlw	43
   528  1067  3432               	retlw	50
   529  1068  345F               	retlw	95
   530  1069  3470               	retlw	112
   531  106A  3489               	retlw	137
   532  106B  3430               	retlw	48
   533  106C  34FF               	retlw	255
   534  106D  34E6               	retlw	230
   535  106E  34DB               	retlw	219
   536  106F  342E               	retlw	46
   537  1070  3408               	retlw	8
   538  1071  34E5               	retlw	229
   539  1072  343C               	retlw	60
   540  1073  341E               	retlw	30
   541  1074  3460               	retlw	96
   542  1075  3442               	retlw	66
   543  1076  34A2               	retlw	162
   544  1077  340D               	retlw	13
   545  1078                     __end_of__npowers_:
   546  1078                     _dpowers:
   547  1078  3401               	retlw	1
   548  1079  3400               	retlw	0
   549  107A  3400               	retlw	0
   550  107B  3400               	retlw	0
   551  107C  340A               	retlw	10
   552  107D  3400               	retlw	0
   553  107E  3400               	retlw	0
   554  107F  3400               	retlw	0
   555  1080  3464               	retlw	100
   556  1081  3400               	retlw	0
   557  1082  3400               	retlw	0
   558  1083  3400               	retlw	0
   559  1084  34E8               	retlw	232
   560  1085  3403               	retlw	3
   561  1086  3400               	retlw	0
   562  1087  3400               	retlw	0
   563  1088  3410               	retlw	16
   564  1089  3427               	retlw	39
   565  108A  3400               	retlw	0
   566  108B  3400               	retlw	0
   567  108C  34A0               	retlw	160
   568  108D  3486               	retlw	134
   569  108E  3401               	retlw	1
   570  108F  3400               	retlw	0
   571  1090  3440               	retlw	64
   572  1091  3442               	retlw	66
   573  1092  340F               	retlw	15
   574  1093  3400               	retlw	0
   575  1094  3480               	retlw	128
   576  1095  3496               	retlw	150
   577  1096  3498               	retlw	152
   578  1097  3400               	retlw	0
   579  1098  3400               	retlw	0
   580  1099  34E1               	retlw	225
   581  109A  34F5               	retlw	245
   582  109B  3405               	retlw	5
   583  109C  3400               	retlw	0
   584  109D  34CA               	retlw	202
   585  109E  349A               	retlw	154
   586  109F  343B               	retlw	59
   587  10A0                     __end_of_dpowers:
   588  0007                     _PORTCbits	set	7
   589  000B                     _INTCONbits	set	11
   590  0018                     _RCSTAbits	set	24
   591  0005                     _PORTA	set	5
   592  001A                     _RCREG	set	26
   593  0019                     _TXREG	set	25
   594  001E                     _ADRESH	set	30
   595  001F                     _ADCON0bits	set	31
   596  000C                     _PIR1bits	set	12
   597  0039                     _RC1	set	57
   598  0047                     _RD7	set	71
   599  0046                     _RD6	set	70
   600  0045                     _RD5	set	69
   601  0044                     _RD4	set	68
   602  0043                     _RD3	set	67
   603  0042                     _RD2	set	66
   604  0041                     _RD1	set	65
   605  0040                     _RD0	set	64
   606  008C                     _PIE1bits	set	140
   607  009A                     _SPBRGH	set	154
   608  0099                     _SPBRG	set	153
   609  0098                     _TXSTAbits	set	152
   610  008F                     _OSCCONbits	set	143
   611  009F                     _ADCON1bits	set	159
   612  0089                     _TRISE	set	137
   613  0088                     _TRISD	set	136
   614  0085                     _TRISA	set	133
   615  0087                     _TRISC	set	135
   616  0086                     _TRISB	set	134
   617  0187                     _BAUDCTLbits	set	391
   618  0188                     _ANSEL	set	392
   619  0189                     _ANSELH	set	393
   620  10A0                     STR_2:
   621  10A0  3425               	retlw	37	;'%'
   622  10A1  3433               	retlw	51	;'3'
   623  10A2  342E               	retlw	46	;'.'
   624  10A3  3431               	retlw	49	;'1'
   625  10A4  3466               	retlw	102	;'f'
   626  10A5  3456               	retlw	86	;'V'
   627  10A6  3420               	retlw	32	;' '
   628  10A7  3425               	retlw	37	;'%'
   629  10A8  3433               	retlw	51	;'3'
   630  10A9  342E               	retlw	46	;'.'
   631  10AA  3432               	retlw	50	;'2'
   632  10AB  3466               	retlw	102	;'f'
   633  10AC  3456               	retlw	86	;'V'
   634  10AD  3420               	retlw	32	;' '
   635  10AE  3425               	retlw	37	;'%'
   636  10AF  3433               	retlw	51	;'3'
   637  10B0  342E               	retlw	46	;'.'
   638  10B1  3432               	retlw	50	;'2'
   639  10B2  3466               	retlw	102	;'f'
   640  10B3  3456               	retlw	86	;'V'
   641  10B4  3400               	retlw	0
   642  10B5                     STR_1:
   643  10B5  3420               	retlw	32	;' '
   644  10B6  3453               	retlw	83	;'S'
   645  10B7  3431               	retlw	49	;'1'
   646  10B8  343A               	retlw	58	;':'
   647  10B9  3420               	retlw	32	;' '
   648  10BA  3420               	retlw	32	;' '
   649  10BB  3420               	retlw	32	;' '
   650  10BC  3453               	retlw	83	;'S'
   651  10BD  3432               	retlw	50	;'2'
   652  10BE  343A               	retlw	58	;':'
   653  10BF  3420               	retlw	32	;' '
   654  10C0  3420               	retlw	32	;' '
   655  10C1  3453               	retlw	83	;'S'
   656  10C2  3433               	retlw	51	;'3'
   657  10C3  343A               	retlw	58	;':'
   658  10C4  3420               	retlw	32	;' '
   659  10C5  3420               	retlw	32	;' '
   660  10C6  3400               	retlw	0
   661                           
   662                           	psect	cinit
   663  000F                     start_initialization:	
   664                           ; #config settings
   665                           
   666  000F                     __initialization:
   667                           
   668                           ; Initialize objects allocated to BANK1
   669  000F  1683               	bsf	3,5	;RP0=1, select bank1
   670  0010  1303               	bcf	3,6	;RP1=0, select bank1
   671  0011  120A  118A  27FC  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   672  0016  00E7               	movwf	__pdataBANK1& (0+127)
   673                           
   674                           ; Clear objects allocated to BANK3
   675  0017  1783               	bsf	3,7	;select IRP bank2
   676  0018  3090               	movlw	low __pbssBANK3
   677  0019  0084               	movwf	4
   678  001A  30A4               	movlw	low (__pbssBANK3+20)
   679  001B  160A  158A  209E  120A  118A  	fcall	clear_ram0
   680                           
   681                           ; Clear objects allocated to BANK1
   682  0020  1383               	bcf	3,7	;select IRP bank0
   683  0021  30D8               	movlw	low __pbssBANK1
   684  0022  0084               	movwf	4
   685  0023  30E7               	movlw	low (__pbssBANK1+15)
   686  0024  160A  158A  209E  120A  118A  	fcall	clear_ram0
   687                           
   688                           ; Clear objects allocated to COMMON
   689  0029  01F8               	clrf	__pbssCOMMON& (0+127)
   690  002A                     end_of_initialization:	
   691                           ;End of C runtime variable initialization code
   692                           
   693  002A                     __end_of__initialization:
   694  002A  0183               	clrf	3
   695  002B  120A  158A  2805   	ljmp	_main	;jump to C main() function
   696                           
   697                           	psect	bssCOMMON
   698  0078                     __pbssCOMMON:
   699  0078                     _op1:
   700  0078                     	ds	1
   701                           
   702                           	psect	bssBANK1
   703  00D8                     __pbssBANK1:
   704  00D8                     _v33:
   705  00D8                     	ds	4
   706  00DC                     _v22:
   707  00DC                     	ds	4
   708  00E0                     _v11:
   709  00E0                     	ds	4
   710  00E4                     _V3:
   711  00E4                     	ds	1
   712  00E5                     _V2:
   713  00E5                     	ds	1
   714  00E6                     _V1:
   715  00E6                     	ds	1
   716                           
   717                           	psect	dataBANK1
   718  00E7                     __pdataBANK1:
   719  00E7                     _bmenu:
   720  00E7                     	ds	1
   721                           
   722                           	psect	bssBANK3
   723  0190                     __pbssBANK3:
   724  0190                     _f2:
   725  0190                     	ds	10
   726  019A                     _f1:
   727  019A                     	ds	10
   728                           
   729                           	psect	clrtext
   730  189E                     clear_ram0:	
   731                           ;	Called with FSR containing the base address, and
   732                           ;	W with the last address+1
   733                           
   734  189E  0064               	clrwdt	;clear the watchdog before getting into this loop
   735  189F                     clrloop0:
   736  189F  0180               	clrf	0	;clear RAM location pointed to by FSR
   737  18A0  0A84               	incf	4,f	;increment pointer
   738  18A1  0604               	xorwf	4,w	;XOR with final address
   739  18A2  1903               	btfsc	3,2	;have we reached the end yet?
   740  18A3  3400               	retlw	0	;all done for this memory range, return
   741  18A4  0604               	xorwf	4,w	;XOR again to restore value
   742  18A5  289F               	goto	clrloop0	;do the next byte
   743                           
   744                           	psect	cstackBANK1
   745  00A0                     __pcstackBANK1:
   746  00A0                     ?___flsub:
   747  00A0                     ___flsub@a:	
   748                           ; 4 bytes @ 0x0
   749                           
   750                           
   751                           ; 4 bytes @ 0x0
   752  00A0                     	ds	4
   753  00A4                     ___flsub@b:
   754                           
   755                           ; 4 bytes @ 0x4
   756  00A4                     	ds	4
   757  00A8                     ?_sprintf:
   758  00A8                     sprintf@f:	
   759                           ; 2 bytes @ 0x8
   760                           
   761                           
   762                           ; 1 bytes @ 0x8
   763  00A8                     	ds	13
   764  00B5                     ??_sprintf:
   765                           
   766                           ; 1 bytes @ 0x15
   767  00B5                     	ds	5
   768  00BA                     _sprintf$1197:
   769                           
   770                           ; 4 bytes @ 0x1A
   771  00BA                     	ds	4
   772  00BE                     sprintf@ap:
   773                           
   774                           ; 1 bytes @ 0x1E
   775  00BE                     	ds	1
   776  00BF                     sprintf@val:
   777                           
   778                           ; 4 bytes @ 0x1F
   779  00BF                     	ds	4
   780  00C3                     sprintf@flag:
   781                           
   782                           ; 2 bytes @ 0x23
   783  00C3                     	ds	2
   784  00C5                     sprintf@width:
   785                           
   786                           ; 2 bytes @ 0x25
   787  00C5                     	ds	2
   788  00C7                     sprintf@tmpval:
   789                           
   790                           ; 4 bytes @ 0x27
   791  00C7                     	ds	4
   792  00CB                     sprintf@eexp:
   793                           
   794                           ; 2 bytes @ 0x2B
   795  00CB                     	ds	2
   796  00CD                     sprintf@fval:
   797                           
   798                           ; 4 bytes @ 0x2D
   799  00CD                     	ds	4
   800  00D1                     sprintf@sp:
   801                           
   802                           ; 1 bytes @ 0x31
   803  00D1                     	ds	1
   804  00D2                     sprintf@prec:
   805                           
   806                           ; 2 bytes @ 0x32
   807  00D2                     	ds	2
   808  00D4                     sprintf@c:
   809                           
   810                           ; 1 bytes @ 0x34
   811  00D4                     	ds	1
   812  00D5                     ??_main:
   813                           
   814                           ; 1 bytes @ 0x35
   815  00D5                     	ds	3
   816                           
   817                           	psect	cstackCOMMON
   818  0070                     __pcstackCOMMON:
   819  0070                     ?_isdigit:
   820  0070                     ?_int_adc:	
   821                           ; 1 bit 
   822                           
   823  0070                     ??_int_adc:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ?_int_uart:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ??_int_uart:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     ?_cfg_io:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ?_cfg_clk:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ?_cfg_inte:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ?_cfg_adc:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_cfg_usart:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ?_Lcd_Init:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ?_Lcd_Clear:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ?_isr:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ?_main:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ?_Lcd_Port:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_Lcd_Cmd:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ?_Lcd_Write_Char:	
   866                           ; 1 bytes @ 0x0
   867                           
   868                           
   869                           ; 1 bytes @ 0x0
   870  0070                     	ds	3
   871  0073                     ??_isr:
   872                           
   873                           ; 1 bytes @ 0x3
   874  0073                     	ds	2
   875  0075                     ??_cfg_io:
   876  0075                     ??_cfg_clk:	
   877                           ; 1 bytes @ 0x5
   878                           
   879  0075                     ??_cfg_inte:	
   880                           ; 1 bytes @ 0x5
   881                           
   882  0075                     ??_cfg_adc:	
   883                           ; 1 bytes @ 0x5
   884                           
   885  0075                     ??_cfg_usart:	
   886                           ; 1 bytes @ 0x5
   887                           
   888  0075                     ??_isdigit:	
   889                           ; 1 bytes @ 0x5
   890                           
   891  0075                     ??__div_to_l_:	
   892                           ; 1 bytes @ 0x5
   893                           
   894  0075                     ??_Lcd_Port:	
   895                           ; 1 bytes @ 0x5
   896                           
   897  0075                     ??___wmul:	
   898                           ; 1 bytes @ 0x5
   899                           
   900  0075                     ??___lldiv:	
   901                           ; 1 bytes @ 0x5
   902                           
   903  0075                     ??___awmod:	
   904                           ; 1 bytes @ 0x5
   905                           
   906  0075                     ??___flneg:	
   907                           ; 1 bytes @ 0x5
   908                           
   909  0075                     ??___llmod:	
   910                           ; 1 bytes @ 0x5
   911                           
   912  0075                     ??___lwmod:	
   913                           ; 1 bytes @ 0x5
   914                           
   915  0075                     ?__Umul8_16:	
   916                           ; 1 bytes @ 0x5
   917                           
   918  0075                     Lcd_Port@a:	
   919                           ; 2 bytes @ 0x5
   920                           
   921  0075                     __Umul8_16@multiplicand:	
   922                           ; 1 bytes @ 0x5
   923                           
   924  0075                     _isdigit$1010:	
   925                           ; 1 bytes @ 0x5
   926                           
   927  0075                     ___wmul@product:	
   928                           ; 1 bytes @ 0x5
   929                           
   930                           
   931                           ; 2 bytes @ 0x5
   932  0075                     	ds	1
   933  0076                     ??_Lcd_Cmd:
   934  0076                     ??_Lcd_Write_Char:	
   935                           ; 1 bytes @ 0x6
   936                           
   937  0076                     ___awmod@counter:	
   938                           ; 1 bytes @ 0x6
   939                           
   940  0076                     ___llmod@counter:	
   941                           ; 1 bytes @ 0x6
   942                           
   943  0076                     ___lwmod@counter:	
   944                           ; 1 bytes @ 0x6
   945                           
   946  0076                     isdigit@c:	
   947                           ; 1 bytes @ 0x6
   948                           
   949                           
   950                           ; 1 bytes @ 0x6
   951  0076                     	ds	1
   952  0077                     ??___lwdiv:
   953  0077                     Lcd_Write_Char@a:	
   954                           ; 1 bytes @ 0x7
   955                           
   956  0077                     ___awmod@sign:	
   957                           ; 1 bytes @ 0x7
   958                           
   959                           
   960                           ; 1 bytes @ 0x7
   961  0077                     	ds	1
   962  0078                     ??_Lcd_Clear:
   963  0078                     ??___flsub:	
   964                           ; 1 bytes @ 0x8
   965                           
   966                           
   967                           	psect	cstackBANK0
   968  0020                     __pcstackBANK0:	
   969                           ; 1 bytes @ 0x8
   970                           
   971  0020                     ?___fleq:
   972  0020                     ?___flge:	
   973                           ; 1 bit 
   974                           
   975  0020                     ?_Lcd_Write_String:	
   976                           ; 1 bit 
   977                           
   978  0020                     ??__Umul8_16:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0020                     ?___wmul:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0020                     ?___awmod:	
   985                           ; 2 bytes @ 0x0
   986                           
   987  0020                     ?___lwmod:	
   988                           ; 2 bytes @ 0x0
   989                           
   990  0020                     ?__tdiv_to_l_:	
   991                           ; 2 bytes @ 0x0
   992                           
   993  0020                     ?__div_to_l_:	
   994                           ; 4 bytes @ 0x0
   995                           
   996  0020                     ?___lldiv:	
   997                           ; 4 bytes @ 0x0
   998                           
   999  0020                     ?___flneg:	
  1000                           ; 4 bytes @ 0x0
  1001                           
  1002  0020                     ?___llmod:	
  1003                           ; 4 bytes @ 0x0
  1004                           
  1005  0020                     ?___xxtofl:	
  1006                           ; 4 bytes @ 0x0
  1007                           
  1008  0020                     Lcd_Cmd@a:	
  1009                           ; 4 bytes @ 0x0
  1010                           
  1011  0020                     Lcd_Write_String@a:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  0020                     ___wmul@multiplier:	
  1015                           ; 2 bytes @ 0x0
  1016                           
  1017  0020                     ___awmod@divisor:	
  1018                           ; 2 bytes @ 0x0
  1019                           
  1020  0020                     ___lwmod@divisor:	
  1021                           ; 2 bytes @ 0x0
  1022                           
  1023  0020                     ___lldiv@divisor:	
  1024                           ; 2 bytes @ 0x0
  1025                           
  1026  0020                     __div_to_l_@f1:	
  1027                           ; 4 bytes @ 0x0
  1028                           
  1029  0020                     ___fleq@ff1:	
  1030                           ; 4 bytes @ 0x0
  1031                           
  1032  0020                     ___flge@ff1:	
  1033                           ; 4 bytes @ 0x0
  1034                           
  1035  0020                     ___flneg@f1:	
  1036                           ; 4 bytes @ 0x0
  1037                           
  1038  0020                     __tdiv_to_l_@f1:	
  1039                           ; 4 bytes @ 0x0
  1040                           
  1041  0020                     ___llmod@divisor:	
  1042                           ; 4 bytes @ 0x0
  1043                           
  1044  0020                     ___xxtofl@val:	
  1045                           ; 4 bytes @ 0x0
  1046                           
  1047                           
  1048                           ; 4 bytes @ 0x0
  1049  0020                     	ds	1
  1050  0021                     ??_Lcd_Init:
  1051  0021                     ?_Lcd_Set_Cursor:	
  1052                           ; 1 bytes @ 0x1
  1053                           
  1054  0021                     Lcd_Set_Cursor@b:	
  1055                           ; 1 bytes @ 0x1
  1056                           
  1057                           
  1058                           ; 1 bytes @ 0x1
  1059  0021                     	ds	1
  1060  0022                     ??_Lcd_Set_Cursor:
  1061  0022                     ??_Lcd_Write_String:	
  1062                           ; 1 bytes @ 0x2
  1063                           
  1064  0022                     ___wmul@multiplicand:	
  1065                           ; 1 bytes @ 0x2
  1066                           
  1067  0022                     ___awmod@dividend:	
  1068                           ; 2 bytes @ 0x2
  1069                           
  1070  0022                     ___lwmod@dividend:	
  1071                           ; 2 bytes @ 0x2
  1072                           
  1073  0022                     __Umul8_16@product:	
  1074                           ; 2 bytes @ 0x2
  1075                           
  1076                           
  1077                           ; 2 bytes @ 0x2
  1078  0022                     	ds	1
  1079  0023                     Lcd_Set_Cursor@a:
  1080                           
  1081                           ; 1 bytes @ 0x3
  1082  0023                     	ds	1
  1083  0024                     ??___xxtofl:
  1084  0024                     ?___awdiv:	
  1085                           ; 1 bytes @ 0x4
  1086                           
  1087  0024                     ?___lwdiv:	
  1088                           ; 2 bytes @ 0x4
  1089                           
  1090  0024                     Lcd_Set_Cursor@temp:	
  1091                           ; 2 bytes @ 0x4
  1092                           
  1093  0024                     ___awdiv@divisor:	
  1094                           ; 1 bytes @ 0x4
  1095                           
  1096  0024                     ___lwdiv@divisor:	
  1097                           ; 2 bytes @ 0x4
  1098                           
  1099  0024                     __Umul8_16@word_mpld:	
  1100                           ; 2 bytes @ 0x4
  1101                           
  1102  0024                     ___lldiv@dividend:	
  1103                           ; 2 bytes @ 0x4
  1104                           
  1105  0024                     __div_to_l_@f2:	
  1106                           ; 4 bytes @ 0x4
  1107                           
  1108  0024                     ___fleq@ff2:	
  1109                           ; 4 bytes @ 0x4
  1110                           
  1111  0024                     ___flge@ff2:	
  1112                           ; 4 bytes @ 0x4
  1113                           
  1114  0024                     __tdiv_to_l_@f2:	
  1115                           ; 4 bytes @ 0x4
  1116                           
  1117  0024                     ___llmod@dividend:	
  1118                           ; 4 bytes @ 0x4
  1119                           
  1120                           
  1121                           ; 4 bytes @ 0x4
  1122  0024                     	ds	1
  1123  0025                     Lcd_Write_String@i:
  1124                           
  1125                           ; 2 bytes @ 0x5
  1126  0025                     	ds	1
  1127  0026                     __Umul8_16@multiplier:
  1128  0026                     ___awdiv@dividend:	
  1129                           ; 1 bytes @ 0x6
  1130                           
  1131  0026                     ___lwdiv@dividend:	
  1132                           ; 2 bytes @ 0x6
  1133                           
  1134                           
  1135                           ; 2 bytes @ 0x6
  1136  0026                     	ds	2
  1137  0028                     ??__tdiv_to_l_:
  1138  0028                     ??___awdiv:	
  1139                           ; 1 bytes @ 0x8
  1140                           
  1141  0028                     ??___fleq:	
  1142                           ; 1 bytes @ 0x8
  1143                           
  1144  0028                     ??___flge:	
  1145                           ; 1 bytes @ 0x8
  1146                           
  1147  0028                     ___lwdiv@counter:	
  1148                           ; 1 bytes @ 0x8
  1149                           
  1150  0028                     ___xxtofl@sign:	
  1151                           ; 1 bytes @ 0x8
  1152                           
  1153  0028                     ___lldiv@quotient:	
  1154                           ; 1 bytes @ 0x8
  1155                           
  1156  0028                     __div_to_l_@quot:	
  1157                           ; 4 bytes @ 0x8
  1158                           
  1159                           
  1160                           ; 4 bytes @ 0x8
  1161  0028                     	ds	1
  1162  0029                     ___awdiv@counter:
  1163  0029                     ___xxtofl@exp:	
  1164                           ; 1 bytes @ 0x9
  1165                           
  1166  0029                     ___lwdiv@quotient:	
  1167                           ; 1 bytes @ 0x9
  1168                           
  1169                           
  1170                           ; 2 bytes @ 0x9
  1171  0029                     	ds	1
  1172  002A                     ___awdiv@sign:
  1173  002A                     ___xxtofl@arg:	
  1174                           ; 1 bytes @ 0xA
  1175                           
  1176                           
  1177                           ; 4 bytes @ 0xA
  1178  002A                     	ds	1
  1179  002B                     ___awdiv@quotient:
  1180                           
  1181                           ; 2 bytes @ 0xB
  1182  002B                     	ds	1
  1183  002C                     ___lldiv@counter:
  1184  002C                     __div_to_l_@cntr:	
  1185                           ; 1 bytes @ 0xC
  1186                           
  1187  002C                     __tdiv_to_l_@quot:	
  1188                           ; 1 bytes @ 0xC
  1189                           
  1190                           
  1191                           ; 4 bytes @ 0xC
  1192  002C                     	ds	1
  1193  002D                     __div_to_l_@exp1:
  1194                           
  1195                           ; 1 bytes @ 0xD
  1196  002D                     	ds	1
  1197  002E                     ?___flmul:
  1198  002E                     ___flmul@b:	
  1199                           ; 4 bytes @ 0xE
  1200                           
  1201                           
  1202                           ; 4 bytes @ 0xE
  1203  002E                     	ds	2
  1204  0030                     __tdiv_to_l_@cntr:
  1205                           
  1206                           ; 1 bytes @ 0x10
  1207  0030                     	ds	1
  1208  0031                     __tdiv_to_l_@exp1:
  1209                           
  1210                           ; 1 bytes @ 0x11
  1211  0031                     	ds	1
  1212  0032                     ___flmul@a:
  1213                           
  1214                           ; 4 bytes @ 0x12
  1215  0032                     	ds	4
  1216  0036                     ??___flmul:
  1217                           
  1218                           ; 1 bytes @ 0x16
  1219  0036                     	ds	5
  1220  003B                     ___flmul@sign:
  1221                           
  1222                           ; 1 bytes @ 0x1B
  1223  003B                     	ds	1
  1224  003C                     ___flmul@aexp:
  1225                           
  1226                           ; 1 bytes @ 0x1C
  1227  003C                     	ds	1
  1228  003D                     ___flmul@grs:
  1229                           
  1230                           ; 4 bytes @ 0x1D
  1231  003D                     	ds	4
  1232  0041                     ___flmul@bexp:
  1233                           
  1234                           ; 1 bytes @ 0x21
  1235  0041                     	ds	1
  1236  0042                     ___flmul@prod:
  1237                           
  1238                           ; 4 bytes @ 0x22
  1239  0042                     	ds	4
  1240  0046                     ___flmul@temp:
  1241                           
  1242                           ; 2 bytes @ 0x26
  1243  0046                     	ds	2
  1244  0048                     ?_conv:
  1245  0048                     ?_fround:	
  1246                           ; 4 bytes @ 0x28
  1247                           
  1248  0048                     ?_scale:	
  1249                           ; 4 bytes @ 0x28
  1250                           
  1251                           
  1252                           ; 4 bytes @ 0x28
  1253  0048                     	ds	4
  1254  004C                     ??_conv:
  1255  004C                     ??_fround:	
  1256                           ; 1 bytes @ 0x2C
  1257                           
  1258  004C                     ??_scale:	
  1259                           ; 1 bytes @ 0x2C
  1260                           
  1261                           
  1262                           ; 1 bytes @ 0x2C
  1263  004C                     	ds	4
  1264  0050                     conv@result:
  1265                           
  1266                           ; 4 bytes @ 0x30
  1267  0050                     	ds	3
  1268  0053                     _fround$1195:
  1269                           
  1270                           ; 4 bytes @ 0x33
  1271  0053                     	ds	1
  1272  0054                     conv@aa:
  1273                           
  1274                           ; 1 bytes @ 0x34
  1275  0054                     	ds	2
  1276  0056                     _scale$1196:
  1277                           
  1278                           ; 4 bytes @ 0x36
  1279  0056                     	ds	1
  1280  0057                     _fround$1194:
  1281                           
  1282                           ; 4 bytes @ 0x37
  1283  0057                     	ds	3
  1284  005A                     scale@scl:
  1285                           
  1286                           ; 1 bytes @ 0x3A
  1287  005A                     	ds	1
  1288  005B                     ?___fltol:
  1289  005B                     fround@prec:	
  1290                           ; 4 bytes @ 0x3B
  1291                           
  1292  005B                     ___fltol@f1:	
  1293                           ; 1 bytes @ 0x3B
  1294                           
  1295                           
  1296                           ; 4 bytes @ 0x3B
  1297  005B                     	ds	1
  1298  005C                     ?___fladd:
  1299  005C                     ___fladd@b:	
  1300                           ; 4 bytes @ 0x3C
  1301                           
  1302                           
  1303                           ; 4 bytes @ 0x3C
  1304  005C                     	ds	3
  1305  005F                     ??___fltol:
  1306                           
  1307                           ; 1 bytes @ 0x3F
  1308  005F                     	ds	1
  1309  0060                     ___fladd@a:
  1310                           
  1311                           ; 4 bytes @ 0x40
  1312  0060                     	ds	4
  1313  0064                     ??___fladd:
  1314  0064                     ___fltol@sign1:	
  1315                           ; 1 bytes @ 0x44
  1316                           
  1317                           
  1318                           ; 1 bytes @ 0x44
  1319  0064                     	ds	1
  1320  0065                     ___fltol@exp1:
  1321                           
  1322                           ; 1 bytes @ 0x45
  1323  0065                     	ds	7
  1324  006C                     ___fladd@signs:
  1325                           
  1326                           ; 1 bytes @ 0x4C
  1327  006C                     	ds	1
  1328  006D                     ___fladd@aexp:
  1329                           
  1330                           ; 1 bytes @ 0x4D
  1331  006D                     	ds	1
  1332  006E                     ___fladd@bexp:
  1333                           
  1334                           ; 1 bytes @ 0x4E
  1335  006E                     	ds	1
  1336  006F                     ___fladd@grs:
  1337                           
  1338                           ; 1 bytes @ 0x4F
  1339  006F                     	ds	1
  1340                           
  1341                           	psect	maintext
  1342  0805                     __pmaintext:	
  1343 ;;
  1344 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1345 ;;
  1346 ;; *************** function _main *****************
  1347 ;; Defined at:
  1348 ;;		line 142 in file "main.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : B00/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1362 ;;      Params:         0       0       0       0       0
  1363 ;;      Locals:         0       0       0       0       0
  1364 ;;      Temps:          0       0       3       0       0
  1365 ;;      Totals:         0       0       3       0       0
  1366 ;;Total ram usage:        3 bytes
  1367 ;; Hardware stack levels required when called:    6
  1368 ;; This function calls:
  1369 ;;		_Lcd_Clear
  1370 ;;		_Lcd_Init
  1371 ;;		_Lcd_Set_Cursor
  1372 ;;		_Lcd_Write_String
  1373 ;;		_cfg_adc
  1374 ;;		_cfg_clk
  1375 ;;		_cfg_inte
  1376 ;;		_cfg_io
  1377 ;;		_cfg_usart
  1378 ;;		_conv
  1379 ;;		_sprintf
  1380 ;; This function is called by:
  1381 ;;		Startup code after reset
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           
  1386                           ;psect for function _main
  1387  0805                     _main:
  1388  0805                     l4473:	
  1389                           ;incstack = 0
  1390                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1391                           
  1392                           
  1393                           ;main.c: 143:     cfg_io();
  1394  0805  160A  158A  20BD  120A  158A  	fcall	_cfg_io
  1395                           
  1396                           ;main.c: 144:     cfg_clk();
  1397  080A  160A  158A  2096  120A  158A  	fcall	_cfg_clk
  1398  080F                     l4475:
  1399                           
  1400                           ;main.c: 145:     cfg_inte();
  1401  080F  160A  158A  20A6  120A  158A  	fcall	_cfg_inte
  1402  0814                     l4477:
  1403                           
  1404                           ;main.c: 146:     cfg_adc();
  1405  0814  160A  158A  20F6  120A  158A  	fcall	_cfg_adc
  1406  0819                     l4479:
  1407                           
  1408                           ;main.c: 147:     cfg_usart();
  1409  0819  160A  158A  20E1  120A  158A  	fcall	_cfg_usart
  1410  081E                     l4481:
  1411                           
  1412                           ;main.c: 149:     Lcd_Init();
  1413  081E  160A  158A  2336  120A  158A  	fcall	_Lcd_Init
  1414  0823                     l4483:
  1415                           
  1416                           ;main.c: 150:     ADCON0bits.GO = 1;
  1417  0823  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0824  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0825  149F               	bsf	31,1	;volatile
  1420  0826                     l4485:
  1421                           
  1422                           ;main.c: 154:       Lcd_Clear();
  1423  0826  160A  158A  20B0  120A  158A  	fcall	_Lcd_Clear
  1424  082B                     l4487:
  1425                           
  1426                           ;main.c: 155:       Lcd_Set_Cursor(1,1);
  1427  082B  1283               	bcf	3,5	;RP0=0, select bank0
  1428  082C  1303               	bcf	3,6	;RP1=0, select bank0
  1429  082D  01A1               	clrf	Lcd_Set_Cursor@b
  1430  082E  0AA1               	incf	Lcd_Set_Cursor@b,f
  1431  082F  3001               	movlw	1
  1432  0830  160A  158A  217A  120A  158A  	fcall	_Lcd_Set_Cursor
  1433  0835                     l4489:
  1434                           
  1435                           ;main.c: 156:       Lcd_Write_String(" S1:   S2:  S3:  ");
  1436  0835  30A6               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1437  0836  1283               	bcf	3,5	;RP0=0, select bank0
  1438  0837  1303               	bcf	3,6	;RP1=0, select bank0
  1439  0838  00A0               	movwf	Lcd_Write_String@a
  1440  0839  3080               	movlw	128
  1441  083A  00A1               	movwf	Lcd_Write_String@a+1
  1442  083B  160A  158A  22AA  120A  158A  	fcall	_Lcd_Write_String
  1443  0840                     l4491:
  1444                           
  1445                           ;main.c: 157:       v11 = conv(V1);
  1446  0840  1683               	bsf	3,5	;RP0=1, select bank1
  1447  0841  1303               	bcf	3,6	;RP1=0, select bank1
  1448  0842  0866               	movf	_V1^(0+128),w
  1449  0843  160A  158A  226A  120A  158A  	fcall	_conv
  1450  0848  1283               	bcf	3,5	;RP0=0, select bank0
  1451  0849  1303               	bcf	3,6	;RP1=0, select bank0
  1452  084A  084B               	movf	?_conv+3,w
  1453  084B  1683               	bsf	3,5	;RP0=1, select bank1
  1454  084C  1303               	bcf	3,6	;RP1=0, select bank1
  1455  084D  00E3               	movwf	(_v11+3)^(0+128)
  1456  084E  1283               	bcf	3,5	;RP0=0, select bank0
  1457  084F  1303               	bcf	3,6	;RP1=0, select bank0
  1458  0850  084A               	movf	?_conv+2,w
  1459  0851  1683               	bsf	3,5	;RP0=1, select bank1
  1460  0852  1303               	bcf	3,6	;RP1=0, select bank1
  1461  0853  00E2               	movwf	(_v11+2)^(0+128)
  1462  0854  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0855  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0856  0849               	movf	?_conv+1,w
  1465  0857  1683               	bsf	3,5	;RP0=1, select bank1
  1466  0858  1303               	bcf	3,6	;RP1=0, select bank1
  1467  0859  00E1               	movwf	(_v11+1)^(0+128)
  1468  085A  1283               	bcf	3,5	;RP0=0, select bank0
  1469  085B  1303               	bcf	3,6	;RP1=0, select bank0
  1470  085C  0848               	movf	?_conv,w
  1471  085D  1683               	bsf	3,5	;RP0=1, select bank1
  1472  085E  1303               	bcf	3,6	;RP1=0, select bank1
  1473  085F  00E0               	movwf	_v11^(0+128)
  1474  0860                     l4493:
  1475                           
  1476                           ;main.c: 158:       v22 = conv(V2);
  1477  0860  0865               	movf	_V2^(0+128),w
  1478  0861  160A  158A  226A  120A  158A  	fcall	_conv
  1479  0866  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0867  1303               	bcf	3,6	;RP1=0, select bank0
  1481  0868  084B               	movf	?_conv+3,w
  1482  0869  1683               	bsf	3,5	;RP0=1, select bank1
  1483  086A  1303               	bcf	3,6	;RP1=0, select bank1
  1484  086B  00DF               	movwf	(_v22+3)^(0+128)
  1485  086C  1283               	bcf	3,5	;RP0=0, select bank0
  1486  086D  1303               	bcf	3,6	;RP1=0, select bank0
  1487  086E  084A               	movf	?_conv+2,w
  1488  086F  1683               	bsf	3,5	;RP0=1, select bank1
  1489  0870  1303               	bcf	3,6	;RP1=0, select bank1
  1490  0871  00DE               	movwf	(_v22+2)^(0+128)
  1491  0872  1283               	bcf	3,5	;RP0=0, select bank0
  1492  0873  1303               	bcf	3,6	;RP1=0, select bank0
  1493  0874  0849               	movf	?_conv+1,w
  1494  0875  1683               	bsf	3,5	;RP0=1, select bank1
  1495  0876  1303               	bcf	3,6	;RP1=0, select bank1
  1496  0877  00DD               	movwf	(_v22+1)^(0+128)
  1497  0878  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0879  1303               	bcf	3,6	;RP1=0, select bank0
  1499  087A  0848               	movf	?_conv,w
  1500  087B  1683               	bsf	3,5	;RP0=1, select bank1
  1501  087C  1303               	bcf	3,6	;RP1=0, select bank1
  1502  087D  00DC               	movwf	_v22^(0+128)
  1503  087E                     l4495:
  1504                           
  1505                           ;main.c: 159:       v33 = conv(V3);
  1506  087E  3000               	movlw	0
  1507  087F  160A  158A  226A  120A  158A  	fcall	_conv
  1508  0884  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0885  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0886  084B               	movf	?_conv+3,w
  1511  0887  1683               	bsf	3,5	;RP0=1, select bank1
  1512  0888  1303               	bcf	3,6	;RP1=0, select bank1
  1513  0889  00DB               	movwf	(_v33+3)^(0+128)
  1514  088A  1283               	bcf	3,5	;RP0=0, select bank0
  1515  088B  1303               	bcf	3,6	;RP1=0, select bank0
  1516  088C  084A               	movf	?_conv+2,w
  1517  088D  1683               	bsf	3,5	;RP0=1, select bank1
  1518  088E  1303               	bcf	3,6	;RP1=0, select bank1
  1519  088F  00DA               	movwf	(_v33+2)^(0+128)
  1520  0890  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0891  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0892  0849               	movf	?_conv+1,w
  1523  0893  1683               	bsf	3,5	;RP0=1, select bank1
  1524  0894  1303               	bcf	3,6	;RP1=0, select bank1
  1525  0895  00D9               	movwf	(_v33+1)^(0+128)
  1526  0896  1283               	bcf	3,5	;RP0=0, select bank0
  1527  0897  1303               	bcf	3,6	;RP1=0, select bank0
  1528  0898  0848               	movf	?_conv,w
  1529  0899  1683               	bsf	3,5	;RP0=1, select bank1
  1530  089A  1303               	bcf	3,6	;RP1=0, select bank1
  1531  089B  00D8               	movwf	_v33^(0+128)
  1532  089C                     l4497:
  1533                           
  1534                           ;main.c: 162:       Lcd_Set_Cursor(2,1);
  1535  089C  1283               	bcf	3,5	;RP0=0, select bank0
  1536  089D  1303               	bcf	3,6	;RP1=0, select bank0
  1537  089E  01A1               	clrf	Lcd_Set_Cursor@b
  1538  089F  0AA1               	incf	Lcd_Set_Cursor@b,f
  1539  08A0  3002               	movlw	2
  1540  08A1  160A  158A  217A  120A  158A  	fcall	_Lcd_Set_Cursor
  1541  08A6                     l4499:
  1542                           
  1543                           ;main.c: 163:       sprintf(f1, "%3.1fV %3.2fV %3.2fV",v11, v22, v33);
  1544  08A6  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1545  08A7  1683               	bsf	3,5	;RP0=1, select bank1
  1546  08A8  1303               	bcf	3,6	;RP1=0, select bank1
  1547  08A9  00D5               	movwf	??_main^(0+128)
  1548  08AA  0855               	movf	??_main^(0+128),w
  1549  08AB  00A8               	movwf	sprintf@f^(0+128)
  1550  08AC  0863               	movf	(_v11+3)^(0+128),w
  1551  08AD  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1552  08AE  0862               	movf	(_v11+2)^(0+128),w
  1553  08AF  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1554  08B0  0861               	movf	(_v11+1)^(0+128),w
  1555  08B1  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1556  08B2  0860               	movf	_v11^(0+128),w
  1557  08B3  00A9               	movwf	(?_sprintf^(0+128)+1)
  1558  08B4  085F               	movf	(_v22+3)^(0+128),w
  1559  08B5  00B0               	movwf	((?_sprintf+3)^(0+128)+5)
  1560  08B6  085E               	movf	(_v22+2)^(0+128),w
  1561  08B7  00AF               	movwf	((?_sprintf+2)^(0+128)+5)
  1562  08B8  085D               	movf	(_v22+1)^(0+128),w
  1563  08B9  00AE               	movwf	((?_sprintf+1)^(0+128)+5)
  1564  08BA  085C               	movf	_v22^(0+128),w
  1565  08BB  00AD               	movwf	(?_sprintf^(0+128)+5)
  1566  08BC  085B               	movf	(_v33+3)^(0+128),w
  1567  08BD  00B4               	movwf	((?_sprintf+3)^(0+128)+9)
  1568  08BE  085A               	movf	(_v33+2)^(0+128),w
  1569  08BF  00B3               	movwf	((?_sprintf+2)^(0+128)+9)
  1570  08C0  0859               	movf	(_v33+1)^(0+128),w
  1571  08C1  00B2               	movwf	((?_sprintf+1)^(0+128)+9)
  1572  08C2  0858               	movf	_v33^(0+128),w
  1573  08C3  00B1               	movwf	(?_sprintf^(0+128)+9)
  1574  08C4  309A               	movlw	(low (_f1| (0+256)))& (0+255)
  1575  08C5  160A  118A  24B4  120A  158A  	fcall	_sprintf
  1576  08CA                     l4501:
  1577                           
  1578                           ;main.c: 164:       Lcd_Write_String(f1);
  1579  08CA  309A               	movlw	(low (_f1| (0+256)))& (0+255)
  1580  08CB  1283               	bcf	3,5	;RP0=0, select bank0
  1581  08CC  1303               	bcf	3,6	;RP1=0, select bank0
  1582  08CD  00A0               	movwf	Lcd_Write_String@a
  1583  08CE  3001               	movlw	1
  1584  08CF  00A1               	movwf	Lcd_Write_String@a+1
  1585  08D0  160A  158A  22AA  120A  158A  	fcall	_Lcd_Write_String
  1586  08D5                     l4503:
  1587                           
  1588                           ;main.c: 166:       if(PIR1bits.TXIF){
  1589  08D5  1283               	bcf	3,5	;RP0=0, select bank0
  1590  08D6  1303               	bcf	3,6	;RP1=0, select bank0
  1591  08D7  1E0C               	btfss	12,4	;volatile
  1592  08D8  28DA               	goto	u7781
  1593  08D9  28DB               	goto	u7780
  1594  08DA                     u7781:
  1595  08DA  2901               	goto	l4511
  1596  08DB                     u7780:
  1597  08DB                     l4505:
  1598                           
  1599                           ;main.c: 168:         if (bmenu == 1){
  1600  08DB  1683               	bsf	3,5	;RP0=1, select bank1
  1601  08DC  1303               	bcf	3,6	;RP1=0, select bank1
  1602  08DD  0367               	decf	_bmenu^(0+128),w
  1603  08DE  1D03               	btfss	3,2
  1604  08DF  28E1               	goto	u7791
  1605  08E0  28E2               	goto	u7790
  1606  08E1                     u7791:
  1607  08E1  28FE               	goto	l4509
  1608  08E2                     u7790:
  1609  08E2                     l4507:
  1610                           
  1611                           ;main.c: 169:             TXREG = 12;
  1612  08E2  300C               	movlw	12
  1613  08E3  1283               	bcf	3,5	;RP0=0, select bank0
  1614  08E4  1303               	bcf	3,6	;RP1=0, select bank0
  1615  08E5  0099               	movwf	25	;volatile
  1616                           
  1617                           ;main.c: 170:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1618  08E6  3003               	movlw	3
  1619  08E7  1683               	bsf	3,5	;RP0=1, select bank1
  1620  08E8  1303               	bcf	3,6	;RP1=0, select bank1
  1621  08E9  00D6               	movwf	(??_main^(0+128)+1)
  1622  08EA  3097               	movlw	151
  1623  08EB  00D5               	movwf	??_main^(0+128)
  1624  08EC                     u7827:
  1625  08EC  0BD5               	decfsz	??_main^(0+128),f
  1626  08ED  28EC               	goto	u7827
  1627  08EE  0BD6               	decfsz	(??_main^(0+128)+1),f
  1628  08EF  28EC               	goto	u7827
  1629                           
  1630                           ;main.c: 171:             TXREG = f1;
  1631  08F0  309A               	movlw	(low _f1)& (0+255)
  1632  08F1  1283               	bcf	3,5	;RP0=0, select bank0
  1633  08F2  1303               	bcf	3,6	;RP1=0, select bank0
  1634  08F3  0099               	movwf	25	;volatile
  1635                           
  1636                           ;main.c: 172:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1637  08F4  3003               	movlw	3
  1638  08F5  1683               	bsf	3,5	;RP0=1, select bank1
  1639  08F6  1303               	bcf	3,6	;RP1=0, select bank1
  1640  08F7  00D6               	movwf	(??_main^(0+128)+1)
  1641  08F8  3097               	movlw	151
  1642  08F9  00D5               	movwf	??_main^(0+128)
  1643  08FA                     u7837:
  1644  08FA  0BD5               	decfsz	??_main^(0+128),f
  1645  08FB  28FA               	goto	u7837
  1646  08FC  0BD6               	decfsz	(??_main^(0+128)+1),f
  1647  08FD  28FA               	goto	u7837
  1648  08FE                     l4509:
  1649                           
  1650                           ;main.c: 174:             bmenu = 0;
  1651  08FE  1683               	bsf	3,5	;RP0=1, select bank1
  1652  08FF  1303               	bcf	3,6	;RP1=0, select bank1
  1653  0900  01E7               	clrf	_bmenu^(0+128)
  1654  0901                     l4511:
  1655                           
  1656                           ;main.c: 178:       _delay((unsigned long)((100)*(8000000/4000.0)));
  1657  0901  3002               	movlw	2
  1658  0902  1683               	bsf	3,5	;RP0=1, select bank1
  1659  0903  1303               	bcf	3,6	;RP1=0, select bank1
  1660  0904  00D7               	movwf	(??_main^(0+128)+2)
  1661  0905  3004               	movlw	4
  1662  0906  00D6               	movwf	(??_main^(0+128)+1)
  1663  0907  30B9               	movlw	185
  1664  0908  00D5               	movwf	??_main^(0+128)
  1665  0909                     u7847:
  1666  0909  0BD5               	decfsz	??_main^(0+128),f
  1667  090A  2909               	goto	u7847
  1668  090B  0BD6               	decfsz	(??_main^(0+128)+1),f
  1669  090C  2909               	goto	u7847
  1670  090D  0BD7               	decfsz	(??_main^(0+128)+2),f
  1671  090E  2909               	goto	u7847
  1672  090F  2910               	nop2
  1673  0910                     l4513:
  1674                           
  1675                           ;main.c: 180:       if(ADCON0bits.GO == 0){
  1676  0910  1283               	bcf	3,5	;RP0=0, select bank0
  1677  0911  1303               	bcf	3,6	;RP1=0, select bank0
  1678  0912  189F               	btfsc	31,1	;volatile
  1679  0913  2915               	goto	u7801
  1680  0914  2916               	goto	u7800
  1681  0915                     u7801:
  1682  0915  2826               	goto	l4485
  1683  0916                     u7800:
  1684  0916                     l4515:
  1685                           
  1686                           ;main.c: 181:         if (ADCON0bits.CHS == 5){
  1687  0916  0C1F               	rrf	31,w	;volatile
  1688  0917  1683               	bsf	3,5	;RP0=1, select bank1
  1689  0918  1303               	bcf	3,6	;RP1=0, select bank1
  1690  0919  00D5               	movwf	??_main^(0+128)
  1691  091A  0C55               	rrf	??_main^(0+128),w
  1692  091B  390F               	andlw	15
  1693  091C  3A05               	xorlw	5
  1694  091D  1D03               	skipz
  1695  091E  2920               	goto	u7811
  1696  091F  2921               	goto	u7810
  1697  0920                     u7811:
  1698  0920  2928               	goto	l4519
  1699  0921                     u7810:
  1700  0921                     l4517:
  1701                           
  1702                           ;main.c: 182:             ADCON0bits.CHS = 6;
  1703  0921  1283               	bcf	3,5	;RP0=0, select bank0
  1704  0922  1303               	bcf	3,6	;RP1=0, select bank0
  1705  0923  081F               	movf	31,w	;volatile
  1706  0924  39C3               	andlw	-61
  1707  0925  3818               	iorlw	24
  1708  0926  009F               	movwf	31	;volatile
  1709                           
  1710                           ;main.c: 183:         }
  1711  0927  292E               	goto	l4521
  1712  0928                     l4519:
  1713                           
  1714                           ;main.c: 185:             ADCON0bits.CHS = 5;
  1715  0928  1283               	bcf	3,5	;RP0=0, select bank0
  1716  0929  1303               	bcf	3,6	;RP1=0, select bank0
  1717  092A  081F               	movf	31,w	;volatile
  1718  092B  39C3               	andlw	-61
  1719  092C  3814               	iorlw	20
  1720  092D  009F               	movwf	31	;volatile
  1721  092E                     l4521:
  1722                           
  1723                           ;main.c: 187:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  1724  092E  3020               	movlw	32
  1725  092F  1683               	bsf	3,5	;RP0=1, select bank1
  1726  0930  1303               	bcf	3,6	;RP1=0, select bank1
  1727  0931  00D5               	movwf	??_main^(0+128)
  1728  0932                     u7857:
  1729  0932  0BD5               	decfsz	??_main^(0+128),f
  1730  0933  2932               	goto	u7857
  1731  0934  0000               	nop
  1732  0935                     l4523:
  1733                           
  1734                           ;main.c: 188:         ADCON0bits.GO = 1;
  1735  0935  1283               	bcf	3,5	;RP0=0, select bank0
  1736  0936  1303               	bcf	3,6	;RP1=0, select bank0
  1737  0937  149F               	bsf	31,1	;volatile
  1738  0938  2826               	goto	l4485
  1739  0939  120A  118A  280C   	ljmp	start
  1740  093C                     __end_of_main:
  1741                           
  1742                           	psect	text1
  1743  14B4                     __ptext1:	
  1744 ;; *************** function _sprintf *****************
  1745 ;; Defined at:
  1746 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  sp              1    wreg     PTR unsigned char 
  1749 ;;		 -> f1(10), 
  1750 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1751 ;;		 -> STR_2(21), 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  sp              1   49[BANK1 ] PTR unsigned char 
  1754 ;;		 -> f1(10), 
  1755 ;;  fval            4   45[BANK1 ] PTR unsigned char 
  1756 ;;  tmpval          4   39[BANK1 ] struct .
  1757 ;;  val             4   31[BANK1 ] unsigned long 
  1758 ;;  prec            2   50[BANK1 ] int 
  1759 ;;  eexp            2   43[BANK1 ] int 
  1760 ;;  width           2   37[BANK1 ] int 
  1761 ;;  flag            2   35[BANK1 ] unsigned short 
  1762 ;;  cp              2    0        PTR const unsigned char 
  1763 ;;  len             2    0        unsigned int 
  1764 ;;  c               1   52[BANK1 ] unsigned char 
  1765 ;;  ap              1   30[BANK1 ] PTR void [1]
  1766 ;;		 -> ?_sprintf(2), 
  1767 ;;  d               1    0        unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  2    8[BANK1 ] int 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1777 ;;      Params:         0       0      13       0       0
  1778 ;;      Locals:         0       0      27       0       0
  1779 ;;      Temps:          0       0       5       0       0
  1780 ;;      Totals:         0       0      45       0       0
  1781 ;;Total ram usage:       45 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    5
  1784 ;; This function calls:
  1785 ;;		___awdiv
  1786 ;;		___fladd
  1787 ;;		___fleq
  1788 ;;		___flge
  1789 ;;		___flmul
  1790 ;;		___flneg
  1791 ;;		___flsub
  1792 ;;		___fltol
  1793 ;;		___lldiv
  1794 ;;		___llmod
  1795 ;;		___wmul
  1796 ;;		___xxtofl
  1797 ;;		__div_to_l_
  1798 ;;		__tdiv_to_l_
  1799 ;;		_fround
  1800 ;;		_isdigit
  1801 ;;		_scale
  1802 ;; This function is called by:
  1803 ;;		_main
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           
  1808                           ;psect for function _sprintf
  1809  14B4                     _sprintf:
  1810                           
  1811                           ;incstack = 0
  1812                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1813                           ;sprintf@sp stored from wreg
  1814  14B4  1683               	bsf	3,5	;RP0=1, select bank1
  1815  14B5  1303               	bcf	3,6	;RP1=0, select bank1
  1816  14B6  00D1               	movwf	sprintf@sp^(0+128)
  1817  14B7                     l4211:
  1818                           
  1819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
=======
   395  010D                     	;# 
   396  010E                     	;# 
   397  010F                     	;# 
   398  0185                     	;# 
   399  0187                     	;# 
   400  0188                     	;# 
   401  0189                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404                           
   405                           	psect	strings
   406  1800                     __pstrings:
   407  1800                     stringtab:
   408  1800                     __stringtab:
   409                           
   410                           ;	String table - string pointers are 1 byte each
   411  1800  1BFF               	btfsc	btemp+1,7
   412  1801  280A               	ljmp	stringcode
   413  1802  1383               	bcf	3,7
   414  1803  187F               	btfsc	btemp+1,0
   415  1804  1783               	bsf	3,7
   416  1805  0800               	movf	0,w
   417  1806  0A84               	incf	4,f
   418  1807  1903               	skipnz
   419  1808  0AFF               	incf	btemp+1,f
   420  1809  0008               	return
   421  180A                     stringcode:
   422  180A                     stringdir:
   423  180A  3018               	movlw	high stringdir
   424  180B  008A               	movwf	10
   425  180C  0804               	movf	4,w
   426  180D  0A84               	incf	4,f
   427  180E  0782               	addwf	2,f
   428  180F                     __stringbase:
   429  180F  3400               	retlw	0
   430  1810                     __end_of__stringtab:
   431  1810                     __powers_:
   432  1810  3400               	retlw	0
   433  1811  3400               	retlw	0
   434  1812  3480               	retlw	128
   435  1813  343F               	retlw	63
   436  1814  3400               	retlw	0
   437  1815  3400               	retlw	0
   438  1816  3420               	retlw	32
   439  1817  3441               	retlw	65
   440  1818  3400               	retlw	0
   441  1819  3400               	retlw	0
   442  181A  34C8               	retlw	200
   443  181B  3442               	retlw	66
   444  181C  3400               	retlw	0
   445  181D  3400               	retlw	0
   446  181E  347A               	retlw	122
   447  181F  3444               	retlw	68
   448  1820  3400               	retlw	0
   449  1821  3440               	retlw	64
   450  1822  341C               	retlw	28
   451  1823  3446               	retlw	70
   452  1824  3400               	retlw	0
   453  1825  3450               	retlw	80
   454  1826  34C3               	retlw	195
   455  1827  3447               	retlw	71
   456  1828  3400               	retlw	0
   457  1829  3424               	retlw	36
   458  182A  3474               	retlw	116
   459  182B  3449               	retlw	73
   460  182C  3480               	retlw	128
   461  182D  3496               	retlw	150
   462  182E  3418               	retlw	24
   463  182F  344B               	retlw	75
   464  1830  3420               	retlw	32
   465  1831  34BC               	retlw	188
   466  1832  34BE               	retlw	190
   467  1833  344C               	retlw	76
   468  1834  3428               	retlw	40
   469  1835  346B               	retlw	107
   470  1836  346E               	retlw	110
   471  1837  344E               	retlw	78
   472  1838  34F9               	retlw	249
   473  1839  3402               	retlw	2
   474  183A  3415               	retlw	21
   475  183B  3450               	retlw	80
   476  183C  34EC               	retlw	236
   477  183D  3478               	retlw	120
   478  183E  34AD               	retlw	173
   479  183F  3460               	retlw	96
   480  1840  34CA               	retlw	202
   481  1841  34F2               	retlw	242
   482  1842  3449               	retlw	73
   483  1843  3471               	retlw	113
   484  1844                     __end_of__powers_:
   485  1844                     __npowers_:
   486  1844  3400               	retlw	0
   487  1845  3400               	retlw	0
   488  1846  3480               	retlw	128
   489  1847  343F               	retlw	63
   490  1848  34CD               	retlw	205
   491  1849  34CC               	retlw	204
   492  184A  34CC               	retlw	204
   493  184B  343D               	retlw	61
   494  184C  340A               	retlw	10
   495  184D  34D7               	retlw	215
   496  184E  3423               	retlw	35
   497  184F  343C               	retlw	60
   498  1850  346F               	retlw	111
   499  1851  3412               	retlw	18
   500  1852  3483               	retlw	131
   501  1853  343A               	retlw	58
   502  1854  3417               	retlw	23
   503  1855  34B7               	retlw	183
   504  1856  34D1               	retlw	209
   505  1857  3438               	retlw	56
   506  1858  34AC               	retlw	172
   507  1859  34C5               	retlw	197
   508  185A  3427               	retlw	39
   509  185B  3437               	retlw	55
   510  185C  34BD               	retlw	189
   511  185D  3437               	retlw	55
   512  185E  3486               	retlw	134
   513  185F  3435               	retlw	53
   514  1860  3495               	retlw	149
   515  1861  34BF               	retlw	191
   516  1862  34D6               	retlw	214
   517  1863  3433               	retlw	51
   518  1864  3477               	retlw	119
   519  1865  34CC               	retlw	204
   520  1866  342B               	retlw	43
   521  1867  3432               	retlw	50
   522  1868  345F               	retlw	95
   523  1869  3470               	retlw	112
   524  186A  3489               	retlw	137
   525  186B  3430               	retlw	48
   526  186C  34FF               	retlw	255
   527  186D  34E6               	retlw	230
   528  186E  34DB               	retlw	219
   529  186F  342E               	retlw	46
   530  1870  3408               	retlw	8
   531  1871  34E5               	retlw	229
   532  1872  343C               	retlw	60
   533  1873  341E               	retlw	30
   534  1874  3460               	retlw	96
   535  1875  3442               	retlw	66
   536  1876  34A2               	retlw	162
   537  1877  340D               	retlw	13
   538  1878                     __end_of__npowers_:
   539  1878                     _dpowers:
   540  1878  3401               	retlw	1
   541  1879  3400               	retlw	0
   542  187A  3400               	retlw	0
   543  187B  3400               	retlw	0
   544  187C  340A               	retlw	10
   545  187D  3400               	retlw	0
   546  187E  3400               	retlw	0
   547  187F  3400               	retlw	0
   548  1880  3464               	retlw	100
   549  1881  3400               	retlw	0
   550  1882  3400               	retlw	0
   551  1883  3400               	retlw	0
   552  1884  34E8               	retlw	232
   553  1885  3403               	retlw	3
   554  1886  3400               	retlw	0
   555  1887  3400               	retlw	0
   556  1888  3410               	retlw	16
   557  1889  3427               	retlw	39
   558  188A  3400               	retlw	0
   559  188B  3400               	retlw	0
   560  188C  34A0               	retlw	160
   561  188D  3486               	retlw	134
   562  188E  3401               	retlw	1
   563  188F  3400               	retlw	0
   564  1890  3440               	retlw	64
   565  1891  3442               	retlw	66
   566  1892  340F               	retlw	15
   567  1893  3400               	retlw	0
   568  1894  3480               	retlw	128
   569  1895  3496               	retlw	150
   570  1896  3498               	retlw	152
   571  1897  3400               	retlw	0
   572  1898  3400               	retlw	0
   573  1899  34E1               	retlw	225
   574  189A  34F5               	retlw	245
   575  189B  3405               	retlw	5
   576  189C  3400               	retlw	0
   577  189D  34CA               	retlw	202
   578  189E  349A               	retlw	154
   579  189F  343B               	retlw	59
   580  18A0                     __end_of_dpowers:
   581  0007                     _PORTCbits	set	7
   582  000B                     _INTCONbits	set	11
   583  0018                     _RCSTAbits	set	24
   584  0019                     _TXREG	set	25
   585  001E                     _ADRESH	set	30
   586  001F                     _ADCON0bits	set	31
   587  000C                     _PIR1bits	set	12
   588  0039                     _RC1	set	57
   589  0047                     _RD7	set	71
   590  0046                     _RD6	set	70
   591  0045                     _RD5	set	69
   592  0044                     _RD4	set	68
   593  0043                     _RD3	set	67
   594  0042                     _RD2	set	66
   595  0041                     _RD1	set	65
   596  0040                     _RD0	set	64
   597  0064                     _TXIF	set	100
   598  008C                     _PIE1bits	set	140
   599  009A                     _SPBRGH	set	154
   600  0099                     _SPBRG	set	153
   601  0098                     _TXSTAbits	set	152
   602  008F                     _OSCCONbits	set	143
   603  009F                     _ADCON1bits	set	159
   604  0089                     _TRISE	set	137
   605  0088                     _TRISD	set	136
   606  0085                     _TRISA	set	133
   607  0087                     _TRISC	set	135
   608  0086                     _TRISB	set	134
   609  0187                     _BAUDCTLbits	set	391
   610  0188                     _ANSEL	set	392
   611  0189                     _ANSELH	set	393
   612  18A0                     STR_1:
   613  18A0  3453               	retlw	83	;'S'
   614  18A1  3431               	retlw	49	;'1'
   615  18A2  343A               	retlw	58	;':'
   616  18A3  3420               	retlw	32	;' '
   617  18A4  3420               	retlw	32	;' '
   618  18A5  3420               	retlw	32	;' '
   619  18A6  3453               	retlw	83	;'S'
   620  18A7  3432               	retlw	50	;'2'
   621  18A8  343A               	retlw	58	;':'
   622  18A9  3420               	retlw	32	;' '
   623  18AA  3420               	retlw	32	;' '
   624  18AB  3420               	retlw	32	;' '
   625  18AC  3453               	retlw	83	;'S'
   626  18AD  3433               	retlw	51	;'3'
   627  18AE  343A               	retlw	58	;':'
   628  18AF  3400               	retlw	0
   629  18B0                     STR_2:
   630  18B0  3425               	retlw	37	;'%'
   631  18B1  3433               	retlw	51	;'3'
   632  18B2  342E               	retlw	46	;'.'
   633  18B3  3432               	retlw	50	;'2'
   634  18B4  3466               	retlw	102	;'f'
   635  18B5  3456               	retlw	86	;'V'
   636  18B6  3400               	retlw	0
   637                           
   638                           	psect	cinit
   639  000F                     start_initialization:	
   640                           ; #config settings
   641                           
   642  000F                     __initialization:
   643                           
   644                           ; Clear objects allocated to COMMON
   645  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   646                           
   647                           ; Clear objects allocated to BANK0
   648  0010  1283               	bcf	3,5	;RP0=0, select bank0
   649  0011  1303               	bcf	3,6	;RP1=0, select bank0
   650  0012  01EF               	clrf	__pbssBANK0& (0+127)
   651                           
   652                           ; Clear objects allocated to BANK1
   653  0013  1383               	bcf	3,7	;select IRP bank0
   654  0014  30CD               	movlw	low __pbssBANK1
   655  0015  0084               	movwf	4
   656  0016  30E4               	movlw	low (__pbssBANK1+23)
   657  0017  160A  158A  229F  120A  118A  	fcall	clear_ram0
   658  001C                     end_of_initialization:	
   659                           ;End of C runtime variable initialization code
   660                           
   661  001C                     __end_of__initialization:
   662  001C  0183               	clrf	3
   663  001D  120A  158A  2874   	ljmp	_main	;jump to C main() function
   664                           
   665                           	psect	bssCOMMON
   666  007A                     __pbssCOMMON:
   667  007A                     _val:
   668  007A                     	ds	1
   669                           
   670                           	psect	bssBANK0
   671  006F                     __pbssBANK0:
   672  006F                     _V1:
   673  006F                     	ds	1
   674                           
   675                           	psect	bssBANK1
   676  00CD                     __pbssBANK1:
   677  00CD                     _g:
   678  00CD                     	ds	4
   679  00D1                     _v22:
   680  00D1                     	ds	4
   681  00D5                     _v11:
   682  00D5                     	ds	4
   683  00D9                     _V2:
   684  00D9                     	ds	1
   685  00DA                     _f:
   686  00DA                     	ds	10
   687                           
   688                           	psect	clrtext
   689  1A9F                     clear_ram0:	
   690                           ;	Called with FSR containing the base address, and
   691                           ;	W with the last address+1
   692                           
   693  1A9F  0064               	clrwdt	;clear the watchdog before getting into this loop
   694  1AA0                     clrloop0:
   695  1AA0  0180               	clrf	0	;clear RAM location pointed to by FSR
   696  1AA1  0A84               	incf	4,f	;increment pointer
   697  1AA2  0604               	xorwf	4,w	;XOR with final address
   698  1AA3  1903               	btfsc	3,2	;have we reached the end yet?
   699  1AA4  3400               	retlw	0	;all done for this memory range, return
   700  1AA5  0604               	xorwf	4,w	;XOR again to restore value
   701  1AA6  2AA0               	goto	clrloop0	;do the next byte
   702                           
   703                           	psect	cstackBANK1
   704  00A0                     __pcstackBANK1:
   705  00A0                     ?___flsub:
   706  00A0                     ___flsub@a:	
   707                           ; 4 bytes @ 0x0
   708                           
   709                           
   710                           ; 4 bytes @ 0x0
   711  00A0                     	ds	4
   712  00A4                     ___flsub@b:
   713                           
   714                           ; 4 bytes @ 0x4
   715  00A4                     	ds	4
   716  00A8                     ?_sprintf:
   717  00A8                     sprintf@f:	
   718                           ; 2 bytes @ 0x8
   719                           
   720                           
   721                           ; 1 bytes @ 0x8
   722  00A8                     	ds	5
   723  00AD                     ??_sprintf:
   724                           
   725                           ; 1 bytes @ 0xD
   726  00AD                     	ds	5
   727  00B2                     _sprintf$1203:
   728                           
   729                           ; 4 bytes @ 0x12
   730  00B2                     	ds	4
   731  00B6                     sprintf@ap:
   732                           
   733                           ; 1 bytes @ 0x16
   734  00B6                     	ds	1
   735  00B7                     sprintf@val:
   736                           
   737                           ; 4 bytes @ 0x17
   738  00B7                     	ds	4
   739  00BB                     sprintf@flag:
   740                           
   741                           ; 2 bytes @ 0x1B
   742  00BB                     	ds	2
   743  00BD                     sprintf@width:
   744                           
   745                           ; 2 bytes @ 0x1D
   746  00BD                     	ds	2
   747  00BF                     sprintf@tmpval:
   748                           
   749                           ; 4 bytes @ 0x1F
   750  00BF                     	ds	4
   751  00C3                     sprintf@eexp:
   752                           
   753                           ; 2 bytes @ 0x23
   754  00C3                     	ds	2
   755  00C5                     sprintf@fval:
   756                           
   757                           ; 4 bytes @ 0x25
   758  00C5                     	ds	4
   759  00C9                     sprintf@sp:
   760                           
   761                           ; 1 bytes @ 0x29
   762  00C9                     	ds	1
   763  00CA                     sprintf@prec:
   764                           
   765                           ; 2 bytes @ 0x2A
   766  00CA                     	ds	2
   767  00CC                     sprintf@c:
   768                           
   769                           ; 1 bytes @ 0x2C
   770  00CC                     	ds	1
   771                           
   772                           	psect	cstackCOMMON
   773  0070                     __pcstackCOMMON:
   774  0070                     ?_isdigit:
   775  0070                     ?_int_adc:	
   776                           ; 1 bit 
   777                           
   778  0070                     ??_int_adc:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ?_cfg_io:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?_cfg_clk:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ?_cfg_inte:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     ?_cfg_adc:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     ?_cfg_usart:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0070                     ?_Lcd_Init:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ?_Lcd_Clear:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     ?_send_crct:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     ?_send_char:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ?_isr:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ?_main:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ?_Lcd_Port:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ?_Lcd_Cmd:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ?_Lcd_Write_Char:	
   821                           ; 1 bytes @ 0x0
   822                           
   823                           
   824                           ; 1 bytes @ 0x0
   825  0070                     	ds	1
   826  0071                     ??_isr:
   827                           
   828                           ; 1 bytes @ 0x1
   829  0071                     	ds	2
   830  0073                     ??_cfg_io:
   831  0073                     ??_cfg_clk:	
   832                           ; 1 bytes @ 0x3
   833                           
   834  0073                     ??_cfg_inte:	
   835                           ; 1 bytes @ 0x3
   836                           
   837  0073                     ??_cfg_adc:	
   838                           ; 1 bytes @ 0x3
   839                           
   840  0073                     ??_cfg_usart:	
   841                           ; 1 bytes @ 0x3
   842                           
   843  0073                     ??_send_char:	
   844                           ; 1 bytes @ 0x3
   845                           
   846  0073                     ??_isdigit:	
   847                           ; 1 bytes @ 0x3
   848                           
   849  0073                     ??__tdiv_to_l_:	
   850                           ; 1 bytes @ 0x3
   851                           
   852  0073                     ??__div_to_l_:	
   853                           ; 1 bytes @ 0x3
   854                           
   855  0073                     ??_Lcd_Port:	
   856                           ; 1 bytes @ 0x3
   857                           
   858  0073                     ??___lldiv:	
   859                           ; 1 bytes @ 0x3
   860                           
   861  0073                     ??___fleq:	
   862                           ; 1 bytes @ 0x3
   863                           
   864  0073                     ??___flge:	
   865                           ; 1 bytes @ 0x3
   866                           
   867  0073                     ??___llmod:	
   868                           ; 1 bytes @ 0x3
   869                           
   870  0073                     ?__Umul8_16:	
   871                           ; 1 bytes @ 0x3
   872                           
   873  0073                     ?___wmul:	
   874                           ; 2 bytes @ 0x3
   875                           
   876  0073                     ?___awmod:	
   877                           ; 2 bytes @ 0x3
   878                           
   879  0073                     ?___lwmod:	
   880                           ; 2 bytes @ 0x3
   881                           
   882  0073                     ?___flneg:	
   883                           ; 2 bytes @ 0x3
   884                           
   885  0073                     ?___xxtofl:	
   886                           ; 4 bytes @ 0x3
   887                           
   888  0073                     send_char@dato:	
   889                           ; 4 bytes @ 0x3
   890                           
   891  0073                     Lcd_Port@a:	
   892                           ; 1 bytes @ 0x3
   893                           
   894  0073                     __Umul8_16@multiplicand:	
   895                           ; 1 bytes @ 0x3
   896                           
   897  0073                     _isdigit$1016:	
   898                           ; 1 bytes @ 0x3
   899                           
   900  0073                     ___wmul@multiplier:	
   901                           ; 1 bytes @ 0x3
   902                           
   903  0073                     ___awmod@divisor:	
   904                           ; 2 bytes @ 0x3
   905                           
   906  0073                     ___lwmod@divisor:	
   907                           ; 2 bytes @ 0x3
   908                           
   909  0073                     ___flneg@f1:	
   910                           ; 2 bytes @ 0x3
   911                           
   912  0073                     ___xxtofl@val:	
   913                           ; 4 bytes @ 0x3
   914                           
   915                           
   916                           ; 4 bytes @ 0x3
   917  0073                     	ds	1
   918  0074                     ??_send_crct:
   919  0074                     ??_Lcd_Cmd:	
   920                           ; 1 bytes @ 0x4
   921                           
   922  0074                     ??_Lcd_Write_Char:	
   923                           ; 1 bytes @ 0x4
   924                           
   925  0074                     ___llmod@counter:	
   926                           ; 1 bytes @ 0x4
   927                           
   928  0074                     isdigit@c:	
   929                           ; 1 bytes @ 0x4
   930                           
   931  0074                     ___lldiv@quotient:	
   932                           ; 1 bytes @ 0x4
   933                           
   934  0074                     __div_to_l_@quot:	
   935                           ; 4 bytes @ 0x4
   936                           
   937                           
   938                           ; 4 bytes @ 0x4
   939  0074                     	ds	1
   940  0075                     ??__Umul8_16:
   941  0075                     Lcd_Write_Char@a:	
   942                           ; 1 bytes @ 0x5
   943                           
   944  0075                     send_crct@i:	
   945                           ; 1 bytes @ 0x5
   946                           
   947  0075                     ___wmul@multiplicand:	
   948                           ; 2 bytes @ 0x5
   949                           
   950  0075                     ___awmod@dividend:	
   951                           ; 2 bytes @ 0x5
   952                           
   953  0075                     ___lwmod@dividend:	
   954                           ; 2 bytes @ 0x5
   955                           
   956                           
   957                           ; 2 bytes @ 0x5
   958  0075                     	ds	1
   959  0076                     ?_Lcd_Write_String:
   960  0076                     Lcd_Cmd@a:	
   961                           ; 1 bytes @ 0x6
   962                           
   963  0076                     Lcd_Write_String@a:	
   964                           ; 1 bytes @ 0x6
   965                           
   966                           
   967                           ; 2 bytes @ 0x6
   968  0076                     	ds	1
   969  0077                     ??_Lcd_Init:
   970  0077                     ??_Lcd_Clear:	
   971                           ; 1 bytes @ 0x7
   972                           
   973  0077                     ?_Lcd_Set_Cursor:	
   974                           ; 1 bytes @ 0x7
   975                           
   976  0077                     ??___wmul:	
   977                           ; 1 bytes @ 0x7
   978                           
   979  0077                     ??___awmod:	
   980                           ; 1 bytes @ 0x7
   981                           
   982  0077                     ??___flneg:	
   983                           ; 1 bytes @ 0x7
   984                           
   985  0077                     ??___lwmod:	
   986                           ; 1 bytes @ 0x7
   987                           
   988  0077                     send_crct@st:	
   989                           ; 1 bytes @ 0x7
   990                           
   991  0077                     Lcd_Set_Cursor@b:	
   992                           ; 1 bytes @ 0x7
   993                           
   994  0077                     ___wmul@product:	
   995                           ; 1 bytes @ 0x7
   996                           
   997                           
   998                           ; 2 bytes @ 0x7
   999  0077                     	ds	1
  1000  0078                     ??_Lcd_Set_Cursor:
  1001  0078                     ___lldiv@counter:	
  1002                           ; 1 bytes @ 0x8
  1003                           
  1004  0078                     ___awmod@counter:	
  1005                           ; 1 bytes @ 0x8
  1006                           
  1007  0078                     __div_to_l_@cntr:	
  1008                           ; 1 bytes @ 0x8
  1009                           
  1010  0078                     ___lwmod@counter:	
  1011                           ; 1 bytes @ 0x8
  1012                           
  1013  0078                     Lcd_Write_String@i:	
  1014                           ; 1 bytes @ 0x8
  1015                           
  1016                           
  1017                           ; 2 bytes @ 0x8
  1018  0078                     	ds	1
  1019  0079                     ??___lwdiv:
  1020  0079                     ___awmod@sign:	
  1021                           ; 1 bytes @ 0x9
  1022                           
  1023  0079                     __div_to_l_@exp1:	
  1024                           ; 1 bytes @ 0x9
  1025                           
  1026                           
  1027                           ; 1 bytes @ 0x9
  1028  0079                     	ds	1
  1029  007A                     ??___flsub:
  1030                           
  1031                           	psect	cstackBANK0
  1032  0020                     __pcstackBANK0:	
  1033                           ; 1 bytes @ 0xA
  1034                           
  1035  0020                     ?___fleq:
  1036  0020                     ?___flge:	
  1037                           ; 1 bit 
  1038                           
  1039  0020                     ??_Lcd_Write_String:	
  1040                           ; 1 bit 
  1041                           
  1042  0020                     ??___xxtofl:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045  0020                     ?___awdiv:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048  0020                     ?___lwdiv:	
  1049                           ; 2 bytes @ 0x0
  1050                           
  1051  0020                     ?__tdiv_to_l_:	
  1052                           ; 2 bytes @ 0x0
  1053                           
  1054  0020                     ?__div_to_l_:	
  1055                           ; 4 bytes @ 0x0
  1056                           
  1057  0020                     ?___lldiv:	
  1058                           ; 4 bytes @ 0x0
  1059                           
  1060  0020                     ?___llmod:	
  1061                           ; 4 bytes @ 0x0
  1062                           
  1063  0020                     Lcd_Set_Cursor@a:	
  1064                           ; 4 bytes @ 0x0
  1065                           
  1066  0020                     ___awdiv@divisor:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069  0020                     ___lwdiv@divisor:	
  1070                           ; 2 bytes @ 0x0
  1071                           
  1072  0020                     __Umul8_16@product:	
  1073                           ; 2 bytes @ 0x0
  1074                           
  1075  0020                     ___lldiv@divisor:	
  1076                           ; 2 bytes @ 0x0
  1077                           
  1078  0020                     __div_to_l_@f1:	
  1079                           ; 4 bytes @ 0x0
  1080                           
  1081  0020                     ___fleq@ff1:	
  1082                           ; 4 bytes @ 0x0
  1083                           
  1084  0020                     ___flge@ff1:	
  1085                           ; 4 bytes @ 0x0
  1086                           
  1087  0020                     __tdiv_to_l_@f1:	
  1088                           ; 4 bytes @ 0x0
  1089                           
  1090  0020                     ___llmod@divisor:	
  1091                           ; 4 bytes @ 0x0
  1092                           
  1093                           
  1094                           ; 4 bytes @ 0x0
  1095  0020                     	ds	1
  1096  0021                     Lcd_Set_Cursor@temp:
  1097                           
  1098                           ; 1 bytes @ 0x1
  1099  0021                     	ds	1
  1100  0022                     ___awdiv@dividend:
  1101  0022                     ___lwdiv@dividend:	
  1102                           ; 2 bytes @ 0x2
  1103                           
  1104  0022                     __Umul8_16@word_mpld:	
  1105                           ; 2 bytes @ 0x2
  1106                           
  1107                           
  1108                           ; 2 bytes @ 0x2
  1109  0022                     	ds	2
  1110  0024                     ??___awdiv:
  1111  0024                     __Umul8_16@multiplier:	
  1112                           ; 1 bytes @ 0x4
  1113                           
  1114  0024                     ___xxtofl@sign:	
  1115                           ; 1 bytes @ 0x4
  1116                           
  1117  0024                     ___lwdiv@quotient:	
  1118                           ; 1 bytes @ 0x4
  1119                           
  1120  0024                     ___lldiv@dividend:	
  1121                           ; 2 bytes @ 0x4
  1122                           
  1123  0024                     __div_to_l_@f2:	
  1124                           ; 4 bytes @ 0x4
  1125                           
  1126  0024                     ___fleq@ff2:	
  1127                           ; 4 bytes @ 0x4
  1128                           
  1129  0024                     ___flge@ff2:	
  1130                           ; 4 bytes @ 0x4
  1131                           
  1132  0024                     __tdiv_to_l_@f2:	
  1133                           ; 4 bytes @ 0x4
  1134                           
  1135  0024                     ___llmod@dividend:	
  1136                           ; 4 bytes @ 0x4
  1137                           
  1138                           
  1139                           ; 4 bytes @ 0x4
  1140  0024                     	ds	1
  1141  0025                     ___awdiv@counter:
  1142  0025                     ___xxtofl@exp:	
  1143                           ; 1 bytes @ 0x5
  1144                           
  1145                           
  1146                           ; 1 bytes @ 0x5
  1147  0025                     	ds	1
  1148  0026                     ___awdiv@sign:
  1149  0026                     ___lwdiv@counter:	
  1150                           ; 1 bytes @ 0x6
  1151                           
  1152  0026                     ___xxtofl@arg:	
  1153                           ; 1 bytes @ 0x6
  1154                           
  1155                           
  1156                           ; 4 bytes @ 0x6
  1157  0026                     	ds	1
  1158  0027                     ___awdiv@quotient:
  1159                           
  1160                           ; 2 bytes @ 0x7
  1161  0027                     	ds	1
  1162  0028                     __tdiv_to_l_@quot:
  1163                           
  1164                           ; 4 bytes @ 0x8
  1165  0028                     	ds	2
  1166  002A                     ?___flmul:
  1167  002A                     ___flmul@b:	
  1168                           ; 4 bytes @ 0xA
  1169                           
  1170                           
  1171                           ; 4 bytes @ 0xA
  1172  002A                     	ds	2
  1173  002C                     __tdiv_to_l_@cntr:
  1174                           
  1175                           ; 1 bytes @ 0xC
  1176  002C                     	ds	1
  1177  002D                     __tdiv_to_l_@exp1:
  1178                           
  1179                           ; 1 bytes @ 0xD
  1180  002D                     	ds	1
  1181  002E                     ___flmul@a:
  1182                           
  1183                           ; 4 bytes @ 0xE
  1184  002E                     	ds	4
  1185  0032                     ??___flmul:
  1186                           
  1187                           ; 1 bytes @ 0x12
  1188  0032                     	ds	5
  1189  0037                     ___flmul@sign:
  1190                           
  1191                           ; 1 bytes @ 0x17
  1192  0037                     	ds	1
  1193  0038                     ___flmul@grs:
  1194                           
  1195                           ; 4 bytes @ 0x18
  1196  0038                     	ds	4
  1197  003C                     ___flmul@aexp:
  1198                           
  1199                           ; 1 bytes @ 0x1C
  1200  003C                     	ds	1
  1201  003D                     ___flmul@bexp:
  1202                           
  1203                           ; 1 bytes @ 0x1D
  1204  003D                     	ds	1
  1205  003E                     ___flmul@prod:
  1206                           
  1207                           ; 4 bytes @ 0x1E
  1208  003E                     	ds	4
  1209  0042                     ___flmul@temp:
  1210                           
  1211                           ; 2 bytes @ 0x22
  1212  0042                     	ds	2
  1213  0044                     ?_conv:
  1214  0044                     ?_fround:	
  1215                           ; 4 bytes @ 0x24
  1216                           
  1217  0044                     ?_scale:	
  1218                           ; 4 bytes @ 0x24
  1219                           
  1220                           
  1221                           ; 4 bytes @ 0x24
  1222  0044                     	ds	4
  1223  0048                     ??_conv:
  1224  0048                     ??_fround:	
  1225                           ; 1 bytes @ 0x28
  1226                           
  1227  0048                     ??_scale:	
  1228                           ; 1 bytes @ 0x28
  1229                           
  1230                           
  1231                           ; 1 bytes @ 0x28
  1232  0048                     	ds	4
  1233  004C                     conv@result:
  1234                           
  1235                           ; 4 bytes @ 0x2C
  1236  004C                     	ds	3
  1237  004F                     _fround$1201:
  1238                           
  1239                           ; 4 bytes @ 0x2F
  1240  004F                     	ds	1
  1241  0050                     conv@aa:
  1242                           
  1243                           ; 1 bytes @ 0x30
  1244  0050                     	ds	2
  1245  0052                     _scale$1202:
  1246                           
  1247                           ; 4 bytes @ 0x32
  1248  0052                     	ds	1
  1249  0053                     _fround$1200:
  1250                           
  1251                           ; 4 bytes @ 0x33
  1252  0053                     	ds	3
  1253  0056                     scale@scl:
  1254                           
  1255                           ; 1 bytes @ 0x36
  1256  0056                     	ds	1
  1257  0057                     ?___fltol:
  1258  0057                     fround@prec:	
  1259                           ; 4 bytes @ 0x37
  1260                           
  1261  0057                     ___fltol@f1:	
  1262                           ; 1 bytes @ 0x37
  1263                           
  1264                           
  1265                           ; 4 bytes @ 0x37
  1266  0057                     	ds	1
  1267  0058                     ?___fladd:
  1268  0058                     ___fladd@b:	
  1269                           ; 4 bytes @ 0x38
  1270                           
  1271                           
  1272                           ; 4 bytes @ 0x38
  1273  0058                     	ds	3
  1274  005B                     ??___fltol:
  1275                           
  1276                           ; 1 bytes @ 0x3B
  1277  005B                     	ds	1
  1278  005C                     ___fladd@a:
  1279                           
  1280                           ; 4 bytes @ 0x3C
  1281  005C                     	ds	4
  1282  0060                     ??___fladd:
  1283  0060                     ___fltol@sign1:	
  1284                           ; 1 bytes @ 0x40
  1285                           
  1286                           
  1287                           ; 1 bytes @ 0x40
  1288  0060                     	ds	1
  1289  0061                     ___fltol@exp1:
  1290                           
  1291                           ; 1 bytes @ 0x41
  1292  0061                     	ds	7
  1293  0068                     ___fladd@signs:
  1294                           
  1295                           ; 1 bytes @ 0x48
  1296  0068                     	ds	1
  1297  0069                     ___fladd@aexp:
  1298                           
  1299                           ; 1 bytes @ 0x49
  1300  0069                     	ds	1
  1301  006A                     ___fladd@bexp:
  1302                           
  1303                           ; 1 bytes @ 0x4A
  1304  006A                     	ds	1
  1305  006B                     ___fladd@grs:
  1306                           
  1307                           ; 1 bytes @ 0x4B
  1308  006B                     	ds	1
  1309  006C                     ??_main:
  1310                           
  1311                           ; 1 bytes @ 0x4C
  1312  006C                     	ds	3
  1313                           
  1314                           	psect	maintext
  1315  0874                     __pmaintext:	
  1316 ;;
  1317 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1318 ;;
  1319 ;; *************** function _main *****************
  1320 ;; Defined at:
  1321 ;;		line 110 in file "main.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : B00/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         0       0       0       0       0
  1336 ;;      Locals:         0       0       0       0       0
  1337 ;;      Temps:          0       3       0       0       0
  1338 ;;      Totals:         0       3       0       0       0
  1339 ;;Total ram usage:        3 bytes
  1340 ;; Hardware stack levels required when called:    6
  1341 ;; This function calls:
  1342 ;;		_Lcd_Clear
  1343 ;;		_Lcd_Init
  1344 ;;		_Lcd_Set_Cursor
  1345 ;;		_Lcd_Write_String
  1346 ;;		_cfg_adc
  1347 ;;		_cfg_clk
  1348 ;;		_cfg_inte
  1349 ;;		_cfg_io
  1350 ;;		_cfg_usart
  1351 ;;		_conv
  1352 ;;		_send_crct
  1353 ;;		_sprintf
  1354 ;; This function is called by:
  1355 ;;		Startup code after reset
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           
  1360                           ;psect for function _main
  1361  0874                     _main:
  1362  0874                     l4282:	
  1363                           ;incstack = 0
  1364                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1365                           
  1366                           
  1367                           ;main.c: 111:     cfg_io();
  1368  0874  160A  118A  2001  120A  158A  	fcall	_cfg_io
  1369                           
  1370                           ;main.c: 112:     cfg_clk();
  1371  0879  160A  158A  2297  120A  158A  	fcall	_cfg_clk
  1372  087E                     l4284:
  1373                           
  1374                           ;main.c: 113:     cfg_inte();
  1375  087E  160A  158A  2291  120A  158A  	fcall	_cfg_inte
  1376  0883                     l4286:
  1377                           
  1378                           ;main.c: 114:     cfg_adc();
  1379  0883  160A  158A  22F7  120A  158A  	fcall	_cfg_adc
  1380  0888                     l4288:
  1381                           
  1382                           ;main.c: 115:     cfg_usart();
  1383  0888  160A  158A  22E2  120A  158A  	fcall	_cfg_usart
  1384  088D                     l4290:
  1385                           
  1386                           ;main.c: 118:   Lcd_Init();
  1387  088D  160A  158A  24DF  120A  158A  	fcall	_Lcd_Init
  1388  0892                     l4292:
  1389                           
  1390                           ;main.c: 119:   ADCON0bits.GO = 1;
  1391  0892  1283               	bcf	3,5	;RP0=0, select bank0
  1392  0893  1303               	bcf	3,6	;RP1=0, select bank0
  1393  0894  149F               	bsf	31,1	;volatile
  1394  0895                     l4294:
  1395                           
  1396                           ;main.c: 122:       Lcd_Clear();
  1397  0895  160A  158A  22B1  120A  158A  	fcall	_Lcd_Clear
  1398  089A                     l4296:
  1399                           
  1400                           ;main.c: 123:       Lcd_Set_Cursor(1,1);
  1401  089A  01F7               	clrf	Lcd_Set_Cursor@b
  1402  089B  0AF7               	incf	Lcd_Set_Cursor@b,f
  1403  089C  3001               	movlw	1
  1404  089D  160A  158A  2388  120A  158A  	fcall	_Lcd_Set_Cursor
  1405  08A2                     l4298:
  1406                           
  1407                           ;main.c: 124:       Lcd_Write_String("S1:   S2:   S3:");
  1408  08A2  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1409  08A3  00F6               	movwf	Lcd_Write_String@a
  1410  08A4  3080               	movlw	128
  1411  08A5  00F7               	movwf	Lcd_Write_String@a+1
  1412  08A6  160A  158A  2455  120A  158A  	fcall	_Lcd_Write_String
  1413  08AB                     l4300:
  1414                           
  1415                           ;main.c: 125:       v11 = conv(V1);
  1416  08AB  1283               	bcf	3,5	;RP0=0, select bank0
  1417  08AC  1303               	bcf	3,6	;RP1=0, select bank0
  1418  08AD  086F               	movf	_V1,w
  1419  08AE  160A  158A  2415  120A  158A  	fcall	_conv
  1420  08B3  1283               	bcf	3,5	;RP0=0, select bank0
  1421  08B4  1303               	bcf	3,6	;RP1=0, select bank0
  1422  08B5  0847               	movf	?_conv+3,w
  1423  08B6  1683               	bsf	3,5	;RP0=1, select bank1
  1424  08B7  1303               	bcf	3,6	;RP1=0, select bank1
  1425  08B8  00D8               	movwf	(_v11+3)^(0+128)
  1426  08B9  1283               	bcf	3,5	;RP0=0, select bank0
  1427  08BA  1303               	bcf	3,6	;RP1=0, select bank0
  1428  08BB  0846               	movf	?_conv+2,w
  1429  08BC  1683               	bsf	3,5	;RP0=1, select bank1
  1430  08BD  1303               	bcf	3,6	;RP1=0, select bank1
  1431  08BE  00D7               	movwf	(_v11+2)^(0+128)
  1432  08BF  1283               	bcf	3,5	;RP0=0, select bank0
  1433  08C0  1303               	bcf	3,6	;RP1=0, select bank0
  1434  08C1  0845               	movf	?_conv+1,w
  1435  08C2  1683               	bsf	3,5	;RP0=1, select bank1
  1436  08C3  1303               	bcf	3,6	;RP1=0, select bank1
  1437  08C4  00D6               	movwf	(_v11+1)^(0+128)
  1438  08C5  1283               	bcf	3,5	;RP0=0, select bank0
  1439  08C6  1303               	bcf	3,6	;RP1=0, select bank0
  1440  08C7  0844               	movf	?_conv,w
  1441  08C8  1683               	bsf	3,5	;RP0=1, select bank1
  1442  08C9  1303               	bcf	3,6	;RP1=0, select bank1
  1443  08CA  00D5               	movwf	_v11^(0+128)
  1444  08CB                     l4302:
  1445                           
  1446                           ;main.c: 126:       v22 = conv(V2);
  1447  08CB  0859               	movf	_V2^(0+128),w
  1448  08CC  160A  158A  2415  120A  158A  	fcall	_conv
  1449  08D1  1283               	bcf	3,5	;RP0=0, select bank0
  1450  08D2  1303               	bcf	3,6	;RP1=0, select bank0
  1451  08D3  0847               	movf	?_conv+3,w
  1452  08D4  1683               	bsf	3,5	;RP0=1, select bank1
  1453  08D5  1303               	bcf	3,6	;RP1=0, select bank1
  1454  08D6  00D4               	movwf	(_v22+3)^(0+128)
  1455  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  1456  08D8  1303               	bcf	3,6	;RP1=0, select bank0
  1457  08D9  0846               	movf	?_conv+2,w
  1458  08DA  1683               	bsf	3,5	;RP0=1, select bank1
  1459  08DB  1303               	bcf	3,6	;RP1=0, select bank1
  1460  08DC  00D3               	movwf	(_v22+2)^(0+128)
  1461  08DD  1283               	bcf	3,5	;RP0=0, select bank0
  1462  08DE  1303               	bcf	3,6	;RP1=0, select bank0
  1463  08DF  0845               	movf	?_conv+1,w
  1464  08E0  1683               	bsf	3,5	;RP0=1, select bank1
  1465  08E1  1303               	bcf	3,6	;RP1=0, select bank1
  1466  08E2  00D2               	movwf	(_v22+1)^(0+128)
  1467  08E3  1283               	bcf	3,5	;RP0=0, select bank0
  1468  08E4  1303               	bcf	3,6	;RP1=0, select bank0
  1469  08E5  0844               	movf	?_conv,w
  1470  08E6  1683               	bsf	3,5	;RP0=1, select bank1
  1471  08E7  1303               	bcf	3,6	;RP1=0, select bank1
  1472  08E8  00D1               	movwf	_v22^(0+128)
  1473  08E9                     l4304:
  1474                           
  1475                           ;main.c: 130:       Lcd_Set_Cursor(2,1);
  1476  08E9  01F7               	clrf	Lcd_Set_Cursor@b
  1477  08EA  0AF7               	incf	Lcd_Set_Cursor@b,f
  1478  08EB  3002               	movlw	2
  1479  08EC  160A  158A  2388  120A  158A  	fcall	_Lcd_Set_Cursor
  1480  08F1                     l4306:
  1481                           
  1482                           ;main.c: 131:       sprintf(f, "%3.2fV",v11);
  1483  08F1  30A1               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1484  08F2  1283               	bcf	3,5	;RP0=0, select bank0
  1485  08F3  1303               	bcf	3,6	;RP1=0, select bank0
  1486  08F4  00EC               	movwf	??_main
  1487  08F5  086C               	movf	??_main,w
  1488  08F6  1683               	bsf	3,5	;RP0=1, select bank1
  1489  08F7  1303               	bcf	3,6	;RP1=0, select bank1
  1490  08F8  00A8               	movwf	sprintf@f^(0+128)
  1491  08F9  0858               	movf	(_v11+3)^(0+128),w
  1492  08FA  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1493  08FB  0857               	movf	(_v11+2)^(0+128),w
  1494  08FC  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1495  08FD  0856               	movf	(_v11+1)^(0+128),w
  1496  08FE  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1497  08FF  0855               	movf	_v11^(0+128),w
  1498  0900  00A9               	movwf	(?_sprintf^(0+128)+1)
  1499  0901  30DA               	movlw	(low (_f| 0))& (0+255)
  1500  0902  160A  118A  24FC  120A  158A  	fcall	_sprintf
  1501  0907                     l4308:
  1502                           
  1503                           ;main.c: 132:       Lcd_Write_String(f);
  1504  0907  30DA               	movlw	(low (_f| 0))& (0+255)
  1505  0908  00F6               	movwf	Lcd_Write_String@a
  1506  0909  3000               	movlw	0
  1507  090A  00F7               	movwf	Lcd_Write_String@a+1
  1508  090B  160A  158A  2455  120A  158A  	fcall	_Lcd_Write_String
  1509  0910                     l4310:
  1510                           
  1511                           ;main.c: 136:       TXREG = '\f';
  1512  0910  300C               	movlw	12
  1513  0911  1283               	bcf	3,5	;RP0=0, select bank0
  1514  0912  1303               	bcf	3,6	;RP1=0, select bank0
  1515  0913  0099               	movwf	25	;volatile
  1516  0914                     l4312:
  1517                           
  1518                           ;main.c: 137:       send_crct(f);
  1519  0914  30DA               	movlw	(low (_f| 0))& (0+255)
  1520  0915  160A  158A  2342  120A  158A  	fcall	_send_crct
  1521  091A                     l4314:
  1522                           
  1523                           ;main.c: 139:       _delay((unsigned long)((2000)*(8000000/4000.0)));
  1524  091A  3015               	movlw	21
  1525  091B  1283               	bcf	3,5	;RP0=0, select bank0
  1526  091C  1303               	bcf	3,6	;RP1=0, select bank0
  1527  091D  00EE               	movwf	??_main+2
  1528  091E  304B               	movlw	75
  1529  091F  00ED               	movwf	??_main+1
  1530  0920  30BD               	movlw	189
  1531  0921  00EC               	movwf	??_main
  1532  0922                     u7307:
  1533  0922  0BEC               	decfsz	??_main,f
  1534  0923  2922               	goto	u7307
  1535  0924  0BED               	decfsz	??_main+1,f
  1536  0925  2922               	goto	u7307
  1537  0926  0BEE               	decfsz	??_main+2,f
  1538  0927  2922               	goto	u7307
  1539  0928  2929               	nop2
  1540  0929                     l4316:
  1541                           
  1542                           ;main.c: 141:       if(ADCON0bits.GO == 0){
  1543  0929  1283               	bcf	3,5	;RP0=0, select bank0
  1544  092A  1303               	bcf	3,6	;RP1=0, select bank0
  1545  092B  189F               	btfsc	31,1	;volatile
  1546  092C  292E               	goto	u7291
  1547  092D  292F               	goto	u7290
  1548  092E                     u7291:
  1549  092E  2939               	goto	l105
  1550  092F                     u7290:
  1551  092F                     l4318:
  1552                           
  1553                           ;main.c: 142:               _delay((unsigned long)((100)*(8000000/4000000.0)));
  1554  092F  3041               	movlw	65
  1555  0930  1283               	bcf	3,5	;RP0=0, select bank0
  1556  0931  1303               	bcf	3,6	;RP1=0, select bank0
  1557  0932  00EC               	movwf	??_main
  1558  0933                     u7317:
  1559  0933  0BEC               	decfsz	??_main,f
  1560  0934  2933               	goto	u7317
  1561  0935  2936               	nop2
  1562  0936                     l4320:
  1563                           
  1564                           ;main.c: 143:               ADCON0bits.GO = 1;
  1565  0936  1283               	bcf	3,5	;RP0=0, select bank0
  1566  0937  1303               	bcf	3,6	;RP1=0, select bank0
  1567  0938  149F               	bsf	31,1	;volatile
  1568  0939                     l105:
  1569  0939  120A  118A  280C   	ljmp	start
  1570  093C                     __end_of_main:
  1571                           
  1572                           	psect	text1
  1573  14FC                     __ptext1:	
  1574 ;; *************** function _sprintf *****************
  1575 ;; Defined at:
  1576 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  sp              1    wreg     PTR unsigned char 
  1579 ;;		 -> f(10), 
  1580 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1581 ;;		 -> STR_2(7), 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  sp              1   41[BANK1 ] PTR unsigned char 
  1584 ;;		 -> f(10), 
  1585 ;;  fval            4   37[BANK1 ] PTR unsigned char 
  1586 ;;  tmpval          4   31[BANK1 ] struct .
  1587 ;;  val             4   23[BANK1 ] unsigned long 
  1588 ;;  prec            2   42[BANK1 ] int 
  1589 ;;  eexp            2   35[BANK1 ] int 
  1590 ;;  width           2   29[BANK1 ] int 
  1591 ;;  flag            2   27[BANK1 ] unsigned short 
  1592 ;;  cp              2    0        PTR const unsigned char 
  1593 ;;  len             2    0        unsigned int 
  1594 ;;  c               1   44[BANK1 ] unsigned char 
  1595 ;;  ap              1   22[BANK1 ] PTR void [1]
  1596 ;;		 -> ?_sprintf(2), 
  1597 ;;  d               1    0        unsigned char 
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  2    8[BANK1 ] int 
  1600 ;; Registers used:
  1601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1607 ;;      Params:         0       0       5       0       0
  1608 ;;      Locals:         0       0      27       0       0
  1609 ;;      Temps:          0       0       5       0       0
  1610 ;;      Totals:         0       0      37       0       0
  1611 ;;Total ram usage:       37 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; Hardware stack levels required when called:    5
  1614 ;; This function calls:
  1615 ;;		___awdiv
  1616 ;;		___fladd
  1617 ;;		___fleq
  1618 ;;		___flge
  1619 ;;		___flmul
  1620 ;;		___flneg
  1621 ;;		___flsub
  1622 ;;		___fltol
  1623 ;;		___lldiv
  1624 ;;		___llmod
  1625 ;;		___wmul
  1626 ;;		___xxtofl
  1627 ;;		__div_to_l_
  1628 ;;		__tdiv_to_l_
  1629 ;;		_fround
  1630 ;;		_isdigit
  1631 ;;		_scale
  1632 ;; This function is called by:
  1633 ;;		_main
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           
  1638                           ;psect for function _sprintf
  1639  14FC                     _sprintf:
  1640                           
  1641                           ;incstack = 0
  1642                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1643                           ;sprintf@sp stored from wreg
  1644  14FC  1683               	bsf	3,5	;RP0=1, select bank1
  1645  14FD  1303               	bcf	3,6	;RP1=0, select bank1
  1646  14FE  00C9               	movwf	sprintf@sp^(0+128)
  1647  14FF                     l4020:
  1648                           
  1649                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
>>>>>>> parent of a4453d3 (Todo funciona menos último contador)
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
<<<<<<< HEAD
  1820  14B7  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1821  14B8  00B5               	movwf	??_sprintf^(0+128)
  1822  14B9  0835               	movf	??_sprintf^(0+128),w
  1823  14BA  00BE               	movwf	sprintf@ap^(0+128)
  1824  14BB                     L1:
  1825                           
  1826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1827  14BB  120A  118A  2DC9   	goto	l4461
  1828  14BE                     l4213:
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1831  14BE  3025               	movlw	37
  1832  14BF  0654               	xorwf	sprintf@c^(0+128),w
  1833  14C0  1903               	btfsc	3,2
  1834  14C1  2CC3               	goto	u7311
  1835  14C2  2CC4               	goto	u7310
  1836  14C3                     u7311:
  1837  14C3  2CD0               	goto	l4219
  1838  14C4                     u7310:
  1839  14C4                     l4215:
  1840                           
  1841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1842  14C4  0854               	movf	sprintf@c^(0+128),w
  1843  14C5  00B5               	movwf	??_sprintf^(0+128)
  1844  14C6  0851               	movf	sprintf@sp^(0+128),w
  1845  14C7  0084               	movwf	4
  1846  14C8  0835               	movf	??_sprintf^(0+128),w
  1847  14C9  1783               	bsf	3,7	;select IRP bank2
  1848  14CA  0080               	movwf	0
  1849  14CB                     l4217:
  1850  14CB  3001               	movlw	1
  1851  14CC  00B5               	movwf	??_sprintf^(0+128)
  1852  14CD  0835               	movf	??_sprintf^(0+128),w
  1853  14CE  07D1               	addwf	sprintf@sp^(0+128),f
  1854                           
  1855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1856  14CF  2CBB               	goto	L1
  1857  14D0                     l4219:
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1860  14D0  01C5               	clrf	sprintf@width^(0+128)
  1861  14D1  01C6               	clrf	(sprintf@width+1)^(0+128)
  1862                           
  1863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1864  14D2  01C3               	clrf	sprintf@flag^(0+128)
  1865  14D3  01C4               	clrf	(sprintf@flag+1)^(0+128)
  1866  14D4                     l4221:
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1869  14D4  0828               	movf	sprintf@f^(0+128),w
  1870  14D5  0084               	movwf	4
  1871  14D6  160A  118A  200A  160A  118A  	fcall	stringdir
  1872  14DB  160A  158A  20CF  160A  118A  	fcall	_isdigit
  1873  14E0  1C03               	btfss	3,0
  1874  14E1  2CE3               	goto	u7321
  1875  14E2  2CE4               	goto	u7320
  1876  14E3                     u7321:
  1877  14E3  2D32               	goto	l4233
  1878  14E4                     u7320:
  1879  14E4                     l4223:
  1880                           
  1881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1882  14E4  1683               	bsf	3,5	;RP0=1, select bank1
  1883  14E5  1303               	bcf	3,6	;RP1=0, select bank1
  1884  14E6  01C5               	clrf	sprintf@width^(0+128)
  1885  14E7  01C6               	clrf	(sprintf@width+1)^(0+128)
  1886  14E8                     l4225:
  1887                           
  1888                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1889  14E8  300A               	movlw	10
  1890  14E9  1283               	bcf	3,5	;RP0=0, select bank0
  1891  14EA  1303               	bcf	3,6	;RP1=0, select bank0
  1892  14EB  00A0               	movwf	___wmul@multiplier
  1893  14EC  3000               	movlw	0
  1894  14ED  00A1               	movwf	___wmul@multiplier+1
  1895  14EE  1683               	bsf	3,5	;RP0=1, select bank1
  1896  14EF  1303               	bcf	3,6	;RP1=0, select bank1
  1897  14F0  0846               	movf	(sprintf@width+1)^(0+128),w
  1898  14F1  1283               	bcf	3,5	;RP0=0, select bank0
  1899  14F2  1303               	bcf	3,6	;RP1=0, select bank0
  1900  14F3  00A3               	movwf	___wmul@multiplicand+1
  1901  14F4  1683               	bsf	3,5	;RP0=1, select bank1
  1902  14F5  1303               	bcf	3,6	;RP1=0, select bank1
  1903  14F6  0845               	movf	sprintf@width^(0+128),w
  1904  14F7  1283               	bcf	3,5	;RP0=0, select bank0
  1905  14F8  1303               	bcf	3,6	;RP1=0, select bank0
  1906  14F9  00A2               	movwf	___wmul@multiplicand
  1907  14FA  160A  158A  21A0  160A  118A  	fcall	___wmul
  1908  14FF  1283               	bcf	3,5	;RP0=0, select bank0
  1909  1500  1303               	bcf	3,6	;RP1=0, select bank0
  1910  1501  0821               	movf	?___wmul+1,w
  1911  1502  1683               	bsf	3,5	;RP0=1, select bank1
  1912  1503  1303               	bcf	3,6	;RP1=0, select bank1
  1913  1504  00C6               	movwf	(sprintf@width+1)^(0+128)
  1914  1505  1283               	bcf	3,5	;RP0=0, select bank0
  1915  1506  1303               	bcf	3,6	;RP1=0, select bank0
  1916  1507  0820               	movf	?___wmul,w
  1917  1508  1683               	bsf	3,5	;RP0=1, select bank1
  1918  1509  1303               	bcf	3,6	;RP1=0, select bank1
  1919  150A  00C5               	movwf	sprintf@width^(0+128)
  1920  150B                     l4227:
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1923  150B  0828               	movf	sprintf@f^(0+128),w
  1924  150C  0084               	movwf	4
  1925  150D  160A  118A  200A  160A  118A  	fcall	stringdir
  1926  1512  3ED0               	addlw	208
  1927  1513  00B5               	movwf	??_sprintf^(0+128)
  1928  1514  30FF               	movlw	255
  1929  1515  1803               	skipnc
  1930  1516  3000               	movlw	0
  1931  1517  00B6               	movwf	(??_sprintf^(0+128)+1)
  1932  1518  0835               	movf	??_sprintf^(0+128),w
  1933  1519  07C5               	addwf	sprintf@width^(0+128),f
  1934  151A  1803               	skipnc
  1935  151B  0AC6               	incf	(sprintf@width+1)^(0+128),f
  1936  151C  0836               	movf	(??_sprintf+1)^(0+128),w
  1937  151D  07C6               	addwf	(sprintf@width+1)^(0+128),f
  1938  151E                     l4229:
  1939  151E  3001               	movlw	1
  1940  151F  00B5               	movwf	??_sprintf^(0+128)
  1941  1520  0835               	movf	??_sprintf^(0+128),w
  1942  1521  07A8               	addwf	sprintf@f^(0+128),f
  1943  1522                     l4231:
  1944                           
  1945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1946  1522  0828               	movf	sprintf@f^(0+128),w
  1947  1523  0084               	movwf	4
  1948  1524  160A  118A  200A  160A  118A  	fcall	stringdir
  1949  1529  160A  158A  20CF  160A  118A  	fcall	_isdigit
  1950  152E  1803               	btfsc	3,0
  1951  152F  2D31               	goto	u7331
  1952  1530  2D32               	goto	u7330
  1953  1531                     u7331:
  1954  1531  2CE8               	goto	l4225
  1955  1532                     u7330:
  1956  1532                     l4233:
  1957                           
  1958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1959  1532  1683               	bsf	3,5	;RP0=1, select bank1
  1960  1533  1303               	bcf	3,6	;RP1=0, select bank1
  1961  1534  0828               	movf	sprintf@f^(0+128),w
  1962  1535  0084               	movwf	4
  1963  1536  160A  118A  200A  160A  118A  	fcall	stringdir
  1964  153B  3A2E               	xorlw	46
  1965  153C  1D03               	skipz
  1966  153D  2D3F               	goto	u7341
  1967  153E  2D40               	goto	u7340
  1968  153F                     u7341:
  1969  153F  2D93               	goto	l4249
  1970  1540                     u7340:
  1971  1540                     l4235:
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1974  1540  1744               	bsf	(sprintf@flag^(0+128)+1),6
  1975  1541                     l4237:
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1978  1541  3001               	movlw	1
  1979  1542  00B5               	movwf	??_sprintf^(0+128)
  1980  1543  0835               	movf	??_sprintf^(0+128),w
  1981  1544  07A8               	addwf	sprintf@f^(0+128),f
  1982  1545                     l4239:
  1983                           
  1984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1985  1545  01D2               	clrf	sprintf@prec^(0+128)
  1986  1546  01D3               	clrf	(sprintf@prec+1)^(0+128)
  1987                           
  1988                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1989  1547  2D82               	goto	l4247
  1990  1548                     l4241:
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1993  1548  300A               	movlw	10
  1994  1549  1283               	bcf	3,5	;RP0=0, select bank0
  1995  154A  1303               	bcf	3,6	;RP1=0, select bank0
  1996  154B  00A0               	movwf	___wmul@multiplier
  1997  154C  3000               	movlw	0
  1998  154D  00A1               	movwf	___wmul@multiplier+1
  1999  154E  1683               	bsf	3,5	;RP0=1, select bank1
  2000  154F  1303               	bcf	3,6	;RP1=0, select bank1
  2001  1550  0853               	movf	(sprintf@prec+1)^(0+128),w
  2002  1551  1283               	bcf	3,5	;RP0=0, select bank0
  2003  1552  1303               	bcf	3,6	;RP1=0, select bank0
  2004  1553  00A3               	movwf	___wmul@multiplicand+1
  2005  1554  1683               	bsf	3,5	;RP0=1, select bank1
  2006  1555  1303               	bcf	3,6	;RP1=0, select bank1
  2007  1556  0852               	movf	sprintf@prec^(0+128),w
  2008  1557  1283               	bcf	3,5	;RP0=0, select bank0
  2009  1558  1303               	bcf	3,6	;RP1=0, select bank0
  2010  1559  00A2               	movwf	___wmul@multiplicand
  2011  155A  160A  158A  21A0  160A  118A  	fcall	___wmul
  2012  155F  1283               	bcf	3,5	;RP0=0, select bank0
  2013  1560  1303               	bcf	3,6	;RP1=0, select bank0
  2014  1561  0821               	movf	?___wmul+1,w
  2015  1562  1683               	bsf	3,5	;RP0=1, select bank1
  2016  1563  1303               	bcf	3,6	;RP1=0, select bank1
  2017  1564  00D3               	movwf	(sprintf@prec+1)^(0+128)
  2018  1565  1283               	bcf	3,5	;RP0=0, select bank0
  2019  1566  1303               	bcf	3,6	;RP1=0, select bank0
  2020  1567  0820               	movf	?___wmul,w
  2021  1568  1683               	bsf	3,5	;RP0=1, select bank1
  2022  1569  1303               	bcf	3,6	;RP1=0, select bank1
  2023  156A  00D2               	movwf	sprintf@prec^(0+128)
  2024  156B                     l4243:
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2027  156B  0828               	movf	sprintf@f^(0+128),w
  2028  156C  0084               	movwf	4
  2029  156D  160A  118A  200A  160A  118A  	fcall	stringdir
  2030  1572  3ED0               	addlw	208
  2031  1573  00B5               	movwf	??_sprintf^(0+128)
  2032  1574  30FF               	movlw	255
  2033  1575  1803               	skipnc
  2034  1576  3000               	movlw	0
  2035  1577  00B6               	movwf	(??_sprintf^(0+128)+1)
  2036  1578  0835               	movf	??_sprintf^(0+128),w
  2037  1579  07D2               	addwf	sprintf@prec^(0+128),f
  2038  157A  1803               	skipnc
  2039  157B  0AD3               	incf	(sprintf@prec+1)^(0+128),f
  2040  157C  0836               	movf	(??_sprintf+1)^(0+128),w
  2041  157D  07D3               	addwf	(sprintf@prec+1)^(0+128),f
  2042  157E                     l4245:
  2043  157E  3001               	movlw	1
  2044  157F  00B5               	movwf	??_sprintf^(0+128)
  2045  1580  0835               	movf	??_sprintf^(0+128),w
  2046  1581  07A8               	addwf	sprintf@f^(0+128),f
  2047  1582                     l4247:
  2048                           
  2049                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2050  1582  0828               	movf	sprintf@f^(0+128),w
  2051  1583  0084               	movwf	4
  2052  1584  160A  118A  200A  160A  118A  	fcall	stringdir
  2053  1589  160A  158A  20CF  160A  118A  	fcall	_isdigit
  2054  158E  1803               	btfsc	3,0
  2055  158F  2D91               	goto	u7351
  2056  1590  2D92               	goto	u7350
  2057  1591                     u7351:
  2058  1591  2D48               	goto	l4241
  2059  1592                     u7350:
  2060  1592  2D99               	goto	l4255
  2061  1593                     l4249:
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2064  1593  01D2               	clrf	sprintf@prec^(0+128)
  2065  1594  01D3               	clrf	(sprintf@prec+1)^(0+128)
  2066  1595                     l4251:
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2069  1595  1644               	bsf	(sprintf@flag^(0+128)+1),4
  2070  1596  2D99               	goto	l4255
  2071  1597                     l351:	
  2072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2073                           
  2074                           
  2075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2076  1597  1544               	bsf	(sprintf@flag^(0+128)+1),2
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2079  1598  2DB5               	goto	l4257
  2080  1599                     l4255:
  2081  1599  3001               	movlw	1
  2082  159A  1683               	bsf	3,5	;RP0=1, select bank1
  2083  159B  1303               	bcf	3,6	;RP1=0, select bank1
  2084  159C  07A8               	addwf	sprintf@f^(0+128),f
  2085  159D  30FF               	movlw	-1
  2086  159E  0728               	addwf	sprintf@f^(0+128),w
  2087  159F  0084               	movwf	4
  2088  15A0  160A  118A  200A  160A  118A  	fcall	stringdir
  2089  15A5  00D4               	movwf	sprintf@c^(0+128)
  2090  15A6  00B5               	movwf	??_sprintf^(0+128)
  2091  15A7  01B6               	clrf	(??_sprintf^(0+128)+1)
  2092                           
  2093                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2094                           ; Switch size 1, requested type "simple"
  2095                           ; Number of cases is 1, Range of values is 0 to 0
  2096                           ; switch strategies available:
  2097                           ; Name         Instructions Cycles
  2098                           ; simple_byte            4     3 (average)
  2099                           ; direct_byte           11     8 (fixed)
  2100                           ; jumptable            260     6 (fixed)
  2101                           ;	Chosen strategy is simple_byte
  2102  15A8  0836               	movf	(??_sprintf+1)^(0+128),w
  2103  15A9  3A00               	xorlw	0	; case 0
  2104  15AA  1903               	skipnz
  2105  15AB  2DAD               	goto	l4563
  2106  15AC  2CBB               	goto	L1
  2107  15AD                     l4563:
  2108                           
  2109                           ; Switch size 1, requested type "simple"
  2110                           ; Number of cases is 2, Range of values is 0 to 102
  2111                           ; switch strategies available:
  2112                           ; Name         Instructions Cycles
  2113                           ; simple_byte            7     4 (average)
  2114                           ; jumptable            260     6 (fixed)
  2115                           ;	Chosen strategy is simple_byte
  2116  15AD  0835               	movf	??_sprintf^(0+128),w
  2117  15AE  3A00               	xorlw	0	; case 0
  2118  15AF  1903               	skipnz
  2119  15B0  2FFD               	goto	L3
  2120  15B1  3A66               	xorlw	102	; case 102
  2121  15B2  1903               	skipnz
  2122  15B3  2D97               	goto	l351
  2123  15B4  2CBB               	goto	L1
  2124  15B5                     l4257:
  2125                           
  2126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2127  15B5  3000               	movlw	0
  2128  15B6  0543               	andwf	sprintf@flag^(0+128),w
  2129  15B7  00B5               	movwf	??_sprintf^(0+128)
  2130  15B8  3007               	movlw	7
  2131  15B9  0544               	andwf	(sprintf@flag+1)^(0+128),w
  2132  15BA  00B6               	movwf	(??_sprintf+1)^(0+128)
  2133  15BB  0835               	movf	??_sprintf^(0+128),w
  2134  15BC  0436               	iorwf	(??_sprintf^(0+128)+1),w
  2135  15BD  1903               	btfsc	3,2
  2136  15BE  2DC0               	goto	u7361
  2137  15BF  2DC3               	goto	u7360
  2138  15C0                     u7361:
  2139  15C0  120A  118A  2D04   	goto	l4415
  2140  15C3                     u7360:
  2141  15C3                     l4259:
  2142                           
  2143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2144  15C3  1E44               	btfss	(sprintf@flag+1)^(0+128),4
  2145  15C4  2DC6               	goto	u7371
  2146  15C5  2DC7               	goto	u7370
  2147  15C6                     u7371:
  2148  15C6  2DCB               	goto	l4263
  2149  15C7                     u7370:
  2150  15C7                     l4261:
  2151                           
  2152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2153  15C7  3006               	movlw	6
  2154  15C8  00D2               	movwf	sprintf@prec^(0+128)
  2155  15C9  3000               	movlw	0
  2156  15CA  00D3               	movwf	(sprintf@prec^(0+128)+1)
  2157  15CB                     l4263:
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2160  15CB  083E               	movf	sprintf@ap^(0+128),w
  2161  15CC  0084               	movwf	4
  2162  15CD  1383               	bcf	3,7	;select IRP bank0
  2163  15CE  0800               	movf	0,w
  2164  15CF  00CD               	movwf	sprintf@fval^(0+128)
  2165  15D0  0A84               	incf	4,f
  2166  15D1  0800               	movf	0,w
  2167  15D2  00CE               	movwf	(sprintf@fval+1)^(0+128)
  2168  15D3  0A84               	incf	4,f
  2169  15D4  0800               	movf	0,w
  2170  15D5  00CF               	movwf	(sprintf@fval+2)^(0+128)
  2171  15D6  0A84               	incf	4,f
  2172  15D7  0800               	movf	0,w
  2173  15D8  00D0               	movwf	(sprintf@fval+3)^(0+128)
  2174  15D9                     l4265:
  2175  15D9  3004               	movlw	4
  2176  15DA  00B5               	movwf	??_sprintf^(0+128)
  2177  15DB  0835               	movf	??_sprintf^(0+128),w
  2178  15DC  07BE               	addwf	sprintf@ap^(0+128),f
  2179  15DD                     l4267:
  2180                           
  2181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2182  15DD  0850               	movf	(sprintf@fval+3)^(0+128),w
  2183  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  2184  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  2185  15E0  00A3               	movwf	___flge@ff1+3
  2186  15E1  1683               	bsf	3,5	;RP0=1, select bank1
  2187  15E2  1303               	bcf	3,6	;RP1=0, select bank1
  2188  15E3  084F               	movf	(sprintf@fval+2)^(0+128),w
  2189  15E4  1283               	bcf	3,5	;RP0=0, select bank0
  2190  15E5  1303               	bcf	3,6	;RP1=0, select bank0
  2191  15E6  00A2               	movwf	___flge@ff1+2
  2192  15E7  1683               	bsf	3,5	;RP0=1, select bank1
  2193  15E8  1303               	bcf	3,6	;RP1=0, select bank1
  2194  15E9  084E               	movf	(sprintf@fval+1)^(0+128),w
  2195  15EA  1283               	bcf	3,5	;RP0=0, select bank0
  2196  15EB  1303               	bcf	3,6	;RP1=0, select bank0
  2197  15EC  00A1               	movwf	___flge@ff1+1
  2198  15ED  1683               	bsf	3,5	;RP0=1, select bank1
  2199  15EE  1303               	bcf	3,6	;RP1=0, select bank1
  2200  15EF  084D               	movf	sprintf@fval^(0+128),w
  2201  15F0  1283               	bcf	3,5	;RP0=0, select bank0
  2202  15F1  1303               	bcf	3,6	;RP1=0, select bank0
  2203  15F2  00A0               	movwf	___flge@ff1
  2204  15F3  3000               	movlw	0
  2205  15F4  00A7               	movwf	___flge@ff2+3
  2206  15F5  3000               	movlw	0
  2207  15F6  00A6               	movwf	___flge@ff2+2
  2208  15F7  3000               	movlw	0
  2209  15F8  00A5               	movwf	___flge@ff2+1
  2210  15F9  3000               	movlw	0
  2211  15FA  00A4               	movwf	___flge@ff2
  2212  15FB  160A  118A  20CA  160A  118A  	fcall	___flge
  2213  1600  1803               	btfsc	3,0
  2214  1601  2E03               	goto	u7381
  2215  1602  2E04               	goto	u7380
  2216  1603                     u7381:
  2217  1603  2E3D               	goto	l4273
  2218  1604                     u7380:
  2219  1604                     l4269:
  2220                           
  2221                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2222  1604  1683               	bsf	3,5	;RP0=1, select bank1
  2223  1605  1303               	bcf	3,6	;RP1=0, select bank1
  2224  1606  0850               	movf	(sprintf@fval+3)^(0+128),w
  2225  1607  1283               	bcf	3,5	;RP0=0, select bank0
  2226  1608  1303               	bcf	3,6	;RP1=0, select bank0
  2227  1609  00A3               	movwf	___flneg@f1+3
  2228  160A  1683               	bsf	3,5	;RP0=1, select bank1
  2229  160B  1303               	bcf	3,6	;RP1=0, select bank1
  2230  160C  084F               	movf	(sprintf@fval+2)^(0+128),w
  2231  160D  1283               	bcf	3,5	;RP0=0, select bank0
  2232  160E  1303               	bcf	3,6	;RP1=0, select bank0
  2233  160F  00A2               	movwf	___flneg@f1+2
  2234  1610  1683               	bsf	3,5	;RP0=1, select bank1
  2235  1611  1303               	bcf	3,6	;RP1=0, select bank1
  2236  1612  084E               	movf	(sprintf@fval+1)^(0+128),w
  2237  1613  1283               	bcf	3,5	;RP0=0, select bank0
  2238  1614  1303               	bcf	3,6	;RP1=0, select bank0
  2239  1615  00A1               	movwf	___flneg@f1+1
  2240  1616  1683               	bsf	3,5	;RP0=1, select bank1
  2241  1617  1303               	bcf	3,6	;RP1=0, select bank1
  2242  1618  084D               	movf	sprintf@fval^(0+128),w
  2243  1619  1283               	bcf	3,5	;RP0=0, select bank0
  2244  161A  1303               	bcf	3,6	;RP1=0, select bank0
  2245  161B  00A0               	movwf	___flneg@f1
  2246  161C  120A  118A  27EF  160A  118A  	fcall	___flneg
  2247  1621  1283               	bcf	3,5	;RP0=0, select bank0
  2248  1622  1303               	bcf	3,6	;RP1=0, select bank0
  2249  1623  0823               	movf	?___flneg+3,w
  2250  1624  1683               	bsf	3,5	;RP0=1, select bank1
  2251  1625  1303               	bcf	3,6	;RP1=0, select bank1
  2252  1626  00D0               	movwf	(sprintf@fval+3)^(0+128)
  2253  1627  1283               	bcf	3,5	;RP0=0, select bank0
  2254  1628  1303               	bcf	3,6	;RP1=0, select bank0
  2255  1629  0822               	movf	?___flneg+2,w
  2256  162A  1683               	bsf	3,5	;RP0=1, select bank1
  2257  162B  1303               	bcf	3,6	;RP1=0, select bank1
  2258  162C  00CF               	movwf	(sprintf@fval+2)^(0+128)
  2259  162D  1283               	bcf	3,5	;RP0=0, select bank0
  2260  162E  1303               	bcf	3,6	;RP1=0, select bank0
  2261  162F  0821               	movf	?___flneg+1,w
  2262  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2263  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2264  1632  00CE               	movwf	(sprintf@fval+1)^(0+128)
  2265  1633  1283               	bcf	3,5	;RP0=0, select bank0
  2266  1634  1303               	bcf	3,6	;RP1=0, select bank0
  2267  1635  0820               	movf	?___flneg,w
  2268  1636  1683               	bsf	3,5	;RP0=1, select bank1
  2269  1637  1303               	bcf	3,6	;RP1=0, select bank1
  2270  1638  00CD               	movwf	sprintf@fval^(0+128)
  2271  1639                     l4271:
  2272                           
  2273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2274  1639  3003               	movlw	3
  2275  163A  04C3               	iorwf	sprintf@flag^(0+128),f
  2276  163B  3000               	movlw	0
  2277  163C  04C4               	iorwf	(sprintf@flag+1)^(0+128),f
  2278  163D                     l4273:
  2279                           
  2280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2281  163D  1683               	bsf	3,5	;RP0=1, select bank1
  2282  163E  1303               	bcf	3,6	;RP1=0, select bank1
  2283  163F  01CB               	clrf	sprintf@eexp^(0+128)
  2284  1640  01CC               	clrf	(sprintf@eexp+1)^(0+128)
  2285  1641                     l4275:
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2288  1641  0850               	movf	(sprintf@fval+3)^(0+128),w
  2289  1642  1283               	bcf	3,5	;RP0=0, select bank0
  2290  1643  1303               	bcf	3,6	;RP1=0, select bank0
  2291  1644  00A3               	movwf	___fleq@ff1+3
  2292  1645  1683               	bsf	3,5	;RP0=1, select bank1
  2293  1646  1303               	bcf	3,6	;RP1=0, select bank1
  2294  1647  084F               	movf	(sprintf@fval+2)^(0+128),w
  2295  1648  1283               	bcf	3,5	;RP0=0, select bank0
  2296  1649  1303               	bcf	3,6	;RP1=0, select bank0
  2297  164A  00A2               	movwf	___fleq@ff1+2
  2298  164B  1683               	bsf	3,5	;RP0=1, select bank1
  2299  164C  1303               	bcf	3,6	;RP1=0, select bank1
  2300  164D  084E               	movf	(sprintf@fval+1)^(0+128),w
  2301  164E  1283               	bcf	3,5	;RP0=0, select bank0
  2302  164F  1303               	bcf	3,6	;RP1=0, select bank0
  2303  1650  00A1               	movwf	___fleq@ff1+1
  2304  1651  1683               	bsf	3,5	;RP0=1, select bank1
  2305  1652  1303               	bcf	3,6	;RP1=0, select bank1
  2306  1653  084D               	movf	sprintf@fval^(0+128),w
  2307  1654  1283               	bcf	3,5	;RP0=0, select bank0
  2308  1655  1303               	bcf	3,6	;RP1=0, select bank0
  2309  1656  00A0               	movwf	___fleq@ff1
  2310  1657  3000               	movlw	0
  2311  1658  00A7               	movwf	___fleq@ff2+3
  2312  1659  3000               	movlw	0
  2313  165A  00A6               	movwf	___fleq@ff2+2
  2314  165B  3000               	movlw	0
  2315  165C  00A5               	movwf	___fleq@ff2+1
  2316  165D  3000               	movlw	0
  2317  165E  00A4               	movwf	___fleq@ff2
  2318  165F  160A  158A  2383  160A  118A  	fcall	___fleq
  2319  1664  1803               	btfsc	3,0
  2320  1665  2E67               	goto	u7391
  2321  1666  2E68               	goto	u7390
  2322  1667                     u7391:
  2323  1667  2F94               	goto	l4301
  2324  1668                     u7390:
  2325  1668                     l4277:
  2326                           
  2327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2328  1668  1003               	clrc
  2329  1669  1683               	bsf	3,5	;RP0=1, select bank1
  2330  166A  1303               	bcf	3,6	;RP1=0, select bank1
  2331  166B  0D4F               	rlf	(sprintf@fval+2)^(0+128),w
  2332  166C  0D50               	rlf	(sprintf@fval+3)^(0+128),w
  2333  166D  3E82               	addlw	130
  2334  166E  00CB               	movwf	sprintf@eexp^(0+128)
  2335  166F  30FF               	movlw	255
  2336  1670  1803               	skipnc
  2337  1671  3000               	movlw	0
  2338  1672  00CC               	movwf	(sprintf@eexp^(0+128)+1)
  2339  1673                     l4279:
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2342  1673  30FF               	movlw	255
  2343  1674  07CB               	addwf	sprintf@eexp^(0+128),f
  2344  1675  1803               	skipnc
  2345  1676  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
  2346  1677  30FF               	movlw	255
  2347  1678  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
  2348  1679                     l4281:
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2351  1679  3003               	movlw	3
  2352  167A  1283               	bcf	3,5	;RP0=0, select bank0
  2353  167B  1303               	bcf	3,6	;RP1=0, select bank0
  2354  167C  00A0               	movwf	___wmul@multiplier
  2355  167D  3000               	movlw	0
  2356  167E  00A1               	movwf	___wmul@multiplier+1
  2357  167F  1683               	bsf	3,5	;RP0=1, select bank1
  2358  1680  1303               	bcf	3,6	;RP1=0, select bank1
  2359  1681  084C               	movf	(sprintf@eexp+1)^(0+128),w
  2360  1682  1283               	bcf	3,5	;RP0=0, select bank0
  2361  1683  1303               	bcf	3,6	;RP1=0, select bank0
  2362  1684  00A3               	movwf	___wmul@multiplicand+1
  2363  1685  1683               	bsf	3,5	;RP0=1, select bank1
  2364  1686  1303               	bcf	3,6	;RP1=0, select bank1
  2365  1687  084B               	movf	sprintf@eexp^(0+128),w
  2366  1688  1283               	bcf	3,5	;RP0=0, select bank0
  2367  1689  1303               	bcf	3,6	;RP1=0, select bank0
  2368  168A  00A2               	movwf	___wmul@multiplicand
  2369  168B  160A  158A  21A0  160A  118A  	fcall	___wmul
  2370  1690  1283               	bcf	3,5	;RP0=0, select bank0
  2371  1691  1303               	bcf	3,6	;RP1=0, select bank0
  2372  1692  0821               	movf	?___wmul+1,w
  2373  1693  1683               	bsf	3,5	;RP0=1, select bank1
  2374  1694  1303               	bcf	3,6	;RP1=0, select bank1
  2375  1695  00CC               	movwf	(sprintf@eexp+1)^(0+128)
  2376  1696  1283               	bcf	3,5	;RP0=0, select bank0
  2377  1697  1303               	bcf	3,6	;RP1=0, select bank0
  2378  1698  0820               	movf	?___wmul,w
  2379  1699  1683               	bsf	3,5	;RP0=1, select bank1
  2380  169A  1303               	bcf	3,6	;RP1=0, select bank1
  2381  169B  00CB               	movwf	sprintf@eexp^(0+128)
  2382  169C                     l4283:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2385  169C  300A               	movlw	10
  2386  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2387  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2388  169F  00A4               	movwf	___awdiv@divisor
  2389  16A0  3000               	movlw	0
  2390  16A1  00A5               	movwf	___awdiv@divisor+1
  2391  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  2392  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  2393  16A4  084C               	movf	(sprintf@eexp+1)^(0+128),w
  2394  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2395  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2396  16A7  00A7               	movwf	___awdiv@dividend+1
  2397  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2398  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2399  16AA  084B               	movf	sprintf@eexp^(0+128),w
  2400  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  2401  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  2402  16AD  00A6               	movwf	___awdiv@dividend
  2403  16AE  160A  158A  25A2  160A  118A  	fcall	___awdiv
  2404  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  2405  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  2406  16B5  0825               	movf	?___awdiv+1,w
  2407  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  2408  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2409  16B8  00CC               	movwf	(sprintf@eexp+1)^(0+128)
  2410  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2411  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2412  16BB  0824               	movf	?___awdiv,w
  2413  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2414  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2415  16BE  00CB               	movwf	sprintf@eexp^(0+128)
  2416  16BF                     l4285:
  2417                           
  2418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2419  16BF  1FCC               	btfss	(sprintf@eexp+1)^(0+128),7
  2420  16C0  2EC2               	goto	u7401
  2421  16C1  2EC3               	goto	u7400
  2422  16C2                     u7401:
  2423  16C2  2EC9               	goto	l4289
  2424  16C3                     u7400:
  2425  16C3                     l4287:
  2426                           
  2427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2428  16C3  30FF               	movlw	255
  2429  16C4  07CB               	addwf	sprintf@eexp^(0+128),f
  2430  16C5  1803               	skipnc
  2431  16C6  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
  2432  16C7  30FF               	movlw	255
  2433  16C8  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
  2434  16C9                     l4289:
  2435                           
  2436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2437  16C9  034B               	decf	sprintf@eexp^(0+128),w
  2438  16CA  3AFF               	xorlw	255
  2439  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  2440  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2441  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2442  16D2  084B               	movf	?_scale+3,w
  2443  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  2444  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  2445  16D5  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
  2446  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2447  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2448  16D8  084A               	movf	?_scale+2,w
  2449  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  2450  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  2451  16DB  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
  2452  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  2453  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  2454  16DE  0849               	movf	?_scale+1,w
  2455  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  2456  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  2457  16E1  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
  2458  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2459  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2460  16E4  0848               	movf	?_scale,w
  2461  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  2462  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  2463  16E7  00C7               	movwf	sprintf@tmpval^(0+128)
  2464  16E8                     l4291:
  2465                           
  2466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2467  16E8  0850               	movf	(sprintf@fval+3)^(0+128),w
  2468  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  2469  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  2470  16EB  00B1               	movwf	___flmul@b+3
  2471  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  2472  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  2473  16EE  084F               	movf	(sprintf@fval+2)^(0+128),w
  2474  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2475  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2476  16F1  00B0               	movwf	___flmul@b+2
  2477  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  2478  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  2479  16F4  084E               	movf	(sprintf@fval+1)^(0+128),w
  2480  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  2481  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  2482  16F7  00AF               	movwf	___flmul@b+1
  2483  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  2484  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  2485  16FA  084D               	movf	sprintf@fval^(0+128),w
  2486  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  2487  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  2488  16FD  00AE               	movwf	___flmul@b
  2489  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  2490  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  2491  1700  084A               	movf	(sprintf@tmpval+3)^(0+128),w
  2492  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2493  1702  1303               	bcf	3,6	;RP1=0, select bank0
  2494  1703  00B5               	movwf	___flmul@a+3
  2495  1704  1683               	bsf	3,5	;RP0=1, select bank1
  2496  1705  1303               	bcf	3,6	;RP1=0, select bank1
  2497  1706  0849               	movf	(sprintf@tmpval+2)^(0+128),w
  2498  1707  1283               	bcf	3,5	;RP0=0, select bank0
  2499  1708  1303               	bcf	3,6	;RP1=0, select bank0
  2500  1709  00B4               	movwf	___flmul@a+2
  2501  170A  1683               	bsf	3,5	;RP0=1, select bank1
  2502  170B  1303               	bcf	3,6	;RP1=0, select bank1
  2503  170C  0848               	movf	(sprintf@tmpval+1)^(0+128),w
  2504  170D  1283               	bcf	3,5	;RP0=0, select bank0
  2505  170E  1303               	bcf	3,6	;RP1=0, select bank0
  2506  170F  00B3               	movwf	___flmul@a+1
  2507  1710  1683               	bsf	3,5	;RP0=1, select bank1
  2508  1711  1303               	bcf	3,6	;RP1=0, select bank1
  2509  1712  0847               	movf	sprintf@tmpval^(0+128),w
  2510  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2511  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2512  1715  00B2               	movwf	___flmul@a
  2513  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  2514  171B  1283               	bcf	3,5	;RP0=0, select bank0
  2515  171C  1303               	bcf	3,6	;RP1=0, select bank0
  2516  171D  0831               	movf	?___flmul+3,w
  2517  171E  1683               	bsf	3,5	;RP0=1, select bank1
  2518  171F  1303               	bcf	3,6	;RP1=0, select bank1
  2519  1720  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
  2520  1721  1283               	bcf	3,5	;RP0=0, select bank0
  2521  1722  1303               	bcf	3,6	;RP1=0, select bank0
  2522  1723  0830               	movf	?___flmul+2,w
  2523  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2524  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2525  1726  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
  2526  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2527  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2528  1729  082F               	movf	?___flmul+1,w
  2529  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2530  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2531  172C  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
  2532  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2533  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2534  172F  082E               	movf	?___flmul,w
  2535  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2536  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2537  1732  00C7               	movwf	sprintf@tmpval^(0+128)
  2538  1733                     l4293:
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2541  1733  084A               	movf	(sprintf@tmpval+3)^(0+128),w
  2542  1734  1283               	bcf	3,5	;RP0=0, select bank0
  2543  1735  1303               	bcf	3,6	;RP1=0, select bank0
  2544  1736  00A3               	movwf	___flge@ff1+3
  2545  1737  1683               	bsf	3,5	;RP0=1, select bank1
  2546  1738  1303               	bcf	3,6	;RP1=0, select bank1
  2547  1739  0849               	movf	(sprintf@tmpval+2)^(0+128),w
  2548  173A  1283               	bcf	3,5	;RP0=0, select bank0
  2549  173B  1303               	bcf	3,6	;RP1=0, select bank0
  2550  173C  00A2               	movwf	___flge@ff1+2
  2551  173D  1683               	bsf	3,5	;RP0=1, select bank1
  2552  173E  1303               	bcf	3,6	;RP1=0, select bank1
  2553  173F  0848               	movf	(sprintf@tmpval+1)^(0+128),w
  2554  1740  1283               	bcf	3,5	;RP0=0, select bank0
  2555  1741  1303               	bcf	3,6	;RP1=0, select bank0
  2556  1742  00A1               	movwf	___flge@ff1+1
  2557  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2558  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2559  1745  0847               	movf	sprintf@tmpval^(0+128),w
  2560  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2561  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2562  1748  00A0               	movwf	___flge@ff1
  2563  1749  303F               	movlw	63
  2564  174A  00A7               	movwf	___flge@ff2+3
  2565  174B  3080               	movlw	128
  2566  174C  00A6               	movwf	___flge@ff2+2
  2567  174D  3000               	movlw	0
  2568  174E  00A5               	movwf	___flge@ff2+1
  2569  174F  3000               	movlw	0
  2570  1750  00A4               	movwf	___flge@ff2
  2571  1751  160A  118A  20CA  160A  118A  	fcall	___flge
  2572  1756  1803               	btfsc	3,0
  2573  1757  2F59               	goto	u7411
  2574  1758  2F5A               	goto	u7410
  2575  1759                     u7411:
  2576  1759  2F63               	goto	l4297
  2577  175A                     u7410:
  2578  175A                     l4295:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2581  175A  30FF               	movlw	255
  2582  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2583  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2584  175D  07CB               	addwf	sprintf@eexp^(0+128),f
  2585  175E  1803               	skipnc
  2586  175F  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
  2587  1760  30FF               	movlw	255
  2588  1761  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
  2589  1762  2F94               	goto	l4301
  2590  1763                     l4297:
  2591  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2592  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2593  1765  084A               	movf	(sprintf@tmpval+3)^(0+128),w
  2594  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2595  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2596  1768  00A3               	movwf	___flge@ff1+3
  2597  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2598  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2599  176B  0849               	movf	(sprintf@tmpval+2)^(0+128),w
  2600  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2601  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2602  176E  00A2               	movwf	___flge@ff1+2
  2603  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2604  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2605  1771  0848               	movf	(sprintf@tmpval+1)^(0+128),w
  2606  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2607  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2608  1774  00A1               	movwf	___flge@ff1+1
  2609  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2610  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2611  1777  0847               	movf	sprintf@tmpval^(0+128),w
  2612  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2613  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2614  177A  00A0               	movwf	___flge@ff1
  2615  177B  3041               	movlw	65
  2616  177C  00A7               	movwf	___flge@ff2+3
  2617  177D  3020               	movlw	32
  2618  177E  00A6               	movwf	___flge@ff2+2
  2619  177F  3000               	movlw	0
  2620  1780  00A5               	movwf	___flge@ff2+1
  2621  1781  3000               	movlw	0
  2622  1782  00A4               	movwf	___flge@ff2
  2623  1783  160A  118A  20CA  160A  118A  	fcall	___flge
  2624  1788  1C03               	btfss	3,0
  2625  1789  2F8B               	goto	u7421
  2626  178A  2F8C               	goto	u7420
  2627  178B                     u7421:
  2628  178B  2F94               	goto	l4301
  2629  178C                     u7420:
  2630  178C                     l4299:
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2633  178C  3001               	movlw	1
  2634  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2635  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2636  178F  07CB               	addwf	sprintf@eexp^(0+128),f
  2637  1790  1803               	skipnc
  2638  1791  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
  2639  1792  3000               	movlw	0
  2640  1793  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
  2641  1794                     l4301:
  2642                           
  2643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2644  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2645  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2646  1796  0853               	movf	(sprintf@prec+1)^(0+128),w
  2647  1797  3A80               	xorlw	128
  2648  1798  00FF               	movwf	btemp+1
  2649  1799  3080               	movlw	128
  2650  179A  027F               	subwf	btemp+1,w
  2651  179B  1D03               	skipz
  2652  179C  2F9F               	goto	u7435
  2653  179D  300D               	movlw	13
  2654  179E  0252               	subwf	sprintf@prec^(0+128),w
  2655  179F                     u7435:
  2656  179F  1803               	skipnc
  2657  17A0  2FA2               	goto	u7431
  2658  17A1  2FA3               	goto	u7430
  2659  17A2                     u7431:
  2660  17A2  2FEA               	goto	l4305
  2661  17A3                     u7430:
  2662  17A3                     l4303:
  2663                           
  2664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2665  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2666  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2667  17A5  0852               	movf	sprintf@prec^(0+128),w
  2668  17A6  120A  118A  25E2  160A  118A  	fcall	_fround
  2669  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2670  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2671  17AD  084B               	movf	?_fround+3,w
  2672  17AE  00DF               	movwf	___fladd@b+3
  2673  17AF  084A               	movf	?_fround+2,w
  2674  17B0  00DE               	movwf	___fladd@b+2
  2675  17B1  0849               	movf	?_fround+1,w
  2676  17B2  00DD               	movwf	___fladd@b+1
  2677  17B3  0848               	movf	?_fround,w
  2678  17B4  00DC               	movwf	___fladd@b
  2679  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2680  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2681  17B7  0850               	movf	(sprintf@fval+3)^(0+128),w
  2682  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2683  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2684  17BA  00E3               	movwf	___fladd@a+3
  2685  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2686  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2687  17BD  084F               	movf	(sprintf@fval+2)^(0+128),w
  2688  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2689  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2690  17C0  00E2               	movwf	___fladd@a+2
  2691  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2692  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2693  17C3  084E               	movf	(sprintf@fval+1)^(0+128),w
  2694  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2695  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2696  17C6  00E1               	movwf	___fladd@a+1
  2697  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2698  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2699  17C9  084D               	movf	sprintf@fval^(0+128),w
  2700  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2701  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2702  17CC  00E0               	movwf	___fladd@a
  2703  17CD  160A  118A  222C  160A  118A  	fcall	___fladd
  2704  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2705  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2706  17D4  085F               	movf	?___fladd+3,w
  2707  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2708  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2709  17D7  00D0               	movwf	(sprintf@fval+3)^(0+128)
  2710  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2711  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2712  17DA  085E               	movf	?___fladd+2,w
  2713  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2714  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2715  17DD  00CF               	movwf	(sprintf@fval+2)^(0+128)
  2716  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2717  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2718  17E0  085D               	movf	?___fladd+1,w
  2719  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2720  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2721  17E3  00CE               	movwf	(sprintf@fval+1)^(0+128)
  2722  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2723  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2724  17E6  085C               	movf	?___fladd,w
  2725  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2726  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2727  17E9  00CD               	movwf	sprintf@fval^(0+128)
  2728  17EA                     l4305:
  2729                           
  2730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2731  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2732  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2733  17EC  084C               	movf	(sprintf@eexp+1)^(0+128),w
  2734  17ED  3A80               	xorlw	128
  2735  17EE  00FF               	movwf	btemp+1
  2736  17EF  3080               	movlw	128
  2737  17F0  027F               	subwf	btemp+1,w
  2738  17F1  1D03               	skipz
  2739  17F2  2FF5               	goto	u7445
  2740  17F3  300A               	movlw	10
  2741  17F4  024B               	subwf	sprintf@eexp^(0+128),w
  2742  17F5                     u7445:
  2743  17F5  1803               	skipnc
  2744  17F6  2FFA               	goto	u7441
  2745  17F7  120A  118A  282E   	goto	u7440
  2746  17FA                     u7441:
  2747  17FA  120A  118A  288D   	goto	l4313
  2748  17FD                     L3:
  2749  17FD                     L2:
  2750  17FD  120A  118A  2DDD   	ljmp	l4463
  2751                           
  2752                           	psect	text2
  2753  0C9D                     __ptext2:	
  2754 ;; *************** function _scale *****************
  2755 ;; Defined at:
  2756 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  scl             1    wreg     char 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  scl             1   58[BANK0 ] char 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  4   40[BANK0 ] char 
  2763 ;; Registers used:
  2764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2770 ;;      Params:         0       4       0       0       0
  2771 ;;      Locals:         0       5       0       0       0
  2772 ;;      Temps:          0      10       0       0       0
  2773 ;;      Totals:         0      19       0       0       0
  2774 ;;Total ram usage:       19 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:    4
  2777 ;; This function calls:
  2778 ;;		___awdiv
  2779 ;;		___awmod
  2780 ;;		___flmul
  2781 ;; This function is called by:
  2782 ;;		_sprintf
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           
  2787                           ;psect for function _scale
  2788  0C9D                     _scale:
  2789                           
  2790                           ;incstack = 0
  2791                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2792                           ;scale@scl stored from wreg
  2793  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2794  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2795  0C9F  00DA               	movwf	scale@scl
  2796  0CA0                     l3983:
  2797                           
  2798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2799  0CA0  1FDA               	btfss	scale@scl,7
  2800  0CA1  2CA3               	goto	u6671
  2801  0CA2  2CA4               	goto	u6670
  2802  0CA3                     u6671:
  2803  0CA3  2E53               	goto	l4005
  2804  0CA4                     u6670:
  2805  0CA4                     l3985:
  2806                           
  2807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2808  0CA4  09DA               	comf	scale@scl,f
  2809  0CA5  0ADA               	incf	scale@scl,f
  2810  0CA6                     l3987:
  2811                           
  2812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2813  0CA6  085A               	movf	scale@scl,w
  2814  0CA7  3A80               	xorlw	128
  2815  0CA8  3E12               	addlw	-238
  2816  0CA9  1C03               	skipc
  2817  0CAA  2CAC               	goto	u6681
  2818  0CAB  2CAD               	goto	u6680
  2819  0CAC                     u6681:
  2820  0CAC  2D97               	goto	l3995
  2821  0CAD                     u6680:
  2822  0CAD                     l3989:
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2825  0CAD  300A               	movlw	10
  2826  0CAE  00A4               	movwf	___awdiv@divisor
  2827  0CAF  3000               	movlw	0
  2828  0CB0  00A5               	movwf	___awdiv@divisor+1
  2829  0CB1  085A               	movf	scale@scl,w
  2830  0CB2  00A2               	movwf	___awmod@dividend
  2831  0CB3  01A3               	clrf	___awmod@dividend+1
  2832  0CB4  1BA2               	btfsc	___awmod@dividend,7
  2833  0CB5  03A3               	decf	___awmod@dividend+1,f
  2834  0CB6  3064               	movlw	100
  2835  0CB7  00A0               	movwf	___awmod@divisor
  2836  0CB8  3000               	movlw	0
  2837  0CB9  00A1               	movwf	___awmod@divisor+1
  2838  0CBA  160A  158A  2479  120A  158A  	fcall	___awmod
  2839  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  2840  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  2841  0CC1  0821               	movf	?___awmod+1,w
  2842  0CC2  00A7               	movwf	___awdiv@dividend+1
  2843  0CC3  0820               	movf	?___awmod,w
  2844  0CC4  00A6               	movwf	___awdiv@dividend
  2845  0CC5  160A  158A  25A2  120A  158A  	fcall	___awdiv
  2846  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2847  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2848  0CCC  0824               	movf	?___awdiv,w
  2849  0CCD  00CC               	movwf	??_scale
  2850  0CCE  3001               	movlw	1
  2851  0CCF                     u6695:
  2852  0CCF  1003               	clrc
  2853  0CD0  0DCC               	rlf	??_scale,f
  2854  0CD1  3EFF               	addlw	-1
  2855  0CD2  1D03               	skipz
  2856  0CD3  2CCF               	goto	u6695
  2857  0CD4  1003               	clrc
  2858  0CD5  0D4C               	rlf	??_scale,w
  2859  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2860  0CD7  0084               	movwf	4
  2861  0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  2862  0CDD  00CD               	movwf	??_scale+1
  2863  0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  2864  0CE3  00CE               	movwf	??_scale+2
  2865  0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  2866  0CE9  00CF               	movwf	??_scale+3
  2867  0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  2868  0CEF  00D0               	movwf	??_scale+4
  2869  0CF0  0850               	movf	??_scale+4,w
  2870  0CF1  00B1               	movwf	___flmul@b+3
  2871  0CF2  084F               	movf	??_scale+3,w
  2872  0CF3  00B0               	movwf	___flmul@b+2
  2873  0CF4  084E               	movf	??_scale+2,w
  2874  0CF5  00AF               	movwf	___flmul@b+1
  2875  0CF6  084D               	movf	??_scale+1,w
  2876  0CF7  00AE               	movwf	___flmul@b
  2877  0CF8  3064               	movlw	100
  2878  0CF9  00A4               	movwf	___awdiv@divisor
  2879  0CFA  3000               	movlw	0
  2880  0CFB  00A5               	movwf	___awdiv@divisor+1
  2881  0CFC  085A               	movf	scale@scl,w
  2882  0CFD  00A6               	movwf	___awdiv@dividend
  2883  0CFE  01A7               	clrf	___awdiv@dividend+1
  2884  0CFF  1BA6               	btfsc	___awdiv@dividend,7
  2885  0D00  03A7               	decf	___awdiv@dividend+1,f
  2886  0D01  160A  158A  25A2  120A  158A  	fcall	___awdiv
  2887  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0D08  0824               	movf	?___awdiv,w
  2890  0D09  00D1               	movwf	??_scale+5
  2891  0D0A  3001               	movlw	1
  2892  0D0B                     u6705:
  2893  0D0B  1003               	clrc
  2894  0D0C  0DD1               	rlf	??_scale+5,f
  2895  0D0D  3EFF               	addlw	-1
  2896  0D0E  1D03               	skipz
  2897  0D0F  2D0B               	goto	u6705
  2898  0D10  1003               	clrc
  2899  0D11  0D51               	rlf	??_scale+5,w
  2900  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2901  0D13  0084               	movwf	4
  2902  0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  2903  0D19  00D2               	movwf	??_scale+6
  2904  0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  2905  0D1F  00D3               	movwf	??_scale+7
  2906  0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  2907  0D25  00D4               	movwf	??_scale+8
  2908  0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  2909  0D2B  00D5               	movwf	??_scale+9
  2910  0D2C  0855               	movf	??_scale+9,w
  2911  0D2D  00B5               	movwf	___flmul@a+3
  2912  0D2E  0854               	movf	??_scale+8,w
  2913  0D2F  00B4               	movwf	___flmul@a+2
  2914  0D30  0853               	movf	??_scale+7,w
  2915  0D31  00B3               	movwf	___flmul@a+1
  2916  0D32  0852               	movf	??_scale+6,w
  2917  0D33  00B2               	movwf	___flmul@a
  2918  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2919  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2920  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2921  0D3B  0831               	movf	?___flmul+3,w
  2922  0D3C  00D9               	movwf	_scale$1196+3
  2923  0D3D  0830               	movf	?___flmul+2,w
  2924  0D3E  00D8               	movwf	_scale$1196+2
  2925  0D3F  082F               	movf	?___flmul+1,w
  2926  0D40  00D7               	movwf	_scale$1196+1
  2927  0D41  082E               	movf	?___flmul,w
  2928  0D42  00D6               	movwf	_scale$1196
  2929                           
  2930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2931  0D43  300A               	movlw	10
  2932  0D44  00A0               	movwf	___awmod@divisor
  2933  0D45  3000               	movlw	0
  2934  0D46  00A1               	movwf	___awmod@divisor+1
  2935  0D47  085A               	movf	scale@scl,w
  2936  0D48  00A2               	movwf	___awmod@dividend
  2937  0D49  01A3               	clrf	___awmod@dividend+1
  2938  0D4A  1BA2               	btfsc	___awmod@dividend,7
  2939  0D4B  03A3               	decf	___awmod@dividend+1,f
  2940  0D4C  160A  158A  2479  120A  158A  	fcall	___awmod
  2941  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  2942  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  2943  0D53  0820               	movf	?___awmod,w
  2944  0D54  00CC               	movwf	??_scale
  2945  0D55  3001               	movlw	1
  2946  0D56                     u6715:
  2947  0D56  1003               	clrc
  2948  0D57  0DCC               	rlf	??_scale,f
  2949  0D58  3EFF               	addlw	-1
  2950  0D59  1D03               	skipz
  2951  0D5A  2D56               	goto	u6715
  2952  0D5B  1003               	clrc
  2953  0D5C  0D4C               	rlf	??_scale,w
  2954  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2955  0D5E  0084               	movwf	4
  2956  0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  2957  0D64  00CD               	movwf	??_scale+1
  2958  0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  2959  0D6A  00CE               	movwf	??_scale+2
  2960  0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  2961  0D70  00CF               	movwf	??_scale+3
  2962  0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  2963  0D76  00D0               	movwf	??_scale+4
  2964  0D77  0850               	movf	??_scale+4,w
  2965  0D78  00B1               	movwf	___flmul@b+3
  2966  0D79  084F               	movf	??_scale+3,w
  2967  0D7A  00B0               	movwf	___flmul@b+2
  2968  0D7B  084E               	movf	??_scale+2,w
  2969  0D7C  00AF               	movwf	___flmul@b+1
  2970  0D7D  084D               	movf	??_scale+1,w
  2971  0D7E  00AE               	movwf	___flmul@b
  2972  0D7F  0859               	movf	_scale$1196+3,w
  2973  0D80  00B5               	movwf	___flmul@a+3
  2974  0D81  0858               	movf	_scale$1196+2,w
  2975  0D82  00B4               	movwf	___flmul@a+2
  2976  0D83  0857               	movf	_scale$1196+1,w
  2977  0D84  00B3               	movwf	___flmul@a+1
  2978  0D85  0856               	movf	_scale$1196,w
  2979  0D86  00B2               	movwf	___flmul@a
  2980  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2981  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2982  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2983  0D8E  0831               	movf	?___flmul+3,w
  2984  0D8F  00CB               	movwf	?_scale+3
  2985  0D90  0830               	movf	?___flmul+2,w
  2986  0D91  00CA               	movwf	?_scale+2
  2987  0D92  082F               	movf	?___flmul+1,w
  2988  0D93  00C9               	movwf	?_scale+1
  2989  0D94  082E               	movf	?___flmul,w
  2990  0D95  00C8               	movwf	?_scale
  2991  0D96  2FFF               	goto	l329
  2992  0D97                     l3995:
  2993  0D97  085A               	movf	scale@scl,w
  2994  0D98  3A80               	xorlw	128
  2995  0D99  3E75               	addlw	-139
  2996  0D9A  1C03               	skipc
  2997  0D9B  2D9D               	goto	u6721
  2998  0D9C  2D9E               	goto	u6720
  2999  0D9D                     u6721:
  3000  0D9D  2E26               	goto	l4001
  3001  0D9E                     u6720:
  3002  0D9E                     l3997:
  3003                           
  3004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3005  0D9E  300A               	movlw	10
  3006  0D9F  00A0               	movwf	___awmod@divisor
  3007  0DA0  3000               	movlw	0
  3008  0DA1  00A1               	movwf	___awmod@divisor+1
  3009  0DA2  085A               	movf	scale@scl,w
  3010  0DA3  00A2               	movwf	___awmod@dividend
  3011  0DA4  01A3               	clrf	___awmod@dividend+1
  3012  0DA5  1BA2               	btfsc	___awmod@dividend,7
  3013  0DA6  03A3               	decf	___awmod@dividend+1,f
  3014  0DA7  160A  158A  2479  120A  158A  	fcall	___awmod
  3015  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  3016  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  3017  0DAE  0820               	movf	?___awmod,w
  3018  0DAF  00CC               	movwf	??_scale
  3019  0DB0  3001               	movlw	1
  3020  0DB1                     u6735:
  3021  0DB1  1003               	clrc
  3022  0DB2  0DCC               	rlf	??_scale,f
  3023  0DB3  3EFF               	addlw	-1
  3024  0DB4  1D03               	skipz
  3025  0DB5  2DB1               	goto	u6735
  3026  0DB6  1003               	clrc
  3027  0DB7  0D4C               	rlf	??_scale,w
  3028  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3029  0DB9  0084               	movwf	4
  3030  0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  3031  0DBF  00CD               	movwf	??_scale+1
  3032  0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  3033  0DC5  00CE               	movwf	??_scale+2
  3034  0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  3035  0DCB  00CF               	movwf	??_scale+3
  3036  0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  3037  0DD1  00D0               	movwf	??_scale+4
  3038  0DD2  0850               	movf	??_scale+4,w
  3039  0DD3  00B1               	movwf	___flmul@b+3
  3040  0DD4  084F               	movf	??_scale+3,w
  3041  0DD5  00B0               	movwf	___flmul@b+2
  3042  0DD6  084E               	movf	??_scale+2,w
  3043  0DD7  00AF               	movwf	___flmul@b+1
  3044  0DD8  084D               	movf	??_scale+1,w
  3045  0DD9  00AE               	movwf	___flmul@b
  3046  0DDA  300A               	movlw	10
  3047  0DDB  00A4               	movwf	___awdiv@divisor
  3048  0DDC  3000               	movlw	0
  3049  0DDD  00A5               	movwf	___awdiv@divisor+1
  3050  0DDE  085A               	movf	scale@scl,w
  3051  0DDF  00A6               	movwf	___awdiv@dividend
  3052  0DE0  01A7               	clrf	___awdiv@dividend+1
  3053  0DE1  1BA6               	btfsc	___awdiv@dividend,7
  3054  0DE2  03A7               	decf	___awdiv@dividend+1,f
  3055  0DE3  160A  158A  25A2  120A  158A  	fcall	___awdiv
  3056  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3057  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3058  0DEA  0824               	movf	?___awdiv,w
  3059  0DEB  00D1               	movwf	??_scale+5
  3060  0DEC  3001               	movlw	1
  3061  0DED                     u6745:
  3062  0DED  1003               	clrc
  3063  0DEE  0DD1               	rlf	??_scale+5,f
  3064  0DEF  3EFF               	addlw	-1
  3065  0DF0  1D03               	skipz
  3066  0DF1  2DED               	goto	u6745
  3067  0DF2  1003               	clrc
  3068  0DF3  0D51               	rlf	??_scale+5,w
  3069  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3070  0DF5  0084               	movwf	4
  3071  0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  3072  0DFB  00D2               	movwf	??_scale+6
  3073  0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  3074  0E01  00D3               	movwf	??_scale+7
  3075  0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  3076  0E07  00D4               	movwf	??_scale+8
  3077  0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  3078  0E0D  00D5               	movwf	??_scale+9
  3079  0E0E  0855               	movf	??_scale+9,w
  3080  0E0F  00B5               	movwf	___flmul@a+3
  3081  0E10  0854               	movf	??_scale+8,w
  3082  0E11  00B4               	movwf	___flmul@a+2
  3083  0E12  0853               	movf	??_scale+7,w
  3084  0E13  00B3               	movwf	___flmul@a+1
  3085  0E14  0852               	movf	??_scale+6,w
  3086  0E15  00B2               	movwf	___flmul@a
  3087  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3088  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3089  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3090  0E1D  0831               	movf	?___flmul+3,w
  3091  0E1E  00CB               	movwf	?_scale+3
  3092  0E1F  0830               	movf	?___flmul+2,w
  3093  0E20  00CA               	movwf	?_scale+2
  3094  0E21  082F               	movf	?___flmul+1,w
  3095  0E22  00C9               	movwf	?_scale+1
  3096  0E23  082E               	movf	?___flmul,w
  3097  0E24  00C8               	movwf	?_scale
  3098  0E25  2FFF               	goto	l329
  3099  0E26                     l4001:
  3100                           
  3101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3102  0E26  085A               	movf	scale@scl,w
  3103  0E27  00CC               	movwf	??_scale
  3104  0E28  3001               	movlw	1
  3105  0E29                     u6755:
  3106  0E29  1003               	clrc
  3107  0E2A  0DCC               	rlf	??_scale,f
  3108  0E2B  3EFF               	addlw	-1
  3109  0E2C  1D03               	skipz
  3110  0E2D  2E29               	goto	u6755
  3111  0E2E  1003               	clrc
  3112  0E2F  0D4C               	rlf	??_scale,w
  3113  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3114  0E31  0084               	movwf	4
  3115  0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  3116  0E37  00CD               	movwf	??_scale+1
  3117  0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  3118  0E3D  00CE               	movwf	??_scale+2
  3119  0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  3120  0E43  00CF               	movwf	??_scale+3
  3121  0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  3122  0E49  00D0               	movwf	??_scale+4
  3123  0E4A  0850               	movf	??_scale+4,w
  3124  0E4B  00CB               	movwf	?_scale+3
  3125  0E4C  084F               	movf	??_scale+3,w
  3126  0E4D  00CA               	movwf	?_scale+2
  3127  0E4E  084E               	movf	??_scale+2,w
  3128  0E4F  00C9               	movwf	?_scale+1
  3129  0E50  084D               	movf	??_scale+1,w
  3130  0E51  00C8               	movwf	?_scale
  3131  0E52  2FFF               	goto	l329
  3132  0E53                     l4005:
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3135  0E53  085A               	movf	scale@scl,w
  3136  0E54  3A80               	xorlw	128
  3137  0E55  3E12               	addlw	-238
  3138  0E56  1C03               	skipc
  3139  0E57  2E59               	goto	u6761
  3140  0E58  2E5A               	goto	u6760
  3141  0E59                     u6761:
  3142  0E59  2F44               	goto	l4013
  3143  0E5A                     u6760:
  3144  0E5A                     l4007:
  3145                           
  3146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3147  0E5A  300A               	movlw	10
  3148  0E5B  00A4               	movwf	___awdiv@divisor
  3149  0E5C  3000               	movlw	0
  3150  0E5D  00A5               	movwf	___awdiv@divisor+1
  3151  0E5E  085A               	movf	scale@scl,w
  3152  0E5F  00A2               	movwf	___awmod@dividend
  3153  0E60  01A3               	clrf	___awmod@dividend+1
  3154  0E61  1BA2               	btfsc	___awmod@dividend,7
  3155  0E62  03A3               	decf	___awmod@dividend+1,f
  3156  0E63  3064               	movlw	100
  3157  0E64  00A0               	movwf	___awmod@divisor
  3158  0E65  3000               	movlw	0
  3159  0E66  00A1               	movwf	___awmod@divisor+1
  3160  0E67  160A  158A  2479  120A  158A  	fcall	___awmod
  3161  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  3162  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  3163  0E6E  0821               	movf	?___awmod+1,w
  3164  0E6F  00A7               	movwf	___awdiv@dividend+1
  3165  0E70  0820               	movf	?___awmod,w
  3166  0E71  00A6               	movwf	___awdiv@dividend
  3167  0E72  160A  158A  25A2  120A  158A  	fcall	___awdiv
  3168  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0E79  0824               	movf	?___awdiv,w
  3171  0E7A  00CC               	movwf	??_scale
  3172  0E7B  3001               	movlw	1
  3173  0E7C                     u6775:
  3174  0E7C  1003               	clrc
  3175  0E7D  0DCC               	rlf	??_scale,f
  3176  0E7E  3EFF               	addlw	-1
  3177  0E7F  1D03               	skipz
  3178  0E80  2E7C               	goto	u6775
  3179  0E81  1003               	clrc
  3180  0E82  0D4C               	rlf	??_scale,w
  3181  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3182  0E84  0084               	movwf	4
  3183  0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  3184  0E8A  00CD               	movwf	??_scale+1
  3185  0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  3186  0E90  00CE               	movwf	??_scale+2
  3187  0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  3188  0E96  00CF               	movwf	??_scale+3
  3189  0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  3190  0E9C  00D0               	movwf	??_scale+4
  3191  0E9D  0850               	movf	??_scale+4,w
  3192  0E9E  00B1               	movwf	___flmul@b+3
  3193  0E9F  084F               	movf	??_scale+3,w
  3194  0EA0  00B0               	movwf	___flmul@b+2
  3195  0EA1  084E               	movf	??_scale+2,w
  3196  0EA2  00AF               	movwf	___flmul@b+1
  3197  0EA3  084D               	movf	??_scale+1,w
  3198  0EA4  00AE               	movwf	___flmul@b
  3199  0EA5  3064               	movlw	100
  3200  0EA6  00A4               	movwf	___awdiv@divisor
  3201  0EA7  3000               	movlw	0
  3202  0EA8  00A5               	movwf	___awdiv@divisor+1
  3203  0EA9  085A               	movf	scale@scl,w
  3204  0EAA  00A6               	movwf	___awdiv@dividend
  3205  0EAB  01A7               	clrf	___awdiv@dividend+1
  3206  0EAC  1BA6               	btfsc	___awdiv@dividend,7
  3207  0EAD  03A7               	decf	___awdiv@dividend+1,f
  3208  0EAE  160A  158A  25A2  120A  158A  	fcall	___awdiv
  3209  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3210  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3211  0EB5  0824               	movf	?___awdiv,w
  3212  0EB6  00D1               	movwf	??_scale+5
  3213  0EB7  3001               	movlw	1
  3214  0EB8                     u6785:
  3215  0EB8  1003               	clrc
  3216  0EB9  0DD1               	rlf	??_scale+5,f
  3217  0EBA  3EFF               	addlw	-1
  3218  0EBB  1D03               	skipz
  3219  0EBC  2EB8               	goto	u6785
  3220  0EBD  1003               	clrc
  3221  0EBE  0D51               	rlf	??_scale+5,w
  3222  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3223  0EC0  0084               	movwf	4
  3224  0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  3225  0EC6  00D2               	movwf	??_scale+6
  3226  0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  3227  0ECC  00D3               	movwf	??_scale+7
  3228  0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  3229  0ED2  00D4               	movwf	??_scale+8
  3230  0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  3231  0ED8  00D5               	movwf	??_scale+9
  3232  0ED9  0855               	movf	??_scale+9,w
  3233  0EDA  00B5               	movwf	___flmul@a+3
  3234  0EDB  0854               	movf	??_scale+8,w
  3235  0EDC  00B4               	movwf	___flmul@a+2
  3236  0EDD  0853               	movf	??_scale+7,w
  3237  0EDE  00B3               	movwf	___flmul@a+1
  3238  0EDF  0852               	movf	??_scale+6,w
  3239  0EE0  00B2               	movwf	___flmul@a
  3240  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3241  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3242  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3243  0EE8  0831               	movf	?___flmul+3,w
  3244  0EE9  00D9               	movwf	_scale$1196+3
  3245  0EEA  0830               	movf	?___flmul+2,w
  3246  0EEB  00D8               	movwf	_scale$1196+2
  3247  0EEC  082F               	movf	?___flmul+1,w
  3248  0EED  00D7               	movwf	_scale$1196+1
  3249  0EEE  082E               	movf	?___flmul,w
  3250  0EEF  00D6               	movwf	_scale$1196
  3251                           
  3252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3253  0EF0  300A               	movlw	10
  3254  0EF1  00A0               	movwf	___awmod@divisor
  3255  0EF2  3000               	movlw	0
  3256  0EF3  00A1               	movwf	___awmod@divisor+1
  3257  0EF4  085A               	movf	scale@scl,w
  3258  0EF5  00A2               	movwf	___awmod@dividend
  3259  0EF6  01A3               	clrf	___awmod@dividend+1
  3260  0EF7  1BA2               	btfsc	___awmod@dividend,7
  3261  0EF8  03A3               	decf	___awmod@dividend+1,f
  3262  0EF9  160A  158A  2479  120A  158A  	fcall	___awmod
  3263  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  3264  0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  3265  0F00  0820               	movf	?___awmod,w
  3266  0F01  00CC               	movwf	??_scale
  3267  0F02  3001               	movlw	1
  3268  0F03                     u6795:
  3269  0F03  1003               	clrc
  3270  0F04  0DCC               	rlf	??_scale,f
  3271  0F05  3EFF               	addlw	-1
  3272  0F06  1D03               	skipz
  3273  0F07  2F03               	goto	u6795
  3274  0F08  1003               	clrc
  3275  0F09  0D4C               	rlf	??_scale,w
  3276  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3277  0F0B  0084               	movwf	4
  3278  0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3279  0F11  00CD               	movwf	??_scale+1
  3280  0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  3281  0F17  00CE               	movwf	??_scale+2
  3282  0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  3283  0F1D  00CF               	movwf	??_scale+3
  3284  0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  3285  0F23  00D0               	movwf	??_scale+4
  3286  0F24  0850               	movf	??_scale+4,w
  3287  0F25  00B1               	movwf	___flmul@b+3
  3288  0F26  084F               	movf	??_scale+3,w
  3289  0F27  00B0               	movwf	___flmul@b+2
  3290  0F28  084E               	movf	??_scale+2,w
  3291  0F29  00AF               	movwf	___flmul@b+1
  3292  0F2A  084D               	movf	??_scale+1,w
  3293  0F2B  00AE               	movwf	___flmul@b
  3294  0F2C  0859               	movf	_scale$1196+3,w
  3295  0F2D  00B5               	movwf	___flmul@a+3
  3296  0F2E  0858               	movf	_scale$1196+2,w
  3297  0F2F  00B4               	movwf	___flmul@a+2
  3298  0F30  0857               	movf	_scale$1196+1,w
  3299  0F31  00B3               	movwf	___flmul@a+1
  3300  0F32  0856               	movf	_scale$1196,w
  3301  0F33  00B2               	movwf	___flmul@a
  3302  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3303  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3304  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3305  0F3B  0831               	movf	?___flmul+3,w
  3306  0F3C  00CB               	movwf	?_scale+3
  3307  0F3D  0830               	movf	?___flmul+2,w
  3308  0F3E  00CA               	movwf	?_scale+2
  3309  0F3F  082F               	movf	?___flmul+1,w
  3310  0F40  00C9               	movwf	?_scale+1
  3311  0F41  082E               	movf	?___flmul,w
  3312  0F42  00C8               	movwf	?_scale
  3313  0F43  2FFF               	goto	l329
  3314  0F44                     l4013:
  3315  0F44  085A               	movf	scale@scl,w
  3316  0F45  3A80               	xorlw	128
  3317  0F46  3E75               	addlw	-139
  3318  0F47  1C03               	skipc
  3319  0F48  2F4A               	goto	u6801
  3320  0F49  2F4B               	goto	u6800
  3321  0F4A                     u6801:
  3322  0F4A  2FD3               	goto	l4019
  3323  0F4B                     u6800:
  3324  0F4B                     l4015:
  3325                           
  3326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3327  0F4B  300A               	movlw	10
  3328  0F4C  00A0               	movwf	___awmod@divisor
  3329  0F4D  3000               	movlw	0
  3330  0F4E  00A1               	movwf	___awmod@divisor+1
  3331  0F4F  085A               	movf	scale@scl,w
  3332  0F50  00A2               	movwf	___awmod@dividend
  3333  0F51  01A3               	clrf	___awmod@dividend+1
  3334  0F52  1BA2               	btfsc	___awmod@dividend,7
  3335  0F53  03A3               	decf	___awmod@dividend+1,f
  3336  0F54  160A  158A  2479  120A  158A  	fcall	___awmod
  3337  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  3339  0F5B  0820               	movf	?___awmod,w
  3340  0F5C  00CC               	movwf	??_scale
  3341  0F5D  3001               	movlw	1
  3342  0F5E                     u6815:
  3343  0F5E  1003               	clrc
  3344  0F5F  0DCC               	rlf	??_scale,f
  3345  0F60  3EFF               	addlw	-1
  3346  0F61  1D03               	skipz
  3347  0F62  2F5E               	goto	u6815
  3348  0F63  1003               	clrc
  3349  0F64  0D4C               	rlf	??_scale,w
  3350  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3351  0F66  0084               	movwf	4
  3352  0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  3353  0F6C  00CD               	movwf	??_scale+1
  3354  0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3355  0F72  00CE               	movwf	??_scale+2
  3356  0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  3357  0F78  00CF               	movwf	??_scale+3
  3358  0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  3359  0F7E  00D0               	movwf	??_scale+4
  3360  0F7F  0850               	movf	??_scale+4,w
  3361  0F80  00B1               	movwf	___flmul@b+3
  3362  0F81  084F               	movf	??_scale+3,w
  3363  0F82  00B0               	movwf	___flmul@b+2
  3364  0F83  084E               	movf	??_scale+2,w
  3365  0F84  00AF               	movwf	___flmul@b+1
  3366  0F85  084D               	movf	??_scale+1,w
  3367  0F86  00AE               	movwf	___flmul@b
  3368  0F87  300A               	movlw	10
  3369  0F88  00A4               	movwf	___awdiv@divisor
  3370  0F89  3000               	movlw	0
  3371  0F8A  00A5               	movwf	___awdiv@divisor+1
  3372  0F8B  085A               	movf	scale@scl,w
  3373  0F8C  00A6               	movwf	___awdiv@dividend
  3374  0F8D  01A7               	clrf	___awdiv@dividend+1
  3375  0F8E  1BA6               	btfsc	___awdiv@dividend,7
  3376  0F8F  03A7               	decf	___awdiv@dividend+1,f
  3377  0F90  160A  158A  25A2  120A  158A  	fcall	___awdiv
  3378  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3379  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3380  0F97  0824               	movf	?___awdiv,w
  3381  0F98  00D1               	movwf	??_scale+5
  3382  0F99  3001               	movlw	1
  3383  0F9A                     u6825:
  3384  0F9A  1003               	clrc
  3385  0F9B  0DD1               	rlf	??_scale+5,f
  3386  0F9C  3EFF               	addlw	-1
  3387  0F9D  1D03               	skipz
  3388  0F9E  2F9A               	goto	u6825
  3389  0F9F  1003               	clrc
  3390  0FA0  0D51               	rlf	??_scale+5,w
  3391  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3392  0FA2  0084               	movwf	4
  3393  0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  3394  0FA8  00D2               	movwf	??_scale+6
  3395  0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  3396  0FAE  00D3               	movwf	??_scale+7
  3397  0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  3398  0FB4  00D4               	movwf	??_scale+8
  3399  0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  3400  0FBA  00D5               	movwf	??_scale+9
  3401  0FBB  0855               	movf	??_scale+9,w
  3402  0FBC  00B5               	movwf	___flmul@a+3
  3403  0FBD  0854               	movf	??_scale+8,w
  3404  0FBE  00B4               	movwf	___flmul@a+2
  3405  0FBF  0853               	movf	??_scale+7,w
  3406  0FC0  00B3               	movwf	___flmul@a+1
  3407  0FC1  0852               	movf	??_scale+6,w
  3408  0FC2  00B2               	movwf	___flmul@a
  3409  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3410  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3411  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3412  0FCA  0831               	movf	?___flmul+3,w
  3413  0FCB  00CB               	movwf	?_scale+3
  3414  0FCC  0830               	movf	?___flmul+2,w
  3415  0FCD  00CA               	movwf	?_scale+2
  3416  0FCE  082F               	movf	?___flmul+1,w
  3417  0FCF  00C9               	movwf	?_scale+1
  3418  0FD0  082E               	movf	?___flmul,w
  3419  0FD1  00C8               	movwf	?_scale
  3420  0FD2  2FFF               	goto	l329
  3421  0FD3                     l4019:
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3424  0FD3  085A               	movf	scale@scl,w
  3425  0FD4  00CC               	movwf	??_scale
  3426  0FD5  3001               	movlw	1
  3427  0FD6                     u6835:
  3428  0FD6  1003               	clrc
  3429  0FD7  0DCC               	rlf	??_scale,f
  3430  0FD8  3EFF               	addlw	-1
  3431  0FD9  1D03               	skipz
  3432  0FDA  2FD6               	goto	u6835
  3433  0FDB  1003               	clrc
  3434  0FDC  0D4C               	rlf	??_scale,w
  3435  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3436  0FDE  0084               	movwf	4
  3437  0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  3438  0FE4  00CD               	movwf	??_scale+1
  3439  0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  3440  0FEA  00CE               	movwf	??_scale+2
  3441  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  3442  0FF0  00CF               	movwf	??_scale+3
  3443  0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  3444  0FF6  00D0               	movwf	??_scale+4
  3445  0FF7  0850               	movf	??_scale+4,w
  3446  0FF8  00CB               	movwf	?_scale+3
  3447  0FF9  084F               	movf	??_scale+3,w
  3448  0FFA  00CA               	movwf	?_scale+2
  3449  0FFB  084E               	movf	??_scale+2,w
  3450  0FFC  00C9               	movwf	?_scale+1
  3451  0FFD  084D               	movf	??_scale+1,w
  3452  0FFE  00C8               	movwf	?_scale
  3453  0FFF                     l329:
  3454  0FFF  0008               	return
  3455  1000                     __end_of_scale:
  3456                           
  3457                           	psect	text3
  3458  1C79                     __ptext3:	
  3459 ;; *************** function ___awmod *****************
  3460 ;; Defined at:
  3461 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  divisor         2    0[BANK0 ] int 
  3464 ;;  dividend        2    2[BANK0 ] int 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  sign            1    7[COMMON] unsigned char 
  3467 ;;  counter         1    6[COMMON] unsigned char 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  2    0[BANK0 ] int 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3477 ;;      Params:         0       4       0       0       0
  3478 ;;      Locals:         2       0       0       0       0
  3479 ;;      Temps:          1       0       0       0       0
  3480 ;;      Totals:         3       4       0       0       0
  3481 ;;Total ram usage:        7 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    2
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_scale
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           
  3492                           ;psect for function ___awmod
  3493  1C79                     ___awmod:
  3494  1C79                     l3717:	
  3495                           ;incstack = 0
  3496                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3497                           
  3498  1C79  01F7               	clrf	___awmod@sign
  3499  1C7A                     l3719:
  3500  1C7A  1283               	bcf	3,5	;RP0=0, select bank0
  3501  1C7B  1303               	bcf	3,6	;RP1=0, select bank0
  3502  1C7C  1FA3               	btfss	___awmod@dividend+1,7
  3503  1C7D  2C7F               	goto	u6001
  3504  1C7E  2C80               	goto	u6000
  3505  1C7F                     u6001:
  3506  1C7F  2C87               	goto	l3725
  3507  1C80                     u6000:
  3508  1C80                     l3721:
  3509  1C80  09A2               	comf	___awmod@dividend,f
  3510  1C81  09A3               	comf	___awmod@dividend+1,f
  3511  1C82  0AA2               	incf	___awmod@dividend,f
  3512  1C83  1903               	skipnz
  3513  1C84  0AA3               	incf	___awmod@dividend+1,f
  3514  1C85                     l3723:
  3515  1C85  01F7               	clrf	___awmod@sign
  3516  1C86  0AF7               	incf	___awmod@sign,f
  3517  1C87                     l3725:
  3518  1C87  1FA1               	btfss	___awmod@divisor+1,7
  3519  1C88  2C8A               	goto	u6011
  3520  1C89  2C8B               	goto	u6010
  3521  1C8A                     u6011:
  3522  1C8A  2C90               	goto	l3729
  3523  1C8B                     u6010:
  3524  1C8B                     l3727:
  3525  1C8B  09A0               	comf	___awmod@divisor,f
  3526  1C8C  09A1               	comf	___awmod@divisor+1,f
  3527  1C8D  0AA0               	incf	___awmod@divisor,f
  3528  1C8E  1903               	skipnz
  3529  1C8F  0AA1               	incf	___awmod@divisor+1,f
  3530  1C90                     l3729:
  3531  1C90  0820               	movf	___awmod@divisor,w
  3532  1C91  0421               	iorwf	___awmod@divisor+1,w
  3533  1C92  1903               	btfsc	3,2
  3534  1C93  2C95               	goto	u6021
  3535  1C94  2C96               	goto	u6020
  3536  1C95                     u6021:
  3537  1C95  2CC5               	goto	l3747
  3538  1C96                     u6020:
  3539  1C96                     l3731:
  3540  1C96  01F6               	clrf	___awmod@counter
  3541  1C97  0AF6               	incf	___awmod@counter,f
  3542  1C98  2CA4               	goto	l3737
  3543  1C99                     l3733:
  3544  1C99  3001               	movlw	1
  3545  1C9A                     u6035:
  3546  1C9A  1003               	clrc
  3547  1C9B  0DA0               	rlf	___awmod@divisor,f
  3548  1C9C  0DA1               	rlf	___awmod@divisor+1,f
  3549  1C9D  3EFF               	addlw	-1
  3550  1C9E  1D03               	skipz
  3551  1C9F  2C9A               	goto	u6035
  3552  1CA0                     l3735:
  3553  1CA0  3001               	movlw	1
  3554  1CA1  00F5               	movwf	??___awmod
  3555  1CA2  0875               	movf	??___awmod,w
  3556  1CA3  07F6               	addwf	___awmod@counter,f
  3557  1CA4                     l3737:
  3558  1CA4  1FA1               	btfss	___awmod@divisor+1,7
  3559  1CA5  2CA7               	goto	u6041
  3560  1CA6  2CA8               	goto	u6040
  3561  1CA7                     u6041:
  3562  1CA7  2C99               	goto	l3733
  3563  1CA8                     u6040:
  3564  1CA8                     l3739:
  3565  1CA8  0821               	movf	___awmod@divisor+1,w
  3566  1CA9  0223               	subwf	___awmod@dividend+1,w
  3567  1CAA  1D03               	skipz
  3568  1CAB  2CAE               	goto	u6055
  3569  1CAC  0820               	movf	___awmod@divisor,w
  3570  1CAD  0222               	subwf	___awmod@dividend,w
  3571  1CAE                     u6055:
  3572  1CAE  1C03               	skipc
  3573  1CAF  2CB1               	goto	u6051
  3574  1CB0  2CB2               	goto	u6050
  3575  1CB1                     u6051:
  3576  1CB1  2CB8               	goto	l3743
  3577  1CB2                     u6050:
  3578  1CB2                     l3741:
  3579  1CB2  0820               	movf	___awmod@divisor,w
  3580  1CB3  02A2               	subwf	___awmod@dividend,f
  3581  1CB4  0821               	movf	___awmod@divisor+1,w
  3582  1CB5  1C03               	skipc
  3583  1CB6  03A3               	decf	___awmod@dividend+1,f
  3584  1CB7  02A3               	subwf	___awmod@dividend+1,f
  3585  1CB8                     l3743:
  3586  1CB8  3001               	movlw	1
  3587  1CB9                     u6065:
  3588  1CB9  1003               	clrc
  3589  1CBA  0CA1               	rrf	___awmod@divisor+1,f
  3590  1CBB  0CA0               	rrf	___awmod@divisor,f
  3591  1CBC  3EFF               	addlw	-1
  3592  1CBD  1D03               	skipz
  3593  1CBE  2CB9               	goto	u6065
  3594  1CBF                     l3745:
  3595  1CBF  3001               	movlw	1
  3596  1CC0  02F6               	subwf	___awmod@counter,f
  3597  1CC1  1D03               	btfss	3,2
  3598  1CC2  2CC4               	goto	u6071
  3599  1CC3  2CC5               	goto	u6070
  3600  1CC4                     u6071:
  3601  1CC4  2CA8               	goto	l3739
  3602  1CC5                     u6070:
  3603  1CC5                     l3747:
  3604  1CC5  0877               	movf	___awmod@sign,w
  3605  1CC6  1903               	btfsc	3,2
  3606  1CC7  2CC9               	goto	u6081
  3607  1CC8  2CCA               	goto	u6080
  3608  1CC9                     u6081:
  3609  1CC9  2CCF               	goto	l3751
  3610  1CCA                     u6080:
  3611  1CCA                     l3749:
  3612  1CCA  09A2               	comf	___awmod@dividend,f
  3613  1CCB  09A3               	comf	___awmod@dividend+1,f
  3614  1CCC  0AA2               	incf	___awmod@dividend,f
  3615  1CCD  1903               	skipnz
  3616  1CCE  0AA3               	incf	___awmod@dividend+1,f
  3617  1CCF                     l3751:
  3618  1CCF  0823               	movf	___awmod@dividend+1,w
  3619  1CD0  00A1               	movwf	?___awmod+1
  3620  1CD1  0822               	movf	___awmod@dividend,w
  3621  1CD2  00A0               	movwf	?___awmod
  3622  1CD3                     l582:
  3623  1CD3  0008               	return
  3624  1CD4                     __end_of___awmod:
  3625                           
  3626                           	psect	text4
  3627  1DA2                     __ptext4:	
  3628 ;; *************** function ___awdiv *****************
  3629 ;; Defined at:
  3630 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  divisor         2    4[BANK0 ] int 
  3633 ;;  dividend        2    6[BANK0 ] int 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  quotient        2   11[BANK0 ] int 
  3636 ;;  sign            1   10[BANK0 ] unsigned char 
  3637 ;;  counter         1    9[BANK0 ] unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  2    4[BANK0 ] int 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2, status,0
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3647 ;;      Params:         0       4       0       0       0
  3648 ;;      Locals:         0       4       0       0       0
  3649 ;;      Temps:          0       1       0       0       0
  3650 ;;      Totals:         0       9       0       0       0
  3651 ;;Total ram usage:        9 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    2
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_scale
  3658 ;;		_sprintf
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           
  3663                           ;psect for function ___awdiv
  3664  1DA2                     ___awdiv:
  3665  1DA2                     l2363:	
  3666                           ;incstack = 0
  3667                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3668                           
  3669  1DA2  1283               	bcf	3,5	;RP0=0, select bank0
  3670  1DA3  1303               	bcf	3,6	;RP1=0, select bank0
  3671  1DA4  01AA               	clrf	___awdiv@sign
  3672  1DA5                     l2365:
  3673  1DA5  1FA5               	btfss	___awdiv@divisor+1,7
  3674  1DA6  2DA8               	goto	u3061
  3675  1DA7  2DA9               	goto	u3060
  3676  1DA8                     u3061:
  3677  1DA8  2DB0               	goto	l2371
  3678  1DA9                     u3060:
  3679  1DA9                     l2367:
  3680  1DA9  09A4               	comf	___awdiv@divisor,f
  3681  1DAA  09A5               	comf	___awdiv@divisor+1,f
  3682  1DAB  0AA4               	incf	___awdiv@divisor,f
  3683  1DAC  1903               	skipnz
  3684  1DAD  0AA5               	incf	___awdiv@divisor+1,f
  3685  1DAE                     l2369:
  3686  1DAE  01AA               	clrf	___awdiv@sign
  3687  1DAF  0AAA               	incf	___awdiv@sign,f
  3688  1DB0                     l2371:
  3689  1DB0  1FA7               	btfss	___awdiv@dividend+1,7
  3690  1DB1  2DB3               	goto	u3071
  3691  1DB2  2DB4               	goto	u3070
  3692  1DB3                     u3071:
  3693  1DB3  2DBD               	goto	l2377
  3694  1DB4                     u3070:
  3695  1DB4                     l2373:
  3696  1DB4  09A6               	comf	___awdiv@dividend,f
  3697  1DB5  09A7               	comf	___awdiv@dividend+1,f
  3698  1DB6  0AA6               	incf	___awdiv@dividend,f
  3699  1DB7  1903               	skipnz
  3700  1DB8  0AA7               	incf	___awdiv@dividend+1,f
  3701  1DB9                     l2375:
  3702  1DB9  3001               	movlw	1
  3703  1DBA  00A8               	movwf	??___awdiv
  3704  1DBB  0828               	movf	??___awdiv,w
  3705  1DBC  06AA               	xorwf	___awdiv@sign,f
  3706  1DBD                     l2377:
  3707  1DBD  01AB               	clrf	___awdiv@quotient
  3708  1DBE  01AC               	clrf	___awdiv@quotient+1
  3709  1DBF                     l2379:
  3710  1DBF  0824               	movf	___awdiv@divisor,w
  3711  1DC0  0425               	iorwf	___awdiv@divisor+1,w
  3712  1DC1  1903               	btfsc	3,2
  3713  1DC2  2DC4               	goto	u3081
  3714  1DC3  2DC5               	goto	u3080
  3715  1DC4                     u3081:
  3716  1DC4  2DFC               	goto	l2399
  3717  1DC5                     u3080:
  3718  1DC5                     l2381:
  3719  1DC5  01A9               	clrf	___awdiv@counter
  3720  1DC6  0AA9               	incf	___awdiv@counter,f
  3721  1DC7  2DD3               	goto	l2387
  3722  1DC8                     l2383:
  3723  1DC8  3001               	movlw	1
  3724  1DC9                     u3095:
  3725  1DC9  1003               	clrc
  3726  1DCA  0DA4               	rlf	___awdiv@divisor,f
  3727  1DCB  0DA5               	rlf	___awdiv@divisor+1,f
  3728  1DCC  3EFF               	addlw	-1
  3729  1DCD  1D03               	skipz
  3730  1DCE  2DC9               	goto	u3095
  3731  1DCF                     l2385:
  3732  1DCF  3001               	movlw	1
  3733  1DD0  00A8               	movwf	??___awdiv
  3734  1DD1  0828               	movf	??___awdiv,w
  3735  1DD2  07A9               	addwf	___awdiv@counter,f
  3736  1DD3                     l2387:
  3737  1DD3  1FA5               	btfss	___awdiv@divisor+1,7
  3738  1DD4  2DD6               	goto	u3101
  3739  1DD5  2DD7               	goto	u3100
  3740  1DD6                     u3101:
  3741  1DD6  2DC8               	goto	l2383
  3742  1DD7                     u3100:
  3743  1DD7                     l2389:
  3744  1DD7  3001               	movlw	1
  3745  1DD8                     u3115:
  3746  1DD8  1003               	clrc
  3747  1DD9  0DAB               	rlf	___awdiv@quotient,f
  3748  1DDA  0DAC               	rlf	___awdiv@quotient+1,f
  3749  1DDB  3EFF               	addlw	-1
  3750  1DDC  1D03               	skipz
  3751  1DDD  2DD8               	goto	u3115
  3752  1DDE  0825               	movf	___awdiv@divisor+1,w
  3753  1DDF  0227               	subwf	___awdiv@dividend+1,w
  3754  1DE0  1D03               	skipz
  3755  1DE1  2DE4               	goto	u3125
  3756  1DE2  0824               	movf	___awdiv@divisor,w
  3757  1DE3  0226               	subwf	___awdiv@dividend,w
  3758  1DE4                     u3125:
  3759  1DE4  1C03               	skipc
  3760  1DE5  2DE7               	goto	u3121
  3761  1DE6  2DE8               	goto	u3120
  3762  1DE7                     u3121:
  3763  1DE7  2DEF               	goto	l2395
  3764  1DE8                     u3120:
  3765  1DE8                     l2391:
  3766  1DE8  0824               	movf	___awdiv@divisor,w
  3767  1DE9  02A6               	subwf	___awdiv@dividend,f
  3768  1DEA  0825               	movf	___awdiv@divisor+1,w
  3769  1DEB  1C03               	skipc
  3770  1DEC  03A7               	decf	___awdiv@dividend+1,f
  3771  1DED  02A7               	subwf	___awdiv@dividend+1,f
  3772  1DEE                     l2393:
  3773  1DEE  142B               	bsf	___awdiv@quotient,0
  3774  1DEF                     l2395:
  3775  1DEF  3001               	movlw	1
  3776  1DF0                     u3135:
  3777  1DF0  1003               	clrc
  3778  1DF1  0CA5               	rrf	___awdiv@divisor+1,f
  3779  1DF2  0CA4               	rrf	___awdiv@divisor,f
  3780  1DF3  3EFF               	addlw	-1
  3781  1DF4  1D03               	skipz
  3782  1DF5  2DF0               	goto	u3135
  3783  1DF6                     l2397:
  3784  1DF6  3001               	movlw	1
  3785  1DF7  02A9               	subwf	___awdiv@counter,f
  3786  1DF8  1D03               	btfss	3,2
  3787  1DF9  2DFB               	goto	u3141
  3788  1DFA  2DFC               	goto	u3140
  3789  1DFB                     u3141:
  3790  1DFB  2DD7               	goto	l2389
  3791  1DFC                     u3140:
  3792  1DFC                     l2399:
  3793  1DFC  082A               	movf	___awdiv@sign,w
  3794  1DFD  1903               	btfsc	3,2
  3795  1DFE  2E00               	goto	u3151
  3796  1DFF  2E01               	goto	u3150
  3797  1E00                     u3151:
  3798  1E00  2E06               	goto	l2403
  3799  1E01                     u3150:
  3800  1E01                     l2401:
  3801  1E01  09AB               	comf	___awdiv@quotient,f
  3802  1E02  09AC               	comf	___awdiv@quotient+1,f
  3803  1E03  0AAB               	incf	___awdiv@quotient,f
  3804  1E04  1903               	skipnz
  3805  1E05  0AAC               	incf	___awdiv@quotient+1,f
  3806  1E06                     l2403:
  3807  1E06  082C               	movf	___awdiv@quotient+1,w
  3808  1E07  00A5               	movwf	?___awdiv+1
  3809  1E08  082B               	movf	___awdiv@quotient,w
  3810  1E09  00A4               	movwf	?___awdiv
  3811  1E0A                     l569:
  3812  1E0A  0008               	return
  3813  1E0B                     __end_of___awdiv:
  3814                           
  3815                           	psect	text5
  3816  18CF                     __ptext5:	
  3817 ;; *************** function _isdigit *****************
  3818 ;; Defined at:
  3819 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  c               1    wreg     unsigned char 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  c               1    6[COMMON] unsigned char 
  3824 ;; Return value:  Size  Location     Type
  3825 ;;		None               void
  3826 ;; Registers used:
  3827 ;;		wreg, status,2, status,0
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3833 ;;      Params:         0       0       0       0       0
  3834 ;;      Locals:         2       0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0
  3836 ;;      Totals:         2       0       0       0       0
  3837 ;;Total ram usage:        2 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    2
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_sprintf
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           
  3848                           ;psect for function _isdigit
  3849  18CF                     _isdigit:
  3850                           
  3851                           ;incstack = 0
  3852                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3853                           ;isdigit@c stored from wreg
  3854  18CF  00F6               	movwf	isdigit@c
  3855  18D0                     l2907:
  3856  18D0  01F5               	clrf	_isdigit$1010
  3857  18D1                     l2909:
  3858  18D1  303A               	movlw	58
  3859  18D2  0276               	subwf	isdigit@c,w
  3860  18D3  1803               	skipnc
  3861  18D4  28D6               	goto	u4461
  3862  18D5  28D7               	goto	u4460
  3863  18D6                     u4461:
  3864  18D6  28DF               	goto	l2915
  3865  18D7                     u4460:
  3866  18D7                     l2911:
  3867  18D7  3030               	movlw	48
  3868  18D8  0276               	subwf	isdigit@c,w
  3869  18D9  1C03               	skipc
  3870  18DA  28DC               	goto	u4471
  3871  18DB  28DD               	goto	u4470
  3872  18DC                     u4471:
  3873  18DC  28DF               	goto	l2915
  3874  18DD                     u4470:
  3875  18DD                     l2913:
  3876  18DD  01F5               	clrf	_isdigit$1010
  3877  18DE  0AF5               	incf	_isdigit$1010,f
  3878  18DF                     l2915:
  3879  18DF  0C75               	rrf	_isdigit$1010,w
  3880  18E0                     l903:
  3881  18E0  0008               	return
  3882  18E1                     __end_of_isdigit:
  3883                           
  3884                           	psect	text6
  3885  05E2                     __ptext6:	
  3886 ;; *************** function _fround *****************
  3887 ;; Defined at:
  3888 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  prec            1    wreg     unsigned char 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;  prec            1   59[BANK0 ] unsigned char 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  4   40[BANK0 ] unsigned char 
  3895 ;; Registers used:
  3896 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3902 ;;      Params:         0       4       0       0       0
  3903 ;;      Locals:         0       9       0       0       0
  3904 ;;      Temps:          0       7       0       0       0
  3905 ;;      Totals:         0      20       0       0       0
  3906 ;;Total ram usage:       20 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:    4
  3909 ;; This function calls:
  3910 ;;		___flmul
  3911 ;;		___lwdiv
  3912 ;;		___lwmod
  3913 ;; This function is called by:
  3914 ;;		_sprintf
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           
  3919                           ;psect for function _fround
  3920  05E2                     _fround:
  3921                           
  3922                           ;incstack = 0
  3923                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3924                           ;fround@prec stored from wreg
  3925  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  3926  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  3927  05E4  00DB               	movwf	fround@prec
  3928  05E5                     l3965:
  3929                           
  3930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3931  05E5  306E               	movlw	110
  3932  05E6  025B               	subwf	fround@prec,w
  3933  05E7  1C03               	skipc
  3934  05E8  2DEA               	goto	u6591
  3935  05E9  2DEB               	goto	u6590
  3936  05EA                     u6591:
  3937  05EA  2EFA               	goto	l3973
  3938  05EB                     u6590:
  3939  05EB                     l3967:
  3940                           
  3941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3942  05EB  303F               	movlw	63
  3943  05EC  00B1               	movwf	___flmul@b+3
  3944  05ED  3000               	movlw	0
  3945  05EE  00B0               	movwf	___flmul@b+2
  3946  05EF  3000               	movlw	0
  3947  05F0  00AF               	movwf	___flmul@b+1
  3948  05F1  3000               	movlw	0
  3949  05F2  00AE               	movwf	___flmul@b
  3950  05F3  3064               	movlw	100
  3951  05F4  00A4               	movwf	___lwdiv@divisor
  3952  05F5  3000               	movlw	0
  3953  05F6  00A5               	movwf	___lwdiv@divisor+1
  3954  05F7  085B               	movf	fround@prec,w
  3955  05F8  00CC               	movwf	??_fround
  3956  05F9  01CD               	clrf	??_fround+1
  3957  05FA  084C               	movf	??_fround,w
  3958  05FB  00A6               	movwf	___lwdiv@dividend
  3959  05FC  084D               	movf	??_fround+1,w
  3960  05FD  00A7               	movwf	___lwdiv@dividend+1
  3961  05FE  160A  158A  22F0  120A  118A  	fcall	___lwdiv
  3962  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3963  0604  1303               	bcf	3,6	;RP1=0, select bank0
  3964  0605  0824               	movf	?___lwdiv,w
  3965  0606  00CE               	movwf	??_fround+2
  3966  0607  3001               	movlw	1
  3967  0608                     u6605:
  3968  0608  1003               	clrc
  3969  0609  0DCE               	rlf	??_fround+2,f
  3970  060A  3EFF               	addlw	-1
  3971  060B  1D03               	skipz
  3972  060C  2E08               	goto	u6605
  3973  060D  1003               	clrc
  3974  060E  0D4E               	rlf	??_fround+2,w
  3975  060F  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3976  0610  0084               	movwf	4
  3977  0611  160A  118A  200A  120A  118A  	fcall	stringdir
  3978  0616  00CF               	movwf	??_fround+3
  3979  0617  160A  118A  200A  120A  118A  	fcall	stringdir
  3980  061C  00D0               	movwf	??_fround+4
  3981  061D  160A  118A  200A  120A  118A  	fcall	stringdir
  3982  0622  00D1               	movwf	??_fround+5
  3983  0623  160A  118A  200A  120A  118A  	fcall	stringdir
  3984  0628  00D2               	movwf	??_fround+6
  3985  0629  0852               	movf	??_fround+6,w
  3986  062A  00B5               	movwf	___flmul@a+3
  3987  062B  0851               	movf	??_fround+5,w
  3988  062C  00B4               	movwf	___flmul@a+2
  3989  062D  0850               	movf	??_fround+4,w
  3990  062E  00B3               	movwf	___flmul@a+1
  3991  062F  084F               	movf	??_fround+3,w
  3992  0630  00B2               	movwf	___flmul@a
  3993  0631  120A  158A  213C  120A  118A  	fcall	___flmul
  3994  0636  1283               	bcf	3,5	;RP0=0, select bank0
  3995  0637  1303               	bcf	3,6	;RP1=0, select bank0
  3996  0638  0831               	movf	?___flmul+3,w
  3997  0639  00DA               	movwf	_fround$1194+3
  3998  063A  0830               	movf	?___flmul+2,w
  3999  063B  00D9               	movwf	_fround$1194+2
  4000  063C  082F               	movf	?___flmul+1,w
  4001  063D  00D8               	movwf	_fround$1194+1
  4002  063E  082E               	movf	?___flmul,w
  4003  063F  00D7               	movwf	_fround$1194
  4004                           
  4005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4006  0640  300A               	movlw	10
  4007  0641  00A4               	movwf	___lwdiv@divisor
  4008  0642  3000               	movlw	0
  4009  0643  00A5               	movwf	___lwdiv@divisor+1
  4010  0644  085B               	movf	fround@prec,w
  4011  0645  00CC               	movwf	??_fround
  4012  0646  01CD               	clrf	??_fround+1
  4013  0647  084C               	movf	??_fround,w
  4014  0648  00A2               	movwf	___lwmod@dividend
  4015  0649  084D               	movf	??_fround+1,w
  4016  064A  00A3               	movwf	___lwmod@dividend+1
  4017  064B  3064               	movlw	100
  4018  064C  00A0               	movwf	___lwmod@divisor
  4019  064D  3000               	movlw	0
  4020  064E  00A1               	movwf	___lwmod@divisor+1
  4021  064F  160A  158A  21F0  120A  118A  	fcall	___lwmod
  4022  0654  1283               	bcf	3,5	;RP0=0, select bank0
  4023  0655  1303               	bcf	3,6	;RP1=0, select bank0
  4024  0656  0821               	movf	?___lwmod+1,w
  4025  0657  00A7               	movwf	___lwdiv@dividend+1
  4026  0658  0820               	movf	?___lwmod,w
  4027  0659  00A6               	movwf	___lwdiv@dividend
  4028  065A  160A  158A  22F0  120A  118A  	fcall	___lwdiv
  4029  065F  1283               	bcf	3,5	;RP0=0, select bank0
  4030  0660  1303               	bcf	3,6	;RP1=0, select bank0
  4031  0661  0824               	movf	?___lwdiv,w
  4032  0662  00CE               	movwf	??_fround+2
  4033  0663  3001               	movlw	1
  4034  0664                     u6615:
  4035  0664  1003               	clrc
  4036  0665  0DCE               	rlf	??_fround+2,f
  4037  0666  3EFF               	addlw	-1
  4038  0667  1D03               	skipz
  4039  0668  2E64               	goto	u6615
  4040  0669  1003               	clrc
  4041  066A  0D4E               	rlf	??_fround+2,w
  4042  066B  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4043  066C  0084               	movwf	4
  4044  066D  160A  118A  200A  120A  118A  	fcall	stringdir
  4045  0672  00CF               	movwf	??_fround+3
  4046  0673  160A  118A  200A  120A  118A  	fcall	stringdir
  4047  0678  00D0               	movwf	??_fround+4
  4048  0679  160A  118A  200A  120A  118A  	fcall	stringdir
  4049  067E  00D1               	movwf	??_fround+5
  4050  067F  160A  118A  200A  120A  118A  	fcall	stringdir
  4051  0684  00D2               	movwf	??_fround+6
  4052  0685  0852               	movf	??_fround+6,w
  4053  0686  00B1               	movwf	___flmul@b+3
  4054  0687  0851               	movf	??_fround+5,w
  4055  0688  00B0               	movwf	___flmul@b+2
  4056  0689  0850               	movf	??_fround+4,w
  4057  068A  00AF               	movwf	___flmul@b+1
  4058  068B  084F               	movf	??_fround+3,w
  4059  068C  00AE               	movwf	___flmul@b
  4060  068D  085A               	movf	_fround$1194+3,w
  4061  068E  00B5               	movwf	___flmul@a+3
  4062  068F  0859               	movf	_fround$1194+2,w
  4063  0690  00B4               	movwf	___flmul@a+2
  4064  0691  0858               	movf	_fround$1194+1,w
  4065  0692  00B3               	movwf	___flmul@a+1
  4066  0693  0857               	movf	_fround$1194,w
  4067  0694  00B2               	movwf	___flmul@a
  4068  0695  120A  158A  213C  120A  118A  	fcall	___flmul
  4069  069A  1283               	bcf	3,5	;RP0=0, select bank0
  4070  069B  1303               	bcf	3,6	;RP1=0, select bank0
  4071  069C  0831               	movf	?___flmul+3,w
  4072  069D  00D6               	movwf	_fround$1195+3
  4073  069E  0830               	movf	?___flmul+2,w
  4074  069F  00D5               	movwf	_fround$1195+2
  4075  06A0  082F               	movf	?___flmul+1,w
  4076  06A1  00D4               	movwf	_fround$1195+1
  4077  06A2  082E               	movf	?___flmul,w
  4078  06A3  00D3               	movwf	_fround$1195
  4079                           
  4080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4081  06A4  300A               	movlw	10
  4082  06A5  00A0               	movwf	___lwmod@divisor
  4083  06A6  3000               	movlw	0
  4084  06A7  00A1               	movwf	___lwmod@divisor+1
  4085  06A8  085B               	movf	fround@prec,w
  4086  06A9  00CC               	movwf	??_fround
  4087  06AA  01CD               	clrf	??_fround+1
  4088  06AB  084C               	movf	??_fround,w
  4089  06AC  00A2               	movwf	___lwmod@dividend
  4090  06AD  084D               	movf	??_fround+1,w
  4091  06AE  00A3               	movwf	___lwmod@dividend+1
  4092  06AF  160A  158A  21F0  120A  118A  	fcall	___lwmod
  4093  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  4094  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  4095  06B6  0820               	movf	?___lwmod,w
  4096  06B7  00CE               	movwf	??_fround+2
  4097  06B8  3001               	movlw	1
  4098  06B9                     u6625:
  4099  06B9  1003               	clrc
  4100  06BA  0DCE               	rlf	??_fround+2,f
  4101  06BB  3EFF               	addlw	-1
  4102  06BC  1D03               	skipz
  4103  06BD  2EB9               	goto	u6625
  4104  06BE  1003               	clrc
  4105  06BF  0D4E               	rlf	??_fround+2,w
  4106  06C0  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4107  06C1  0084               	movwf	4
  4108  06C2  160A  118A  200A  120A  118A  	fcall	stringdir
  4109  06C7  00CF               	movwf	??_fround+3
  4110  06C8  160A  118A  200A  120A  118A  	fcall	stringdir
  4111  06CD  00D0               	movwf	??_fround+4
  4112  06CE  160A  118A  200A  120A  118A  	fcall	stringdir
  4113  06D3  00D1               	movwf	??_fround+5
  4114  06D4  160A  118A  200A  120A  118A  	fcall	stringdir
  4115  06D9  00D2               	movwf	??_fround+6
  4116  06DA  0852               	movf	??_fround+6,w
  4117  06DB  00B1               	movwf	___flmul@b+3
  4118  06DC  0851               	movf	??_fround+5,w
  4119  06DD  00B0               	movwf	___flmul@b+2
  4120  06DE  0850               	movf	??_fround+4,w
  4121  06DF  00AF               	movwf	___flmul@b+1
  4122  06E0  084F               	movf	??_fround+3,w
  4123  06E1  00AE               	movwf	___flmul@b
  4124  06E2  0856               	movf	_fround$1195+3,w
  4125  06E3  00B5               	movwf	___flmul@a+3
  4126  06E4  0855               	movf	_fround$1195+2,w
  4127  06E5  00B4               	movwf	___flmul@a+2
  4128  06E6  0854               	movf	_fround$1195+1,w
  4129  06E7  00B3               	movwf	___flmul@a+1
  4130  06E8  0853               	movf	_fround$1195,w
  4131  06E9  00B2               	movwf	___flmul@a
  4132  06EA  120A  158A  213C  120A  118A  	fcall	___flmul
  4133  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  4134  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  4135  06F1  0831               	movf	?___flmul+3,w
  4136  06F2  00CB               	movwf	?_fround+3
  4137  06F3  0830               	movf	?___flmul+2,w
  4138  06F4  00CA               	movwf	?_fround+2
  4139  06F5  082F               	movf	?___flmul+1,w
  4140  06F6  00C9               	movwf	?_fround+1
  4141  06F7  082E               	movf	?___flmul,w
  4142  06F8  00C8               	movwf	?_fround
  4143  06F9  2FEE               	goto	l322
  4144  06FA                     l3973:
  4145  06FA  300B               	movlw	11
  4146  06FB  025B               	subwf	fround@prec,w
  4147  06FC  1C03               	skipc
  4148  06FD  2EFF               	goto	u6631
  4149  06FE  2F00               	goto	u6630
  4150  06FF                     u6631:
  4151  06FF  2FAB               	goto	l3979
  4152  0700                     u6630:
  4153  0700                     l3975:
  4154                           
  4155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4156  0700  303F               	movlw	63
  4157  0701  00B1               	movwf	___flmul@b+3
  4158  0702  3000               	movlw	0
  4159  0703  00B0               	movwf	___flmul@b+2
  4160  0704  3000               	movlw	0
  4161  0705  00AF               	movwf	___flmul@b+1
  4162  0706  3000               	movlw	0
  4163  0707  00AE               	movwf	___flmul@b
  4164  0708  300A               	movlw	10
  4165  0709  00A4               	movwf	___lwdiv@divisor
  4166  070A  3000               	movlw	0
  4167  070B  00A5               	movwf	___lwdiv@divisor+1
  4168  070C  085B               	movf	fround@prec,w
  4169  070D  00CC               	movwf	??_fround
  4170  070E  01CD               	clrf	??_fround+1
  4171  070F  084C               	movf	??_fround,w
  4172  0710  00A6               	movwf	___lwdiv@dividend
  4173  0711  084D               	movf	??_fround+1,w
  4174  0712  00A7               	movwf	___lwdiv@dividend+1
  4175  0713  160A  158A  22F0  120A  118A  	fcall	___lwdiv
  4176  0718  1283               	bcf	3,5	;RP0=0, select bank0
  4177  0719  1303               	bcf	3,6	;RP1=0, select bank0
  4178  071A  0824               	movf	?___lwdiv,w
  4179  071B  00CE               	movwf	??_fround+2
  4180  071C  3001               	movlw	1
  4181  071D                     u6645:
  4182  071D  1003               	clrc
  4183  071E  0DCE               	rlf	??_fround+2,f
  4184  071F  3EFF               	addlw	-1
  4185  0720  1D03               	skipz
  4186  0721  2F1D               	goto	u6645
  4187  0722  1003               	clrc
  4188  0723  0D4E               	rlf	??_fround+2,w
  4189  0724  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4190  0725  0084               	movwf	4
  4191  0726  160A  118A  200A  120A  118A  	fcall	stringdir
  4192  072B  00CF               	movwf	??_fround+3
  4193  072C  160A  118A  200A  120A  118A  	fcall	stringdir
  4194  0731  00D0               	movwf	??_fround+4
  4195  0732  160A  118A  200A  120A  118A  	fcall	stringdir
  4196  0737  00D1               	movwf	??_fround+5
  4197  0738  160A  118A  200A  120A  118A  	fcall	stringdir
  4198  073D  00D2               	movwf	??_fround+6
  4199  073E  0852               	movf	??_fround+6,w
  4200  073F  00B5               	movwf	___flmul@a+3
  4201  0740  0851               	movf	??_fround+5,w
  4202  0741  00B4               	movwf	___flmul@a+2
  4203  0742  0850               	movf	??_fround+4,w
  4204  0743  00B3               	movwf	___flmul@a+1
  4205  0744  084F               	movf	??_fround+3,w
  4206  0745  00B2               	movwf	___flmul@a
  4207  0746  120A  158A  213C  120A  118A  	fcall	___flmul
  4208  074B  1283               	bcf	3,5	;RP0=0, select bank0
  4209  074C  1303               	bcf	3,6	;RP1=0, select bank0
  4210  074D  0831               	movf	?___flmul+3,w
  4211  074E  00DA               	movwf	_fround$1194+3
  4212  074F  0830               	movf	?___flmul+2,w
  4213  0750  00D9               	movwf	_fround$1194+2
  4214  0751  082F               	movf	?___flmul+1,w
  4215  0752  00D8               	movwf	_fround$1194+1
  4216  0753  082E               	movf	?___flmul,w
  4217  0754  00D7               	movwf	_fround$1194
  4218                           
  4219                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4220  0755  300A               	movlw	10
  4221  0756  00A0               	movwf	___lwmod@divisor
  4222  0757  3000               	movlw	0
  4223  0758  00A1               	movwf	___lwmod@divisor+1
  4224  0759  085B               	movf	fround@prec,w
  4225  075A  00CC               	movwf	??_fround
  4226  075B  01CD               	clrf	??_fround+1
  4227  075C  084C               	movf	??_fround,w
  4228  075D  00A2               	movwf	___lwmod@dividend
  4229  075E  084D               	movf	??_fround+1,w
  4230  075F  00A3               	movwf	___lwmod@dividend+1
  4231  0760  160A  158A  21F0  120A  118A  	fcall	___lwmod
  4232  0765  1283               	bcf	3,5	;RP0=0, select bank0
  4233  0766  1303               	bcf	3,6	;RP1=0, select bank0
  4234  0767  0820               	movf	?___lwmod,w
  4235  0768  00CE               	movwf	??_fround+2
  4236  0769  3001               	movlw	1
  4237  076A                     u6655:
  4238  076A  1003               	clrc
  4239  076B  0DCE               	rlf	??_fround+2,f
  4240  076C  3EFF               	addlw	-1
  4241  076D  1D03               	skipz
  4242  076E  2F6A               	goto	u6655
  4243  076F  1003               	clrc
  4244  0770  0D4E               	rlf	??_fround+2,w
  4245  0771  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4246  0772  0084               	movwf	4
  4247  0773  160A  118A  200A  120A  118A  	fcall	stringdir
  4248  0778  00CF               	movwf	??_fround+3
  4249  0779  160A  118A  200A  120A  118A  	fcall	stringdir
  4250  077E  00D0               	movwf	??_fround+4
  4251  077F  160A  118A  200A  120A  118A  	fcall	stringdir
  4252  0784  00D1               	movwf	??_fround+5
  4253  0785  160A  118A  200A  120A  118A  	fcall	stringdir
  4254  078A  00D2               	movwf	??_fround+6
  4255  078B  0852               	movf	??_fround+6,w
  4256  078C  00B1               	movwf	___flmul@b+3
  4257  078D  0851               	movf	??_fround+5,w
  4258  078E  00B0               	movwf	___flmul@b+2
  4259  078F  0850               	movf	??_fround+4,w
  4260  0790  00AF               	movwf	___flmul@b+1
  4261  0791  084F               	movf	??_fround+3,w
  4262  0792  00AE               	movwf	___flmul@b
  4263  0793  085A               	movf	_fround$1194+3,w
  4264  0794  00B5               	movwf	___flmul@a+3
  4265  0795  0859               	movf	_fround$1194+2,w
  4266  0796  00B4               	movwf	___flmul@a+2
  4267  0797  0858               	movf	_fround$1194+1,w
  4268  0798  00B3               	movwf	___flmul@a+1
  4269  0799  0857               	movf	_fround$1194,w
  4270  079A  00B2               	movwf	___flmul@a
  4271  079B  120A  158A  213C  120A  118A  	fcall	___flmul
  4272  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  4273  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  4274  07A2  0831               	movf	?___flmul+3,w
  4275  07A3  00CB               	movwf	?_fround+3
  4276  07A4  0830               	movf	?___flmul+2,w
  4277  07A5  00CA               	movwf	?_fround+2
  4278  07A6  082F               	movf	?___flmul+1,w
  4279  07A7  00C9               	movwf	?_fround+1
  4280  07A8  082E               	movf	?___flmul,w
  4281  07A9  00C8               	movwf	?_fround
  4282  07AA  2FEE               	goto	l322
  4283  07AB                     l3979:
  4284                           
  4285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4286  07AB  303F               	movlw	63
  4287  07AC  00B1               	movwf	___flmul@b+3
  4288  07AD  3000               	movlw	0
  4289  07AE  00B0               	movwf	___flmul@b+2
  4290  07AF  3000               	movlw	0
  4291  07B0  00AF               	movwf	___flmul@b+1
  4292  07B1  3000               	movlw	0
  4293  07B2  00AE               	movwf	___flmul@b
  4294  07B3  085B               	movf	fround@prec,w
  4295  07B4  00CC               	movwf	??_fround
  4296  07B5  3001               	movlw	1
  4297  07B6                     u6665:
  4298  07B6  1003               	clrc
  4299  07B7  0DCC               	rlf	??_fround,f
  4300  07B8  3EFF               	addlw	-1
  4301  07B9  1D03               	skipz
  4302  07BA  2FB6               	goto	u6665
  4303  07BB  1003               	clrc
  4304  07BC  0D4C               	rlf	??_fround,w
  4305  07BD  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4306  07BE  0084               	movwf	4
  4307  07BF  160A  118A  200A  120A  118A  	fcall	stringdir
  4308  07C4  00CD               	movwf	??_fround+1
  4309  07C5  160A  118A  200A  120A  118A  	fcall	stringdir
  4310  07CA  00CE               	movwf	??_fround+2
  4311  07CB  160A  118A  200A  120A  118A  	fcall	stringdir
  4312  07D0  00CF               	movwf	??_fround+3
  4313  07D1  160A  118A  200A  120A  118A  	fcall	stringdir
  4314  07D6  00D0               	movwf	??_fround+4
  4315  07D7  0850               	movf	??_fround+4,w
  4316  07D8  00B5               	movwf	___flmul@a+3
  4317  07D9  084F               	movf	??_fround+3,w
  4318  07DA  00B4               	movwf	___flmul@a+2
  4319  07DB  084E               	movf	??_fround+2,w
  4320  07DC  00B3               	movwf	___flmul@a+1
  4321  07DD  084D               	movf	??_fround+1,w
  4322  07DE  00B2               	movwf	___flmul@a
  4323  07DF  120A  158A  213C  120A  118A  	fcall	___flmul
  4324  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  4325  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  4326  07E6  0831               	movf	?___flmul+3,w
  4327  07E7  00CB               	movwf	?_fround+3
  4328  07E8  0830               	movf	?___flmul+2,w
  4329  07E9  00CA               	movwf	?_fround+2
  4330  07EA  082F               	movf	?___flmul+1,w
  4331  07EB  00C9               	movwf	?_fround+1
  4332  07EC  082E               	movf	?___flmul,w
  4333  07ED  00C8               	movwf	?_fround
  4334  07EE                     l322:
  4335  07EE  0008               	return
  4336  07EF                     __end_of_fround:
  4337                           
  4338                           	psect	text7
  4339  19F0                     __ptext7:	
  4340 ;; *************** function ___lwmod *****************
  4341 ;; Defined at:
  4342 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  divisor         2    0[BANK0 ] unsigned int 
  4345 ;;  dividend        2    2[BANK0 ] unsigned int 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  counter         1    6[COMMON] unsigned char 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  2    0[BANK0 ] unsigned int 
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4357 ;;      Params:         0       4       0       0       0
  4358 ;;      Locals:         1       0       0       0       0
  4359 ;;      Temps:          1       0       0       0       0
  4360 ;;      Totals:         2       4       0       0       0
  4361 ;;Total ram usage:        6 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    2
  4364 ;; This function calls:
  4365 ;;		Nothing
  4366 ;; This function is called by:
  4367 ;;		_fround
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           
  4372                           ;psect for function ___lwmod
  4373  19F0                     ___lwmod:
  4374  19F0                     l3781:	
  4375                           ;incstack = 0
  4376                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4377                           
  4378  19F0  1283               	bcf	3,5	;RP0=0, select bank0
  4379  19F1  1303               	bcf	3,6	;RP1=0, select bank0
  4380  19F2  0820               	movf	___lwmod@divisor,w
  4381  19F3  0421               	iorwf	___lwmod@divisor+1,w
  4382  19F4  1903               	btfsc	3,2
  4383  19F5  29F7               	goto	u6161
  4384  19F6  29F8               	goto	u6160
  4385  19F7                     u6161:
  4386  19F7  2A27               	goto	l3799
  4387  19F8                     u6160:
  4388  19F8                     l3783:
  4389  19F8  01F6               	clrf	___lwmod@counter
  4390  19F9  0AF6               	incf	___lwmod@counter,f
  4391  19FA  2A06               	goto	l3789
  4392  19FB                     l3785:
  4393  19FB  3001               	movlw	1
  4394  19FC                     u6175:
  4395  19FC  1003               	clrc
  4396  19FD  0DA0               	rlf	___lwmod@divisor,f
  4397  19FE  0DA1               	rlf	___lwmod@divisor+1,f
  4398  19FF  3EFF               	addlw	-1
  4399  1A00  1D03               	skipz
  4400  1A01  29FC               	goto	u6175
  4401  1A02                     l3787:
  4402  1A02  3001               	movlw	1
  4403  1A03  00F5               	movwf	??___lwmod
  4404  1A04  0875               	movf	??___lwmod,w
  4405  1A05  07F6               	addwf	___lwmod@counter,f
  4406  1A06                     l3789:
  4407  1A06  1FA1               	btfss	___lwmod@divisor+1,7
  4408  1A07  2A09               	goto	u6181
  4409  1A08  2A0A               	goto	u6180
  4410  1A09                     u6181:
  4411  1A09  29FB               	goto	l3785
  4412  1A0A                     u6180:
  4413  1A0A                     l3791:
  4414  1A0A  0821               	movf	___lwmod@divisor+1,w
  4415  1A0B  0223               	subwf	___lwmod@dividend+1,w
  4416  1A0C  1D03               	skipz
  4417  1A0D  2A10               	goto	u6195
  4418  1A0E  0820               	movf	___lwmod@divisor,w
  4419  1A0F  0222               	subwf	___lwmod@dividend,w
  4420  1A10                     u6195:
  4421  1A10  1C03               	skipc
  4422  1A11  2A13               	goto	u6191
  4423  1A12  2A14               	goto	u6190
  4424  1A13                     u6191:
  4425  1A13  2A1A               	goto	l3795
  4426  1A14                     u6190:
  4427  1A14                     l3793:
  4428  1A14  0820               	movf	___lwmod@divisor,w
  4429  1A15  02A2               	subwf	___lwmod@dividend,f
  4430  1A16  0821               	movf	___lwmod@divisor+1,w
  4431  1A17  1C03               	skipc
  4432  1A18  03A3               	decf	___lwmod@dividend+1,f
  4433  1A19  02A3               	subwf	___lwmod@dividend+1,f
  4434  1A1A                     l3795:
  4435  1A1A  3001               	movlw	1
  4436  1A1B                     u6205:
  4437  1A1B  1003               	clrc
  4438  1A1C  0CA1               	rrf	___lwmod@divisor+1,f
  4439  1A1D  0CA0               	rrf	___lwmod@divisor,f
  4440  1A1E  3EFF               	addlw	-1
  4441  1A1F  1D03               	skipz
  4442  1A20  2A1B               	goto	u6205
  4443  1A21                     l3797:
  4444  1A21  3001               	movlw	1
  4445  1A22  02F6               	subwf	___lwmod@counter,f
  4446  1A23  1D03               	btfss	3,2
  4447  1A24  2A26               	goto	u6211
  4448  1A25  2A27               	goto	u6210
  4449  1A26                     u6211:
  4450  1A26  2A0A               	goto	l3791
  4451  1A27                     u6210:
  4452  1A27                     l3799:
  4453  1A27  0823               	movf	___lwmod@dividend+1,w
  4454  1A28  00A1               	movwf	?___lwmod+1
  4455  1A29  0822               	movf	___lwmod@dividend,w
  4456  1A2A  00A0               	movwf	?___lwmod
  4457  1A2B                     l732:
  4458  1A2B  0008               	return
  4459  1A2C                     __end_of___lwmod:
  4460                           
  4461                           	psect	text8
  4462  1AF0                     __ptext8:	
  4463 ;; *************** function ___lwdiv *****************
  4464 ;; Defined at:
  4465 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;  divisor         2    4[BANK0 ] unsigned int 
  4468 ;;  dividend        2    6[BANK0 ] unsigned int 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  quotient        2    9[BANK0 ] unsigned int 
  4471 ;;  counter         1    8[BANK0 ] unsigned char 
  4472 ;; Return value:  Size  Location     Type
  4473 ;;                  2    4[BANK0 ] unsigned int 
  4474 ;; Registers used:
  4475 ;;		wreg, status,2, status,0
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4481 ;;      Params:         0       4       0       0       0
  4482 ;;      Locals:         0       3       0       0       0
  4483 ;;      Temps:          1       0       0       0       0
  4484 ;;      Totals:         1       7       0       0       0
  4485 ;;Total ram usage:        8 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; Hardware stack levels required when called:    2
  4488 ;; This function calls:
  4489 ;;		Nothing
  4490 ;; This function is called by:
  4491 ;;		_fround
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           
  4496                           ;psect for function ___lwdiv
  4497  1AF0                     ___lwdiv:
  4498  1AF0                     l3755:	
  4499                           ;incstack = 0
  4500                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4501                           
  4502  1AF0  1283               	bcf	3,5	;RP0=0, select bank0
  4503  1AF1  1303               	bcf	3,6	;RP1=0, select bank0
  4504  1AF2  01A9               	clrf	___lwdiv@quotient
  4505  1AF3  01AA               	clrf	___lwdiv@quotient+1
  4506  1AF4                     l3757:
  4507  1AF4  0824               	movf	___lwdiv@divisor,w
  4508  1AF5  0425               	iorwf	___lwdiv@divisor+1,w
  4509  1AF6  1903               	btfsc	3,2
  4510  1AF7  2AF9               	goto	u6091
  4511  1AF8  2AFA               	goto	u6090
  4512  1AF9                     u6091:
  4513  1AF9  2B31               	goto	l3777
  4514  1AFA                     u6090:
  4515  1AFA                     l3759:
  4516  1AFA  01A8               	clrf	___lwdiv@counter
  4517  1AFB  0AA8               	incf	___lwdiv@counter,f
  4518  1AFC  2B08               	goto	l3765
  4519  1AFD                     l3761:
  4520  1AFD  3001               	movlw	1
  4521  1AFE                     u6105:
  4522  1AFE  1003               	clrc
  4523  1AFF  0DA4               	rlf	___lwdiv@divisor,f
  4524  1B00  0DA5               	rlf	___lwdiv@divisor+1,f
  4525  1B01  3EFF               	addlw	-1
  4526  1B02  1D03               	skipz
  4527  1B03  2AFE               	goto	u6105
  4528  1B04                     l3763:
  4529  1B04  3001               	movlw	1
  4530  1B05  00F7               	movwf	??___lwdiv
  4531  1B06  0877               	movf	??___lwdiv,w
  4532  1B07  07A8               	addwf	___lwdiv@counter,f
  4533  1B08                     l3765:
  4534  1B08  1FA5               	btfss	___lwdiv@divisor+1,7
  4535  1B09  2B0B               	goto	u6111
  4536  1B0A  2B0C               	goto	u6110
  4537  1B0B                     u6111:
  4538  1B0B  2AFD               	goto	l3761
  4539  1B0C                     u6110:
  4540  1B0C                     l3767:
  4541  1B0C  3001               	movlw	1
  4542  1B0D                     u6125:
  4543  1B0D  1003               	clrc
  4544  1B0E  0DA9               	rlf	___lwdiv@quotient,f
  4545  1B0F  0DAA               	rlf	___lwdiv@quotient+1,f
  4546  1B10  3EFF               	addlw	-1
  4547  1B11  1D03               	skipz
  4548  1B12  2B0D               	goto	u6125
  4549  1B13  0825               	movf	___lwdiv@divisor+1,w
  4550  1B14  0227               	subwf	___lwdiv@dividend+1,w
  4551  1B15  1D03               	skipz
  4552  1B16  2B19               	goto	u6135
  4553  1B17  0824               	movf	___lwdiv@divisor,w
  4554  1B18  0226               	subwf	___lwdiv@dividend,w
  4555  1B19                     u6135:
  4556  1B19  1C03               	skipc
  4557  1B1A  2B1C               	goto	u6131
  4558  1B1B  2B1D               	goto	u6130
  4559  1B1C                     u6131:
  4560  1B1C  2B24               	goto	l3773
  4561  1B1D                     u6130:
  4562  1B1D                     l3769:
  4563  1B1D  0824               	movf	___lwdiv@divisor,w
  4564  1B1E  02A6               	subwf	___lwdiv@dividend,f
  4565  1B1F  0825               	movf	___lwdiv@divisor+1,w
  4566  1B20  1C03               	skipc
  4567  1B21  03A7               	decf	___lwdiv@dividend+1,f
  4568  1B22  02A7               	subwf	___lwdiv@dividend+1,f
  4569  1B23                     l3771:
  4570  1B23  1429               	bsf	___lwdiv@quotient,0
  4571  1B24                     l3773:
  4572  1B24  3001               	movlw	1
  4573  1B25                     u6145:
  4574  1B25  1003               	clrc
  4575  1B26  0CA5               	rrf	___lwdiv@divisor+1,f
  4576  1B27  0CA4               	rrf	___lwdiv@divisor,f
  4577  1B28  3EFF               	addlw	-1
  4578  1B29  1D03               	skipz
  4579  1B2A  2B25               	goto	u6145
  4580  1B2B                     l3775:
  4581  1B2B  3001               	movlw	1
  4582  1B2C  02A8               	subwf	___lwdiv@counter,f
  4583  1B2D  1D03               	btfss	3,2
  4584  1B2E  2B30               	goto	u6151
  4585  1B2F  2B31               	goto	u6150
  4586  1B30                     u6151:
  4587  1B30  2B0C               	goto	l3767
  4588  1B31                     u6150:
  4589  1B31                     l3777:
  4590  1B31  082A               	movf	___lwdiv@quotient+1,w
  4591  1B32  00A5               	movwf	?___lwdiv+1
  4592  1B33  0829               	movf	___lwdiv@quotient,w
  4593  1B34  00A4               	movwf	?___lwdiv
  4594  1B35                     l722:
  4595  1B35  0008               	return
  4596  1B36                     __end_of___lwdiv:
  4597                           
  4598                           	psect	text9
  4599  1F43                     __ptext9:	
  4600 ;; *************** function __tdiv_to_l_ *****************
  4601 ;; Defined at:
  4602 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;  f1              4    0[BANK0 ] float 
  4605 ;;  f2              4    4[BANK0 ] float 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  quot            4   12[BANK0 ] unsigned long 
  4608 ;;  exp1            1   17[BANK0 ] unsigned char 
  4609 ;;  cntr            1   16[BANK0 ] unsigned char 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  4    0[BANK0 ] unsigned long 
  4612 ;; Registers used:
  4613 ;;		wreg, status,2, status,0
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4619 ;;      Params:         0       8       0       0       0
  4620 ;;      Locals:         0       6       0       0       0
  4621 ;;      Temps:          0       4       0       0       0
  4622 ;;      Totals:         0      18       0       0       0
  4623 ;;Total ram usage:       18 bytes
  4624 ;; Hardware stack levels used:    1
  4625 ;; Hardware stack levels required when called:    2
  4626 ;; This function calls:
  4627 ;;		Nothing
  4628 ;; This function is called by:
  4629 ;;		_sprintf
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           
  4634                           ;psect for function __tdiv_to_l_
  4635  1F43                     __tdiv_to_l_:
  4636  1F43                     l4023:	
  4637                           ;incstack = 0
  4638                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4639                           
  4640  1F43  1283               	bcf	3,5	;RP0=0, select bank0
  4641  1F44  1303               	bcf	3,6	;RP1=0, select bank0
  4642  1F45  0820               	movf	__tdiv_to_l_@f1,w
  4643  1F46  00A8               	movwf	??__tdiv_to_l_
  4644  1F47  0821               	movf	__tdiv_to_l_@f1+1,w
  4645  1F48  00A9               	movwf	??__tdiv_to_l_+1
  4646  1F49  0822               	movf	__tdiv_to_l_@f1+2,w
  4647  1F4A  00AA               	movwf	??__tdiv_to_l_+2
  4648  1F4B  1003               	clrc
  4649  1F4C  0D29               	rlf	??__tdiv_to_l_+1,w
  4650  1F4D  0D2A               	rlf	??__tdiv_to_l_+2,w
  4651  1F4E  00AB               	movwf	??__tdiv_to_l_+3
  4652  1F4F  082B               	movf	??__tdiv_to_l_+3,w
  4653  1F50  00B1               	movwf	__tdiv_to_l_@exp1
  4654  1F51  0831               	movf	__tdiv_to_l_@exp1,w
  4655  1F52  1D03               	btfss	3,2
  4656  1F53  2F55               	goto	u6841
  4657  1F54  2F56               	goto	u6840
  4658  1F55                     u6841:
  4659  1F55  2F5F               	goto	l4029
  4660  1F56                     u6840:
  4661  1F56                     l4025:
  4662  1F56  3000               	movlw	0
  4663  1F57  00A3               	movwf	?__tdiv_to_l_+3
  4664  1F58  3000               	movlw	0
  4665  1F59  00A2               	movwf	?__tdiv_to_l_+2
  4666  1F5A  3000               	movlw	0
  4667  1F5B  00A1               	movwf	?__tdiv_to_l_+1
  4668  1F5C  3000               	movlw	0
  4669  1F5D  00A0               	movwf	?__tdiv_to_l_
  4670  1F5E  2FFF               	goto	l633
  4671  1F5F                     l4029:
  4672  1F5F  0824               	movf	__tdiv_to_l_@f2,w
  4673  1F60  00A8               	movwf	??__tdiv_to_l_
  4674  1F61  0825               	movf	__tdiv_to_l_@f2+1,w
  4675  1F62  00A9               	movwf	??__tdiv_to_l_+1
  4676  1F63  0826               	movf	__tdiv_to_l_@f2+2,w
  4677  1F64  00AA               	movwf	??__tdiv_to_l_+2
  4678  1F65  1003               	clrc
  4679  1F66  0D29               	rlf	??__tdiv_to_l_+1,w
  4680  1F67  0D2A               	rlf	??__tdiv_to_l_+2,w
  4681  1F68  00AB               	movwf	??__tdiv_to_l_+3
  4682  1F69  082B               	movf	??__tdiv_to_l_+3,w
  4683  1F6A  00B0               	movwf	__tdiv_to_l_@cntr
  4684  1F6B  0830               	movf	__tdiv_to_l_@cntr,w
  4685  1F6C  1D03               	btfss	3,2
  4686  1F6D  2F6F               	goto	u6851
  4687  1F6E  2F70               	goto	u6850
  4688  1F6F                     u6851:
  4689  1F6F  2F71               	goto	l634
  4690  1F70                     u6850:
  4691  1F70  2F56               	goto	l4025
  4692  1F71                     l634:
  4693  1F71  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4694  1F72                     l4035:
  4695  1F72  30FF               	movlw	255
  4696  1F73  05A0               	andwf	__tdiv_to_l_@f1,f
  4697  1F74  30FF               	movlw	255
  4698  1F75  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4699  1F76  3000               	movlw	0
  4700  1F77  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4701  1F78                     l4037:
  4702  1F78  17A5               	bsf	__tdiv_to_l_@f2+1,7
  4703  1F79  30FF               	movlw	255
  4704  1F7A  05A4               	andwf	__tdiv_to_l_@f2,f
  4705  1F7B  30FF               	movlw	255
  4706  1F7C  05A5               	andwf	__tdiv_to_l_@f2+1,f
  4707  1F7D  3000               	movlw	0
  4708  1F7E  05A6               	andwf	__tdiv_to_l_@f2+2,f
  4709  1F7F  3000               	movlw	0
  4710  1F80  00AF               	movwf	__tdiv_to_l_@quot+3
  4711  1F81  3000               	movlw	0
  4712  1F82  00AE               	movwf	__tdiv_to_l_@quot+2
  4713  1F83  3000               	movlw	0
  4714  1F84  00AD               	movwf	__tdiv_to_l_@quot+1
  4715  1F85  3000               	movlw	0
  4716  1F86  00AC               	movwf	__tdiv_to_l_@quot
  4717  1F87                     l4039:
  4718  1F87  307F               	movlw	127
  4719  1F88  02B1               	subwf	__tdiv_to_l_@exp1,f
  4720  1F89                     l4041:
  4721  1F89  3098               	movlw	152
  4722  1F8A  0730               	addwf	__tdiv_to_l_@cntr,w
  4723  1F8B  00A8               	movwf	??__tdiv_to_l_
  4724  1F8C  0828               	movf	??__tdiv_to_l_,w
  4725  1F8D  02B1               	subwf	__tdiv_to_l_@exp1,f
  4726  1F8E  3018               	movlw	24
  4727  1F8F  00A8               	movwf	??__tdiv_to_l_
  4728  1F90  0828               	movf	??__tdiv_to_l_,w
  4729  1F91  00B0               	movwf	__tdiv_to_l_@cntr
  4730  1F92                     l4043:
  4731  1F92  3001               	movlw	1
  4732  1F93  00A8               	movwf	??__tdiv_to_l_
  4733  1F94                     u6865:
  4734  1F94  1003               	clrc
  4735  1F95  0DAC               	rlf	__tdiv_to_l_@quot,f
  4736  1F96  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  4737  1F97  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  4738  1F98  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  4739  1F99  0BA8               	decfsz	??__tdiv_to_l_,f
  4740  1F9A  2F94               	goto	u6865
  4741  1F9B                     l4045:
  4742  1F9B  0826               	movf	__tdiv_to_l_@f2+2,w
  4743  1F9C  0222               	subwf	__tdiv_to_l_@f1+2,w
  4744  1F9D  1D03               	skipz
  4745  1F9E  2FA5               	goto	u6875
  4746  1F9F  0825               	movf	__tdiv_to_l_@f2+1,w
  4747  1FA0  0221               	subwf	__tdiv_to_l_@f1+1,w
  4748  1FA1  1D03               	skipz
  4749  1FA2  2FA5               	goto	u6875
  4750  1FA3  0824               	movf	__tdiv_to_l_@f2,w
  4751  1FA4  0220               	subwf	__tdiv_to_l_@f1,w
  4752  1FA5                     u6875:
  4753  1FA5  1C03               	skipc
  4754  1FA6  2FA8               	goto	u6871
  4755  1FA7  2FA9               	goto	u6870
  4756  1FA8                     u6871:
  4757  1FA8  2FB4               	goto	l4051
  4758  1FA9                     u6870:
  4759  1FA9                     l4047:
  4760  1FA9  0824               	movf	__tdiv_to_l_@f2,w
  4761  1FAA  02A0               	subwf	__tdiv_to_l_@f1,f
  4762  1FAB  0825               	movf	__tdiv_to_l_@f2+1,w
  4763  1FAC  1C03               	skipc
  4764  1FAD  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  4765  1FAE  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4766  1FAF  0826               	movf	__tdiv_to_l_@f2+2,w
  4767  1FB0  1C03               	skipc
  4768  1FB1  0A26               	incf	__tdiv_to_l_@f2+2,w
  4769  1FB2  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4770  1FB3                     l4049:
  4771  1FB3  142C               	bsf	__tdiv_to_l_@quot,0
  4772  1FB4                     l4051:
  4773  1FB4  3001               	movlw	1
  4774  1FB5                     u6885:
  4775  1FB5  1003               	clrc
  4776  1FB6  0DA0               	rlf	__tdiv_to_l_@f1,f
  4777  1FB7  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4778  1FB8  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4779  1FB9  3EFF               	addlw	-1
  4780  1FBA  1D03               	skipz
  4781  1FBB  2FB5               	goto	u6885
  4782  1FBC                     l4053:
  4783  1FBC  3001               	movlw	1
  4784  1FBD  02B0               	subwf	__tdiv_to_l_@cntr,f
  4785  1FBE  1D03               	btfss	3,2
  4786  1FBF  2FC1               	goto	u6891
  4787  1FC0  2FC2               	goto	u6890
  4788  1FC1                     u6891:
  4789  1FC1  2F92               	goto	l4043
  4790  1FC2                     u6890:
  4791  1FC2                     l637:
  4792  1FC2  1FB1               	btfss	__tdiv_to_l_@exp1,7
  4793  1FC3  2FC5               	goto	u6901
  4794  1FC4  2FC6               	goto	u6900
  4795  1FC5                     u6901:
  4796  1FC5  2FE0               	goto	l4063
  4797  1FC6                     u6900:
  4798  1FC6                     l4055:
  4799  1FC6  0831               	movf	__tdiv_to_l_@exp1,w
  4800  1FC7  3A80               	xorlw	128
  4801  1FC8  3E97               	addlw	151
  4802  1FC9  1803               	skipnc
  4803  1FCA  2FCC               	goto	u6911
  4804  1FCB  2FCD               	goto	u6910
  4805  1FCC                     u6911:
  4806  1FCC  2FCE               	goto	l4061
  4807  1FCD                     u6910:
  4808  1FCD  2F56               	goto	l4025
  4809  1FCE                     l4061:
  4810  1FCE  3001               	movlw	1
  4811  1FCF                     u6925:
  4812  1FCF  1003               	clrc
  4813  1FD0  0CAF               	rrf	__tdiv_to_l_@quot+3,f
  4814  1FD1  0CAE               	rrf	__tdiv_to_l_@quot+2,f
  4815  1FD2  0CAD               	rrf	__tdiv_to_l_@quot+1,f
  4816  1FD3  0CAC               	rrf	__tdiv_to_l_@quot,f
  4817  1FD4  3EFF               	addlw	-1
  4818  1FD5  1D03               	skipz
  4819  1FD6  2FCF               	goto	u6925
  4820  1FD7  3001               	movlw	1
  4821  1FD8  00A8               	movwf	??__tdiv_to_l_
  4822  1FD9  0828               	movf	??__tdiv_to_l_,w
  4823  1FDA  07B1               	addwf	__tdiv_to_l_@exp1,f
  4824  1FDB  1D03               	btfss	3,2
  4825  1FDC  2FDE               	goto	u6931
  4826  1FDD  2FDF               	goto	u6930
  4827  1FDE                     u6931:
  4828  1FDE  2FCE               	goto	l4061
  4829  1FDF                     u6930:
  4830  1FDF  2FF7               	goto	l4071
  4831  1FE0                     l4063:
  4832  1FE0  3018               	movlw	24
  4833  1FE1  0231               	subwf	__tdiv_to_l_@exp1,w
  4834  1FE2  1C03               	skipc
  4835  1FE3  2FE5               	goto	u6941
  4836  1FE4  2FE6               	goto	u6940
  4837  1FE5                     u6941:
  4838  1FE5  2FF2               	goto	l644
  4839  1FE6                     u6940:
  4840  1FE6  2F56               	goto	l4025
  4841  1FE7                     l4069:
  4842  1FE7  3001               	movlw	1
  4843  1FE8  00A8               	movwf	??__tdiv_to_l_
  4844  1FE9                     u6955:
  4845  1FE9  1003               	clrc
  4846  1FEA  0DAC               	rlf	__tdiv_to_l_@quot,f
  4847  1FEB  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  4848  1FEC  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  4849  1FED  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  4850  1FEE  0BA8               	decfsz	??__tdiv_to_l_,f
  4851  1FEF  2FE9               	goto	u6955
  4852  1FF0  3001               	movlw	1
  4853  1FF1  02B1               	subwf	__tdiv_to_l_@exp1,f
  4854  1FF2                     l644:
  4855  1FF2  0831               	movf	__tdiv_to_l_@exp1,w
  4856  1FF3  1D03               	btfss	3,2
  4857  1FF4  2FF6               	goto	u6961
  4858  1FF5  2FF7               	goto	u6960
  4859  1FF6                     u6961:
  4860  1FF6  2FE7               	goto	l4069
  4861  1FF7                     u6960:
  4862  1FF7                     l4071:
  4863  1FF7  082F               	movf	__tdiv_to_l_@quot+3,w
  4864  1FF8  00A3               	movwf	?__tdiv_to_l_+3
  4865  1FF9  082E               	movf	__tdiv_to_l_@quot+2,w
  4866  1FFA  00A2               	movwf	?__tdiv_to_l_+2
  4867  1FFB  082D               	movf	__tdiv_to_l_@quot+1,w
  4868  1FFC  00A1               	movwf	?__tdiv_to_l_+1
  4869  1FFD  082C               	movf	__tdiv_to_l_@quot,w
  4870  1FFE  00A0               	movwf	?__tdiv_to_l_
  4871  1FFF                     l633:
  4872  1FFF  0008               	return
  4873  2000                     __end_of__tdiv_to_l_:
  4874                           
  4875                           	psect	text10
  4876  116E                     __ptext10:	
  4877 ;; *************** function __div_to_l_ *****************
  4878 ;; Defined at:
  4879 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;  f1              4    0[BANK0 ] unsigned long 
  4882 ;;  f2              4    4[BANK0 ] unsigned long 
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;  quot            4    8[BANK0 ] unsigned long 
  4885 ;;  exp1            1   13[BANK0 ] unsigned char 
  4886 ;;  cntr            1   12[BANK0 ] unsigned char 
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  4    0[BANK0 ] unsigned long 
  4889 ;; Registers used:
  4890 ;;		wreg, status,2, status,0
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4896 ;;      Params:         0       8       0       0       0
  4897 ;;      Locals:         0       6       0       0       0
  4898 ;;      Temps:          1       0       0       0       0
  4899 ;;      Totals:         1      14       0       0       0
  4900 ;;Total ram usage:       15 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; Hardware stack levels required when called:    2
  4903 ;; This function calls:
  4904 ;;		Nothing
  4905 ;; This function is called by:
  4906 ;;		_sprintf
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           
  4911                           ;psect for function __div_to_l_
  4912  116E                     __div_to_l_:
  4913  116E                     l2971:	
  4914                           ;incstack = 0
  4915                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  4916                           
  4917  116E  1003               	clrc
  4918  116F  1283               	bcf	3,5	;RP0=0, select bank0
  4919  1170  1303               	bcf	3,6	;RP1=0, select bank0
  4920  1171  0D22               	rlf	__div_to_l_@f1+2,w
  4921  1172  0D23               	rlf	__div_to_l_@f1+3,w
  4922  1173  00F5               	movwf	??__div_to_l_
  4923  1174  0875               	movf	??__div_to_l_,w
  4924  1175  00AD               	movwf	__div_to_l_@exp1
  4925  1176  082D               	movf	__div_to_l_@exp1,w
  4926  1177  1D03               	btfss	3,2
  4927  1178  297A               	goto	u4611
  4928  1179  297B               	goto	u4610
  4929  117A                     u4611:
  4930  117A  2984               	goto	l2977
  4931  117B                     u4610:
  4932  117B                     l2973:
  4933  117B  3000               	movlw	0
  4934  117C  00A3               	movwf	?__div_to_l_+3
  4935  117D  3000               	movlw	0
  4936  117E  00A2               	movwf	?__div_to_l_+2
  4937  117F  3000               	movlw	0
  4938  1180  00A1               	movwf	?__div_to_l_+1
  4939  1181  3000               	movlw	0
  4940  1182  00A0               	movwf	?__div_to_l_
  4941  1183  2A2B               	goto	l586
  4942  1184                     l2977:
  4943  1184  1003               	clrc
  4944  1185  0D26               	rlf	__div_to_l_@f2+2,w
  4945  1186  0D27               	rlf	__div_to_l_@f2+3,w
  4946  1187  00F5               	movwf	??__div_to_l_
  4947  1188  0875               	movf	??__div_to_l_,w
  4948  1189  00AC               	movwf	__div_to_l_@cntr
  4949  118A  082C               	movf	__div_to_l_@cntr,w
  4950  118B  1D03               	btfss	3,2
  4951  118C  298E               	goto	u4621
  4952  118D  298F               	goto	u4620
  4953  118E                     u4621:
  4954  118E  2990               	goto	l587
  4955  118F                     u4620:
  4956  118F  297B               	goto	l2973
  4957  1190                     l587:
  4958  1190  17A2               	bsf	__div_to_l_@f1+2,7
  4959  1191                     l2983:
  4960  1191  30FF               	movlw	255
  4961  1192  05A0               	andwf	__div_to_l_@f1,f
  4962  1193  30FF               	movlw	255
  4963  1194  05A1               	andwf	__div_to_l_@f1+1,f
  4964  1195  30FF               	movlw	255
  4965  1196  05A2               	andwf	__div_to_l_@f1+2,f
  4966  1197  3000               	movlw	0
  4967  1198  05A3               	andwf	__div_to_l_@f1+3,f
  4968  1199                     l2985:
  4969  1199  17A6               	bsf	__div_to_l_@f2+2,7
  4970  119A  30FF               	movlw	255
  4971  119B  05A4               	andwf	__div_to_l_@f2,f
  4972  119C  30FF               	movlw	255
  4973  119D  05A5               	andwf	__div_to_l_@f2+1,f
  4974  119E  30FF               	movlw	255
  4975  119F  05A6               	andwf	__div_to_l_@f2+2,f
  4976  11A0  3000               	movlw	0
  4977  11A1  05A7               	andwf	__div_to_l_@f2+3,f
  4978  11A2  3000               	movlw	0
  4979  11A3  00AB               	movwf	__div_to_l_@quot+3
  4980  11A4  3000               	movlw	0
  4981  11A5  00AA               	movwf	__div_to_l_@quot+2
  4982  11A6  3000               	movlw	0
  4983  11A7  00A9               	movwf	__div_to_l_@quot+1
  4984  11A8  3000               	movlw	0
  4985  11A9  00A8               	movwf	__div_to_l_@quot
  4986  11AA                     l2987:
  4987  11AA  307F               	movlw	127
  4988  11AB  02AD               	subwf	__div_to_l_@exp1,f
  4989  11AC                     l2989:
  4990  11AC  30A0               	movlw	160
  4991  11AD  072C               	addwf	__div_to_l_@cntr,w
  4992  11AE  00F5               	movwf	??__div_to_l_
  4993  11AF  0875               	movf	??__div_to_l_,w
  4994  11B0  02AD               	subwf	__div_to_l_@exp1,f
  4995  11B1  3020               	movlw	32
  4996  11B2  00F5               	movwf	??__div_to_l_
  4997  11B3  0875               	movf	??__div_to_l_,w
  4998  11B4  00AC               	movwf	__div_to_l_@cntr
  4999  11B5                     l2991:
  5000  11B5  3001               	movlw	1
  5001  11B6  00F5               	movwf	??__div_to_l_
  5002  11B7                     u4635:
  5003  11B7  1003               	clrc
  5004  11B8  0DA8               	rlf	__div_to_l_@quot,f
  5005  11B9  0DA9               	rlf	__div_to_l_@quot+1,f
  5006  11BA  0DAA               	rlf	__div_to_l_@quot+2,f
  5007  11BB  0DAB               	rlf	__div_to_l_@quot+3,f
  5008  11BC  0BF5               	decfsz	??__div_to_l_,f
  5009  11BD  29B7               	goto	u4635
  5010  11BE                     l2993:
  5011  11BE  0827               	movf	__div_to_l_@f2+3,w
  5012  11BF  0223               	subwf	__div_to_l_@f1+3,w
  5013  11C0  1D03               	skipz
  5014  11C1  29CC               	goto	u4645
  5015  11C2  0826               	movf	__div_to_l_@f2+2,w
  5016  11C3  0222               	subwf	__div_to_l_@f1+2,w
  5017  11C4  1D03               	skipz
  5018  11C5  29CC               	goto	u4645
  5019  11C6  0825               	movf	__div_to_l_@f2+1,w
  5020  11C7  0221               	subwf	__div_to_l_@f1+1,w
  5021  11C8  1D03               	skipz
  5022  11C9  29CC               	goto	u4645
  5023  11CA  0824               	movf	__div_to_l_@f2,w
  5024  11CB  0220               	subwf	__div_to_l_@f1,w
  5025  11CC                     u4645:
  5026  11CC  1C03               	skipc
  5027  11CD  29CF               	goto	u4641
  5028  11CE  29D0               	goto	u4640
  5029  11CF                     u4641:
  5030  11CF  29DF               	goto	l2999
  5031  11D0                     u4640:
  5032  11D0                     l2995:
  5033  11D0  0824               	movf	__div_to_l_@f2,w
  5034  11D1  02A0               	subwf	__div_to_l_@f1,f
  5035  11D2  0825               	movf	__div_to_l_@f2+1,w
  5036  11D3  1C03               	skipc
  5037  11D4  0F25               	incfsz	__div_to_l_@f2+1,w
  5038  11D5  02A1               	subwf	__div_to_l_@f1+1,f
  5039  11D6  0826               	movf	__div_to_l_@f2+2,w
  5040  11D7  1C03               	skipc
  5041  11D8  0F26               	incfsz	__div_to_l_@f2+2,w
  5042  11D9  02A2               	subwf	__div_to_l_@f1+2,f
  5043  11DA  0827               	movf	__div_to_l_@f2+3,w
  5044  11DB  1C03               	skipc
  5045  11DC  0F27               	incfsz	__div_to_l_@f2+3,w
  5046  11DD  02A3               	subwf	__div_to_l_@f1+3,f
  5047  11DE                     l2997:
  5048  11DE  1428               	bsf	__div_to_l_@quot,0
  5049  11DF                     l2999:
  5050  11DF  3001               	movlw	1
  5051  11E0  00F5               	movwf	??__div_to_l_
  5052  11E1                     u4655:
  5053  11E1  1003               	clrc
  5054  11E2  0DA0               	rlf	__div_to_l_@f1,f
  5055  11E3  0DA1               	rlf	__div_to_l_@f1+1,f
  5056  11E4  0DA2               	rlf	__div_to_l_@f1+2,f
  5057  11E5  0DA3               	rlf	__div_to_l_@f1+3,f
  5058  11E6  0BF5               	decfsz	??__div_to_l_,f
  5059  11E7  29E1               	goto	u4655
  5060  11E8                     l3001:
  5061  11E8  3001               	movlw	1
  5062  11E9  02AC               	subwf	__div_to_l_@cntr,f
  5063  11EA  1D03               	btfss	3,2
  5064  11EB  29ED               	goto	u4661
  5065  11EC  29EE               	goto	u4660
  5066  11ED                     u4661:
  5067  11ED  29B5               	goto	l2991
  5068  11EE                     u4660:
  5069  11EE                     l590:
  5070  11EE  1FAD               	btfss	__div_to_l_@exp1,7
  5071  11EF  29F1               	goto	u4671
  5072  11F0  29F2               	goto	u4670
  5073  11F1                     u4671:
  5074  11F1  2A0C               	goto	l3011
  5075  11F2                     u4670:
  5076  11F2                     l3003:
  5077  11F2  082D               	movf	__div_to_l_@exp1,w
  5078  11F3  3A80               	xorlw	128
  5079  11F4  3E9F               	addlw	159
  5080  11F5  1803               	skipnc
  5081  11F6  29F8               	goto	u4681
  5082  11F7  29F9               	goto	u4680
  5083  11F8                     u4681:
  5084  11F8  29FA               	goto	l3009
  5085  11F9                     u4680:
  5086  11F9  297B               	goto	l2973
  5087  11FA                     l3009:
  5088  11FA  3001               	movlw	1
  5089  11FB                     u4695:
  5090  11FB  1003               	clrc
  5091  11FC  0CAB               	rrf	__div_to_l_@quot+3,f
  5092  11FD  0CAA               	rrf	__div_to_l_@quot+2,f
  5093  11FE  0CA9               	rrf	__div_to_l_@quot+1,f
  5094  11FF  0CA8               	rrf	__div_to_l_@quot,f
  5095  1200  3EFF               	addlw	-1
  5096  1201  1D03               	skipz
  5097  1202  29FB               	goto	u4695
  5098  1203  3001               	movlw	1
  5099  1204  00F5               	movwf	??__div_to_l_
  5100  1205  0875               	movf	??__div_to_l_,w
  5101  1206  07AD               	addwf	__div_to_l_@exp1,f
  5102  1207  1D03               	btfss	3,2
  5103  1208  2A0A               	goto	u4701
  5104  1209  2A0B               	goto	u4700
  5105  120A                     u4701:
  5106  120A  29FA               	goto	l3009
  5107  120B                     u4700:
  5108  120B  2A23               	goto	l3019
  5109  120C                     l3011:
  5110  120C  3020               	movlw	32
  5111  120D  022D               	subwf	__div_to_l_@exp1,w
  5112  120E  1C03               	skipc
  5113  120F  2A11               	goto	u4711
  5114  1210  2A12               	goto	u4710
  5115  1211                     u4711:
  5116  1211  2A1E               	goto	l597
  5117  1212                     u4710:
  5118  1212  297B               	goto	l2973
  5119  1213                     l3017:
  5120  1213  3001               	movlw	1
  5121  1214  00F5               	movwf	??__div_to_l_
  5122  1215                     u4725:
  5123  1215  1003               	clrc
  5124  1216  0DA8               	rlf	__div_to_l_@quot,f
  5125  1217  0DA9               	rlf	__div_to_l_@quot+1,f
  5126  1218  0DAA               	rlf	__div_to_l_@quot+2,f
  5127  1219  0DAB               	rlf	__div_to_l_@quot+3,f
  5128  121A  0BF5               	decfsz	??__div_to_l_,f
  5129  121B  2A15               	goto	u4725
  5130  121C  3001               	movlw	1
  5131  121D  02AD               	subwf	__div_to_l_@exp1,f
  5132  121E                     l597:
  5133  121E  082D               	movf	__div_to_l_@exp1,w
  5134  121F  1D03               	btfss	3,2
  5135  1220  2A22               	goto	u4731
  5136  1221  2A23               	goto	u4730
  5137  1222                     u4731:
  5138  1222  2A13               	goto	l3017
  5139  1223                     u4730:
  5140  1223                     l3019:
  5141  1223  082B               	movf	__div_to_l_@quot+3,w
  5142  1224  00A3               	movwf	?__div_to_l_+3
  5143  1225  082A               	movf	__div_to_l_@quot+2,w
  5144  1226  00A2               	movwf	?__div_to_l_+2
  5145  1227  0829               	movf	__div_to_l_@quot+1,w
  5146  1228  00A1               	movwf	?__div_to_l_+1
  5147  1229  0828               	movf	__div_to_l_@quot,w
  5148  122A  00A0               	movwf	?__div_to_l_
  5149  122B                     l586:
  5150  122B  0008               	return
  5151  122C                     __end_of__div_to_l_:
  5152                           
  5153                           	psect	text11
  5154  19A0                     __ptext11:	
  5155 ;; *************** function ___wmul *****************
  5156 ;; Defined at:
  5157 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5160 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;  product         2    5[COMMON] unsigned int 
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  2    0[BANK0 ] unsigned int 
  5165 ;; Registers used:
  5166 ;;		wreg, status,2, status,0
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5172 ;;      Params:         0       4       0       0       0
  5173 ;;      Locals:         2       0       0       0       0
  5174 ;;      Temps:          0       0       0       0       0
  5175 ;;      Totals:         2       4       0       0       0
  5176 ;;Total ram usage:        6 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; Hardware stack levels required when called:    2
  5179 ;; This function calls:
  5180 ;;		Nothing
  5181 ;; This function is called by:
  5182 ;;		_sprintf
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           
  5187                           ;psect for function ___wmul
  5188  19A0                     ___wmul:
  5189  19A0                     l4075:	
  5190                           ;incstack = 0
  5191                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5192                           
  5193  19A0  01F5               	clrf	___wmul@product
  5194  19A1  01F6               	clrf	___wmul@product+1
  5195  19A2                     l4077:
  5196  19A2  1283               	bcf	3,5	;RP0=0, select bank0
  5197  19A3  1303               	bcf	3,6	;RP1=0, select bank0
  5198  19A4  1C20               	btfss	___wmul@multiplier,0
  5199  19A5  29A7               	goto	u6971
  5200  19A6  29A8               	goto	u6970
  5201  19A7                     u6971:
  5202  19A7  29AE               	goto	l416
  5203  19A8                     u6970:
  5204  19A8                     l4079:
  5205  19A8  0822               	movf	___wmul@multiplicand,w
  5206  19A9  07F5               	addwf	___wmul@product,f
  5207  19AA  1803               	skipnc
  5208  19AB  0AF6               	incf	___wmul@product+1,f
  5209  19AC  0823               	movf	___wmul@multiplicand+1,w
  5210  19AD  07F6               	addwf	___wmul@product+1,f
  5211  19AE                     l416:
  5212  19AE  3001               	movlw	1
  5213  19AF                     u6985:
  5214  19AF  1003               	clrc
  5215  19B0  0DA2               	rlf	___wmul@multiplicand,f
  5216  19B1  0DA3               	rlf	___wmul@multiplicand+1,f
  5217  19B2  3EFF               	addlw	-1
  5218  19B3  1D03               	skipz
  5219  19B4  29AF               	goto	u6985
  5220  19B5                     l4081:
  5221  19B5  3001               	movlw	1
  5222  19B6                     u6995:
  5223  19B6  1003               	clrc
  5224  19B7  0CA1               	rrf	___wmul@multiplier+1,f
  5225  19B8  0CA0               	rrf	___wmul@multiplier,f
  5226  19B9  3EFF               	addlw	-1
  5227  19BA  1D03               	skipz
  5228  19BB  29B6               	goto	u6995
  5229  19BC                     l4083:
  5230  19BC  0820               	movf	___wmul@multiplier,w
  5231  19BD  0421               	iorwf	___wmul@multiplier+1,w
  5232  19BE  1D03               	btfss	3,2
  5233  19BF  29C1               	goto	u7001
  5234  19C0  29C2               	goto	u7000
  5235  19C1                     u7001:
  5236  19C1  29A2               	goto	l4077
  5237  19C2                     u7000:
  5238  19C2                     l4085:
  5239  19C2  0876               	movf	___wmul@product+1,w
  5240  19C3  00A1               	movwf	?___wmul+1
  5241  19C4  0875               	movf	___wmul@product,w
  5242  19C5  00A0               	movwf	?___wmul
  5243  19C6                     l418:
  5244  19C6  0008               	return
  5245  19C7                     __end_of___wmul:
  5246                           
  5247                           	psect	text12
  5248  1C23                     __ptext12:	
  5249 ;; *************** function ___llmod *****************
  5250 ;; Defined at:
  5251 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;  divisor         4    0[BANK0 ] unsigned long 
  5254 ;;  dividend        4    4[BANK0 ] unsigned long 
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;  counter         1    6[COMMON] unsigned char 
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  4    0[BANK0 ] unsigned long 
  5259 ;; Registers used:
  5260 ;;		wreg, status,2, status,0
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5266 ;;      Params:         0       8       0       0       0
  5267 ;;      Locals:         1       0       0       0       0
  5268 ;;      Temps:          1       0       0       0       0
  5269 ;;      Totals:         2       8       0       0       0
  5270 ;;Total ram usage:       10 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; Hardware stack levels required when called:    2
  5273 ;; This function calls:
  5274 ;;		Nothing
  5275 ;; This function is called by:
  5276 ;;		_sprintf
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           
  5281                           ;psect for function ___llmod
  5282  1C23                     ___llmod:
  5283  1C23                     l3137:	
  5284                           ;incstack = 0
  5285                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5286                           
  5287  1C23  1283               	bcf	3,5	;RP0=0, select bank0
  5288  1C24  1303               	bcf	3,6	;RP1=0, select bank0
  5289  1C25  0823               	movf	___llmod@divisor+3,w
  5290  1C26  0422               	iorwf	___llmod@divisor+2,w
  5291  1C27  0421               	iorwf	___llmod@divisor+1,w
  5292  1C28  0420               	iorwf	___llmod@divisor,w
  5293  1C29  1903               	skipnz
  5294  1C2A  2C2C               	goto	u5061
  5295  1C2B  2C2D               	goto	u5060
  5296  1C2C                     u5061:
  5297  1C2C  2C70               	goto	l3153
  5298  1C2D                     u5060:
  5299  1C2D                     l3139:
  5300  1C2D  01F6               	clrf	___llmod@counter
  5301  1C2E  0AF6               	incf	___llmod@counter,f
  5302  1C2F  2C3D               	goto	l3143
  5303  1C30                     l3141:
  5304  1C30  3001               	movlw	1
  5305  1C31  00F5               	movwf	??___llmod
  5306  1C32                     u5075:
  5307  1C32  1003               	clrc
  5308  1C33  0DA0               	rlf	___llmod@divisor,f
  5309  1C34  0DA1               	rlf	___llmod@divisor+1,f
  5310  1C35  0DA2               	rlf	___llmod@divisor+2,f
  5311  1C36  0DA3               	rlf	___llmod@divisor+3,f
  5312  1C37  0BF5               	decfsz	??___llmod,f
  5313  1C38  2C32               	goto	u5075
  5314  1C39  3001               	movlw	1
  5315  1C3A  00F5               	movwf	??___llmod
  5316  1C3B  0875               	movf	??___llmod,w
  5317  1C3C  07F6               	addwf	___llmod@counter,f
  5318  1C3D                     l3143:
  5319  1C3D  1FA3               	btfss	___llmod@divisor+3,7
  5320  1C3E  2C40               	goto	u5081
  5321  1C3F  2C41               	goto	u5080
  5322  1C40                     u5081:
  5323  1C40  2C30               	goto	l3141
  5324  1C41                     u5080:
  5325  1C41                     l3145:
  5326  1C41  0823               	movf	___llmod@divisor+3,w
  5327  1C42  0227               	subwf	___llmod@dividend+3,w
  5328  1C43  1D03               	skipz
  5329  1C44  2C4F               	goto	u5095
  5330  1C45  0822               	movf	___llmod@divisor+2,w
  5331  1C46  0226               	subwf	___llmod@dividend+2,w
  5332  1C47  1D03               	skipz
  5333  1C48  2C4F               	goto	u5095
  5334  1C49  0821               	movf	___llmod@divisor+1,w
  5335  1C4A  0225               	subwf	___llmod@dividend+1,w
  5336  1C4B  1D03               	skipz
  5337  1C4C  2C4F               	goto	u5095
  5338  1C4D  0820               	movf	___llmod@divisor,w
  5339  1C4E  0224               	subwf	___llmod@dividend,w
  5340  1C4F                     u5095:
  5341  1C4F  1C03               	skipc
  5342  1C50  2C52               	goto	u5091
  5343  1C51  2C53               	goto	u5090
  5344  1C52                     u5091:
  5345  1C52  2C61               	goto	l3149
  5346  1C53                     u5090:
  5347  1C53                     l3147:
  5348  1C53  0820               	movf	___llmod@divisor,w
  5349  1C54  02A4               	subwf	___llmod@dividend,f
  5350  1C55  0821               	movf	___llmod@divisor+1,w
  5351  1C56  1C03               	skipc
  5352  1C57  0F21               	incfsz	___llmod@divisor+1,w
  5353  1C58  02A5               	subwf	___llmod@dividend+1,f
  5354  1C59  0822               	movf	___llmod@divisor+2,w
  5355  1C5A  1C03               	skipc
  5356  1C5B  0F22               	incfsz	___llmod@divisor+2,w
  5357  1C5C  02A6               	subwf	___llmod@dividend+2,f
  5358  1C5D  0823               	movf	___llmod@divisor+3,w
  5359  1C5E  1C03               	skipc
  5360  1C5F  0F23               	incfsz	___llmod@divisor+3,w
  5361  1C60  02A7               	subwf	___llmod@dividend+3,f
  5362  1C61                     l3149:
  5363  1C61  3001               	movlw	1
  5364  1C62                     u5105:
  5365  1C62  1003               	clrc
  5366  1C63  0CA3               	rrf	___llmod@divisor+3,f
  5367  1C64  0CA2               	rrf	___llmod@divisor+2,f
  5368  1C65  0CA1               	rrf	___llmod@divisor+1,f
  5369  1C66  0CA0               	rrf	___llmod@divisor,f
  5370  1C67  3EFF               	addlw	-1
  5371  1C68  1D03               	skipz
  5372  1C69  2C62               	goto	u5105
  5373  1C6A                     l3151:
  5374  1C6A  3001               	movlw	1
  5375  1C6B  02F6               	subwf	___llmod@counter,f
  5376  1C6C  1D03               	btfss	3,2
  5377  1C6D  2C6F               	goto	u5111
  5378  1C6E  2C70               	goto	u5110
  5379  1C6F                     u5111:
  5380  1C6F  2C41               	goto	l3145
  5381  1C70                     u5110:
  5382  1C70                     l3153:
  5383  1C70  0827               	movf	___llmod@dividend+3,w
  5384  1C71  00A3               	movwf	?___llmod+3
  5385  1C72  0826               	movf	___llmod@dividend+2,w
  5386  1C73  00A2               	movwf	?___llmod+2
  5387  1C74  0825               	movf	___llmod@dividend+1,w
  5388  1C75  00A1               	movwf	?___llmod+1
  5389  1C76  0824               	movf	___llmod@dividend,w
  5390  1C77  00A0               	movwf	?___llmod
  5391  1C78                     l672:
  5392  1C78  0008               	return
  5393  1C79                     __end_of___llmod:
  5394                           
  5395                           	psect	text13
  5396  1D3A                     __ptext13:	
  5397 ;; *************** function ___lldiv *****************
  5398 ;; Defined at:
  5399 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  divisor         4    0[BANK0 ] unsigned long 
  5402 ;;  dividend        4    4[BANK0 ] unsigned long 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  quotient        4    8[BANK0 ] unsigned long 
  5405 ;;  counter         1   12[BANK0 ] unsigned char 
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  4    0[BANK0 ] unsigned long 
  5408 ;; Registers used:
  5409 ;;		wreg, status,2, status,0
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5415 ;;      Params:         0       8       0       0       0
  5416 ;;      Locals:         0       5       0       0       0
  5417 ;;      Temps:          1       0       0       0       0
  5418 ;;      Totals:         1      13       0       0       0
  5419 ;;Total ram usage:       14 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; Hardware stack levels required when called:    2
  5422 ;; This function calls:
  5423 ;;		Nothing
  5424 ;; This function is called by:
  5425 ;;		_sprintf
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           
  5430                           ;psect for function ___lldiv
  5431  1D3A                     ___lldiv:
  5432  1D3A                     l3037:	
  5433                           ;incstack = 0
  5434                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5435                           
  5436  1D3A  3000               	movlw	0
  5437  1D3B  1283               	bcf	3,5	;RP0=0, select bank0
  5438  1D3C  1303               	bcf	3,6	;RP1=0, select bank0
  5439  1D3D  00AB               	movwf	___lldiv@quotient+3
  5440  1D3E  3000               	movlw	0
  5441  1D3F  00AA               	movwf	___lldiv@quotient+2
  5442  1D40  3000               	movlw	0
  5443  1D41  00A9               	movwf	___lldiv@quotient+1
  5444  1D42  3000               	movlw	0
  5445  1D43  00A8               	movwf	___lldiv@quotient
  5446  1D44  0823               	movf	___lldiv@divisor+3,w
  5447  1D45  0422               	iorwf	___lldiv@divisor+2,w
  5448  1D46  0421               	iorwf	___lldiv@divisor+1,w
  5449  1D47  0420               	iorwf	___lldiv@divisor,w
  5450  1D48  1903               	skipnz
  5451  1D49  2D4B               	goto	u4781
  5452  1D4A  2D4C               	goto	u4780
  5453  1D4B                     u4781:
  5454  1D4B  2D99               	goto	l3057
  5455  1D4C                     u4780:
  5456  1D4C                     l3039:
  5457  1D4C  01AC               	clrf	___lldiv@counter
  5458  1D4D  0AAC               	incf	___lldiv@counter,f
  5459  1D4E  2D5C               	goto	l3043
  5460  1D4F                     l3041:
  5461  1D4F  3001               	movlw	1
  5462  1D50  00F5               	movwf	??___lldiv
  5463  1D51                     u4795:
  5464  1D51  1003               	clrc
  5465  1D52  0DA0               	rlf	___lldiv@divisor,f
  5466  1D53  0DA1               	rlf	___lldiv@divisor+1,f
  5467  1D54  0DA2               	rlf	___lldiv@divisor+2,f
  5468  1D55  0DA3               	rlf	___lldiv@divisor+3,f
  5469  1D56  0BF5               	decfsz	??___lldiv,f
  5470  1D57  2D51               	goto	u4795
  5471  1D58  3001               	movlw	1
  5472  1D59  00F5               	movwf	??___lldiv
  5473  1D5A  0875               	movf	??___lldiv,w
  5474  1D5B  07AC               	addwf	___lldiv@counter,f
  5475  1D5C                     l3043:
  5476  1D5C  1FA3               	btfss	___lldiv@divisor+3,7
  5477  1D5D  2D5F               	goto	u4801
  5478  1D5E  2D60               	goto	u4800
  5479  1D5F                     u4801:
  5480  1D5F  2D4F               	goto	l3041
  5481  1D60                     u4800:
  5482  1D60                     l3045:
  5483  1D60  3001               	movlw	1
  5484  1D61  00F5               	movwf	??___lldiv
  5485  1D62                     u4815:
  5486  1D62  1003               	clrc
  5487  1D63  0DA8               	rlf	___lldiv@quotient,f
  5488  1D64  0DA9               	rlf	___lldiv@quotient+1,f
  5489  1D65  0DAA               	rlf	___lldiv@quotient+2,f
  5490  1D66  0DAB               	rlf	___lldiv@quotient+3,f
  5491  1D67  0BF5               	decfsz	??___lldiv,f
  5492  1D68  2D62               	goto	u4815
  5493  1D69                     l3047:
  5494  1D69  0823               	movf	___lldiv@divisor+3,w
  5495  1D6A  0227               	subwf	___lldiv@dividend+3,w
  5496  1D6B  1D03               	skipz
  5497  1D6C  2D77               	goto	u4825
  5498  1D6D  0822               	movf	___lldiv@divisor+2,w
  5499  1D6E  0226               	subwf	___lldiv@dividend+2,w
  5500  1D6F  1D03               	skipz
  5501  1D70  2D77               	goto	u4825
  5502  1D71  0821               	movf	___lldiv@divisor+1,w
  5503  1D72  0225               	subwf	___lldiv@dividend+1,w
  5504  1D73  1D03               	skipz
  5505  1D74  2D77               	goto	u4825
  5506  1D75  0820               	movf	___lldiv@divisor,w
  5507  1D76  0224               	subwf	___lldiv@dividend,w
  5508  1D77                     u4825:
  5509  1D77  1C03               	skipc
  5510  1D78  2D7A               	goto	u4821
  5511  1D79  2D7B               	goto	u4820
  5512  1D7A                     u4821:
  5513  1D7A  2D8A               	goto	l3053
  5514  1D7B                     u4820:
  5515  1D7B                     l3049:
  5516  1D7B  0820               	movf	___lldiv@divisor,w
  5517  1D7C  02A4               	subwf	___lldiv@dividend,f
  5518  1D7D  0821               	movf	___lldiv@divisor+1,w
  5519  1D7E  1C03               	skipc
  5520  1D7F  0F21               	incfsz	___lldiv@divisor+1,w
  5521  1D80  02A5               	subwf	___lldiv@dividend+1,f
  5522  1D81  0822               	movf	___lldiv@divisor+2,w
  5523  1D82  1C03               	skipc
  5524  1D83  0F22               	incfsz	___lldiv@divisor+2,w
  5525  1D84  02A6               	subwf	___lldiv@dividend+2,f
  5526  1D85  0823               	movf	___lldiv@divisor+3,w
  5527  1D86  1C03               	skipc
  5528  1D87  0F23               	incfsz	___lldiv@divisor+3,w
  5529  1D88  02A7               	subwf	___lldiv@dividend+3,f
  5530  1D89                     l3051:
  5531  1D89  1428               	bsf	___lldiv@quotient,0
  5532  1D8A                     l3053:
  5533  1D8A  3001               	movlw	1
  5534  1D8B                     u4835:
  5535  1D8B  1003               	clrc
  5536  1D8C  0CA3               	rrf	___lldiv@divisor+3,f
  5537  1D8D  0CA2               	rrf	___lldiv@divisor+2,f
  5538  1D8E  0CA1               	rrf	___lldiv@divisor+1,f
  5539  1D8F  0CA0               	rrf	___lldiv@divisor,f
  5540  1D90  3EFF               	addlw	-1
  5541  1D91  1D03               	skipz
  5542  1D92  2D8B               	goto	u4835
  5543  1D93                     l3055:
  5544  1D93  3001               	movlw	1
  5545  1D94  02AC               	subwf	___lldiv@counter,f
  5546  1D95  1D03               	btfss	3,2
  5547  1D96  2D98               	goto	u4841
  5548  1D97  2D99               	goto	u4840
  5549  1D98                     u4841:
  5550  1D98  2D60               	goto	l3045
  5551  1D99                     u4840:
  5552  1D99                     l3057:
  5553  1D99  082B               	movf	___lldiv@quotient+3,w
  5554  1D9A  00A3               	movwf	?___lldiv+3
  5555  1D9B  082A               	movf	___lldiv@quotient+2,w
  5556  1D9C  00A2               	movwf	?___lldiv+2
  5557  1D9D  0829               	movf	___lldiv@quotient+1,w
  5558  1D9E  00A1               	movwf	?___lldiv+1
  5559  1D9F  0828               	movf	___lldiv@quotient,w
  5560  1DA0  00A0               	movwf	?___lldiv
  5561  1DA1                     l452:
  5562  1DA1  0008               	return
  5563  1DA2                     __end_of___lldiv:
  5564                           
  5565                           	psect	text14
  5566  1E0B                     __ptext14:	
  5567 ;; *************** function ___fltol *****************
  5568 ;; Defined at:
  5569 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  f1              4   59[BANK0 ] unsigned long 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;  exp1            1   69[BANK0 ] unsigned char 
  5574 ;;  sign1           1   68[BANK0 ] unsigned char 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  4   59[BANK0 ] long 
  5577 ;; Registers used:
  5578 ;;		wreg, status,2, status,0
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5584 ;;      Params:         0       4       0       0       0
  5585 ;;      Locals:         0       2       0       0       0
  5586 ;;      Temps:          0       5       0       0       0
  5587 ;;      Totals:         0      11       0       0       0
  5588 ;;Total ram usage:       11 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    2
  5591 ;; This function calls:
  5592 ;;		Nothing
  5593 ;; This function is called by:
  5594 ;;		_sprintf
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           
  5599                           ;psect for function ___fltol
  5600  1E0B                     ___fltol:
  5601  1E0B                     l3101:	
  5602                           ;incstack = 0
  5603                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5604                           
  5605  1E0B  1003               	clrc
  5606  1E0C  1283               	bcf	3,5	;RP0=0, select bank0
  5607  1E0D  1303               	bcf	3,6	;RP1=0, select bank0
  5608  1E0E  0D5D               	rlf	___fltol@f1+2,w
  5609  1E0F  0D5E               	rlf	___fltol@f1+3,w
  5610  1E10  00DF               	movwf	??___fltol
  5611  1E11  085F               	movf	??___fltol,w
  5612  1E12  00E5               	movwf	___fltol@exp1
  5613  1E13  0865               	movf	___fltol@exp1,w
  5614  1E14  1D03               	btfss	3,2
  5615  1E15  2E17               	goto	u4961
  5616  1E16  2E18               	goto	u4960
  5617  1E17                     u4961:
  5618  1E17  2E21               	goto	l3107
  5619  1E18                     u4960:
  5620  1E18                     l3103:
  5621  1E18  3000               	movlw	0
  5622  1E19  00DE               	movwf	?___fltol+3
  5623  1E1A  3000               	movlw	0
  5624  1E1B  00DD               	movwf	?___fltol+2
  5625  1E1C  3000               	movlw	0
  5626  1E1D  00DC               	movwf	?___fltol+1
  5627  1E1E  3000               	movlw	0
  5628  1E1F  00DB               	movwf	?___fltol
  5629  1E20  2E86               	goto	l619
  5630  1E21                     l3107:
  5631  1E21  085B               	movf	___fltol@f1,w
  5632  1E22  00DF               	movwf	??___fltol
  5633  1E23  085C               	movf	___fltol@f1+1,w
  5634  1E24  00E0               	movwf	??___fltol+1
  5635  1E25  085D               	movf	___fltol@f1+2,w
  5636  1E26  00E1               	movwf	??___fltol+2
  5637  1E27  085E               	movf	___fltol@f1+3,w
  5638  1E28  00E2               	movwf	??___fltol+3
  5639  1E29  301F               	movlw	31
  5640  1E2A                     u4975:
  5641  1E2A  1003               	clrc
  5642  1E2B  0CE2               	rrf	??___fltol+3,f
  5643  1E2C  0CE1               	rrf	??___fltol+2,f
  5644  1E2D  0CE0               	rrf	??___fltol+1,f
  5645  1E2E  0CDF               	rrf	??___fltol,f
  5646  1E2F                     u4970:
  5647  1E2F  3EFF               	addlw	-1
  5648  1E30  1D03               	skipz
  5649  1E31  2E2A               	goto	u4975
  5650  1E32  085F               	movf	??___fltol,w
  5651  1E33  00E3               	movwf	??___fltol+4
  5652  1E34  0863               	movf	??___fltol+4,w
  5653  1E35  00E4               	movwf	___fltol@sign1
  5654  1E36                     l3109:
  5655  1E36  17DD               	bsf	___fltol@f1+2,7
  5656  1E37                     l3111:
  5657  1E37  30FF               	movlw	255
  5658  1E38  05DB               	andwf	___fltol@f1,f
  5659  1E39  30FF               	movlw	255
  5660  1E3A  05DC               	andwf	___fltol@f1+1,f
  5661  1E3B  30FF               	movlw	255
  5662  1E3C  05DD               	andwf	___fltol@f1+2,f
  5663  1E3D  3000               	movlw	0
  5664  1E3E  05DE               	andwf	___fltol@f1+3,f
  5665  1E3F                     l3113:
  5666  1E3F  3096               	movlw	150
  5667  1E40  02E5               	subwf	___fltol@exp1,f
  5668  1E41                     l3115:
  5669  1E41  1FE5               	btfss	___fltol@exp1,7
  5670  1E42  2E44               	goto	u4981
  5671  1E43  2E45               	goto	u4980
  5672  1E44                     u4981:
  5673  1E44  2E5F               	goto	l3125
  5674  1E45                     u4980:
  5675  1E45                     l3117:
  5676  1E45  0865               	movf	___fltol@exp1,w
  5677  1E46  3A80               	xorlw	128
  5678  1E47  3E97               	addlw	151
  5679  1E48  1803               	skipnc
  5680  1E49  2E4B               	goto	u4991
  5681  1E4A  2E4C               	goto	u4990
  5682  1E4B                     u4991:
  5683  1E4B  2E4D               	goto	l3123
  5684  1E4C                     u4990:
  5685  1E4C  2E18               	goto	l3103
  5686  1E4D                     l3123:
  5687  1E4D  3001               	movlw	1
  5688  1E4E                     u5005:
  5689  1E4E  1003               	clrc
  5690  1E4F  0CDE               	rrf	___fltol@f1+3,f
  5691  1E50  0CDD               	rrf	___fltol@f1+2,f
  5692  1E51  0CDC               	rrf	___fltol@f1+1,f
  5693  1E52  0CDB               	rrf	___fltol@f1,f
  5694  1E53  3EFF               	addlw	-1
  5695  1E54  1D03               	skipz
  5696  1E55  2E4E               	goto	u5005
  5697  1E56  3001               	movlw	1
  5698  1E57  00DF               	movwf	??___fltol
  5699  1E58  085F               	movf	??___fltol,w
  5700  1E59  07E5               	addwf	___fltol@exp1,f
  5701  1E5A  1D03               	btfss	3,2
  5702  1E5B  2E5D               	goto	u5011
  5703  1E5C  2E5E               	goto	u5010
  5704  1E5D                     u5011:
  5705  1E5D  2E4D               	goto	l3123
  5706  1E5E                     u5010:
  5707  1E5E  2E76               	goto	l3133
  5708  1E5F                     l3125:
  5709  1E5F  3020               	movlw	32
  5710  1E60  0265               	subwf	___fltol@exp1,w
  5711  1E61  1C03               	skipc
  5712  1E62  2E64               	goto	u5021
  5713  1E63  2E65               	goto	u5020
  5714  1E64                     u5021:
  5715  1E64  2E71               	goto	l626
  5716  1E65                     u5020:
  5717  1E65  2E18               	goto	l3103
  5718  1E66                     l3131:
  5719  1E66  3001               	movlw	1
  5720  1E67  00DF               	movwf	??___fltol
  5721  1E68                     u5035:
  5722  1E68  1003               	clrc
  5723  1E69  0DDB               	rlf	___fltol@f1,f
  5724  1E6A  0DDC               	rlf	___fltol@f1+1,f
  5725  1E6B  0DDD               	rlf	___fltol@f1+2,f
  5726  1E6C  0DDE               	rlf	___fltol@f1+3,f
  5727  1E6D  0BDF               	decfsz	??___fltol,f
  5728  1E6E  2E68               	goto	u5035
  5729  1E6F  3001               	movlw	1
  5730  1E70  02E5               	subwf	___fltol@exp1,f
  5731  1E71                     l626:
  5732  1E71  0865               	movf	___fltol@exp1,w
  5733  1E72  1D03               	btfss	3,2
  5734  1E73  2E75               	goto	u5041
  5735  1E74  2E76               	goto	u5040
  5736  1E75                     u5041:
  5737  1E75  2E66               	goto	l3131
  5738  1E76                     u5040:
  5739  1E76                     l3133:
  5740  1E76  0864               	movf	___fltol@sign1,w
  5741  1E77  1903               	btfsc	3,2
  5742  1E78  2E7A               	goto	u5051
  5743  1E79  2E7B               	goto	u5050
  5744  1E7A                     u5051:
  5745  1E7A  2E86               	goto	l629
  5746  1E7B                     u5050:
  5747  1E7B                     l3135:
  5748  1E7B  09DB               	comf	___fltol@f1,f
  5749  1E7C  09DC               	comf	___fltol@f1+1,f
  5750  1E7D  09DD               	comf	___fltol@f1+2,f
  5751  1E7E  09DE               	comf	___fltol@f1+3,f
  5752  1E7F  0ADB               	incf	___fltol@f1,f
  5753  1E80  1903               	skipnz
  5754  1E81  0ADC               	incf	___fltol@f1+1,f
  5755  1E82  1903               	skipnz
  5756  1E83  0ADD               	incf	___fltol@f1+2,f
  5757  1E84  1903               	skipnz
  5758  1E85  0ADE               	incf	___fltol@f1+3,f
  5759  1E86                     l629:
  5760  1E86                     l619:
  5761  1E86  0008               	return
  5762  1E87                     __end_of___fltol:
  5763                           
  5764                           	psect	text15
  5765  1BD3                     __ptext15:	
  5766 ;; *************** function ___flsub *****************
  5767 ;; Defined at:
  5768 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  a               4    0[BANK1 ] long 
  5771 ;;  b               4    4[BANK1 ] long 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;		None
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  4    0[BANK1 ] long 
  5776 ;; Registers used:
  5777 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5783 ;;      Params:         0       0       8       0       0
  5784 ;;      Locals:         0       0       0       0       0
  5785 ;;      Temps:          0       0       0       0       0
  5786 ;;      Totals:         0       0       8       0       0
  5787 ;;Total ram usage:        8 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    3
  5790 ;; This function calls:
  5791 ;;		___fladd
  5792 ;; This function is called by:
  5793 ;;		_sprintf
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           
  5798                           ;psect for function ___flsub
  5799  1BD3                     ___flsub:
  5800  1BD3                     l3157:	
  5801                           ;incstack = 0
  5802                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5803                           
  5804  1BD3  3080               	movlw	128
  5805  1BD4  1683               	bsf	3,5	;RP0=1, select bank1
  5806  1BD5  1303               	bcf	3,6	;RP1=0, select bank1
  5807  1BD6  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5808  1BD7                     l3159:
  5809  1BD7  0827               	movf	(___flsub@b+3)^(0+128),w
  5810  1BD8  1283               	bcf	3,5	;RP0=0, select bank0
  5811  1BD9  1303               	bcf	3,6	;RP1=0, select bank0
  5812  1BDA  00DF               	movwf	___fladd@b+3
  5813  1BDB  1683               	bsf	3,5	;RP0=1, select bank1
  5814  1BDC  1303               	bcf	3,6	;RP1=0, select bank1
  5815  1BDD  0826               	movf	(___flsub@b+2)^(0+128),w
  5816  1BDE  1283               	bcf	3,5	;RP0=0, select bank0
  5817  1BDF  1303               	bcf	3,6	;RP1=0, select bank0
  5818  1BE0  00DE               	movwf	___fladd@b+2
  5819  1BE1  1683               	bsf	3,5	;RP0=1, select bank1
  5820  1BE2  1303               	bcf	3,6	;RP1=0, select bank1
  5821  1BE3  0825               	movf	(___flsub@b+1)^(0+128),w
  5822  1BE4  1283               	bcf	3,5	;RP0=0, select bank0
  5823  1BE5  1303               	bcf	3,6	;RP1=0, select bank0
  5824  1BE6  00DD               	movwf	___fladd@b+1
  5825  1BE7  1683               	bsf	3,5	;RP0=1, select bank1
  5826  1BE8  1303               	bcf	3,6	;RP1=0, select bank1
  5827  1BE9  0824               	movf	___flsub@b^(0+128),w
  5828  1BEA  1283               	bcf	3,5	;RP0=0, select bank0
  5829  1BEB  1303               	bcf	3,6	;RP1=0, select bank0
  5830  1BEC  00DC               	movwf	___fladd@b
  5831  1BED  1683               	bsf	3,5	;RP0=1, select bank1
  5832  1BEE  1303               	bcf	3,6	;RP1=0, select bank1
  5833  1BEF  0823               	movf	(___flsub@a+3)^(0+128),w
  5834  1BF0  1283               	bcf	3,5	;RP0=0, select bank0
  5835  1BF1  1303               	bcf	3,6	;RP1=0, select bank0
  5836  1BF2  00E3               	movwf	___fladd@a+3
  5837  1BF3  1683               	bsf	3,5	;RP0=1, select bank1
  5838  1BF4  1303               	bcf	3,6	;RP1=0, select bank1
  5839  1BF5  0822               	movf	(___flsub@a+2)^(0+128),w
  5840  1BF6  1283               	bcf	3,5	;RP0=0, select bank0
  5841  1BF7  1303               	bcf	3,6	;RP1=0, select bank0
  5842  1BF8  00E2               	movwf	___fladd@a+2
  5843  1BF9  1683               	bsf	3,5	;RP0=1, select bank1
  5844  1BFA  1303               	bcf	3,6	;RP1=0, select bank1
  5845  1BFB  0821               	movf	(___flsub@a+1)^(0+128),w
  5846  1BFC  1283               	bcf	3,5	;RP0=0, select bank0
  5847  1BFD  1303               	bcf	3,6	;RP1=0, select bank0
  5848  1BFE  00E1               	movwf	___fladd@a+1
  5849  1BFF  1683               	bsf	3,5	;RP0=1, select bank1
  5850  1C00  1303               	bcf	3,6	;RP1=0, select bank1
  5851  1C01  0820               	movf	___flsub@a^(0+128),w
  5852  1C02  1283               	bcf	3,5	;RP0=0, select bank0
  5853  1C03  1303               	bcf	3,6	;RP1=0, select bank0
  5854  1C04  00E0               	movwf	___fladd@a
  5855  1C05  160A  118A  222C  160A  158A  	fcall	___fladd
  5856  1C0A  1283               	bcf	3,5	;RP0=0, select bank0
  5857  1C0B  1303               	bcf	3,6	;RP1=0, select bank0
  5858  1C0C  085F               	movf	?___fladd+3,w
  5859  1C0D  1683               	bsf	3,5	;RP0=1, select bank1
  5860  1C0E  1303               	bcf	3,6	;RP1=0, select bank1
  5861  1C0F  00A3               	movwf	(?___flsub+3)^(0+128)
  5862  1C10  1283               	bcf	3,5	;RP0=0, select bank0
  5863  1C11  1303               	bcf	3,6	;RP1=0, select bank0
  5864  1C12  085E               	movf	?___fladd+2,w
  5865  1C13  1683               	bsf	3,5	;RP0=1, select bank1
  5866  1C14  1303               	bcf	3,6	;RP1=0, select bank1
  5867  1C15  00A2               	movwf	(?___flsub+2)^(0+128)
  5868  1C16  1283               	bcf	3,5	;RP0=0, select bank0
  5869  1C17  1303               	bcf	3,6	;RP1=0, select bank0
  5870  1C18  085D               	movf	?___fladd+1,w
  5871  1C19  1683               	bsf	3,5	;RP0=1, select bank1
  5872  1C1A  1303               	bcf	3,6	;RP1=0, select bank1
  5873  1C1B  00A1               	movwf	(?___flsub+1)^(0+128)
  5874  1C1C  1283               	bcf	3,5	;RP0=0, select bank0
  5875  1C1D  1303               	bcf	3,6	;RP1=0, select bank0
  5876  1C1E  085C               	movf	?___fladd,w
  5877  1C1F  1683               	bsf	3,5	;RP0=1, select bank1
  5878  1C20  1303               	bcf	3,6	;RP1=0, select bank1
  5879  1C21  00A0               	movwf	?___flsub^(0+128)
  5880  1C22                     l789:
  5881  1C22  0008               	return
  5882  1C23                     __end_of___flsub:
  5883                           
  5884                           	psect	text16
  5885  122C                     __ptext16:	
  5886 ;; *************** function ___fladd *****************
  5887 ;; Defined at:
  5888 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5889 ;; Parameters:    Size  Location     Type
  5890 ;;  b               4   60[BANK0 ] long 
  5891 ;;  a               4   64[BANK0 ] long 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  grs             1   79[BANK0 ] unsigned char 
  5894 ;;  bexp            1   78[BANK0 ] unsigned char 
  5895 ;;  aexp            1   77[BANK0 ] unsigned char 
  5896 ;;  signs           1   76[BANK0 ] unsigned char 
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  4   60[BANK0 ] unsigned char 
  5899 ;; Registers used:
  5900 ;;		wreg, status,2, status,0, btemp+1
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5906 ;;      Params:         0       8       0       0       0
  5907 ;;      Locals:         0       4       0       0       0
  5908 ;;      Temps:          0       8       0       0       0
  5909 ;;      Totals:         0      20       0       0       0
  5910 ;;Total ram usage:       20 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; Hardware stack levels required when called:    2
  5913 ;; This function calls:
  5914 ;;		Nothing
  5915 ;; This function is called by:
  5916 ;;		_sprintf
  5917 ;;		___flsub
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           
  5922                           ;psect for function ___fladd
  5923  122C                     ___fladd:
  5924  122C                     l2493:	
  5925                           ;incstack = 0
  5926                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5927                           
  5928  122C  1283               	bcf	3,5	;RP0=0, select bank0
  5929  122D  1303               	bcf	3,6	;RP1=0, select bank0
  5930  122E  085F               	movf	___fladd@b+3,w
  5931  122F  3980               	andlw	128
  5932  1230  00E4               	movwf	??___fladd
  5933  1231  0864               	movf	??___fladd,w
  5934  1232  00EC               	movwf	___fladd@signs
  5935  1233                     l2495:
  5936  1233  085F               	movf	___fladd@b+3,w
  5937  1234  00E4               	movwf	??___fladd
  5938  1235  0764               	addwf	??___fladd,w
  5939  1236  00E5               	movwf	??___fladd+1
  5940  1237  0865               	movf	??___fladd+1,w
  5941  1238  00EE               	movwf	___fladd@bexp
  5942  1239                     l2497:
  5943  1239  1FDE               	btfss	___fladd@b+2,7
  5944  123A  2A3C               	goto	u3381
  5945  123B  2A3D               	goto	u3380
  5946  123C                     u3381:
  5947  123C  2A3E               	goto	l2501
  5948  123D                     u3380:
  5949  123D                     l2499:
  5950  123D  146E               	bsf	___fladd@bexp,0
  5951  123E                     l2501:
  5952  123E  086E               	movf	___fladd@bexp,w
  5953  123F  1903               	btfsc	3,2
  5954  1240  2A42               	goto	u3391
  5955  1241  2A43               	goto	u3390
  5956  1242                     u3391:
  5957  1242  2A53               	goto	l2511
  5958  1243                     u3390:
  5959  1243                     l2503:
  5960  1243  0A6E               	incf	___fladd@bexp,w
  5961  1244  1D03               	btfss	3,2
  5962  1245  2A47               	goto	u3401
  5963  1246  2A48               	goto	u3400
  5964  1247                     u3401:
  5965  1247  2A50               	goto	l2507
  5966  1248                     u3400:
  5967  1248                     l2505:
  5968  1248  3000               	movlw	0
  5969  1249  00DF               	movwf	___fladd@b+3
  5970  124A  3000               	movlw	0
  5971  124B  00DE               	movwf	___fladd@b+2
  5972  124C  3000               	movlw	0
  5973  124D  00DD               	movwf	___fladd@b+1
  5974  124E  3000               	movlw	0
  5975  124F  00DC               	movwf	___fladd@b
  5976  1250                     l2507:
  5977  1250  17DE               	bsf	___fladd@b+2,7
  5978  1251                     l2509:
  5979  1251  01DF               	clrf	___fladd@b+3
  5980  1252  2A5B               	goto	l2513
  5981  1253                     l2511:
  5982  1253  3000               	movlw	0
  5983  1254  00DF               	movwf	___fladd@b+3
  5984  1255  3000               	movlw	0
  5985  1256  00DE               	movwf	___fladd@b+2
  5986  1257  3000               	movlw	0
  5987  1258  00DD               	movwf	___fladd@b+1
  5988  1259  3000               	movlw	0
  5989  125A  00DC               	movwf	___fladd@b
  5990  125B                     l2513:
  5991  125B  0863               	movf	___fladd@a+3,w
  5992  125C  3980               	andlw	128
  5993  125D  00E4               	movwf	??___fladd
  5994  125E  0864               	movf	??___fladd,w
  5995  125F  00ED               	movwf	___fladd@aexp
  5996  1260                     l2515:
  5997  1260  086D               	movf	___fladd@aexp,w
  5998  1261  066C               	xorwf	___fladd@signs,w
  5999  1262  1903               	skipnz
  6000  1263  2A65               	goto	u3411
  6001  1264  2A66               	goto	u3410
  6002  1265                     u3411:
  6003  1265  2A67               	goto	l2519
  6004  1266                     u3410:
  6005  1266                     l2517:
  6006  1266  176C               	bsf	___fladd@signs,6
  6007  1267                     l2519:
  6008  1267  0863               	movf	___fladd@a+3,w
  6009  1268  00E4               	movwf	??___fladd
  6010  1269  0764               	addwf	??___fladd,w
  6011  126A  00E5               	movwf	??___fladd+1
  6012  126B  0865               	movf	??___fladd+1,w
  6013  126C  00ED               	movwf	___fladd@aexp
  6014  126D                     l2521:
  6015  126D  1FE2               	btfss	___fladd@a+2,7
  6016  126E  2A70               	goto	u3421
  6017  126F  2A71               	goto	u3420
  6018  1270                     u3421:
  6019  1270  2A72               	goto	l2525
  6020  1271                     u3420:
  6021  1271                     l2523:
  6022  1271  146D               	bsf	___fladd@aexp,0
  6023  1272                     l2525:
  6024  1272  086D               	movf	___fladd@aexp,w
  6025  1273  1903               	btfsc	3,2
  6026  1274  2A76               	goto	u3431
  6027  1275  2A77               	goto	u3430
  6028  1276                     u3431:
  6029  1276  2A87               	goto	l2535
  6030  1277                     u3430:
  6031  1277                     l2527:
  6032  1277  0A6D               	incf	___fladd@aexp,w
  6033  1278  1D03               	btfss	3,2
  6034  1279  2A7B               	goto	u3441
  6035  127A  2A7C               	goto	u3440
  6036  127B                     u3441:
  6037  127B  2A84               	goto	l2531
  6038  127C                     u3440:
  6039  127C                     l2529:
  6040  127C  3000               	movlw	0
  6041  127D  00E3               	movwf	___fladd@a+3
  6042  127E  3000               	movlw	0
  6043  127F  00E2               	movwf	___fladd@a+2
  6044  1280  3000               	movlw	0
  6045  1281  00E1               	movwf	___fladd@a+1
  6046  1282  3000               	movlw	0
  6047  1283  00E0               	movwf	___fladd@a
  6048  1284                     l2531:
  6049  1284  17E2               	bsf	___fladd@a+2,7
  6050  1285                     l2533:
  6051  1285  01E3               	clrf	___fladd@a+3
  6052  1286  2A8F               	goto	l743
  6053  1287                     l2535:
  6054  1287  3000               	movlw	0
  6055  1288  00E3               	movwf	___fladd@a+3
  6056  1289  3000               	movlw	0
  6057  128A  00E2               	movwf	___fladd@a+2
  6058  128B  3000               	movlw	0
  6059  128C  00E1               	movwf	___fladd@a+1
  6060  128D  3000               	movlw	0
  6061  128E  00E0               	movwf	___fladd@a
  6062  128F                     l743:
  6063  128F  086E               	movf	___fladd@bexp,w
  6064  1290  026D               	subwf	___fladd@aexp,w
  6065  1291  1803               	skipnc
  6066  1292  2A94               	goto	u3451
  6067  1293  2A95               	goto	u3450
  6068  1294                     u3451:
  6069  1294  2AD9               	goto	l2571
  6070  1295                     u3450:
  6071  1295                     l2537:
  6072  1295  1F6C               	btfss	___fladd@signs,6
  6073  1296  2A98               	goto	u3461
  6074  1297  2A99               	goto	u3460
  6075  1298                     u3461:
  6076  1298  2A9D               	goto	l2541
  6077  1299                     u3460:
  6078  1299                     l2539:
  6079  1299  3080               	movlw	128
  6080  129A  00E4               	movwf	??___fladd
  6081  129B  0864               	movf	??___fladd,w
  6082  129C  06EC               	xorwf	___fladd@signs,f
  6083  129D                     l2541:
  6084  129D  086E               	movf	___fladd@bexp,w
  6085  129E  00E4               	movwf	??___fladd
  6086  129F  0864               	movf	??___fladd,w
  6087  12A0  00EF               	movwf	___fladd@grs
  6088  12A1                     l2543:
  6089  12A1  086D               	movf	___fladd@aexp,w
  6090  12A2  00E4               	movwf	??___fladd
  6091  12A3  0864               	movf	??___fladd,w
  6092  12A4  00EE               	movwf	___fladd@bexp
  6093  12A5                     l2545:
  6094  12A5  086F               	movf	___fladd@grs,w
  6095  12A6  00E4               	movwf	??___fladd
  6096  12A7  0864               	movf	??___fladd,w
  6097  12A8  00ED               	movwf	___fladd@aexp
  6098  12A9                     l2547:
  6099  12A9  085C               	movf	___fladd@b,w
  6100  12AA  00E4               	movwf	??___fladd
  6101  12AB  0864               	movf	??___fladd,w
  6102  12AC  00EF               	movwf	___fladd@grs
  6103  12AD                     l2549:
  6104  12AD  0860               	movf	___fladd@a,w
  6105  12AE  00E4               	movwf	??___fladd
  6106  12AF  0864               	movf	??___fladd,w
  6107  12B0  00DC               	movwf	___fladd@b
  6108  12B1                     l2551:
  6109  12B1  086F               	movf	___fladd@grs,w
  6110  12B2  00E4               	movwf	??___fladd
  6111  12B3  0864               	movf	??___fladd,w
  6112  12B4  00E0               	movwf	___fladd@a
  6113  12B5                     l2553:
  6114  12B5  085D               	movf	___fladd@b+1,w
  6115  12B6  00E4               	movwf	??___fladd
  6116  12B7  0864               	movf	??___fladd,w
  6117  12B8  00EF               	movwf	___fladd@grs
  6118  12B9                     l2555:
  6119  12B9  0861               	movf	___fladd@a+1,w
  6120  12BA  00E4               	movwf	??___fladd
  6121  12BB  0864               	movf	??___fladd,w
  6122  12BC  00DD               	movwf	___fladd@b+1
  6123  12BD                     l2557:
  6124  12BD  086F               	movf	___fladd@grs,w
  6125  12BE  00E4               	movwf	??___fladd
  6126  12BF  0864               	movf	??___fladd,w
  6127  12C0  00E1               	movwf	___fladd@a+1
  6128  12C1                     l2559:
  6129  12C1  085E               	movf	___fladd@b+2,w
  6130  12C2  00E4               	movwf	??___fladd
  6131  12C3  0864               	movf	??___fladd,w
  6132  12C4  00EF               	movwf	___fladd@grs
  6133  12C5                     l2561:
  6134  12C5  0862               	movf	___fladd@a+2,w
  6135  12C6  00E4               	movwf	??___fladd
  6136  12C7  0864               	movf	??___fladd,w
  6137  12C8  00DE               	movwf	___fladd@b+2
  6138  12C9                     l2563:
  6139  12C9  086F               	movf	___fladd@grs,w
  6140  12CA  00E4               	movwf	??___fladd
  6141  12CB  0864               	movf	??___fladd,w
  6142  12CC  00E2               	movwf	___fladd@a+2
  6143  12CD                     l2565:
  6144  12CD  085F               	movf	___fladd@b+3,w
  6145  12CE  00E4               	movwf	??___fladd
  6146  12CF  0864               	movf	??___fladd,w
  6147  12D0  00EF               	movwf	___fladd@grs
  6148  12D1                     l2567:
  6149  12D1  0863               	movf	___fladd@a+3,w
  6150  12D2  00E4               	movwf	??___fladd
  6151  12D3  0864               	movf	??___fladd,w
  6152  12D4  00DF               	movwf	___fladd@b+3
  6153  12D5                     l2569:
  6154  12D5  086F               	movf	___fladd@grs,w
  6155  12D6  00E4               	movwf	??___fladd
  6156  12D7  0864               	movf	??___fladd,w
  6157  12D8  00E3               	movwf	___fladd@a+3
  6158  12D9                     l2571:
  6159  12D9  01EF               	clrf	___fladd@grs
  6160  12DA                     l2573:
  6161  12DA  086D               	movf	___fladd@aexp,w
  6162  12DB  00E4               	movwf	??___fladd
  6163  12DC  01E5               	clrf	??___fladd+1
  6164  12DD  0865               	movf	??___fladd+1,w
  6165  12DE  00E7               	movwf	??___fladd+3
  6166  12DF  086E               	movf	___fladd@bexp,w
  6167  12E0  0264               	subwf	??___fladd,w
  6168  12E1  00E6               	movwf	??___fladd+2
  6169  12E2  1C03               	skipc
  6170  12E3  03E7               	decf	??___fladd+3,f
  6171  12E4  0867               	movf	??___fladd+3,w
  6172  12E5  3A80               	xorlw	128
  6173  12E6  00FF               	movwf	btemp+1
  6174  12E7  3080               	movlw	128
  6175  12E8  027F               	subwf	btemp+1,w
  6176  12E9  1D03               	skipz
  6177  12EA  2AED               	goto	u3475
  6178  12EB  301A               	movlw	26
  6179  12EC  0266               	subwf	??___fladd+2,w
  6180  12ED                     u3475:
  6181  12ED  1C03               	skipc
  6182  12EE  2AF0               	goto	u3471
  6183  12EF  2AF1               	goto	u3470
  6184  12F0                     u3471:
  6185  12F0  2B2E               	goto	l2589
  6186  12F1                     u3470:
  6187  12F1                     l2575:
  6188  12F1  1283               	bcf	3,5	;RP0=0, select bank0
  6189  12F2  1303               	bcf	3,6	;RP1=0, select bank0
  6190  12F3  085F               	movf	___fladd@b+3,w
  6191  12F4  045E               	iorwf	___fladd@b+2,w
  6192  12F5  045D               	iorwf	___fladd@b+1,w
  6193  12F6  045C               	iorwf	___fladd@b,w
  6194  12F7  1D03               	skipz
  6195  12F8  2AFA               	goto	u3481
  6196  12F9  2AFC               	goto	u3480
  6197  12FA                     u3481:
  6198  12FA  3001               	movlw	1
  6199  12FB  2AFD               	goto	u3490
  6200  12FC                     u3480:
  6201  12FC  3000               	movlw	0
  6202  12FD                     u3490:
  6203  12FD  00E4               	movwf	??___fladd
  6204  12FE  0864               	movf	??___fladd,w
  6205  12FF  00EF               	movwf	___fladd@grs
  6206  1300  3000               	movlw	0
  6207  1301  00DF               	movwf	___fladd@b+3
  6208  1302  3000               	movlw	0
  6209  1303  00DE               	movwf	___fladd@b+2
  6210  1304  3000               	movlw	0
  6211  1305  00DD               	movwf	___fladd@b+1
  6212  1306  3000               	movlw	0
  6213  1307  00DC               	movwf	___fladd@b
  6214  1308  086D               	movf	___fladd@aexp,w
  6215  1309  00E4               	movwf	??___fladd
  6216  130A  0864               	movf	??___fladd,w
  6217  130B  00EE               	movwf	___fladd@bexp
  6218  130C  2B36               	goto	l747
  6219  130D                     l749:
  6220  130D  1C6F               	btfss	___fladd@grs,0
  6221  130E  2B10               	goto	u3501
  6222  130F  2B11               	goto	u3500
  6223  1310                     u3501:
  6224  1310  2B1A               	goto	l2579
  6225  1311                     u3500:
  6226  1311                     l2577:
  6227  1311  086F               	movf	___fladd@grs,w
  6228  1312  00E4               	movwf	??___fladd
  6229  1313  1003               	clrc
  6230  1314  0C64               	rrf	??___fladd,w
  6231  1315  3801               	iorlw	1
  6232  1316  00E5               	movwf	??___fladd+1
  6233  1317  0865               	movf	??___fladd+1,w
  6234  1318  00EF               	movwf	___fladd@grs
  6235  1319  2B1C               	goto	l2581
  6236  131A                     l2579:
  6237  131A  1003               	clrc
  6238  131B  0CEF               	rrf	___fladd@grs,f
  6239  131C                     l2581:
  6240  131C  1C5C               	btfss	___fladd@b,0
  6241  131D  2B1F               	goto	u3511
  6242  131E  2B20               	goto	u3510
  6243  131F                     u3511:
  6244  131F  2B21               	goto	l2585
  6245  1320                     u3510:
  6246  1320                     l2583:
  6247  1320  17EF               	bsf	___fladd@grs,7
  6248  1321                     l2585:
  6249  1321  3001               	movlw	1
  6250  1322  00E4               	movwf	??___fladd
  6251  1323                     u3525:
  6252  1323  0D5F               	rlf	___fladd@b+3,w
  6253  1324  0CDF               	rrf	___fladd@b+3,f
  6254  1325  0CDE               	rrf	___fladd@b+2,f
  6255  1326  0CDD               	rrf	___fladd@b+1,f
  6256  1327  0CDC               	rrf	___fladd@b,f
  6257  1328  0BE4               	decfsz	??___fladd& (0+127),f
  6258  1329  2B23               	goto	u3525
  6259  132A                     l2587:
  6260  132A  3001               	movlw	1
  6261  132B  00E4               	movwf	??___fladd
  6262  132C  0864               	movf	??___fladd,w
  6263  132D  07EE               	addwf	___fladd@bexp,f
  6264  132E                     l2589:
  6265  132E  1283               	bcf	3,5	;RP0=0, select bank0
  6266  132F  1303               	bcf	3,6	;RP1=0, select bank0
  6267  1330  086D               	movf	___fladd@aexp,w
  6268  1331  026E               	subwf	___fladd@bexp,w
  6269  1332  1C03               	skipc
  6270  1333  2B35               	goto	u3531
  6271  1334  2B36               	goto	u3530
  6272  1335                     u3531:
  6273  1335  2B0D               	goto	l749
  6274  1336                     u3530:
  6275  1336                     l747:
  6276  1336  1B6C               	btfsc	___fladd@signs,6
  6277  1337  2B39               	goto	u3541
  6278  1338  2B3A               	goto	u3540
  6279  1339                     u3541:
  6280  1339  2B85               	goto	l2615
  6281  133A                     u3540:
  6282  133A                     l2591:
  6283  133A  086E               	movf	___fladd@bexp,w
  6284  133B  1D03               	btfss	3,2
  6285  133C  2B3E               	goto	u3551
  6286  133D  2B3F               	goto	u3550
  6287  133E                     u3551:
  6288  133E  2B48               	goto	l2597
  6289  133F                     u3550:
  6290  133F                     l2593:
  6291  133F  3000               	movlw	0
  6292  1340  00DF               	movwf	?___fladd+3
  6293  1341  3000               	movlw	0
  6294  1342  00DE               	movwf	?___fladd+2
  6295  1343  3000               	movlw	0
  6296  1344  00DD               	movwf	?___fladd+1
  6297  1345  3000               	movlw	0
  6298  1346  00DC               	movwf	?___fladd
  6299  1347  2CB3               	goto	l756
  6300  1348                     l2597:
  6301  1348  0860               	movf	___fladd@a,w
  6302  1349  07DC               	addwf	___fladd@b,f
  6303  134A  0861               	movf	___fladd@a+1,w
  6304  134B  1103               	clrz
  6305  134C  1803               	skipnc
  6306  134D  3E01               	addlw	1
  6307  134E  1903               	skipnz
  6308  134F  2B51               	goto	u3561
  6309  1350  07DD               	addwf	___fladd@b+1,f
  6310  1351                     u3561:
  6311  1351  0862               	movf	___fladd@a+2,w
  6312  1352  1103               	clrz
  6313  1353  1803               	skipnc
  6314  1354  3E01               	addlw	1
  6315  1355  1903               	skipnz
  6316  1356  2B58               	goto	u3562
  6317  1357  07DE               	addwf	___fladd@b+2,f
  6318  1358                     u3562:
  6319  1358  0863               	movf	___fladd@a+3,w
  6320  1359  1103               	clrz
  6321  135A  1803               	skipnc
  6322  135B  3E01               	addlw	1
  6323  135C  1903               	skipnz
  6324  135D  2B5F               	goto	u3563
  6325  135E  07DF               	addwf	___fladd@b+3,f
  6326  135F                     u3563:
  6327  135F                     l2599:
  6328  135F  1C5F               	btfss	___fladd@b+3,0
  6329  1360  2B62               	goto	u3571
  6330  1361  2B63               	goto	u3570
  6331  1362                     u3571:
  6332  1362  2C39               	goto	l2649
  6333  1363                     u3570:
  6334  1363                     l2601:
  6335  1363  1C6F               	btfss	___fladd@grs,0
  6336  1364  2B66               	goto	u3581
  6337  1365  2B67               	goto	u3580
  6338  1366                     u3581:
  6339  1366  2B70               	goto	l2605
  6340  1367                     u3580:
  6341  1367                     l2603:
  6342  1367  086F               	movf	___fladd@grs,w
  6343  1368  00E4               	movwf	??___fladd
  6344  1369  1003               	clrc
  6345  136A  0C64               	rrf	??___fladd,w
  6346  136B  3801               	iorlw	1
  6347  136C  00E5               	movwf	??___fladd+1
  6348  136D  0865               	movf	??___fladd+1,w
  6349  136E  00EF               	movwf	___fladd@grs
  6350  136F  2B72               	goto	l2607
  6351  1370                     l2605:
  6352  1370  1003               	clrc
  6353  1371  0CEF               	rrf	___fladd@grs,f
  6354  1372                     l2607:
  6355  1372  1C5C               	btfss	___fladd@b,0
  6356  1373  2B75               	goto	u3591
  6357  1374  2B76               	goto	u3590
  6358  1375                     u3591:
  6359  1375  2B77               	goto	l2611
  6360  1376                     u3590:
  6361  1376                     l2609:
  6362  1376  17EF               	bsf	___fladd@grs,7
  6363  1377                     l2611:
  6364  1377  3001               	movlw	1
  6365  1378  00E4               	movwf	??___fladd
  6366  1379                     u3605:
  6367  1379  0D5F               	rlf	___fladd@b+3,w
  6368  137A  0CDF               	rrf	___fladd@b+3,f
  6369  137B  0CDE               	rrf	___fladd@b+2,f
  6370  137C  0CDD               	rrf	___fladd@b+1,f
  6371  137D  0CDC               	rrf	___fladd@b,f
  6372  137E  0BE4               	decfsz	??___fladd& (0+127),f
  6373  137F  2B79               	goto	u3605
  6374  1380                     l2613:
  6375  1380  3001               	movlw	1
  6376  1381  00E4               	movwf	??___fladd
  6377  1382  0864               	movf	??___fladd,w
  6378  1383  07EE               	addwf	___fladd@bexp,f
  6379  1384  2C39               	goto	l2649
  6380  1385                     l2615:
  6381  1385  085F               	movf	___fladd@b+3,w
  6382  1386  3A80               	xorlw	128
  6383  1387  00FF               	movwf	btemp+1
  6384  1388  0863               	movf	___fladd@a+3,w
  6385  1389  3A80               	xorlw	128
  6386  138A  027F               	subwf	btemp+1,w
  6387  138B  1D03               	skipz
  6388  138C  2B97               	goto	u3613
  6389  138D  0862               	movf	___fladd@a+2,w
  6390  138E  025E               	subwf	___fladd@b+2,w
  6391  138F  1D03               	skipz
  6392  1390  2B97               	goto	u3613
  6393  1391  0861               	movf	___fladd@a+1,w
  6394  1392  025D               	subwf	___fladd@b+1,w
  6395  1393  1D03               	skipz
  6396  1394  2B97               	goto	u3613
  6397  1395  0860               	movf	___fladd@a,w
  6398  1396  025C               	subwf	___fladd@b,w
  6399  1397                     u3613:
  6400  1397  1803               	skipnc
  6401  1398  2B9A               	goto	u3611
  6402  1399  2B9B               	goto	u3610
  6403  139A                     u3611:
  6404  139A  2BF3               	goto	l2625
  6405  139B                     u3610:
  6406  139B                     l2617:
  6407  139B  30FF               	movlw	255
  6408  139C  00E4               	movwf	??___fladd
  6409  139D  30FF               	movlw	255
  6410  139E  00E5               	movwf	??___fladd+1
  6411  139F  30FF               	movlw	255
  6412  13A0  00E6               	movwf	??___fladd+2
  6413  13A1  30FF               	movlw	255
  6414  13A2  00E7               	movwf	??___fladd+3
  6415  13A3  0860               	movf	___fladd@a,w
  6416  13A4  00E8               	movwf	??___fladd+4
  6417  13A5  0861               	movf	___fladd@a+1,w
  6418  13A6  00E9               	movwf	??___fladd+5
  6419  13A7  0862               	movf	___fladd@a+2,w
  6420  13A8  00EA               	movwf	??___fladd+6
  6421  13A9  0863               	movf	___fladd@a+3,w
  6422  13AA  00EB               	movwf	??___fladd+7
  6423  13AB  085C               	movf	___fladd@b,w
  6424  13AC  02E8               	subwf	??___fladd+4,f
  6425  13AD  085D               	movf	___fladd@b+1,w
  6426  13AE  1C03               	skipc
  6427  13AF  0F5D               	incfsz	___fladd@b+1,w
  6428  13B0  2BB2               	goto	u3621
  6429  13B1  2BB3               	goto	u3622
  6430  13B2                     u3621:
  6431  13B2  02E9               	subwf	??___fladd+5,f
  6432  13B3                     u3622:
  6433  13B3  085E               	movf	___fladd@b+2,w
  6434  13B4  1C03               	skipc
  6435  13B5  0F5E               	incfsz	___fladd@b+2,w
  6436  13B6  2BB8               	goto	u3623
  6437  13B7  2BB9               	goto	u3624
  6438  13B8                     u3623:
  6439  13B8  02EA               	subwf	??___fladd+6,f
  6440  13B9                     u3624:
  6441  13B9  085F               	movf	___fladd@b+3,w
  6442  13BA  1C03               	skipc
  6443  13BB  0F5F               	incfsz	___fladd@b+3,w
  6444  13BC  2BBE               	goto	u3625
  6445  13BD  2BBF               	goto	u3626
  6446  13BE                     u3625:
  6447  13BE  02EB               	subwf	??___fladd+7,f
  6448  13BF                     u3626:
  6449  13BF  0868               	movf	??___fladd+4,w
  6450  13C0  07E4               	addwf	??___fladd,f
  6451  13C1  0869               	movf	??___fladd+5,w
  6452  13C2  1803               	skipnc
  6453  13C3  0F69               	incfsz	??___fladd+5,w
  6454  13C4  2BC6               	goto	u3630
  6455  13C5  2BC7               	goto	u3631
  6456  13C6                     u3630:
  6457  13C6  07E5               	addwf	??___fladd+1,f
  6458  13C7                     u3631:
  6459  13C7  086A               	movf	??___fladd+6,w
  6460  13C8  1803               	skipnc
  6461  13C9  0F6A               	incfsz	??___fladd+6,w
  6462  13CA  2BCC               	goto	u3632
  6463  13CB  2BCD               	goto	u3633
  6464  13CC                     u3632:
  6465  13CC  07E6               	addwf	??___fladd+2,f
  6466  13CD                     u3633:
  6467  13CD  086B               	movf	??___fladd+7,w
  6468  13CE  1803               	skipnc
  6469  13CF  0A6B               	incf	??___fladd+7,w
  6470  13D0  07E7               	addwf	??___fladd+3,f
  6471  13D1  0867               	movf	??___fladd+3,w
  6472  13D2  00DF               	movwf	___fladd@b+3
  6473  13D3  0866               	movf	??___fladd+2,w
  6474  13D4  00DE               	movwf	___fladd@b+2
  6475  13D5  0865               	movf	??___fladd+1,w
  6476  13D6  00DD               	movwf	___fladd@b+1
  6477  13D7  0864               	movf	??___fladd,w
  6478  13D8  00DC               	movwf	___fladd@b
  6479  13D9                     l2619:
  6480  13D9  3080               	movlw	128
  6481  13DA  00E4               	movwf	??___fladd
  6482  13DB  0864               	movf	??___fladd,w
  6483  13DC  06EC               	xorwf	___fladd@signs,f
  6484  13DD  09EF               	comf	___fladd@grs,f
  6485  13DE  0AEF               	incf	___fladd@grs,f
  6486  13DF                     l2621:
  6487  13DF  086F               	movf	___fladd@grs,w
  6488  13E0  1D03               	btfss	3,2
  6489  13E1  2BE3               	goto	u3641
  6490  13E2  2BE4               	goto	u3640
  6491  13E3                     u3641:
  6492  13E3  2C01               	goto	l764
  6493  13E4                     u3640:
  6494  13E4                     l2623:
  6495  13E4  3001               	movlw	1
  6496  13E5  07DC               	addwf	___fladd@b,f
  6497  13E6  3000               	movlw	0
  6498  13E7  1803               	skipnc
  6499  13E8  3001               	movlw	1
  6500  13E9  07DD               	addwf	___fladd@b+1,f
  6501  13EA  3000               	movlw	0
  6502  13EB  1803               	skipnc
  6503  13EC  3001               	movlw	1
  6504  13ED  07DE               	addwf	___fladd@b+2,f
  6505  13EE  3000               	movlw	0
  6506  13EF  1803               	skipnc
  6507  13F0  3001               	movlw	1
  6508  13F1  07DF               	addwf	___fladd@b+3,f
  6509  13F2  2C01               	goto	l764
  6510  13F3                     l2625:
  6511  13F3  0860               	movf	___fladd@a,w
  6512  13F4  02DC               	subwf	___fladd@b,f
  6513  13F5  0861               	movf	___fladd@a+1,w
  6514  13F6  1C03               	skipc
  6515  13F7  0F61               	incfsz	___fladd@a+1,w
  6516  13F8  02DD               	subwf	___fladd@b+1,f
  6517  13F9  0862               	movf	___fladd@a+2,w
  6518  13FA  1C03               	skipc
  6519  13FB  0F62               	incfsz	___fladd@a+2,w
  6520  13FC  02DE               	subwf	___fladd@b+2,f
  6521  13FD  0863               	movf	___fladd@a+3,w
  6522  13FE  1C03               	skipc
  6523  13FF  0F63               	incfsz	___fladd@a+3,w
  6524  1400  02DF               	subwf	___fladd@b+3,f
  6525  1401                     l764:
  6526  1401  085F               	movf	___fladd@b+3,w
  6527  1402  045E               	iorwf	___fladd@b+2,w
  6528  1403  045D               	iorwf	___fladd@b+1,w
  6529  1404  045C               	iorwf	___fladd@b,w
  6530  1405  1D03               	skipz
  6531  1406  2C08               	goto	u3651
  6532  1407  2C09               	goto	u3650
  6533  1408                     u3651:
  6534  1408  2C35               	goto	l2647
  6535  1409                     u3650:
  6536  1409                     l2627:
  6537  1409  086F               	movf	___fladd@grs,w
  6538  140A  1D03               	btfss	3,2
  6539  140B  2C0D               	goto	u3661
  6540  140C  2C0E               	goto	u3660
  6541  140D                     u3661:
  6542  140D  2C35               	goto	l2647
  6543  140E                     u3660:
  6544  140E                     l2629:
  6545  140E  3000               	movlw	0
  6546  140F  00DF               	movwf	?___fladd+3
  6547  1410  3000               	movlw	0
  6548  1411  00DE               	movwf	?___fladd+2
  6549  1412  3000               	movlw	0
  6550  1413  00DD               	movwf	?___fladd+1
  6551  1414  3000               	movlw	0
  6552  1415  00DC               	movwf	?___fladd
  6553  1416  2CB3               	goto	l756
  6554  1417                     l2633:
  6555  1417  3001               	movlw	1
  6556  1418  00E4               	movwf	??___fladd
  6557  1419                     u3675:
  6558  1419  1003               	clrc
  6559  141A  0DDC               	rlf	___fladd@b,f
  6560  141B  0DDD               	rlf	___fladd@b+1,f
  6561  141C  0DDE               	rlf	___fladd@b+2,f
  6562  141D  0DDF               	rlf	___fladd@b+3,f
  6563  141E  0BE4               	decfsz	??___fladd,f
  6564  141F  2C19               	goto	u3675
  6565  1420                     l2635:
  6566  1420  1FEF               	btfss	___fladd@grs,7
  6567  1421  2C23               	goto	u3681
  6568  1422  2C24               	goto	u3680
  6569  1423                     u3681:
  6570  1423  2C25               	goto	l768
  6571  1424                     u3680:
  6572  1424                     l2637:
  6573  1424  145C               	bsf	___fladd@b,0
  6574  1425                     l768:
  6575  1425  1C6F               	btfss	___fladd@grs,0
  6576  1426  2C28               	goto	u3691
  6577  1427  2C29               	goto	u3690
  6578  1428                     u3691:
  6579  1428  2C2C               	goto	l2641
  6580  1429                     u3690:
  6581  1429                     l2639:
  6582  1429  1403               	setc
  6583  142A  0DEF               	rlf	___fladd@grs,f
  6584  142B  2C2E               	goto	l2643
  6585  142C                     l2641:
  6586  142C  1003               	clrc
  6587  142D  0DEF               	rlf	___fladd@grs,f
  6588  142E                     l2643:
  6589  142E  086E               	movf	___fladd@bexp,w
  6590  142F  1903               	btfsc	3,2
  6591  1430  2C32               	goto	u3701
  6592  1431  2C33               	goto	u3700
  6593  1432                     u3701:
  6594  1432  2C35               	goto	l2647
  6595  1433                     u3700:
  6596  1433                     l2645:
  6597  1433  3001               	movlw	1
  6598  1434  02EE               	subwf	___fladd@bexp,f
  6599  1435                     l2647:
  6600  1435  1FDE               	btfss	___fladd@b+2,7
  6601  1436  2C38               	goto	u3711
  6602  1437  2C39               	goto	u3710
  6603  1438                     u3711:
  6604  1438  2C17               	goto	l2633
  6605  1439                     u3710:
  6606  1439                     l2649:
  6607  1439  01ED               	clrf	___fladd@aexp
  6608  143A                     l2651:
  6609  143A  1FEF               	btfss	___fladd@grs,7
  6610  143B  2C3D               	goto	u3721
  6611  143C  2C3E               	goto	u3720
  6612  143D                     u3721:
  6613  143D  2C4C               	goto	l2659
  6614  143E                     u3720:
  6615  143E                     l2653:
  6616  143E  086F               	movf	___fladd@grs,w
  6617  143F  397F               	andlw	127
  6618  1440  1903               	btfsc	3,2
  6619  1441  2C43               	goto	u3731
  6620  1442  2C44               	goto	u3730
  6621  1443                     u3731:
  6622  1443  2C47               	goto	l774
  6623  1444                     u3730:
  6624  1444                     l2655:
  6625  1444  01ED               	clrf	___fladd@aexp
  6626  1445  0AED               	incf	___fladd@aexp,f
  6627  1446  2C4C               	goto	l2659
  6628  1447                     l774:
  6629  1447  1C5C               	btfss	___fladd@b,0
  6630  1448  2C4A               	goto	u3741
  6631  1449  2C4B               	goto	u3740
  6632  144A                     u3741:
  6633  144A  2C4C               	goto	l2659
  6634  144B                     u3740:
  6635  144B  2C44               	goto	l2655
  6636  144C                     l2659:
  6637  144C  086D               	movf	___fladd@aexp,w
  6638  144D  1903               	btfsc	3,2
  6639  144E  2C50               	goto	u3751
  6640  144F  2C51               	goto	u3750
  6641  1450                     u3751:
  6642  1450  2C85               	goto	l777
  6643  1451                     u3750:
  6644  1451                     l2661:
  6645  1451  3001               	movlw	1
  6646  1452  07DC               	addwf	___fladd@b,f
  6647  1453  3000               	movlw	0
  6648  1454  1803               	skipnc
  6649  1455  3001               	movlw	1
  6650  1456  07DD               	addwf	___fladd@b+1,f
  6651  1457  3000               	movlw	0
  6652  1458  1803               	skipnc
  6653  1459  3001               	movlw	1
  6654  145A  07DE               	addwf	___fladd@b+2,f
  6655  145B  3000               	movlw	0
  6656  145C  1803               	skipnc
  6657  145D  3001               	movlw	1
  6658  145E  07DF               	addwf	___fladd@b+3,f
  6659  145F                     l2663:
  6660  145F  1C5F               	btfss	___fladd@b+3,0
  6661  1460  2C62               	goto	u3761
  6662  1461  2C63               	goto	u3760
  6663  1462                     u3761:
  6664  1462  2C85               	goto	l777
  6665  1463                     u3760:
  6666  1463                     l2665:
  6667  1463  085C               	movf	___fladd@b,w
  6668  1464  00E4               	movwf	??___fladd
  6669  1465  085D               	movf	___fladd@b+1,w
  6670  1466  00E5               	movwf	??___fladd+1
  6671  1467  085E               	movf	___fladd@b+2,w
  6672  1468  00E6               	movwf	??___fladd+2
  6673  1469  085F               	movf	___fladd@b+3,w
  6674  146A  00E7               	movwf	??___fladd+3
  6675  146B  3001               	movlw	1
  6676  146C  00E8               	movwf	??___fladd+4
  6677  146D                     u3775:
  6678  146D  0D67               	rlf	??___fladd+3,w
  6679  146E  0CE7               	rrf	??___fladd+3,f
  6680  146F  0CE6               	rrf	??___fladd+2,f
  6681  1470  0CE5               	rrf	??___fladd+1,f
  6682  1471  0CE4               	rrf	??___fladd,f
  6683  1472                     u3770:
  6684  1472  0BE8               	decfsz	??___fladd+4,f
  6685  1473  2C6D               	goto	u3775
  6686  1474  0867               	movf	??___fladd+3,w
  6687  1475  00DF               	movwf	___fladd@b+3
  6688  1476  0866               	movf	??___fladd+2,w
  6689  1477  00DE               	movwf	___fladd@b+2
  6690  1478  0865               	movf	??___fladd+1,w
  6691  1479  00DD               	movwf	___fladd@b+1
  6692  147A  0864               	movf	??___fladd,w
  6693  147B  00DC               	movwf	___fladd@b
  6694  147C  0A6E               	incf	___fladd@bexp,w
  6695  147D  1903               	btfsc	3,2
  6696  147E  2C80               	goto	u3781
  6697  147F  2C81               	goto	u3780
  6698  1480                     u3781:
  6699  1480  2C85               	goto	l777
  6700  1481                     u3780:
  6701  1481                     l2667:
  6702  1481  3001               	movlw	1
  6703  1482  00E4               	movwf	??___fladd
  6704  1483  0864               	movf	??___fladd,w
  6705  1484  07EE               	addwf	___fladd@bexp,f
  6706  1485                     l777:
  6707  1485  0A6E               	incf	___fladd@bexp,w
  6708  1486  1903               	btfsc	3,2
  6709  1487  2C89               	goto	u3791
  6710  1488  2C8A               	goto	u3790
  6711  1489                     u3791:
  6712  1489  2C8F               	goto	l2671
  6713  148A                     u3790:
  6714  148A                     l2669:
  6715  148A  086E               	movf	___fladd@bexp,w
  6716  148B  1D03               	btfss	3,2
  6717  148C  2C8E               	goto	u3801
  6718  148D  2C8F               	goto	u3800
  6719  148E                     u3801:
  6720  148E  2C9D               	goto	l2677
  6721  148F                     u3800:
  6722  148F                     l2671:
  6723  148F  3000               	movlw	0
  6724  1490  00DF               	movwf	___fladd@b+3
  6725  1491  3000               	movlw	0
  6726  1492  00DE               	movwf	___fladd@b+2
  6727  1493  3000               	movlw	0
  6728  1494  00DD               	movwf	___fladd@b+1
  6729  1495  3000               	movlw	0
  6730  1496  00DC               	movwf	___fladd@b
  6731  1497                     l2673:
  6732  1497  086E               	movf	___fladd@bexp,w
  6733  1498  1D03               	btfss	3,2
  6734  1499  2C9B               	goto	u3811
  6735  149A  2C9C               	goto	u3810
  6736  149B                     u3811:
  6737  149B  2C9D               	goto	l2677
  6738  149C                     u3810:
  6739  149C                     l2675:
  6740  149C  01EC               	clrf	___fladd@signs
  6741  149D                     l2677:
  6742  149D  1C6E               	btfss	___fladd@bexp,0
  6743  149E  2CA0               	goto	u3821
  6744  149F  2CA1               	goto	u3820
  6745  14A0                     u3821:
  6746  14A0  2CA3               	goto	l2681
  6747  14A1                     u3820:
  6748  14A1                     l2679:
  6749  14A1  17DE               	bsf	___fladd@b+2,7
  6750  14A2  2CA7               	goto	l785
  6751  14A3                     l2681:
  6752  14A3  307F               	movlw	127
  6753  14A4  00E4               	movwf	??___fladd
  6754  14A5  0864               	movf	??___fladd,w
  6755  14A6  05DE               	andwf	___fladd@b+2,f
  6756  14A7                     l785:
  6757  14A7  086E               	movf	___fladd@bexp,w
  6758  14A8  00E4               	movwf	??___fladd
  6759  14A9  1003               	clrc
  6760  14AA  0C64               	rrf	??___fladd,w
  6761  14AB  00E5               	movwf	??___fladd+1
  6762  14AC  0865               	movf	??___fladd+1,w
  6763  14AD  00DF               	movwf	___fladd@b+3
  6764  14AE                     l2683:
  6765  14AE  1FEC               	btfss	___fladd@signs,7
  6766  14AF  2CB1               	goto	u3831
  6767  14B0  2CB2               	goto	u3830
  6768  14B1                     u3831:
  6769  14B1  2CB3               	goto	l786
  6770  14B2                     u3830:
  6771  14B2                     l2685:
  6772  14B2  17DF               	bsf	___fladd@b+3,7
  6773  14B3                     l786:
  6774  14B3                     l756:
  6775  14B3  0008               	return
  6776  14B4                     __end_of___fladd:
  6777                           
  6778                           	psect	text17
  6779  07EF                     __ptext17:	
  6780 ;; *************** function ___flneg *****************
  6781 ;; Defined at:
  6782 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;  f1              4    0[BANK0 ] unsigned char 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;		None
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  4    0[BANK0 ] unsigned char 
  6789 ;; Registers used:
  6790 ;;		wreg
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6796 ;;      Params:         0       4       0       0       0
  6797 ;;      Locals:         0       0       0       0       0
  6798 ;;      Temps:          0       0       0       0       0
  6799 ;;      Totals:         0       4       0       0       0
  6800 ;;Total ram usage:        4 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; Hardware stack levels required when called:    2
  6803 ;; This function calls:
  6804 ;;		Nothing
  6805 ;; This function is called by:
  6806 ;;		_sprintf
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           
  6811                           ;psect for function ___flneg
  6812  07EF                     ___flneg:
  6813  07EF                     l4121:	
  6814                           ;incstack = 0
  6815                           ; Regs used in ___flneg: [wreg]
  6816                           
  6817  07EF  1283               	bcf	3,5	;RP0=0, select bank0
  6818  07F0  1303               	bcf	3,6	;RP1=0, select bank0
  6819  07F1  0823               	movf	___flneg@f1+3,w
  6820  07F2  0422               	iorwf	___flneg@f1+2,w
  6821  07F3  0421               	iorwf	___flneg@f1+1,w
  6822  07F4  0420               	iorwf	___flneg@f1,w
  6823  07F5  1903               	skipnz
  6824  07F6  2FF8               	goto	u7111
  6825  07F7  2FF9               	goto	u7110
  6826  07F8                     u7111:
  6827  07F8  2FFB               	goto	l4125
  6828  07F9                     u7110:
  6829  07F9                     l4123:
  6830  07F9  3080               	movlw	128
  6831  07FA  06A3               	xorwf	___flneg@f1+3,f
  6832  07FB                     l4125:
  6833  07FB                     l615:
  6834  07FB  0008               	return
  6835  07FC                     __end_of___flneg:
  6836                           
  6837                           	psect	text18
  6838  10CA                     __ptext18:	
  6839 ;; *************** function ___flge *****************
  6840 ;; Defined at:
  6841 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  ff1             4    0[BANK0 ] unsigned char 
  6844 ;;  ff2             4    4[BANK0 ] unsigned char 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;		None
  6847 ;; Return value:  Size  Location     Type
  6848 ;;		None               void
  6849 ;; Registers used:
  6850 ;;		wreg, status,2, status,0
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6856 ;;      Params:         0       8       0       0       0
  6857 ;;      Locals:         0       0       0       0       0
  6858 ;;      Temps:          0       4       0       0       0
  6859 ;;      Totals:         0      12       0       0       0
  6860 ;;Total ram usage:       12 bytes
  6861 ;; Hardware stack levels used:    1
  6862 ;; Hardware stack levels required when called:    2
  6863 ;; This function calls:
  6864 ;;		Nothing
  6865 ;; This function is called by:
  6866 ;;		_sprintf
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           
  6871                           ;psect for function ___flge
  6872  10CA                     ___flge:
  6873  10CA                     l4101:	
  6874                           ;incstack = 0
  6875                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6876                           
  6877  10CA  3000               	movlw	0
  6878  10CB  1283               	bcf	3,5	;RP0=0, select bank0
  6879  10CC  1303               	bcf	3,6	;RP1=0, select bank0
  6880  10CD  0520               	andwf	___flge@ff1,w
  6881  10CE  00A8               	movwf	??___flge
  6882  10CF  3000               	movlw	0
  6883  10D0  0521               	andwf	___flge@ff1+1,w
  6884  10D1  00A9               	movwf	??___flge+1
  6885  10D2  3080               	movlw	128
  6886  10D3  0522               	andwf	___flge@ff1+2,w
  6887  10D4  00AA               	movwf	??___flge+2
  6888  10D5  307F               	movlw	127
  6889  10D6  0523               	andwf	___flge@ff1+3,w
  6890  10D7  00AB               	movwf	??___flge+3
  6891  10D8  082B               	movf	??___flge+3,w
  6892  10D9  042A               	iorwf	??___flge+2,w
  6893  10DA  0429               	iorwf	??___flge+1,w
  6894  10DB  0428               	iorwf	??___flge,w
  6895  10DC  1D03               	skipz
  6896  10DD  28DF               	goto	u7041
  6897  10DE  28E0               	goto	u7040
  6898  10DF                     u7041:
  6899  10DF  28E8               	goto	l607
  6900  10E0                     u7040:
  6901  10E0                     l4103:
  6902  10E0  3000               	movlw	0
  6903  10E1  00A3               	movwf	___flge@ff1+3
  6904  10E2  3000               	movlw	0
  6905  10E3  00A2               	movwf	___flge@ff1+2
  6906  10E4  3000               	movlw	0
  6907  10E5  00A1               	movwf	___flge@ff1+1
  6908  10E6  3000               	movlw	0
  6909  10E7  00A0               	movwf	___flge@ff1
  6910  10E8                     l607:
  6911  10E8  3000               	movlw	0
  6912  10E9  0524               	andwf	___flge@ff2,w
  6913  10EA  00A8               	movwf	??___flge
  6914  10EB  3000               	movlw	0
  6915  10EC  0525               	andwf	___flge@ff2+1,w
  6916  10ED  00A9               	movwf	??___flge+1
  6917  10EE  3080               	movlw	128
  6918  10EF  0526               	andwf	___flge@ff2+2,w
  6919  10F0  00AA               	movwf	??___flge+2
  6920  10F1  307F               	movlw	127
  6921  10F2  0527               	andwf	___flge@ff2+3,w
  6922  10F3  00AB               	movwf	??___flge+3
  6923  10F4  082B               	movf	??___flge+3,w
  6924  10F5  042A               	iorwf	??___flge+2,w
  6925  10F6  0429               	iorwf	??___flge+1,w
  6926  10F7  0428               	iorwf	??___flge,w
  6927  10F8  1D03               	skipz
  6928  10F9  28FB               	goto	u7051
  6929  10FA  28FC               	goto	u7050
  6930  10FB                     u7051:
  6931  10FB  2904               	goto	l4107
  6932  10FC                     u7050:
  6933  10FC                     l4105:
  6934  10FC  3000               	movlw	0
  6935  10FD  00A7               	movwf	___flge@ff2+3
  6936  10FE  3000               	movlw	0
  6937  10FF  00A6               	movwf	___flge@ff2+2
  6938  1100  3000               	movlw	0
  6939  1101  00A5               	movwf	___flge@ff2+1
  6940  1102  3000               	movlw	0
  6941  1103  00A4               	movwf	___flge@ff2
  6942  1104                     l4107:
  6943  1104  1FA3               	btfss	___flge@ff1+3,7
  6944  1105  2907               	goto	u7061
  6945  1106  2908               	goto	u7060
  6946  1107                     u7061:
  6947  1107  292C               	goto	l4111
  6948  1108                     u7060:
  6949  1108                     l4109:
  6950  1108  3000               	movlw	0
  6951  1109  00A8               	movwf	??___flge
  6952  110A  3000               	movlw	0
  6953  110B  00A9               	movwf	??___flge+1
  6954  110C  3000               	movlw	0
  6955  110D  00AA               	movwf	??___flge+2
  6956  110E  3080               	movlw	128
  6957  110F  00AB               	movwf	??___flge+3
  6958  1110  0820               	movf	___flge@ff1,w
  6959  1111  02A8               	subwf	??___flge,f
  6960  1112  0821               	movf	___flge@ff1+1,w
  6961  1113  1C03               	skipc
  6962  1114  0F21               	incfsz	___flge@ff1+1,w
  6963  1115  2917               	goto	u7071
  6964  1116  2918               	goto	u7072
  6965  1117                     u7071:
  6966  1117  02A9               	subwf	??___flge+1,f
  6967  1118                     u7072:
  6968  1118  0822               	movf	___flge@ff1+2,w
  6969  1119  1C03               	skipc
  6970  111A  0F22               	incfsz	___flge@ff1+2,w
  6971  111B  291D               	goto	u7073
  6972  111C  291E               	goto	u7074
  6973  111D                     u7073:
  6974  111D  02AA               	subwf	??___flge+2,f
  6975  111E                     u7074:
  6976  111E  0823               	movf	___flge@ff1+3,w
  6977  111F  1C03               	skipc
  6978  1120  0F23               	incfsz	___flge@ff1+3,w
  6979  1121  2923               	goto	u7075
  6980  1122  2924               	goto	u7076
  6981  1123                     u7075:
  6982  1123  02AB               	subwf	??___flge+3,f
  6983  1124                     u7076:
  6984  1124  082B               	movf	??___flge+3,w
  6985  1125  00A3               	movwf	___flge@ff1+3
  6986  1126  082A               	movf	??___flge+2,w
  6987  1127  00A2               	movwf	___flge@ff1+2
  6988  1128  0829               	movf	??___flge+1,w
  6989  1129  00A1               	movwf	___flge@ff1+1
  6990  112A  0828               	movf	??___flge,w
  6991  112B  00A0               	movwf	___flge@ff1
  6992  112C                     l4111:
  6993  112C  1FA7               	btfss	___flge@ff2+3,7
  6994  112D  292F               	goto	u7081
  6995  112E  2930               	goto	u7080
  6996  112F                     u7081:
  6997  112F  2954               	goto	l610
  6998  1130                     u7080:
  6999  1130                     l4113:
  7000  1130  3000               	movlw	0
  7001  1131  00A8               	movwf	??___flge
  7002  1132  3000               	movlw	0
  7003  1133  00A9               	movwf	??___flge+1
  7004  1134  3000               	movlw	0
  7005  1135  00AA               	movwf	??___flge+2
  7006  1136  3080               	movlw	128
  7007  1137  00AB               	movwf	??___flge+3
  7008  1138  0824               	movf	___flge@ff2,w
  7009  1139  02A8               	subwf	??___flge,f
  7010  113A  0825               	movf	___flge@ff2+1,w
  7011  113B  1C03               	skipc
  7012  113C  0F25               	incfsz	___flge@ff2+1,w
  7013  113D  293F               	goto	u7091
  7014  113E  2940               	goto	u7092
  7015  113F                     u7091:
  7016  113F  02A9               	subwf	??___flge+1,f
  7017  1140                     u7092:
  7018  1140  0826               	movf	___flge@ff2+2,w
  7019  1141  1C03               	skipc
  7020  1142  0F26               	incfsz	___flge@ff2+2,w
  7021  1143  2945               	goto	u7093
  7022  1144  2946               	goto	u7094
  7023  1145                     u7093:
  7024  1145  02AA               	subwf	??___flge+2,f
  7025  1146                     u7094:
  7026  1146  0827               	movf	___flge@ff2+3,w
  7027  1147  1C03               	skipc
  7028  1148  0F27               	incfsz	___flge@ff2+3,w
  7029  1149  294B               	goto	u7095
  7030  114A  294C               	goto	u7096
  7031  114B                     u7095:
  7032  114B  02AB               	subwf	??___flge+3,f
  7033  114C                     u7096:
  7034  114C  082B               	movf	??___flge+3,w
  7035  114D  00A7               	movwf	___flge@ff2+3
  7036  114E  082A               	movf	??___flge+2,w
  7037  114F  00A6               	movwf	___flge@ff2+2
  7038  1150  0829               	movf	??___flge+1,w
  7039  1151  00A5               	movwf	___flge@ff2+1
  7040  1152  0828               	movf	??___flge,w
  7041  1153  00A4               	movwf	___flge@ff2
  7042  1154                     l610:
  7043  1154  3080               	movlw	128
  7044  1155  06A3               	xorwf	___flge@ff1+3,f
  7045  1156  3080               	movlw	128
  7046  1157  06A7               	xorwf	___flge@ff2+3,f
  7047  1158  0827               	movf	___flge@ff2+3,w
  7048  1159  0223               	subwf	___flge@ff1+3,w
  7049  115A  1D03               	skipz
  7050  115B  2966               	goto	u7105
  7051  115C  0826               	movf	___flge@ff2+2,w
  7052  115D  0222               	subwf	___flge@ff1+2,w
  7053  115E  1D03               	skipz
  7054  115F  2966               	goto	u7105
  7055  1160  0825               	movf	___flge@ff2+1,w
  7056  1161  0221               	subwf	___flge@ff1+1,w
  7057  1162  1D03               	skipz
  7058  1163  2966               	goto	u7105
  7059  1164  0824               	movf	___flge@ff2,w
  7060  1165  0220               	subwf	___flge@ff1,w
  7061  1166                     u7105:
  7062  1166  1803               	skipnc
  7063  1167  2969               	goto	u7101
  7064  1168  296A               	goto	u7100
  7065  1169                     u7101:
  7066  1169  296C               	goto	l4117
  7067  116A                     u7100:
  7068  116A                     l4115:
  7069  116A  1003               	clrc
  7070  116B  296D               	goto	l611
  7071  116C                     l4117:
  7072  116C  1403               	setc
  7073  116D                     l611:
  7074  116D  0008               	return
  7075  116E                     __end_of___flge:
  7076                           
  7077                           	psect	text19
  7078  1B83                     __ptext19:	
  7079 ;; *************** function ___fleq *****************
  7080 ;; Defined at:
  7081 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;  ff1             4    0[BANK0 ] unsigned char 
  7084 ;;  ff2             4    4[BANK0 ] unsigned char 
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;		None
  7087 ;; Return value:  Size  Location     Type
  7088 ;;		None               void
  7089 ;; Registers used:
  7090 ;;		wreg, status,2, status,0
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7096 ;;      Params:         0       8       0       0       0
  7097 ;;      Locals:         0       0       0       0       0
  7098 ;;      Temps:          0       4       0       0       0
  7099 ;;      Totals:         0      12       0       0       0
  7100 ;;Total ram usage:       12 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; Hardware stack levels required when called:    2
  7103 ;; This function calls:
  7104 ;;		Nothing
  7105 ;; This function is called by:
  7106 ;;		_sprintf
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           
  7111                           ;psect for function ___fleq
  7112  1B83                     ___fleq:
  7113  1B83                     l4089:	
  7114                           ;incstack = 0
  7115                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7116                           
  7117  1B83  3000               	movlw	0
  7118  1B84  1283               	bcf	3,5	;RP0=0, select bank0
  7119  1B85  1303               	bcf	3,6	;RP1=0, select bank0
  7120  1B86  0520               	andwf	___fleq@ff1,w
  7121  1B87  00A8               	movwf	??___fleq
  7122  1B88  3000               	movlw	0
  7123  1B89  0521               	andwf	___fleq@ff1+1,w
  7124  1B8A  00A9               	movwf	??___fleq+1
  7125  1B8B  3080               	movlw	128
  7126  1B8C  0522               	andwf	___fleq@ff1+2,w
  7127  1B8D  00AA               	movwf	??___fleq+2
  7128  1B8E  307F               	movlw	127
  7129  1B8F  0523               	andwf	___fleq@ff1+3,w
  7130  1B90  00AB               	movwf	??___fleq+3
  7131  1B91  082B               	movf	??___fleq+3,w
  7132  1B92  042A               	iorwf	??___fleq+2,w
  7133  1B93  0429               	iorwf	??___fleq+1,w
  7134  1B94  0428               	iorwf	??___fleq,w
  7135  1B95  1D03               	skipz
  7136  1B96  2B98               	goto	u7011
  7137  1B97  2B99               	goto	u7010
  7138  1B98                     u7011:
  7139  1B98  2BA1               	goto	l602
  7140  1B99                     u7010:
  7141  1B99                     l4091:
  7142  1B99  3000               	movlw	0
  7143  1B9A  00A3               	movwf	___fleq@ff1+3
  7144  1B9B  3000               	movlw	0
  7145  1B9C  00A2               	movwf	___fleq@ff1+2
  7146  1B9D  3000               	movlw	0
  7147  1B9E  00A1               	movwf	___fleq@ff1+1
  7148  1B9F  3000               	movlw	0
  7149  1BA0  00A0               	movwf	___fleq@ff1
  7150  1BA1                     l602:
  7151  1BA1  3000               	movlw	0
  7152  1BA2  0524               	andwf	___fleq@ff2,w
  7153  1BA3  00A8               	movwf	??___fleq
  7154  1BA4  3000               	movlw	0
  7155  1BA5  0525               	andwf	___fleq@ff2+1,w
  7156  1BA6  00A9               	movwf	??___fleq+1
  7157  1BA7  3080               	movlw	128
  7158  1BA8  0526               	andwf	___fleq@ff2+2,w
  7159  1BA9  00AA               	movwf	??___fleq+2
  7160  1BAA  307F               	movlw	127
  7161  1BAB  0527               	andwf	___fleq@ff2+3,w
  7162  1BAC  00AB               	movwf	??___fleq+3
  7163  1BAD  082B               	movf	??___fleq+3,w
  7164  1BAE  042A               	iorwf	??___fleq+2,w
  7165  1BAF  0429               	iorwf	??___fleq+1,w
  7166  1BB0  0428               	iorwf	??___fleq,w
  7167  1BB1  1D03               	skipz
  7168  1BB2  2BB4               	goto	u7021
  7169  1BB3  2BB5               	goto	u7020
  7170  1BB4                     u7021:
  7171  1BB4  2BBD               	goto	l603
  7172  1BB5                     u7020:
  7173  1BB5                     l4093:
  7174  1BB5  3000               	movlw	0
  7175  1BB6  00A7               	movwf	___fleq@ff2+3
  7176  1BB7  3000               	movlw	0
  7177  1BB8  00A6               	movwf	___fleq@ff2+2
  7178  1BB9  3000               	movlw	0
  7179  1BBA  00A5               	movwf	___fleq@ff2+1
  7180  1BBB  3000               	movlw	0
  7181  1BBC  00A4               	movwf	___fleq@ff2
  7182  1BBD                     l603:
  7183  1BBD  0827               	movf	___fleq@ff2+3,w
  7184  1BBE  0623               	xorwf	___fleq@ff1+3,w
  7185  1BBF  1D03               	skipz
  7186  1BC0  2BCB               	goto	u7035
  7187  1BC1  0826               	movf	___fleq@ff2+2,w
  7188  1BC2  0622               	xorwf	___fleq@ff1+2,w
  7189  1BC3  1D03               	skipz
  7190  1BC4  2BCB               	goto	u7035
  7191  1BC5  0825               	movf	___fleq@ff2+1,w
  7192  1BC6  0621               	xorwf	___fleq@ff1+1,w
  7193  1BC7  1D03               	skipz
  7194  1BC8  2BCB               	goto	u7035
  7195  1BC9  0824               	movf	___fleq@ff2,w
  7196  1BCA  0620               	xorwf	___fleq@ff1,w
  7197  1BCB                     u7035:
  7198  1BCB  1903               	skipnz
  7199  1BCC  2BCE               	goto	u7031
  7200  1BCD  2BCF               	goto	u7030
  7201  1BCE                     u7031:
  7202  1BCE  2BD1               	goto	l4097
  7203  1BCF                     u7030:
  7204  1BCF                     l4095:
  7205  1BCF  1003               	clrc
  7206  1BD0  2BD2               	goto	l604
  7207  1BD1                     l4097:
  7208  1BD1  1403               	setc
  7209  1BD2                     l604:
  7210  1BD2  0008               	return
  7211  1BD3                     __end_of___fleq:
  7212                           
  7213                           	psect	text20
  7214  1A6A                     __ptext20:	
  7215 ;; *************** function _conv *****************
  7216 ;; Defined at:
  7217 ;;		line 269 in file "main.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;  aa              1    wreg     unsigned char 
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;  aa              1   52[BANK0 ] unsigned char 
  7222 ;;  result          4   48[BANK0 ] unsigned char 
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  4   40[BANK0 ] unsigned char 
  7225 ;; Registers used:
  7226 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7232 ;;      Params:         0       4       0       0       0
  7233 ;;      Locals:         0       5       0       0       0
  7234 ;;      Temps:          0       4       0       0       0
  7235 ;;      Totals:         0      13       0       0       0
  7236 ;;Total ram usage:       13 bytes
  7237 ;; Hardware stack levels used:    1
  7238 ;; Hardware stack levels required when called:    4
  7239 ;; This function calls:
  7240 ;;		___flmul
  7241 ;;		___xxtofl
  7242 ;; This function is called by:
  7243 ;;		_main
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           
  7248                           ;psect for function _conv
  7249  1A6A                     _conv:
  7250                           
  7251                           ;incstack = 0
  7252                           ; Regs used in _conv: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7253                           ;conv@aa stored from wreg
  7254  1A6A  1283               	bcf	3,5	;RP0=0, select bank0
  7255  1A6B  1303               	bcf	3,6	;RP1=0, select bank0
  7256  1A6C  00D4               	movwf	conv@aa
  7257  1A6D                     l4205:
  7258                           
  7259                           ;main.c: 270:     double result;;main.c: 271:     result = aa*0.0196;
  7260  1A6D  303C               	movlw	60
  7261  1A6E  00B1               	movwf	___flmul@b+3
  7262  1A6F  30A0               	movlw	160
  7263  1A70  00B0               	movwf	___flmul@b+2
  7264  1A71  3090               	movlw	144
  7265  1A72  00AF               	movwf	___flmul@b+1
  7266  1A73  302E               	movlw	46
  7267  1A74  00AE               	movwf	___flmul@b
  7268  1A75  0854               	movf	conv@aa,w
  7269  1A76  00CC               	movwf	??_conv
  7270  1A77  01CD               	clrf	??_conv+1
  7271  1A78  01CE               	clrf	??_conv+2
  7272  1A79  01CF               	clrf	??_conv+3
  7273  1A7A  084F               	movf	??_conv+3,w
  7274  1A7B  00A3               	movwf	___xxtofl@val+3
  7275  1A7C  084E               	movf	??_conv+2,w
  7276  1A7D  00A2               	movwf	___xxtofl@val+2
  7277  1A7E  084D               	movf	??_conv+1,w
  7278  1A7F  00A1               	movwf	___xxtofl@val+1
  7279  1A80  084C               	movf	??_conv,w
  7280  1A81  00A0               	movwf	___xxtofl@val
  7281  1A82  3001               	movlw	1
  7282  1A83  160A  158A  2687  160A  158A  	fcall	___xxtofl
  7283  1A88  1283               	bcf	3,5	;RP0=0, select bank0
  7284  1A89  1303               	bcf	3,6	;RP1=0, select bank0
  7285  1A8A  0823               	movf	?___xxtofl+3,w
  7286  1A8B  00B5               	movwf	___flmul@a+3
  7287  1A8C  0822               	movf	?___xxtofl+2,w
  7288  1A8D  00B4               	movwf	___flmul@a+2
  7289  1A8E  0821               	movf	?___xxtofl+1,w
  7290  1A8F  00B3               	movwf	___flmul@a+1
  7291  1A90  0820               	movf	?___xxtofl,w
  7292  1A91  00B2               	movwf	___flmul@a
  7293  1A92  120A  158A  213C  160A  158A  	fcall	___flmul
  7294  1A97  1283               	bcf	3,5	;RP0=0, select bank0
  7295  1A98  1303               	bcf	3,6	;RP1=0, select bank0
  7296  1A99  0831               	movf	?___flmul+3,w
  7297  1A9A  00D3               	movwf	conv@result+3
  7298  1A9B  0830               	movf	?___flmul+2,w
  7299  1A9C  00D2               	movwf	conv@result+2
  7300  1A9D  082F               	movf	?___flmul+1,w
  7301  1A9E  00D1               	movwf	conv@result+1
  7302  1A9F  082E               	movf	?___flmul,w
  7303  1AA0  00D0               	movwf	conv@result
  7304  1AA1                     l4207:
  7305                           
  7306                           ;main.c: 272:     return result;
  7307  1AA1  0853               	movf	conv@result+3,w
  7308  1AA2  00CB               	movwf	?_conv+3
  7309  1AA3  0852               	movf	conv@result+2,w
  7310  1AA4  00CA               	movwf	?_conv+2
  7311  1AA5  0851               	movf	conv@result+1,w
  7312  1AA6  00C9               	movwf	?_conv+1
  7313  1AA7  0850               	movf	conv@result,w
  7314  1AA8  00C8               	movwf	?_conv
  7315  1AA9                     l144:
  7316  1AA9  0008               	return
  7317  1AAA                     __end_of_conv:
  7318                           
  7319                           	psect	text21
  7320  1E87                     __ptext21:	
  7321 ;; *************** function ___xxtofl *****************
  7322 ;; Defined at:
  7323 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  sign            1    wreg     unsigned char 
  7326 ;;  val             4    0[BANK0 ] long 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  sign            1    8[BANK0 ] unsigned char 
  7329 ;;  arg             4   10[BANK0 ] unsigned long 
  7330 ;;  exp             1    9[BANK0 ] unsigned char 
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  4    0[BANK0 ] unsigned char 
  7333 ;; Registers used:
  7334 ;;		wreg, status,2, status,0
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7340 ;;      Params:         0       4       0       0       0
  7341 ;;      Locals:         0       6       0       0       0
  7342 ;;      Temps:          0       4       0       0       0
  7343 ;;      Totals:         0      14       0       0       0
  7344 ;;Total ram usage:       14 bytes
  7345 ;; Hardware stack levels used:    1
  7346 ;; Hardware stack levels required when called:    2
  7347 ;; This function calls:
  7348 ;;		Nothing
  7349 ;; This function is called by:
  7350 ;;		_conv
  7351 ;;		_sprintf
  7352 ;;		_valadc
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           
  7357                           ;psect for function ___xxtofl
  7358  1E87                     ___xxtofl:
  7359                           
  7360                           ;incstack = 0
  7361                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7362                           ;___xxtofl@sign stored from wreg
  7363  1E87  1283               	bcf	3,5	;RP0=0, select bank0
  7364  1E88  1303               	bcf	3,6	;RP1=0, select bank0
  7365  1E89  00A8               	movwf	___xxtofl@sign
  7366  1E8A                     l4129:
  7367  1E8A  0828               	movf	___xxtofl@sign,w
  7368  1E8B  1903               	btfsc	3,2
  7369  1E8C  2E8E               	goto	u7121
  7370  1E8D  2E8F               	goto	u7120
  7371  1E8E                     u7121:
  7372  1E8E  2EA3               	goto	l4135
  7373  1E8F                     u7120:
  7374  1E8F                     l4131:
  7375  1E8F  1FA3               	btfss	___xxtofl@val+3,7
  7376  1E90  2E92               	goto	u7131
  7377  1E91  2E93               	goto	u7130
  7378  1E92                     u7131:
  7379  1E92  2EA3               	goto	l4135
  7380  1E93                     u7130:
  7381  1E93                     l4133:
  7382  1E93  0920               	comf	___xxtofl@val,w
  7383  1E94  00AA               	movwf	___xxtofl@arg
  7384  1E95  0921               	comf	___xxtofl@val+1,w
  7385  1E96  00AB               	movwf	___xxtofl@arg+1
  7386  1E97  0922               	comf	___xxtofl@val+2,w
  7387  1E98  00AC               	movwf	___xxtofl@arg+2
  7388  1E99  0923               	comf	___xxtofl@val+3,w
  7389  1E9A  00AD               	movwf	___xxtofl@arg+3
  7390  1E9B  0AAA               	incf	___xxtofl@arg,f
  7391  1E9C  1903               	skipnz
  7392  1E9D  0AAB               	incf	___xxtofl@arg+1,f
  7393  1E9E  1903               	skipnz
  7394  1E9F  0AAC               	incf	___xxtofl@arg+2,f
  7395  1EA0  1903               	skipnz
  7396  1EA1  0AAD               	incf	___xxtofl@arg+3,f
  7397  1EA2  2EAB               	goto	l883
  7398  1EA3                     l4135:
  7399  1EA3  0823               	movf	___xxtofl@val+3,w
  7400  1EA4  00AD               	movwf	___xxtofl@arg+3
  7401  1EA5  0822               	movf	___xxtofl@val+2,w
  7402  1EA6  00AC               	movwf	___xxtofl@arg+2
  7403  1EA7  0821               	movf	___xxtofl@val+1,w
  7404  1EA8  00AB               	movwf	___xxtofl@arg+1
  7405  1EA9  0820               	movf	___xxtofl@val,w
  7406  1EAA  00AA               	movwf	___xxtofl@arg
  7407  1EAB                     l883:
  7408  1EAB  0823               	movf	___xxtofl@val+3,w
  7409  1EAC  0422               	iorwf	___xxtofl@val+2,w
  7410  1EAD  0421               	iorwf	___xxtofl@val+1,w
  7411  1EAE  0420               	iorwf	___xxtofl@val,w
  7412  1EAF  1D03               	skipz
  7413  1EB0  2EB2               	goto	u7141
  7414  1EB1  2EB3               	goto	u7140
  7415  1EB2                     u7141:
  7416  1EB2  2EBC               	goto	l4141
  7417  1EB3                     u7140:
  7418  1EB3                     l4137:
  7419  1EB3  3000               	movlw	0
  7420  1EB4  00A3               	movwf	?___xxtofl+3
  7421  1EB5  3000               	movlw	0
  7422  1EB6  00A2               	movwf	?___xxtofl+2
  7423  1EB7  3000               	movlw	0
  7424  1EB8  00A1               	movwf	?___xxtofl+1
  7425  1EB9  3000               	movlw	0
  7426  1EBA  00A0               	movwf	?___xxtofl
  7427  1EBB  2F42               	goto	l885
  7428  1EBC                     l4141:
  7429  1EBC  3096               	movlw	150
  7430  1EBD  00A4               	movwf	??___xxtofl
  7431  1EBE  0824               	movf	??___xxtofl,w
  7432  1EBF  00A9               	movwf	___xxtofl@exp
  7433  1EC0  2ECE               	goto	l4145
  7434  1EC1                     l4143:
  7435  1EC1  3001               	movlw	1
  7436  1EC2  00A4               	movwf	??___xxtofl
  7437  1EC3  0824               	movf	??___xxtofl,w
  7438  1EC4  07A9               	addwf	___xxtofl@exp,f
  7439  1EC5  3001               	movlw	1
  7440  1EC6                     u7155:
  7441  1EC6  1003               	clrc
  7442  1EC7  0CAD               	rrf	___xxtofl@arg+3,f
  7443  1EC8  0CAC               	rrf	___xxtofl@arg+2,f
  7444  1EC9  0CAB               	rrf	___xxtofl@arg+1,f
  7445  1ECA  0CAA               	rrf	___xxtofl@arg,f
  7446  1ECB  3EFF               	addlw	-1
  7447  1ECC  1D03               	skipz
  7448  1ECD  2EC6               	goto	u7155
  7449  1ECE                     l4145:
  7450  1ECE  30FE               	movlw	254
  7451  1ECF  052D               	andwf	___xxtofl@arg+3,w
  7452  1ED0  1D03               	btfss	3,2
  7453  1ED1  2ED3               	goto	u7161
  7454  1ED2  2ED4               	goto	u7160
  7455  1ED3                     u7161:
  7456  1ED3  2EC1               	goto	l4143
  7457  1ED4                     u7160:
  7458  1ED4  2EF0               	goto	l889
  7459  1ED5                     l4147:
  7460  1ED5  3001               	movlw	1
  7461  1ED6  00A4               	movwf	??___xxtofl
  7462  1ED7  0824               	movf	??___xxtofl,w
  7463  1ED8  07A9               	addwf	___xxtofl@exp,f
  7464  1ED9                     l4149:
  7465  1ED9  3001               	movlw	1
  7466  1EDA  07AA               	addwf	___xxtofl@arg,f
  7467  1EDB  3000               	movlw	0
  7468  1EDC  1803               	skipnc
  7469  1EDD  3001               	movlw	1
  7470  1EDE  07AB               	addwf	___xxtofl@arg+1,f
  7471  1EDF  3000               	movlw	0
  7472  1EE0  1803               	skipnc
  7473  1EE1  3001               	movlw	1
  7474  1EE2  07AC               	addwf	___xxtofl@arg+2,f
  7475  1EE3  3000               	movlw	0
  7476  1EE4  1803               	skipnc
  7477  1EE5  3001               	movlw	1
  7478  1EE6  07AD               	addwf	___xxtofl@arg+3,f
  7479  1EE7                     l4151:
  7480  1EE7  3001               	movlw	1
  7481  1EE8                     u7175:
  7482  1EE8  1003               	clrc
  7483  1EE9  0CAD               	rrf	___xxtofl@arg+3,f
  7484  1EEA  0CAC               	rrf	___xxtofl@arg+2,f
  7485  1EEB  0CAB               	rrf	___xxtofl@arg+1,f
  7486  1EEC  0CAA               	rrf	___xxtofl@arg,f
  7487  1EED  3EFF               	addlw	-1
  7488  1EEE  1D03               	skipz
  7489  1EEF  2EE8               	goto	u7175
  7490  1EF0                     l889:
  7491  1EF0  30FF               	movlw	255
  7492  1EF1  052D               	andwf	___xxtofl@arg+3,w
  7493  1EF2  1D03               	btfss	3,2
  7494  1EF3  2EF5               	goto	u7181
  7495  1EF4  2EF6               	goto	u7180
  7496  1EF5                     u7181:
  7497  1EF5  2ED5               	goto	l4147
  7498  1EF6                     u7180:
  7499  1EF6  2F02               	goto	l4155
  7500  1EF7                     l4153:
  7501  1EF7  3001               	movlw	1
  7502  1EF8  02A9               	subwf	___xxtofl@exp,f
  7503  1EF9  3001               	movlw	1
  7504  1EFA  00A4               	movwf	??___xxtofl
  7505  1EFB                     u7195:
  7506  1EFB  1003               	clrc
  7507  1EFC  0DAA               	rlf	___xxtofl@arg,f
  7508  1EFD  0DAB               	rlf	___xxtofl@arg+1,f
  7509  1EFE  0DAC               	rlf	___xxtofl@arg+2,f
  7510  1EFF  0DAD               	rlf	___xxtofl@arg+3,f
  7511  1F00  0BA4               	decfsz	??___xxtofl,f
  7512  1F01  2EFB               	goto	u7195
  7513  1F02                     l4155:
  7514  1F02  1BAC               	btfsc	___xxtofl@arg+2,7
  7515  1F03  2F05               	goto	u7201
  7516  1F04  2F06               	goto	u7200
  7517  1F05                     u7201:
  7518  1F05  2F0C               	goto	l896
  7519  1F06                     u7200:
  7520  1F06                     l4157:
  7521  1F06  3002               	movlw	2
  7522  1F07  0229               	subwf	___xxtofl@exp,w
  7523  1F08  1803               	skipnc
  7524  1F09  2F0B               	goto	u7211
  7525  1F0A  2F0C               	goto	u7210
  7526  1F0B                     u7211:
  7527  1F0B  2EF7               	goto	l4153
  7528  1F0C                     u7210:
  7529  1F0C                     l896:
  7530  1F0C  1829               	btfsc	___xxtofl@exp,0
  7531  1F0D  2F0F               	goto	u7221
  7532  1F0E  2F10               	goto	u7220
  7533  1F0F                     u7221:
  7534  1F0F  2F18               	goto	l897
  7535  1F10                     u7220:
  7536  1F10                     l4159:
  7537  1F10  30FF               	movlw	255
  7538  1F11  05AA               	andwf	___xxtofl@arg,f
  7539  1F12  30FF               	movlw	255
  7540  1F13  05AB               	andwf	___xxtofl@arg+1,f
  7541  1F14  307F               	movlw	127
  7542  1F15  05AC               	andwf	___xxtofl@arg+2,f
  7543  1F16  30FF               	movlw	255
  7544  1F17  05AD               	andwf	___xxtofl@arg+3,f
  7545  1F18                     l897:
  7546  1F18  1003               	clrc
  7547  1F19  0CA9               	rrf	___xxtofl@exp,f
  7548  1F1A                     l4161:
  7549  1F1A  0829               	movf	___xxtofl@exp,w
  7550  1F1B  00A4               	movwf	??___xxtofl
  7551  1F1C  01A5               	clrf	??___xxtofl+1
  7552  1F1D  01A6               	clrf	??___xxtofl+2
  7553  1F1E  01A7               	clrf	??___xxtofl+3
  7554  1F1F  3018               	movlw	24
  7555  1F20                     u7235:
  7556  1F20  1003               	clrc
  7557  1F21  0DA4               	rlf	??___xxtofl,f
  7558  1F22  0DA5               	rlf	??___xxtofl+1,f
  7559  1F23  0DA6               	rlf	??___xxtofl+2,f
  7560  1F24  0DA7               	rlf	??___xxtofl+3,f
  7561  1F25                     u7230:
  7562  1F25  3EFF               	addlw	-1
  7563  1F26  1D03               	skipz
  7564  1F27  2F20               	goto	u7235
  7565  1F28  0824               	movf	??___xxtofl,w
  7566  1F29  04AA               	iorwf	___xxtofl@arg,f
  7567  1F2A  0825               	movf	??___xxtofl+1,w
  7568  1F2B  04AB               	iorwf	___xxtofl@arg+1,f
  7569  1F2C  0826               	movf	??___xxtofl+2,w
  7570  1F2D  04AC               	iorwf	___xxtofl@arg+2,f
  7571  1F2E  0827               	movf	??___xxtofl+3,w
  7572  1F2F  04AD               	iorwf	___xxtofl@arg+3,f
  7573  1F30                     l4163:
  7574  1F30  0828               	movf	___xxtofl@sign,w
  7575  1F31  1903               	btfsc	3,2
  7576  1F32  2F34               	goto	u7241
  7577  1F33  2F35               	goto	u7240
  7578  1F34                     u7241:
  7579  1F34  2F3A               	goto	l4169
  7580  1F35                     u7240:
  7581  1F35                     l4165:
  7582  1F35  1FA3               	btfss	___xxtofl@val+3,7
  7583  1F36  2F38               	goto	u7251
  7584  1F37  2F39               	goto	u7250
  7585  1F38                     u7251:
  7586  1F38  2F3A               	goto	l4169
  7587  1F39                     u7250:
  7588  1F39                     l4167:
  7589  1F39  17AD               	bsf	___xxtofl@arg+3,7
  7590  1F3A                     l4169:
  7591  1F3A  082D               	movf	___xxtofl@arg+3,w
  7592  1F3B  00A3               	movwf	?___xxtofl+3
  7593  1F3C  082C               	movf	___xxtofl@arg+2,w
  7594  1F3D  00A2               	movwf	?___xxtofl+2
  7595  1F3E  082B               	movf	___xxtofl@arg+1,w
  7596  1F3F  00A1               	movwf	?___xxtofl+1
  7597  1F40  082A               	movf	___xxtofl@arg,w
  7598  1F41  00A0               	movwf	?___xxtofl
  7599  1F42                     l885:
  7600  1F42  0008               	return
  7601  1F43                     __end_of___xxtofl:
  7602                           
  7603                           	psect	text22
  7604  093C                     __ptext22:	
  7605 ;; *************** function ___flmul *****************
  7606 ;; Defined at:
  7607 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;  b               4   14[BANK0 ] unsigned char 
  7610 ;;  a               4   18[BANK0 ] unsigned char 
  7611 ;; Auto vars:     Size  Location     Type
  7612 ;;  prod            4   34[BANK0 ] struct .
  7613 ;;  grs             4   29[BANK0 ] unsigned long 
  7614 ;;  temp            2   38[BANK0 ] struct .
  7615 ;;  bexp            1   33[BANK0 ] unsigned char 
  7616 ;;  aexp            1   28[BANK0 ] unsigned char 
  7617 ;;  sign            1   27[BANK0 ] unsigned char 
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  4   14[BANK0 ] unsigned char 
  7620 ;; Registers used:
  7621 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/0
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7627 ;;      Params:         0       8       0       0       0
  7628 ;;      Locals:         0      13       0       0       0
  7629 ;;      Temps:          0       5       0       0       0
  7630 ;;      Totals:         0      26       0       0       0
  7631 ;;Total ram usage:       26 bytes
  7632 ;; Hardware stack levels used:    1
  7633 ;; Hardware stack levels required when called:    3
  7634 ;; This function calls:
  7635 ;;		__Umul8_16
  7636 ;; This function is called by:
  7637 ;;		_conv
  7638 ;;		_fround
  7639 ;;		_scale
  7640 ;;		_sprintf
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           
  7645                           ;psect for function ___flmul
  7646  093C                     ___flmul:
  7647  093C                     l3803:	
  7648                           ;incstack = 0
  7649                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7650                           
  7651  093C  1283               	bcf	3,5	;RP0=0, select bank0
  7652  093D  1303               	bcf	3,6	;RP1=0, select bank0
  7653  093E  0831               	movf	___flmul@b+3,w
  7654  093F  3980               	andlw	128
  7655  0940  00B6               	movwf	??___flmul
  7656  0941  0836               	movf	??___flmul,w
  7657  0942  00BB               	movwf	___flmul@sign
  7658  0943                     l3805:
  7659  0943  0831               	movf	___flmul@b+3,w
  7660  0944  00B6               	movwf	??___flmul
  7661  0945  0736               	addwf	??___flmul,w
  7662  0946  00B7               	movwf	??___flmul+1
  7663  0947  0837               	movf	??___flmul+1,w
  7664  0948  00C1               	movwf	___flmul@bexp
  7665  0949                     l3807:
  7666  0949  1FB0               	btfss	___flmul@b+2,7
  7667  094A  294C               	goto	u6221
  7668  094B  294D               	goto	u6220
  7669  094C                     u6221:
  7670  094C  294E               	goto	l3811
  7671  094D                     u6220:
  7672  094D                     l3809:
  7673  094D  1441               	bsf	___flmul@bexp,0
  7674  094E                     l3811:
  7675  094E  0841               	movf	___flmul@bexp,w
  7676  094F  1903               	btfsc	3,2
  7677  0950  2952               	goto	u6231
  7678  0951  2953               	goto	u6230
  7679  0952                     u6231:
  7680  0952  2962               	goto	l3819
  7681  0953                     u6230:
  7682  0953                     l3813:
  7683  0953  0A41               	incf	___flmul@bexp,w
  7684  0954  1D03               	btfss	3,2
  7685  0955  2957               	goto	u6241
  7686  0956  2958               	goto	u6240
  7687  0957                     u6241:
  7688  0957  2960               	goto	l3817
  7689  0958                     u6240:
  7690  0958                     l3815:
  7691  0958  3000               	movlw	0
  7692  0959  00B1               	movwf	___flmul@b+3
  7693  095A  3000               	movlw	0
  7694  095B  00B0               	movwf	___flmul@b+2
  7695  095C  3000               	movlw	0
  7696  095D  00AF               	movwf	___flmul@b+1
  7697  095E  3000               	movlw	0
  7698  095F  00AE               	movwf	___flmul@b
  7699  0960                     l3817:
  7700  0960  17B0               	bsf	___flmul@b+2,7
  7701  0961  296A               	goto	l3821
  7702  0962                     l3819:
  7703  0962  3000               	movlw	0
  7704  0963  00B1               	movwf	___flmul@b+3
  7705  0964  3000               	movlw	0
  7706  0965  00B0               	movwf	___flmul@b+2
  7707  0966  3000               	movlw	0
  7708  0967  00AF               	movwf	___flmul@b+1
  7709  0968  3000               	movlw	0
  7710  0969  00AE               	movwf	___flmul@b
  7711  096A                     l3821:
  7712  096A  0835               	movf	___flmul@a+3,w
  7713  096B  3980               	andlw	128
  7714  096C  00B6               	movwf	??___flmul
  7715  096D  0836               	movf	??___flmul,w
  7716  096E  06BB               	xorwf	___flmul@sign,f
  7717  096F                     l3823:
  7718  096F  0835               	movf	___flmul@a+3,w
  7719  0970  00B6               	movwf	??___flmul
  7720  0971  0736               	addwf	??___flmul,w
  7721  0972  00B7               	movwf	??___flmul+1
  7722  0973  0837               	movf	??___flmul+1,w
  7723  0974  00BC               	movwf	___flmul@aexp
  7724  0975                     l3825:
  7725  0975  1FB4               	btfss	___flmul@a+2,7
  7726  0976  2978               	goto	u6251
  7727  0977  2979               	goto	u6250
  7728  0978                     u6251:
  7729  0978  297A               	goto	l3829
  7730  0979                     u6250:
  7731  0979                     l3827:
  7732  0979  143C               	bsf	___flmul@aexp,0
  7733  097A                     l3829:
  7734  097A  083C               	movf	___flmul@aexp,w
  7735  097B  1903               	btfsc	3,2
  7736  097C  297E               	goto	u6261
  7737  097D  297F               	goto	u6260
  7738  097E                     u6261:
  7739  097E  298E               	goto	l3837
  7740  097F                     u6260:
  7741  097F                     l3831:
  7742  097F  0A3C               	incf	___flmul@aexp,w
  7743  0980  1D03               	btfss	3,2
  7744  0981  2983               	goto	u6271
  7745  0982  2984               	goto	u6270
  7746  0983                     u6271:
  7747  0983  298C               	goto	l3835
  7748  0984                     u6270:
  7749  0984                     l3833:
  7750  0984  3000               	movlw	0
  7751  0985  00B5               	movwf	___flmul@a+3
  7752  0986  3000               	movlw	0
  7753  0987  00B4               	movwf	___flmul@a+2
  7754  0988  3000               	movlw	0
  7755  0989  00B3               	movwf	___flmul@a+1
  7756  098A  3000               	movlw	0
  7757  098B  00B2               	movwf	___flmul@a
  7758  098C                     l3835:
  7759  098C  17B4               	bsf	___flmul@a+2,7
  7760  098D  2996               	goto	l3839
  7761  098E                     l3837:
  7762  098E  3000               	movlw	0
  7763  098F  00B5               	movwf	___flmul@a+3
  7764  0990  3000               	movlw	0
  7765  0991  00B4               	movwf	___flmul@a+2
  7766  0992  3000               	movlw	0
  7767  0993  00B3               	movwf	___flmul@a+1
  7768  0994  3000               	movlw	0
  7769  0995  00B2               	movwf	___flmul@a
  7770  0996                     l3839:
  7771  0996  083C               	movf	___flmul@aexp,w
  7772  0997  1903               	btfsc	3,2
  7773  0998  299A               	goto	u6281
  7774  0999  299B               	goto	u6280
  7775  099A                     u6281:
  7776  099A  29A0               	goto	l3843
  7777  099B                     u6280:
  7778  099B                     l3841:
  7779  099B  0841               	movf	___flmul@bexp,w
  7780  099C  1D03               	btfss	3,2
  7781  099D  299F               	goto	u6291
  7782  099E  29A0               	goto	u6290
  7783  099F                     u6291:
  7784  099F  29A9               	goto	l3847
  7785  09A0                     u6290:
  7786  09A0                     l3843:
  7787  09A0  3000               	movlw	0
  7788  09A1  00B1               	movwf	?___flmul+3
  7789  09A2  3000               	movlw	0
  7790  09A3  00B0               	movwf	?___flmul+2
  7791  09A4  3000               	movlw	0
  7792  09A5  00AF               	movwf	?___flmul+1
  7793  09A6  3000               	movlw	0
  7794  09A7  00AE               	movwf	?___flmul
  7795  09A8  2C9C               	goto	l839
  7796  09A9                     l3847:
  7797  09A9  082E               	movf	___flmul@b,w
  7798  09AA  00B6               	movwf	??___flmul
  7799  09AB  0836               	movf	??___flmul,w
  7800  09AC  00F5               	movwf	__Umul8_16@multiplicand
  7801  09AD  0834               	movf	___flmul@a+2,w
  7802  09AE  160A  158A  21C7  120A  158A  	fcall	__Umul8_16
  7803  09B3  0876               	movf	?__Umul8_16+1,w
  7804  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  7805  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  7806  09B6  00C7               	movwf	___flmul@temp+1
  7807  09B7  0875               	movf	?__Umul8_16,w
  7808  09B8  00C6               	movwf	___flmul@temp
  7809  09B9                     l3849:
  7810  09B9  0846               	movf	___flmul@temp,w
  7811  09BA  00B6               	movwf	??___flmul
  7812  09BB  01B7               	clrf	??___flmul+1
  7813  09BC  01B8               	clrf	??___flmul+2
  7814  09BD  01B9               	clrf	??___flmul+3
  7815  09BE  0839               	movf	??___flmul+3,w
  7816  09BF  00C0               	movwf	___flmul@grs+3
  7817  09C0  0838               	movf	??___flmul+2,w
  7818  09C1  00BF               	movwf	___flmul@grs+2
  7819  09C2  0837               	movf	??___flmul+1,w
  7820  09C3  00BE               	movwf	___flmul@grs+1
  7821  09C4  0836               	movf	??___flmul,w
  7822  09C5  00BD               	movwf	___flmul@grs
  7823  09C6                     l3851:
  7824  09C6  0847               	movf	___flmul@temp+1,w
  7825  09C7  00B6               	movwf	??___flmul
  7826  09C8  01B7               	clrf	??___flmul+1
  7827  09C9  01B8               	clrf	??___flmul+2
  7828  09CA  01B9               	clrf	??___flmul+3
  7829  09CB  0839               	movf	??___flmul+3,w
  7830  09CC  00C5               	movwf	___flmul@prod+3
  7831  09CD  0838               	movf	??___flmul+2,w
  7832  09CE  00C4               	movwf	___flmul@prod+2
  7833  09CF  0837               	movf	??___flmul+1,w
  7834  09D0  00C3               	movwf	___flmul@prod+1
  7835  09D1  0836               	movf	??___flmul,w
  7836  09D2  00C2               	movwf	___flmul@prod
  7837  09D3  082F               	movf	___flmul@b+1,w
  7838  09D4  00B6               	movwf	??___flmul
  7839  09D5  0836               	movf	??___flmul,w
  7840  09D6  00F5               	movwf	__Umul8_16@multiplicand
  7841  09D7  0833               	movf	___flmul@a+1,w
  7842  09D8  160A  158A  21C7  120A  158A  	fcall	__Umul8_16
  7843  09DD  0876               	movf	?__Umul8_16+1,w
  7844  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  7845  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  7846  09E0  00C7               	movwf	___flmul@temp+1
  7847  09E1  0875               	movf	?__Umul8_16,w
  7848  09E2  00C6               	movwf	___flmul@temp
  7849  09E3                     l3853:
  7850  09E3  0846               	movf	___flmul@temp,w
  7851  09E4  00B6               	movwf	??___flmul
  7852  09E5  01B7               	clrf	??___flmul+1
  7853  09E6  01B8               	clrf	??___flmul+2
  7854  09E7  01B9               	clrf	??___flmul+3
  7855  09E8  0836               	movf	??___flmul,w
  7856  09E9  07BD               	addwf	___flmul@grs,f
  7857  09EA  0837               	movf	??___flmul+1,w
  7858  09EB  1103               	clrz
  7859  09EC  1803               	skipnc
  7860  09ED  3E01               	addlw	1
  7861  09EE  1903               	skipnz
  7862  09EF  29F1               	goto	u6301
  7863  09F0  07BE               	addwf	___flmul@grs+1,f
  7864  09F1                     u6301:
  7865  09F1  0838               	movf	??___flmul+2,w
  7866  09F2  1103               	clrz
  7867  09F3  1803               	skipnc
  7868  09F4  3E01               	addlw	1
  7869  09F5  1903               	skipnz
  7870  09F6  29F8               	goto	u6302
  7871  09F7  07BF               	addwf	___flmul@grs+2,f
  7872  09F8                     u6302:
  7873  09F8  0839               	movf	??___flmul+3,w
  7874  09F9  1103               	clrz
  7875  09FA  1803               	skipnc
  7876  09FB  3E01               	addlw	1
  7877  09FC  1903               	skipnz
  7878  09FD  29FF               	goto	u6303
  7879  09FE  07C0               	addwf	___flmul@grs+3,f
  7880  09FF                     u6303:
  7881  09FF                     l3855:
  7882  09FF  0847               	movf	___flmul@temp+1,w
  7883  0A00  00B6               	movwf	??___flmul
  7884  0A01  01B7               	clrf	??___flmul+1
  7885  0A02  01B8               	clrf	??___flmul+2
  7886  0A03  01B9               	clrf	??___flmul+3
  7887  0A04  0836               	movf	??___flmul,w
  7888  0A05  07C2               	addwf	___flmul@prod,f
  7889  0A06  0837               	movf	??___flmul+1,w
  7890  0A07  1103               	clrz
  7891  0A08  1803               	skipnc
  7892  0A09  3E01               	addlw	1
  7893  0A0A  1903               	skipnz
  7894  0A0B  2A0D               	goto	u6311
  7895  0A0C  07C3               	addwf	___flmul@prod+1,f
  7896  0A0D                     u6311:
  7897  0A0D  0838               	movf	??___flmul+2,w
  7898  0A0E  1103               	clrz
  7899  0A0F  1803               	skipnc
  7900  0A10  3E01               	addlw	1
  7901  0A11  1903               	skipnz
  7902  0A12  2A14               	goto	u6312
  7903  0A13  07C4               	addwf	___flmul@prod+2,f
  7904  0A14                     u6312:
  7905  0A14  0839               	movf	??___flmul+3,w
  7906  0A15  1103               	clrz
  7907  0A16  1803               	skipnc
  7908  0A17  3E01               	addlw	1
  7909  0A18  1903               	skipnz
  7910  0A19  2A1B               	goto	u6313
  7911  0A1A  07C5               	addwf	___flmul@prod+3,f
  7912  0A1B                     u6313:
  7913  0A1B  0830               	movf	___flmul@b+2,w
  7914  0A1C  00B6               	movwf	??___flmul
  7915  0A1D  0836               	movf	??___flmul,w
  7916  0A1E  00F5               	movwf	__Umul8_16@multiplicand
  7917  0A1F  0832               	movf	___flmul@a,w
  7918  0A20  160A  158A  21C7  120A  158A  	fcall	__Umul8_16
  7919  0A25  0876               	movf	?__Umul8_16+1,w
  7920  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  7921  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  7922  0A28  00C7               	movwf	___flmul@temp+1
  7923  0A29  0875               	movf	?__Umul8_16,w
  7924  0A2A  00C6               	movwf	___flmul@temp
  7925  0A2B                     l3857:
  7926  0A2B  0846               	movf	___flmul@temp,w
  7927  0A2C  00B6               	movwf	??___flmul
  7928  0A2D  01B7               	clrf	??___flmul+1
  7929  0A2E  01B8               	clrf	??___flmul+2
  7930  0A2F  01B9               	clrf	??___flmul+3
  7931  0A30  0836               	movf	??___flmul,w
  7932  0A31  07BD               	addwf	___flmul@grs,f
  7933  0A32  0837               	movf	??___flmul+1,w
  7934  0A33  1103               	clrz
  7935  0A34  1803               	skipnc
  7936  0A35  3E01               	addlw	1
  7937  0A36  1903               	skipnz
  7938  0A37  2A39               	goto	u6321
  7939  0A38  07BE               	addwf	___flmul@grs+1,f
  7940  0A39                     u6321:
  7941  0A39  0838               	movf	??___flmul+2,w
  7942  0A3A  1103               	clrz
  7943  0A3B  1803               	skipnc
  7944  0A3C  3E01               	addlw	1
  7945  0A3D  1903               	skipnz
  7946  0A3E  2A40               	goto	u6322
  7947  0A3F  07BF               	addwf	___flmul@grs+2,f
  7948  0A40                     u6322:
  7949  0A40  0839               	movf	??___flmul+3,w
  7950  0A41  1103               	clrz
  7951  0A42  1803               	skipnc
  7952  0A43  3E01               	addlw	1
  7953  0A44  1903               	skipnz
  7954  0A45  2A47               	goto	u6323
  7955  0A46  07C0               	addwf	___flmul@grs+3,f
  7956  0A47                     u6323:
  7957  0A47                     l3859:
  7958  0A47  0847               	movf	___flmul@temp+1,w
  7959  0A48  00B6               	movwf	??___flmul
  7960  0A49  01B7               	clrf	??___flmul+1
  7961  0A4A  01B8               	clrf	??___flmul+2
  7962  0A4B  01B9               	clrf	??___flmul+3
  7963  0A4C  0836               	movf	??___flmul,w
  7964  0A4D  07C2               	addwf	___flmul@prod,f
  7965  0A4E  0837               	movf	??___flmul+1,w
  7966  0A4F  1103               	clrz
  7967  0A50  1803               	skipnc
  7968  0A51  3E01               	addlw	1
  7969  0A52  1903               	skipnz
  7970  0A53  2A55               	goto	u6331
  7971  0A54  07C3               	addwf	___flmul@prod+1,f
  7972  0A55                     u6331:
  7973  0A55  0838               	movf	??___flmul+2,w
  7974  0A56  1103               	clrz
  7975  0A57  1803               	skipnc
  7976  0A58  3E01               	addlw	1
  7977  0A59  1903               	skipnz
  7978  0A5A  2A5C               	goto	u6332
  7979  0A5B  07C4               	addwf	___flmul@prod+2,f
  7980  0A5C                     u6332:
  7981  0A5C  0839               	movf	??___flmul+3,w
  7982  0A5D  1103               	clrz
  7983  0A5E  1803               	skipnc
  7984  0A5F  3E01               	addlw	1
  7985  0A60  1903               	skipnz
  7986  0A61  2A63               	goto	u6333
  7987  0A62  07C5               	addwf	___flmul@prod+3,f
  7988  0A63                     u6333:
  7989  0A63                     l3861:
  7990  0A63  3008               	movlw	8
  7991  0A64  00B6               	movwf	??___flmul
  7992  0A65                     u6345:
  7993  0A65  1003               	clrc
  7994  0A66  0DBD               	rlf	___flmul@grs,f
  7995  0A67  0DBE               	rlf	___flmul@grs+1,f
  7996  0A68  0DBF               	rlf	___flmul@grs+2,f
  7997  0A69  0DC0               	rlf	___flmul@grs+3,f
  7998  0A6A  0BB6               	decfsz	??___flmul,f
  7999  0A6B  2A65               	goto	u6345
  8000  0A6C                     l3863:
  8001  0A6C  082F               	movf	___flmul@b+1,w
  8002  0A6D  00B6               	movwf	??___flmul
  8003  0A6E  0836               	movf	??___flmul,w
  8004  0A6F  00F5               	movwf	__Umul8_16@multiplicand
  8005  0A70  0832               	movf	___flmul@a,w
  8006  0A71  160A  158A  21C7  120A  158A  	fcall	__Umul8_16
  8007  0A76  0876               	movf	?__Umul8_16+1,w
  8008  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  8009  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  8010  0A79  00C7               	movwf	___flmul@temp+1
  8011  0A7A  0875               	movf	?__Umul8_16,w
  8012  0A7B  00C6               	movwf	___flmul@temp
  8013  0A7C                     l3865:
  8014  0A7C  0846               	movf	___flmul@temp,w
  8015  0A7D  00B6               	movwf	??___flmul
  8016  0A7E  0847               	movf	___flmul@temp+1,w
  8017  0A7F  00B7               	movwf	??___flmul+1
  8018  0A80  01B8               	clrf	??___flmul+2
  8019  0A81  01B9               	clrf	??___flmul+3
  8020  0A82  0836               	movf	??___flmul,w
  8021  0A83  07BD               	addwf	___flmul@grs,f
  8022  0A84  0837               	movf	??___flmul+1,w
  8023  0A85  1103               	clrz
  8024  0A86  1803               	skipnc
  8025  0A87  3E01               	addlw	1
  8026  0A88  1903               	skipnz
  8027  0A89  2A8B               	goto	u6351
  8028  0A8A  07BE               	addwf	___flmul@grs+1,f
  8029  0A8B                     u6351:
  8030  0A8B  0838               	movf	??___flmul+2,w
  8031  0A8C  1103               	clrz
  8032  0A8D  1803               	skipnc
  8033  0A8E  3E01               	addlw	1
  8034  0A8F  1903               	skipnz
  8035  0A90  2A92               	goto	u6352
  8036  0A91  07BF               	addwf	___flmul@grs+2,f
  8037  0A92                     u6352:
  8038  0A92  0839               	movf	??___flmul+3,w
  8039  0A93  1103               	clrz
  8040  0A94  1803               	skipnc
  8041  0A95  3E01               	addlw	1
  8042  0A96  1903               	skipnz
  8043  0A97  2A99               	goto	u6353
  8044  0A98  07C0               	addwf	___flmul@grs+3,f
  8045  0A99                     u6353:
  8046  0A99                     l3867:
  8047  0A99  082E               	movf	___flmul@b,w
  8048  0A9A  00B6               	movwf	??___flmul
  8049  0A9B  0836               	movf	??___flmul,w
  8050  0A9C  00F5               	movwf	__Umul8_16@multiplicand
  8051  0A9D  0833               	movf	___flmul@a+1,w
  8052  0A9E  160A  158A  21C7  120A  158A  	fcall	__Umul8_16
  8053  0AA3  0876               	movf	?__Umul8_16+1,w
  8054  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  8055  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  8056  0AA6  00C7               	movwf	___flmul@temp+1
  8057  0AA7  0875               	movf	?__Umul8_16,w
  8058  0AA8  00C6               	movwf	___flmul@temp
  8059  0AA9                     l3869:
  8060  0AA9  0846               	movf	___flmul@temp,w
  8061  0AAA  00B6               	movwf	??___flmul
  8062  0AAB  0847               	movf	___flmul@temp+1,w
  8063  0AAC  00B7               	movwf	??___flmul+1
  8064  0AAD  01B8               	clrf	??___flmul+2
  8065  0AAE  01B9               	clrf	??___flmul+3
  8066  0AAF  0836               	movf	??___flmul,w
  8067  0AB0  07BD               	addwf	___flmul@grs,f
  8068  0AB1  0837               	movf	??___flmul+1,w
  8069  0AB2  1103               	clrz
  8070  0AB3  1803               	skipnc
  8071  0AB4  3E01               	addlw	1
  8072  0AB5  1903               	skipnz
  8073  0AB6  2AB8               	goto	u6361
  8074  0AB7  07BE               	addwf	___flmul@grs+1,f
  8075  0AB8                     u6361:
  8076  0AB8  0838               	movf	??___flmul+2,w
  8077  0AB9  1103               	clrz
  8078  0ABA  1803               	skipnc
  8079  0ABB  3E01               	addlw	1
  8080  0ABC  1903               	skipnz
  8081  0ABD  2ABF               	goto	u6362
  8082  0ABE  07BF               	addwf	___flmul@grs+2,f
  8083  0ABF                     u6362:
  8084  0ABF  0839               	movf	??___flmul+3,w
  8085  0AC0  1103               	clrz
  8086  0AC1  1803               	skipnc
  8087  0AC2  3E01               	addlw	1
  8088  0AC3  1903               	skipnz
  8089  0AC4  2AC6               	goto	u6363
  8090  0AC5  07C0               	addwf	___flmul@grs+3,f
  8091  0AC6                     u6363:
  8092  0AC6                     l3871:
  8093  0AC6  3008               	movlw	8
  8094  0AC7  00B6               	movwf	??___flmul
  8095  0AC8                     u6375:
  8096  0AC8  1003               	clrc
  8097  0AC9  0DBD               	rlf	___flmul@grs,f
  8098  0ACA  0DBE               	rlf	___flmul@grs+1,f
  8099  0ACB  0DBF               	rlf	___flmul@grs+2,f
  8100  0ACC  0DC0               	rlf	___flmul@grs+3,f
  8101  0ACD  0BB6               	decfsz	??___flmul,f
  8102  0ACE  2AC8               	goto	u6375
  8103  0ACF  082E               	movf	___flmul@b,w
  8104  0AD0  00B6               	movwf	??___flmul
  8105  0AD1  0836               	movf	??___flmul,w
  8106  0AD2  00F5               	movwf	__Umul8_16@multiplicand
  8107  0AD3  0832               	movf	___flmul@a,w
  8108  0AD4  160A  158A  21C7  120A  158A  	fcall	__Umul8_16
  8109  0AD9  0876               	movf	?__Umul8_16+1,w
  8110  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  8111  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  8112  0ADC  00C7               	movwf	___flmul@temp+1
  8113  0ADD  0875               	movf	?__Umul8_16,w
  8114  0ADE  00C6               	movwf	___flmul@temp
  8115  0ADF                     l3873:
  8116  0ADF  0846               	movf	___flmul@temp,w
  8117  0AE0  00B6               	movwf	??___flmul
  8118  0AE1  0847               	movf	___flmul@temp+1,w
  8119  0AE2  00B7               	movwf	??___flmul+1
  8120  0AE3  01B8               	clrf	??___flmul+2
  8121  0AE4  01B9               	clrf	??___flmul+3
  8122  0AE5  0836               	movf	??___flmul,w
  8123  0AE6  07BD               	addwf	___flmul@grs,f
  8124  0AE7  0837               	movf	??___flmul+1,w
  8125  0AE8  1103               	clrz
  8126  0AE9  1803               	skipnc
  8127  0AEA  3E01               	addlw	1
  8128  0AEB  1903               	skipnz
  8129  0AEC  2AEE               	goto	u6381
  8130  0AED  07BE               	addwf	___flmul@grs+1,f
  8131  0AEE                     u6381:
  8132  0AEE  0838               	movf	??___flmul+2,w
  8133  0AEF  1103               	clrz
  8134  0AF0  1803               	skipnc
  8135  0AF1  3E01               	addlw	1
  8136  0AF2  1903               	skipnz
  8137  0AF3  2AF5               	goto	u6382
  8138  0AF4  07BF               	addwf	___flmul@grs+2,f
  8139  0AF5                     u6382:
  8140  0AF5  0839               	movf	??___flmul+3,w
  8141  0AF6  1103               	clrz
  8142  0AF7  1803               	skipnc
  8143  0AF8  3E01               	addlw	1
  8144  0AF9  1903               	skipnz
  8145  0AFA  2AFC               	goto	u6383
  8146  0AFB  07C0               	addwf	___flmul@grs+3,f
  8147  0AFC                     u6383:
  8148  0AFC                     l3875:
  8149  0AFC  082F               	movf	___flmul@b+1,w
  8150  0AFD  00B6               	movwf	??___flmul
  8151  0AFE  0836               	movf	??___flmul,w
  8152  0AFF  00F5               	movwf	__Umul8_16@multiplicand
  8153  0B00  0834               	movf	___flmul@a+2,w
  8154  0B01  160A  158A  21C7  120A  158A  	fcall	__Umul8_16
  8155  0B06  0876               	movf	?__Umul8_16+1,w
  8156  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  8157  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  8158  0B09  00C7               	movwf	___flmul@temp+1
  8159  0B0A  0875               	movf	?__Umul8_16,w
  8160  0B0B  00C6               	movwf	___flmul@temp
  8161  0B0C  0846               	movf	___flmul@temp,w
  8162  0B0D  00B6               	movwf	??___flmul
  8163  0B0E  0847               	movf	___flmul@temp+1,w
  8164  0B0F  00B7               	movwf	??___flmul+1
  8165  0B10  01B8               	clrf	??___flmul+2
  8166  0B11  01B9               	clrf	??___flmul+3
  8167  0B12  0836               	movf	??___flmul,w
  8168  0B13  07C2               	addwf	___flmul@prod,f
  8169  0B14  0837               	movf	??___flmul+1,w
  8170  0B15  1103               	clrz
  8171  0B16  1803               	skipnc
  8172  0B17  3E01               	addlw	1
  8173  0B18  1903               	skipnz
  8174  0B19  2B1B               	goto	u6391
  8175  0B1A  07C3               	addwf	___flmul@prod+1,f
  8176  0B1B                     u6391:
  8177  0B1B  0838               	movf	??___flmul+2,w
  8178  0B1C  1103               	clrz
  8179  0B1D  1803               	skipnc
  8180  0B1E  3E01               	addlw	1
  8181  0B1F  1903               	skipnz
  8182  0B20  2B22               	goto	u6392
  8183  0B21  07C4               	addwf	___flmul@prod+2,f
  8184  0B22                     u6392:
  8185  0B22  0839               	movf	??___flmul+3,w
  8186  0B23  1103               	clrz
  8187  0B24  1803               	skipnc
  8188  0B25  3E01               	addlw	1
  8189  0B26  1903               	skipnz
  8190  0B27  2B29               	goto	u6393
  8191  0B28  07C5               	addwf	___flmul@prod+3,f
  8192  0B29                     u6393:
  8193  0B29                     l3877:
  8194  0B29  0830               	movf	___flmul@b+2,w
  8195  0B2A  00B6               	movwf	??___flmul
  8196  0B2B  0836               	movf	??___flmul,w
  8197  0B2C  00F5               	movwf	__Umul8_16@multiplicand
  8198  0B2D  0833               	movf	___flmul@a+1,w
  8199  0B2E  160A  158A  21C7  120A  158A  	fcall	__Umul8_16
  8200  0B33  0876               	movf	?__Umul8_16+1,w
  8201  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  8202  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  8203  0B36  00C7               	movwf	___flmul@temp+1
  8204  0B37  0875               	movf	?__Umul8_16,w
  8205  0B38  00C6               	movwf	___flmul@temp
  8206  0B39                     l3879:
  8207  0B39  0846               	movf	___flmul@temp,w
  8208  0B3A  00B6               	movwf	??___flmul
  8209  0B3B  0847               	movf	___flmul@temp+1,w
  8210  0B3C  00B7               	movwf	??___flmul+1
  8211  0B3D  01B8               	clrf	??___flmul+2
  8212  0B3E  01B9               	clrf	??___flmul+3
  8213  0B3F  0836               	movf	??___flmul,w
  8214  0B40  07C2               	addwf	___flmul@prod,f
  8215  0B41  0837               	movf	??___flmul+1,w
  8216  0B42  1103               	clrz
  8217  0B43  1803               	skipnc
  8218  0B44  3E01               	addlw	1
  8219  0B45  1903               	skipnz
  8220  0B46  2B48               	goto	u6401
  8221  0B47  07C3               	addwf	___flmul@prod+1,f
  8222  0B48                     u6401:
  8223  0B48  0838               	movf	??___flmul+2,w
  8224  0B49  1103               	clrz
  8225  0B4A  1803               	skipnc
  8226  0B4B  3E01               	addlw	1
  8227  0B4C  1903               	skipnz
  8228  0B4D  2B4F               	goto	u6402
  8229  0B4E  07C4               	addwf	___flmul@prod+2,f
  8230  0B4F                     u6402:
  8231  0B4F  0839               	movf	??___flmul+3,w
  8232  0B50  1103               	clrz
  8233  0B51  1803               	skipnc
  8234  0B52  3E01               	addlw	1
  8235  0B53  1903               	skipnz
  8236  0B54  2B56               	goto	u6403
  8237  0B55  07C5               	addwf	___flmul@prod+3,f
  8238  0B56                     u6403:
  8239  0B56  0830               	movf	___flmul@b+2,w
  8240  0B57  00B6               	movwf	??___flmul
  8241  0B58  0836               	movf	??___flmul,w
  8242  0B59  00F5               	movwf	__Umul8_16@multiplicand
  8243  0B5A  0834               	movf	___flmul@a+2,w
  8244  0B5B  160A  158A  21C7  120A  158A  	fcall	__Umul8_16
  8245  0B60  0876               	movf	?__Umul8_16+1,w
  8246  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8247  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8248  0B63  00C7               	movwf	___flmul@temp+1
  8249  0B64  0875               	movf	?__Umul8_16,w
  8250  0B65  00C6               	movwf	___flmul@temp
  8251  0B66                     l3881:
  8252  0B66  0846               	movf	___flmul@temp,w
  8253  0B67  00B6               	movwf	??___flmul
  8254  0B68  0847               	movf	___flmul@temp+1,w
  8255  0B69  00B7               	movwf	??___flmul+1
  8256  0B6A  01B8               	clrf	??___flmul+2
  8257  0B6B  01B9               	clrf	??___flmul+3
  8258  0B6C  3008               	movlw	8
  8259  0B6D                     u6415:
  8260  0B6D  1003               	clrc
  8261  0B6E  0DB6               	rlf	??___flmul,f
  8262  0B6F  0DB7               	rlf	??___flmul+1,f
  8263  0B70  0DB8               	rlf	??___flmul+2,f
  8264  0B71  0DB9               	rlf	??___flmul+3,f
  8265  0B72                     u6410:
  8266  0B72  3EFF               	addlw	-1
  8267  0B73  1D03               	skipz
  8268  0B74  2B6D               	goto	u6415
  8269  0B75  0836               	movf	??___flmul,w
  8270  0B76  07C2               	addwf	___flmul@prod,f
  8271  0B77  0837               	movf	??___flmul+1,w
  8272  0B78  1103               	clrz
  8273  0B79  1803               	skipnc
  8274  0B7A  3E01               	addlw	1
  8275  0B7B  1903               	skipnz
  8276  0B7C  2B7E               	goto	u6421
  8277  0B7D  07C3               	addwf	___flmul@prod+1,f
  8278  0B7E                     u6421:
  8279  0B7E  0838               	movf	??___flmul+2,w
  8280  0B7F  1103               	clrz
  8281  0B80  1803               	skipnc
  8282  0B81  3E01               	addlw	1
  8283  0B82  1903               	skipnz
  8284  0B83  2B85               	goto	u6422
  8285  0B84  07C4               	addwf	___flmul@prod+2,f
  8286  0B85                     u6422:
  8287  0B85  0839               	movf	??___flmul+3,w
  8288  0B86  1103               	clrz
  8289  0B87  1803               	skipnc
  8290  0B88  3E01               	addlw	1
  8291  0B89  1903               	skipnz
  8292  0B8A  2B8C               	goto	u6423
  8293  0B8B  07C5               	addwf	___flmul@prod+3,f
  8294  0B8C                     u6423:
  8295  0B8C                     l3883:
  8296  0B8C  083D               	movf	___flmul@grs,w
  8297  0B8D  00B6               	movwf	??___flmul
  8298  0B8E  083E               	movf	___flmul@grs+1,w
  8299  0B8F  00B7               	movwf	??___flmul+1
  8300  0B90  083F               	movf	___flmul@grs+2,w
  8301  0B91  00B8               	movwf	??___flmul+2
  8302  0B92  0840               	movf	___flmul@grs+3,w
  8303  0B93  00B9               	movwf	??___flmul+3
  8304  0B94  3018               	movlw	24
  8305  0B95                     u6435:
  8306  0B95  1003               	clrc
  8307  0B96  0CB9               	rrf	??___flmul+3,f
  8308  0B97  0CB8               	rrf	??___flmul+2,f
  8309  0B98  0CB7               	rrf	??___flmul+1,f
  8310  0B99  0CB6               	rrf	??___flmul,f
  8311  0B9A                     u6430:
  8312  0B9A  3EFF               	addlw	-1
  8313  0B9B  1D03               	skipz
  8314  0B9C  2B95               	goto	u6435
  8315  0B9D  0836               	movf	??___flmul,w
  8316  0B9E  07C2               	addwf	___flmul@prod,f
  8317  0B9F  0837               	movf	??___flmul+1,w
  8318  0BA0  1103               	clrz
  8319  0BA1  1803               	skipnc
  8320  0BA2  3E01               	addlw	1
  8321  0BA3  1903               	skipnz
  8322  0BA4  2BA6               	goto	u6441
  8323  0BA5  07C3               	addwf	___flmul@prod+1,f
  8324  0BA6                     u6441:
  8325  0BA6  0838               	movf	??___flmul+2,w
  8326  0BA7  1103               	clrz
  8327  0BA8  1803               	skipnc
  8328  0BA9  3E01               	addlw	1
  8329  0BAA  1903               	skipnz
  8330  0BAB  2BAD               	goto	u6442
  8331  0BAC  07C4               	addwf	___flmul@prod+2,f
  8332  0BAD                     u6442:
  8333  0BAD  0839               	movf	??___flmul+3,w
  8334  0BAE  1103               	clrz
  8335  0BAF  1803               	skipnc
  8336  0BB0  3E01               	addlw	1
  8337  0BB1  1903               	skipnz
  8338  0BB2  2BB4               	goto	u6443
  8339  0BB3  07C5               	addwf	___flmul@prod+3,f
  8340  0BB4                     u6443:
  8341  0BB4                     l3885:
  8342  0BB4  3008               	movlw	8
  8343  0BB5  00B6               	movwf	??___flmul
  8344  0BB6                     u6455:
  8345  0BB6  1003               	clrc
  8346  0BB7  0DBD               	rlf	___flmul@grs,f
  8347  0BB8  0DBE               	rlf	___flmul@grs+1,f
  8348  0BB9  0DBF               	rlf	___flmul@grs+2,f
  8349  0BBA  0DC0               	rlf	___flmul@grs+3,f
  8350  0BBB  0BB6               	decfsz	??___flmul,f
  8351  0BBC  2BB6               	goto	u6455
  8352  0BBD                     l3887:
  8353  0BBD  0841               	movf	___flmul@bexp,w
  8354  0BBE  073C               	addwf	___flmul@aexp,w
  8355  0BBF  00B6               	movwf	??___flmul
  8356  0BC0  01B7               	clrf	??___flmul+1
  8357  0BC1  0DB7               	rlf	??___flmul+1,f
  8358  0BC2  0836               	movf	??___flmul,w
  8359  0BC3  3E82               	addlw	130
  8360  0BC4  00C6               	movwf	___flmul@temp
  8361  0BC5  0837               	movf	??___flmul+1,w
  8362  0BC6  1803               	skipnc
  8363  0BC7  3E01               	addlw	1
  8364  0BC8  3EFF               	addlw	255
  8365  0BC9  00C7               	movwf	___flmul@temp+1
  8366  0BCA  2BE8               	goto	l3899
  8367  0BCB                     l3889:
  8368  0BCB  3001               	movlw	1
  8369  0BCC  00B6               	movwf	??___flmul
  8370  0BCD                     u6465:
  8371  0BCD  1003               	clrc
  8372  0BCE  0DC2               	rlf	___flmul@prod,f
  8373  0BCF  0DC3               	rlf	___flmul@prod+1,f
  8374  0BD0  0DC4               	rlf	___flmul@prod+2,f
  8375  0BD1  0DC5               	rlf	___flmul@prod+3,f
  8376  0BD2  0BB6               	decfsz	??___flmul,f
  8377  0BD3  2BCD               	goto	u6465
  8378  0BD4                     l3891:
  8379  0BD4  1FC0               	btfss	___flmul@grs+3,7
  8380  0BD5  2BD7               	goto	u6471
  8381  0BD6  2BD8               	goto	u6470
  8382  0BD7                     u6471:
  8383  0BD7  2BD9               	goto	l3895
  8384  0BD8                     u6470:
  8385  0BD8                     l3893:
  8386  0BD8  1442               	bsf	___flmul@prod,0
  8387  0BD9                     l3895:
  8388  0BD9  3001               	movlw	1
  8389  0BDA  00B6               	movwf	??___flmul
  8390  0BDB                     u6485:
  8391  0BDB  1003               	clrc
  8392  0BDC  0DBD               	rlf	___flmul@grs,f
  8393  0BDD  0DBE               	rlf	___flmul@grs+1,f
  8394  0BDE  0DBF               	rlf	___flmul@grs+2,f
  8395  0BDF  0DC0               	rlf	___flmul@grs+3,f
  8396  0BE0  0BB6               	decfsz	??___flmul,f
  8397  0BE1  2BDB               	goto	u6485
  8398  0BE2                     l3897:
  8399  0BE2  30FF               	movlw	255
  8400  0BE3  07C6               	addwf	___flmul@temp,f
  8401  0BE4  1803               	skipnc
  8402  0BE5  0AC7               	incf	___flmul@temp+1,f
  8403  0BE6  30FF               	movlw	255
  8404  0BE7  07C7               	addwf	___flmul@temp+1,f
  8405  0BE8                     l3899:
  8406  0BE8  1FC4               	btfss	___flmul@prod+2,7
  8407  0BE9  2BEB               	goto	u6491
  8408  0BEA  2BEC               	goto	u6490
  8409  0BEB                     u6491:
  8410  0BEB  2BCB               	goto	l3889
  8411  0BEC                     u6490:
  8412  0BEC                     l3901:
  8413  0BEC  01BC               	clrf	___flmul@aexp
  8414  0BED                     l3903:
  8415  0BED  1FC0               	btfss	___flmul@grs+3,7
  8416  0BEE  2BF0               	goto	u6501
  8417  0BEF  2BF1               	goto	u6500
  8418  0BF0                     u6501:
  8419  0BF0  2C0D               	goto	l3911
  8420  0BF1                     u6500:
  8421  0BF1                     l3905:
  8422  0BF1  30FF               	movlw	255
  8423  0BF2  053D               	andwf	___flmul@grs,w
  8424  0BF3  00B6               	movwf	??___flmul
  8425  0BF4  30FF               	movlw	255
  8426  0BF5  053E               	andwf	___flmul@grs+1,w
  8427  0BF6  00B7               	movwf	??___flmul+1
  8428  0BF7  30FF               	movlw	255
  8429  0BF8  053F               	andwf	___flmul@grs+2,w
  8430  0BF9  00B8               	movwf	??___flmul+2
  8431  0BFA  307F               	movlw	127
  8432  0BFB  0540               	andwf	___flmul@grs+3,w
  8433  0BFC  00B9               	movwf	??___flmul+3
  8434  0BFD  0839               	movf	??___flmul+3,w
  8435  0BFE  0438               	iorwf	??___flmul+2,w
  8436  0BFF  0437               	iorwf	??___flmul+1,w
  8437  0C00  0436               	iorwf	??___flmul,w
  8438  0C01  1903               	skipnz
  8439  0C02  2C04               	goto	u6511
  8440  0C03  2C05               	goto	u6510
  8441  0C04                     u6511:
  8442  0C04  2C08               	goto	l845
  8443  0C05                     u6510:
  8444  0C05                     l3907:
  8445  0C05  01BC               	clrf	___flmul@aexp
  8446  0C06  0ABC               	incf	___flmul@aexp,f
  8447  0C07  2C0D               	goto	l3911
  8448  0C08                     l845:
  8449  0C08  1C42               	btfss	___flmul@prod,0
  8450  0C09  2C0B               	goto	u6521
  8451  0C0A  2C0C               	goto	u6520
  8452  0C0B                     u6521:
  8453  0C0B  2C0D               	goto	l3911
  8454  0C0C                     u6520:
  8455  0C0C  2C05               	goto	l3907
  8456  0C0D                     l3911:
  8457  0C0D  083C               	movf	___flmul@aexp,w
  8458  0C0E  1903               	btfsc	3,2
  8459  0C0F  2C11               	goto	u6531
  8460  0C10  2C12               	goto	u6530
  8461  0C11                     u6531:
  8462  0C11  2C43               	goto	l3921
  8463  0C12                     u6530:
  8464  0C12                     l3913:
  8465  0C12  3001               	movlw	1
  8466  0C13  07C2               	addwf	___flmul@prod,f
  8467  0C14  3000               	movlw	0
  8468  0C15  1803               	skipnc
  8469  0C16  3001               	movlw	1
  8470  0C17  07C3               	addwf	___flmul@prod+1,f
  8471  0C18  3000               	movlw	0
  8472  0C19  1803               	skipnc
  8473  0C1A  3001               	movlw	1
  8474  0C1B  07C4               	addwf	___flmul@prod+2,f
  8475  0C1C  3000               	movlw	0
  8476  0C1D  1803               	skipnc
  8477  0C1E  3001               	movlw	1
  8478  0C1F  07C5               	addwf	___flmul@prod+3,f
  8479  0C20                     l3915:
  8480  0C20  1C45               	btfss	___flmul@prod+3,0
  8481  0C21  2C23               	goto	u6541
  8482  0C22  2C24               	goto	u6540
  8483  0C23                     u6541:
  8484  0C23  2C43               	goto	l3921
  8485  0C24                     u6540:
  8486  0C24                     l3917:
  8487  0C24  0842               	movf	___flmul@prod,w
  8488  0C25  00B6               	movwf	??___flmul
  8489  0C26  0843               	movf	___flmul@prod+1,w
  8490  0C27  00B7               	movwf	??___flmul+1
  8491  0C28  0844               	movf	___flmul@prod+2,w
  8492  0C29  00B8               	movwf	??___flmul+2
  8493  0C2A  0845               	movf	___flmul@prod+3,w
  8494  0C2B  00B9               	movwf	??___flmul+3
  8495  0C2C  3001               	movlw	1
  8496  0C2D  00BA               	movwf	??___flmul+4
  8497  0C2E                     u6555:
  8498  0C2E  0D39               	rlf	??___flmul+3,w
  8499  0C2F  0CB9               	rrf	??___flmul+3,f
  8500  0C30  0CB8               	rrf	??___flmul+2,f
  8501  0C31  0CB7               	rrf	??___flmul+1,f
  8502  0C32  0CB6               	rrf	??___flmul,f
  8503  0C33                     u6550:
  8504  0C33  0BBA               	decfsz	??___flmul+4,f
  8505  0C34  2C2E               	goto	u6555
  8506  0C35  0839               	movf	??___flmul+3,w
  8507  0C36  00C5               	movwf	___flmul@prod+3
  8508  0C37  0838               	movf	??___flmul+2,w
  8509  0C38  00C4               	movwf	___flmul@prod+2
  8510  0C39  0837               	movf	??___flmul+1,w
  8511  0C3A  00C3               	movwf	___flmul@prod+1
  8512  0C3B  0836               	movf	??___flmul,w
  8513  0C3C  00C2               	movwf	___flmul@prod
  8514  0C3D                     l3919:
  8515  0C3D  3001               	movlw	1
  8516  0C3E  07C6               	addwf	___flmul@temp,f
  8517  0C3F  1803               	skipnc
  8518  0C40  0AC7               	incf	___flmul@temp+1,f
  8519  0C41  3000               	movlw	0
  8520  0C42  07C7               	addwf	___flmul@temp+1,f
  8521  0C43                     l3921:
  8522  0C43  0847               	movf	___flmul@temp+1,w
  8523  0C44  3A80               	xorlw	128
  8524  0C45  00FF               	movwf	btemp+1
  8525  0C46  3080               	movlw	128
  8526  0C47  027F               	subwf	btemp+1,w
  8527  0C48  1D03               	skipz
  8528  0C49  2C4C               	goto	u6565
  8529  0C4A  30FF               	movlw	255
  8530  0C4B  0246               	subwf	___flmul@temp,w
  8531  0C4C                     u6565:
  8532  0C4C  1C03               	skipc
  8533  0C4D  2C4F               	goto	u6561
  8534  0C4E  2C50               	goto	u6560
  8535  0C4F                     u6561:
  8536  0C4F  2C5B               	goto	l3925
  8537  0C50                     u6560:
  8538  0C50                     l3923:
  8539  0C50  307F               	movlw	127
  8540  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  8541  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  8542  0C53  00C5               	movwf	___flmul@prod+3
  8543  0C54  3080               	movlw	128
  8544  0C55  00C4               	movwf	___flmul@prod+2
  8545  0C56  3000               	movlw	0
  8546  0C57  00C3               	movwf	___flmul@prod+1
  8547  0C58  3000               	movlw	0
  8548  0C59  00C2               	movwf	___flmul@prod
  8549  0C5A  2C90               	goto	l851
  8550  0C5B                     l3925:
  8551  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  8552  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  8553  0C5D  0847               	movf	___flmul@temp+1,w
  8554  0C5E  3A80               	xorlw	128
  8555  0C5F  00FF               	movwf	btemp+1
  8556  0C60  3080               	movlw	128
  8557  0C61  027F               	subwf	btemp+1,w
  8558  0C62  1D03               	skipz
  8559  0C63  2C66               	goto	u6575
  8560  0C64  3001               	movlw	1
  8561  0C65  0246               	subwf	___flmul@temp,w
  8562  0C66                     u6575:
  8563  0C66  1803               	skipnc
  8564  0C67  2C69               	goto	u6571
  8565  0C68  2C6A               	goto	u6570
  8566  0C69                     u6571:
  8567  0C69  2C76               	goto	l3931
  8568  0C6A                     u6570:
  8569  0C6A                     l3927:
  8570  0C6A  3000               	movlw	0
  8571  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8572  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  8573  0C6D  00C5               	movwf	___flmul@prod+3
  8574  0C6E  3000               	movlw	0
  8575  0C6F  00C4               	movwf	___flmul@prod+2
  8576  0C70  3000               	movlw	0
  8577  0C71  00C3               	movwf	___flmul@prod+1
  8578  0C72  3000               	movlw	0
  8579  0C73  00C2               	movwf	___flmul@prod
  8580  0C74                     l3929:
  8581  0C74  01BB               	clrf	___flmul@sign
  8582  0C75  2C90               	goto	l851
  8583  0C76                     l3931:
  8584  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8585  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  8586  0C78  0846               	movf	___flmul@temp,w
  8587  0C79  00B6               	movwf	??___flmul
  8588  0C7A  0836               	movf	??___flmul,w
  8589  0C7B  00C1               	movwf	___flmul@bexp
  8590  0C7C  30FF               	movlw	255
  8591  0C7D  05C2               	andwf	___flmul@prod,f
  8592  0C7E  30FF               	movlw	255
  8593  0C7F  05C3               	andwf	___flmul@prod+1,f
  8594  0C80  307F               	movlw	127
  8595  0C81  05C4               	andwf	___flmul@prod+2,f
  8596  0C82  3000               	movlw	0
  8597  0C83  05C5               	andwf	___flmul@prod+3,f
  8598  0C84                     l3933:
  8599  0C84  1C41               	btfss	___flmul@bexp,0
  8600  0C85  2C87               	goto	u6581
  8601  0C86  2C88               	goto	u6580
  8602  0C87                     u6581:
  8603  0C87  2C89               	goto	l3937
  8604  0C88                     u6580:
  8605  0C88                     l3935:
  8606  0C88  17C4               	bsf	___flmul@prod+2,7
  8607  0C89                     l3937:
  8608  0C89  0841               	movf	___flmul@bexp,w
  8609  0C8A  00B6               	movwf	??___flmul
  8610  0C8B  1003               	clrc
  8611  0C8C  0C36               	rrf	??___flmul,w
  8612  0C8D  00B7               	movwf	??___flmul+1
  8613  0C8E  0837               	movf	??___flmul+1,w
  8614  0C8F  00C5               	movwf	___flmul@prod+3
  8615  0C90                     l851:
  8616  0C90  083B               	movf	___flmul@sign,w
  8617  0C91  00B6               	movwf	??___flmul
  8618  0C92  0836               	movf	??___flmul,w
  8619  0C93  04C5               	iorwf	___flmul@prod+3,f
  8620  0C94                     l3939:
  8621  0C94  0845               	movf	___flmul@prod+3,w
  8622  0C95  00B1               	movwf	?___flmul+3
  8623  0C96  0844               	movf	___flmul@prod+2,w
  8624  0C97  00B0               	movwf	?___flmul+2
  8625  0C98  0843               	movf	___flmul@prod+1,w
  8626  0C99  00AF               	movwf	?___flmul+1
  8627  0C9A  0842               	movf	___flmul@prod,w
  8628  0C9B  00AE               	movwf	?___flmul
  8629  0C9C                     l839:
  8630  0C9C  0008               	return
  8631  0C9D                     __end_of___flmul:
  8632                           
  8633                           	psect	text23
  8634  19C7                     __ptext23:	
  8635 ;; *************** function __Umul8_16 *****************
  8636 ;; Defined at:
  8637 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;  multiplier      1    wreg     unsigned char 
  8640 ;;  multiplicand    1    5[COMMON] unsigned char 
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;  multiplier      1    6[BANK0 ] unsigned char 
  8643 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  8644 ;;  product         2    2[BANK0 ] unsigned int 
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  2    5[COMMON] unsigned int 
  8647 ;; Registers used:
  8648 ;;		wreg, status,2, status,0
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8654 ;;      Params:         2       0       0       0       0
  8655 ;;      Locals:         0       5       0       0       0
  8656 ;;      Temps:          0       2       0       0       0
  8657 ;;      Totals:         2       7       0       0       0
  8658 ;;Total ram usage:        9 bytes
  8659 ;; Hardware stack levels used:    1
  8660 ;; Hardware stack levels required when called:    2
  8661 ;; This function calls:
  8662 ;;		Nothing
  8663 ;; This function is called by:
  8664 ;;		___flmul
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           
  8669                           ;psect for function __Umul8_16
  8670  19C7                     __Umul8_16:
  8671                           
  8672                           ;incstack = 0
  8673                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8674                           ;__Umul8_16@multiplier stored from wreg
  8675  19C7  1283               	bcf	3,5	;RP0=0, select bank0
  8676  19C8  1303               	bcf	3,6	;RP1=0, select bank0
  8677  19C9  00A6               	movwf	__Umul8_16@multiplier
  8678  19CA                     l3685:
  8679  19CA  01A2               	clrf	__Umul8_16@product
  8680  19CB  01A3               	clrf	__Umul8_16@product+1
  8681  19CC                     l3687:
  8682  19CC  0875               	movf	__Umul8_16@multiplicand,w
  8683  19CD  00A0               	movwf	??__Umul8_16
  8684  19CE  01A1               	clrf	??__Umul8_16+1
  8685  19CF  0820               	movf	??__Umul8_16,w
  8686  19D0  00A4               	movwf	__Umul8_16@word_mpld
  8687  19D1  0821               	movf	??__Umul8_16+1,w
  8688  19D2  00A5               	movwf	__Umul8_16@word_mpld+1
  8689  19D3                     l3689:
  8690  19D3  1C26               	btfss	__Umul8_16@multiplier,0
  8691  19D4  29D6               	goto	u5891
  8692  19D5  29D7               	goto	u5890
  8693  19D6                     u5891:
  8694  19D6  29DD               	goto	l858
  8695  19D7                     u5890:
  8696  19D7                     l3691:
  8697  19D7  0824               	movf	__Umul8_16@word_mpld,w
  8698  19D8  07A2               	addwf	__Umul8_16@product,f
  8699  19D9  1803               	skipnc
  8700  19DA  0AA3               	incf	__Umul8_16@product+1,f
  8701  19DB  0825               	movf	__Umul8_16@word_mpld+1,w
  8702  19DC  07A3               	addwf	__Umul8_16@product+1,f
  8703  19DD                     l858:
  8704  19DD  3001               	movlw	1
  8705  19DE                     u5905:
  8706  19DE  1003               	clrc
  8707  19DF  0DA4               	rlf	__Umul8_16@word_mpld,f
  8708  19E0  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  8709  19E1  3EFF               	addlw	-1
  8710  19E2  1D03               	skipz
  8711  19E3  29DE               	goto	u5905
  8712  19E4  1003               	clrc
  8713  19E5  0CA6               	rrf	__Umul8_16@multiplier,f
  8714  19E6                     l3693:
  8715  19E6  0826               	movf	__Umul8_16@multiplier,w
  8716  19E7  1D03               	btfss	3,2
  8717  19E8  29EA               	goto	u5911
  8718  19E9  29EB               	goto	u5910
  8719  19EA                     u5911:
  8720  19EA  29D3               	goto	l3689
  8721  19EB                     u5910:
  8722  19EB                     l3695:
  8723  19EB  0823               	movf	__Umul8_16@product+1,w
  8724  19EC  00F6               	movwf	?__Umul8_16+1
  8725  19ED  0822               	movf	__Umul8_16@product,w
  8726  19EE  00F5               	movwf	?__Umul8_16
  8727  19EF                     l860:
  8728  19EF  0008               	return
  8729  19F0                     __end_of__Umul8_16:
  8730                           
  8731                           	psect	text24
  8732  18E1                     __ptext24:	
  8733 ;; *************** function _cfg_usart *****************
  8734 ;; Defined at:
  8735 ;;		line 226 in file "main.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;		None
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;		None
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  1    wreg      void 
  8742 ;; Registers used:
  8743 ;;		wreg, status,2
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8749 ;;      Params:         0       0       0       0       0
  8750 ;;      Locals:         0       0       0       0       0
  8751 ;;      Temps:          0       0       0       0       0
  8752 ;;      Totals:         0       0       0       0       0
  8753 ;;Total ram usage:        0 bytes
  8754 ;; Hardware stack levels used:    1
  8755 ;; Hardware stack levels required when called:    2
  8756 ;; This function calls:
  8757 ;;		Nothing
  8758 ;; This function is called by:
  8759 ;;		_main
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           
  8764                           ;psect for function _cfg_usart
  8765  18E1                     _cfg_usart:
  8766  18E1                     l3265:	
  8767                           ;incstack = 0
  8768                           ; Regs used in _cfg_usart: [wreg+status,2]
  8769                           
  8770                           
  8771                           ;main.c: 228:     TXSTAbits.SYNC = 0;
  8772  18E1  1683               	bsf	3,5	;RP0=1, select bank1
  8773  18E2  1303               	bcf	3,6	;RP1=0, select bank1
  8774  18E3  1218               	bcf	24,4	;volatile
  8775                           
  8776                           ;main.c: 229:     TXSTAbits.BRGH = 1;
  8777  18E4  1518               	bsf	24,2	;volatile
  8778                           
  8779                           ;main.c: 231:     BAUDCTLbits.BRG16 = 1;
  8780  18E5  1683               	bsf	3,5	;RP0=1, select bank3
  8781  18E6  1703               	bsf	3,6	;RP1=1, select bank3
  8782  18E7  1587               	bsf	7,3	;volatile
  8783  18E8                     l3267:
  8784                           
  8785                           ;main.c: 233:     SPBRG = 25;
  8786  18E8  3019               	movlw	25
  8787  18E9  1683               	bsf	3,5	;RP0=1, select bank1
  8788  18EA  1303               	bcf	3,6	;RP1=0, select bank1
  8789  18EB  0099               	movwf	25	;volatile
  8790  18EC                     l3269:
  8791                           
  8792                           ;main.c: 234:     SPBRGH = 0;
  8793  18EC  019A               	clrf	26	;volatile
  8794  18ED                     l3271:
  8795                           
  8796                           ;main.c: 236:     RCSTAbits.SPEN = 1;
  8797  18ED  1283               	bcf	3,5	;RP0=0, select bank0
  8798  18EE  1303               	bcf	3,6	;RP1=0, select bank0
  8799  18EF  1798               	bsf	24,7	;volatile
  8800  18F0                     l3273:
  8801                           
  8802                           ;main.c: 237:     RCSTAbits.RX9 = 0;
  8803  18F0  1318               	bcf	24,6	;volatile
  8804  18F1                     l3275:
  8805                           
  8806                           ;main.c: 238:     RCSTAbits.CREN = 1;
  8807  18F1  1618               	bsf	24,4	;volatile
  8808  18F2                     l3277:
  8809                           
  8810                           ;main.c: 240:     TXSTAbits.TXEN = 1;
  8811  18F2  1683               	bsf	3,5	;RP0=1, select bank1
  8812  18F3  1303               	bcf	3,6	;RP1=0, select bank1
  8813  18F4  1698               	bsf	24,5	;volatile
  8814  18F5                     l138:
  8815  18F5  0008               	return
  8816  18F6                     __end_of_cfg_usart:
  8817                           
  8818                           	psect	text25
  8819  18BD                     __ptext25:	
  8820 ;; *************** function _cfg_io *****************
  8821 ;; Defined at:
  8822 ;;		line 196 in file "main.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;		None
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;		None
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  1    wreg      void 
  8829 ;; Registers used:
  8830 ;;		wreg, status,2
  8831 ;; Tracked objects:
  8832 ;;		On entry : 0/0
  8833 ;;		On exit  : 0/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8836 ;;      Params:         0       0       0       0       0
  8837 ;;      Locals:         0       0       0       0       0
  8838 ;;      Temps:          0       0       0       0       0
  8839 ;;      Totals:         0       0       0       0       0
  8840 ;;Total ram usage:        0 bytes
  8841 ;; Hardware stack levels used:    1
  8842 ;; Hardware stack levels required when called:    2
  8843 ;; This function calls:
  8844 ;;		Nothing
  8845 ;; This function is called by:
  8846 ;;		_main
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           
  8851                           ;psect for function _cfg_io
  8852  18BD                     _cfg_io:
  8853  18BD                     l3239:	
  8854                           ;incstack = 0
  8855                           ; Regs used in _cfg_io: [wreg+status,2]
  8856                           
  8857                           
  8858                           ;main.c: 197:     ANSELH = 0x00;
  8859  18BD  1683               	bsf	3,5	;RP0=1, select bank3
  8860  18BE  1703               	bsf	3,6	;RP1=1, select bank3
  8861  18BF  0189               	clrf	9	;volatile
  8862  18C0                     l3241:
  8863                           
  8864                           ;main.c: 198:     ANSEL = 0x20;
  8865  18C0  3020               	movlw	32
  8866  18C1  0088               	movwf	8	;volatile
  8867  18C2                     l3243:
  8868                           
  8869                           ;main.c: 200:     TRISB = 0x03;
  8870  18C2  3003               	movlw	3
  8871  18C3  1683               	bsf	3,5	;RP0=1, select bank1
  8872  18C4  1303               	bcf	3,6	;RP1=0, select bank1
  8873  18C5  0086               	movwf	6	;volatile
  8874                           
  8875                           ;main.c: 201:     TRISC = 0x00;
  8876  18C6  0187               	clrf	7	;volatile
  8877                           
  8878                           ;main.c: 202:     TRISA = 0X00;
  8879  18C7  0185               	clrf	5	;volatile
  8880                           
  8881                           ;main.c: 203:     TRISD = 0X00;
  8882  18C8  0188               	clrf	8	;volatile
  8883  18C9                     l3245:
  8884                           
  8885                           ;main.c: 204:     TRISE = 0x03;
  8886  18C9  3003               	movlw	3
  8887  18CA  0089               	movwf	9	;volatile
  8888  18CB                     l3247:
  8889                           
  8890                           ;main.c: 205:     PORTA = 0X00;
  8891  18CB  1283               	bcf	3,5	;RP0=0, select bank0
  8892  18CC  1303               	bcf	3,6	;RP1=0, select bank0
  8893  18CD  0185               	clrf	5	;volatile
  8894  18CE                     l129:
  8895  18CE  0008               	return
  8896  18CF                     __end_of_cfg_io:
  8897                           
  8898                           	psect	text26
  8899  18A6                     __ptext26:	
  8900 ;; *************** function _cfg_inte *****************
  8901 ;; Defined at:
  8902 ;;		line 244 in file "main.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;		None
  8905 ;; Auto vars:     Size  Location     Type
  8906 ;;		None
  8907 ;; Return value:  Size  Location     Type
  8908 ;;                  1    wreg      void 
  8909 ;; Registers used:
  8910 ;;		None
  8911 ;; Tracked objects:
  8912 ;;		On entry : 0/0
  8913 ;;		On exit  : 0/0
  8914 ;;		Unchanged: 0/0
  8915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8916 ;;      Params:         0       0       0       0       0
  8917 ;;      Locals:         0       0       0       0       0
  8918 ;;      Temps:          0       0       0       0       0
  8919 ;;      Totals:         0       0       0       0       0
  8920 ;;Total ram usage:        0 bytes
  8921 ;; Hardware stack levels used:    1
  8922 ;; Hardware stack levels required when called:    2
  8923 ;; This function calls:
  8924 ;;		Nothing
  8925 ;; This function is called by:
  8926 ;;		_main
  8927 ;; This function uses a non-reentrant model
  8928 ;;
  8929                           
  8930                           
  8931                           ;psect for function _cfg_inte
  8932  18A6                     _cfg_inte:
  8933  18A6                     l3255:	
  8934                           ;incstack = 0
  8935                           ; Regs used in _cfg_inte: []
  8936                           
  8937                           
  8938                           ;main.c: 246:     INTCONbits.GIE = 1;
  8939  18A6  178B               	bsf	11,7	;volatile
  8940                           
  8941                           ;main.c: 247:     INTCONbits.PEIE = 1;
  8942  18A7  170B               	bsf	11,6	;volatile
  8943                           
  8944                           ;main.c: 248:     PIE1bits.RCIE = 1;
  8945  18A8  1683               	bsf	3,5	;RP0=1, select bank1
  8946  18A9  1303               	bcf	3,6	;RP1=0, select bank1
  8947  18AA  168C               	bsf	12,5	;volatile
  8948                           
  8949                           ;main.c: 249:     PIE1bits.ADIE = 1;
  8950  18AB  170C               	bsf	12,6	;volatile
  8951                           
  8952                           ;main.c: 250:     PIR1bits.ADIF = 0;
  8953  18AC  1283               	bcf	3,5	;RP0=0, select bank0
  8954  18AD  1303               	bcf	3,6	;RP1=0, select bank0
  8955  18AE  130C               	bcf	12,6	;volatile
  8956  18AF                     l141:
  8957  18AF  0008               	return
  8958  18B0                     __end_of_cfg_inte:
  8959                           
  8960                           	psect	text27
  8961  1896                     __ptext27:	
  8962 ;; *************** function _cfg_clk *****************
  8963 ;; Defined at:
  8964 ;;		line 222 in file "main.c"
  8965 ;; Parameters:    Size  Location     Type
  8966 ;;		None
  8967 ;; Auto vars:     Size  Location     Type
  8968 ;;		None
  8969 ;; Return value:  Size  Location     Type
  8970 ;;                  1    wreg      void 
  8971 ;; Registers used:
  8972 ;;		wreg, status,2, status,0
  8973 ;; Tracked objects:
  8974 ;;		On entry : 0/0
  8975 ;;		On exit  : 0/0
  8976 ;;		Unchanged: 0/0
  8977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8978 ;;      Params:         0       0       0       0       0
  8979 ;;      Locals:         0       0       0       0       0
  8980 ;;      Temps:          0       0       0       0       0
  8981 ;;      Totals:         0       0       0       0       0
  8982 ;;Total ram usage:        0 bytes
  8983 ;; Hardware stack levels used:    1
  8984 ;; Hardware stack levels required when called:    2
  8985 ;; This function calls:
  8986 ;;		Nothing
  8987 ;; This function is called by:
  8988 ;;		_main
  8989 ;; This function uses a non-reentrant model
  8990 ;;
  8991                           
  8992                           
  8993                           ;psect for function _cfg_clk
  8994  1896                     _cfg_clk:
  8995  1896                     l3251:	
  8996                           ;incstack = 0
  8997                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
  8998                           
  8999                           
  9000                           ;main.c: 223:     OSCCONbits.IRCF = 0b100;
  9001  1896  1683               	bsf	3,5	;RP0=1, select bank1
  9002  1897  1303               	bcf	3,6	;RP1=0, select bank1
  9003  1898  080F               	movf	15,w	;volatile
  9004  1899  398F               	andlw	-113
  9005  189A  3840               	iorlw	64
  9006  189B  008F               	movwf	15	;volatile
  9007  189C                     l3253:
  9008                           
  9009                           ;main.c: 224:     OSCCONbits.SCS = 1;
  9010  189C  140F               	bsf	15,0	;volatile
  9011  189D                     l135:
  9012  189D  0008               	return
  9013  189E                     __end_of_cfg_clk:
  9014                           
  9015                           	psect	text28
  9016  18F6                     __ptext28:	
  9017 ;; *************** function _cfg_adc *****************
  9018 ;; Defined at:
  9019 ;;		line 209 in file "main.c"
  9020 ;; Parameters:    Size  Location     Type
  9021 ;;		None
  9022 ;; Auto vars:     Size  Location     Type
  9023 ;;		None
  9024 ;; Return value:  Size  Location     Type
  9025 ;;                  1    wreg      void 
  9026 ;; Registers used:
  9027 ;;		wreg, status,2, status,0
  9028 ;; Tracked objects:
  9029 ;;		On entry : 0/0
  9030 ;;		On exit  : 0/0
  9031 ;;		Unchanged: 0/0
  9032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9033 ;;      Params:         0       0       0       0       0
  9034 ;;      Locals:         0       0       0       0       0
  9035 ;;      Temps:          1       0       0       0       0
  9036 ;;      Totals:         1       0       0       0       0
  9037 ;;Total ram usage:        1 bytes
  9038 ;; Hardware stack levels used:    1
  9039 ;; Hardware stack levels required when called:    2
  9040 ;; This function calls:
  9041 ;;		Nothing
  9042 ;; This function is called by:
  9043 ;;		_main
  9044 ;; This function uses a non-reentrant model
  9045 ;;
  9046                           
  9047                           
  9048                           ;psect for function _cfg_adc
  9049  18F6                     _cfg_adc:
  9050  18F6                     l3257:	
  9051                           ;incstack = 0
  9052                           ; Regs used in _cfg_adc: [wreg+status,2+status,0]
  9053                           
  9054                           
  9055                           ;main.c: 210:     ADCON1bits.ADFM = 0;
  9056  18F6  1683               	bsf	3,5	;RP0=1, select bank1
  9057  18F7  1303               	bcf	3,6	;RP1=0, select bank1
  9058  18F8  139F               	bcf	31,7	;volatile
  9059                           
  9060                           ;main.c: 211:     ADCON1bits.VCFG0 = 0;
  9061  18F9  121F               	bcf	31,4	;volatile
  9062                           
  9063                           ;main.c: 212:     ADCON1bits.VCFG1 = 0;
  9064  18FA  129F               	bcf	31,5	;volatile
  9065                           
  9066                           ;main.c: 214:     ADCON0bits.ADCS0 = 0;
  9067  18FB  1283               	bcf	3,5	;RP0=0, select bank0
  9068  18FC  1303               	bcf	3,6	;RP1=0, select bank0
  9069  18FD  131F               	bcf	31,6	;volatile
  9070                           
  9071                           ;main.c: 215:     ADCON0bits.ADCS1 = 0;
  9072  18FE  139F               	bcf	31,7	;volatile
  9073  18FF                     l3259:
  9074                           
  9075                           ;main.c: 216:     ADCON0bits.CHS = 5;
  9076  18FF  081F               	movf	31,w	;volatile
  9077  1900  39C3               	andlw	-61
  9078  1901  3814               	iorlw	20
  9079  1902  009F               	movwf	31	;volatile
  9080  1903                     l3261:
  9081                           
  9082                           ;main.c: 217:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9083  1903  3042               	movlw	66
  9084  1904  00F5               	movwf	??_cfg_adc
  9085  1905                     u7867:
  9086  1905  0BF5               	decfsz	??_cfg_adc,f
  9087  1906  2905               	goto	u7867
  9088  1907  0000               	nop
  9089  1908                     l3263:
  9090                           
  9091                           ;main.c: 218:     ADCON0bits.ADON = 1;
  9092  1908  1283               	bcf	3,5	;RP0=0, select bank0
  9093  1909  1303               	bcf	3,6	;RP1=0, select bank0
  9094  190A  141F               	bsf	31,0	;volatile
  9095  190B                     l132:
  9096  190B  0008               	return
  9097  190C                     __end_of_cfg_adc:
  9098                           
  9099                           	psect	text29
  9100  1AAA                     __ptext29:	
  9101 ;; *************** function _Lcd_Write_String *****************
  9102 ;; Defined at:
  9103 ;;		line 110 in file "LCD.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;  a               2    0[BANK0 ] PTR unsigned char 
  9106 ;;		 -> f1(10), STR_1(18), 
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;  i               2    5[BANK0 ] int 
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  1    wreg      void 
  9111 ;; Registers used:
  9112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9118 ;;      Params:         0       2       0       0       0
  9119 ;;      Locals:         0       2       0       0       0
  9120 ;;      Temps:          0       3       0       0       0
  9121 ;;      Totals:         0       7       0       0       0
  9122 ;;Total ram usage:        7 bytes
  9123 ;; Hardware stack levels used:    1
  9124 ;; Hardware stack levels required when called:    4
  9125 ;; This function calls:
  9126 ;;		_Lcd_Write_Char
  9127 ;; This function is called by:
  9128 ;;		_main
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           
  9133                           ;psect for function _Lcd_Write_String
  9134  1AAA                     _Lcd_Write_String:
  9135  1AAA                     l4197:	
  9136                           ;incstack = 0
  9137                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9138                           
  9139                           
  9140                           ;LCD.c: 111:     int i;;LCD.c: 112:     for (i = 0; a[i] != '\0'; i++)
  9141  1AAA  1283               	bcf	3,5	;RP0=0, select bank0
  9142  1AAB  1303               	bcf	3,6	;RP1=0, select bank0
  9143  1AAC  01A5               	clrf	Lcd_Write_String@i
  9144  1AAD  01A6               	clrf	Lcd_Write_String@i+1
  9145  1AAE  2AD3               	goto	l4203
  9146  1AAF                     l4199:
  9147                           
  9148                           ;LCD.c: 113:         Lcd_Write_Char(a[i]);
  9149  1AAF  0825               	movf	Lcd_Write_String@i,w
  9150  1AB0  0720               	addwf	Lcd_Write_String@a,w
  9151  1AB1  00A3               	movwf	??_Lcd_Write_String+1
  9152  1AB2  0821               	movf	Lcd_Write_String@a+1,w
  9153  1AB3  00A2               	movwf	??_Lcd_Write_String
  9154  1AB4  1803               	skipnc
  9155  1AB5  0AA2               	incf	??_Lcd_Write_String,f
  9156  1AB6  1FA5               	btfss	Lcd_Write_String@i,7
  9157  1AB7  2AB9               	goto	u7280
  9158  1AB8  03A2               	decf	??_Lcd_Write_String,f
  9159  1AB9                     u7280:
  9160  1AB9  1283               	bcf	3,5	;RP0=0, select bank0
  9161  1ABA  1303               	bcf	3,6	;RP1=0, select bank0
  9162  1ABB  0822               	movf	??_Lcd_Write_String,w
  9163  1ABC  00A4               	movwf	??_Lcd_Write_String+2
  9164  1ABD  0824               	movf	??_Lcd_Write_String+2,w
  9165  1ABE  00FF               	movwf	btemp+1
  9166  1ABF  0823               	movf	??_Lcd_Write_String+1,w
  9167  1AC0  0084               	movwf	4
  9168  1AC1  160A  118A  2000  160A  158A  	fcall	stringtab
  9169  1AC6  160A  158A  2126  160A  158A  	fcall	_Lcd_Write_Char
  9170  1ACB                     l4201:
  9171  1ACB  3001               	movlw	1
  9172  1ACC  1283               	bcf	3,5	;RP0=0, select bank0
  9173  1ACD  1303               	bcf	3,6	;RP1=0, select bank0
  9174  1ACE  07A5               	addwf	Lcd_Write_String@i,f
  9175  1ACF  1803               	skipnc
  9176  1AD0  0AA6               	incf	Lcd_Write_String@i+1,f
  9177  1AD1  3000               	movlw	0
  9178  1AD2  07A6               	addwf	Lcd_Write_String@i+1,f
  9179  1AD3                     l4203:
  9180  1AD3  0825               	movf	Lcd_Write_String@i,w
  9181  1AD4  0720               	addwf	Lcd_Write_String@a,w
  9182  1AD5  00A3               	movwf	??_Lcd_Write_String+1
  9183  1AD6  0821               	movf	Lcd_Write_String@a+1,w
  9184  1AD7  00A2               	movwf	??_Lcd_Write_String
  9185  1AD8  1803               	skipnc
  9186  1AD9  0AA2               	incf	??_Lcd_Write_String,f
  9187  1ADA  1FA5               	btfss	Lcd_Write_String@i,7
  9188  1ADB  2ADD               	goto	u7290
  9189  1ADC  03A2               	decf	??_Lcd_Write_String,f
  9190  1ADD                     u7290:
  9191  1ADD  1283               	bcf	3,5	;RP0=0, select bank0
  9192  1ADE  1303               	bcf	3,6	;RP1=0, select bank0
  9193  1ADF  0822               	movf	??_Lcd_Write_String,w
  9194  1AE0  00A4               	movwf	??_Lcd_Write_String+2
  9195  1AE1  0824               	movf	??_Lcd_Write_String+2,w
  9196  1AE2  00FF               	movwf	btemp+1
  9197  1AE3  0823               	movf	??_Lcd_Write_String+1,w
  9198  1AE4  0084               	movwf	4
  9199  1AE5  160A  118A  2000  160A  158A  	fcall	stringtab
  9200  1AEA  3A00               	xorlw	0
  9201  1AEB  1D03               	skipz
  9202  1AEC  2AEE               	goto	u7301
  9203  1AED  2AEF               	goto	u7300
  9204  1AEE                     u7301:
  9205  1AEE  2AAF               	goto	l4199
  9206  1AEF                     u7300:
  9207  1AEF                     l209:
  9208  1AEF  0008               	return
  9209  1AF0                     __end_of_Lcd_Write_String:
  9210                           
  9211                           	psect	text30
  9212  1926                     __ptext30:	
  9213 ;; *************** function _Lcd_Write_Char *****************
  9214 ;; Defined at:
  9215 ;;		line 94 in file "LCD.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;  a               1    wreg     unsigned char 
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;  a               1    7[COMMON] unsigned char 
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  1    wreg      void 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2, status,0, pclath, cstack
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9229 ;;      Params:         0       0       0       0       0
  9230 ;;      Locals:         1       0       0       0       0
  9231 ;;      Temps:          1       0       0       0       0
  9232 ;;      Totals:         2       0       0       0       0
  9233 ;;Total ram usage:        2 bytes
  9234 ;; Hardware stack levels used:    1
  9235 ;; Hardware stack levels required when called:    3
  9236 ;; This function calls:
  9237 ;;		_Lcd_Port
  9238 ;; This function is called by:
  9239 ;;		_Lcd_Write_String
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           
  9243                           
  9244                           ;psect for function _Lcd_Write_Char
  9245  1926                     _Lcd_Write_Char:
  9246                           
  9247                           ;incstack = 0
  9248                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9249                           ;Lcd_Write_Char@a stored from wreg
  9250  1926  00F7               	movwf	Lcd_Write_Char@a
  9251  1927                     l3953:
  9252                           
  9253                           ;LCD.c: 98:     PORTCbits.RC0 = 1;
  9254  1927  1283               	bcf	3,5	;RP0=0, select bank0
  9255  1928  1303               	bcf	3,6	;RP1=0, select bank0
  9256  1929  1407               	bsf	7,0	;volatile
  9257  192A                     l3955:
  9258                           
  9259                           ;LCD.c: 99:     Lcd_Port(a);
  9260  192A  0877               	movf	Lcd_Write_Char@a,w
  9261  192B  160A  158A  222C  160A  158A  	fcall	_Lcd_Port
  9262  1930                     l3957:
  9263                           
  9264                           ;LCD.c: 100:     RC1 = 1;
  9265  1930  1283               	bcf	3,5	;RP0=0, select bank0
  9266  1931  1303               	bcf	3,6	;RP1=0, select bank0
  9267  1932  1487               	bsf	7,1	;volatile
  9268  1933                     l3959:
  9269                           
  9270                           ;LCD.c: 101:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9271  1933  301A               	movlw	26
  9272  1934  00F6               	movwf	??_Lcd_Write_Char
  9273  1935                     u7877:
  9274  1935  0BF6               	decfsz	??_Lcd_Write_Char,f
  9275  1936  2935               	goto	u7877
  9276  1937  0000               	nop
  9277  1938                     l3961:
  9278                           
  9279                           ;LCD.c: 102:     RC1 = 0;
  9280  1938  1283               	bcf	3,5	;RP0=0, select bank0
  9281  1939  1303               	bcf	3,6	;RP1=0, select bank0
  9282  193A  1087               	bcf	7,1	;volatile
  9283  193B                     l3963:
  9284                           
  9285                           ;LCD.c: 103:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9286  193B  301A               	movlw	26
  9287  193C  00F6               	movwf	??_Lcd_Write_Char
  9288  193D                     u7887:
  9289  193D  0BF6               	decfsz	??_Lcd_Write_Char,f
  9290  193E  293D               	goto	u7887
  9291  193F  0000               	nop
  9292  1940                     l203:
  9293  1940  0008               	return
  9294  1941                     __end_of_Lcd_Write_Char:
  9295                           
  9296                           	psect	text31
  9297  197A                     __ptext31:	
  9298 ;; *************** function _Lcd_Set_Cursor *****************
  9299 ;; Defined at:
  9300 ;;		line 69 in file "LCD.c"
  9301 ;; Parameters:    Size  Location     Type
  9302 ;;  a               1    wreg     unsigned char 
  9303 ;;  b               1    1[BANK0 ] unsigned char 
  9304 ;; Auto vars:     Size  Location     Type
  9305 ;;  a               1    3[BANK0 ] unsigned char 
  9306 ;;  temp            1    4[BANK0 ] unsigned char 
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  1    wreg      void 
  9309 ;; Registers used:
  9310 ;;		wreg, status,2, status,0, pclath, cstack
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9316 ;;      Params:         0       1       0       0       0
  9317 ;;      Locals:         0       2       0       0       0
  9318 ;;      Temps:          0       1       0       0       0
  9319 ;;      Totals:         0       4       0       0       0
  9320 ;;Total ram usage:        4 bytes
  9321 ;; Hardware stack levels used:    1
  9322 ;; Hardware stack levels required when called:    4
  9323 ;; This function calls:
  9324 ;;		_Lcd_Cmd
  9325 ;; This function is called by:
  9326 ;;		_main
  9327 ;; This function uses a non-reentrant model
  9328 ;;
  9329                           
  9330                           
  9331                           ;psect for function _Lcd_Set_Cursor
  9332  197A                     _Lcd_Set_Cursor:
  9333                           
  9334                           ;incstack = 0
  9335                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9336                           ;Lcd_Set_Cursor@a stored from wreg
  9337  197A  1283               	bcf	3,5	;RP0=0, select bank0
  9338  197B  1303               	bcf	3,6	;RP1=0, select bank0
  9339  197C  00A3               	movwf	Lcd_Set_Cursor@a
  9340  197D                     l4185:
  9341                           
  9342                           ;LCD.c: 70:     char temp;;LCD.c: 71:     if (a == 1) {
  9343  197D  0323               	decf	Lcd_Set_Cursor@a,w
  9344  197E  1D03               	btfss	3,2
  9345  197F  2981               	goto	u7261
  9346  1980  2982               	goto	u7260
  9347  1981                     u7261:
  9348  1981  298E               	goto	l4191
  9349  1982                     u7260:
  9350  1982                     l4187:
  9351                           
  9352                           ;LCD.c: 72:         temp = 0x80 + b - 1;
  9353  1982  0821               	movf	Lcd_Set_Cursor@b,w
  9354  1983  3E7F               	addlw	127
  9355  1984  00A2               	movwf	??_Lcd_Set_Cursor
  9356  1985  0822               	movf	??_Lcd_Set_Cursor,w
  9357  1986  00A4               	movwf	Lcd_Set_Cursor@temp
  9358  1987                     l4189:
  9359                           
  9360                           ;LCD.c: 73:         Lcd_Cmd(temp);
  9361  1987  0824               	movf	Lcd_Set_Cursor@temp,w
  9362  1988  160A  158A  210C  160A  158A  	fcall	_Lcd_Cmd
  9363                           
  9364                           ;LCD.c: 74:     } else if (a == 2) {
  9365  198D  299F               	goto	l197
  9366  198E                     l4191:
  9367  198E  3002               	movlw	2
  9368  198F  0623               	xorwf	Lcd_Set_Cursor@a,w
  9369  1990  1D03               	btfss	3,2
  9370  1991  2993               	goto	u7271
  9371  1992  2994               	goto	u7270
  9372  1993                     u7271:
  9373  1993  299F               	goto	l197
  9374  1994                     u7270:
  9375  1994                     l4193:
  9376                           
  9377                           ;LCD.c: 75:         temp = 0xC0 + b - 1;
  9378  1994  0821               	movf	Lcd_Set_Cursor@b,w
  9379  1995  3EBF               	addlw	191
  9380  1996  00A2               	movwf	??_Lcd_Set_Cursor
  9381  1997  0822               	movf	??_Lcd_Set_Cursor,w
  9382  1998  00A4               	movwf	Lcd_Set_Cursor@temp
  9383  1999                     l4195:
  9384                           
  9385                           ;LCD.c: 76:         Lcd_Cmd(temp);
  9386  1999  0824               	movf	Lcd_Set_Cursor@temp,w
  9387  199A  160A  158A  210C  160A  158A  	fcall	_Lcd_Cmd
  9388  199F                     l197:
  9389  199F  0008               	return
  9390  19A0                     __end_of_Lcd_Set_Cursor:
  9391                           
  9392                           	psect	text32
  9393  1B36                     __ptext32:	
  9394 ;; *************** function _Lcd_Init *****************
  9395 ;; Defined at:
  9396 ;;		line 80 in file "LCD.c"
  9397 ;; Parameters:    Size  Location     Type
  9398 ;;		None
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;		None
  9401 ;; Return value:  Size  Location     Type
  9402 ;;                  1    wreg      void 
  9403 ;; Registers used:
  9404 ;;		wreg, status,2, status,0, pclath, cstack
  9405 ;; Tracked objects:
  9406 ;;		On entry : 0/0
  9407 ;;		On exit  : 0/0
  9408 ;;		Unchanged: 0/0
  9409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9410 ;;      Params:         0       0       0       0       0
  9411 ;;      Locals:         0       0       0       0       0
  9412 ;;      Temps:          0       3       0       0       0
  9413 ;;      Totals:         0       3       0       0       0
  9414 ;;Total ram usage:        3 bytes
  9415 ;; Hardware stack levels used:    1
  9416 ;; Hardware stack levels required when called:    4
  9417 ;; This function calls:
  9418 ;;		_Lcd_Cmd
  9419 ;;		_Lcd_Port
  9420 ;; This function is called by:
  9421 ;;		_main
  9422 ;; This function uses a non-reentrant model
  9423 ;;
  9424                           
  9425                           
  9426                           ;psect for function _Lcd_Init
  9427  1B36                     _Lcd_Init:
  9428  1B36                     l4173:	
  9429                           ;incstack = 0
  9430                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9431                           
  9432                           
  9433                           ;LCD.c: 81:     Lcd_Port(0x00);
  9434  1B36  3000               	movlw	0
  9435  1B37  160A  158A  222C  160A  158A  	fcall	_Lcd_Port
  9436  1B3C                     l4175:
  9437                           
  9438                           ;LCD.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9439  1B3C  3034               	movlw	52
  9440  1B3D  1283               	bcf	3,5	;RP0=0, select bank0
  9441  1B3E  1303               	bcf	3,6	;RP1=0, select bank0
  9442  1B3F  00A2               	movwf	??_Lcd_Init+1
  9443  1B40  30F1               	movlw	241
  9444  1B41  00A1               	movwf	??_Lcd_Init
  9445  1B42                     u7897:
  9446  1B42  0BA1               	decfsz	??_Lcd_Init,f
  9447  1B43  2B42               	goto	u7897
  9448  1B44  0BA2               	decfsz	??_Lcd_Init+1,f
  9449  1B45  2B42               	goto	u7897
  9450  1B46                     l4177:
  9451                           
  9452                           ;LCD.c: 83:     Lcd_Cmd(0x3F);
  9453  1B46  303F               	movlw	63
  9454  1B47  160A  158A  210C  160A  158A  	fcall	_Lcd_Cmd
  9455                           
  9456                           ;LCD.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9457  1B4C  300D               	movlw	13
  9458  1B4D  1283               	bcf	3,5	;RP0=0, select bank0
  9459  1B4E  1303               	bcf	3,6	;RP1=0, select bank0
  9460  1B4F  00A2               	movwf	??_Lcd_Init+1
  9461  1B50  30FB               	movlw	251
  9462  1B51  00A1               	movwf	??_Lcd_Init
  9463  1B52                     u7907:
  9464  1B52  0BA1               	decfsz	??_Lcd_Init,f
  9465  1B53  2B52               	goto	u7907
  9466  1B54  0BA2               	decfsz	??_Lcd_Init+1,f
  9467  1B55  2B52               	goto	u7907
  9468  1B56                     l4179:
  9469                           
  9470                           ;LCD.c: 85:     Lcd_Cmd(0x3F);
  9471  1B56  303F               	movlw	63
  9472  1B57  160A  158A  210C  160A  158A  	fcall	_Lcd_Cmd
  9473  1B5C                     l4181:
  9474                           
  9475                           ;LCD.c: 86:     _delay((unsigned long)((110)*(8000000/4000.0)));
  9476  1B5C  3002               	movlw	2
  9477  1B5D  1283               	bcf	3,5	;RP0=0, select bank0
  9478  1B5E  1303               	bcf	3,6	;RP1=0, select bank0
  9479  1B5F  00A3               	movwf	??_Lcd_Init+2
  9480  1B60  301E               	movlw	30
  9481  1B61  00A2               	movwf	??_Lcd_Init+1
  9482  1B62  30B3               	movlw	179
  9483  1B63  00A1               	movwf	??_Lcd_Init
  9484  1B64                     u7917:
  9485  1B64  0BA1               	decfsz	??_Lcd_Init,f
  9486  1B65  2B64               	goto	u7917
  9487  1B66  0BA2               	decfsz	??_Lcd_Init+1,f
  9488  1B67  2B64               	goto	u7917
  9489  1B68  0BA3               	decfsz	??_Lcd_Init+2,f
  9490  1B69  2B64               	goto	u7917
  9491                           
  9492                           ;LCD.c: 87:     Lcd_Cmd(0x3F);
  9493  1B6A  303F               	movlw	63
  9494  1B6B  160A  158A  210C  160A  158A  	fcall	_Lcd_Cmd
  9495                           
  9496                           ;LCD.c: 89:     Lcd_Cmd(0x38);
  9497  1B70  3038               	movlw	56
  9498  1B71  160A  158A  210C  160A  158A  	fcall	_Lcd_Cmd
  9499                           
  9500                           ;LCD.c: 90:     Lcd_Cmd(0x0C);
  9501  1B76  300C               	movlw	12
  9502  1B77  160A  158A  210C  160A  158A  	fcall	_Lcd_Cmd
  9503                           
  9504                           ;LCD.c: 91:     Lcd_Cmd(0x06);
  9505  1B7C  3006               	movlw	6
  9506  1B7D  160A  158A  210C  160A  158A  	fcall	_Lcd_Cmd
  9507  1B82                     l200:
  9508  1B82  0008               	return
  9509  1B83                     __end_of_Lcd_Init:
  9510                           
  9511                           	psect	text33
  9512  18B0                     __ptext33:	
  9513 ;; *************** function _Lcd_Clear *****************
  9514 ;; Defined at:
  9515 ;;		line 64 in file "LCD.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;		None
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;		None
  9520 ;; Return value:  Size  Location     Type
  9521 ;;                  1    wreg      void 
  9522 ;; Registers used:
  9523 ;;		wreg, status,2, status,0, pclath, cstack
  9524 ;; Tracked objects:
  9525 ;;		On entry : 0/0
  9526 ;;		On exit  : 0/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9529 ;;      Params:         0       0       0       0       0
  9530 ;;      Locals:         0       0       0       0       0
  9531 ;;      Temps:          0       0       0       0       0
  9532 ;;      Totals:         0       0       0       0       0
  9533 ;;Total ram usage:        0 bytes
  9534 ;; Hardware stack levels used:    1
  9535 ;; Hardware stack levels required when called:    4
  9536 ;; This function calls:
  9537 ;;		_Lcd_Cmd
  9538 ;; This function is called by:
  9539 ;;		_main
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543                           
  9544                           ;psect for function _Lcd_Clear
  9545  18B0                     _Lcd_Clear:
  9546  18B0                     l4183:	
  9547                           ;incstack = 0
  9548                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9549                           
  9550                           
  9551                           ;LCD.c: 65:     Lcd_Cmd(0);
  9552  18B0  3000               	movlw	0
  9553  18B1  160A  158A  210C  160A  158A  	fcall	_Lcd_Cmd
  9554                           
  9555                           ;LCD.c: 66:     Lcd_Cmd(1);
  9556  18B6  3001               	movlw	1
  9557  18B7  160A  158A  210C  160A  158A  	fcall	_Lcd_Cmd
  9558  18BC                     l191:
  9559  18BC  0008               	return
  9560  18BD                     __end_of_Lcd_Clear:
  9561                           
  9562                           	psect	text34
  9563  190C                     __ptext34:	
  9564 ;; *************** function _Lcd_Cmd *****************
  9565 ;; Defined at:
  9566 ;;		line 56 in file "LCD.c"
  9567 ;; Parameters:    Size  Location     Type
  9568 ;;  a               1    wreg     unsigned char 
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;  a               1    0[BANK0 ] unsigned char 
  9571 ;; Return value:  Size  Location     Type
  9572 ;;                  1    wreg      void 
  9573 ;; Registers used:
  9574 ;;		wreg, status,2, status,0, pclath, cstack
  9575 ;; Tracked objects:
  9576 ;;		On entry : 0/0
  9577 ;;		On exit  : 0/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9580 ;;      Params:         0       0       0       0       0
  9581 ;;      Locals:         0       1       0       0       0
  9582 ;;      Temps:          2       0       0       0       0
  9583 ;;      Totals:         2       1       0       0       0
  9584 ;;Total ram usage:        3 bytes
  9585 ;; Hardware stack levels used:    1
  9586 ;; Hardware stack levels required when called:    3
  9587 ;; This function calls:
  9588 ;;		_Lcd_Port
  9589 ;; This function is called by:
  9590 ;;		_Lcd_Clear
  9591 ;;		_Lcd_Set_Cursor
  9592 ;;		_Lcd_Init
  9593 ;;		_Lcd_Shift_Right
  9594 ;;		_Lcd_Shift_Left
  9595 ;; This function uses a non-reentrant model
  9596 ;;
  9597                           
  9598                           
  9599                           ;psect for function _Lcd_Cmd
  9600  190C                     _Lcd_Cmd:
  9601                           
  9602                           ;incstack = 0
  9603                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9604                           ;Lcd_Cmd@a stored from wreg
  9605  190C  1283               	bcf	3,5	;RP0=0, select bank0
  9606  190D  1303               	bcf	3,6	;RP1=0, select bank0
  9607  190E  00A0               	movwf	Lcd_Cmd@a
  9608  190F                     l3943:
  9609                           
  9610                           ;LCD.c: 57:     PORTCbits.RC0 = 0;
  9611  190F  1007               	bcf	7,0	;volatile
  9612  1910                     l3945:
  9613                           
  9614                           ;LCD.c: 58:     Lcd_Port(a);
  9615  1910  0820               	movf	Lcd_Cmd@a,w
  9616  1911  160A  158A  222C  160A  158A  	fcall	_Lcd_Port
  9617  1916                     l3947:
  9618                           
  9619                           ;LCD.c: 59:     RC1 = 1;
  9620  1916  1283               	bcf	3,5	;RP0=0, select bank0
  9621  1917  1303               	bcf	3,6	;RP1=0, select bank0
  9622  1918  1487               	bsf	7,1	;volatile
  9623  1919                     l3949:
  9624                           
  9625                           ;LCD.c: 60:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9626  1919  300B               	movlw	11
  9627  191A  00F7               	movwf	??_Lcd_Cmd+1
  9628  191B  3062               	movlw	98
  9629  191C  00F6               	movwf	??_Lcd_Cmd
  9630  191D                     u7927:
  9631  191D  0BF6               	decfsz	??_Lcd_Cmd,f
  9632  191E  291D               	goto	u7927
  9633  191F  0BF7               	decfsz	??_Lcd_Cmd+1,f
  9634  1920  291D               	goto	u7927
  9635  1921  0000               	nop
  9636  1922                     l3951:
  9637                           
  9638                           ;LCD.c: 61:     RC1 = 0;
  9639  1922  1283               	bcf	3,5	;RP0=0, select bank0
  9640  1923  1303               	bcf	3,6	;RP1=0, select bank0
  9641  1924  1087               	bcf	7,1	;volatile
  9642  1925                     l188:
  9643  1925  0008               	return
  9644  1926                     __end_of_Lcd_Cmd:
  9645                           
  9646                           	psect	text35
  9647  1A2C                     __ptext35:	
  9648 ;; *************** function _Lcd_Port *****************
  9649 ;; Defined at:
  9650 ;;		line 13 in file "LCD.c"
  9651 ;; Parameters:    Size  Location     Type
  9652 ;;  a               1    wreg     unsigned char 
  9653 ;; Auto vars:     Size  Location     Type
  9654 ;;  a               1    5[COMMON] unsigned char 
  9655 ;; Return value:  Size  Location     Type
  9656 ;;                  1    wreg      void 
  9657 ;; Registers used:
  9658 ;;		wreg
  9659 ;; Tracked objects:
  9660 ;;		On entry : 0/0
  9661 ;;		On exit  : 0/0
  9662 ;;		Unchanged: 0/0
  9663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9664 ;;      Params:         0       0       0       0       0
  9665 ;;      Locals:         1       0       0       0       0
  9666 ;;      Temps:          0       0       0       0       0
  9667 ;;      Totals:         1       0       0       0       0
  9668 ;;Total ram usage:        1 bytes
  9669 ;; Hardware stack levels used:    1
  9670 ;; Hardware stack levels required when called:    2
  9671 ;; This function calls:
  9672 ;;		Nothing
  9673 ;; This function is called by:
  9674 ;;		_Lcd_Cmd
  9675 ;;		_Lcd_Init
  9676 ;;		_Lcd_Write_Char
  9677 ;; This function uses a non-reentrant model
  9678 ;;
  9679                           
  9680                           
  9681                           ;psect for function _Lcd_Port
  9682  1A2C                     _Lcd_Port:
  9683                           
  9684                           ;incstack = 0
  9685                           ; Regs used in _Lcd_Port: [wreg]
  9686                           ;Lcd_Port@a stored from wreg
  9687  1A2C  00F5               	movwf	Lcd_Port@a
  9688  1A2D                     l3699:
  9689                           
  9690                           ;LCD.c: 15:     if (a & 1)
  9691  1A2D  1C75               	btfss	Lcd_Port@a,0
  9692  1A2E  2A30               	goto	u5921
  9693  1A2F  2A31               	goto	u5920
  9694  1A30                     u5921:
  9695  1A30  2A35               	goto	l169
  9696  1A31                     u5920:
  9697  1A31                     l3701:
  9698                           
  9699                           ;LCD.c: 16:         RD0 = 1;
  9700  1A31  1283               	bcf	3,5	;RP0=0, select bank0
  9701  1A32  1303               	bcf	3,6	;RP1=0, select bank0
  9702  1A33  1408               	bsf	8,0	;volatile
  9703  1A34  2A38               	goto	l170
  9704  1A35                     l169:	
  9705                           ;LCD.c: 17:     else
  9706                           
  9707                           
  9708                           ;LCD.c: 18:         RD0 = 0;
  9709  1A35  1283               	bcf	3,5	;RP0=0, select bank0
  9710  1A36  1303               	bcf	3,6	;RP1=0, select bank0
  9711  1A37  1008               	bcf	8,0	;volatile
  9712  1A38                     l170:
  9713                           
  9714                           ;LCD.c: 20:     if (a & 2)
  9715  1A38  1CF5               	btfss	Lcd_Port@a,1
  9716  1A39  2A3B               	goto	u5931
  9717  1A3A  2A3C               	goto	u5930
  9718  1A3B                     u5931:
  9719  1A3B  2A3E               	goto	l171
  9720  1A3C                     u5930:
  9721  1A3C                     l3703:
  9722                           
  9723                           ;LCD.c: 21:         RD1 = 1;
  9724  1A3C  1488               	bsf	8,1	;volatile
  9725  1A3D  2A3F               	goto	l172
  9726  1A3E                     l171:	
  9727                           ;LCD.c: 22:     else
  9728                           
  9729                           
  9730                           ;LCD.c: 23:         RD1 = 0;
  9731  1A3E  1088               	bcf	8,1	;volatile
  9732  1A3F                     l172:
  9733                           
  9734                           ;LCD.c: 25:     if (a & 4)
  9735  1A3F  1D75               	btfss	Lcd_Port@a,2
  9736  1A40  2A42               	goto	u5941
  9737  1A41  2A43               	goto	u5940
  9738  1A42                     u5941:
  9739  1A42  2A45               	goto	l173
  9740  1A43                     u5940:
  9741  1A43                     l3705:
  9742                           
  9743                           ;LCD.c: 26:         RD2 = 1;
  9744  1A43  1508               	bsf	8,2	;volatile
  9745  1A44  2A46               	goto	l174
  9746  1A45                     l173:	
  9747                           ;LCD.c: 27:     else
  9748                           
  9749                           
  9750                           ;LCD.c: 28:         RD2 = 0;
  9751  1A45  1108               	bcf	8,2	;volatile
  9752  1A46                     l174:
  9753                           
  9754                           ;LCD.c: 30:     if (a & 8)
  9755  1A46  1DF5               	btfss	Lcd_Port@a,3
  9756  1A47  2A49               	goto	u5951
  9757  1A48  2A4A               	goto	u5950
  9758  1A49                     u5951:
  9759  1A49  2A4C               	goto	l175
  9760  1A4A                     u5950:
  9761  1A4A                     l3707:
  9762                           
  9763                           ;LCD.c: 31:         RD3 = 1;
  9764  1A4A  1588               	bsf	8,3	;volatile
  9765  1A4B  2A4D               	goto	l176
  9766  1A4C                     l175:	
  9767                           ;LCD.c: 32:     else
  9768                           
  9769                           
  9770                           ;LCD.c: 33:         RD3 = 0;
  9771  1A4C  1188               	bcf	8,3	;volatile
  9772  1A4D                     l176:
  9773                           
  9774                           ;LCD.c: 35:     if (a & 16)
  9775  1A4D  1E75               	btfss	Lcd_Port@a,4
  9776  1A4E  2A50               	goto	u5961
  9777  1A4F  2A51               	goto	u5960
  9778  1A50                     u5961:
  9779  1A50  2A53               	goto	l177
  9780  1A51                     u5960:
  9781  1A51                     l3709:
  9782                           
  9783                           ;LCD.c: 36:         RD4 = 1;
  9784  1A51  1608               	bsf	8,4	;volatile
  9785  1A52  2A54               	goto	l178
  9786  1A53                     l177:	
  9787                           ;LCD.c: 37:     else
  9788                           
  9789                           
  9790                           ;LCD.c: 38:         RD4 = 0;
  9791  1A53  1208               	bcf	8,4	;volatile
  9792  1A54                     l178:
  9793                           
  9794                           ;LCD.c: 40:     if (a & 32)
  9795  1A54  1EF5               	btfss	Lcd_Port@a,5
  9796  1A55  2A57               	goto	u5971
  9797  1A56  2A58               	goto	u5970
  9798  1A57                     u5971:
  9799  1A57  2A5A               	goto	l179
  9800  1A58                     u5970:
  9801  1A58                     l3711:
  9802                           
  9803                           ;LCD.c: 41:         RD5 = 1;
  9804  1A58  1688               	bsf	8,5	;volatile
  9805  1A59  2A5B               	goto	l180
  9806  1A5A                     l179:	
  9807                           ;LCD.c: 42:     else
  9808                           
  9809                           
  9810                           ;LCD.c: 43:         RD5 = 0;
  9811  1A5A  1288               	bcf	8,5	;volatile
  9812  1A5B                     l180:
  9813                           
  9814                           ;LCD.c: 45:     if (a & 64)
  9815  1A5B  1F75               	btfss	Lcd_Port@a,6
  9816  1A5C  2A5E               	goto	u5981
  9817  1A5D  2A5F               	goto	u5980
  9818  1A5E                     u5981:
  9819  1A5E  2A61               	goto	l181
  9820  1A5F                     u5980:
  9821  1A5F                     l3713:
  9822                           
  9823                           ;LCD.c: 46:         RD6 = 1;
  9824  1A5F  1708               	bsf	8,6	;volatile
  9825  1A60  2A62               	goto	l182
  9826  1A61                     l181:	
  9827                           ;LCD.c: 47:     else
  9828                           
  9829                           
  9830                           ;LCD.c: 48:         RD6 = 0;
  9831  1A61  1308               	bcf	8,6	;volatile
  9832  1A62                     l182:
  9833                           
  9834                           ;LCD.c: 50:     if (a & 128)
  9835  1A62  1FF5               	btfss	Lcd_Port@a,7
  9836  1A63  2A65               	goto	u5991
  9837  1A64  2A66               	goto	u5990
  9838  1A65                     u5991:
  9839  1A65  2A68               	goto	l183
  9840  1A66                     u5990:
  9841  1A66                     l3715:
  9842                           
  9843                           ;LCD.c: 51:         RD7 = 1;
  9844  1A66  1788               	bsf	8,7	;volatile
  9845  1A67  2A69               	goto	l185
  9846  1A68                     l183:	
  9847                           ;LCD.c: 52:     else
  9848                           
  9849                           
  9850                           ;LCD.c: 53:         RD7 = 0;
  9851  1A68  1388               	bcf	8,7	;volatile
  9852  1A69                     l185:
  9853  1A69  0008               	return
  9854  1A6A                     __end_of_Lcd_Port:
  9855                           
  9856                           	psect	text36
  9857  195D                     __ptext36:	
  9858 ;; *************** function _isr *****************
  9859 ;; Defined at:
  9860 ;;		line 91 in file "main.c"
  9861 ;; Parameters:    Size  Location     Type
  9862 ;;		None
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;		None
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  1    wreg      void 
  9867 ;; Registers used:
  9868 ;;		wreg, status,2, status,0, pclath, cstack
  9869 ;; Tracked objects:
  9870 ;;		On entry : 0/0
  9871 ;;		On exit  : 0/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9874 ;;      Params:         0       0       0       0       0
  9875 ;;      Locals:         0       0       0       0       0
  9876 ;;      Temps:          2       0       0       0       0
  9877 ;;      Totals:         2       0       0       0       0
  9878 ;;Total ram usage:        2 bytes
  9879 ;; Hardware stack levels used:    1
  9880 ;; Hardware stack levels required when called:    1
  9881 ;; This function calls:
  9882 ;;		_int_adc
  9883 ;;		_int_uart
  9884 ;; This function is called by:
  9885 ;;		Interrupt level 1
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           
  9890                           ;psect for function _isr
  9891  195D                     _isr:
  9892  195D                     i1l3579:
  9893                           
  9894                           ;main.c: 93:     if (PIR1bits.ADIF){
  9895  195D  1283               	bcf	3,5	;RP0=0, select bank0
  9896  195E  1303               	bcf	3,6	;RP1=0, select bank0
  9897  195F  1F0C               	btfss	12,6	;volatile
  9898  1960  2962               	goto	u583_21
  9899  1961  2963               	goto	u583_20
  9900  1962                     u583_21:
  9901  1962  2968               	goto	i1l3583
  9902  1963                     u583_20:
  9903  1963                     i1l3581:
  9904                           
  9905                           ;main.c: 94:         int_adc();
  9906  1963  160A  158A  2141  160A  158A  	fcall	_int_adc
  9907  1968                     i1l3583:
  9908                           
  9909                           ;main.c: 96:     if (PIR1bits.RCIF){
  9910  1968  1283               	bcf	3,5	;RP0=0, select bank0
  9911  1969  1303               	bcf	3,6	;RP1=0, select bank0
  9912  196A  1E8C               	btfss	12,5	;volatile
  9913  196B  296D               	goto	u584_21
  9914  196C  296E               	goto	u584_20
  9915  196D                     u584_21:
  9916  196D  2973               	goto	i1l99
  9917  196E                     u584_20:
  9918  196E                     i1l3585:
  9919                           
  9920                           ;main.c: 97:         int_uart();
  9921  196E  160A  158A  24D4  160A  158A  	fcall	_int_uart
  9922  1973                     i1l99:
  9923  1973  0874               	movf	??_isr+1,w
  9924  1974  008A               	movwf	10
  9925  1975  0E73               	swapf	??_isr,w
  9926  1976  0083               	movwf	3
  9927  1977  0EFE               	swapf	btemp,f
  9928  1978  0E7E               	swapf	btemp,w
  9929  1979  0009               	retfie
  9930  197A                     __end_of_isr:
  9931                           
  9932                           	psect	intentry
  9933  0004                     __pintentry:	
  9934                           ;incstack = 0
  9935                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  9936                           
  9937  0004                     interrupt_function:
  9938  007E                     saved_w	set	btemp
  9939  0004  00FE               	movwf	btemp
  9940  0005  0E03               	swapf	3,w
  9941  0006  00F3               	movwf	??_isr
  9942  0007  080A               	movf	10,w
  9943  0008  00F4               	movwf	??_isr+1
  9944  0009  160A  158A  295D   	ljmp	_isr
  9945                           
  9946                           	psect	text37
  9947  1CD4                     __ptext37:	
  9948 ;; *************** function _int_uart *****************
  9949 ;; Defined at:
  9950 ;;		line 113 in file "main.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;		None
  9953 ;; Auto vars:     Size  Location     Type
  9954 ;;		None
  9955 ;; Return value:  Size  Location     Type
  9956 ;;                  1    wreg      void 
  9957 ;; Registers used:
  9958 ;;		wreg, status,2, status,0
  9959 ;; Tracked objects:
  9960 ;;		On entry : 0/0
  9961 ;;		On exit  : 0/0
  9962 ;;		Unchanged: 0/0
  9963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9964 ;;      Params:         0       0       0       0       0
  9965 ;;      Locals:         0       0       0       0       0
  9966 ;;      Temps:          3       0       0       0       0
  9967 ;;      Totals:         3       0       0       0       0
  9968 ;;Total ram usage:        3 bytes
  9969 ;; Hardware stack levels used:    1
  9970 ;; This function calls:
  9971 ;;		Nothing
  9972 ;; This function is called by:
  9973 ;;		_isr
  9974 ;; This function uses a non-reentrant model
  9975 ;;
  9976                           
  9977                           
  9978                           ;psect for function _int_uart
  9979  1CD4                     _int_uart:
  9980  1CD4                     i1l3215:	
  9981                           ;incstack = 0
  9982                           ; Regs used in _int_uart: [wreg+status,2+status,0]
  9983                           
  9984                           
  9985                           ;main.c: 114:     TXREG = 12;
  9986  1CD4  300C               	movlw	12
  9987  1CD5  1283               	bcf	3,5	;RP0=0, select bank0
  9988  1CD6  1303               	bcf	3,6	;RP1=0, select bank0
  9989  1CD7  0099               	movwf	25	;volatile
  9990  1CD8                     i1l3217:
  9991                           
  9992                           ;main.c: 115:     if (RCREG == 43){
  9993  1CD8  302B               	movlw	43
  9994  1CD9  061A               	xorwf	26,w	;volatile
  9995  1CDA  1D03               	btfss	3,2
  9996  1CDB  2CDD               	goto	u527_21
  9997  1CDC  2CDE               	goto	u527_20
  9998  1CDD                     u527_21:
  9999  1CDD  2D39               	goto	i1l113
 10000  1CDE                     u527_20:
 10001  1CDE                     i1l3219:
 10002                           
 10003                           ;main.c: 116:         TXREG = 42;
 10004  1CDE  302A               	movlw	42
 10005  1CDF  0099               	movwf	25	;volatile
 10006                           
 10007                           ;main.c: 117:         _delay((unsigned long)((100)*(8000000/4000.0)));
 10008  1CE0  3002               	movlw	2
 10009  1CE1  00F2               	movwf	??_int_uart+2
 10010  1CE2  3004               	movlw	4
 10011  1CE3  00F1               	movwf	??_int_uart+1
 10012  1CE4  30BA               	movlw	186
 10013  1CE5  00F0               	movwf	??_int_uart
 10014  1CE6                     u793_27:
 10015  1CE6  0BF0               	decfsz	??_int_uart,f
 10016  1CE7  2CE6               	goto	u793_27
 10017  1CE8  0BF1               	decfsz	??_int_uart+1,f
 10018  1CE9  2CE6               	goto	u793_27
 10019  1CEA  0BF2               	decfsz	??_int_uart+2,f
 10020  1CEB  2CE6               	goto	u793_27
 10021  1CEC  0000               	nop
 10022                           
 10023                           ;main.c: 118:         TXREG = 0x0D;
 10024  1CED  300D               	movlw	13
 10025  1CEE  1283               	bcf	3,5	;RP0=0, select bank0
 10026  1CEF  1303               	bcf	3,6	;RP1=0, select bank0
 10027  1CF0  0099               	movwf	25	;volatile
 10028  1CF1                     i1l3221:
 10029                           
 10030                           ;main.c: 120:         op1 = 1;
 10031  1CF1  01F8               	clrf	_op1
 10032  1CF2  0AF8               	incf	_op1,f
 10033                           
 10034                           ;main.c: 121:             while (op1 == 1){
 10035  1CF3  2D19               	goto	i1l3231
 10036  1CF4                     i1l3223:
 10037                           
 10038                           ;main.c: 122:                 if (RCREG != 43){
 10039  1CF4  302B               	movlw	43
 10040  1CF5  1283               	bcf	3,5	;RP0=0, select bank0
 10041  1CF6  1303               	bcf	3,6	;RP1=0, select bank0
 10042  1CF7  061A               	xorwf	26,w	;volatile
 10043  1CF8  1903               	btfsc	3,2
 10044  1CF9  2CFB               	goto	u528_21
 10045  1CFA  2CFC               	goto	u528_20
 10046  1CFB                     u528_21:
 10047  1CFB  2D0C               	goto	i1l3229
 10048  1CFC                     u528_20:
 10049  1CFC                     i1l3225:
 10050                           
 10051                           ;main.c: 123:                     PORTA = RCREG;
 10052  1CFC  081A               	movf	26,w	;volatile
 10053  1CFD  0085               	movwf	5	;volatile
 10054                           
 10055                           ;main.c: 124:                     _delay((unsigned long)((1500)*(8000000/4000.0)));
 10056  1CFE  3010               	movlw	16
 10057  1CFF  00F2               	movwf	??_int_uart+2
 10058  1D00  3039               	movlw	57
 10059  1D01  00F1               	movwf	??_int_uart+1
 10060  1D02  300D               	movlw	13
 10061  1D03  00F0               	movwf	??_int_uart
 10062  1D04                     u794_27:
 10063  1D04  0BF0               	decfsz	??_int_uart,f
 10064  1D05  2D04               	goto	u794_27
 10065  1D06  0BF1               	decfsz	??_int_uart+1,f
 10066  1D07  2D04               	goto	u794_27
 10067  1D08  0BF2               	decfsz	??_int_uart+2,f
 10068  1D09  2D04               	goto	u794_27
 10069  1D0A  2D0B               	nop2
 10070  1D0B                     i1l3227:
 10071                           
 10072                           ;main.c: 125:                     op1 = 0;
 10073  1D0B  01F8               	clrf	_op1
 10074  1D0C                     i1l3229:
 10075                           
 10076                           ;main.c: 128:         _delay((unsigned long)((3000)*(8000000/4000.0)));
 10077  1D0C  301F               	movlw	31
 10078  1D0D  00F2               	movwf	??_int_uart+2
 10079  1D0E  3071               	movlw	113
 10080  1D0F  00F1               	movwf	??_int_uart+1
 10081  1D10  301E               	movlw	30
 10082  1D11  00F0               	movwf	??_int_uart
 10083  1D12                     u795_27:
 10084  1D12  0BF0               	decfsz	??_int_uart,f
 10085  1D13  2D12               	goto	u795_27
 10086  1D14  0BF1               	decfsz	??_int_uart+1,f
 10087  1D15  2D12               	goto	u795_27
 10088  1D16  0BF2               	decfsz	??_int_uart+2,f
 10089  1D17  2D12               	goto	u795_27
 10090  1D18  0000               	nop
 10091  1D19                     i1l3231:
 10092                           
 10093                           ;main.c: 121:             while (op1 == 1){
 10094  1D19  0378               	decf	_op1,w
 10095  1D1A  1903               	btfsc	3,2
 10096  1D1B  2D1D               	goto	u529_21
 10097  1D1C  2D1E               	goto	u529_20
 10098  1D1D                     u529_21:
 10099  1D1D  2CF4               	goto	i1l3223
 10100  1D1E                     u529_20:
 10101  1D1E                     i1l3233:
 10102                           
 10103                           ;main.c: 130:     if (RCREG == 45){
 10104  1D1E  302D               	movlw	45
 10105  1D1F  1283               	bcf	3,5	;RP0=0, select bank0
 10106  1D20  1303               	bcf	3,6	;RP1=0, select bank0
 10107  1D21  061A               	xorwf	26,w	;volatile
 10108  1D22  1D03               	btfss	3,2
 10109  1D23  2D25               	goto	u530_21
 10110  1D24  2D26               	goto	u530_20
 10111  1D25                     u530_21:
 10112  1D25  2D35               	goto	i1l3237
 10113  1D26                     u530_20:
 10114  1D26                     i1l3235:
 10115                           
 10116                           ;main.c: 131:         TXREG = 45;
 10117  1D26  302D               	movlw	45
 10118  1D27  0099               	movwf	25	;volatile
 10119                           
 10120                           ;main.c: 133:         _delay((unsigned long)((3000)*(8000000/4000.0)));
 10121  1D28  301F               	movlw	31
 10122  1D29  00F2               	movwf	??_int_uart+2
 10123  1D2A  3071               	movlw	113
 10124  1D2B  00F1               	movwf	??_int_uart+1
 10125  1D2C  301E               	movlw	30
 10126  1D2D  00F0               	movwf	??_int_uart
 10127  1D2E                     u796_27:
 10128  1D2E  0BF0               	decfsz	??_int_uart,f
 10129  1D2F  2D2E               	goto	u796_27
 10130  1D30  0BF1               	decfsz	??_int_uart+1,f
 10131  1D31  2D2E               	goto	u796_27
 10132  1D32  0BF2               	decfsz	??_int_uart+2,f
 10133  1D33  2D2E               	goto	u796_27
 10134  1D34  0000               	nop
 10135  1D35                     i1l3237:
 10136                           
 10137                           ;main.c: 135:         bmenu = 1;
 10138  1D35  1683               	bsf	3,5	;RP0=1, select bank1
 10139  1D36  1303               	bcf	3,6	;RP1=0, select bank1
 10140  1D37  01E7               	clrf	_bmenu^(0+128)
 10141  1D38  0AE7               	incf	_bmenu^(0+128),f
 10142  1D39                     i1l113:
 10143  1D39  0008               	return
 10144  1D3A                     __end_of_int_uart:
 10145                           
 10146                           	psect	text38
 10147  1941                     __ptext38:	
 10148 ;; *************** function _int_adc *****************
 10149 ;; Defined at:
 10150 ;;		line 101 in file "main.c"
 10151 ;; Parameters:    Size  Location     Type
 10152 ;;		None
 10153 ;; Auto vars:     Size  Location     Type
 10154 ;;		None
 10155 ;; Return value:  Size  Location     Type
 10156 ;;                  1    wreg      void 
 10157 ;; Registers used:
 10158 ;;		wreg, status,2, status,0
 10159 ;; Tracked objects:
 10160 ;;		On entry : 0/0
 10161 ;;		On exit  : 0/0
 10162 ;;		Unchanged: 0/0
 10163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10164 ;;      Params:         0       0       0       0       0
 10165 ;;      Locals:         0       0       0       0       0
 10166 ;;      Temps:          1       0       0       0       0
 10167 ;;      Totals:         1       0       0       0       0
 10168 ;;Total ram usage:        1 bytes
 10169 ;; Hardware stack levels used:    1
 10170 ;; This function calls:
 10171 ;;		Nothing
 10172 ;; This function is called by:
 10173 ;;		_isr
 10174 ;; This function uses a non-reentrant model
 10175 ;;
 10176                           
 10177                           
 10178                           ;psect for function _int_adc
 10179  1941                     _int_adc:
 10180  1941                     i1l3207:	
 10181                           ;incstack = 0
 10182                           ; Regs used in _int_adc: [wreg+status,2+status,0]
 10183                           
 10184                           
 10185                           ;main.c: 102:     if(ADCON0bits.CHS == 5){
 10186  1941  1283               	bcf	3,5	;RP0=0, select bank0
 10187  1942  1303               	bcf	3,6	;RP1=0, select bank0
 10188  1943  0C1F               	rrf	31,w	;volatile
 10189  1944  00F0               	movwf	??_int_adc
 10190  1945  0C70               	rrf	??_int_adc,w
 10191  1946  390F               	andlw	15
 10192  1947  3A05               	xorlw	5
 10193  1948  1D03               	skipz
 10194  1949  294B               	goto	u526_21
 10195  194A  294C               	goto	u526_20
 10196  194B                     u526_21:
 10197  194B  2953               	goto	i1l3211
 10198  194C                     u526_20:
 10199  194C                     i1l3209:
 10200                           
 10201                           ;main.c: 103:         V1 = ADRESH;
 10202  194C  081E               	movf	30,w	;volatile
 10203  194D  00F0               	movwf	??_int_adc
 10204  194E  0870               	movf	??_int_adc,w
 10205  194F  1683               	bsf	3,5	;RP0=1, select bank1
 10206  1950  1303               	bcf	3,6	;RP1=0, select bank1
 10207  1951  00E6               	movwf	_V1^(0+128)
 10208                           
 10209                           ;main.c: 105:         }
 10210  1952  2959               	goto	i1l3213
 10211  1953                     i1l3211:
 10212                           
 10213                           ;main.c: 107:         V2 = ADRESH;
 10214  1953  081E               	movf	30,w	;volatile
 10215  1954  00F0               	movwf	??_int_adc
 10216  1955  0870               	movf	??_int_adc,w
 10217  1956  1683               	bsf	3,5	;RP0=1, select bank1
 10218  1957  1303               	bcf	3,6	;RP1=0, select bank1
 10219  1958  00E5               	movwf	_V2^(0+128)
 10220  1959                     i1l3213:
 10221                           
 10222                           ;main.c: 109:     PIR1bits.ADIF = 0;
 10223  1959  1283               	bcf	3,5	;RP0=0, select bank0
 10224  195A  1303               	bcf	3,6	;RP1=0, select bank0
 10225  195B  130C               	bcf	12,6	;volatile
 10226  195C                     i1l104:
 10227  195C  0008               	return
 10228  195D                     __end_of_int_adc:
 10229  007E                     btemp	set	126	;btemp
 10230  007E                     wtemp0	set	126
 10231                           
 10232                           	psect	config
 10233                           
 10234                           ;Config register CONFIG1 @ 0x2007
 10235                           ;	Oscillator Selection bits
 10236                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
 10237                           ;	Watchdog Timer Enable bit
 10238                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10239                           ;	Power-up Timer Enable bit
 10240                           ;	PWRTE = OFF, PWRT disabled
 10241                           ;	RE3/MCLR pin function select bit
 10242                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10243                           ;	Code Protection bit
 10244                           ;	CP = OFF, Program memory code protection is disabled
 10245                           ;	Data Code Protection bit
 10246                           ;	CPD = OFF, Data memory code protection is disabled
 10247                           ;	Brown Out Reset Selection bits
 10248                           ;	BOREN = OFF, BOR disabled
 10249                           ;	Internal External Switchover bit
 10250                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10251                           ;	Fail-Safe Clock Monitor Enabled bit
 10252                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10253                           ;	Low Voltage Programming Enable bit
 10254                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10255                           ;	In-Circuit Debugger Mode bit
 10256                           ;	DEBUG = 0x1, unprogrammed default
 10257  2007                     	org	8199
 10258  2007  20D6               	dw	8406
 10259                           
 10260                           ;Config register CONFIG2 @ 0x2008
 10261                           ;	Brown-out Reset Selection bit
 10262                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10263                           ;	Flash Program Memory Self Write Enable bits
 10264                           ;	WRT = OFF, Write protection off
 10265  2008                     	org	8200
 10266  2008  3FFF               	dw	16383
 10267                           
 10268                           	psect	text1_split_1
 10269  002E                     u7440:
 10270  002E                     l4307:
 10271  002E  1683               	bsf	3,5	;RP0=1, select bank1
 10272  002F  1303               	bcf	3,6	;RP1=0, select bank1
 10273  0030  0850               	movf	(sprintf@fval+3)^(0+128),w
 10274  0031  1283               	bcf	3,5	;RP0=0, select bank0
 10275  0032  1303               	bcf	3,6	;RP1=0, select bank0
 10276  0033  00A3               	movwf	___fleq@ff1+3
 10277  0034  1683               	bsf	3,5	;RP0=1, select bank1
 10278  0035  1303               	bcf	3,6	;RP1=0, select bank1
 10279  0036  084F               	movf	(sprintf@fval+2)^(0+128),w
 10280  0037  1283               	bcf	3,5	;RP0=0, select bank0
 10281  0038  1303               	bcf	3,6	;RP1=0, select bank0
 10282  0039  00A2               	movwf	___fleq@ff1+2
 10283  003A  1683               	bsf	3,5	;RP0=1, select bank1
 10284  003B  1303               	bcf	3,6	;RP1=0, select bank1
 10285  003C  084E               	movf	(sprintf@fval+1)^(0+128),w
 10286  003D  1283               	bcf	3,5	;RP0=0, select bank0
 10287  003E  1303               	bcf	3,6	;RP1=0, select bank0
 10288  003F  00A1               	movwf	___fleq@ff1+1
 10289  0040  1683               	bsf	3,5	;RP0=1, select bank1
 10290  0041  1303               	bcf	3,6	;RP1=0, select bank1
 10291  0042  084D               	movf	sprintf@fval^(0+128),w
 10292  0043  1283               	bcf	3,5	;RP0=0, select bank0
 10293  0044  1303               	bcf	3,6	;RP1=0, select bank0
 10294  0045  00A0               	movwf	___fleq@ff1
 10295  0046  3000               	movlw	0
 10296  0047  00A7               	movwf	___fleq@ff2+3
 10297  0048  3000               	movlw	0
 10298  0049  00A6               	movwf	___fleq@ff2+2
 10299  004A  3000               	movlw	0
 10300  004B  00A5               	movwf	___fleq@ff2+1
 10301  004C  3000               	movlw	0
 10302  004D  00A4               	movwf	___fleq@ff2
 10303  004E  160A  158A  2383  120A  118A  	fcall	___fleq
 10304  0053  1803               	btfsc	3,0
 10305  0054  2856               	goto	u7451
 10306  0055  2857               	goto	u7450
 10307  0056                     u7451:
 10308  0056  2939               	goto	l4327
 10309  0057                     u7450:
 10310  0057                     l4309:
 10311  0057  1683               	bsf	3,5	;RP0=1, select bank1
 10312  0058  1303               	bcf	3,6	;RP1=0, select bank1
 10313  0059  0850               	movf	(sprintf@fval+3)^(0+128),w
 10314  005A  1283               	bcf	3,5	;RP0=0, select bank0
 10315  005B  1303               	bcf	3,6	;RP1=0, select bank0
 10316  005C  00DE               	movwf	___fltol@f1+3
 10317  005D  1683               	bsf	3,5	;RP0=1, select bank1
 10318  005E  1303               	bcf	3,6	;RP1=0, select bank1
 10319  005F  084F               	movf	(sprintf@fval+2)^(0+128),w
 10320  0060  1283               	bcf	3,5	;RP0=0, select bank0
 10321  0061  1303               	bcf	3,6	;RP1=0, select bank0
 10322  0062  00DD               	movwf	___fltol@f1+2
 10323  0063  1683               	bsf	3,5	;RP0=1, select bank1
 10324  0064  1303               	bcf	3,6	;RP1=0, select bank1
 10325  0065  084E               	movf	(sprintf@fval+1)^(0+128),w
 10326  0066  1283               	bcf	3,5	;RP0=0, select bank0
 10327  0067  1303               	bcf	3,6	;RP1=0, select bank0
 10328  0068  00DC               	movwf	___fltol@f1+1
 10329  0069  1683               	bsf	3,5	;RP0=1, select bank1
 10330  006A  1303               	bcf	3,6	;RP1=0, select bank1
 10331  006B  084D               	movf	sprintf@fval^(0+128),w
 10332  006C  1283               	bcf	3,5	;RP0=0, select bank0
 10333  006D  1303               	bcf	3,6	;RP1=0, select bank0
 10334  006E  00DB               	movwf	___fltol@f1
 10335  006F  160A  158A  260B  120A  118A  	fcall	___fltol
 10336  0074  1283               	bcf	3,5	;RP0=0, select bank0
 10337  0075  1303               	bcf	3,6	;RP1=0, select bank0
 10338  0076  085E               	movf	?___fltol+3,w
 10339  0077  045D               	iorwf	?___fltol+2,w
 10340  0078  045C               	iorwf	?___fltol+1,w
 10341  0079  045B               	iorwf	?___fltol,w
 10342  007A  1D03               	skipz
 10343  007B  287D               	goto	u7461
 10344  007C  287E               	goto	u7460
 10345  007D                     u7461:
 10346  007D  2939               	goto	l4327
 10347  007E                     u7460:
 10348  007E                     l4311:
 10349  007E  1683               	bsf	3,5	;RP0=1, select bank1
 10350  007F  1303               	bcf	3,6	;RP1=0, select bank1
 10351  0080  084C               	movf	(sprintf@eexp+1)^(0+128),w
 10352  0081  3A80               	xorlw	128
 10353  0082  00FF               	movwf	btemp+1
 10354  0083  3080               	movlw	128
 10355  0084  027F               	subwf	btemp+1,w
 10356  0085  1D03               	skipz
 10357  0086  2889               	goto	u7475
 10358  0087  3002               	movlw	2
 10359  0088  024B               	subwf	sprintf@eexp^(0+128),w
 10360  0089                     u7475:
 10361  0089  1C03               	skipc
 10362  008A  288C               	goto	u7471
 10363  008B  288D               	goto	u7470
 10364  008C                     u7471:
 10365  008C  2939               	goto	l4327
 10366  008D                     u7470:
 10367  008D                     l4313:
 10368                           
 10369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10370  008D  1683               	bsf	3,5	;RP0=1, select bank1
 10371  008E  1303               	bcf	3,6	;RP1=0, select bank1
 10372  008F  084A               	movf	(sprintf@tmpval+3)^(0+128),w
 10373  0090  1283               	bcf	3,5	;RP0=0, select bank0
 10374  0091  1303               	bcf	3,6	;RP1=0, select bank0
 10375  0092  00A3               	movwf	___flge@ff1+3
 10376  0093  1683               	bsf	3,5	;RP0=1, select bank1
 10377  0094  1303               	bcf	3,6	;RP1=0, select bank1
 10378  0095  0849               	movf	(sprintf@tmpval+2)^(0+128),w
 10379  0096  1283               	bcf	3,5	;RP0=0, select bank0
 10380  0097  1303               	bcf	3,6	;RP1=0, select bank0
 10381  0098  00A2               	movwf	___flge@ff1+2
 10382  0099  1683               	bsf	3,5	;RP0=1, select bank1
 10383  009A  1303               	bcf	3,6	;RP1=0, select bank1
 10384  009B  0848               	movf	(sprintf@tmpval+1)^(0+128),w
 10385  009C  1283               	bcf	3,5	;RP0=0, select bank0
 10386  009D  1303               	bcf	3,6	;RP1=0, select bank0
 10387  009E  00A1               	movwf	___flge@ff1+1
 10388  009F  1683               	bsf	3,5	;RP0=1, select bank1
 10389  00A0  1303               	bcf	3,6	;RP1=0, select bank1
 10390  00A1  0847               	movf	sprintf@tmpval^(0+128),w
 10391  00A2  1283               	bcf	3,5	;RP0=0, select bank0
 10392  00A3  1303               	bcf	3,6	;RP1=0, select bank0
 10393  00A4  00A0               	movwf	___flge@ff1
 10394  00A5  3040               	movlw	64
 10395  00A6  00A7               	movwf	___flge@ff2+3
 10396  00A7  3089               	movlw	137
 10397  00A8  00A6               	movwf	___flge@ff2+2
 10398  00A9  3070               	movlw	112
 10399  00AA  00A5               	movwf	___flge@ff2+1
 10400  00AB  305F               	movlw	95
 10401  00AC  00A4               	movwf	___flge@ff2
 10402  00AD  160A  118A  20CA  120A  118A  	fcall	___flge
 10403  00B2  1803               	btfsc	3,0
 10404  00B3  28B5               	goto	u7481
 10405  00B4  28B6               	goto	u7480
 10406  00B5                     u7481:
 10407  00B5  28BF               	goto	l4317
 10408  00B6                     u7480:
 10409  00B6                     l4315:
 10410                           
 10411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10412  00B6  30F7               	movlw	247
 10413  00B7  1683               	bsf	3,5	;RP0=1, select bank1
 10414  00B8  1303               	bcf	3,6	;RP1=0, select bank1
 10415  00B9  07CB               	addwf	sprintf@eexp^(0+128),f
 10416  00BA  1803               	skipnc
 10417  00BB  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
 10418  00BC  30FF               	movlw	255
 10419  00BD  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
 10420                           
 10421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10422  00BE  28C7               	goto	l4319
 10423  00BF                     l4317:
 10424                           
 10425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10426  00BF  30F8               	movlw	248
 10427  00C0  1683               	bsf	3,5	;RP0=1, select bank1
 10428  00C1  1303               	bcf	3,6	;RP1=0, select bank1
 10429  00C2  07CB               	addwf	sprintf@eexp^(0+128),f
 10430  00C3  1803               	skipnc
 10431  00C4  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
 10432  00C5  30FF               	movlw	255
 10433  00C6  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
 10434  00C7                     l4319:
 10435                           
 10436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10437  00C7  084B               	movf	sprintf@eexp^(0+128),w
 10438  00C8  120A  158A  249D  120A  118A  	fcall	_scale
 10439  00CD  1283               	bcf	3,5	;RP0=0, select bank0
 10440  00CE  1303               	bcf	3,6	;RP1=0, select bank0
 10441  00CF  084B               	movf	?_scale+3,w
 10442  00D0  1683               	bsf	3,5	;RP0=1, select bank1
 10443  00D1  1303               	bcf	3,6	;RP1=0, select bank1
 10444  00D2  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
 10445  00D3  1283               	bcf	3,5	;RP0=0, select bank0
 10446  00D4  1303               	bcf	3,6	;RP1=0, select bank0
 10447  00D5  084A               	movf	?_scale+2,w
 10448  00D6  1683               	bsf	3,5	;RP0=1, select bank1
 10449  00D7  1303               	bcf	3,6	;RP1=0, select bank1
 10450  00D8  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
 10451  00D9  1283               	bcf	3,5	;RP0=0, select bank0
 10452  00DA  1303               	bcf	3,6	;RP1=0, select bank0
 10453  00DB  0849               	movf	?_scale+1,w
 10454  00DC  1683               	bsf	3,5	;RP0=1, select bank1
 10455  00DD  1303               	bcf	3,6	;RP1=0, select bank1
 10456  00DE  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
 10457  00DF  1283               	bcf	3,5	;RP0=0, select bank0
 10458  00E0  1303               	bcf	3,6	;RP1=0, select bank0
 10459  00E1  0848               	movf	?_scale,w
 10460  00E2  1683               	bsf	3,5	;RP0=1, select bank1
 10461  00E3  1303               	bcf	3,6	;RP1=0, select bank1
 10462  00E4  00C7               	movwf	sprintf@tmpval^(0+128)
 10463  00E5                     l4321:
 10464  00E5  0850               	movf	(sprintf@fval+3)^(0+128),w
 10465  00E6  1283               	bcf	3,5	;RP0=0, select bank0
 10466  00E7  1303               	bcf	3,6	;RP1=0, select bank0
 10467  00E8  00A3               	movwf	__div_to_l_@f1+3
 10468  00E9  1683               	bsf	3,5	;RP0=1, select bank1
 10469  00EA  1303               	bcf	3,6	;RP1=0, select bank1
 10470  00EB  084F               	movf	(sprintf@fval+2)^(0+128),w
 10471  00EC  1283               	bcf	3,5	;RP0=0, select bank0
 10472  00ED  1303               	bcf	3,6	;RP1=0, select bank0
 10473  00EE  00A2               	movwf	__div_to_l_@f1+2
 10474  00EF  1683               	bsf	3,5	;RP0=1, select bank1
 10475  00F0  1303               	bcf	3,6	;RP1=0, select bank1
 10476  00F1  084E               	movf	(sprintf@fval+1)^(0+128),w
 10477  00F2  1283               	bcf	3,5	;RP0=0, select bank0
 10478  00F3  1303               	bcf	3,6	;RP1=0, select bank0
 10479  00F4  00A1               	movwf	__div_to_l_@f1+1
 10480  00F5  1683               	bsf	3,5	;RP0=1, select bank1
 10481  00F6  1303               	bcf	3,6	;RP1=0, select bank1
 10482  00F7  084D               	movf	sprintf@fval^(0+128),w
 10483  00F8  1283               	bcf	3,5	;RP0=0, select bank0
 10484  00F9  1303               	bcf	3,6	;RP1=0, select bank0
 10485  00FA  00A0               	movwf	__div_to_l_@f1
 10486  00FB  1683               	bsf	3,5	;RP0=1, select bank1
 10487  00FC  1303               	bcf	3,6	;RP1=0, select bank1
 10488  00FD  084A               	movf	(sprintf@tmpval+3)^(0+128),w
 10489  00FE  1283               	bcf	3,5	;RP0=0, select bank0
 10490  00FF  1303               	bcf	3,6	;RP1=0, select bank0
 10491  0100  00A7               	movwf	__div_to_l_@f2+3
 10492  0101  1683               	bsf	3,5	;RP0=1, select bank1
 10493  0102  1303               	bcf	3,6	;RP1=0, select bank1
 10494  0103  0849               	movf	(sprintf@tmpval+2)^(0+128),w
 10495  0104  1283               	bcf	3,5	;RP0=0, select bank0
 10496  0105  1303               	bcf	3,6	;RP1=0, select bank0
 10497  0106  00A6               	movwf	__div_to_l_@f2+2
 10498  0107  1683               	bsf	3,5	;RP0=1, select bank1
 10499  0108  1303               	bcf	3,6	;RP1=0, select bank1
 10500  0109  0848               	movf	(sprintf@tmpval+1)^(0+128),w
 10501  010A  1283               	bcf	3,5	;RP0=0, select bank0
 10502  010B  1303               	bcf	3,6	;RP1=0, select bank0
 10503  010C  00A5               	movwf	__div_to_l_@f2+1
 10504  010D  1683               	bsf	3,5	;RP0=1, select bank1
 10505  010E  1303               	bcf	3,6	;RP1=0, select bank1
 10506  010F  0847               	movf	sprintf@tmpval^(0+128),w
 10507  0110  1283               	bcf	3,5	;RP0=0, select bank0
 10508  0111  1303               	bcf	3,6	;RP1=0, select bank0
 10509  0112  00A4               	movwf	__div_to_l_@f2
 10510  0113  160A  118A  216E  120A  118A  	fcall	__div_to_l_
 10511  0118  1283               	bcf	3,5	;RP0=0, select bank0
 10512  0119  1303               	bcf	3,6	;RP1=0, select bank0
 10513  011A  0823               	movf	?__div_to_l_+3,w
 10514  011B  1683               	bsf	3,5	;RP0=1, select bank1
 10515  011C  1303               	bcf	3,6	;RP1=0, select bank1
 10516  011D  00C2               	movwf	(sprintf@val+3)^(0+128)
 10517  011E  1283               	bcf	3,5	;RP0=0, select bank0
 10518  011F  1303               	bcf	3,6	;RP1=0, select bank0
 10519  0120  0822               	movf	?__div_to_l_+2,w
 10520  0121  1683               	bsf	3,5	;RP0=1, select bank1
 10521  0122  1303               	bcf	3,6	;RP1=0, select bank1
 10522  0123  00C1               	movwf	(sprintf@val+2)^(0+128)
 10523  0124  1283               	bcf	3,5	;RP0=0, select bank0
 10524  0125  1303               	bcf	3,6	;RP1=0, select bank0
 10525  0126  0821               	movf	?__div_to_l_+1,w
 10526  0127  1683               	bsf	3,5	;RP0=1, select bank1
 10527  0128  1303               	bcf	3,6	;RP1=0, select bank1
 10528  0129  00C0               	movwf	(sprintf@val+1)^(0+128)
 10529  012A  1283               	bcf	3,5	;RP0=0, select bank0
 10530  012B  1303               	bcf	3,6	;RP1=0, select bank0
 10531  012C  0820               	movf	?__div_to_l_,w
 10532  012D  1683               	bsf	3,5	;RP0=1, select bank1
 10533  012E  1303               	bcf	3,6	;RP1=0, select bank1
 10534  012F  00BF               	movwf	sprintf@val^(0+128)
 10535  0130                     l4325:
 10536                           
 10537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10538  0130  3000               	movlw	0
 10539  0131  00D0               	movwf	(sprintf@fval+3)^(0+128)
 10540  0132  3000               	movlw	0
 10541  0133  00CF               	movwf	(sprintf@fval+2)^(0+128)
 10542  0134  3000               	movlw	0
 10543  0135  00CE               	movwf	(sprintf@fval+1)^(0+128)
 10544  0136  3000               	movlw	0
 10545  0137  00CD               	movwf	sprintf@fval^(0+128)
 10546                           
 10547                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10548  0138  29BB               	goto	l4333
 10549  0139                     l4327:
 10550                           
 10551                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10552  0139  1683               	bsf	3,5	;RP0=1, select bank1
 10553  013A  1303               	bcf	3,6	;RP1=0, select bank1
 10554  013B  0850               	movf	(sprintf@fval+3)^(0+128),w
 10555  013C  1283               	bcf	3,5	;RP0=0, select bank0
 10556  013D  1303               	bcf	3,6	;RP1=0, select bank0
 10557  013E  00DE               	movwf	___fltol@f1+3
 10558  013F  1683               	bsf	3,5	;RP0=1, select bank1
 10559  0140  1303               	bcf	3,6	;RP1=0, select bank1
 10560  0141  084F               	movf	(sprintf@fval+2)^(0+128),w
 10561  0142  1283               	bcf	3,5	;RP0=0, select bank0
 10562  0143  1303               	bcf	3,6	;RP1=0, select bank0
 10563  0144  00DD               	movwf	___fltol@f1+2
 10564  0145  1683               	bsf	3,5	;RP0=1, select bank1
 10565  0146  1303               	bcf	3,6	;RP1=0, select bank1
 10566  0147  084E               	movf	(sprintf@fval+1)^(0+128),w
 10567  0148  1283               	bcf	3,5	;RP0=0, select bank0
 10568  0149  1303               	bcf	3,6	;RP1=0, select bank0
 10569  014A  00DC               	movwf	___fltol@f1+1
 10570  014B  1683               	bsf	3,5	;RP0=1, select bank1
 10571  014C  1303               	bcf	3,6	;RP1=0, select bank1
 10572  014D  084D               	movf	sprintf@fval^(0+128),w
 10573  014E  1283               	bcf	3,5	;RP0=0, select bank0
 10574  014F  1303               	bcf	3,6	;RP1=0, select bank0
 10575  0150  00DB               	movwf	___fltol@f1
 10576  0151  160A  158A  260B  120A  118A  	fcall	___fltol
 10577  0156  1283               	bcf	3,5	;RP0=0, select bank0
 10578  0157  1303               	bcf	3,6	;RP1=0, select bank0
 10579  0158  085E               	movf	?___fltol+3,w
 10580  0159  1683               	bsf	3,5	;RP0=1, select bank1
 10581  015A  1303               	bcf	3,6	;RP1=0, select bank1
 10582  015B  00C2               	movwf	(sprintf@val+3)^(0+128)
 10583  015C  1283               	bcf	3,5	;RP0=0, select bank0
 10584  015D  1303               	bcf	3,6	;RP1=0, select bank0
 10585  015E  085D               	movf	?___fltol+2,w
 10586  015F  1683               	bsf	3,5	;RP0=1, select bank1
 10587  0160  1303               	bcf	3,6	;RP1=0, select bank1
 10588  0161  00C1               	movwf	(sprintf@val+2)^(0+128)
 10589  0162  1283               	bcf	3,5	;RP0=0, select bank0
 10590  0163  1303               	bcf	3,6	;RP1=0, select bank0
 10591  0164  085C               	movf	?___fltol+1,w
 10592  0165  1683               	bsf	3,5	;RP0=1, select bank1
 10593  0166  1303               	bcf	3,6	;RP1=0, select bank1
 10594  0167  00C0               	movwf	(sprintf@val+1)^(0+128)
 10595  0168  1283               	bcf	3,5	;RP0=0, select bank0
 10596  0169  1303               	bcf	3,6	;RP1=0, select bank0
 10597  016A  085B               	movf	?___fltol,w
 10598  016B  1683               	bsf	3,5	;RP0=1, select bank1
 10599  016C  1303               	bcf	3,6	;RP1=0, select bank1
 10600  016D  00BF               	movwf	sprintf@val^(0+128)
 10601  016E                     l4329:
 10602                           
 10603                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10604  016E  0842               	movf	(sprintf@val+3)^(0+128),w
 10605  016F  1283               	bcf	3,5	;RP0=0, select bank0
 10606  0170  1303               	bcf	3,6	;RP1=0, select bank0
 10607  0171  00A3               	movwf	___xxtofl@val+3
 10608  0172  1683               	bsf	3,5	;RP0=1, select bank1
 10609  0173  1303               	bcf	3,6	;RP1=0, select bank1
 10610  0174  0841               	movf	(sprintf@val+2)^(0+128),w
 10611  0175  1283               	bcf	3,5	;RP0=0, select bank0
 10612  0176  1303               	bcf	3,6	;RP1=0, select bank0
 10613  0177  00A2               	movwf	___xxtofl@val+2
 10614  0178  1683               	bsf	3,5	;RP0=1, select bank1
 10615  0179  1303               	bcf	3,6	;RP1=0, select bank1
 10616  017A  0840               	movf	(sprintf@val+1)^(0+128),w
 10617  017B  1283               	bcf	3,5	;RP0=0, select bank0
 10618  017C  1303               	bcf	3,6	;RP1=0, select bank0
 10619  017D  00A1               	movwf	___xxtofl@val+1
 10620  017E  1683               	bsf	3,5	;RP0=1, select bank1
 10621  017F  1303               	bcf	3,6	;RP1=0, select bank1
 10622  0180  083F               	movf	sprintf@val^(0+128),w
 10623  0181  1283               	bcf	3,5	;RP0=0, select bank0
 10624  0182  1303               	bcf	3,6	;RP1=0, select bank0
 10625  0183  00A0               	movwf	___xxtofl@val
 10626  0184  3000               	movlw	0
 10627  0185  160A  158A  2687  120A  118A  	fcall	___xxtofl
 10628  018A  1283               	bcf	3,5	;RP0=0, select bank0
 10629  018B  1303               	bcf	3,6	;RP1=0, select bank0
 10630  018C  0823               	movf	?___xxtofl+3,w
 10631  018D  1683               	bsf	3,5	;RP0=1, select bank1
 10632  018E  1303               	bcf	3,6	;RP1=0, select bank1
 10633  018F  00A3               	movwf	(___flsub@a+3)^(0+128)
 10634  0190  1283               	bcf	3,5	;RP0=0, select bank0
 10635  0191  1303               	bcf	3,6	;RP1=0, select bank0
 10636  0192  0822               	movf	?___xxtofl+2,w
 10637  0193  1683               	bsf	3,5	;RP0=1, select bank1
 10638  0194  1303               	bcf	3,6	;RP1=0, select bank1
 10639  0195  00A2               	movwf	(___flsub@a+2)^(0+128)
 10640  0196  1283               	bcf	3,5	;RP0=0, select bank0
 10641  0197  1303               	bcf	3,6	;RP1=0, select bank0
 10642  0198  0821               	movf	?___xxtofl+1,w
 10643  0199  1683               	bsf	3,5	;RP0=1, select bank1
 10644  019A  1303               	bcf	3,6	;RP1=0, select bank1
 10645  019B  00A1               	movwf	(___flsub@a+1)^(0+128)
 10646  019C  1283               	bcf	3,5	;RP0=0, select bank0
 10647  019D  1303               	bcf	3,6	;RP1=0, select bank0
 10648  019E  0820               	movf	?___xxtofl,w
 10649  019F  1683               	bsf	3,5	;RP0=1, select bank1
 10650  01A0  1303               	bcf	3,6	;RP1=0, select bank1
 10651  01A1  00A0               	movwf	___flsub@a^(0+128)
 10652  01A2  0850               	movf	(sprintf@fval+3)^(0+128),w
 10653  01A3  00A7               	movwf	(___flsub@b+3)^(0+128)
 10654  01A4  084F               	movf	(sprintf@fval+2)^(0+128),w
 10655  01A5  00A6               	movwf	(___flsub@b+2)^(0+128)
 10656  01A6  084E               	movf	(sprintf@fval+1)^(0+128),w
 10657  01A7  00A5               	movwf	(___flsub@b+1)^(0+128)
 10658  01A8  084D               	movf	sprintf@fval^(0+128),w
 10659  01A9  00A4               	movwf	___flsub@b^(0+128)
 10660  01AA  160A  158A  23D3  120A  118A  	fcall	___flsub
 10661  01AF  1683               	bsf	3,5	;RP0=1, select bank1
 10662  01B0  1303               	bcf	3,6	;RP1=0, select bank1
 10663  01B1  0823               	movf	(?___flsub+3)^(0+128),w
 10664  01B2  00D0               	movwf	(sprintf@fval+3)^(0+128)
 10665  01B3  0822               	movf	(?___flsub+2)^(0+128),w
 10666  01B4  00CF               	movwf	(sprintf@fval+2)^(0+128)
 10667  01B5  0821               	movf	(?___flsub+1)^(0+128),w
 10668  01B6  00CE               	movwf	(sprintf@fval+1)^(0+128)
 10669  01B7  0820               	movf	?___flsub^(0+128),w
 10670  01B8  00CD               	movwf	sprintf@fval^(0+128)
 10671  01B9                     l4331:
 10672                           
 10673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10674  01B9  01CB               	clrf	sprintf@eexp^(0+128)
 10675  01BA  01CC               	clrf	(sprintf@eexp+1)^(0+128)
 10676  01BB                     l4333:
 10677                           
 10678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10679  01BB  01D4               	clrf	sprintf@c^(0+128)
 10680  01BC  0AD4               	incf	sprintf@c^(0+128),f
 10681  01BD                     l4339:
 10682                           
 10683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10684  01BD  0854               	movf	sprintf@c^(0+128),w
 10685  01BE  00B5               	movwf	??_sprintf^(0+128)
 10686  01BF  3001               	movlw	1
 10687  01C0                     u7495:
 10688  01C0  1003               	clrc
 10689  01C1  0DB5               	rlf	??_sprintf^(0+128),f
 10690  01C2  3EFF               	addlw	-1
 10691  01C3  1D03               	skipz
 10692  01C4  29C0               	goto	u7495
 10693  01C5  1003               	clrc
 10694  01C6  0D35               	rlf	??_sprintf^(0+128),w
 10695  01C7  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10696  01C8  0084               	movwf	4
 10697  01C9  160A  118A  200A  120A  118A  	fcall	stringdir
 10698  01CE  00B6               	movwf	(??_sprintf+1)^(0+128)
 10699  01CF  160A  118A  200A  120A  118A  	fcall	stringdir
 10700  01D4  00B7               	movwf	((??_sprintf+1)^(0+128)+1)
 10701  01D5  160A  118A  200A  120A  118A  	fcall	stringdir
 10702  01DA  00B8               	movwf	((??_sprintf+1)^(0+128)+2)
 10703  01DB  160A  118A  200A  120A  118A  	fcall	stringdir
 10704  01E0  00B9               	movwf	((??_sprintf+1)^(0+128)+3)
 10705  01E1  0839               	movf	(??_sprintf+4)^(0+128),w
 10706  01E2  0242               	subwf	(sprintf@val+3)^(0+128),w
 10707  01E3  1D03               	skipz
 10708  01E4  29EF               	goto	u7505
 10709  01E5  0838               	movf	(??_sprintf+3)^(0+128),w
 10710  01E6  0241               	subwf	(sprintf@val+2)^(0+128),w
 10711  01E7  1D03               	skipz
 10712  01E8  29EF               	goto	u7505
 10713  01E9  0837               	movf	(??_sprintf+2)^(0+128),w
 10714  01EA  0240               	subwf	(sprintf@val+1)^(0+128),w
 10715  01EB  1D03               	skipz
 10716  01EC  29EF               	goto	u7505
 10717  01ED  0836               	movf	(??_sprintf+1)^(0+128),w
 10718  01EE  023F               	subwf	sprintf@val^(0+128),w
 10719  01EF                     u7505:
 10720  01EF  1803               	skipnc
 10721  01F0  29F2               	goto	u7501
 10722  01F1  29F3               	goto	u7500
 10723  01F2                     u7501:
 10724  01F2  29F4               	goto	l4343
 10725  01F3                     u7500:
 10726  01F3  29FE               	goto	l4345
 10727  01F4                     l4343:
 10728  01F4  3001               	movlw	1
 10729  01F5  00B5               	movwf	??_sprintf^(0+128)
 10730  01F6  0835               	movf	??_sprintf^(0+128),w
 10731  01F7  07D4               	addwf	sprintf@c^(0+128),f
 10732  01F8  300A               	movlw	10
 10733  01F9  0654               	xorwf	sprintf@c^(0+128),w
 10734  01FA  1D03               	btfss	3,2
 10735  01FB  29FD               	goto	u7511
 10736  01FC  29FE               	goto	u7510
 10737  01FD                     u7511:
 10738  01FD  29BD               	goto	l4339
 10739  01FE                     u7510:
 10740  01FE                     l4345:
 10741                           
 10742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10743  01FE  0854               	movf	sprintf@c^(0+128),w
 10744  01FF  0752               	addwf	sprintf@prec^(0+128),w
 10745  0200  00B5               	movwf	??_sprintf^(0+128)
 10746  0201  0853               	movf	(sprintf@prec+1)^(0+128),w
 10747  0202  1803               	skipnc
 10748  0203  0A53               	incf	(sprintf@prec+1)^(0+128),w
 10749  0204  00B6               	movwf	(??_sprintf^(0+128)+1)
 10750  0205  084B               	movf	sprintf@eexp^(0+128),w
 10751  0206  0735               	addwf	??_sprintf^(0+128),w
 10752  0207  00B7               	movwf	(??_sprintf+2)^(0+128)
 10753  0208  084C               	movf	(sprintf@eexp+1)^(0+128),w
 10754  0209  1803               	skipnc
 10755  020A  0A4C               	incf	(sprintf@eexp+1)^(0+128),w
 10756  020B  0736               	addwf	(??_sprintf+1)^(0+128),w
 10757  020C  00B8               	movwf	(??_sprintf+3)^(0+128)
 10758  020D  0837               	movf	(??_sprintf+2)^(0+128),w
 10759  020E  02C5               	subwf	sprintf@width^(0+128),f
 10760  020F  0838               	movf	(??_sprintf+3)^(0+128),w
 10761  0210  1C03               	skipc
 10762  0211  03C6               	decf	(sprintf@width+1)^(0+128),f
 10763  0212  02C6               	subwf	(sprintf@width+1)^(0+128),f
 10764                           
 10765                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10766  0213  0852               	movf	sprintf@prec^(0+128),w
 10767  0214  0453               	iorwf	(sprintf@prec+1)^(0+128),w
 10768  0215  1903               	btfsc	3,2
 10769  0216  2A18               	goto	u7521
 10770  0217  2A19               	goto	u7520
 10771  0218                     u7521:
 10772  0218  2A1F               	goto	l4349
 10773  0219                     u7520:
 10774  0219                     l4347:
 10775                           
 10776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10777  0219  30FF               	movlw	255
 10778  021A  07C5               	addwf	sprintf@width^(0+128),f
 10779  021B  1803               	skipnc
 10780  021C  0AC6               	incf	(sprintf@width+1)^(0+128),f
 10781  021D  30FF               	movlw	255
 10782  021E  07C6               	addwf	(sprintf@width+1)^(0+128),f
 10783  021F                     l4349:
 10784                           
 10785                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10786  021F  3003               	movlw	3
 10787  0220  0543               	andwf	sprintf@flag^(0+128),w
 10788  0221  00B5               	movwf	??_sprintf^(0+128)
 10789  0222  3000               	movlw	0
 10790  0223  0544               	andwf	(sprintf@flag+1)^(0+128),w
 10791  0224  00B6               	movwf	(??_sprintf+1)^(0+128)
 10792  0225  0835               	movf	??_sprintf^(0+128),w
 10793  0226  0436               	iorwf	(??_sprintf^(0+128)+1),w
 10794  0227  1903               	btfsc	3,2
 10795  0228  2A2A               	goto	u7531
 10796  0229  2A2B               	goto	u7530
 10797  022A                     u7531:
 10798  022A  2A40               	goto	l4359
 10799  022B                     u7530:
 10800  022B                     l4351:
 10801                           
 10802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10803  022B  30FF               	movlw	255
 10804  022C  07C5               	addwf	sprintf@width^(0+128),f
 10805  022D  1803               	skipnc
 10806  022E  0AC6               	incf	(sprintf@width+1)^(0+128),f
 10807  022F  30FF               	movlw	255
 10808  0230  07C6               	addwf	(sprintf@width+1)^(0+128),f
 10809  0231  2A40               	goto	l4359
 10810  0232                     l4353:
 10811                           
 10812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10813  0232  3020               	movlw	32
 10814  0233  1683               	bsf	3,5	;RP0=1, select bank1
 10815  0234  1303               	bcf	3,6	;RP1=0, select bank1
 10816  0235  00B5               	movwf	??_sprintf^(0+128)
 10817  0236  0851               	movf	sprintf@sp^(0+128),w
 10818  0237  0084               	movwf	4
 10819  0238  0835               	movf	??_sprintf^(0+128),w
 10820  0239  1783               	bsf	3,7	;select IRP bank2
 10821  023A  0080               	movwf	0
 10822  023B                     l4355:
 10823  023B  3001               	movlw	1
 10824  023C  00B5               	movwf	??_sprintf^(0+128)
 10825  023D  0835               	movf	??_sprintf^(0+128),w
 10826  023E  07D1               	addwf	sprintf@sp^(0+128),f
 10827  023F  2A2B               	goto	l4351
 10828  0240                     l4359:
 10829                           
 10830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10831  0240  0846               	movf	(sprintf@width+1)^(0+128),w
 10832  0241  3A80               	xorlw	128
 10833  0242  00FF               	movwf	btemp+1
 10834  0243  3080               	movlw	128
 10835  0244  027F               	subwf	btemp+1,w
 10836  0245  1D03               	skipz
 10837  0246  2A49               	goto	u7545
 10838  0247  3001               	movlw	1
 10839  0248  0245               	subwf	sprintf@width^(0+128),w
 10840  0249                     u7545:
 10841  0249  1803               	skipnc
 10842  024A  2A4C               	goto	u7541
 10843  024B  2A4D               	goto	u7540
 10844  024C                     u7541:
 10845  024C  2A32               	goto	l4353
 10846  024D                     u7540:
 10847  024D                     l4361:
 10848                           
 10849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10850  024D  3003               	movlw	3
 10851  024E  1683               	bsf	3,5	;RP0=1, select bank1
 10852  024F  1303               	bcf	3,6	;RP1=0, select bank1
 10853  0250  0543               	andwf	sprintf@flag^(0+128),w
 10854  0251  00B5               	movwf	??_sprintf^(0+128)
 10855  0252  3000               	movlw	0
 10856  0253  0544               	andwf	(sprintf@flag+1)^(0+128),w
 10857  0254  00B6               	movwf	(??_sprintf+1)^(0+128)
 10858  0255  0835               	movf	??_sprintf^(0+128),w
 10859  0256  0436               	iorwf	(??_sprintf^(0+128)+1),w
 10860  0257  1903               	btfsc	3,2
 10861  0258  2A5A               	goto	u7551
 10862  0259  2A5B               	goto	u7550
 10863  025A                     u7551:
 10864  025A  2B0D               	goto	l382
 10865  025B                     u7550:
 10866  025B                     l4363:
 10867                           
 10868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10869  025B  302D               	movlw	45
 10870  025C  00B5               	movwf	??_sprintf^(0+128)
 10871  025D  0851               	movf	sprintf@sp^(0+128),w
 10872  025E  0084               	movwf	4
 10873  025F  0835               	movf	??_sprintf^(0+128),w
 10874  0260  1783               	bsf	3,7	;select IRP bank2
 10875  0261  0080               	movwf	0
 10876  0262                     l4365:
 10877  0262  3001               	movlw	1
 10878  0263  00B5               	movwf	??_sprintf^(0+128)
 10879  0264  0835               	movf	??_sprintf^(0+128),w
 10880  0265  07D1               	addwf	sprintf@sp^(0+128),f
 10881  0266  2B0D               	goto	l382
 10882  0267                     l4367:
 10883                           
 10884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10885  0267  0854               	movf	sprintf@c^(0+128),w
 10886  0268  00B5               	movwf	??_sprintf^(0+128)
 10887  0269  3001               	movlw	1
 10888  026A                     u7565:
 10889  026A  1003               	clrc
 10890  026B  0DB5               	rlf	??_sprintf^(0+128),f
 10891  026C  3EFF               	addlw	-1
 10892  026D  1D03               	skipz
 10893  026E  2A6A               	goto	u7565
 10894  026F  1003               	clrc
 10895  0270  0D35               	rlf	??_sprintf^(0+128),w
 10896  0271  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10897  0272  0084               	movwf	4
 10898  0273  160A  118A  200A  120A  118A  	fcall	stringdir
 10899  0278  1283               	bcf	3,5	;RP0=0, select bank0
 10900  0279  1303               	bcf	3,6	;RP1=0, select bank0
 10901  027A  00A0               	movwf	___lldiv@divisor
 10902  027B  160A  118A  200A  120A  118A  	fcall	stringdir
 10903  0280  00A1               	movwf	___lldiv@divisor+1
 10904  0281  160A  118A  200A  120A  118A  	fcall	stringdir
 10905  0286  00A2               	movwf	___lldiv@divisor+2
 10906  0287  160A  118A  200A  120A  118A  	fcall	stringdir
 10907  028C  00A3               	movwf	___lldiv@divisor+3
 10908  028D  1683               	bsf	3,5	;RP0=1, select bank1
 10909  028E  1303               	bcf	3,6	;RP1=0, select bank1
 10910  028F  0842               	movf	(sprintf@val+3)^(0+128),w
 10911  0290  1283               	bcf	3,5	;RP0=0, select bank0
 10912  0291  1303               	bcf	3,6	;RP1=0, select bank0
 10913  0292  00A7               	movwf	___lldiv@dividend+3
 10914  0293  1683               	bsf	3,5	;RP0=1, select bank1
 10915  0294  1303               	bcf	3,6	;RP1=0, select bank1
 10916  0295  0841               	movf	(sprintf@val+2)^(0+128),w
 10917  0296  1283               	bcf	3,5	;RP0=0, select bank0
 10918  0297  1303               	bcf	3,6	;RP1=0, select bank0
 10919  0298  00A6               	movwf	___lldiv@dividend+2
 10920  0299  1683               	bsf	3,5	;RP0=1, select bank1
 10921  029A  1303               	bcf	3,6	;RP1=0, select bank1
 10922  029B  0840               	movf	(sprintf@val+1)^(0+128),w
 10923  029C  1283               	bcf	3,5	;RP0=0, select bank0
 10924  029D  1303               	bcf	3,6	;RP1=0, select bank0
 10925  029E  00A5               	movwf	___lldiv@dividend+1
 10926  029F  1683               	bsf	3,5	;RP0=1, select bank1
 10927  02A0  1303               	bcf	3,6	;RP1=0, select bank1
 10928  02A1  083F               	movf	sprintf@val^(0+128),w
 10929  02A2  1283               	bcf	3,5	;RP0=0, select bank0
 10930  02A3  1303               	bcf	3,6	;RP1=0, select bank0
 10931  02A4  00A4               	movwf	___lldiv@dividend
 10932  02A5  160A  158A  253A  120A  118A  	fcall	___lldiv
 10933  02AA  1283               	bcf	3,5	;RP0=0, select bank0
 10934  02AB  1303               	bcf	3,6	;RP1=0, select bank0
 10935  02AC  0823               	movf	?___lldiv+3,w
 10936  02AD  1683               	bsf	3,5	;RP0=1, select bank1
 10937  02AE  1303               	bcf	3,6	;RP1=0, select bank1
 10938  02AF  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
 10939  02B0  1283               	bcf	3,5	;RP0=0, select bank0
 10940  02B1  1303               	bcf	3,6	;RP1=0, select bank0
 10941  02B2  0822               	movf	?___lldiv+2,w
 10942  02B3  1683               	bsf	3,5	;RP0=1, select bank1
 10943  02B4  1303               	bcf	3,6	;RP1=0, select bank1
 10944  02B5  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
 10945  02B6  1283               	bcf	3,5	;RP0=0, select bank0
 10946  02B7  1303               	bcf	3,6	;RP1=0, select bank0
 10947  02B8  0821               	movf	?___lldiv+1,w
 10948  02B9  1683               	bsf	3,5	;RP0=1, select bank1
 10949  02BA  1303               	bcf	3,6	;RP1=0, select bank1
 10950  02BB  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
 10951  02BC  1283               	bcf	3,5	;RP0=0, select bank0
 10952  02BD  1303               	bcf	3,6	;RP1=0, select bank0
 10953  02BE  0820               	movf	?___lldiv,w
 10954  02BF  1683               	bsf	3,5	;RP0=1, select bank1
 10955  02C0  1303               	bcf	3,6	;RP1=0, select bank1
 10956  02C1  00C7               	movwf	sprintf@tmpval^(0+128)
 10957  02C2                     l4369:
 10958                           
 10959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10960  02C2  3000               	movlw	0
 10961  02C3  1283               	bcf	3,5	;RP0=0, select bank0
 10962  02C4  1303               	bcf	3,6	;RP1=0, select bank0
 10963  02C5  00A3               	movwf	___llmod@divisor+3
 10964  02C6  3000               	movlw	0
 10965  02C7  00A2               	movwf	___llmod@divisor+2
 10966  02C8  3000               	movlw	0
 10967  02C9  00A1               	movwf	___llmod@divisor+1
 10968  02CA  300A               	movlw	10
 10969  02CB  00A0               	movwf	___llmod@divisor
 10970  02CC  1683               	bsf	3,5	;RP0=1, select bank1
 10971  02CD  1303               	bcf	3,6	;RP1=0, select bank1
 10972  02CE  084A               	movf	(sprintf@tmpval+3)^(0+128),w
 10973  02CF  1283               	bcf	3,5	;RP0=0, select bank0
 10974  02D0  1303               	bcf	3,6	;RP1=0, select bank0
 10975  02D1  00A7               	movwf	___llmod@dividend+3
 10976  02D2  1683               	bsf	3,5	;RP0=1, select bank1
 10977  02D3  1303               	bcf	3,6	;RP1=0, select bank1
 10978  02D4  0849               	movf	(sprintf@tmpval+2)^(0+128),w
 10979  02D5  1283               	bcf	3,5	;RP0=0, select bank0
 10980  02D6  1303               	bcf	3,6	;RP1=0, select bank0
 10981  02D7  00A6               	movwf	___llmod@dividend+2
 10982  02D8  1683               	bsf	3,5	;RP0=1, select bank1
 10983  02D9  1303               	bcf	3,6	;RP1=0, select bank1
 10984  02DA  0848               	movf	(sprintf@tmpval+1)^(0+128),w
 10985  02DB  1283               	bcf	3,5	;RP0=0, select bank0
 10986  02DC  1303               	bcf	3,6	;RP1=0, select bank0
 10987  02DD  00A5               	movwf	___llmod@dividend+1
 10988  02DE  1683               	bsf	3,5	;RP0=1, select bank1
 10989  02DF  1303               	bcf	3,6	;RP1=0, select bank1
 10990  02E0  0847               	movf	sprintf@tmpval^(0+128),w
 10991  02E1  1283               	bcf	3,5	;RP0=0, select bank0
 10992  02E2  1303               	bcf	3,6	;RP1=0, select bank0
 10993  02E3  00A4               	movwf	___llmod@dividend
 10994  02E4  160A  158A  2423  120A  118A  	fcall	___llmod
 10995  02E9  1283               	bcf	3,5	;RP0=0, select bank0
 10996  02EA  1303               	bcf	3,6	;RP1=0, select bank0
 10997  02EB  0823               	movf	?___llmod+3,w
 10998  02EC  1683               	bsf	3,5	;RP0=1, select bank1
 10999  02ED  1303               	bcf	3,6	;RP1=0, select bank1
 11000  02EE  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
 11001  02EF  1283               	bcf	3,5	;RP0=0, select bank0
 11002  02F0  1303               	bcf	3,6	;RP1=0, select bank0
 11003  02F1  0822               	movf	?___llmod+2,w
 11004  02F2  1683               	bsf	3,5	;RP0=1, select bank1
 11005  02F3  1303               	bcf	3,6	;RP1=0, select bank1
 11006  02F4  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
 11007  02F5  1283               	bcf	3,5	;RP0=0, select bank0
 11008  02F6  1303               	bcf	3,6	;RP1=0, select bank0
 11009  02F7  0821               	movf	?___llmod+1,w
 11010  02F8  1683               	bsf	3,5	;RP0=1, select bank1
 11011  02F9  1303               	bcf	3,6	;RP1=0, select bank1
 11012  02FA  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
 11013  02FB  1283               	bcf	3,5	;RP0=0, select bank0
 11014  02FC  1303               	bcf	3,6	;RP1=0, select bank0
 11015  02FD  0820               	movf	?___llmod,w
 11016  02FE  1683               	bsf	3,5	;RP0=1, select bank1
 11017  02FF  1303               	bcf	3,6	;RP1=0, select bank1
 11018  0300  00C7               	movwf	sprintf@tmpval^(0+128)
 11019  0301                     l4371:
 11020                           
 11021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 11022  0301  0847               	movf	sprintf@tmpval^(0+128),w
 11023  0302  3E30               	addlw	48
 11024  0303  00B5               	movwf	??_sprintf^(0+128)
 11025  0304  0851               	movf	sprintf@sp^(0+128),w
 11026  0305  0084               	movwf	4
 11027  0306  0835               	movf	??_sprintf^(0+128),w
 11028  0307  1783               	bsf	3,7	;select IRP bank2
 11029  0308  0080               	movwf	0
 11030  0309  3001               	movlw	1
 11031  030A  00B5               	movwf	??_sprintf^(0+128)
 11032  030B  0835               	movf	??_sprintf^(0+128),w
 11033  030C  07D1               	addwf	sprintf@sp^(0+128),f
 11034  030D                     l382:	
 11035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 11036                           
 11037                           
 11038                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 11039  030D  3001               	movlw	1
 11040  030E  02D4               	subwf	sprintf@c^(0+128),f
 11041  030F  0A54               	incf	sprintf@c^(0+128),w
 11042  0310  1D03               	btfss	3,2
 11043  0311  2B13               	goto	u7571
 11044  0312  2B14               	goto	u7570
 11045  0313                     u7571:
 11046  0313  2A67               	goto	l4367
 11047  0314                     u7570:
 11048  0314  2B28               	goto	l4379
 11049  0315                     l4373:
 11050                           
 11051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 11052  0315  3030               	movlw	48
 11053  0316  1683               	bsf	3,5	;RP0=1, select bank1
 11054  0317  1303               	bcf	3,6	;RP1=0, select bank1
 11055  0318  00B5               	movwf	??_sprintf^(0+128)
 11056  0319  0851               	movf	sprintf@sp^(0+128),w
 11057  031A  0084               	movwf	4
 11058  031B  0835               	movf	??_sprintf^(0+128),w
 11059  031C  1783               	bsf	3,7	;select IRP bank2
 11060  031D  0080               	movwf	0
 11061  031E                     l4375:
 11062  031E  3001               	movlw	1
 11063  031F  00B5               	movwf	??_sprintf^(0+128)
 11064  0320  0835               	movf	??_sprintf^(0+128),w
 11065  0321  07D1               	addwf	sprintf@sp^(0+128),f
 11066  0322                     l4377:
 11067                           
 11068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 11069  0322  30FF               	movlw	255
 11070  0323  07CB               	addwf	sprintf@eexp^(0+128),f
 11071  0324  1803               	skipnc
 11072  0325  0ACC               	incf	(sprintf@eexp+1)^(0+128),f
 11073  0326  30FF               	movlw	255
 11074  0327  07CC               	addwf	(sprintf@eexp+1)^(0+128),f
 11075  0328                     l4379:
 11076                           
 11077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 11078  0328  084C               	movf	(sprintf@eexp+1)^(0+128),w
 11079  0329  3A80               	xorlw	128
 11080  032A  00FF               	movwf	btemp+1
 11081  032B  3080               	movlw	128
 11082  032C  027F               	subwf	btemp+1,w
 11083  032D  1D03               	skipz
 11084  032E  2B31               	goto	u7585
 11085  032F  3001               	movlw	1
 11086  0330  024B               	subwf	sprintf@eexp^(0+128),w
 11087  0331                     u7585:
 11088  0331  1803               	skipnc
 11089  0332  2B34               	goto	u7581
 11090  0333  2B35               	goto	u7580
 11091  0334                     u7581:
 11092  0334  2B15               	goto	l4373
 11093  0335                     u7580:
 11094  0335                     l4381:
 11095                           
 11096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11097  0335  1683               	bsf	3,5	;RP0=1, select bank1
 11098  0336  1303               	bcf	3,6	;RP1=0, select bank1
 11099  0337  0853               	movf	(sprintf@prec+1)^(0+128),w
 11100  0338  3A80               	xorlw	128
 11101  0339  00FF               	movwf	btemp+1
 11102  033A  3080               	movlw	128
 11103  033B  027F               	subwf	btemp+1,w
 11104  033C  1D03               	skipz
 11105  033D  2B40               	goto	u7595
 11106  033E  3009               	movlw	9
 11107  033F  0252               	subwf	sprintf@prec^(0+128),w
 11108  0340                     u7595:
 11109  0340  1C03               	skipc
 11110  0341  2B43               	goto	u7591
 11111  0342  2B44               	goto	u7590
 11112  0343                     u7591:
 11113  0343  2B4B               	goto	l4385
 11114  0344                     u7590:
 11115  0344                     l4383:
 11116                           
 11117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 11118  0344  3008               	movlw	8
 11119  0345  1683               	bsf	3,5	;RP0=1, select bank1
 11120  0346  1303               	bcf	3,6	;RP1=0, select bank1
 11121  0347  00B5               	movwf	??_sprintf^(0+128)
 11122  0348  0835               	movf	??_sprintf^(0+128),w
 11123  0349  00D4               	movwf	sprintf@c^(0+128)
 11124  034A  2B51               	goto	l389
 11125  034B                     l4385:
 11126                           
 11127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 11128  034B  1683               	bsf	3,5	;RP0=1, select bank1
 11129  034C  1303               	bcf	3,6	;RP1=0, select bank1
 11130  034D  0852               	movf	sprintf@prec^(0+128),w
 11131  034E  00B5               	movwf	??_sprintf^(0+128)
 11132  034F  0835               	movf	??_sprintf^(0+128),w
 11133  0350  00D4               	movwf	sprintf@c^(0+128)
 11134  0351                     l389:
 11135                           
 11136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 11137  0351  0854               	movf	sprintf@c^(0+128),w
 11138  0352  00B5               	movwf	??_sprintf^(0+128)
 11139  0353  01B6               	clrf	(??_sprintf^(0+128)+1)
 11140  0354  0835               	movf	??_sprintf^(0+128),w
 11141  0355  02D2               	subwf	sprintf@prec^(0+128),f
 11142  0356  0836               	movf	(??_sprintf+1)^(0+128),w
 11143  0357  1C03               	skipc
 11144  0358  03D3               	decf	(sprintf@prec+1)^(0+128),f
 11145  0359  02D3               	subwf	(sprintf@prec+1)^(0+128),f
 11146  035A                     l4387:
 11147                           
 11148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 11149  035A  0854               	movf	sprintf@c^(0+128),w
 11150  035B  1903               	btfsc	3,2
 11151  035C  2B5E               	goto	u7601
 11152  035D  2B5F               	goto	u7600
 11153  035E                     u7601:
 11154  035E  2B6A               	goto	l4393
 11155  035F                     u7600:
 11156  035F                     l4389:
 11157                           
 11158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 11159  035F  302E               	movlw	46
 11160  0360  00B5               	movwf	??_sprintf^(0+128)
 11161  0361  0851               	movf	sprintf@sp^(0+128),w
 11162  0362  0084               	movwf	4
 11163  0363  0835               	movf	??_sprintf^(0+128),w
 11164  0364  1783               	bsf	3,7	;select IRP bank2
 11165  0365  0080               	movwf	0
 11166  0366                     l4391:
 11167  0366  3001               	movlw	1
 11168  0367  00B5               	movwf	??_sprintf^(0+128)
 11169  0368  0835               	movf	??_sprintf^(0+128),w
 11170  0369  07D1               	addwf	sprintf@sp^(0+128),f
 11171  036A                     l4393:
 11172                           
 11173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11174  036A  0854               	movf	sprintf@c^(0+128),w
 11175  036B  120A  158A  249D  120A  118A  	fcall	_scale
 11176  0370  1283               	bcf	3,5	;RP0=0, select bank0
 11177  0371  1303               	bcf	3,6	;RP1=0, select bank0
 11178  0372  084B               	movf	?_scale+3,w
 11179  0373  1683               	bsf	3,5	;RP0=1, select bank1
 11180  0374  1303               	bcf	3,6	;RP1=0, select bank1
 11181  0375  00BD               	movwf	(_sprintf$1197+3)^(0+128)
 11182  0376  1283               	bcf	3,5	;RP0=0, select bank0
 11183  0377  1303               	bcf	3,6	;RP1=0, select bank0
 11184  0378  084A               	movf	?_scale+2,w
 11185  0379  1683               	bsf	3,5	;RP0=1, select bank1
 11186  037A  1303               	bcf	3,6	;RP1=0, select bank1
 11187  037B  00BC               	movwf	(_sprintf$1197+2)^(0+128)
 11188  037C  1283               	bcf	3,5	;RP0=0, select bank0
 11189  037D  1303               	bcf	3,6	;RP1=0, select bank0
 11190  037E  0849               	movf	?_scale+1,w
 11191  037F  1683               	bsf	3,5	;RP0=1, select bank1
 11192  0380  1303               	bcf	3,6	;RP1=0, select bank1
 11193  0381  00BB               	movwf	(_sprintf$1197+1)^(0+128)
 11194  0382  1283               	bcf	3,5	;RP0=0, select bank0
 11195  0383  1303               	bcf	3,6	;RP1=0, select bank0
 11196  0384  0848               	movf	?_scale,w
 11197  0385  1683               	bsf	3,5	;RP0=1, select bank1
 11198  0386  1303               	bcf	3,6	;RP1=0, select bank1
 11199  0387  00BA               	movwf	_sprintf$1197^(0+128)
 11200  0388                     l4395:
 11201                           
 11202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11203  0388  083D               	movf	(_sprintf$1197+3)^(0+128),w
 11204  0389  1283               	bcf	3,5	;RP0=0, select bank0
 11205  038A  1303               	bcf	3,6	;RP1=0, select bank0
 11206  038B  00B5               	movwf	___flmul@a+3
 11207  038C  1683               	bsf	3,5	;RP0=1, select bank1
 11208  038D  1303               	bcf	3,6	;RP1=0, select bank1
 11209  038E  083C               	movf	(_sprintf$1197+2)^(0+128),w
 11210  038F  1283               	bcf	3,5	;RP0=0, select bank0
 11211  0390  1303               	bcf	3,6	;RP1=0, select bank0
 11212  0391  00B4               	movwf	___flmul@a+2
 11213  0392  1683               	bsf	3,5	;RP0=1, select bank1
 11214  0393  1303               	bcf	3,6	;RP1=0, select bank1
 11215  0394  083B               	movf	(_sprintf$1197+1)^(0+128),w
 11216  0395  1283               	bcf	3,5	;RP0=0, select bank0
 11217  0396  1303               	bcf	3,6	;RP1=0, select bank0
 11218  0397  00B3               	movwf	___flmul@a+1
 11219  0398  1683               	bsf	3,5	;RP0=1, select bank1
 11220  0399  1303               	bcf	3,6	;RP1=0, select bank1
 11221  039A  083A               	movf	_sprintf$1197^(0+128),w
 11222  039B  1283               	bcf	3,5	;RP0=0, select bank0
 11223  039C  1303               	bcf	3,6	;RP1=0, select bank0
 11224  039D  00B2               	movwf	___flmul@a
 11225  039E  1683               	bsf	3,5	;RP0=1, select bank1
 11226  039F  1303               	bcf	3,6	;RP1=0, select bank1
 11227  03A0  0850               	movf	(sprintf@fval+3)^(0+128),w
 11228  03A1  1283               	bcf	3,5	;RP0=0, select bank0
 11229  03A2  1303               	bcf	3,6	;RP1=0, select bank0
 11230  03A3  00B1               	movwf	___flmul@b+3
 11231  03A4  1683               	bsf	3,5	;RP0=1, select bank1
 11232  03A5  1303               	bcf	3,6	;RP1=0, select bank1
 11233  03A6  084F               	movf	(sprintf@fval+2)^(0+128),w
 11234  03A7  1283               	bcf	3,5	;RP0=0, select bank0
 11235  03A8  1303               	bcf	3,6	;RP1=0, select bank0
 11236  03A9  00B0               	movwf	___flmul@b+2
 11237  03AA  1683               	bsf	3,5	;RP0=1, select bank1
 11238  03AB  1303               	bcf	3,6	;RP1=0, select bank1
 11239  03AC  084E               	movf	(sprintf@fval+1)^(0+128),w
 11240  03AD  1283               	bcf	3,5	;RP0=0, select bank0
 11241  03AE  1303               	bcf	3,6	;RP1=0, select bank0
 11242  03AF  00AF               	movwf	___flmul@b+1
 11243  03B0  1683               	bsf	3,5	;RP0=1, select bank1
 11244  03B1  1303               	bcf	3,6	;RP1=0, select bank1
 11245  03B2  084D               	movf	sprintf@fval^(0+128),w
 11246  03B3  1283               	bcf	3,5	;RP0=0, select bank0
 11247  03B4  1303               	bcf	3,6	;RP1=0, select bank0
 11248  03B5  00AE               	movwf	___flmul@b
 11249  03B6  120A  158A  213C  120A  118A  	fcall	___flmul
 11250  03BB  1283               	bcf	3,5	;RP0=0, select bank0
 11251  03BC  1303               	bcf	3,6	;RP1=0, select bank0
 11252  03BD  0831               	movf	?___flmul+3,w
 11253  03BE  00DE               	movwf	___fltol@f1+3
 11254  03BF  0830               	movf	?___flmul+2,w
 11255  03C0  00DD               	movwf	___fltol@f1+2
 11256  03C1  082F               	movf	?___flmul+1,w
 11257  03C2  00DC               	movwf	___fltol@f1+1
 11258  03C3  082E               	movf	?___flmul,w
 11259  03C4  00DB               	movwf	___fltol@f1
 11260  03C5  160A  158A  260B  120A  118A  	fcall	___fltol
 11261  03CA  1283               	bcf	3,5	;RP0=0, select bank0
 11262  03CB  1303               	bcf	3,6	;RP1=0, select bank0
 11263  03CC  085E               	movf	?___fltol+3,w
 11264  03CD  1683               	bsf	3,5	;RP0=1, select bank1
 11265  03CE  1303               	bcf	3,6	;RP1=0, select bank1
 11266  03CF  00C2               	movwf	(sprintf@val+3)^(0+128)
 11267  03D0  1283               	bcf	3,5	;RP0=0, select bank0
 11268  03D1  1303               	bcf	3,6	;RP1=0, select bank0
 11269  03D2  085D               	movf	?___fltol+2,w
 11270  03D3  1683               	bsf	3,5	;RP0=1, select bank1
 11271  03D4  1303               	bcf	3,6	;RP1=0, select bank1
 11272  03D5  00C1               	movwf	(sprintf@val+2)^(0+128)
 11273  03D6  1283               	bcf	3,5	;RP0=0, select bank0
 11274  03D7  1303               	bcf	3,6	;RP1=0, select bank0
 11275  03D8  085C               	movf	?___fltol+1,w
 11276  03D9  1683               	bsf	3,5	;RP0=1, select bank1
 11277  03DA  1303               	bcf	3,6	;RP1=0, select bank1
 11278  03DB  00C0               	movwf	(sprintf@val+1)^(0+128)
 11279  03DC  1283               	bcf	3,5	;RP0=0, select bank0
 11280  03DD  1303               	bcf	3,6	;RP1=0, select bank0
 11281  03DE  085B               	movf	?___fltol,w
 11282  03DF  1683               	bsf	3,5	;RP0=1, select bank1
 11283  03E0  1303               	bcf	3,6	;RP1=0, select bank1
 11284  03E1  00BF               	movwf	sprintf@val^(0+128)
 11285                           
 11286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11287  03E2  2CE4               	goto	l4405
 11288  03E3                     l4397:
 11289                           
 11290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11291  03E3  0854               	movf	sprintf@c^(0+128),w
 11292  03E4  00B5               	movwf	??_sprintf^(0+128)
 11293  03E5  3001               	movlw	1
 11294  03E6                     u7615:
 11295  03E6  1003               	clrc
 11296  03E7  0DB5               	rlf	??_sprintf^(0+128),f
 11297  03E8  3EFF               	addlw	-1
 11298  03E9  1D03               	skipz
 11299  03EA  2BE6               	goto	u7615
 11300  03EB  1003               	clrc
 11301  03EC  0D35               	rlf	??_sprintf^(0+128),w
 11302  03ED  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11303  03EE  0084               	movwf	4
 11304  03EF  160A  118A  200A  120A  118A  	fcall	stringdir
 11305  03F4  1283               	bcf	3,5	;RP0=0, select bank0
 11306  03F5  1303               	bcf	3,6	;RP1=0, select bank0
 11307  03F6  00A0               	movwf	___lldiv@divisor
 11308  03F7  160A  118A  200A  120A  118A  	fcall	stringdir
 11309  03FC  00A1               	movwf	___lldiv@divisor+1
 11310  03FD  160A  118A  200A  120A  118A  	fcall	stringdir
 11311  0402  00A2               	movwf	___lldiv@divisor+2
 11312  0403  160A  118A  200A  120A  118A  	fcall	stringdir
 11313  0408  00A3               	movwf	___lldiv@divisor+3
 11314  0409  1683               	bsf	3,5	;RP0=1, select bank1
 11315  040A  1303               	bcf	3,6	;RP1=0, select bank1
 11316  040B  0842               	movf	(sprintf@val+3)^(0+128),w
 11317  040C  1283               	bcf	3,5	;RP0=0, select bank0
 11318  040D  1303               	bcf	3,6	;RP1=0, select bank0
 11319  040E  00A7               	movwf	___lldiv@dividend+3
 11320  040F  1683               	bsf	3,5	;RP0=1, select bank1
 11321  0410  1303               	bcf	3,6	;RP1=0, select bank1
 11322  0411  0841               	movf	(sprintf@val+2)^(0+128),w
 11323  0412  1283               	bcf	3,5	;RP0=0, select bank0
 11324  0413  1303               	bcf	3,6	;RP1=0, select bank0
 11325  0414  00A6               	movwf	___lldiv@dividend+2
 11326  0415  1683               	bsf	3,5	;RP0=1, select bank1
 11327  0416  1303               	bcf	3,6	;RP1=0, select bank1
 11328  0417  0840               	movf	(sprintf@val+1)^(0+128),w
 11329  0418  1283               	bcf	3,5	;RP0=0, select bank0
 11330  0419  1303               	bcf	3,6	;RP1=0, select bank0
 11331  041A  00A5               	movwf	___lldiv@dividend+1
 11332  041B  1683               	bsf	3,5	;RP0=1, select bank1
 11333  041C  1303               	bcf	3,6	;RP1=0, select bank1
 11334  041D  083F               	movf	sprintf@val^(0+128),w
 11335  041E  1283               	bcf	3,5	;RP0=0, select bank0
 11336  041F  1303               	bcf	3,6	;RP1=0, select bank0
 11337  0420  00A4               	movwf	___lldiv@dividend
 11338  0421  160A  158A  253A  120A  118A  	fcall	___lldiv
 11339  0426  1283               	bcf	3,5	;RP0=0, select bank0
 11340  0427  1303               	bcf	3,6	;RP1=0, select bank0
 11341  0428  0823               	movf	?___lldiv+3,w
 11342  0429  1683               	bsf	3,5	;RP0=1, select bank1
 11343  042A  1303               	bcf	3,6	;RP1=0, select bank1
 11344  042B  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
 11345  042C  1283               	bcf	3,5	;RP0=0, select bank0
 11346  042D  1303               	bcf	3,6	;RP1=0, select bank0
 11347  042E  0822               	movf	?___lldiv+2,w
 11348  042F  1683               	bsf	3,5	;RP0=1, select bank1
 11349  0430  1303               	bcf	3,6	;RP1=0, select bank1
 11350  0431  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
 11351  0432  1283               	bcf	3,5	;RP0=0, select bank0
 11352  0433  1303               	bcf	3,6	;RP1=0, select bank0
 11353  0434  0821               	movf	?___lldiv+1,w
 11354  0435  1683               	bsf	3,5	;RP0=1, select bank1
 11355  0436  1303               	bcf	3,6	;RP1=0, select bank1
 11356  0437  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
 11357  0438  1283               	bcf	3,5	;RP0=0, select bank0
 11358  0439  1303               	bcf	3,6	;RP1=0, select bank0
 11359  043A  0820               	movf	?___lldiv,w
 11360  043B  1683               	bsf	3,5	;RP0=1, select bank1
 11361  043C  1303               	bcf	3,6	;RP1=0, select bank1
 11362  043D  00C7               	movwf	sprintf@tmpval^(0+128)
 11363  043E                     l4399:
 11364                           
 11365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11366  043E  3000               	movlw	0
 11367  043F  1283               	bcf	3,5	;RP0=0, select bank0
 11368  0440  1303               	bcf	3,6	;RP1=0, select bank0
 11369  0441  00A3               	movwf	___llmod@divisor+3
 11370  0442  3000               	movlw	0
 11371  0443  00A2               	movwf	___llmod@divisor+2
 11372  0444  3000               	movlw	0
 11373  0445  00A1               	movwf	___llmod@divisor+1
 11374  0446  300A               	movlw	10
 11375  0447  00A0               	movwf	___llmod@divisor
 11376  0448  1683               	bsf	3,5	;RP0=1, select bank1
 11377  0449  1303               	bcf	3,6	;RP1=0, select bank1
 11378  044A  084A               	movf	(sprintf@tmpval+3)^(0+128),w
 11379  044B  1283               	bcf	3,5	;RP0=0, select bank0
 11380  044C  1303               	bcf	3,6	;RP1=0, select bank0
 11381  044D  00A7               	movwf	___llmod@dividend+3
 11382  044E  1683               	bsf	3,5	;RP0=1, select bank1
 11383  044F  1303               	bcf	3,6	;RP1=0, select bank1
 11384  0450  0849               	movf	(sprintf@tmpval+2)^(0+128),w
 11385  0451  1283               	bcf	3,5	;RP0=0, select bank0
 11386  0452  1303               	bcf	3,6	;RP1=0, select bank0
 11387  0453  00A6               	movwf	___llmod@dividend+2
 11388  0454  1683               	bsf	3,5	;RP0=1, select bank1
 11389  0455  1303               	bcf	3,6	;RP1=0, select bank1
 11390  0456  0848               	movf	(sprintf@tmpval+1)^(0+128),w
 11391  0457  1283               	bcf	3,5	;RP0=0, select bank0
 11392  0458  1303               	bcf	3,6	;RP1=0, select bank0
 11393  0459  00A5               	movwf	___llmod@dividend+1
 11394  045A  1683               	bsf	3,5	;RP0=1, select bank1
 11395  045B  1303               	bcf	3,6	;RP1=0, select bank1
 11396  045C  0847               	movf	sprintf@tmpval^(0+128),w
 11397  045D  1283               	bcf	3,5	;RP0=0, select bank0
 11398  045E  1303               	bcf	3,6	;RP1=0, select bank0
 11399  045F  00A4               	movwf	___llmod@dividend
 11400  0460  160A  158A  2423  120A  118A  	fcall	___llmod
 11401  0465  1283               	bcf	3,5	;RP0=0, select bank0
 11402  0466  1303               	bcf	3,6	;RP1=0, select bank0
 11403  0467  0823               	movf	?___llmod+3,w
 11404  0468  1683               	bsf	3,5	;RP0=1, select bank1
 11405  0469  1303               	bcf	3,6	;RP1=0, select bank1
 11406  046A  00CA               	movwf	(sprintf@tmpval+3)^(0+128)
 11407  046B  1283               	bcf	3,5	;RP0=0, select bank0
 11408  046C  1303               	bcf	3,6	;RP1=0, select bank0
 11409  046D  0822               	movf	?___llmod+2,w
 11410  046E  1683               	bsf	3,5	;RP0=1, select bank1
 11411  046F  1303               	bcf	3,6	;RP1=0, select bank1
 11412  0470  00C9               	movwf	(sprintf@tmpval+2)^(0+128)
 11413  0471  1283               	bcf	3,5	;RP0=0, select bank0
 11414  0472  1303               	bcf	3,6	;RP1=0, select bank0
 11415  0473  0821               	movf	?___llmod+1,w
 11416  0474  1683               	bsf	3,5	;RP0=1, select bank1
 11417  0475  1303               	bcf	3,6	;RP1=0, select bank1
 11418  0476  00C8               	movwf	(sprintf@tmpval+1)^(0+128)
 11419  0477  1283               	bcf	3,5	;RP0=0, select bank0
 11420  0478  1303               	bcf	3,6	;RP1=0, select bank0
 11421  0479  0820               	movf	?___llmod,w
 11422  047A  1683               	bsf	3,5	;RP0=1, select bank1
 11423  047B  1303               	bcf	3,6	;RP1=0, select bank1
 11424  047C  00C7               	movwf	sprintf@tmpval^(0+128)
 11425  047D                     l4401:
 11426                           
 11427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11428  047D  0847               	movf	sprintf@tmpval^(0+128),w
 11429  047E  3E30               	addlw	48
 11430  047F  00B5               	movwf	??_sprintf^(0+128)
 11431  0480  0851               	movf	sprintf@sp^(0+128),w
 11432  0481  0084               	movwf	4
 11433  0482  0835               	movf	??_sprintf^(0+128),w
 11434  0483  1783               	bsf	3,7	;select IRP bank2
 11435  0484  0080               	movwf	0
 11436  0485  3001               	movlw	1
 11437  0486  00B5               	movwf	??_sprintf^(0+128)
 11438  0487  0835               	movf	??_sprintf^(0+128),w
 11439  0488  07D1               	addwf	sprintf@sp^(0+128),f
 11440  0489                     l4403:
 11441                           
 11442                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11443  0489  0854               	movf	sprintf@c^(0+128),w
 11444  048A  00B5               	movwf	??_sprintf^(0+128)
 11445  048B  3001               	movlw	1
 11446  048C                     u7625:
 11447  048C  1003               	clrc
 11448  048D  0DB5               	rlf	??_sprintf^(0+128),f
 11449  048E  3EFF               	addlw	-1
 11450  048F  1D03               	skipz
 11451  0490  2C8C               	goto	u7625
 11452  0491  1003               	clrc
 11453  0492  0D35               	rlf	??_sprintf^(0+128),w
 11454  0493  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11455  0494  0084               	movwf	4
 11456  0495  160A  118A  200A  120A  118A  	fcall	stringdir
 11457  049A  1283               	bcf	3,5	;RP0=0, select bank0
 11458  049B  1303               	bcf	3,6	;RP1=0, select bank0
 11459  049C  00A0               	movwf	___llmod@divisor
 11460  049D  160A  118A  200A  120A  118A  	fcall	stringdir
 11461  04A2  00A1               	movwf	___llmod@divisor+1
 11462  04A3  160A  118A  200A  120A  118A  	fcall	stringdir
 11463  04A8  00A2               	movwf	___llmod@divisor+2
 11464  04A9  160A  118A  200A  120A  118A  	fcall	stringdir
 11465  04AE  00A3               	movwf	___llmod@divisor+3
 11466  04AF  1683               	bsf	3,5	;RP0=1, select bank1
 11467  04B0  1303               	bcf	3,6	;RP1=0, select bank1
 11468  04B1  0842               	movf	(sprintf@val+3)^(0+128),w
 11469  04B2  1283               	bcf	3,5	;RP0=0, select bank0
 11470  04B3  1303               	bcf	3,6	;RP1=0, select bank0
 11471  04B4  00A7               	movwf	___llmod@dividend+3
 11472  04B5  1683               	bsf	3,5	;RP0=1, select bank1
 11473  04B6  1303               	bcf	3,6	;RP1=0, select bank1
 11474  04B7  0841               	movf	(sprintf@val+2)^(0+128),w
 11475  04B8  1283               	bcf	3,5	;RP0=0, select bank0
 11476  04B9  1303               	bcf	3,6	;RP1=0, select bank0
 11477  04BA  00A6               	movwf	___llmod@dividend+2
 11478  04BB  1683               	bsf	3,5	;RP0=1, select bank1
 11479  04BC  1303               	bcf	3,6	;RP1=0, select bank1
 11480  04BD  0840               	movf	(sprintf@val+1)^(0+128),w
 11481  04BE  1283               	bcf	3,5	;RP0=0, select bank0
 11482  04BF  1303               	bcf	3,6	;RP1=0, select bank0
 11483  04C0  00A5               	movwf	___llmod@dividend+1
 11484  04C1  1683               	bsf	3,5	;RP0=1, select bank1
 11485  04C2  1303               	bcf	3,6	;RP1=0, select bank1
 11486  04C3  083F               	movf	sprintf@val^(0+128),w
 11487  04C4  1283               	bcf	3,5	;RP0=0, select bank0
 11488  04C5  1303               	bcf	3,6	;RP1=0, select bank0
 11489  04C6  00A4               	movwf	___llmod@dividend
 11490  04C7  160A  158A  2423  120A  118A  	fcall	___llmod
 11491  04CC  1283               	bcf	3,5	;RP0=0, select bank0
 11492  04CD  1303               	bcf	3,6	;RP1=0, select bank0
 11493  04CE  0823               	movf	?___llmod+3,w
 11494  04CF  1683               	bsf	3,5	;RP0=1, select bank1
 11495  04D0  1303               	bcf	3,6	;RP1=0, select bank1
 11496  04D1  00C2               	movwf	(sprintf@val+3)^(0+128)
 11497  04D2  1283               	bcf	3,5	;RP0=0, select bank0
 11498  04D3  1303               	bcf	3,6	;RP1=0, select bank0
 11499  04D4  0822               	movf	?___llmod+2,w
 11500  04D5  1683               	bsf	3,5	;RP0=1, select bank1
 11501  04D6  1303               	bcf	3,6	;RP1=0, select bank1
 11502  04D7  00C1               	movwf	(sprintf@val+2)^(0+128)
 11503  04D8  1283               	bcf	3,5	;RP0=0, select bank0
 11504  04D9  1303               	bcf	3,6	;RP1=0, select bank0
 11505  04DA  0821               	movf	?___llmod+1,w
 11506  04DB  1683               	bsf	3,5	;RP0=1, select bank1
 11507  04DC  1303               	bcf	3,6	;RP1=0, select bank1
 11508  04DD  00C0               	movwf	(sprintf@val+1)^(0+128)
 11509  04DE  1283               	bcf	3,5	;RP0=0, select bank0
 11510  04DF  1303               	bcf	3,6	;RP1=0, select bank0
 11511  04E0  0820               	movf	?___llmod,w
 11512  04E1  1683               	bsf	3,5	;RP0=1, select bank1
 11513  04E2  1303               	bcf	3,6	;RP1=0, select bank1
 11514  04E3  00BF               	movwf	sprintf@val^(0+128)
 11515  04E4                     l4405:
 11516                           
 11517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11518  04E4  3001               	movlw	1
 11519  04E5  02D4               	subwf	sprintf@c^(0+128),f
 11520  04E6  0A54               	incf	sprintf@c^(0+128),w
 11521  04E7  1D03               	btfss	3,2
 11522  04E8  2CEA               	goto	u7631
 11523  04E9  2CEB               	goto	u7630
 11524  04EA                     u7631:
 11525  04EA  2BE3               	goto	l4397
 11526  04EB                     u7630:
 11527  04EB  2CFD               	goto	l4413
 11528  04EC                     l4407:
 11529                           
 11530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11531  04EC  3030               	movlw	48
 11532  04ED  00B5               	movwf	??_sprintf^(0+128)
 11533  04EE  0851               	movf	sprintf@sp^(0+128),w
 11534  04EF  0084               	movwf	4
 11535  04F0  0835               	movf	??_sprintf^(0+128),w
 11536  04F1  1783               	bsf	3,7	;select IRP bank2
 11537  04F2  0080               	movwf	0
 11538  04F3                     l4409:
 11539  04F3  3001               	movlw	1
 11540  04F4  00B5               	movwf	??_sprintf^(0+128)
 11541  04F5  0835               	movf	??_sprintf^(0+128),w
 11542  04F6  07D1               	addwf	sprintf@sp^(0+128),f
 11543  04F7                     l4411:
 11544                           
 11545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11546  04F7  30FF               	movlw	255
 11547  04F8  07D2               	addwf	sprintf@prec^(0+128),f
 11548  04F9  1803               	skipnc
 11549  04FA  0AD3               	incf	(sprintf@prec+1)^(0+128),f
 11550  04FB  30FF               	movlw	255
 11551  04FC  07D3               	addwf	(sprintf@prec+1)^(0+128),f
 11552  04FD                     l4413:
 11553                           
 11554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11555  04FD  0852               	movf	sprintf@prec^(0+128),w
 11556  04FE  0453               	iorwf	(sprintf@prec+1)^(0+128),w
 11557  04FF  1D03               	btfss	3,2
 11558  0500  2D02               	goto	u7641
 11559  0501  2D03               	goto	u7640
 11560  0502                     u7641:
 11561  0502  2CEC               	goto	l4407
 11562  0503                     u7640:
 11563  0503  2DC9               	goto	l4461
 11564  0504                     l4415:
 11565                           
 11566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 11567  0504  0852               	movf	sprintf@prec^(0+128),w
 11568  0505  0453               	iorwf	(sprintf@prec+1)^(0+128),w
 11569  0506  1D03               	btfss	3,2
 11570  0507  2D09               	goto	u7651
 11571  0508  2D0A               	goto	u7650
 11572  0509                     u7651:
 11573  0509  2D18               	goto	l397
 11574  050A                     u7650:
 11575  050A                     l4417:
 11576  050A  0842               	movf	(sprintf@val+3)^(0+128),w
 11577  050B  0441               	iorwf	(sprintf@val+2)^(0+128),w
 11578  050C  0440               	iorwf	(sprintf@val+1)^(0+128),w
 11579  050D  043F               	iorwf	sprintf@val^(0+128),w
 11580  050E  1D03               	skipz
 11581  050F  2D11               	goto	u7661
 11582  0510  2D12               	goto	u7660
 11583  0511                     u7661:
 11584  0511  2D18               	goto	l397
 11585  0512                     u7660:
 11586  0512                     l4419:
 11587                           
 11588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11589  0512  3001               	movlw	1
 11590  0513  07D2               	addwf	sprintf@prec^(0+128),f
 11591  0514  1803               	skipnc
 11592  0515  0AD3               	incf	(sprintf@prec+1)^(0+128),f
 11593  0516  3000               	movlw	0
 11594  0517  07D3               	addwf	(sprintf@prec+1)^(0+128),f
 11595  0518                     l397:
 11596                           
 11597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11598  0518  0853               	movf	(sprintf@prec+1)^(0+128),w
 11599  0519  3A80               	xorlw	128
 11600  051A  3C80               	sublw	128
 11601  051B  1D03               	skipz
 11602  051C  2D1F               	goto	u7675
 11603  051D  0852               	movf	sprintf@prec^(0+128),w
 11604  051E  0254               	subwf	sprintf@c^(0+128),w
 11605  051F                     u7675:
 11606  051F  1803               	skipnc
 11607  0520  2D22               	goto	u7671
 11608  0521  2D23               	goto	u7670
 11609  0522                     u7671:
 11610  0522  2D2A               	goto	l4423
 11611  0523                     u7670:
 11612  0523                     l4421:
 11613                           
 11614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11615  0523  1683               	bsf	3,5	;RP0=1, select bank1
 11616  0524  1303               	bcf	3,6	;RP1=0, select bank1
 11617  0525  0852               	movf	sprintf@prec^(0+128),w
 11618  0526  00B5               	movwf	??_sprintf^(0+128)
 11619  0527  0835               	movf	??_sprintf^(0+128),w
 11620  0528  00D4               	movwf	sprintf@c^(0+128)
 11621  0529  2D42               	goto	l4427
 11622  052A                     l4423:
 11623  052A  1683               	bsf	3,5	;RP0=1, select bank1
 11624  052B  1303               	bcf	3,6	;RP1=0, select bank1
 11625  052C  0853               	movf	(sprintf@prec+1)^(0+128),w
 11626  052D  3A80               	xorlw	128
 11627  052E  00B5               	movwf	??_sprintf^(0+128)
 11628  052F  3080               	movlw	128
 11629  0530  0235               	subwf	??_sprintf^(0+128),w
 11630  0531  1D03               	skipz
 11631  0532  2D35               	goto	u7685
 11632  0533  0854               	movf	sprintf@c^(0+128),w
 11633  0534  0252               	subwf	sprintf@prec^(0+128),w
 11634  0535                     u7685:
 11635  0535  1803               	skipnc
 11636  0536  2D38               	goto	u7681
 11637  0537  2D39               	goto	u7680
 11638  0538                     u7681:
 11639  0538  2D42               	goto	l4427
 11640  0539                     u7680:
 11641  0539                     l4425:
 11642                           
 11643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11644  0539  1683               	bsf	3,5	;RP0=1, select bank1
 11645  053A  1303               	bcf	3,6	;RP1=0, select bank1
 11646  053B  0854               	movf	sprintf@c^(0+128),w
 11647  053C  00B5               	movwf	??_sprintf^(0+128)
 11648  053D  01B6               	clrf	(??_sprintf^(0+128)+1)
 11649  053E  0835               	movf	??_sprintf^(0+128),w
 11650  053F  00D2               	movwf	sprintf@prec^(0+128)
 11651  0540  0836               	movf	(??_sprintf+1)^(0+128),w
 11652  0541  00D3               	movwf	(sprintf@prec+1)^(0+128)
 11653  0542                     l4427:
 11654                           
 11655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11656  0542  1683               	bsf	3,5	;RP0=1, select bank1
 11657  0543  1303               	bcf	3,6	;RP1=0, select bank1
 11658  0544  0845               	movf	sprintf@width^(0+128),w
 11659  0545  0446               	iorwf	(sprintf@width+1)^(0+128),w
 11660  0546  1903               	btfsc	3,2
 11661  0547  2D49               	goto	u7691
 11662  0548  2D4A               	goto	u7690
 11663  0549                     u7691:
 11664  0549  2D5C               	goto	l4433
 11665  054A                     u7690:
 11666  054A                     l4429:
 11667  054A  3003               	movlw	3
 11668  054B  0543               	andwf	sprintf@flag^(0+128),w
 11669  054C  00B5               	movwf	??_sprintf^(0+128)
 11670  054D  3000               	movlw	0
 11671  054E  0544               	andwf	(sprintf@flag+1)^(0+128),w
 11672  054F  00B6               	movwf	(??_sprintf+1)^(0+128)
 11673  0550  0835               	movf	??_sprintf^(0+128),w
 11674  0551  0436               	iorwf	(??_sprintf^(0+128)+1),w
 11675  0552  1903               	btfsc	3,2
 11676  0553  2D55               	goto	u7701
 11677  0554  2D56               	goto	u7700
 11678  0555                     u7701:
 11679  0555  2D5C               	goto	l4433
 11680  0556                     u7700:
 11681  0556                     l4431:
 11682                           
 11683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11684  0556  30FF               	movlw	255
 11685  0557  07C5               	addwf	sprintf@width^(0+128),f
 11686  0558  1803               	skipnc
 11687  0559  0AC6               	incf	(sprintf@width+1)^(0+128),f
 11688  055A  30FF               	movlw	255
 11689  055B  07C6               	addwf	(sprintf@width+1)^(0+128),f
 11690  055C                     l4433:
 11691                           
 11692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11693  055C  1F44               	btfss	(sprintf@flag+1)^(0+128),6
 11694  055D  2D5F               	goto	u7711
 11695  055E  2D60               	goto	u7710
 11696  055F                     u7711:
 11697  055F  2D7B               	goto	l4441
 11698  0560                     u7710:
 11699  0560                     l4435:
 11700                           
 11701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11702  0560  0853               	movf	(sprintf@prec+1)^(0+128),w
 11703  0561  3A80               	xorlw	128
 11704  0562  00B5               	movwf	??_sprintf^(0+128)
 11705  0563  0846               	movf	(sprintf@width+1)^(0+128),w
 11706  0564  3A80               	xorlw	128
 11707  0565  0235               	subwf	??_sprintf^(0+128),w
 11708  0566  1D03               	skipz
 11709  0567  2D6A               	goto	u7725
 11710  0568  0845               	movf	sprintf@width^(0+128),w
 11711  0569  0252               	subwf	sprintf@prec^(0+128),w
 11712  056A                     u7725:
 11713  056A  1803               	skipnc
 11714  056B  2D6D               	goto	u7721
 11715  056C  2D6E               	goto	u7720
 11716  056D                     u7721:
 11717  056D  2D77               	goto	l4439
 11718  056E                     u7720:
 11719  056E                     l4437:
 11720                           
 11721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11722  056E  1683               	bsf	3,5	;RP0=1, select bank1
 11723  056F  1303               	bcf	3,6	;RP1=0, select bank1
 11724  0570  0852               	movf	sprintf@prec^(0+128),w
 11725  0571  02C5               	subwf	sprintf@width^(0+128),f
 11726  0572  0853               	movf	(sprintf@prec+1)^(0+128),w
 11727  0573  1C03               	skipc
 11728  0574  03C6               	decf	(sprintf@width+1)^(0+128),f
 11729  0575  02C6               	subwf	(sprintf@width+1)^(0+128),f
 11730  0576  2D7B               	goto	l4441
 11731  0577                     l4439:
 11732                           
 11733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11734  0577  1683               	bsf	3,5	;RP0=1, select bank1
 11735  0578  1303               	bcf	3,6	;RP1=0, select bank1
 11736  0579  01C5               	clrf	sprintf@width^(0+128)
 11737  057A  01C6               	clrf	(sprintf@width+1)^(0+128)
 11738  057B                     l4441:
 11739                           
 11740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11741  057B  0846               	movf	(sprintf@width+1)^(0+128),w
 11742  057C  3A80               	xorlw	128
 11743  057D  3C80               	sublw	128
 11744  057E  1D03               	skipz
 11745  057F  2D82               	goto	u7735
 11746  0580  0845               	movf	sprintf@width^(0+128),w
 11747  0581  0254               	subwf	sprintf@c^(0+128),w
 11748  0582                     u7735:
 11749  0582  1803               	skipnc
 11750  0583  2D85               	goto	u7731
 11751  0584  2D86               	goto	u7730
 11752  0585                     u7731:
 11753  0585  2D92               	goto	l4445
 11754  0586                     u7730:
 11755  0586                     l4443:
 11756                           
 11757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11758  0586  1683               	bsf	3,5	;RP0=1, select bank1
 11759  0587  1303               	bcf	3,6	;RP1=0, select bank1
 11760  0588  0854               	movf	sprintf@c^(0+128),w
 11761  0589  00B5               	movwf	??_sprintf^(0+128)
 11762  058A  01B6               	clrf	(??_sprintf^(0+128)+1)
 11763  058B  0835               	movf	??_sprintf^(0+128),w
 11764  058C  02C5               	subwf	sprintf@width^(0+128),f
 11765  058D  0836               	movf	(??_sprintf+1)^(0+128),w
 11766  058E  1C03               	skipc
 11767  058F  03C6               	decf	(sprintf@width+1)^(0+128),f
 11768  0590  02C6               	subwf	(sprintf@width+1)^(0+128),f
 11769  0591  2D96               	goto	l4447
 11770  0592                     l4445:
 11771                           
 11772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11773  0592  1683               	bsf	3,5	;RP0=1, select bank1
 11774  0593  1303               	bcf	3,6	;RP1=0, select bank1
 11775  0594  01C5               	clrf	sprintf@width^(0+128)
 11776  0595  01C6               	clrf	(sprintf@width+1)^(0+128)
 11777  0596                     l4447:
 11778                           
 11779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11780  0596  0845               	movf	sprintf@width^(0+128),w
 11781  0597  0446               	iorwf	(sprintf@width+1)^(0+128),w
 11782  0598  1903               	btfsc	3,2
 11783  0599  2D9B               	goto	u7741
 11784  059A  2D9C               	goto	u7740
 11785  059B                     u7741:
 11786  059B  2DB3               	goto	l4455
 11787  059C                     u7740:
 11788  059C                     l4449:
 11789                           
 11790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11791  059C  3020               	movlw	32
 11792  059D  00B5               	movwf	??_sprintf^(0+128)
 11793  059E  0851               	movf	sprintf@sp^(0+128),w
 11794  059F  0084               	movwf	4
 11795  05A0  0835               	movf	??_sprintf^(0+128),w
 11796  05A1  1783               	bsf	3,7	;select IRP bank2
 11797  05A2  0080               	movwf	0
 11798  05A3                     l4451:
 11799  05A3  3001               	movlw	1
 11800  05A4  00B5               	movwf	??_sprintf^(0+128)
 11801  05A5  0835               	movf	??_sprintf^(0+128),w
 11802  05A6  07D1               	addwf	sprintf@sp^(0+128),f
 11803  05A7                     l4453:
 11804  05A7  30FF               	movlw	255
 11805  05A8  07C5               	addwf	sprintf@width^(0+128),f
 11806  05A9  1803               	skipnc
 11807  05AA  0AC6               	incf	(sprintf@width+1)^(0+128),f
 11808  05AB  30FF               	movlw	255
 11809  05AC  07C6               	addwf	(sprintf@width+1)^(0+128),f
 11810  05AD  0845               	movf	sprintf@width^(0+128),w
 11811  05AE  0446               	iorwf	(sprintf@width+1)^(0+128),w
 11812  05AF  1D03               	btfss	3,2
 11813  05B0  2DB2               	goto	u7751
 11814  05B1  2DB3               	goto	u7750
 11815  05B2                     u7751:
 11816  05B2  2D9C               	goto	l4449
 11817  05B3                     u7750:
 11818  05B3                     l4455:
 11819                           
 11820                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11821  05B3  3003               	movlw	3
 11822  05B4  0543               	andwf	sprintf@flag^(0+128),w
 11823  05B5  00B5               	movwf	??_sprintf^(0+128)
 11824  05B6  3000               	movlw	0
 11825  05B7  0544               	andwf	(sprintf@flag+1)^(0+128),w
 11826  05B8  00B6               	movwf	(??_sprintf+1)^(0+128)
 11827  05B9  0835               	movf	??_sprintf^(0+128),w
 11828  05BA  0436               	iorwf	(??_sprintf^(0+128)+1),w
 11829  05BB  1903               	btfsc	3,2
 11830  05BC  2DBE               	goto	u7761
 11831  05BD  2DBF               	goto	u7760
 11832  05BE                     u7761:
 11833  05BE  2DC9               	goto	l4461
 11834  05BF                     u7760:
 11835  05BF                     l4457:
 11836                           
 11837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11838  05BF  302D               	movlw	45
 11839  05C0  00B5               	movwf	??_sprintf^(0+128)
 11840  05C1  0851               	movf	sprintf@sp^(0+128),w
 11841  05C2  0084               	movwf	4
 11842  05C3  0835               	movf	??_sprintf^(0+128),w
 11843  05C4  1783               	bsf	3,7	;select IRP bank2
 11844  05C5  0080               	movwf	0
 11845  05C6  160A  118A  2CCB   	goto	l4217
 11846  05C9                     l4461:
 11847                           
 11848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11849  05C9  3001               	movlw	1
 11850  05CA  07A8               	addwf	sprintf@f^(0+128),f
 11851  05CB  30FF               	movlw	-1
 11852  05CC  0728               	addwf	sprintf@f^(0+128),w
 11853  05CD  0084               	movwf	4
 11854  05CE  160A  118A  200A  120A  118A  	fcall	stringdir
 11855  05D3  00B5               	movwf	??_sprintf^(0+128)
 11856  05D4  0835               	movf	??_sprintf^(0+128),w
 11857  05D5  00D4               	movwf	sprintf@c^(0+128)
 11858  05D6  0854               	movf	sprintf@c^(0+128),w
 11859  05D7  1D03               	btfss	3,2
 11860  05D8  2DDA               	goto	u7771
 11861  05D9  2DDD               	goto	u7770
 11862  05DA                     u7771:
 11863  05DA  160A  118A  2CBE   	goto	l4213
 11864  05DD                     u7770:
 11865  05DD                     l4463:
 11866                           
 11867                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11868  05DD  0851               	movf	sprintf@sp^(0+128),w
 11869  05DE  0084               	movwf	4
 11870  05DF  1783               	bsf	3,7	;select IRP bank2
 11871  05E0  0180               	clrf	0
 11872  05E1                     l412:
 11873  05E1  0008               	return
 11874  05E2                     __end_of_sprintf:
=======
  1650  14FF  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1651  1500  00AD               	movwf	??_sprintf^(0+128)
  1652  1501  082D               	movf	??_sprintf^(0+128),w
  1653  1502  00B6               	movwf	sprintf@ap^(0+128)
  1654  1503                     L1:
  1655                           
  1656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1657  1503  120A  118A  2D9F   	goto	l4270
  1658  1506                     l4022:
  1659                           
  1660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1661  1506  3025               	movlw	37
  1662  1507  064C               	xorwf	sprintf@c^(0+128),w
  1663  1508  1903               	btfsc	3,2
  1664  1509  2D0B               	goto	u6821
  1665  150A  2D0C               	goto	u6820
  1666  150B                     u6821:
  1667  150B  2D18               	goto	l4028
  1668  150C                     u6820:
  1669  150C                     l4024:
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1672  150C  084C               	movf	sprintf@c^(0+128),w
  1673  150D  00AD               	movwf	??_sprintf^(0+128)
  1674  150E  0849               	movf	sprintf@sp^(0+128),w
  1675  150F  0084               	movwf	4
  1676  1510  082D               	movf	??_sprintf^(0+128),w
  1677  1511  1383               	bcf	3,7	;select IRP bank0
  1678  1512  0080               	movwf	0
  1679  1513                     l4026:
  1680  1513  3001               	movlw	1
  1681  1514  00AD               	movwf	??_sprintf^(0+128)
  1682  1515  082D               	movf	??_sprintf^(0+128),w
  1683  1516  07C9               	addwf	sprintf@sp^(0+128),f
  1684                           
  1685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1686  1517  2D03               	goto	L1
  1687  1518                     l4028:
  1688                           
  1689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1690  1518  01BD               	clrf	sprintf@width^(0+128)
  1691  1519  01BE               	clrf	(sprintf@width+1)^(0+128)
  1692                           
  1693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1694  151A  01BB               	clrf	sprintf@flag^(0+128)
  1695  151B  01BC               	clrf	(sprintf@flag+1)^(0+128)
  1696  151C                     l4030:
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1699  151C  0828               	movf	sprintf@f^(0+128),w
  1700  151D  0084               	movwf	4
  1701  151E  160A  158A  200A  160A  118A  	fcall	stringdir
  1702  1523  160A  158A  22D0  160A  118A  	fcall	_isdigit
  1703  1528  1C03               	btfss	3,0
  1704  1529  2D2B               	goto	u6831
  1705  152A  2D2C               	goto	u6830
  1706  152B                     u6831:
  1707  152B  2D6C               	goto	l4042
  1708  152C                     u6830:
  1709  152C                     l4032:
  1710                           
  1711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1712  152C  1683               	bsf	3,5	;RP0=1, select bank1
  1713  152D  1303               	bcf	3,6	;RP1=0, select bank1
  1714  152E  01BD               	clrf	sprintf@width^(0+128)
  1715  152F  01BE               	clrf	(sprintf@width+1)^(0+128)
  1716  1530                     l4034:
  1717                           
  1718                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1719  1530  300A               	movlw	10
  1720  1531  00F3               	movwf	___wmul@multiplier
  1721  1532  3000               	movlw	0
  1722  1533  00F4               	movwf	___wmul@multiplier+1
  1723  1534  1683               	bsf	3,5	;RP0=1, select bank1
  1724  1535  1303               	bcf	3,6	;RP1=0, select bank1
  1725  1536  083E               	movf	(sprintf@width+1)^(0+128),w
  1726  1537  00F6               	movwf	___wmul@multiplicand+1
  1727  1538  083D               	movf	sprintf@width^(0+128),w
  1728  1539  00F5               	movwf	___wmul@multiplicand
  1729  153A  160A  158A  2363  160A  118A  	fcall	___wmul
  1730  153F  0874               	movf	?___wmul+1,w
  1731  1540  1683               	bsf	3,5	;RP0=1, select bank1
  1732  1541  1303               	bcf	3,6	;RP1=0, select bank1
  1733  1542  00BE               	movwf	(sprintf@width+1)^(0+128)
  1734  1543  0873               	movf	?___wmul,w
  1735  1544  00BD               	movwf	sprintf@width^(0+128)
  1736  1545                     l4036:
  1737                           
  1738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1739  1545  0828               	movf	sprintf@f^(0+128),w
  1740  1546  0084               	movwf	4
  1741  1547  160A  158A  200A  160A  118A  	fcall	stringdir
  1742  154C  3ED0               	addlw	208
  1743  154D  00AD               	movwf	??_sprintf^(0+128)
  1744  154E  30FF               	movlw	255
  1745  154F  1803               	skipnc
  1746  1550  3000               	movlw	0
  1747  1551  00AE               	movwf	(??_sprintf^(0+128)+1)
  1748  1552  082D               	movf	??_sprintf^(0+128),w
  1749  1553  07BD               	addwf	sprintf@width^(0+128),f
  1750  1554  1803               	skipnc
  1751  1555  0ABE               	incf	(sprintf@width+1)^(0+128),f
  1752  1556  082E               	movf	(??_sprintf+1)^(0+128),w
  1753  1557  07BE               	addwf	(sprintf@width+1)^(0+128),f
  1754  1558                     l4038:
  1755  1558  3001               	movlw	1
  1756  1559  00AD               	movwf	??_sprintf^(0+128)
  1757  155A  082D               	movf	??_sprintf^(0+128),w
  1758  155B  07A8               	addwf	sprintf@f^(0+128),f
  1759  155C                     l4040:
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1762  155C  0828               	movf	sprintf@f^(0+128),w
  1763  155D  0084               	movwf	4
  1764  155E  160A  158A  200A  160A  118A  	fcall	stringdir
  1765  1563  160A  158A  22D0  160A  118A  	fcall	_isdigit
  1766  1568  1803               	btfsc	3,0
  1767  1569  2D6B               	goto	u6841
  1768  156A  2D6C               	goto	u6840
  1769  156B                     u6841:
  1770  156B  2D30               	goto	l4034
  1771  156C                     u6840:
  1772  156C                     l4042:
  1773                           
  1774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1775  156C  1683               	bsf	3,5	;RP0=1, select bank1
  1776  156D  1303               	bcf	3,6	;RP1=0, select bank1
  1777  156E  0828               	movf	sprintf@f^(0+128),w
  1778  156F  0084               	movwf	4
  1779  1570  160A  158A  200A  160A  118A  	fcall	stringdir
  1780  1575  3A2E               	xorlw	46
  1781  1576  1D03               	skipz
  1782  1577  2D79               	goto	u6851
  1783  1578  2D7A               	goto	u6850
  1784  1579                     u6851:
  1785  1579  2DBF               	goto	l4058
  1786  157A                     u6850:
  1787  157A                     l4044:
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1790  157A  173C               	bsf	(sprintf@flag^(0+128)+1),6
  1791  157B                     l4046:
  1792                           
  1793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1794  157B  3001               	movlw	1
  1795  157C  00AD               	movwf	??_sprintf^(0+128)
  1796  157D  082D               	movf	??_sprintf^(0+128),w
  1797  157E  07A8               	addwf	sprintf@f^(0+128),f
  1798  157F                     l4048:
  1799                           
  1800                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1801  157F  01CA               	clrf	sprintf@prec^(0+128)
  1802  1580  01CB               	clrf	(sprintf@prec+1)^(0+128)
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1805  1581  2DAE               	goto	l4056
  1806  1582                     l4050:
  1807                           
  1808                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1809  1582  300A               	movlw	10
  1810  1583  00F3               	movwf	___wmul@multiplier
  1811  1584  3000               	movlw	0
  1812  1585  00F4               	movwf	___wmul@multiplier+1
  1813  1586  1683               	bsf	3,5	;RP0=1, select bank1
  1814  1587  1303               	bcf	3,6	;RP1=0, select bank1
  1815  1588  084B               	movf	(sprintf@prec+1)^(0+128),w
  1816  1589  00F6               	movwf	___wmul@multiplicand+1
  1817  158A  084A               	movf	sprintf@prec^(0+128),w
  1818  158B  00F5               	movwf	___wmul@multiplicand
  1819  158C  160A  158A  2363  160A  118A  	fcall	___wmul
  1820  1591  0874               	movf	?___wmul+1,w
  1821  1592  1683               	bsf	3,5	;RP0=1, select bank1
  1822  1593  1303               	bcf	3,6	;RP1=0, select bank1
  1823  1594  00CB               	movwf	(sprintf@prec+1)^(0+128)
  1824  1595  0873               	movf	?___wmul,w
  1825  1596  00CA               	movwf	sprintf@prec^(0+128)
  1826  1597                     l4052:
  1827                           
  1828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1829  1597  0828               	movf	sprintf@f^(0+128),w
  1830  1598  0084               	movwf	4
  1831  1599  160A  158A  200A  160A  118A  	fcall	stringdir
  1832  159E  3ED0               	addlw	208
  1833  159F  00AD               	movwf	??_sprintf^(0+128)
  1834  15A0  30FF               	movlw	255
  1835  15A1  1803               	skipnc
  1836  15A2  3000               	movlw	0
  1837  15A3  00AE               	movwf	(??_sprintf^(0+128)+1)
  1838  15A4  082D               	movf	??_sprintf^(0+128),w
  1839  15A5  07CA               	addwf	sprintf@prec^(0+128),f
  1840  15A6  1803               	skipnc
  1841  15A7  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  1842  15A8  082E               	movf	(??_sprintf+1)^(0+128),w
  1843  15A9  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  1844  15AA                     l4054:
  1845  15AA  3001               	movlw	1
  1846  15AB  00AD               	movwf	??_sprintf^(0+128)
  1847  15AC  082D               	movf	??_sprintf^(0+128),w
  1848  15AD  07A8               	addwf	sprintf@f^(0+128),f
  1849  15AE                     l4056:
  1850                           
  1851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1852  15AE  0828               	movf	sprintf@f^(0+128),w
  1853  15AF  0084               	movwf	4
  1854  15B0  160A  158A  200A  160A  118A  	fcall	stringdir
  1855  15B5  160A  158A  22D0  160A  118A  	fcall	_isdigit
  1856  15BA  1803               	btfsc	3,0
  1857  15BB  2DBD               	goto	u6861
  1858  15BC  2DBE               	goto	u6860
  1859  15BD                     u6861:
  1860  15BD  2D82               	goto	l4050
  1861  15BE                     u6860:
  1862  15BE  2DC5               	goto	l4064
  1863  15BF                     l4058:
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1866  15BF  01CA               	clrf	sprintf@prec^(0+128)
  1867  15C0  01CB               	clrf	(sprintf@prec+1)^(0+128)
  1868  15C1                     l4060:
  1869                           
  1870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1871  15C1  163C               	bsf	(sprintf@flag^(0+128)+1),4
  1872  15C2  2DC5               	goto	l4064
  1873  15C3                     l344:	
  1874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1875                           
  1876                           
  1877                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1878  15C3  153C               	bsf	(sprintf@flag^(0+128)+1),2
  1879                           
  1880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1881  15C4  2DE1               	goto	l4066
  1882  15C5                     l4064:
  1883  15C5  3001               	movlw	1
  1884  15C6  1683               	bsf	3,5	;RP0=1, select bank1
  1885  15C7  1303               	bcf	3,6	;RP1=0, select bank1
  1886  15C8  07A8               	addwf	sprintf@f^(0+128),f
  1887  15C9  30FF               	movlw	-1
  1888  15CA  0728               	addwf	sprintf@f^(0+128),w
  1889  15CB  0084               	movwf	4
  1890  15CC  160A  158A  200A  160A  118A  	fcall	stringdir
  1891  15D1  00CC               	movwf	sprintf@c^(0+128)
  1892  15D2  00AD               	movwf	??_sprintf^(0+128)
  1893  15D3  01AE               	clrf	(??_sprintf^(0+128)+1)
  1894                           
  1895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1896                           ; Switch size 1, requested type "simple"
  1897                           ; Number of cases is 1, Range of values is 0 to 0
  1898                           ; switch strategies available:
  1899                           ; Name         Instructions Cycles
  1900                           ; simple_byte            4     3 (average)
  1901                           ; direct_byte           11     8 (fixed)
  1902                           ; jumptable            260     6 (fixed)
  1903                           ;	Chosen strategy is simple_byte
  1904  15D4  082E               	movf	(??_sprintf+1)^(0+128),w
  1905  15D5  3A00               	xorlw	0	; case 0
  1906  15D6  1903               	skipnz
  1907  15D7  2DD9               	goto	l4362
  1908  15D8  2D03               	goto	L1
  1909  15D9                     l4362:
  1910                           
  1911                           ; Switch size 1, requested type "simple"
  1912                           ; Number of cases is 2, Range of values is 0 to 102
  1913                           ; switch strategies available:
  1914                           ; Name         Instructions Cycles
  1915                           ; simple_byte            7     4 (average)
  1916                           ; jumptable            260     6 (fixed)
  1917                           ;	Chosen strategy is simple_byte
  1918  15D9  082D               	movf	??_sprintf^(0+128),w
  1919  15DA  3A00               	xorlw	0	; case 0
  1920  15DB  1903               	skipnz
  1921  15DC  2FFD               	goto	L3
  1922  15DD  3A66               	xorlw	102	; case 102
  1923  15DE  1903               	skipnz
  1924  15DF  2DC3               	goto	l344
  1925  15E0  2D03               	goto	L1
  1926  15E1                     l4066:
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1929  15E1  3000               	movlw	0
  1930  15E2  053B               	andwf	sprintf@flag^(0+128),w
  1931  15E3  00AD               	movwf	??_sprintf^(0+128)
  1932  15E4  3007               	movlw	7
  1933  15E5  053C               	andwf	(sprintf@flag+1)^(0+128),w
  1934  15E6  00AE               	movwf	(??_sprintf+1)^(0+128)
  1935  15E7  082D               	movf	??_sprintf^(0+128),w
  1936  15E8  042E               	iorwf	(??_sprintf^(0+128)+1),w
  1937  15E9  1903               	btfsc	3,2
  1938  15EA  2DEC               	goto	u6871
  1939  15EB  2DEF               	goto	u6870
  1940  15EC                     u6871:
  1941  15EC  120A  118A  2CDA   	goto	l4224
  1942  15EF                     u6870:
  1943  15EF                     l4068:
  1944                           
  1945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1946  15EF  1E3C               	btfss	(sprintf@flag+1)^(0+128),4
  1947  15F0  2DF2               	goto	u6881
  1948  15F1  2DF3               	goto	u6880
  1949  15F2                     u6881:
  1950  15F2  2DF7               	goto	l4072
  1951  15F3                     u6880:
  1952  15F3                     l4070:
  1953                           
  1954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1955  15F3  3006               	movlw	6
  1956  15F4  00CA               	movwf	sprintf@prec^(0+128)
  1957  15F5  3000               	movlw	0
  1958  15F6  00CB               	movwf	(sprintf@prec^(0+128)+1)
  1959  15F7                     l4072:
  1960                           
  1961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1962  15F7  0836               	movf	sprintf@ap^(0+128),w
  1963  15F8  0084               	movwf	4
  1964  15F9  1383               	bcf	3,7	;select IRP bank0
  1965  15FA  0800               	movf	0,w
  1966  15FB  00C5               	movwf	sprintf@fval^(0+128)
  1967  15FC  0A84               	incf	4,f
  1968  15FD  0800               	movf	0,w
  1969  15FE  00C6               	movwf	(sprintf@fval+1)^(0+128)
  1970  15FF  0A84               	incf	4,f
  1971  1600  0800               	movf	0,w
  1972  1601  00C7               	movwf	(sprintf@fval+2)^(0+128)
  1973  1602  0A84               	incf	4,f
  1974  1603  0800               	movf	0,w
  1975  1604  00C8               	movwf	(sprintf@fval+3)^(0+128)
  1976  1605                     l4074:
  1977  1605  3004               	movlw	4
  1978  1606  00AD               	movwf	??_sprintf^(0+128)
  1979  1607  082D               	movf	??_sprintf^(0+128),w
  1980  1608  07B6               	addwf	sprintf@ap^(0+128),f
  1981  1609                     l4076:
  1982                           
  1983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1984  1609  0848               	movf	(sprintf@fval+3)^(0+128),w
  1985  160A  1283               	bcf	3,5	;RP0=0, select bank0
  1986  160B  1303               	bcf	3,6	;RP1=0, select bank0
  1987  160C  00A3               	movwf	___flge@ff1+3
  1988  160D  1683               	bsf	3,5	;RP0=1, select bank1
  1989  160E  1303               	bcf	3,6	;RP1=0, select bank1
  1990  160F  0847               	movf	(sprintf@fval+2)^(0+128),w
  1991  1610  1283               	bcf	3,5	;RP0=0, select bank0
  1992  1611  1303               	bcf	3,6	;RP1=0, select bank0
  1993  1612  00A2               	movwf	___flge@ff1+2
  1994  1613  1683               	bsf	3,5	;RP0=1, select bank1
  1995  1614  1303               	bcf	3,6	;RP1=0, select bank1
  1996  1615  0846               	movf	(sprintf@fval+1)^(0+128),w
  1997  1616  1283               	bcf	3,5	;RP0=0, select bank0
  1998  1617  1303               	bcf	3,6	;RP1=0, select bank0
  1999  1618  00A1               	movwf	___flge@ff1+1
  2000  1619  1683               	bsf	3,5	;RP0=1, select bank1
  2001  161A  1303               	bcf	3,6	;RP1=0, select bank1
  2002  161B  0845               	movf	sprintf@fval^(0+128),w
  2003  161C  1283               	bcf	3,5	;RP0=0, select bank0
  2004  161D  1303               	bcf	3,6	;RP1=0, select bank0
  2005  161E  00A0               	movwf	___flge@ff1
  2006  161F  3000               	movlw	0
  2007  1620  00A7               	movwf	___flge@ff2+3
  2008  1621  3000               	movlw	0
  2009  1622  00A6               	movwf	___flge@ff2+2
  2010  1623  3000               	movlw	0
  2011  1624  00A5               	movwf	___flge@ff2+1
  2012  1625  3000               	movlw	0
  2013  1626  00A4               	movwf	___flge@ff2
  2014  1627  160A  158A  275C  160A  118A  	fcall	___flge
  2015  162C  1803               	btfsc	3,0
  2016  162D  2E2F               	goto	u6891
  2017  162E  2E30               	goto	u6890
  2018  162F                     u6891:
  2019  162F  2E4D               	goto	l4082
  2020  1630                     u6890:
  2021  1630                     l4078:
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2024  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2025  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2026  1632  0848               	movf	(sprintf@fval+3)^(0+128),w
  2027  1633  00F6               	movwf	___flneg@f1+3
  2028  1634  0847               	movf	(sprintf@fval+2)^(0+128),w
  2029  1635  00F5               	movwf	___flneg@f1+2
  2030  1636  0846               	movf	(sprintf@fval+1)^(0+128),w
  2031  1637  00F4               	movwf	___flneg@f1+1
  2032  1638  0845               	movf	sprintf@fval^(0+128),w
  2033  1639  00F3               	movwf	___flneg@f1
  2034  163A  120A  158A  2000  160A  118A  	fcall	___flneg
  2035  163F  0876               	movf	?___flneg+3,w
  2036  1640  1683               	bsf	3,5	;RP0=1, select bank1
  2037  1641  1303               	bcf	3,6	;RP1=0, select bank1
  2038  1642  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2039  1643  0875               	movf	?___flneg+2,w
  2040  1644  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2041  1645  0874               	movf	?___flneg+1,w
  2042  1646  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2043  1647  0873               	movf	?___flneg,w
  2044  1648  00C5               	movwf	sprintf@fval^(0+128)
  2045  1649                     l4080:
  2046                           
  2047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2048  1649  3003               	movlw	3
  2049  164A  04BB               	iorwf	sprintf@flag^(0+128),f
  2050  164B  3000               	movlw	0
  2051  164C  04BC               	iorwf	(sprintf@flag+1)^(0+128),f
  2052  164D                     l4082:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2055  164D  1683               	bsf	3,5	;RP0=1, select bank1
  2056  164E  1303               	bcf	3,6	;RP1=0, select bank1
  2057  164F  01C3               	clrf	sprintf@eexp^(0+128)
  2058  1650  01C4               	clrf	(sprintf@eexp+1)^(0+128)
  2059  1651                     l4084:
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2062  1651  0848               	movf	(sprintf@fval+3)^(0+128),w
  2063  1652  1283               	bcf	3,5	;RP0=0, select bank0
  2064  1653  1303               	bcf	3,6	;RP1=0, select bank0
  2065  1654  00A3               	movwf	___fleq@ff1+3
  2066  1655  1683               	bsf	3,5	;RP0=1, select bank1
  2067  1656  1303               	bcf	3,6	;RP1=0, select bank1
  2068  1657  0847               	movf	(sprintf@fval+2)^(0+128),w
  2069  1658  1283               	bcf	3,5	;RP0=0, select bank0
  2070  1659  1303               	bcf	3,6	;RP1=0, select bank0
  2071  165A  00A2               	movwf	___fleq@ff1+2
  2072  165B  1683               	bsf	3,5	;RP0=1, select bank1
  2073  165C  1303               	bcf	3,6	;RP1=0, select bank1
  2074  165D  0846               	movf	(sprintf@fval+1)^(0+128),w
  2075  165E  1283               	bcf	3,5	;RP0=0, select bank0
  2076  165F  1303               	bcf	3,6	;RP1=0, select bank0
  2077  1660  00A1               	movwf	___fleq@ff1+1
  2078  1661  1683               	bsf	3,5	;RP0=1, select bank1
  2079  1662  1303               	bcf	3,6	;RP1=0, select bank1
  2080  1663  0845               	movf	sprintf@fval^(0+128),w
  2081  1664  1283               	bcf	3,5	;RP0=0, select bank0
  2082  1665  1303               	bcf	3,6	;RP1=0, select bank0
  2083  1666  00A0               	movwf	___fleq@ff1
  2084  1667  3000               	movlw	0
  2085  1668  00A7               	movwf	___fleq@ff2+3
  2086  1669  3000               	movlw	0
  2087  166A  00A6               	movwf	___fleq@ff2+2
  2088  166B  3000               	movlw	0
  2089  166C  00A5               	movwf	___fleq@ff2+1
  2090  166D  3000               	movlw	0
  2091  166E  00A4               	movwf	___fleq@ff2
  2092  166F  160A  158A  2529  160A  118A  	fcall	___fleq
  2093  1674  1803               	btfsc	3,0
  2094  1675  2E77               	goto	u6901
  2095  1676  2E78               	goto	u6900
  2096  1677                     u6901:
  2097  1677  2F94               	goto	l4110
  2098  1678                     u6900:
  2099  1678                     l4086:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2102  1678  1003               	clrc
  2103  1679  1683               	bsf	3,5	;RP0=1, select bank1
  2104  167A  1303               	bcf	3,6	;RP1=0, select bank1
  2105  167B  0D47               	rlf	(sprintf@fval+2)^(0+128),w
  2106  167C  0D48               	rlf	(sprintf@fval+3)^(0+128),w
  2107  167D  3E82               	addlw	130
  2108  167E  00C3               	movwf	sprintf@eexp^(0+128)
  2109  167F  30FF               	movlw	255
  2110  1680  1803               	skipnc
  2111  1681  3000               	movlw	0
  2112  1682  00C4               	movwf	(sprintf@eexp^(0+128)+1)
  2113  1683                     l4088:
  2114                           
  2115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2116  1683  30FF               	movlw	255
  2117  1684  07C3               	addwf	sprintf@eexp^(0+128),f
  2118  1685  1803               	skipnc
  2119  1686  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2120  1687  30FF               	movlw	255
  2121  1688  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2122  1689                     l4090:
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2125  1689  3003               	movlw	3
  2126  168A  00F3               	movwf	___wmul@multiplier
  2127  168B  3000               	movlw	0
  2128  168C  00F4               	movwf	___wmul@multiplier+1
  2129  168D  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2130  168E  00F6               	movwf	___wmul@multiplicand+1
  2131  168F  0843               	movf	sprintf@eexp^(0+128),w
  2132  1690  00F5               	movwf	___wmul@multiplicand
  2133  1691  160A  158A  2363  160A  118A  	fcall	___wmul
  2134  1696  0874               	movf	?___wmul+1,w
  2135  1697  1683               	bsf	3,5	;RP0=1, select bank1
  2136  1698  1303               	bcf	3,6	;RP1=0, select bank1
  2137  1699  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2138  169A  0873               	movf	?___wmul,w
  2139  169B  00C3               	movwf	sprintf@eexp^(0+128)
  2140  169C                     l4092:
  2141                           
  2142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2143  169C  300A               	movlw	10
  2144  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2145  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2146  169F  00A0               	movwf	___awdiv@divisor
  2147  16A0  3000               	movlw	0
  2148  16A1  00A1               	movwf	___awdiv@divisor+1
  2149  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  2150  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  2151  16A4  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2152  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2153  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2154  16A7  00A3               	movwf	___awdiv@dividend+1
  2155  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2156  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2157  16AA  0843               	movf	sprintf@eexp^(0+128),w
  2158  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  2159  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  2160  16AD  00A2               	movwf	___awdiv@dividend
  2161  16AE  120A  158A  200B  160A  118A  	fcall	___awdiv
  2162  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  2163  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  2164  16B5  0821               	movf	?___awdiv+1,w
  2165  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  2166  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2167  16B8  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2168  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2169  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2170  16BB  0820               	movf	?___awdiv,w
  2171  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2172  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2173  16BE  00C3               	movwf	sprintf@eexp^(0+128)
  2174  16BF                     l4094:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2177  16BF  1FC4               	btfss	(sprintf@eexp+1)^(0+128),7
  2178  16C0  2EC2               	goto	u6911
  2179  16C1  2EC3               	goto	u6910
  2180  16C2                     u6911:
  2181  16C2  2EC9               	goto	l4098
  2182  16C3                     u6910:
  2183  16C3                     l4096:
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2186  16C3  30FF               	movlw	255
  2187  16C4  07C3               	addwf	sprintf@eexp^(0+128),f
  2188  16C5  1803               	skipnc
  2189  16C6  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2190  16C7  30FF               	movlw	255
  2191  16C8  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2192  16C9                     l4098:
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2195  16C9  0343               	decf	sprintf@eexp^(0+128),w
  2196  16CA  3AFF               	xorlw	255
  2197  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  2198  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2199  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2200  16D2  0847               	movf	?_scale+3,w
  2201  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  2202  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  2203  16D5  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2204  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2205  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2206  16D8  0846               	movf	?_scale+2,w
  2207  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  2208  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  2209  16DB  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2210  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  2211  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  2212  16DE  0845               	movf	?_scale+1,w
  2213  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  2214  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  2215  16E1  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2216  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2217  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2218  16E4  0844               	movf	?_scale,w
  2219  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  2220  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  2221  16E7  00BF               	movwf	sprintf@tmpval^(0+128)
  2222  16E8                     l4100:
  2223                           
  2224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2225  16E8  0848               	movf	(sprintf@fval+3)^(0+128),w
  2226  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  2227  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  2228  16EB  00AD               	movwf	___flmul@b+3
  2229  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  2230  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  2231  16EE  0847               	movf	(sprintf@fval+2)^(0+128),w
  2232  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2233  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2234  16F1  00AC               	movwf	___flmul@b+2
  2235  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  2236  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  2237  16F4  0846               	movf	(sprintf@fval+1)^(0+128),w
  2238  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  2239  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  2240  16F7  00AB               	movwf	___flmul@b+1
  2241  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  2242  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  2243  16FA  0845               	movf	sprintf@fval^(0+128),w
  2244  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  2245  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  2246  16FD  00AA               	movwf	___flmul@b
  2247  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  2248  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  2249  1700  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2250  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2251  1702  1303               	bcf	3,6	;RP1=0, select bank0
  2252  1703  00B1               	movwf	___flmul@a+3
  2253  1704  1683               	bsf	3,5	;RP0=1, select bank1
  2254  1705  1303               	bcf	3,6	;RP1=0, select bank1
  2255  1706  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2256  1707  1283               	bcf	3,5	;RP0=0, select bank0
  2257  1708  1303               	bcf	3,6	;RP1=0, select bank0
  2258  1709  00B0               	movwf	___flmul@a+2
  2259  170A  1683               	bsf	3,5	;RP0=1, select bank1
  2260  170B  1303               	bcf	3,6	;RP1=0, select bank1
  2261  170C  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2262  170D  1283               	bcf	3,5	;RP0=0, select bank0
  2263  170E  1303               	bcf	3,6	;RP1=0, select bank0
  2264  170F  00AF               	movwf	___flmul@a+1
  2265  1710  1683               	bsf	3,5	;RP0=1, select bank1
  2266  1711  1303               	bcf	3,6	;RP1=0, select bank1
  2267  1712  083F               	movf	sprintf@tmpval^(0+128),w
  2268  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2269  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2270  1715  00AE               	movwf	___flmul@a
  2271  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  2272  171B  1283               	bcf	3,5	;RP0=0, select bank0
  2273  171C  1303               	bcf	3,6	;RP1=0, select bank0
  2274  171D  082D               	movf	?___flmul+3,w
  2275  171E  1683               	bsf	3,5	;RP0=1, select bank1
  2276  171F  1303               	bcf	3,6	;RP1=0, select bank1
  2277  1720  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2278  1721  1283               	bcf	3,5	;RP0=0, select bank0
  2279  1722  1303               	bcf	3,6	;RP1=0, select bank0
  2280  1723  082C               	movf	?___flmul+2,w
  2281  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2282  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2283  1726  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2284  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2285  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2286  1729  082B               	movf	?___flmul+1,w
  2287  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2288  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2289  172C  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2290  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2291  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2292  172F  082A               	movf	?___flmul,w
  2293  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2294  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2295  1732  00BF               	movwf	sprintf@tmpval^(0+128)
  2296  1733                     l4102:
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2299  1733  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2300  1734  1283               	bcf	3,5	;RP0=0, select bank0
  2301  1735  1303               	bcf	3,6	;RP1=0, select bank0
  2302  1736  00A3               	movwf	___flge@ff1+3
  2303  1737  1683               	bsf	3,5	;RP0=1, select bank1
  2304  1738  1303               	bcf	3,6	;RP1=0, select bank1
  2305  1739  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2306  173A  1283               	bcf	3,5	;RP0=0, select bank0
  2307  173B  1303               	bcf	3,6	;RP1=0, select bank0
  2308  173C  00A2               	movwf	___flge@ff1+2
  2309  173D  1683               	bsf	3,5	;RP0=1, select bank1
  2310  173E  1303               	bcf	3,6	;RP1=0, select bank1
  2311  173F  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2312  1740  1283               	bcf	3,5	;RP0=0, select bank0
  2313  1741  1303               	bcf	3,6	;RP1=0, select bank0
  2314  1742  00A1               	movwf	___flge@ff1+1
  2315  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2316  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2317  1745  083F               	movf	sprintf@tmpval^(0+128),w
  2318  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2319  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2320  1748  00A0               	movwf	___flge@ff1
  2321  1749  303F               	movlw	63
  2322  174A  00A7               	movwf	___flge@ff2+3
  2323  174B  3080               	movlw	128
  2324  174C  00A6               	movwf	___flge@ff2+2
  2325  174D  3000               	movlw	0
  2326  174E  00A5               	movwf	___flge@ff2+1
  2327  174F  3000               	movlw	0
  2328  1750  00A4               	movwf	___flge@ff2
  2329  1751  160A  158A  275C  160A  118A  	fcall	___flge
  2330  1756  1803               	btfsc	3,0
  2331  1757  2F59               	goto	u6921
  2332  1758  2F5A               	goto	u6920
  2333  1759                     u6921:
  2334  1759  2F63               	goto	l4106
  2335  175A                     u6920:
  2336  175A                     l4104:
  2337                           
  2338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2339  175A  30FF               	movlw	255
  2340  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2341  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2342  175D  07C3               	addwf	sprintf@eexp^(0+128),f
  2343  175E  1803               	skipnc
  2344  175F  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2345  1760  30FF               	movlw	255
  2346  1761  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2347  1762  2F94               	goto	l4110
  2348  1763                     l4106:
  2349  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2350  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2351  1765  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2352  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2353  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2354  1768  00A3               	movwf	___flge@ff1+3
  2355  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2356  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2357  176B  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2358  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2359  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2360  176E  00A2               	movwf	___flge@ff1+2
  2361  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2362  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2363  1771  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2364  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2365  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2366  1774  00A1               	movwf	___flge@ff1+1
  2367  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2368  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2369  1777  083F               	movf	sprintf@tmpval^(0+128),w
  2370  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2371  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2372  177A  00A0               	movwf	___flge@ff1
  2373  177B  3041               	movlw	65
  2374  177C  00A7               	movwf	___flge@ff2+3
  2375  177D  3020               	movlw	32
  2376  177E  00A6               	movwf	___flge@ff2+2
  2377  177F  3000               	movlw	0
  2378  1780  00A5               	movwf	___flge@ff2+1
  2379  1781  3000               	movlw	0
  2380  1782  00A4               	movwf	___flge@ff2
  2381  1783  160A  158A  275C  160A  118A  	fcall	___flge
  2382  1788  1C03               	btfss	3,0
  2383  1789  2F8B               	goto	u6931
  2384  178A  2F8C               	goto	u6930
  2385  178B                     u6931:
  2386  178B  2F94               	goto	l4110
  2387  178C                     u6930:
  2388  178C                     l4108:
  2389                           
  2390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2391  178C  3001               	movlw	1
  2392  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2393  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2394  178F  07C3               	addwf	sprintf@eexp^(0+128),f
  2395  1790  1803               	skipnc
  2396  1791  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2397  1792  3000               	movlw	0
  2398  1793  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2399  1794                     l4110:
  2400                           
  2401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2402  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2403  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2404  1796  084B               	movf	(sprintf@prec+1)^(0+128),w
  2405  1797  3A80               	xorlw	128
  2406  1798  00FF               	movwf	btemp+1
  2407  1799  3080               	movlw	128
  2408  179A  027F               	subwf	btemp+1,w
  2409  179B  1D03               	skipz
  2410  179C  2F9F               	goto	u6945
  2411  179D  300D               	movlw	13
  2412  179E  024A               	subwf	sprintf@prec^(0+128),w
  2413  179F                     u6945:
  2414  179F  1803               	skipnc
  2415  17A0  2FA2               	goto	u6941
  2416  17A1  2FA3               	goto	u6940
  2417  17A2                     u6941:
  2418  17A2  2FEA               	goto	l4114
  2419  17A3                     u6940:
  2420  17A3                     l4112:
  2421                           
  2422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2423  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2424  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2425  17A5  084A               	movf	sprintf@prec^(0+128),w
  2426  17A6  120A  118A  25B8  160A  118A  	fcall	_fround
  2427  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2428  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2429  17AD  0847               	movf	?_fround+3,w
  2430  17AE  00DB               	movwf	___fladd@b+3
  2431  17AF  0846               	movf	?_fround+2,w
  2432  17B0  00DA               	movwf	___fladd@b+2
  2433  17B1  0845               	movf	?_fround+1,w
  2434  17B2  00D9               	movwf	___fladd@b+1
  2435  17B3  0844               	movf	?_fround,w
  2436  17B4  00D8               	movwf	___fladd@b
  2437  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2438  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2439  17B7  0848               	movf	(sprintf@fval+3)^(0+128),w
  2440  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2441  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2442  17BA  00DF               	movwf	___fladd@a+3
  2443  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2444  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2445  17BD  0847               	movf	(sprintf@fval+2)^(0+128),w
  2446  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2447  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2448  17C0  00DE               	movwf	___fladd@a+2
  2449  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2450  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2451  17C3  0846               	movf	(sprintf@fval+1)^(0+128),w
  2452  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2453  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2454  17C6  00DD               	movwf	___fladd@a+1
  2455  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2456  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2457  17C9  0845               	movf	sprintf@fval^(0+128),w
  2458  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2459  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2460  17CC  00DC               	movwf	___fladd@a
  2461  17CD  160A  118A  2274  160A  118A  	fcall	___fladd
  2462  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2463  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2464  17D4  085B               	movf	?___fladd+3,w
  2465  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2466  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2467  17D7  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2468  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2469  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2470  17DA  085A               	movf	?___fladd+2,w
  2471  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2472  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2473  17DD  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2474  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2475  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2476  17E0  0859               	movf	?___fladd+1,w
  2477  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2478  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2479  17E3  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2480  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2481  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2482  17E6  0858               	movf	?___fladd,w
  2483  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2484  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2485  17E9  00C5               	movwf	sprintf@fval^(0+128)
  2486  17EA                     l4114:
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2489  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2490  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2491  17EC  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2492  17ED  3A80               	xorlw	128
  2493  17EE  00FF               	movwf	btemp+1
  2494  17EF  3080               	movlw	128
  2495  17F0  027F               	subwf	btemp+1,w
  2496  17F1  1D03               	skipz
  2497  17F2  2FF5               	goto	u6955
  2498  17F3  300A               	movlw	10
  2499  17F4  0243               	subwf	sprintf@eexp^(0+128),w
  2500  17F5                     u6955:
  2501  17F5  1803               	skipnc
  2502  17F6  2FFA               	goto	u6951
  2503  17F7  120A  118A  2820   	goto	u6950
  2504  17FA                     u6951:
  2505  17FA  120A  118A  287F   	goto	l4122
  2506  17FD                     L3:
  2507  17FD                     L2:
  2508  17FD  120A  118A  2DB3   	ljmp	l4272
  2509                           
  2510                           	psect	text2
  2511  0C9D                     __ptext2:	
  2512 ;; *************** function _scale *****************
  2513 ;; Defined at:
  2514 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  scl             1    wreg     char 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  scl             1   54[BANK0 ] char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  4   36[BANK0 ] char 
  2521 ;; Registers used:
  2522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2528 ;;      Params:         0       4       0       0       0
  2529 ;;      Locals:         0       5       0       0       0
  2530 ;;      Temps:          0      10       0       0       0
  2531 ;;      Totals:         0      19       0       0       0
  2532 ;;Total ram usage:       19 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    4
  2535 ;; This function calls:
  2536 ;;		___awdiv
  2537 ;;		___awmod
  2538 ;;		___flmul
  2539 ;; This function is called by:
  2540 ;;		_sprintf
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           
  2545                           ;psect for function _scale
  2546  0C9D                     _scale:
  2547                           
  2548                           ;incstack = 0
  2549                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2550                           ;scale@scl stored from wreg
  2551  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2552  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2553  0C9F  00D6               	movwf	scale@scl
  2554  0CA0                     l3718:
  2555                           
  2556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2557  0CA0  1FD6               	btfss	scale@scl,7
  2558  0CA1  2CA3               	goto	u5971
  2559  0CA2  2CA4               	goto	u5970
  2560  0CA3                     u5971:
  2561  0CA3  2E53               	goto	l3740
  2562  0CA4                     u5970:
  2563  0CA4                     l3720:
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2566  0CA4  09D6               	comf	scale@scl,f
  2567  0CA5  0AD6               	incf	scale@scl,f
  2568  0CA6                     l3722:
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2571  0CA6  0856               	movf	scale@scl,w
  2572  0CA7  3A80               	xorlw	128
  2573  0CA8  3E12               	addlw	-238
  2574  0CA9  1C03               	skipc
  2575  0CAA  2CAC               	goto	u5981
  2576  0CAB  2CAD               	goto	u5980
  2577  0CAC                     u5981:
  2578  0CAC  2D97               	goto	l3730
  2579  0CAD                     u5980:
  2580  0CAD                     l3724:
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2583  0CAD  300A               	movlw	10
  2584  0CAE  00A0               	movwf	___awdiv@divisor
  2585  0CAF  3000               	movlw	0
  2586  0CB0  00A1               	movwf	___awdiv@divisor+1
  2587  0CB1  0856               	movf	scale@scl,w
  2588  0CB2  00F5               	movwf	___awmod@dividend
  2589  0CB3  01F6               	clrf	___awmod@dividend+1
  2590  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2591  0CB5  03F6               	decf	___awmod@dividend+1,f
  2592  0CB6  3064               	movlw	100
  2593  0CB7  00F3               	movwf	___awmod@divisor
  2594  0CB8  3000               	movlw	0
  2595  0CB9  00F4               	movwf	___awmod@divisor+1
  2596  0CBA  160A  158A  261F  120A  158A  	fcall	___awmod
  2597  0CBF  0874               	movf	?___awmod+1,w
  2598  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0CC2  00A3               	movwf	___awdiv@dividend+1
  2601  0CC3  0873               	movf	?___awmod,w
  2602  0CC4  00A2               	movwf	___awdiv@dividend
  2603  0CC5  120A  158A  200B  120A  158A  	fcall	___awdiv
  2604  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2605  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2606  0CCC  0820               	movf	?___awdiv,w
  2607  0CCD  00C8               	movwf	??_scale
  2608  0CCE  3001               	movlw	1
  2609  0CCF                     u5995:
  2610  0CCF  1003               	clrc
  2611  0CD0  0DC8               	rlf	??_scale,f
  2612  0CD1  3EFF               	addlw	-1
  2613  0CD2  1D03               	skipz
  2614  0CD3  2CCF               	goto	u5995
  2615  0CD4  1003               	clrc
  2616  0CD5  0D48               	rlf	??_scale,w
  2617  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2618  0CD7  0084               	movwf	4
  2619  0CD8  160A  158A  200A  120A  158A  	fcall	stringdir
  2620  0CDD  00C9               	movwf	??_scale+1
  2621  0CDE  160A  158A  200A  120A  158A  	fcall	stringdir
  2622  0CE3  00CA               	movwf	??_scale+2
  2623  0CE4  160A  158A  200A  120A  158A  	fcall	stringdir
  2624  0CE9  00CB               	movwf	??_scale+3
  2625  0CEA  160A  158A  200A  120A  158A  	fcall	stringdir
  2626  0CEF  00CC               	movwf	??_scale+4
  2627  0CF0  084C               	movf	??_scale+4,w
  2628  0CF1  00AD               	movwf	___flmul@b+3
  2629  0CF2  084B               	movf	??_scale+3,w
  2630  0CF3  00AC               	movwf	___flmul@b+2
  2631  0CF4  084A               	movf	??_scale+2,w
  2632  0CF5  00AB               	movwf	___flmul@b+1
  2633  0CF6  0849               	movf	??_scale+1,w
  2634  0CF7  00AA               	movwf	___flmul@b
  2635  0CF8  3064               	movlw	100
  2636  0CF9  00A0               	movwf	___awdiv@divisor
  2637  0CFA  3000               	movlw	0
  2638  0CFB  00A1               	movwf	___awdiv@divisor+1
  2639  0CFC  0856               	movf	scale@scl,w
  2640  0CFD  00A2               	movwf	___awdiv@dividend
  2641  0CFE  01A3               	clrf	___awdiv@dividend+1
  2642  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2643  0D00  03A3               	decf	___awdiv@dividend+1,f
  2644  0D01  120A  158A  200B  120A  158A  	fcall	___awdiv
  2645  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2646  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2647  0D08  0820               	movf	?___awdiv,w
  2648  0D09  00CD               	movwf	??_scale+5
  2649  0D0A  3001               	movlw	1
  2650  0D0B                     u6005:
  2651  0D0B  1003               	clrc
  2652  0D0C  0DCD               	rlf	??_scale+5,f
  2653  0D0D  3EFF               	addlw	-1
  2654  0D0E  1D03               	skipz
  2655  0D0F  2D0B               	goto	u6005
  2656  0D10  1003               	clrc
  2657  0D11  0D4D               	rlf	??_scale+5,w
  2658  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2659  0D13  0084               	movwf	4
  2660  0D14  160A  158A  200A  120A  158A  	fcall	stringdir
  2661  0D19  00CE               	movwf	??_scale+6
  2662  0D1A  160A  158A  200A  120A  158A  	fcall	stringdir
  2663  0D1F  00CF               	movwf	??_scale+7
  2664  0D20  160A  158A  200A  120A  158A  	fcall	stringdir
  2665  0D25  00D0               	movwf	??_scale+8
  2666  0D26  160A  158A  200A  120A  158A  	fcall	stringdir
  2667  0D2B  00D1               	movwf	??_scale+9
  2668  0D2C  0851               	movf	??_scale+9,w
  2669  0D2D  00B1               	movwf	___flmul@a+3
  2670  0D2E  0850               	movf	??_scale+8,w
  2671  0D2F  00B0               	movwf	___flmul@a+2
  2672  0D30  084F               	movf	??_scale+7,w
  2673  0D31  00AF               	movwf	___flmul@a+1
  2674  0D32  084E               	movf	??_scale+6,w
  2675  0D33  00AE               	movwf	___flmul@a
  2676  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2677  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2678  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2679  0D3B  082D               	movf	?___flmul+3,w
  2680  0D3C  00D5               	movwf	_scale$1202+3
  2681  0D3D  082C               	movf	?___flmul+2,w
  2682  0D3E  00D4               	movwf	_scale$1202+2
  2683  0D3F  082B               	movf	?___flmul+1,w
  2684  0D40  00D3               	movwf	_scale$1202+1
  2685  0D41  082A               	movf	?___flmul,w
  2686  0D42  00D2               	movwf	_scale$1202
  2687                           
  2688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2689  0D43  300A               	movlw	10
  2690  0D44  00F3               	movwf	___awmod@divisor
  2691  0D45  3000               	movlw	0
  2692  0D46  00F4               	movwf	___awmod@divisor+1
  2693  0D47  0856               	movf	scale@scl,w
  2694  0D48  00F5               	movwf	___awmod@dividend
  2695  0D49  01F6               	clrf	___awmod@dividend+1
  2696  0D4A  1BF5               	btfsc	___awmod@dividend,7
  2697  0D4B  03F6               	decf	___awmod@dividend+1,f
  2698  0D4C  160A  158A  261F  120A  158A  	fcall	___awmod
  2699  0D51  0873               	movf	?___awmod,w
  2700  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2701  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2702  0D54  00C8               	movwf	??_scale
  2703  0D55  3001               	movlw	1
  2704  0D56                     u6015:
  2705  0D56  1003               	clrc
  2706  0D57  0DC8               	rlf	??_scale,f
  2707  0D58  3EFF               	addlw	-1
  2708  0D59  1D03               	skipz
  2709  0D5A  2D56               	goto	u6015
  2710  0D5B  1003               	clrc
  2711  0D5C  0D48               	rlf	??_scale,w
  2712  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2713  0D5E  0084               	movwf	4
  2714  0D5F  160A  158A  200A  120A  158A  	fcall	stringdir
  2715  0D64  00C9               	movwf	??_scale+1
  2716  0D65  160A  158A  200A  120A  158A  	fcall	stringdir
  2717  0D6A  00CA               	movwf	??_scale+2
  2718  0D6B  160A  158A  200A  120A  158A  	fcall	stringdir
  2719  0D70  00CB               	movwf	??_scale+3
  2720  0D71  160A  158A  200A  120A  158A  	fcall	stringdir
  2721  0D76  00CC               	movwf	??_scale+4
  2722  0D77  084C               	movf	??_scale+4,w
  2723  0D78  00AD               	movwf	___flmul@b+3
  2724  0D79  084B               	movf	??_scale+3,w
  2725  0D7A  00AC               	movwf	___flmul@b+2
  2726  0D7B  084A               	movf	??_scale+2,w
  2727  0D7C  00AB               	movwf	___flmul@b+1
  2728  0D7D  0849               	movf	??_scale+1,w
  2729  0D7E  00AA               	movwf	___flmul@b
  2730  0D7F  0855               	movf	_scale$1202+3,w
  2731  0D80  00B1               	movwf	___flmul@a+3
  2732  0D81  0854               	movf	_scale$1202+2,w
  2733  0D82  00B0               	movwf	___flmul@a+2
  2734  0D83  0853               	movf	_scale$1202+1,w
  2735  0D84  00AF               	movwf	___flmul@a+1
  2736  0D85  0852               	movf	_scale$1202,w
  2737  0D86  00AE               	movwf	___flmul@a
  2738  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2739  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2740  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2741  0D8E  082D               	movf	?___flmul+3,w
  2742  0D8F  00C7               	movwf	?_scale+3
  2743  0D90  082C               	movf	?___flmul+2,w
  2744  0D91  00C6               	movwf	?_scale+2
  2745  0D92  082B               	movf	?___flmul+1,w
  2746  0D93  00C5               	movwf	?_scale+1
  2747  0D94  082A               	movf	?___flmul,w
  2748  0D95  00C4               	movwf	?_scale
  2749  0D96  2FFF               	goto	l322
  2750  0D97                     l3730:
  2751  0D97  0856               	movf	scale@scl,w
  2752  0D98  3A80               	xorlw	128
  2753  0D99  3E75               	addlw	-139
  2754  0D9A  1C03               	skipc
  2755  0D9B  2D9D               	goto	u6021
  2756  0D9C  2D9E               	goto	u6020
  2757  0D9D                     u6021:
  2758  0D9D  2E26               	goto	l3736
  2759  0D9E                     u6020:
  2760  0D9E                     l3732:
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2763  0D9E  300A               	movlw	10
  2764  0D9F  00F3               	movwf	___awmod@divisor
  2765  0DA0  3000               	movlw	0
  2766  0DA1  00F4               	movwf	___awmod@divisor+1
  2767  0DA2  0856               	movf	scale@scl,w
  2768  0DA3  00F5               	movwf	___awmod@dividend
  2769  0DA4  01F6               	clrf	___awmod@dividend+1
  2770  0DA5  1BF5               	btfsc	___awmod@dividend,7
  2771  0DA6  03F6               	decf	___awmod@dividend+1,f
  2772  0DA7  160A  158A  261F  120A  158A  	fcall	___awmod
  2773  0DAC  0873               	movf	?___awmod,w
  2774  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2775  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2776  0DAF  00C8               	movwf	??_scale
  2777  0DB0  3001               	movlw	1
  2778  0DB1                     u6035:
  2779  0DB1  1003               	clrc
  2780  0DB2  0DC8               	rlf	??_scale,f
  2781  0DB3  3EFF               	addlw	-1
  2782  0DB4  1D03               	skipz
  2783  0DB5  2DB1               	goto	u6035
  2784  0DB6  1003               	clrc
  2785  0DB7  0D48               	rlf	??_scale,w
  2786  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2787  0DB9  0084               	movwf	4
  2788  0DBA  160A  158A  200A  120A  158A  	fcall	stringdir
  2789  0DBF  00C9               	movwf	??_scale+1
  2790  0DC0  160A  158A  200A  120A  158A  	fcall	stringdir
  2791  0DC5  00CA               	movwf	??_scale+2
  2792  0DC6  160A  158A  200A  120A  158A  	fcall	stringdir
  2793  0DCB  00CB               	movwf	??_scale+3
  2794  0DCC  160A  158A  200A  120A  158A  	fcall	stringdir
  2795  0DD1  00CC               	movwf	??_scale+4
  2796  0DD2  084C               	movf	??_scale+4,w
  2797  0DD3  00AD               	movwf	___flmul@b+3
  2798  0DD4  084B               	movf	??_scale+3,w
  2799  0DD5  00AC               	movwf	___flmul@b+2
  2800  0DD6  084A               	movf	??_scale+2,w
  2801  0DD7  00AB               	movwf	___flmul@b+1
  2802  0DD8  0849               	movf	??_scale+1,w
  2803  0DD9  00AA               	movwf	___flmul@b
  2804  0DDA  300A               	movlw	10
  2805  0DDB  00A0               	movwf	___awdiv@divisor
  2806  0DDC  3000               	movlw	0
  2807  0DDD  00A1               	movwf	___awdiv@divisor+1
  2808  0DDE  0856               	movf	scale@scl,w
  2809  0DDF  00A2               	movwf	___awdiv@dividend
  2810  0DE0  01A3               	clrf	___awdiv@dividend+1
  2811  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2812  0DE2  03A3               	decf	___awdiv@dividend+1,f
  2813  0DE3  120A  158A  200B  120A  158A  	fcall	___awdiv
  2814  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2816  0DEA  0820               	movf	?___awdiv,w
  2817  0DEB  00CD               	movwf	??_scale+5
  2818  0DEC  3001               	movlw	1
  2819  0DED                     u6045:
  2820  0DED  1003               	clrc
  2821  0DEE  0DCD               	rlf	??_scale+5,f
  2822  0DEF  3EFF               	addlw	-1
  2823  0DF0  1D03               	skipz
  2824  0DF1  2DED               	goto	u6045
  2825  0DF2  1003               	clrc
  2826  0DF3  0D4D               	rlf	??_scale+5,w
  2827  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2828  0DF5  0084               	movwf	4
  2829  0DF6  160A  158A  200A  120A  158A  	fcall	stringdir
  2830  0DFB  00CE               	movwf	??_scale+6
  2831  0DFC  160A  158A  200A  120A  158A  	fcall	stringdir
  2832  0E01  00CF               	movwf	??_scale+7
  2833  0E02  160A  158A  200A  120A  158A  	fcall	stringdir
  2834  0E07  00D0               	movwf	??_scale+8
  2835  0E08  160A  158A  200A  120A  158A  	fcall	stringdir
  2836  0E0D  00D1               	movwf	??_scale+9
  2837  0E0E  0851               	movf	??_scale+9,w
  2838  0E0F  00B1               	movwf	___flmul@a+3
  2839  0E10  0850               	movf	??_scale+8,w
  2840  0E11  00B0               	movwf	___flmul@a+2
  2841  0E12  084F               	movf	??_scale+7,w
  2842  0E13  00AF               	movwf	___flmul@a+1
  2843  0E14  084E               	movf	??_scale+6,w
  2844  0E15  00AE               	movwf	___flmul@a
  2845  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2846  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2847  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2848  0E1D  082D               	movf	?___flmul+3,w
  2849  0E1E  00C7               	movwf	?_scale+3
  2850  0E1F  082C               	movf	?___flmul+2,w
  2851  0E20  00C6               	movwf	?_scale+2
  2852  0E21  082B               	movf	?___flmul+1,w
  2853  0E22  00C5               	movwf	?_scale+1
  2854  0E23  082A               	movf	?___flmul,w
  2855  0E24  00C4               	movwf	?_scale
  2856  0E25  2FFF               	goto	l322
  2857  0E26                     l3736:
  2858                           
  2859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2860  0E26  0856               	movf	scale@scl,w
  2861  0E27  00C8               	movwf	??_scale
  2862  0E28  3001               	movlw	1
  2863  0E29                     u6055:
  2864  0E29  1003               	clrc
  2865  0E2A  0DC8               	rlf	??_scale,f
  2866  0E2B  3EFF               	addlw	-1
  2867  0E2C  1D03               	skipz
  2868  0E2D  2E29               	goto	u6055
  2869  0E2E  1003               	clrc
  2870  0E2F  0D48               	rlf	??_scale,w
  2871  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2872  0E31  0084               	movwf	4
  2873  0E32  160A  158A  200A  120A  158A  	fcall	stringdir
  2874  0E37  00C9               	movwf	??_scale+1
  2875  0E38  160A  158A  200A  120A  158A  	fcall	stringdir
  2876  0E3D  00CA               	movwf	??_scale+2
  2877  0E3E  160A  158A  200A  120A  158A  	fcall	stringdir
  2878  0E43  00CB               	movwf	??_scale+3
  2879  0E44  160A  158A  200A  120A  158A  	fcall	stringdir
  2880  0E49  00CC               	movwf	??_scale+4
  2881  0E4A  084C               	movf	??_scale+4,w
  2882  0E4B  00C7               	movwf	?_scale+3
  2883  0E4C  084B               	movf	??_scale+3,w
  2884  0E4D  00C6               	movwf	?_scale+2
  2885  0E4E  084A               	movf	??_scale+2,w
  2886  0E4F  00C5               	movwf	?_scale+1
  2887  0E50  0849               	movf	??_scale+1,w
  2888  0E51  00C4               	movwf	?_scale
  2889  0E52  2FFF               	goto	l322
  2890  0E53                     l3740:
  2891                           
  2892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2893  0E53  0856               	movf	scale@scl,w
  2894  0E54  3A80               	xorlw	128
  2895  0E55  3E12               	addlw	-238
  2896  0E56  1C03               	skipc
  2897  0E57  2E59               	goto	u6061
  2898  0E58  2E5A               	goto	u6060
  2899  0E59                     u6061:
  2900  0E59  2F44               	goto	l3748
  2901  0E5A                     u6060:
  2902  0E5A                     l3742:
  2903                           
  2904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2905  0E5A  300A               	movlw	10
  2906  0E5B  00A0               	movwf	___awdiv@divisor
  2907  0E5C  3000               	movlw	0
  2908  0E5D  00A1               	movwf	___awdiv@divisor+1
  2909  0E5E  0856               	movf	scale@scl,w
  2910  0E5F  00F5               	movwf	___awmod@dividend
  2911  0E60  01F6               	clrf	___awmod@dividend+1
  2912  0E61  1BF5               	btfsc	___awmod@dividend,7
  2913  0E62  03F6               	decf	___awmod@dividend+1,f
  2914  0E63  3064               	movlw	100
  2915  0E64  00F3               	movwf	___awmod@divisor
  2916  0E65  3000               	movlw	0
  2917  0E66  00F4               	movwf	___awmod@divisor+1
  2918  0E67  160A  158A  261F  120A  158A  	fcall	___awmod
  2919  0E6C  0874               	movf	?___awmod+1,w
  2920  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  2921  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  2922  0E6F  00A3               	movwf	___awdiv@dividend+1
  2923  0E70  0873               	movf	?___awmod,w
  2924  0E71  00A2               	movwf	___awdiv@dividend
  2925  0E72  120A  158A  200B  120A  158A  	fcall	___awdiv
  2926  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0E79  0820               	movf	?___awdiv,w
  2929  0E7A  00C8               	movwf	??_scale
  2930  0E7B  3001               	movlw	1
  2931  0E7C                     u6075:
  2932  0E7C  1003               	clrc
  2933  0E7D  0DC8               	rlf	??_scale,f
  2934  0E7E  3EFF               	addlw	-1
  2935  0E7F  1D03               	skipz
  2936  0E80  2E7C               	goto	u6075
  2937  0E81  1003               	clrc
  2938  0E82  0D48               	rlf	??_scale,w
  2939  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2940  0E84  0084               	movwf	4
  2941  0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  2942  0E8A  00C9               	movwf	??_scale+1
  2943  0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  2944  0E90  00CA               	movwf	??_scale+2
  2945  0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  2946  0E96  00CB               	movwf	??_scale+3
  2947  0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  2948  0E9C  00CC               	movwf	??_scale+4
  2949  0E9D  084C               	movf	??_scale+4,w
  2950  0E9E  00AD               	movwf	___flmul@b+3
  2951  0E9F  084B               	movf	??_scale+3,w
  2952  0EA0  00AC               	movwf	___flmul@b+2
  2953  0EA1  084A               	movf	??_scale+2,w
  2954  0EA2  00AB               	movwf	___flmul@b+1
  2955  0EA3  0849               	movf	??_scale+1,w
  2956  0EA4  00AA               	movwf	___flmul@b
  2957  0EA5  3064               	movlw	100
  2958  0EA6  00A0               	movwf	___awdiv@divisor
  2959  0EA7  3000               	movlw	0
  2960  0EA8  00A1               	movwf	___awdiv@divisor+1
  2961  0EA9  0856               	movf	scale@scl,w
  2962  0EAA  00A2               	movwf	___awdiv@dividend
  2963  0EAB  01A3               	clrf	___awdiv@dividend+1
  2964  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  2965  0EAD  03A3               	decf	___awdiv@dividend+1,f
  2966  0EAE  120A  158A  200B  120A  158A  	fcall	___awdiv
  2967  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  2968  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  2969  0EB5  0820               	movf	?___awdiv,w
  2970  0EB6  00CD               	movwf	??_scale+5
  2971  0EB7  3001               	movlw	1
  2972  0EB8                     u6085:
  2973  0EB8  1003               	clrc
  2974  0EB9  0DCD               	rlf	??_scale+5,f
  2975  0EBA  3EFF               	addlw	-1
  2976  0EBB  1D03               	skipz
  2977  0EBC  2EB8               	goto	u6085
  2978  0EBD  1003               	clrc
  2979  0EBE  0D4D               	rlf	??_scale+5,w
  2980  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2981  0EC0  0084               	movwf	4
  2982  0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  2983  0EC6  00CE               	movwf	??_scale+6
  2984  0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  2985  0ECC  00CF               	movwf	??_scale+7
  2986  0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  2987  0ED2  00D0               	movwf	??_scale+8
  2988  0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  2989  0ED8  00D1               	movwf	??_scale+9
  2990  0ED9  0851               	movf	??_scale+9,w
  2991  0EDA  00B1               	movwf	___flmul@a+3
  2992  0EDB  0850               	movf	??_scale+8,w
  2993  0EDC  00B0               	movwf	___flmul@a+2
  2994  0EDD  084F               	movf	??_scale+7,w
  2995  0EDE  00AF               	movwf	___flmul@a+1
  2996  0EDF  084E               	movf	??_scale+6,w
  2997  0EE0  00AE               	movwf	___flmul@a
  2998  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  2999  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3000  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3001  0EE8  082D               	movf	?___flmul+3,w
  3002  0EE9  00D5               	movwf	_scale$1202+3
  3003  0EEA  082C               	movf	?___flmul+2,w
  3004  0EEB  00D4               	movwf	_scale$1202+2
  3005  0EEC  082B               	movf	?___flmul+1,w
  3006  0EED  00D3               	movwf	_scale$1202+1
  3007  0EEE  082A               	movf	?___flmul,w
  3008  0EEF  00D2               	movwf	_scale$1202
  3009                           
  3010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3011  0EF0  300A               	movlw	10
  3012  0EF1  00F3               	movwf	___awmod@divisor
  3013  0EF2  3000               	movlw	0
  3014  0EF3  00F4               	movwf	___awmod@divisor+1
  3015  0EF4  0856               	movf	scale@scl,w
  3016  0EF5  00F5               	movwf	___awmod@dividend
  3017  0EF6  01F6               	clrf	___awmod@dividend+1
  3018  0EF7  1BF5               	btfsc	___awmod@dividend,7
  3019  0EF8  03F6               	decf	___awmod@dividend+1,f
  3020  0EF9  160A  158A  261F  120A  158A  	fcall	___awmod
  3021  0EFE  0873               	movf	?___awmod,w
  3022  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3024  0F01  00C8               	movwf	??_scale
  3025  0F02  3001               	movlw	1
  3026  0F03                     u6095:
  3027  0F03  1003               	clrc
  3028  0F04  0DC8               	rlf	??_scale,f
  3029  0F05  3EFF               	addlw	-1
  3030  0F06  1D03               	skipz
  3031  0F07  2F03               	goto	u6095
  3032  0F08  1003               	clrc
  3033  0F09  0D48               	rlf	??_scale,w
  3034  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3035  0F0B  0084               	movwf	4
  3036  0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  3037  0F11  00C9               	movwf	??_scale+1
  3038  0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  3039  0F17  00CA               	movwf	??_scale+2
  3040  0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  3041  0F1D  00CB               	movwf	??_scale+3
  3042  0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  3043  0F23  00CC               	movwf	??_scale+4
  3044  0F24  084C               	movf	??_scale+4,w
  3045  0F25  00AD               	movwf	___flmul@b+3
  3046  0F26  084B               	movf	??_scale+3,w
  3047  0F27  00AC               	movwf	___flmul@b+2
  3048  0F28  084A               	movf	??_scale+2,w
  3049  0F29  00AB               	movwf	___flmul@b+1
  3050  0F2A  0849               	movf	??_scale+1,w
  3051  0F2B  00AA               	movwf	___flmul@b
  3052  0F2C  0855               	movf	_scale$1202+3,w
  3053  0F2D  00B1               	movwf	___flmul@a+3
  3054  0F2E  0854               	movf	_scale$1202+2,w
  3055  0F2F  00B0               	movwf	___flmul@a+2
  3056  0F30  0853               	movf	_scale$1202+1,w
  3057  0F31  00AF               	movwf	___flmul@a+1
  3058  0F32  0852               	movf	_scale$1202,w
  3059  0F33  00AE               	movwf	___flmul@a
  3060  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3061  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0F3B  082D               	movf	?___flmul+3,w
  3064  0F3C  00C7               	movwf	?_scale+3
  3065  0F3D  082C               	movf	?___flmul+2,w
  3066  0F3E  00C6               	movwf	?_scale+2
  3067  0F3F  082B               	movf	?___flmul+1,w
  3068  0F40  00C5               	movwf	?_scale+1
  3069  0F41  082A               	movf	?___flmul,w
  3070  0F42  00C4               	movwf	?_scale
  3071  0F43  2FFF               	goto	l322
  3072  0F44                     l3748:
  3073  0F44  0856               	movf	scale@scl,w
  3074  0F45  3A80               	xorlw	128
  3075  0F46  3E75               	addlw	-139
  3076  0F47  1C03               	skipc
  3077  0F48  2F4A               	goto	u6101
  3078  0F49  2F4B               	goto	u6100
  3079  0F4A                     u6101:
  3080  0F4A  2FD3               	goto	l3754
  3081  0F4B                     u6100:
  3082  0F4B                     l3750:
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3085  0F4B  300A               	movlw	10
  3086  0F4C  00F3               	movwf	___awmod@divisor
  3087  0F4D  3000               	movlw	0
  3088  0F4E  00F4               	movwf	___awmod@divisor+1
  3089  0F4F  0856               	movf	scale@scl,w
  3090  0F50  00F5               	movwf	___awmod@dividend
  3091  0F51  01F6               	clrf	___awmod@dividend+1
  3092  0F52  1BF5               	btfsc	___awmod@dividend,7
  3093  0F53  03F6               	decf	___awmod@dividend+1,f
  3094  0F54  160A  158A  261F  120A  158A  	fcall	___awmod
  3095  0F59  0873               	movf	?___awmod,w
  3096  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3097  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3098  0F5C  00C8               	movwf	??_scale
  3099  0F5D  3001               	movlw	1
  3100  0F5E                     u6115:
  3101  0F5E  1003               	clrc
  3102  0F5F  0DC8               	rlf	??_scale,f
  3103  0F60  3EFF               	addlw	-1
  3104  0F61  1D03               	skipz
  3105  0F62  2F5E               	goto	u6115
  3106  0F63  1003               	clrc
  3107  0F64  0D48               	rlf	??_scale,w
  3108  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3109  0F66  0084               	movwf	4
  3110  0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  3111  0F6C  00C9               	movwf	??_scale+1
  3112  0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  3113  0F72  00CA               	movwf	??_scale+2
  3114  0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  3115  0F78  00CB               	movwf	??_scale+3
  3116  0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  3117  0F7E  00CC               	movwf	??_scale+4
  3118  0F7F  084C               	movf	??_scale+4,w
  3119  0F80  00AD               	movwf	___flmul@b+3
  3120  0F81  084B               	movf	??_scale+3,w
  3121  0F82  00AC               	movwf	___flmul@b+2
  3122  0F83  084A               	movf	??_scale+2,w
  3123  0F84  00AB               	movwf	___flmul@b+1
  3124  0F85  0849               	movf	??_scale+1,w
  3125  0F86  00AA               	movwf	___flmul@b
  3126  0F87  300A               	movlw	10
  3127  0F88  00A0               	movwf	___awdiv@divisor
  3128  0F89  3000               	movlw	0
  3129  0F8A  00A1               	movwf	___awdiv@divisor+1
  3130  0F8B  0856               	movf	scale@scl,w
  3131  0F8C  00A2               	movwf	___awdiv@dividend
  3132  0F8D  01A3               	clrf	___awdiv@dividend+1
  3133  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3134  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3135  0F90  120A  158A  200B  120A  158A  	fcall	___awdiv
  3136  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3137  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3138  0F97  0820               	movf	?___awdiv,w
  3139  0F98  00CD               	movwf	??_scale+5
  3140  0F99  3001               	movlw	1
  3141  0F9A                     u6125:
  3142  0F9A  1003               	clrc
  3143  0F9B  0DCD               	rlf	??_scale+5,f
  3144  0F9C  3EFF               	addlw	-1
  3145  0F9D  1D03               	skipz
  3146  0F9E  2F9A               	goto	u6125
  3147  0F9F  1003               	clrc
  3148  0FA0  0D4D               	rlf	??_scale+5,w
  3149  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3150  0FA2  0084               	movwf	4
  3151  0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  3152  0FA8  00CE               	movwf	??_scale+6
  3153  0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  3154  0FAE  00CF               	movwf	??_scale+7
  3155  0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  3156  0FB4  00D0               	movwf	??_scale+8
  3157  0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  3158  0FBA  00D1               	movwf	??_scale+9
  3159  0FBB  0851               	movf	??_scale+9,w
  3160  0FBC  00B1               	movwf	___flmul@a+3
  3161  0FBD  0850               	movf	??_scale+8,w
  3162  0FBE  00B0               	movwf	___flmul@a+2
  3163  0FBF  084F               	movf	??_scale+7,w
  3164  0FC0  00AF               	movwf	___flmul@a+1
  3165  0FC1  084E               	movf	??_scale+6,w
  3166  0FC2  00AE               	movwf	___flmul@a
  3167  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3168  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0FCA  082D               	movf	?___flmul+3,w
  3171  0FCB  00C7               	movwf	?_scale+3
  3172  0FCC  082C               	movf	?___flmul+2,w
  3173  0FCD  00C6               	movwf	?_scale+2
  3174  0FCE  082B               	movf	?___flmul+1,w
  3175  0FCF  00C5               	movwf	?_scale+1
  3176  0FD0  082A               	movf	?___flmul,w
  3177  0FD1  00C4               	movwf	?_scale
  3178  0FD2  2FFF               	goto	l322
  3179  0FD3                     l3754:
  3180                           
  3181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3182  0FD3  0856               	movf	scale@scl,w
  3183  0FD4  00C8               	movwf	??_scale
  3184  0FD5  3001               	movlw	1
  3185  0FD6                     u6135:
  3186  0FD6  1003               	clrc
  3187  0FD7  0DC8               	rlf	??_scale,f
  3188  0FD8  3EFF               	addlw	-1
  3189  0FD9  1D03               	skipz
  3190  0FDA  2FD6               	goto	u6135
  3191  0FDB  1003               	clrc
  3192  0FDC  0D48               	rlf	??_scale,w
  3193  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3194  0FDE  0084               	movwf	4
  3195  0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  3196  0FE4  00C9               	movwf	??_scale+1
  3197  0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  3198  0FEA  00CA               	movwf	??_scale+2
  3199  0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  3200  0FF0  00CB               	movwf	??_scale+3
  3201  0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  3202  0FF6  00CC               	movwf	??_scale+4
  3203  0FF7  084C               	movf	??_scale+4,w
  3204  0FF8  00C7               	movwf	?_scale+3
  3205  0FF9  084B               	movf	??_scale+3,w
  3206  0FFA  00C6               	movwf	?_scale+2
  3207  0FFB  084A               	movf	??_scale+2,w
  3208  0FFC  00C5               	movwf	?_scale+1
  3209  0FFD  0849               	movf	??_scale+1,w
  3210  0FFE  00C4               	movwf	?_scale
  3211  0FFF                     l322:
  3212  0FFF  0008               	return
  3213  1000                     __end_of_scale:
  3214                           
  3215                           	psect	text3
  3216  1E1F                     __ptext3:	
  3217 ;; *************** function ___awmod *****************
  3218 ;; Defined at:
  3219 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  divisor         2    3[COMMON] int 
  3222 ;;  dividend        2    5[COMMON] int 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  sign            1    9[COMMON] unsigned char 
  3225 ;;  counter         1    8[COMMON] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  2    3[COMMON] int 
  3228 ;; Registers used:
  3229 ;;		wreg, status,2, status,0
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3235 ;;      Params:         4       0       0       0       0
  3236 ;;      Locals:         2       0       0       0       0
  3237 ;;      Temps:          1       0       0       0       0
  3238 ;;      Totals:         7       0       0       0       0
  3239 ;;Total ram usage:        7 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    2
  3242 ;; This function calls:
  3243 ;;		Nothing
  3244 ;; This function is called by:
  3245 ;;		_scale
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           
  3250                           ;psect for function ___awmod
  3251  1E1F                     ___awmod:
  3252  1E1F                     l2378:	
  3253                           ;incstack = 0
  3254                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3255                           
  3256  1E1F  01F9               	clrf	___awmod@sign
  3257  1E20                     l2380:
  3258  1E20  1FF6               	btfss	___awmod@dividend+1,7
  3259  1E21  2E23               	goto	u3111
  3260  1E22  2E24               	goto	u3110
  3261  1E23                     u3111:
  3262  1E23  2E2B               	goto	l2386
  3263  1E24                     u3110:
  3264  1E24                     l2382:
  3265  1E24  09F5               	comf	___awmod@dividend,f
  3266  1E25  09F6               	comf	___awmod@dividend+1,f
  3267  1E26  0AF5               	incf	___awmod@dividend,f
  3268  1E27  1903               	skipnz
  3269  1E28  0AF6               	incf	___awmod@dividend+1,f
  3270  1E29                     l2384:
  3271  1E29  01F9               	clrf	___awmod@sign
  3272  1E2A  0AF9               	incf	___awmod@sign,f
  3273  1E2B                     l2386:
  3274  1E2B  1FF4               	btfss	___awmod@divisor+1,7
  3275  1E2C  2E2E               	goto	u3121
  3276  1E2D  2E2F               	goto	u3120
  3277  1E2E                     u3121:
  3278  1E2E  2E34               	goto	l2390
  3279  1E2F                     u3120:
  3280  1E2F                     l2388:
  3281  1E2F  09F3               	comf	___awmod@divisor,f
  3282  1E30  09F4               	comf	___awmod@divisor+1,f
  3283  1E31  0AF3               	incf	___awmod@divisor,f
  3284  1E32  1903               	skipnz
  3285  1E33  0AF4               	incf	___awmod@divisor+1,f
  3286  1E34                     l2390:
  3287  1E34  0873               	movf	___awmod@divisor,w
  3288  1E35  0474               	iorwf	___awmod@divisor+1,w
  3289  1E36  1903               	btfsc	3,2
  3290  1E37  2E39               	goto	u3131
  3291  1E38  2E3A               	goto	u3130
  3292  1E39                     u3131:
  3293  1E39  2E69               	goto	l2408
  3294  1E3A                     u3130:
  3295  1E3A                     l2392:
  3296  1E3A  01F8               	clrf	___awmod@counter
  3297  1E3B  0AF8               	incf	___awmod@counter,f
  3298  1E3C  2E48               	goto	l2398
  3299  1E3D                     l2394:
  3300  1E3D  3001               	movlw	1
  3301  1E3E                     u3145:
  3302  1E3E  1003               	clrc
  3303  1E3F  0DF3               	rlf	___awmod@divisor,f
  3304  1E40  0DF4               	rlf	___awmod@divisor+1,f
  3305  1E41  3EFF               	addlw	-1
  3306  1E42  1D03               	skipz
  3307  1E43  2E3E               	goto	u3145
  3308  1E44                     l2396:
  3309  1E44  3001               	movlw	1
  3310  1E45  00F7               	movwf	??___awmod
  3311  1E46  0877               	movf	??___awmod,w
  3312  1E47  07F8               	addwf	___awmod@counter,f
  3313  1E48                     l2398:
  3314  1E48  1FF4               	btfss	___awmod@divisor+1,7
  3315  1E49  2E4B               	goto	u3151
  3316  1E4A  2E4C               	goto	u3150
  3317  1E4B                     u3151:
  3318  1E4B  2E3D               	goto	l2394
  3319  1E4C                     u3150:
  3320  1E4C                     l2400:
  3321  1E4C  0874               	movf	___awmod@divisor+1,w
  3322  1E4D  0276               	subwf	___awmod@dividend+1,w
  3323  1E4E  1D03               	skipz
  3324  1E4F  2E52               	goto	u3165
  3325  1E50  0873               	movf	___awmod@divisor,w
  3326  1E51  0275               	subwf	___awmod@dividend,w
  3327  1E52                     u3165:
  3328  1E52  1C03               	skipc
  3329  1E53  2E55               	goto	u3161
  3330  1E54  2E56               	goto	u3160
  3331  1E55                     u3161:
  3332  1E55  2E5C               	goto	l2404
  3333  1E56                     u3160:
  3334  1E56                     l2402:
  3335  1E56  0873               	movf	___awmod@divisor,w
  3336  1E57  02F5               	subwf	___awmod@dividend,f
  3337  1E58  0874               	movf	___awmod@divisor+1,w
  3338  1E59  1C03               	skipc
  3339  1E5A  03F6               	decf	___awmod@dividend+1,f
  3340  1E5B  02F6               	subwf	___awmod@dividend+1,f
  3341  1E5C                     l2404:
  3342  1E5C  3001               	movlw	1
  3343  1E5D                     u3175:
  3344  1E5D  1003               	clrc
  3345  1E5E  0CF4               	rrf	___awmod@divisor+1,f
  3346  1E5F  0CF3               	rrf	___awmod@divisor,f
  3347  1E60  3EFF               	addlw	-1
  3348  1E61  1D03               	skipz
  3349  1E62  2E5D               	goto	u3175
  3350  1E63                     l2406:
  3351  1E63  3001               	movlw	1
  3352  1E64  02F8               	subwf	___awmod@counter,f
  3353  1E65  1D03               	btfss	3,2
  3354  1E66  2E68               	goto	u3181
  3355  1E67  2E69               	goto	u3180
  3356  1E68                     u3181:
  3357  1E68  2E4C               	goto	l2400
  3358  1E69                     u3180:
  3359  1E69                     l2408:
  3360  1E69  0879               	movf	___awmod@sign,w
  3361  1E6A  1903               	btfsc	3,2
  3362  1E6B  2E6D               	goto	u3191
  3363  1E6C  2E6E               	goto	u3190
  3364  1E6D                     u3191:
  3365  1E6D  2E73               	goto	l2412
  3366  1E6E                     u3190:
  3367  1E6E                     l2410:
  3368  1E6E  09F5               	comf	___awmod@dividend,f
  3369  1E6F  09F6               	comf	___awmod@dividend+1,f
  3370  1E70  0AF5               	incf	___awmod@dividend,f
  3371  1E71  1903               	skipnz
  3372  1E72  0AF6               	incf	___awmod@dividend+1,f
  3373  1E73                     l2412:
  3374  1E73  0876               	movf	___awmod@dividend+1,w
  3375  1E74  00F4               	movwf	?___awmod+1
  3376  1E75  0875               	movf	___awmod@dividend,w
  3377  1E76  00F3               	movwf	?___awmod
  3378  1E77                     l575:
  3379  1E77  0008               	return
  3380  1E78                     __end_of___awmod:
  3381                           
  3382                           	psect	text4
  3383  080B                     __ptext4:	
  3384 ;; *************** function ___awdiv *****************
  3385 ;; Defined at:
  3386 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  divisor         2    0[BANK0 ] int 
  3389 ;;  dividend        2    2[BANK0 ] int 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  quotient        2    7[BANK0 ] int 
  3392 ;;  sign            1    6[BANK0 ] unsigned char 
  3393 ;;  counter         1    5[BANK0 ] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  2    0[BANK0 ] int 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3403 ;;      Params:         0       4       0       0       0
  3404 ;;      Locals:         0       4       0       0       0
  3405 ;;      Temps:          0       1       0       0       0
  3406 ;;      Totals:         0       9       0       0       0
  3407 ;;Total ram usage:        9 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    2
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_scale
  3414 ;;		_sprintf
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           
  3419                           ;psect for function ___awdiv
  3420  080B                     ___awdiv:
  3421  080B                     l3652:	
  3422                           ;incstack = 0
  3423                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3424                           
  3425  080B  1283               	bcf	3,5	;RP0=0, select bank0
  3426  080C  1303               	bcf	3,6	;RP1=0, select bank0
  3427  080D  01A6               	clrf	___awdiv@sign
  3428  080E                     l3654:
  3429  080E  1FA1               	btfss	___awdiv@divisor+1,7
  3430  080F  2811               	goto	u5871
  3431  0810  2812               	goto	u5870
  3432  0811                     u5871:
  3433  0811  2819               	goto	l3660
  3434  0812                     u5870:
  3435  0812                     l3656:
  3436  0812  09A0               	comf	___awdiv@divisor,f
  3437  0813  09A1               	comf	___awdiv@divisor+1,f
  3438  0814  0AA0               	incf	___awdiv@divisor,f
  3439  0815  1903               	skipnz
  3440  0816  0AA1               	incf	___awdiv@divisor+1,f
  3441  0817                     l3658:
  3442  0817  01A6               	clrf	___awdiv@sign
  3443  0818  0AA6               	incf	___awdiv@sign,f
  3444  0819                     l3660:
  3445  0819  1FA3               	btfss	___awdiv@dividend+1,7
  3446  081A  281C               	goto	u5881
  3447  081B  281D               	goto	u5880
  3448  081C                     u5881:
  3449  081C  2826               	goto	l3666
  3450  081D                     u5880:
  3451  081D                     l3662:
  3452  081D  09A2               	comf	___awdiv@dividend,f
  3453  081E  09A3               	comf	___awdiv@dividend+1,f
  3454  081F  0AA2               	incf	___awdiv@dividend,f
  3455  0820  1903               	skipnz
  3456  0821  0AA3               	incf	___awdiv@dividend+1,f
  3457  0822                     l3664:
  3458  0822  3001               	movlw	1
  3459  0823  00A4               	movwf	??___awdiv
  3460  0824  0824               	movf	??___awdiv,w
  3461  0825  06A6               	xorwf	___awdiv@sign,f
  3462  0826                     l3666:
  3463  0826  01A7               	clrf	___awdiv@quotient
  3464  0827  01A8               	clrf	___awdiv@quotient+1
  3465  0828                     l3668:
  3466  0828  0820               	movf	___awdiv@divisor,w
  3467  0829  0421               	iorwf	___awdiv@divisor+1,w
  3468  082A  1903               	btfsc	3,2
  3469  082B  282D               	goto	u5891
  3470  082C  282E               	goto	u5890
  3471  082D                     u5891:
  3472  082D  2865               	goto	l3688
  3473  082E                     u5890:
  3474  082E                     l3670:
  3475  082E  01A5               	clrf	___awdiv@counter
  3476  082F  0AA5               	incf	___awdiv@counter,f
  3477  0830  283C               	goto	l3676
  3478  0831                     l3672:
  3479  0831  3001               	movlw	1
  3480  0832                     u5905:
  3481  0832  1003               	clrc
  3482  0833  0DA0               	rlf	___awdiv@divisor,f
  3483  0834  0DA1               	rlf	___awdiv@divisor+1,f
  3484  0835  3EFF               	addlw	-1
  3485  0836  1D03               	skipz
  3486  0837  2832               	goto	u5905
  3487  0838                     l3674:
  3488  0838  3001               	movlw	1
  3489  0839  00A4               	movwf	??___awdiv
  3490  083A  0824               	movf	??___awdiv,w
  3491  083B  07A5               	addwf	___awdiv@counter,f
  3492  083C                     l3676:
  3493  083C  1FA1               	btfss	___awdiv@divisor+1,7
  3494  083D  283F               	goto	u5911
  3495  083E  2840               	goto	u5910
  3496  083F                     u5911:
  3497  083F  2831               	goto	l3672
  3498  0840                     u5910:
  3499  0840                     l3678:
  3500  0840  3001               	movlw	1
  3501  0841                     u5925:
  3502  0841  1003               	clrc
  3503  0842  0DA7               	rlf	___awdiv@quotient,f
  3504  0843  0DA8               	rlf	___awdiv@quotient+1,f
  3505  0844  3EFF               	addlw	-1
  3506  0845  1D03               	skipz
  3507  0846  2841               	goto	u5925
  3508  0847  0821               	movf	___awdiv@divisor+1,w
  3509  0848  0223               	subwf	___awdiv@dividend+1,w
  3510  0849  1D03               	skipz
  3511  084A  284D               	goto	u5935
  3512  084B  0820               	movf	___awdiv@divisor,w
  3513  084C  0222               	subwf	___awdiv@dividend,w
  3514  084D                     u5935:
  3515  084D  1C03               	skipc
  3516  084E  2850               	goto	u5931
  3517  084F  2851               	goto	u5930
  3518  0850                     u5931:
  3519  0850  2858               	goto	l3684
  3520  0851                     u5930:
  3521  0851                     l3680:
  3522  0851  0820               	movf	___awdiv@divisor,w
  3523  0852  02A2               	subwf	___awdiv@dividend,f
  3524  0853  0821               	movf	___awdiv@divisor+1,w
  3525  0854  1C03               	skipc
  3526  0855  03A3               	decf	___awdiv@dividend+1,f
  3527  0856  02A3               	subwf	___awdiv@dividend+1,f
  3528  0857                     l3682:
  3529  0857  1427               	bsf	___awdiv@quotient,0
  3530  0858                     l3684:
  3531  0858  3001               	movlw	1
  3532  0859                     u5945:
  3533  0859  1003               	clrc
  3534  085A  0CA1               	rrf	___awdiv@divisor+1,f
  3535  085B  0CA0               	rrf	___awdiv@divisor,f
  3536  085C  3EFF               	addlw	-1
  3537  085D  1D03               	skipz
  3538  085E  2859               	goto	u5945
  3539  085F                     l3686:
  3540  085F  3001               	movlw	1
  3541  0860  02A5               	subwf	___awdiv@counter,f
  3542  0861  1D03               	btfss	3,2
  3543  0862  2864               	goto	u5951
  3544  0863  2865               	goto	u5950
  3545  0864                     u5951:
  3546  0864  2840               	goto	l3678
  3547  0865                     u5950:
  3548  0865                     l3688:
  3549  0865  0826               	movf	___awdiv@sign,w
  3550  0866  1903               	btfsc	3,2
  3551  0867  2869               	goto	u5961
  3552  0868  286A               	goto	u5960
  3553  0869                     u5961:
  3554  0869  286F               	goto	l3692
  3555  086A                     u5960:
  3556  086A                     l3690:
  3557  086A  09A7               	comf	___awdiv@quotient,f
  3558  086B  09A8               	comf	___awdiv@quotient+1,f
  3559  086C  0AA7               	incf	___awdiv@quotient,f
  3560  086D  1903               	skipnz
  3561  086E  0AA8               	incf	___awdiv@quotient+1,f
  3562  086F                     l3692:
  3563  086F  0828               	movf	___awdiv@quotient+1,w
  3564  0870  00A1               	movwf	?___awdiv+1
  3565  0871  0827               	movf	___awdiv@quotient,w
  3566  0872  00A0               	movwf	?___awdiv
  3567  0873                     l562:
  3568  0873  0008               	return
  3569  0874                     __end_of___awdiv:
  3570                           
  3571                           	psect	text5
  3572  1AD0                     __ptext5:	
  3573 ;; *************** function _isdigit *****************
  3574 ;; Defined at:
  3575 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;  c               1    wreg     unsigned char 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  c               1    4[COMMON] unsigned char 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;		None               void
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3589 ;;      Params:         0       0       0       0       0
  3590 ;;      Locals:         2       0       0       0       0
  3591 ;;      Temps:          0       0       0       0       0
  3592 ;;      Totals:         2       0       0       0       0
  3593 ;;Total ram usage:        2 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; Hardware stack levels required when called:    2
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		_sprintf
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           
  3604                           ;psect for function _isdigit
  3605  1AD0                     _isdigit:
  3606                           
  3607                           ;incstack = 0
  3608                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3609                           ;isdigit@c stored from wreg
  3610  1AD0  00F4               	movwf	isdigit@c
  3611  1AD1                     l2882:
  3612  1AD1  01F3               	clrf	_isdigit$1016
  3613  1AD2                     l2884:
  3614  1AD2  303A               	movlw	58
  3615  1AD3  0274               	subwf	isdigit@c,w
  3616  1AD4  1803               	skipnc
  3617  1AD5  2AD7               	goto	u4421
  3618  1AD6  2AD8               	goto	u4420
  3619  1AD7                     u4421:
  3620  1AD7  2AE0               	goto	l2890
  3621  1AD8                     u4420:
  3622  1AD8                     l2886:
  3623  1AD8  3030               	movlw	48
  3624  1AD9  0274               	subwf	isdigit@c,w
  3625  1ADA  1C03               	skipc
  3626  1ADB  2ADD               	goto	u4431
  3627  1ADC  2ADE               	goto	u4430
  3628  1ADD                     u4431:
  3629  1ADD  2AE0               	goto	l2890
  3630  1ADE                     u4430:
  3631  1ADE                     l2888:
  3632  1ADE  01F3               	clrf	_isdigit$1016
  3633  1ADF  0AF3               	incf	_isdigit$1016,f
  3634  1AE0                     l2890:
  3635  1AE0  0C73               	rrf	_isdigit$1016,w
  3636  1AE1                     l896:
  3637  1AE1  0008               	return
  3638  1AE2                     __end_of_isdigit:
  3639                           
  3640                           	psect	text6
  3641  05B8                     __ptext6:	
  3642 ;; *************** function _fround *****************
  3643 ;; Defined at:
  3644 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;  prec            1    wreg     unsigned char 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  prec            1   55[BANK0 ] unsigned char 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  4   36[BANK0 ] unsigned char 
  3651 ;; Registers used:
  3652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3658 ;;      Params:         0       4       0       0       0
  3659 ;;      Locals:         0       9       0       0       0
  3660 ;;      Temps:          0       7       0       0       0
  3661 ;;      Totals:         0      20       0       0       0
  3662 ;;Total ram usage:       20 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    4
  3665 ;; This function calls:
  3666 ;;		___flmul
  3667 ;;		___lwdiv
  3668 ;;		___lwmod
  3669 ;; This function is called by:
  3670 ;;		_sprintf
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           
  3675                           ;psect for function _fround
  3676  05B8                     _fround:
  3677                           
  3678                           ;incstack = 0
  3679                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3680                           ;fround@prec stored from wreg
  3681  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3682  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3683  05BA  00D7               	movwf	fround@prec
  3684  05BB                     l2824:
  3685                           
  3686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3687  05BB  306E               	movlw	110
  3688  05BC  0257               	subwf	fround@prec,w
  3689  05BD  1C03               	skipc
  3690  05BE  2DC0               	goto	u4171
  3691  05BF  2DC1               	goto	u4170
  3692  05C0                     u4171:
  3693  05C0  2ED0               	goto	l2832
  3694  05C1                     u4170:
  3695  05C1                     l2826:
  3696                           
  3697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3698  05C1  303F               	movlw	63
  3699  05C2  00AD               	movwf	___flmul@b+3
  3700  05C3  3000               	movlw	0
  3701  05C4  00AC               	movwf	___flmul@b+2
  3702  05C5  3000               	movlw	0
  3703  05C6  00AB               	movwf	___flmul@b+1
  3704  05C7  3000               	movlw	0
  3705  05C8  00AA               	movwf	___flmul@b
  3706  05C9  3064               	movlw	100
  3707  05CA  00A0               	movwf	___lwdiv@divisor
  3708  05CB  3000               	movlw	0
  3709  05CC  00A1               	movwf	___lwdiv@divisor+1
  3710  05CD  0857               	movf	fround@prec,w
  3711  05CE  00C8               	movwf	??_fround
  3712  05CF  01C9               	clrf	??_fround+1
  3713  05D0  0848               	movf	??_fround,w
  3714  05D1  00A2               	movwf	___lwdiv@dividend
  3715  05D2  0849               	movf	??_fround+1,w
  3716  05D3  00A3               	movwf	___lwdiv@dividend+1
  3717  05D4  160A  158A  2499  120A  118A  	fcall	___lwdiv
  3718  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  3719  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  3720  05DB  0820               	movf	?___lwdiv,w
  3721  05DC  00CA               	movwf	??_fround+2
  3722  05DD  3001               	movlw	1
  3723  05DE                     u4185:
  3724  05DE  1003               	clrc
  3725  05DF  0DCA               	rlf	??_fround+2,f
  3726  05E0  3EFF               	addlw	-1
  3727  05E1  1D03               	skipz
  3728  05E2  2DDE               	goto	u4185
  3729  05E3  1003               	clrc
  3730  05E4  0D4A               	rlf	??_fround+2,w
  3731  05E5  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3732  05E6  0084               	movwf	4
  3733  05E7  160A  158A  200A  120A  118A  	fcall	stringdir
  3734  05EC  00CB               	movwf	??_fround+3
  3735  05ED  160A  158A  200A  120A  118A  	fcall	stringdir
  3736  05F2  00CC               	movwf	??_fround+4
  3737  05F3  160A  158A  200A  120A  118A  	fcall	stringdir
  3738  05F8  00CD               	movwf	??_fround+5
  3739  05F9  160A  158A  200A  120A  118A  	fcall	stringdir
  3740  05FE  00CE               	movwf	??_fround+6
  3741  05FF  084E               	movf	??_fround+6,w
  3742  0600  00B1               	movwf	___flmul@a+3
  3743  0601  084D               	movf	??_fround+5,w
  3744  0602  00B0               	movwf	___flmul@a+2
  3745  0603  084C               	movf	??_fround+4,w
  3746  0604  00AF               	movwf	___flmul@a+1
  3747  0605  084B               	movf	??_fround+3,w
  3748  0606  00AE               	movwf	___flmul@a
  3749  0607  120A  158A  213C  120A  118A  	fcall	___flmul
  3750  060C  1283               	bcf	3,5	;RP0=0, select bank0
  3751  060D  1303               	bcf	3,6	;RP1=0, select bank0
  3752  060E  082D               	movf	?___flmul+3,w
  3753  060F  00D6               	movwf	_fround$1200+3
  3754  0610  082C               	movf	?___flmul+2,w
  3755  0611  00D5               	movwf	_fround$1200+2
  3756  0612  082B               	movf	?___flmul+1,w
  3757  0613  00D4               	movwf	_fround$1200+1
  3758  0614  082A               	movf	?___flmul,w
  3759  0615  00D3               	movwf	_fround$1200
  3760                           
  3761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3762  0616  300A               	movlw	10
  3763  0617  00A0               	movwf	___lwdiv@divisor
  3764  0618  3000               	movlw	0
  3765  0619  00A1               	movwf	___lwdiv@divisor+1
  3766  061A  0857               	movf	fround@prec,w
  3767  061B  00C8               	movwf	??_fround
  3768  061C  01C9               	clrf	??_fround+1
  3769  061D  0848               	movf	??_fround,w
  3770  061E  00F5               	movwf	___lwmod@dividend
  3771  061F  0849               	movf	??_fround+1,w
  3772  0620  00F6               	movwf	___lwmod@dividend+1
  3773  0621  3064               	movlw	100
  3774  0622  00F3               	movwf	___lwmod@divisor
  3775  0623  3000               	movlw	0
  3776  0624  00F4               	movwf	___lwmod@divisor+1
  3777  0625  120A  118A  27C5  120A  118A  	fcall	___lwmod
  3778  062A  0874               	movf	?___lwmod+1,w
  3779  062B  1283               	bcf	3,5	;RP0=0, select bank0
  3780  062C  1303               	bcf	3,6	;RP1=0, select bank0
  3781  062D  00A3               	movwf	___lwdiv@dividend+1
  3782  062E  0873               	movf	?___lwmod,w
  3783  062F  00A2               	movwf	___lwdiv@dividend
  3784  0630  160A  158A  2499  120A  118A  	fcall	___lwdiv
  3785  0635  1283               	bcf	3,5	;RP0=0, select bank0
  3786  0636  1303               	bcf	3,6	;RP1=0, select bank0
  3787  0637  0820               	movf	?___lwdiv,w
  3788  0638  00CA               	movwf	??_fround+2
  3789  0639  3001               	movlw	1
  3790  063A                     u4195:
  3791  063A  1003               	clrc
  3792  063B  0DCA               	rlf	??_fround+2,f
  3793  063C  3EFF               	addlw	-1
  3794  063D  1D03               	skipz
  3795  063E  2E3A               	goto	u4195
  3796  063F  1003               	clrc
  3797  0640  0D4A               	rlf	??_fround+2,w
  3798  0641  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3799  0642  0084               	movwf	4
  3800  0643  160A  158A  200A  120A  118A  	fcall	stringdir
  3801  0648  00CB               	movwf	??_fround+3
  3802  0649  160A  158A  200A  120A  118A  	fcall	stringdir
  3803  064E  00CC               	movwf	??_fround+4
  3804  064F  160A  158A  200A  120A  118A  	fcall	stringdir
  3805  0654  00CD               	movwf	??_fround+5
  3806  0655  160A  158A  200A  120A  118A  	fcall	stringdir
  3807  065A  00CE               	movwf	??_fround+6
  3808  065B  084E               	movf	??_fround+6,w
  3809  065C  00AD               	movwf	___flmul@b+3
  3810  065D  084D               	movf	??_fround+5,w
  3811  065E  00AC               	movwf	___flmul@b+2
  3812  065F  084C               	movf	??_fround+4,w
  3813  0660  00AB               	movwf	___flmul@b+1
  3814  0661  084B               	movf	??_fround+3,w
  3815  0662  00AA               	movwf	___flmul@b
  3816  0663  0856               	movf	_fround$1200+3,w
  3817  0664  00B1               	movwf	___flmul@a+3
  3818  0665  0855               	movf	_fround$1200+2,w
  3819  0666  00B0               	movwf	___flmul@a+2
  3820  0667  0854               	movf	_fround$1200+1,w
  3821  0668  00AF               	movwf	___flmul@a+1
  3822  0669  0853               	movf	_fround$1200,w
  3823  066A  00AE               	movwf	___flmul@a
  3824  066B  120A  158A  213C  120A  118A  	fcall	___flmul
  3825  0670  1283               	bcf	3,5	;RP0=0, select bank0
  3826  0671  1303               	bcf	3,6	;RP1=0, select bank0
  3827  0672  082D               	movf	?___flmul+3,w
  3828  0673  00D2               	movwf	_fround$1201+3
  3829  0674  082C               	movf	?___flmul+2,w
  3830  0675  00D1               	movwf	_fround$1201+2
  3831  0676  082B               	movf	?___flmul+1,w
  3832  0677  00D0               	movwf	_fround$1201+1
  3833  0678  082A               	movf	?___flmul,w
  3834  0679  00CF               	movwf	_fround$1201
  3835                           
  3836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3837  067A  300A               	movlw	10
  3838  067B  00F3               	movwf	___lwmod@divisor
  3839  067C  3000               	movlw	0
  3840  067D  00F4               	movwf	___lwmod@divisor+1
  3841  067E  0857               	movf	fround@prec,w
  3842  067F  00C8               	movwf	??_fround
  3843  0680  01C9               	clrf	??_fround+1
  3844  0681  0848               	movf	??_fround,w
  3845  0682  00F5               	movwf	___lwmod@dividend
  3846  0683  0849               	movf	??_fround+1,w
  3847  0684  00F6               	movwf	___lwmod@dividend+1
  3848  0685  120A  118A  27C5  120A  118A  	fcall	___lwmod
  3849  068A  0873               	movf	?___lwmod,w
  3850  068B  1283               	bcf	3,5	;RP0=0, select bank0
  3851  068C  1303               	bcf	3,6	;RP1=0, select bank0
  3852  068D  00CA               	movwf	??_fround+2
  3853  068E  3001               	movlw	1
  3854  068F                     u4205:
  3855  068F  1003               	clrc
  3856  0690  0DCA               	rlf	??_fround+2,f
  3857  0691  3EFF               	addlw	-1
  3858  0692  1D03               	skipz
  3859  0693  2E8F               	goto	u4205
  3860  0694  1003               	clrc
  3861  0695  0D4A               	rlf	??_fround+2,w
  3862  0696  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3863  0697  0084               	movwf	4
  3864  0698  160A  158A  200A  120A  118A  	fcall	stringdir
  3865  069D  00CB               	movwf	??_fround+3
  3866  069E  160A  158A  200A  120A  118A  	fcall	stringdir
  3867  06A3  00CC               	movwf	??_fround+4
  3868  06A4  160A  158A  200A  120A  118A  	fcall	stringdir
  3869  06A9  00CD               	movwf	??_fround+5
  3870  06AA  160A  158A  200A  120A  118A  	fcall	stringdir
  3871  06AF  00CE               	movwf	??_fround+6
  3872  06B0  084E               	movf	??_fround+6,w
  3873  06B1  00AD               	movwf	___flmul@b+3
  3874  06B2  084D               	movf	??_fround+5,w
  3875  06B3  00AC               	movwf	___flmul@b+2
  3876  06B4  084C               	movf	??_fround+4,w
  3877  06B5  00AB               	movwf	___flmul@b+1
  3878  06B6  084B               	movf	??_fround+3,w
  3879  06B7  00AA               	movwf	___flmul@b
  3880  06B8  0852               	movf	_fround$1201+3,w
  3881  06B9  00B1               	movwf	___flmul@a+3
  3882  06BA  0851               	movf	_fround$1201+2,w
  3883  06BB  00B0               	movwf	___flmul@a+2
  3884  06BC  0850               	movf	_fround$1201+1,w
  3885  06BD  00AF               	movwf	___flmul@a+1
  3886  06BE  084F               	movf	_fround$1201,w
  3887  06BF  00AE               	movwf	___flmul@a
  3888  06C0  120A  158A  213C  120A  118A  	fcall	___flmul
  3889  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  3890  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  3891  06C7  082D               	movf	?___flmul+3,w
  3892  06C8  00C7               	movwf	?_fround+3
  3893  06C9  082C               	movf	?___flmul+2,w
  3894  06CA  00C6               	movwf	?_fround+2
  3895  06CB  082B               	movf	?___flmul+1,w
  3896  06CC  00C5               	movwf	?_fround+1
  3897  06CD  082A               	movf	?___flmul,w
  3898  06CE  00C4               	movwf	?_fround
  3899  06CF  2FC4               	goto	l315
  3900  06D0                     l2832:
  3901  06D0  300B               	movlw	11
  3902  06D1  0257               	subwf	fround@prec,w
  3903  06D2  1C03               	skipc
  3904  06D3  2ED5               	goto	u4211
  3905  06D4  2ED6               	goto	u4210
  3906  06D5                     u4211:
  3907  06D5  2F81               	goto	l2838
  3908  06D6                     u4210:
  3909  06D6                     l2834:
  3910                           
  3911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3912  06D6  303F               	movlw	63
  3913  06D7  00AD               	movwf	___flmul@b+3
  3914  06D8  3000               	movlw	0
  3915  06D9  00AC               	movwf	___flmul@b+2
  3916  06DA  3000               	movlw	0
  3917  06DB  00AB               	movwf	___flmul@b+1
  3918  06DC  3000               	movlw	0
  3919  06DD  00AA               	movwf	___flmul@b
  3920  06DE  300A               	movlw	10
  3921  06DF  00A0               	movwf	___lwdiv@divisor
  3922  06E0  3000               	movlw	0
  3923  06E1  00A1               	movwf	___lwdiv@divisor+1
  3924  06E2  0857               	movf	fround@prec,w
  3925  06E3  00C8               	movwf	??_fround
  3926  06E4  01C9               	clrf	??_fround+1
  3927  06E5  0848               	movf	??_fround,w
  3928  06E6  00A2               	movwf	___lwdiv@dividend
  3929  06E7  0849               	movf	??_fround+1,w
  3930  06E8  00A3               	movwf	___lwdiv@dividend+1
  3931  06E9  160A  158A  2499  120A  118A  	fcall	___lwdiv
  3932  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  3933  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  3934  06F0  0820               	movf	?___lwdiv,w
  3935  06F1  00CA               	movwf	??_fround+2
  3936  06F2  3001               	movlw	1
  3937  06F3                     u4225:
  3938  06F3  1003               	clrc
  3939  06F4  0DCA               	rlf	??_fround+2,f
  3940  06F5  3EFF               	addlw	-1
  3941  06F6  1D03               	skipz
  3942  06F7  2EF3               	goto	u4225
  3943  06F8  1003               	clrc
  3944  06F9  0D4A               	rlf	??_fround+2,w
  3945  06FA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3946  06FB  0084               	movwf	4
  3947  06FC  160A  158A  200A  120A  118A  	fcall	stringdir
  3948  0701  00CB               	movwf	??_fround+3
  3949  0702  160A  158A  200A  120A  118A  	fcall	stringdir
  3950  0707  00CC               	movwf	??_fround+4
  3951  0708  160A  158A  200A  120A  118A  	fcall	stringdir
  3952  070D  00CD               	movwf	??_fround+5
  3953  070E  160A  158A  200A  120A  118A  	fcall	stringdir
  3954  0713  00CE               	movwf	??_fround+6
  3955  0714  084E               	movf	??_fround+6,w
  3956  0715  00B1               	movwf	___flmul@a+3
  3957  0716  084D               	movf	??_fround+5,w
  3958  0717  00B0               	movwf	___flmul@a+2
  3959  0718  084C               	movf	??_fround+4,w
  3960  0719  00AF               	movwf	___flmul@a+1
  3961  071A  084B               	movf	??_fround+3,w
  3962  071B  00AE               	movwf	___flmul@a
  3963  071C  120A  158A  213C  120A  118A  	fcall	___flmul
  3964  0721  1283               	bcf	3,5	;RP0=0, select bank0
  3965  0722  1303               	bcf	3,6	;RP1=0, select bank0
  3966  0723  082D               	movf	?___flmul+3,w
  3967  0724  00D6               	movwf	_fround$1200+3
  3968  0725  082C               	movf	?___flmul+2,w
  3969  0726  00D5               	movwf	_fround$1200+2
  3970  0727  082B               	movf	?___flmul+1,w
  3971  0728  00D4               	movwf	_fround$1200+1
  3972  0729  082A               	movf	?___flmul,w
  3973  072A  00D3               	movwf	_fround$1200
  3974                           
  3975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3976  072B  300A               	movlw	10
  3977  072C  00F3               	movwf	___lwmod@divisor
  3978  072D  3000               	movlw	0
  3979  072E  00F4               	movwf	___lwmod@divisor+1
  3980  072F  0857               	movf	fround@prec,w
  3981  0730  00C8               	movwf	??_fround
  3982  0731  01C9               	clrf	??_fround+1
  3983  0732  0848               	movf	??_fround,w
  3984  0733  00F5               	movwf	___lwmod@dividend
  3985  0734  0849               	movf	??_fround+1,w
  3986  0735  00F6               	movwf	___lwmod@dividend+1
  3987  0736  120A  118A  27C5  120A  118A  	fcall	___lwmod
  3988  073B  0873               	movf	?___lwmod,w
  3989  073C  1283               	bcf	3,5	;RP0=0, select bank0
  3990  073D  1303               	bcf	3,6	;RP1=0, select bank0
  3991  073E  00CA               	movwf	??_fround+2
  3992  073F  3001               	movlw	1
  3993  0740                     u4235:
  3994  0740  1003               	clrc
  3995  0741  0DCA               	rlf	??_fround+2,f
  3996  0742  3EFF               	addlw	-1
  3997  0743  1D03               	skipz
  3998  0744  2F40               	goto	u4235
  3999  0745  1003               	clrc
  4000  0746  0D4A               	rlf	??_fround+2,w
  4001  0747  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4002  0748  0084               	movwf	4
  4003  0749  160A  158A  200A  120A  118A  	fcall	stringdir
  4004  074E  00CB               	movwf	??_fround+3
  4005  074F  160A  158A  200A  120A  118A  	fcall	stringdir
  4006  0754  00CC               	movwf	??_fround+4
  4007  0755  160A  158A  200A  120A  118A  	fcall	stringdir
  4008  075A  00CD               	movwf	??_fround+5
  4009  075B  160A  158A  200A  120A  118A  	fcall	stringdir
  4010  0760  00CE               	movwf	??_fround+6
  4011  0761  084E               	movf	??_fround+6,w
  4012  0762  00AD               	movwf	___flmul@b+3
  4013  0763  084D               	movf	??_fround+5,w
  4014  0764  00AC               	movwf	___flmul@b+2
  4015  0765  084C               	movf	??_fround+4,w
  4016  0766  00AB               	movwf	___flmul@b+1
  4017  0767  084B               	movf	??_fround+3,w
  4018  0768  00AA               	movwf	___flmul@b
  4019  0769  0856               	movf	_fround$1200+3,w
  4020  076A  00B1               	movwf	___flmul@a+3
  4021  076B  0855               	movf	_fround$1200+2,w
  4022  076C  00B0               	movwf	___flmul@a+2
  4023  076D  0854               	movf	_fround$1200+1,w
  4024  076E  00AF               	movwf	___flmul@a+1
  4025  076F  0853               	movf	_fround$1200,w
  4026  0770  00AE               	movwf	___flmul@a
  4027  0771  120A  158A  213C  120A  118A  	fcall	___flmul
  4028  0776  1283               	bcf	3,5	;RP0=0, select bank0
  4029  0777  1303               	bcf	3,6	;RP1=0, select bank0
  4030  0778  082D               	movf	?___flmul+3,w
  4031  0779  00C7               	movwf	?_fround+3
  4032  077A  082C               	movf	?___flmul+2,w
  4033  077B  00C6               	movwf	?_fround+2
  4034  077C  082B               	movf	?___flmul+1,w
  4035  077D  00C5               	movwf	?_fround+1
  4036  077E  082A               	movf	?___flmul,w
  4037  077F  00C4               	movwf	?_fround
  4038  0780  2FC4               	goto	l315
  4039  0781                     l2838:
  4040                           
  4041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4042  0781  303F               	movlw	63
  4043  0782  00AD               	movwf	___flmul@b+3
  4044  0783  3000               	movlw	0
  4045  0784  00AC               	movwf	___flmul@b+2
  4046  0785  3000               	movlw	0
  4047  0786  00AB               	movwf	___flmul@b+1
  4048  0787  3000               	movlw	0
  4049  0788  00AA               	movwf	___flmul@b
  4050  0789  0857               	movf	fround@prec,w
  4051  078A  00C8               	movwf	??_fround
  4052  078B  3001               	movlw	1
  4053  078C                     u4245:
  4054  078C  1003               	clrc
  4055  078D  0DC8               	rlf	??_fround,f
  4056  078E  3EFF               	addlw	-1
  4057  078F  1D03               	skipz
  4058  0790  2F8C               	goto	u4245
  4059  0791  1003               	clrc
  4060  0792  0D48               	rlf	??_fround,w
  4061  0793  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4062  0794  0084               	movwf	4
  4063  0795  160A  158A  200A  120A  118A  	fcall	stringdir
  4064  079A  00C9               	movwf	??_fround+1
  4065  079B  160A  158A  200A  120A  118A  	fcall	stringdir
  4066  07A0  00CA               	movwf	??_fround+2
  4067  07A1  160A  158A  200A  120A  118A  	fcall	stringdir
  4068  07A6  00CB               	movwf	??_fround+3
  4069  07A7  160A  158A  200A  120A  118A  	fcall	stringdir
  4070  07AC  00CC               	movwf	??_fround+4
  4071  07AD  084C               	movf	??_fround+4,w
  4072  07AE  00B1               	movwf	___flmul@a+3
  4073  07AF  084B               	movf	??_fround+3,w
  4074  07B0  00B0               	movwf	___flmul@a+2
  4075  07B1  084A               	movf	??_fround+2,w
  4076  07B2  00AF               	movwf	___flmul@a+1
  4077  07B3  0849               	movf	??_fround+1,w
  4078  07B4  00AE               	movwf	___flmul@a
  4079  07B5  120A  158A  213C  120A  118A  	fcall	___flmul
  4080  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  4081  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  4082  07BC  082D               	movf	?___flmul+3,w
  4083  07BD  00C7               	movwf	?_fround+3
  4084  07BE  082C               	movf	?___flmul+2,w
  4085  07BF  00C6               	movwf	?_fround+2
  4086  07C0  082B               	movf	?___flmul+1,w
  4087  07C1  00C5               	movwf	?_fround+1
  4088  07C2  082A               	movf	?___flmul,w
  4089  07C3  00C4               	movwf	?_fround
  4090  07C4                     l315:
  4091  07C4  0008               	return
  4092  07C5                     __end_of_fround:
  4093                           
  4094                           	psect	text7
  4095  07C5                     __ptext7:	
  4096 ;; *************** function ___lwmod *****************
  4097 ;; Defined at:
  4098 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  divisor         2    3[COMMON] unsigned int 
  4101 ;;  dividend        2    5[COMMON] unsigned int 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  counter         1    8[COMMON] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  2    3[COMMON] unsigned int 
  4106 ;; Registers used:
  4107 ;;		wreg, status,2, status,0
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4113 ;;      Params:         4       0       0       0       0
  4114 ;;      Locals:         1       0       0       0       0
  4115 ;;      Temps:          1       0       0       0       0
  4116 ;;      Totals:         6       0       0       0       0
  4117 ;;Total ram usage:        6 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    2
  4120 ;; This function calls:
  4121 ;;		Nothing
  4122 ;; This function is called by:
  4123 ;;		_fround
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           
  4128                           ;psect for function ___lwmod
  4129  07C5                     ___lwmod:
  4130  07C5                     l2442:	
  4131                           ;incstack = 0
  4132                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4133                           
  4134  07C5  0873               	movf	___lwmod@divisor,w
  4135  07C6  0474               	iorwf	___lwmod@divisor+1,w
  4136  07C7  1903               	btfsc	3,2
  4137  07C8  2FCA               	goto	u3271
  4138  07C9  2FCB               	goto	u3270
  4139  07CA                     u3271:
  4140  07CA  2FFA               	goto	l2460
  4141  07CB                     u3270:
  4142  07CB                     l2444:
  4143  07CB  01F8               	clrf	___lwmod@counter
  4144  07CC  0AF8               	incf	___lwmod@counter,f
  4145  07CD  2FD9               	goto	l2450
  4146  07CE                     l2446:
  4147  07CE  3001               	movlw	1
  4148  07CF                     u3285:
  4149  07CF  1003               	clrc
  4150  07D0  0DF3               	rlf	___lwmod@divisor,f
  4151  07D1  0DF4               	rlf	___lwmod@divisor+1,f
  4152  07D2  3EFF               	addlw	-1
  4153  07D3  1D03               	skipz
  4154  07D4  2FCF               	goto	u3285
  4155  07D5                     l2448:
  4156  07D5  3001               	movlw	1
  4157  07D6  00F7               	movwf	??___lwmod
  4158  07D7  0877               	movf	??___lwmod,w
  4159  07D8  07F8               	addwf	___lwmod@counter,f
  4160  07D9                     l2450:
  4161  07D9  1FF4               	btfss	___lwmod@divisor+1,7
  4162  07DA  2FDC               	goto	u3291
  4163  07DB  2FDD               	goto	u3290
  4164  07DC                     u3291:
  4165  07DC  2FCE               	goto	l2446
  4166  07DD                     u3290:
  4167  07DD                     l2452:
  4168  07DD  0874               	movf	___lwmod@divisor+1,w
  4169  07DE  0276               	subwf	___lwmod@dividend+1,w
  4170  07DF  1D03               	skipz
  4171  07E0  2FE3               	goto	u3305
  4172  07E1  0873               	movf	___lwmod@divisor,w
  4173  07E2  0275               	subwf	___lwmod@dividend,w
  4174  07E3                     u3305:
  4175  07E3  1C03               	skipc
  4176  07E4  2FE6               	goto	u3301
  4177  07E5  2FE7               	goto	u3300
  4178  07E6                     u3301:
  4179  07E6  2FED               	goto	l2456
  4180  07E7                     u3300:
  4181  07E7                     l2454:
  4182  07E7  0873               	movf	___lwmod@divisor,w
  4183  07E8  02F5               	subwf	___lwmod@dividend,f
  4184  07E9  0874               	movf	___lwmod@divisor+1,w
  4185  07EA  1C03               	skipc
  4186  07EB  03F6               	decf	___lwmod@dividend+1,f
  4187  07EC  02F6               	subwf	___lwmod@dividend+1,f
  4188  07ED                     l2456:
  4189  07ED  3001               	movlw	1
  4190  07EE                     u3315:
  4191  07EE  1003               	clrc
  4192  07EF  0CF4               	rrf	___lwmod@divisor+1,f
  4193  07F0  0CF3               	rrf	___lwmod@divisor,f
  4194  07F1  3EFF               	addlw	-1
  4195  07F2  1D03               	skipz
  4196  07F3  2FEE               	goto	u3315
  4197  07F4                     l2458:
  4198  07F4  3001               	movlw	1
  4199  07F5  02F8               	subwf	___lwmod@counter,f
  4200  07F6  1D03               	btfss	3,2
  4201  07F7  2FF9               	goto	u3321
  4202  07F8  2FFA               	goto	u3320
  4203  07F9                     u3321:
  4204  07F9  2FDD               	goto	l2452
  4205  07FA                     u3320:
  4206  07FA                     l2460:
  4207  07FA  0876               	movf	___lwmod@dividend+1,w
  4208  07FB  00F4               	movwf	?___lwmod+1
  4209  07FC  0875               	movf	___lwmod@dividend,w
  4210  07FD  00F3               	movwf	?___lwmod
  4211  07FE                     l725:
  4212  07FE  0008               	return
  4213  07FF                     __end_of___lwmod:
  4214                           
  4215                           	psect	text8
  4216  1C99                     __ptext8:	
  4217 ;; *************** function ___lwdiv *****************
  4218 ;; Defined at:
  4219 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  divisor         2    0[BANK0 ] unsigned int 
  4222 ;;  dividend        2    2[BANK0 ] unsigned int 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  quotient        2    4[BANK0 ] unsigned int 
  4225 ;;  counter         1    6[BANK0 ] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  2    0[BANK0 ] unsigned int 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4235 ;;      Params:         0       4       0       0       0
  4236 ;;      Locals:         0       3       0       0       0
  4237 ;;      Temps:          1       0       0       0       0
  4238 ;;      Totals:         1       7       0       0       0
  4239 ;;Total ram usage:        8 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:    2
  4242 ;; This function calls:
  4243 ;;		Nothing
  4244 ;; This function is called by:
  4245 ;;		_fround
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           
  4250                           ;psect for function ___lwdiv
  4251  1C99                     ___lwdiv:
  4252  1C99                     l2416:	
  4253                           ;incstack = 0
  4254                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4255                           
  4256  1C99  1283               	bcf	3,5	;RP0=0, select bank0
  4257  1C9A  1303               	bcf	3,6	;RP1=0, select bank0
  4258  1C9B  01A4               	clrf	___lwdiv@quotient
  4259  1C9C  01A5               	clrf	___lwdiv@quotient+1
  4260  1C9D                     l2418:
  4261  1C9D  0820               	movf	___lwdiv@divisor,w
  4262  1C9E  0421               	iorwf	___lwdiv@divisor+1,w
  4263  1C9F  1903               	btfsc	3,2
  4264  1CA0  2CA2               	goto	u3201
  4265  1CA1  2CA3               	goto	u3200
  4266  1CA2                     u3201:
  4267  1CA2  2CDA               	goto	l2438
  4268  1CA3                     u3200:
  4269  1CA3                     l2420:
  4270  1CA3  01A6               	clrf	___lwdiv@counter
  4271  1CA4  0AA6               	incf	___lwdiv@counter,f
  4272  1CA5  2CB1               	goto	l2426
  4273  1CA6                     l2422:
  4274  1CA6  3001               	movlw	1
  4275  1CA7                     u3215:
  4276  1CA7  1003               	clrc
  4277  1CA8  0DA0               	rlf	___lwdiv@divisor,f
  4278  1CA9  0DA1               	rlf	___lwdiv@divisor+1,f
  4279  1CAA  3EFF               	addlw	-1
  4280  1CAB  1D03               	skipz
  4281  1CAC  2CA7               	goto	u3215
  4282  1CAD                     l2424:
  4283  1CAD  3001               	movlw	1
  4284  1CAE  00F9               	movwf	??___lwdiv
  4285  1CAF  0879               	movf	??___lwdiv,w
  4286  1CB0  07A6               	addwf	___lwdiv@counter,f
  4287  1CB1                     l2426:
  4288  1CB1  1FA1               	btfss	___lwdiv@divisor+1,7
  4289  1CB2  2CB4               	goto	u3221
  4290  1CB3  2CB5               	goto	u3220
  4291  1CB4                     u3221:
  4292  1CB4  2CA6               	goto	l2422
  4293  1CB5                     u3220:
  4294  1CB5                     l2428:
  4295  1CB5  3001               	movlw	1
  4296  1CB6                     u3235:
  4297  1CB6  1003               	clrc
  4298  1CB7  0DA4               	rlf	___lwdiv@quotient,f
  4299  1CB8  0DA5               	rlf	___lwdiv@quotient+1,f
  4300  1CB9  3EFF               	addlw	-1
  4301  1CBA  1D03               	skipz
  4302  1CBB  2CB6               	goto	u3235
  4303  1CBC  0821               	movf	___lwdiv@divisor+1,w
  4304  1CBD  0223               	subwf	___lwdiv@dividend+1,w
  4305  1CBE  1D03               	skipz
  4306  1CBF  2CC2               	goto	u3245
  4307  1CC0  0820               	movf	___lwdiv@divisor,w
  4308  1CC1  0222               	subwf	___lwdiv@dividend,w
  4309  1CC2                     u3245:
  4310  1CC2  1C03               	skipc
  4311  1CC3  2CC5               	goto	u3241
  4312  1CC4  2CC6               	goto	u3240
  4313  1CC5                     u3241:
  4314  1CC5  2CCD               	goto	l2434
  4315  1CC6                     u3240:
  4316  1CC6                     l2430:
  4317  1CC6  0820               	movf	___lwdiv@divisor,w
  4318  1CC7  02A2               	subwf	___lwdiv@dividend,f
  4319  1CC8  0821               	movf	___lwdiv@divisor+1,w
  4320  1CC9  1C03               	skipc
  4321  1CCA  03A3               	decf	___lwdiv@dividend+1,f
  4322  1CCB  02A3               	subwf	___lwdiv@dividend+1,f
  4323  1CCC                     l2432:
  4324  1CCC  1424               	bsf	___lwdiv@quotient,0
  4325  1CCD                     l2434:
  4326  1CCD  3001               	movlw	1
  4327  1CCE                     u3255:
  4328  1CCE  1003               	clrc
  4329  1CCF  0CA1               	rrf	___lwdiv@divisor+1,f
  4330  1CD0  0CA0               	rrf	___lwdiv@divisor,f
  4331  1CD1  3EFF               	addlw	-1
  4332  1CD2  1D03               	skipz
  4333  1CD3  2CCE               	goto	u3255
  4334  1CD4                     l2436:
  4335  1CD4  3001               	movlw	1
  4336  1CD5  02A6               	subwf	___lwdiv@counter,f
  4337  1CD6  1D03               	btfss	3,2
  4338  1CD7  2CD9               	goto	u3261
  4339  1CD8  2CDA               	goto	u3260
  4340  1CD9                     u3261:
  4341  1CD9  2CB5               	goto	l2428
  4342  1CDA                     u3260:
  4343  1CDA                     l2438:
  4344  1CDA  0825               	movf	___lwdiv@quotient+1,w
  4345  1CDB  00A1               	movwf	?___lwdiv+1
  4346  1CDC  0824               	movf	___lwdiv@quotient,w
  4347  1CDD  00A0               	movwf	?___lwdiv
  4348  1CDE                     l715:
  4349  1CDE  0008               	return
  4350  1CDF                     __end_of___lwdiv:
  4351                           
  4352                           	psect	text9
  4353  10F7                     __ptext9:	
  4354 ;; *************** function __tdiv_to_l_ *****************
  4355 ;; Defined at:
  4356 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  f1              4    0[BANK0 ] float 
  4359 ;;  f2              4    4[BANK0 ] float 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;  quot            4    8[BANK0 ] unsigned long 
  4362 ;;  exp1            1   13[BANK0 ] unsigned char 
  4363 ;;  cntr            1   12[BANK0 ] unsigned char 
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  4    0[BANK0 ] unsigned long 
  4366 ;; Registers used:
  4367 ;;		wreg, status,2, status,0
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4373 ;;      Params:         0       8       0       0       0
  4374 ;;      Locals:         0       6       0       0       0
  4375 ;;      Temps:          4       0       0       0       0
  4376 ;;      Totals:         4      14       0       0       0
  4377 ;;Total ram usage:       18 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:    2
  4380 ;; This function calls:
  4381 ;;		Nothing
  4382 ;; This function is called by:
  4383 ;;		_sprintf
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           
  4388                           ;psect for function __tdiv_to_l_
  4389  10F7                     __tdiv_to_l_:
  4390  10F7                     l3758:	
  4391                           ;incstack = 0
  4392                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4393                           
  4394  10F7  1283               	bcf	3,5	;RP0=0, select bank0
  4395  10F8  1303               	bcf	3,6	;RP1=0, select bank0
  4396  10F9  0820               	movf	__tdiv_to_l_@f1,w
  4397  10FA  00F3               	movwf	??__tdiv_to_l_
  4398  10FB  0821               	movf	__tdiv_to_l_@f1+1,w
  4399  10FC  00F4               	movwf	??__tdiv_to_l_+1
  4400  10FD  0822               	movf	__tdiv_to_l_@f1+2,w
  4401  10FE  00F5               	movwf	??__tdiv_to_l_+2
  4402  10FF  1003               	clrc
  4403  1100  0D74               	rlf	??__tdiv_to_l_+1,w
  4404  1101  0D75               	rlf	??__tdiv_to_l_+2,w
  4405  1102  00F6               	movwf	??__tdiv_to_l_+3
  4406  1103  0876               	movf	??__tdiv_to_l_+3,w
  4407  1104  00AD               	movwf	__tdiv_to_l_@exp1
  4408  1105  082D               	movf	__tdiv_to_l_@exp1,w
  4409  1106  1D03               	btfss	3,2
  4410  1107  2909               	goto	u6141
  4411  1108  290A               	goto	u6140
  4412  1109                     u6141:
  4413  1109  2913               	goto	l3764
  4414  110A                     u6140:
  4415  110A                     l3760:
  4416  110A  3000               	movlw	0
  4417  110B  00A3               	movwf	?__tdiv_to_l_+3
  4418  110C  3000               	movlw	0
  4419  110D  00A2               	movwf	?__tdiv_to_l_+2
  4420  110E  3000               	movlw	0
  4421  110F  00A1               	movwf	?__tdiv_to_l_+1
  4422  1110  3000               	movlw	0
  4423  1111  00A0               	movwf	?__tdiv_to_l_
  4424  1112  29B3               	goto	l626
  4425  1113                     l3764:
  4426  1113  0824               	movf	__tdiv_to_l_@f2,w
  4427  1114  00F3               	movwf	??__tdiv_to_l_
  4428  1115  0825               	movf	__tdiv_to_l_@f2+1,w
  4429  1116  00F4               	movwf	??__tdiv_to_l_+1
  4430  1117  0826               	movf	__tdiv_to_l_@f2+2,w
  4431  1118  00F5               	movwf	??__tdiv_to_l_+2
  4432  1119  1003               	clrc
  4433  111A  0D74               	rlf	??__tdiv_to_l_+1,w
  4434  111B  0D75               	rlf	??__tdiv_to_l_+2,w
  4435  111C  00F6               	movwf	??__tdiv_to_l_+3
  4436  111D  0876               	movf	??__tdiv_to_l_+3,w
  4437  111E  00AC               	movwf	__tdiv_to_l_@cntr
  4438  111F  082C               	movf	__tdiv_to_l_@cntr,w
  4439  1120  1D03               	btfss	3,2
  4440  1121  2923               	goto	u6151
  4441  1122  2924               	goto	u6150
  4442  1123                     u6151:
  4443  1123  2925               	goto	l627
  4444  1124                     u6150:
  4445  1124  290A               	goto	l3760
  4446  1125                     l627:
  4447  1125  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4448  1126                     l3770:
  4449  1126  30FF               	movlw	255
  4450  1127  05A0               	andwf	__tdiv_to_l_@f1,f
  4451  1128  30FF               	movlw	255
  4452  1129  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4453  112A  3000               	movlw	0
  4454  112B  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4455  112C                     l3772:
  4456  112C  17A5               	bsf	__tdiv_to_l_@f2+1,7
  4457  112D  30FF               	movlw	255
  4458  112E  05A4               	andwf	__tdiv_to_l_@f2,f
  4459  112F  30FF               	movlw	255
  4460  1130  05A5               	andwf	__tdiv_to_l_@f2+1,f
  4461  1131  3000               	movlw	0
  4462  1132  05A6               	andwf	__tdiv_to_l_@f2+2,f
  4463  1133  3000               	movlw	0
  4464  1134  00AB               	movwf	__tdiv_to_l_@quot+3
  4465  1135  3000               	movlw	0
  4466  1136  00AA               	movwf	__tdiv_to_l_@quot+2
  4467  1137  3000               	movlw	0
  4468  1138  00A9               	movwf	__tdiv_to_l_@quot+1
  4469  1139  3000               	movlw	0
  4470  113A  00A8               	movwf	__tdiv_to_l_@quot
  4471  113B                     l3774:
  4472  113B  307F               	movlw	127
  4473  113C  02AD               	subwf	__tdiv_to_l_@exp1,f
  4474  113D                     l3776:
  4475  113D  3098               	movlw	152
  4476  113E  072C               	addwf	__tdiv_to_l_@cntr,w
  4477  113F  00F3               	movwf	??__tdiv_to_l_
  4478  1140  0873               	movf	??__tdiv_to_l_,w
  4479  1141  02AD               	subwf	__tdiv_to_l_@exp1,f
  4480  1142  3018               	movlw	24
  4481  1143  00F3               	movwf	??__tdiv_to_l_
  4482  1144  0873               	movf	??__tdiv_to_l_,w
  4483  1145  00AC               	movwf	__tdiv_to_l_@cntr
  4484  1146                     l3778:
  4485  1146  3001               	movlw	1
  4486  1147  00F3               	movwf	??__tdiv_to_l_
  4487  1148                     u6165:
  4488  1148  1003               	clrc
  4489  1149  0DA8               	rlf	__tdiv_to_l_@quot,f
  4490  114A  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  4491  114B  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  4492  114C  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  4493  114D  0BF3               	decfsz	??__tdiv_to_l_,f
  4494  114E  2948               	goto	u6165
  4495  114F                     l3780:
  4496  114F  0826               	movf	__tdiv_to_l_@f2+2,w
  4497  1150  0222               	subwf	__tdiv_to_l_@f1+2,w
  4498  1151  1D03               	skipz
  4499  1152  2959               	goto	u6175
  4500  1153  0825               	movf	__tdiv_to_l_@f2+1,w
  4501  1154  0221               	subwf	__tdiv_to_l_@f1+1,w
  4502  1155  1D03               	skipz
  4503  1156  2959               	goto	u6175
  4504  1157  0824               	movf	__tdiv_to_l_@f2,w
  4505  1158  0220               	subwf	__tdiv_to_l_@f1,w
  4506  1159                     u6175:
  4507  1159  1C03               	skipc
  4508  115A  295C               	goto	u6171
  4509  115B  295D               	goto	u6170
  4510  115C                     u6171:
  4511  115C  2968               	goto	l3786
  4512  115D                     u6170:
  4513  115D                     l3782:
  4514  115D  0824               	movf	__tdiv_to_l_@f2,w
  4515  115E  02A0               	subwf	__tdiv_to_l_@f1,f
  4516  115F  0825               	movf	__tdiv_to_l_@f2+1,w
  4517  1160  1C03               	skipc
  4518  1161  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  4519  1162  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4520  1163  0826               	movf	__tdiv_to_l_@f2+2,w
  4521  1164  1C03               	skipc
  4522  1165  0A26               	incf	__tdiv_to_l_@f2+2,w
  4523  1166  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4524  1167                     l3784:
  4525  1167  1428               	bsf	__tdiv_to_l_@quot,0
  4526  1168                     l3786:
  4527  1168  3001               	movlw	1
  4528  1169                     u6185:
  4529  1169  1003               	clrc
  4530  116A  0DA0               	rlf	__tdiv_to_l_@f1,f
  4531  116B  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4532  116C  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4533  116D  3EFF               	addlw	-1
  4534  116E  1D03               	skipz
  4535  116F  2969               	goto	u6185
  4536  1170                     l3788:
  4537  1170  3001               	movlw	1
  4538  1171  02AC               	subwf	__tdiv_to_l_@cntr,f
  4539  1172  1D03               	btfss	3,2
  4540  1173  2975               	goto	u6191
  4541  1174  2976               	goto	u6190
  4542  1175                     u6191:
  4543  1175  2946               	goto	l3778
  4544  1176                     u6190:
  4545  1176                     l630:
  4546  1176  1FAD               	btfss	__tdiv_to_l_@exp1,7
  4547  1177  2979               	goto	u6201
  4548  1178  297A               	goto	u6200
  4549  1179                     u6201:
  4550  1179  2994               	goto	l3798
  4551  117A                     u6200:
  4552  117A                     l3790:
  4553  117A  082D               	movf	__tdiv_to_l_@exp1,w
  4554  117B  3A80               	xorlw	128
  4555  117C  3E97               	addlw	151
  4556  117D  1803               	skipnc
  4557  117E  2980               	goto	u6211
  4558  117F  2981               	goto	u6210
  4559  1180                     u6211:
  4560  1180  2982               	goto	l3796
  4561  1181                     u6210:
  4562  1181  290A               	goto	l3760
  4563  1182                     l3796:
  4564  1182  3001               	movlw	1
  4565  1183                     u6225:
  4566  1183  1003               	clrc
  4567  1184  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  4568  1185  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  4569  1186  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  4570  1187  0CA8               	rrf	__tdiv_to_l_@quot,f
  4571  1188  3EFF               	addlw	-1
  4572  1189  1D03               	skipz
  4573  118A  2983               	goto	u6225
  4574  118B  3001               	movlw	1
  4575  118C  00F3               	movwf	??__tdiv_to_l_
  4576  118D  0873               	movf	??__tdiv_to_l_,w
  4577  118E  07AD               	addwf	__tdiv_to_l_@exp1,f
  4578  118F  1D03               	btfss	3,2
  4579  1190  2992               	goto	u6231
  4580  1191  2993               	goto	u6230
  4581  1192                     u6231:
  4582  1192  2982               	goto	l3796
  4583  1193                     u6230:
  4584  1193  29AB               	goto	l3806
  4585  1194                     l3798:
  4586  1194  3018               	movlw	24
  4587  1195  022D               	subwf	__tdiv_to_l_@exp1,w
  4588  1196  1C03               	skipc
  4589  1197  2999               	goto	u6241
  4590  1198  299A               	goto	u6240
  4591  1199                     u6241:
  4592  1199  29A6               	goto	l637
  4593  119A                     u6240:
  4594  119A  290A               	goto	l3760
  4595  119B                     l3804:
  4596  119B  3001               	movlw	1
  4597  119C  00F3               	movwf	??__tdiv_to_l_
  4598  119D                     u6255:
  4599  119D  1003               	clrc
  4600  119E  0DA8               	rlf	__tdiv_to_l_@quot,f
  4601  119F  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  4602  11A0  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  4603  11A1  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  4604  11A2  0BF3               	decfsz	??__tdiv_to_l_,f
  4605  11A3  299D               	goto	u6255
  4606  11A4  3001               	movlw	1
  4607  11A5  02AD               	subwf	__tdiv_to_l_@exp1,f
  4608  11A6                     l637:
  4609  11A6  082D               	movf	__tdiv_to_l_@exp1,w
  4610  11A7  1D03               	btfss	3,2
  4611  11A8  29AA               	goto	u6261
  4612  11A9  29AB               	goto	u6260
  4613  11AA                     u6261:
  4614  11AA  299B               	goto	l3804
  4615  11AB                     u6260:
  4616  11AB                     l3806:
  4617  11AB  082B               	movf	__tdiv_to_l_@quot+3,w
  4618  11AC  00A3               	movwf	?__tdiv_to_l_+3
  4619  11AD  082A               	movf	__tdiv_to_l_@quot+2,w
  4620  11AE  00A2               	movwf	?__tdiv_to_l_+2
  4621  11AF  0829               	movf	__tdiv_to_l_@quot+1,w
  4622  11B0  00A1               	movwf	?__tdiv_to_l_+1
  4623  11B1  0828               	movf	__tdiv_to_l_@quot,w
  4624  11B2  00A0               	movwf	?__tdiv_to_l_
  4625  11B3                     l626:
  4626  11B3  0008               	return
  4627  11B4                     __end_of__tdiv_to_l_:
  4628                           
  4629                           	psect	text10
  4630  11B4                     __ptext10:	
  4631 ;; *************** function __div_to_l_ *****************
  4632 ;; Defined at:
  4633 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  f1              4    0[BANK0 ] unsigned long 
  4636 ;;  f2              4    4[BANK0 ] unsigned long 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  quot            4    4[COMMON] unsigned long 
  4639 ;;  exp1            1    9[COMMON] unsigned char 
  4640 ;;  cntr            1    8[COMMON] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  4    0[BANK0 ] unsigned long 
  4643 ;; Registers used:
  4644 ;;		wreg, status,2, status,0
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4650 ;;      Params:         0       8       0       0       0
  4651 ;;      Locals:         6       0       0       0       0
  4652 ;;      Temps:          1       0       0       0       0
  4653 ;;      Totals:         7       8       0       0       0
  4654 ;;Total ram usage:       15 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    2
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_sprintf
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           
  4665                           ;psect for function __div_to_l_
  4666  11B4                     __div_to_l_:
  4667  11B4                     l3810:	
  4668                           ;incstack = 0
  4669                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  4670                           
  4671  11B4  1003               	clrc
  4672  11B5  1283               	bcf	3,5	;RP0=0, select bank0
  4673  11B6  1303               	bcf	3,6	;RP1=0, select bank0
  4674  11B7  0D22               	rlf	__div_to_l_@f1+2,w
  4675  11B8  0D23               	rlf	__div_to_l_@f1+3,w
  4676  11B9  00F3               	movwf	??__div_to_l_
  4677  11BA  0873               	movf	??__div_to_l_,w
  4678  11BB  00F9               	movwf	__div_to_l_@exp1
  4679  11BC  0879               	movf	__div_to_l_@exp1,w
  4680  11BD  1D03               	btfss	3,2
  4681  11BE  29C0               	goto	u6271
  4682  11BF  29C1               	goto	u6270
  4683  11C0                     u6271:
  4684  11C0  29CA               	goto	l3816
  4685  11C1                     u6270:
  4686  11C1                     l3812:
  4687  11C1  3000               	movlw	0
  4688  11C2  00A3               	movwf	?__div_to_l_+3
  4689  11C3  3000               	movlw	0
  4690  11C4  00A2               	movwf	?__div_to_l_+2
  4691  11C5  3000               	movlw	0
  4692  11C6  00A1               	movwf	?__div_to_l_+1
  4693  11C7  3000               	movlw	0
  4694  11C8  00A0               	movwf	?__div_to_l_
  4695  11C9  2A73               	goto	l579
  4696  11CA                     l3816:
  4697  11CA  1003               	clrc
  4698  11CB  0D26               	rlf	__div_to_l_@f2+2,w
  4699  11CC  0D27               	rlf	__div_to_l_@f2+3,w
  4700  11CD  00F3               	movwf	??__div_to_l_
  4701  11CE  0873               	movf	??__div_to_l_,w
  4702  11CF  00F8               	movwf	__div_to_l_@cntr
  4703  11D0  0878               	movf	__div_to_l_@cntr,w
  4704  11D1  1D03               	btfss	3,2
  4705  11D2  29D4               	goto	u6281
  4706  11D3  29D5               	goto	u6280
  4707  11D4                     u6281:
  4708  11D4  29D6               	goto	l580
  4709  11D5                     u6280:
  4710  11D5  29C1               	goto	l3812
  4711  11D6                     l580:
  4712  11D6  17A2               	bsf	__div_to_l_@f1+2,7
  4713  11D7                     l3822:
  4714  11D7  30FF               	movlw	255
  4715  11D8  05A0               	andwf	__div_to_l_@f1,f
  4716  11D9  30FF               	movlw	255
  4717  11DA  05A1               	andwf	__div_to_l_@f1+1,f
  4718  11DB  30FF               	movlw	255
  4719  11DC  05A2               	andwf	__div_to_l_@f1+2,f
  4720  11DD  3000               	movlw	0
  4721  11DE  05A3               	andwf	__div_to_l_@f1+3,f
  4722  11DF                     l3824:
  4723  11DF  17A6               	bsf	__div_to_l_@f2+2,7
  4724  11E0  30FF               	movlw	255
  4725  11E1  05A4               	andwf	__div_to_l_@f2,f
  4726  11E2  30FF               	movlw	255
  4727  11E3  05A5               	andwf	__div_to_l_@f2+1,f
  4728  11E4  30FF               	movlw	255
  4729  11E5  05A6               	andwf	__div_to_l_@f2+2,f
  4730  11E6  3000               	movlw	0
  4731  11E7  05A7               	andwf	__div_to_l_@f2+3,f
  4732  11E8  3000               	movlw	0
  4733  11E9  00F7               	movwf	__div_to_l_@quot+3
  4734  11EA  3000               	movlw	0
  4735  11EB  00F6               	movwf	__div_to_l_@quot+2
  4736  11EC  3000               	movlw	0
  4737  11ED  00F5               	movwf	__div_to_l_@quot+1
  4738  11EE  3000               	movlw	0
  4739  11EF  00F4               	movwf	__div_to_l_@quot
  4740  11F0                     l3826:
  4741  11F0  307F               	movlw	127
  4742  11F1  02F9               	subwf	__div_to_l_@exp1,f
  4743  11F2                     l3828:
  4744  11F2  30A0               	movlw	160
  4745  11F3  0778               	addwf	__div_to_l_@cntr,w
  4746  11F4  00F3               	movwf	??__div_to_l_
  4747  11F5  0873               	movf	??__div_to_l_,w
  4748  11F6  02F9               	subwf	__div_to_l_@exp1,f
  4749  11F7  3020               	movlw	32
  4750  11F8  00F3               	movwf	??__div_to_l_
  4751  11F9  0873               	movf	??__div_to_l_,w
  4752  11FA  00F8               	movwf	__div_to_l_@cntr
  4753  11FB                     l3830:
  4754  11FB  3001               	movlw	1
  4755  11FC  00F3               	movwf	??__div_to_l_
  4756  11FD                     u6295:
  4757  11FD  1003               	clrc
  4758  11FE  0DF4               	rlf	__div_to_l_@quot,f
  4759  11FF  0DF5               	rlf	__div_to_l_@quot+1,f
  4760  1200  0DF6               	rlf	__div_to_l_@quot+2,f
  4761  1201  0DF7               	rlf	__div_to_l_@quot+3,f
  4762  1202  0BF3               	decfsz	??__div_to_l_,f
  4763  1203  29FD               	goto	u6295
  4764  1204                     l3832:
  4765  1204  0827               	movf	__div_to_l_@f2+3,w
  4766  1205  0223               	subwf	__div_to_l_@f1+3,w
  4767  1206  1D03               	skipz
  4768  1207  2A12               	goto	u6305
  4769  1208  0826               	movf	__div_to_l_@f2+2,w
  4770  1209  0222               	subwf	__div_to_l_@f1+2,w
  4771  120A  1D03               	skipz
  4772  120B  2A12               	goto	u6305
  4773  120C  0825               	movf	__div_to_l_@f2+1,w
  4774  120D  0221               	subwf	__div_to_l_@f1+1,w
  4775  120E  1D03               	skipz
  4776  120F  2A12               	goto	u6305
  4777  1210  0824               	movf	__div_to_l_@f2,w
  4778  1211  0220               	subwf	__div_to_l_@f1,w
  4779  1212                     u6305:
  4780  1212  1C03               	skipc
  4781  1213  2A15               	goto	u6301
  4782  1214  2A16               	goto	u6300
  4783  1215                     u6301:
  4784  1215  2A25               	goto	l3838
  4785  1216                     u6300:
  4786  1216                     l3834:
  4787  1216  0824               	movf	__div_to_l_@f2,w
  4788  1217  02A0               	subwf	__div_to_l_@f1,f
  4789  1218  0825               	movf	__div_to_l_@f2+1,w
  4790  1219  1C03               	skipc
  4791  121A  0F25               	incfsz	__div_to_l_@f2+1,w
  4792  121B  02A1               	subwf	__div_to_l_@f1+1,f
  4793  121C  0826               	movf	__div_to_l_@f2+2,w
  4794  121D  1C03               	skipc
  4795  121E  0F26               	incfsz	__div_to_l_@f2+2,w
  4796  121F  02A2               	subwf	__div_to_l_@f1+2,f
  4797  1220  0827               	movf	__div_to_l_@f2+3,w
  4798  1221  1C03               	skipc
  4799  1222  0F27               	incfsz	__div_to_l_@f2+3,w
  4800  1223  02A3               	subwf	__div_to_l_@f1+3,f
  4801  1224                     l3836:
  4802  1224  1474               	bsf	__div_to_l_@quot,0
  4803  1225                     l3838:
  4804  1225  3001               	movlw	1
  4805  1226  00F3               	movwf	??__div_to_l_
  4806  1227                     u6315:
  4807  1227  1003               	clrc
  4808  1228  0DA0               	rlf	__div_to_l_@f1,f
  4809  1229  0DA1               	rlf	__div_to_l_@f1+1,f
  4810  122A  0DA2               	rlf	__div_to_l_@f1+2,f
  4811  122B  0DA3               	rlf	__div_to_l_@f1+3,f
  4812  122C  0BF3               	decfsz	??__div_to_l_,f
  4813  122D  2A27               	goto	u6315
  4814  122E                     l3840:
  4815  122E  3001               	movlw	1
  4816  122F  02F8               	subwf	__div_to_l_@cntr,f
  4817  1230  1D03               	btfss	3,2
  4818  1231  2A33               	goto	u6321
  4819  1232  2A34               	goto	u6320
  4820  1233                     u6321:
  4821  1233  29FB               	goto	l3830
  4822  1234                     u6320:
  4823  1234                     l583:
  4824  1234  1FF9               	btfss	__div_to_l_@exp1,7
  4825  1235  2A37               	goto	u6331
  4826  1236  2A38               	goto	u6330
  4827  1237                     u6331:
  4828  1237  2A52               	goto	l3850
  4829  1238                     u6330:
  4830  1238                     l3842:
  4831  1238  0879               	movf	__div_to_l_@exp1,w
  4832  1239  3A80               	xorlw	128
  4833  123A  3E9F               	addlw	159
  4834  123B  1803               	skipnc
  4835  123C  2A3E               	goto	u6341
  4836  123D  2A3F               	goto	u6340
  4837  123E                     u6341:
  4838  123E  2A40               	goto	l3848
  4839  123F                     u6340:
  4840  123F  29C1               	goto	l3812
  4841  1240                     l3848:
  4842  1240  3001               	movlw	1
  4843  1241                     u6355:
  4844  1241  1003               	clrc
  4845  1242  0CF7               	rrf	__div_to_l_@quot+3,f
  4846  1243  0CF6               	rrf	__div_to_l_@quot+2,f
  4847  1244  0CF5               	rrf	__div_to_l_@quot+1,f
  4848  1245  0CF4               	rrf	__div_to_l_@quot,f
  4849  1246  3EFF               	addlw	-1
  4850  1247  1D03               	skipz
  4851  1248  2A41               	goto	u6355
  4852  1249  3001               	movlw	1
  4853  124A  00F3               	movwf	??__div_to_l_
  4854  124B  0873               	movf	??__div_to_l_,w
  4855  124C  07F9               	addwf	__div_to_l_@exp1,f
  4856  124D  1D03               	btfss	3,2
  4857  124E  2A50               	goto	u6361
  4858  124F  2A51               	goto	u6360
  4859  1250                     u6361:
  4860  1250  2A40               	goto	l3848
  4861  1251                     u6360:
  4862  1251  2A69               	goto	l3858
  4863  1252                     l3850:
  4864  1252  3020               	movlw	32
  4865  1253  0279               	subwf	__div_to_l_@exp1,w
  4866  1254  1C03               	skipc
  4867  1255  2A57               	goto	u6371
  4868  1256  2A58               	goto	u6370
  4869  1257                     u6371:
  4870  1257  2A64               	goto	l590
  4871  1258                     u6370:
  4872  1258  29C1               	goto	l3812
  4873  1259                     l3856:
  4874  1259  3001               	movlw	1
  4875  125A  00F3               	movwf	??__div_to_l_
  4876  125B                     u6385:
  4877  125B  1003               	clrc
  4878  125C  0DF4               	rlf	__div_to_l_@quot,f
  4879  125D  0DF5               	rlf	__div_to_l_@quot+1,f
  4880  125E  0DF6               	rlf	__div_to_l_@quot+2,f
  4881  125F  0DF7               	rlf	__div_to_l_@quot+3,f
  4882  1260  0BF3               	decfsz	??__div_to_l_,f
  4883  1261  2A5B               	goto	u6385
  4884  1262  3001               	movlw	1
  4885  1263  02F9               	subwf	__div_to_l_@exp1,f
  4886  1264                     l590:
  4887  1264  0879               	movf	__div_to_l_@exp1,w
  4888  1265  1D03               	btfss	3,2
  4889  1266  2A68               	goto	u6391
  4890  1267  2A69               	goto	u6390
  4891  1268                     u6391:
  4892  1268  2A59               	goto	l3856
  4893  1269                     u6390:
  4894  1269                     l3858:
  4895  1269  0877               	movf	__div_to_l_@quot+3,w
  4896  126A  1283               	bcf	3,5	;RP0=0, select bank0
  4897  126B  1303               	bcf	3,6	;RP1=0, select bank0
  4898  126C  00A3               	movwf	?__div_to_l_+3
  4899  126D  0876               	movf	__div_to_l_@quot+2,w
  4900  126E  00A2               	movwf	?__div_to_l_+2
  4901  126F  0875               	movf	__div_to_l_@quot+1,w
  4902  1270  00A1               	movwf	?__div_to_l_+1
  4903  1271  0874               	movf	__div_to_l_@quot,w
  4904  1272  00A0               	movwf	?__div_to_l_
  4905  1273                     l579:
  4906  1273  0008               	return
  4907  1274                     __end_of__div_to_l_:
  4908                           
  4909                           	psect	text11
  4910  1B63                     __ptext11:	
  4911 ;; *************** function ___wmul *****************
  4912 ;; Defined at:
  4913 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;  multiplier      2    3[COMMON] unsigned int 
  4916 ;;  multiplicand    2    5[COMMON] unsigned int 
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;  product         2    7[COMMON] unsigned int 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  2    3[COMMON] unsigned int 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4928 ;;      Params:         4       0       0       0       0
  4929 ;;      Locals:         2       0       0       0       0
  4930 ;;      Temps:          0       0       0       0       0
  4931 ;;      Totals:         6       0       0       0       0
  4932 ;;Total ram usage:        6 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:    2
  4935 ;; This function calls:
  4936 ;;		Nothing
  4937 ;; This function is called by:
  4938 ;;		_sprintf
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           
  4943                           ;psect for function ___wmul
  4944  1B63                     ___wmul:
  4945  1B63                     l2998:	
  4946                           ;incstack = 0
  4947                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4948                           
  4949  1B63  01F7               	clrf	___wmul@product
  4950  1B64  01F8               	clrf	___wmul@product+1
  4951  1B65                     l3000:
  4952  1B65  1C73               	btfss	___wmul@multiplier,0
  4953  1B66  2B68               	goto	u4701
  4954  1B67  2B69               	goto	u4700
  4955  1B68                     u4701:
  4956  1B68  2B6F               	goto	l409
  4957  1B69                     u4700:
  4958  1B69                     l3002:
  4959  1B69  0875               	movf	___wmul@multiplicand,w
  4960  1B6A  07F7               	addwf	___wmul@product,f
  4961  1B6B  1803               	skipnc
  4962  1B6C  0AF8               	incf	___wmul@product+1,f
  4963  1B6D  0876               	movf	___wmul@multiplicand+1,w
  4964  1B6E  07F8               	addwf	___wmul@product+1,f
  4965  1B6F                     l409:
  4966  1B6F  3001               	movlw	1
  4967  1B70                     u4715:
  4968  1B70  1003               	clrc
  4969  1B71  0DF5               	rlf	___wmul@multiplicand,f
  4970  1B72  0DF6               	rlf	___wmul@multiplicand+1,f
  4971  1B73  3EFF               	addlw	-1
  4972  1B74  1D03               	skipz
  4973  1B75  2B70               	goto	u4715
  4974  1B76                     l3004:
  4975  1B76  3001               	movlw	1
  4976  1B77                     u4725:
  4977  1B77  1003               	clrc
  4978  1B78  0CF4               	rrf	___wmul@multiplier+1,f
  4979  1B79  0CF3               	rrf	___wmul@multiplier,f
  4980  1B7A  3EFF               	addlw	-1
  4981  1B7B  1D03               	skipz
  4982  1B7C  2B77               	goto	u4725
  4983  1B7D                     l3006:
  4984  1B7D  0873               	movf	___wmul@multiplier,w
  4985  1B7E  0474               	iorwf	___wmul@multiplier+1,w
  4986  1B7F  1D03               	btfss	3,2
  4987  1B80  2B82               	goto	u4731
  4988  1B81  2B83               	goto	u4730
  4989  1B82                     u4731:
  4990  1B82  2B65               	goto	l3000
  4991  1B83                     u4730:
  4992  1B83                     l3008:
  4993  1B83  0878               	movf	___wmul@product+1,w
  4994  1B84  00F4               	movwf	?___wmul+1
  4995  1B85  0877               	movf	___wmul@product,w
  4996  1B86  00F3               	movwf	?___wmul
  4997  1B87                     l411:
  4998  1B87  0008               	return
  4999  1B88                     __end_of___wmul:
  5000                           
  5001                           	psect	text12
  5002  1DC9                     __ptext12:	
  5003 ;; *************** function ___llmod *****************
  5004 ;; Defined at:
  5005 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  divisor         4    0[BANK0 ] unsigned long 
  5008 ;;  dividend        4    4[BANK0 ] unsigned long 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  counter         1    4[COMMON] unsigned char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  4    0[BANK0 ] unsigned long 
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5020 ;;      Params:         0       8       0       0       0
  5021 ;;      Locals:         1       0       0       0       0
  5022 ;;      Temps:          1       0       0       0       0
  5023 ;;      Totals:         2       8       0       0       0
  5024 ;;Total ram usage:       10 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    2
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_sprintf
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           
  5035                           ;psect for function ___llmod
  5036  1DC9                     ___llmod:
  5037  1DC9                     l3918:	
  5038                           ;incstack = 0
  5039                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5040                           
  5041  1DC9  1283               	bcf	3,5	;RP0=0, select bank0
  5042  1DCA  1303               	bcf	3,6	;RP1=0, select bank0
  5043  1DCB  0823               	movf	___llmod@divisor+3,w
  5044  1DCC  0422               	iorwf	___llmod@divisor+2,w
  5045  1DCD  0421               	iorwf	___llmod@divisor+1,w
  5046  1DCE  0420               	iorwf	___llmod@divisor,w
  5047  1DCF  1903               	skipnz
  5048  1DD0  2DD2               	goto	u6571
  5049  1DD1  2DD3               	goto	u6570
  5050  1DD2                     u6571:
  5051  1DD2  2E16               	goto	l3934
  5052  1DD3                     u6570:
  5053  1DD3                     l3920:
  5054  1DD3  01F4               	clrf	___llmod@counter
  5055  1DD4  0AF4               	incf	___llmod@counter,f
  5056  1DD5  2DE3               	goto	l3924
  5057  1DD6                     l3922:
  5058  1DD6  3001               	movlw	1
  5059  1DD7  00F3               	movwf	??___llmod
  5060  1DD8                     u6585:
  5061  1DD8  1003               	clrc
  5062  1DD9  0DA0               	rlf	___llmod@divisor,f
  5063  1DDA  0DA1               	rlf	___llmod@divisor+1,f
  5064  1DDB  0DA2               	rlf	___llmod@divisor+2,f
  5065  1DDC  0DA3               	rlf	___llmod@divisor+3,f
  5066  1DDD  0BF3               	decfsz	??___llmod,f
  5067  1DDE  2DD8               	goto	u6585
  5068  1DDF  3001               	movlw	1
  5069  1DE0  00F3               	movwf	??___llmod
  5070  1DE1  0873               	movf	??___llmod,w
  5071  1DE2  07F4               	addwf	___llmod@counter,f
  5072  1DE3                     l3924:
  5073  1DE3  1FA3               	btfss	___llmod@divisor+3,7
  5074  1DE4  2DE6               	goto	u6591
  5075  1DE5  2DE7               	goto	u6590
  5076  1DE6                     u6591:
  5077  1DE6  2DD6               	goto	l3922
  5078  1DE7                     u6590:
  5079  1DE7                     l3926:
  5080  1DE7  0823               	movf	___llmod@divisor+3,w
  5081  1DE8  0227               	subwf	___llmod@dividend+3,w
  5082  1DE9  1D03               	skipz
  5083  1DEA  2DF5               	goto	u6605
  5084  1DEB  0822               	movf	___llmod@divisor+2,w
  5085  1DEC  0226               	subwf	___llmod@dividend+2,w
  5086  1DED  1D03               	skipz
  5087  1DEE  2DF5               	goto	u6605
  5088  1DEF  0821               	movf	___llmod@divisor+1,w
  5089  1DF0  0225               	subwf	___llmod@dividend+1,w
  5090  1DF1  1D03               	skipz
  5091  1DF2  2DF5               	goto	u6605
  5092  1DF3  0820               	movf	___llmod@divisor,w
  5093  1DF4  0224               	subwf	___llmod@dividend,w
  5094  1DF5                     u6605:
  5095  1DF5  1C03               	skipc
  5096  1DF6  2DF8               	goto	u6601
  5097  1DF7  2DF9               	goto	u6600
  5098  1DF8                     u6601:
  5099  1DF8  2E07               	goto	l3930
  5100  1DF9                     u6600:
  5101  1DF9                     l3928:
  5102  1DF9  0820               	movf	___llmod@divisor,w
  5103  1DFA  02A4               	subwf	___llmod@dividend,f
  5104  1DFB  0821               	movf	___llmod@divisor+1,w
  5105  1DFC  1C03               	skipc
  5106  1DFD  0F21               	incfsz	___llmod@divisor+1,w
  5107  1DFE  02A5               	subwf	___llmod@dividend+1,f
  5108  1DFF  0822               	movf	___llmod@divisor+2,w
  5109  1E00  1C03               	skipc
  5110  1E01  0F22               	incfsz	___llmod@divisor+2,w
  5111  1E02  02A6               	subwf	___llmod@dividend+2,f
  5112  1E03  0823               	movf	___llmod@divisor+3,w
  5113  1E04  1C03               	skipc
  5114  1E05  0F23               	incfsz	___llmod@divisor+3,w
  5115  1E06  02A7               	subwf	___llmod@dividend+3,f
  5116  1E07                     l3930:
  5117  1E07  3001               	movlw	1
  5118  1E08                     u6615:
  5119  1E08  1003               	clrc
  5120  1E09  0CA3               	rrf	___llmod@divisor+3,f
  5121  1E0A  0CA2               	rrf	___llmod@divisor+2,f
  5122  1E0B  0CA1               	rrf	___llmod@divisor+1,f
  5123  1E0C  0CA0               	rrf	___llmod@divisor,f
  5124  1E0D  3EFF               	addlw	-1
  5125  1E0E  1D03               	skipz
  5126  1E0F  2E08               	goto	u6615
  5127  1E10                     l3932:
  5128  1E10  3001               	movlw	1
  5129  1E11  02F4               	subwf	___llmod@counter,f
  5130  1E12  1D03               	btfss	3,2
  5131  1E13  2E15               	goto	u6621
  5132  1E14  2E16               	goto	u6620
  5133  1E15                     u6621:
  5134  1E15  2DE7               	goto	l3926
  5135  1E16                     u6620:
  5136  1E16                     l3934:
  5137  1E16  0827               	movf	___llmod@dividend+3,w
  5138  1E17  00A3               	movwf	?___llmod+3
  5139  1E18  0826               	movf	___llmod@dividend+2,w
  5140  1E19  00A2               	movwf	?___llmod+2
  5141  1E1A  0825               	movf	___llmod@dividend+1,w
  5142  1E1B  00A1               	movwf	?___llmod+1
  5143  1E1C  0824               	movf	___llmod@dividend,w
  5144  1E1D  00A0               	movwf	?___llmod
  5145  1E1E                     l665:
  5146  1E1E  0008               	return
  5147  1E1F                     __end_of___llmod:
  5148                           
  5149                           	psect	text13
  5150  1E78                     __ptext13:	
  5151 ;; *************** function ___lldiv *****************
  5152 ;; Defined at:
  5153 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  divisor         4    0[BANK0 ] unsigned long 
  5156 ;;  dividend        4    4[BANK0 ] unsigned long 
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;  quotient        4    4[COMMON] unsigned long 
  5159 ;;  counter         1    8[COMMON] unsigned char 
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  4    0[BANK0 ] unsigned long 
  5162 ;; Registers used:
  5163 ;;		wreg, status,2, status,0
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5169 ;;      Params:         0       8       0       0       0
  5170 ;;      Locals:         5       0       0       0       0
  5171 ;;      Temps:          1       0       0       0       0
  5172 ;;      Totals:         6       8       0       0       0
  5173 ;;Total ram usage:       14 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:    2
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_sprintf
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           
  5184                           ;psect for function ___lldiv
  5185  1E78                     ___lldiv:
  5186  1E78                     l3862:	
  5187                           ;incstack = 0
  5188                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5189                           
  5190  1E78  3000               	movlw	0
  5191  1E79  00F7               	movwf	___lldiv@quotient+3
  5192  1E7A  3000               	movlw	0
  5193  1E7B  00F6               	movwf	___lldiv@quotient+2
  5194  1E7C  3000               	movlw	0
  5195  1E7D  00F5               	movwf	___lldiv@quotient+1
  5196  1E7E  3000               	movlw	0
  5197  1E7F  00F4               	movwf	___lldiv@quotient
  5198  1E80  1283               	bcf	3,5	;RP0=0, select bank0
  5199  1E81  1303               	bcf	3,6	;RP1=0, select bank0
  5200  1E82  0823               	movf	___lldiv@divisor+3,w
  5201  1E83  0422               	iorwf	___lldiv@divisor+2,w
  5202  1E84  0421               	iorwf	___lldiv@divisor+1,w
  5203  1E85  0420               	iorwf	___lldiv@divisor,w
  5204  1E86  1903               	skipnz
  5205  1E87  2E89               	goto	u6401
  5206  1E88  2E8A               	goto	u6400
  5207  1E89                     u6401:
  5208  1E89  2ED7               	goto	l3882
  5209  1E8A                     u6400:
  5210  1E8A                     l3864:
  5211  1E8A  01F8               	clrf	___lldiv@counter
  5212  1E8B  0AF8               	incf	___lldiv@counter,f
  5213  1E8C  2E9A               	goto	l3868
  5214  1E8D                     l3866:
  5215  1E8D  3001               	movlw	1
  5216  1E8E  00F3               	movwf	??___lldiv
  5217  1E8F                     u6415:
  5218  1E8F  1003               	clrc
  5219  1E90  0DA0               	rlf	___lldiv@divisor,f
  5220  1E91  0DA1               	rlf	___lldiv@divisor+1,f
  5221  1E92  0DA2               	rlf	___lldiv@divisor+2,f
  5222  1E93  0DA3               	rlf	___lldiv@divisor+3,f
  5223  1E94  0BF3               	decfsz	??___lldiv,f
  5224  1E95  2E8F               	goto	u6415
  5225  1E96  3001               	movlw	1
  5226  1E97  00F3               	movwf	??___lldiv
  5227  1E98  0873               	movf	??___lldiv,w
  5228  1E99  07F8               	addwf	___lldiv@counter,f
  5229  1E9A                     l3868:
  5230  1E9A  1FA3               	btfss	___lldiv@divisor+3,7
  5231  1E9B  2E9D               	goto	u6421
  5232  1E9C  2E9E               	goto	u6420
  5233  1E9D                     u6421:
  5234  1E9D  2E8D               	goto	l3866
  5235  1E9E                     u6420:
  5236  1E9E                     l3870:
  5237  1E9E  3001               	movlw	1
  5238  1E9F  00F3               	movwf	??___lldiv
  5239  1EA0                     u6435:
  5240  1EA0  1003               	clrc
  5241  1EA1  0DF4               	rlf	___lldiv@quotient,f
  5242  1EA2  0DF5               	rlf	___lldiv@quotient+1,f
  5243  1EA3  0DF6               	rlf	___lldiv@quotient+2,f
  5244  1EA4  0DF7               	rlf	___lldiv@quotient+3,f
  5245  1EA5  0BF3               	decfsz	??___lldiv,f
  5246  1EA6  2EA0               	goto	u6435
  5247  1EA7                     l3872:
  5248  1EA7  0823               	movf	___lldiv@divisor+3,w
  5249  1EA8  0227               	subwf	___lldiv@dividend+3,w
  5250  1EA9  1D03               	skipz
  5251  1EAA  2EB5               	goto	u6445
  5252  1EAB  0822               	movf	___lldiv@divisor+2,w
  5253  1EAC  0226               	subwf	___lldiv@dividend+2,w
  5254  1EAD  1D03               	skipz
  5255  1EAE  2EB5               	goto	u6445
  5256  1EAF  0821               	movf	___lldiv@divisor+1,w
  5257  1EB0  0225               	subwf	___lldiv@dividend+1,w
  5258  1EB1  1D03               	skipz
  5259  1EB2  2EB5               	goto	u6445
  5260  1EB3  0820               	movf	___lldiv@divisor,w
  5261  1EB4  0224               	subwf	___lldiv@dividend,w
  5262  1EB5                     u6445:
  5263  1EB5  1C03               	skipc
  5264  1EB6  2EB8               	goto	u6441
  5265  1EB7  2EB9               	goto	u6440
  5266  1EB8                     u6441:
  5267  1EB8  2EC8               	goto	l3878
  5268  1EB9                     u6440:
  5269  1EB9                     l3874:
  5270  1EB9  0820               	movf	___lldiv@divisor,w
  5271  1EBA  02A4               	subwf	___lldiv@dividend,f
  5272  1EBB  0821               	movf	___lldiv@divisor+1,w
  5273  1EBC  1C03               	skipc
  5274  1EBD  0F21               	incfsz	___lldiv@divisor+1,w
  5275  1EBE  02A5               	subwf	___lldiv@dividend+1,f
  5276  1EBF  0822               	movf	___lldiv@divisor+2,w
  5277  1EC0  1C03               	skipc
  5278  1EC1  0F22               	incfsz	___lldiv@divisor+2,w
  5279  1EC2  02A6               	subwf	___lldiv@dividend+2,f
  5280  1EC3  0823               	movf	___lldiv@divisor+3,w
  5281  1EC4  1C03               	skipc
  5282  1EC5  0F23               	incfsz	___lldiv@divisor+3,w
  5283  1EC6  02A7               	subwf	___lldiv@dividend+3,f
  5284  1EC7                     l3876:
  5285  1EC7  1474               	bsf	___lldiv@quotient,0
  5286  1EC8                     l3878:
  5287  1EC8  3001               	movlw	1
  5288  1EC9                     u6455:
  5289  1EC9  1003               	clrc
  5290  1ECA  0CA3               	rrf	___lldiv@divisor+3,f
  5291  1ECB  0CA2               	rrf	___lldiv@divisor+2,f
  5292  1ECC  0CA1               	rrf	___lldiv@divisor+1,f
  5293  1ECD  0CA0               	rrf	___lldiv@divisor,f
  5294  1ECE  3EFF               	addlw	-1
  5295  1ECF  1D03               	skipz
  5296  1ED0  2EC9               	goto	u6455
  5297  1ED1                     l3880:
  5298  1ED1  3001               	movlw	1
  5299  1ED2  02F8               	subwf	___lldiv@counter,f
  5300  1ED3  1D03               	btfss	3,2
  5301  1ED4  2ED6               	goto	u6461
  5302  1ED5  2ED7               	goto	u6460
  5303  1ED6                     u6461:
  5304  1ED6  2E9E               	goto	l3870
  5305  1ED7                     u6460:
  5306  1ED7                     l3882:
  5307  1ED7  0877               	movf	___lldiv@quotient+3,w
  5308  1ED8  00A3               	movwf	?___lldiv+3
  5309  1ED9  0876               	movf	___lldiv@quotient+2,w
  5310  1EDA  00A2               	movwf	?___lldiv+2
  5311  1EDB  0875               	movf	___lldiv@quotient+1,w
  5312  1EDC  00A1               	movwf	?___lldiv+1
  5313  1EDD  0874               	movf	___lldiv@quotient,w
  5314  1EDE  00A0               	movwf	?___lldiv
  5315  1EDF                     l445:
  5316  1EDF  0008               	return
  5317  1EE0                     __end_of___lldiv:
  5318                           
  5319                           	psect	text14
  5320  1EE0                     __ptext14:	
  5321 ;; *************** function ___fltol *****************
  5322 ;; Defined at:
  5323 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  f1              4   55[BANK0 ] unsigned long 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  exp1            1   65[BANK0 ] unsigned char 
  5328 ;;  sign1           1   64[BANK0 ] unsigned char 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  4   55[BANK0 ] long 
  5331 ;; Registers used:
  5332 ;;		wreg, status,2, status,0
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5338 ;;      Params:         0       4       0       0       0
  5339 ;;      Locals:         0       2       0       0       0
  5340 ;;      Temps:          0       5       0       0       0
  5341 ;;      Totals:         0      11       0       0       0
  5342 ;;Total ram usage:       11 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    2
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_sprintf
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           
  5353                           ;psect for function ___fltol
  5354  1EE0                     ___fltol:
  5355  1EE0                     l3076:	
  5356                           ;incstack = 0
  5357                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5358                           
  5359  1EE0  1003               	clrc
  5360  1EE1  1283               	bcf	3,5	;RP0=0, select bank0
  5361  1EE2  1303               	bcf	3,6	;RP1=0, select bank0
  5362  1EE3  0D59               	rlf	___fltol@f1+2,w
  5363  1EE4  0D5A               	rlf	___fltol@f1+3,w
  5364  1EE5  00DB               	movwf	??___fltol
  5365  1EE6  085B               	movf	??___fltol,w
  5366  1EE7  00E1               	movwf	___fltol@exp1
  5367  1EE8  0861               	movf	___fltol@exp1,w
  5368  1EE9  1D03               	btfss	3,2
  5369  1EEA  2EEC               	goto	u4921
  5370  1EEB  2EED               	goto	u4920
  5371  1EEC                     u4921:
  5372  1EEC  2EF6               	goto	l3082
  5373  1EED                     u4920:
  5374  1EED                     l3078:
  5375  1EED  3000               	movlw	0
  5376  1EEE  00DA               	movwf	?___fltol+3
  5377  1EEF  3000               	movlw	0
  5378  1EF0  00D9               	movwf	?___fltol+2
  5379  1EF1  3000               	movlw	0
  5380  1EF2  00D8               	movwf	?___fltol+1
  5381  1EF3  3000               	movlw	0
  5382  1EF4  00D7               	movwf	?___fltol
  5383  1EF5  2F5B               	goto	l612
  5384  1EF6                     l3082:
  5385  1EF6  0857               	movf	___fltol@f1,w
  5386  1EF7  00DB               	movwf	??___fltol
  5387  1EF8  0858               	movf	___fltol@f1+1,w
  5388  1EF9  00DC               	movwf	??___fltol+1
  5389  1EFA  0859               	movf	___fltol@f1+2,w
  5390  1EFB  00DD               	movwf	??___fltol+2
  5391  1EFC  085A               	movf	___fltol@f1+3,w
  5392  1EFD  00DE               	movwf	??___fltol+3
  5393  1EFE  301F               	movlw	31
  5394  1EFF                     u4935:
  5395  1EFF  1003               	clrc
  5396  1F00  0CDE               	rrf	??___fltol+3,f
  5397  1F01  0CDD               	rrf	??___fltol+2,f
  5398  1F02  0CDC               	rrf	??___fltol+1,f
  5399  1F03  0CDB               	rrf	??___fltol,f
  5400  1F04                     u4930:
  5401  1F04  3EFF               	addlw	-1
  5402  1F05  1D03               	skipz
  5403  1F06  2EFF               	goto	u4935
  5404  1F07  085B               	movf	??___fltol,w
  5405  1F08  00DF               	movwf	??___fltol+4
  5406  1F09  085F               	movf	??___fltol+4,w
  5407  1F0A  00E0               	movwf	___fltol@sign1
  5408  1F0B                     l3084:
  5409  1F0B  17D9               	bsf	___fltol@f1+2,7
  5410  1F0C                     l3086:
  5411  1F0C  30FF               	movlw	255
  5412  1F0D  05D7               	andwf	___fltol@f1,f
  5413  1F0E  30FF               	movlw	255
  5414  1F0F  05D8               	andwf	___fltol@f1+1,f
  5415  1F10  30FF               	movlw	255
  5416  1F11  05D9               	andwf	___fltol@f1+2,f
  5417  1F12  3000               	movlw	0
  5418  1F13  05DA               	andwf	___fltol@f1+3,f
  5419  1F14                     l3088:
  5420  1F14  3096               	movlw	150
  5421  1F15  02E1               	subwf	___fltol@exp1,f
  5422  1F16                     l3090:
  5423  1F16  1FE1               	btfss	___fltol@exp1,7
  5424  1F17  2F19               	goto	u4941
  5425  1F18  2F1A               	goto	u4940
  5426  1F19                     u4941:
  5427  1F19  2F34               	goto	l3100
  5428  1F1A                     u4940:
  5429  1F1A                     l3092:
  5430  1F1A  0861               	movf	___fltol@exp1,w
  5431  1F1B  3A80               	xorlw	128
  5432  1F1C  3E97               	addlw	151
  5433  1F1D  1803               	skipnc
  5434  1F1E  2F20               	goto	u4951
  5435  1F1F  2F21               	goto	u4950
  5436  1F20                     u4951:
  5437  1F20  2F22               	goto	l3098
  5438  1F21                     u4950:
  5439  1F21  2EED               	goto	l3078
  5440  1F22                     l3098:
  5441  1F22  3001               	movlw	1
  5442  1F23                     u4965:
  5443  1F23  1003               	clrc
  5444  1F24  0CDA               	rrf	___fltol@f1+3,f
  5445  1F25  0CD9               	rrf	___fltol@f1+2,f
  5446  1F26  0CD8               	rrf	___fltol@f1+1,f
  5447  1F27  0CD7               	rrf	___fltol@f1,f
  5448  1F28  3EFF               	addlw	-1
  5449  1F29  1D03               	skipz
  5450  1F2A  2F23               	goto	u4965
  5451  1F2B  3001               	movlw	1
  5452  1F2C  00DB               	movwf	??___fltol
  5453  1F2D  085B               	movf	??___fltol,w
  5454  1F2E  07E1               	addwf	___fltol@exp1,f
  5455  1F2F  1D03               	btfss	3,2
  5456  1F30  2F32               	goto	u4971
  5457  1F31  2F33               	goto	u4970
  5458  1F32                     u4971:
  5459  1F32  2F22               	goto	l3098
  5460  1F33                     u4970:
  5461  1F33  2F4B               	goto	l3108
  5462  1F34                     l3100:
  5463  1F34  3020               	movlw	32
  5464  1F35  0261               	subwf	___fltol@exp1,w
  5465  1F36  1C03               	skipc
  5466  1F37  2F39               	goto	u4981
  5467  1F38  2F3A               	goto	u4980
  5468  1F39                     u4981:
  5469  1F39  2F46               	goto	l619
  5470  1F3A                     u4980:
  5471  1F3A  2EED               	goto	l3078
  5472  1F3B                     l3106:
  5473  1F3B  3001               	movlw	1
  5474  1F3C  00DB               	movwf	??___fltol
  5475  1F3D                     u4995:
  5476  1F3D  1003               	clrc
  5477  1F3E  0DD7               	rlf	___fltol@f1,f
  5478  1F3F  0DD8               	rlf	___fltol@f1+1,f
  5479  1F40  0DD9               	rlf	___fltol@f1+2,f
  5480  1F41  0DDA               	rlf	___fltol@f1+3,f
  5481  1F42  0BDB               	decfsz	??___fltol,f
  5482  1F43  2F3D               	goto	u4995
  5483  1F44  3001               	movlw	1
  5484  1F45  02E1               	subwf	___fltol@exp1,f
  5485  1F46                     l619:
  5486  1F46  0861               	movf	___fltol@exp1,w
  5487  1F47  1D03               	btfss	3,2
  5488  1F48  2F4A               	goto	u5001
  5489  1F49  2F4B               	goto	u5000
  5490  1F4A                     u5001:
  5491  1F4A  2F3B               	goto	l3106
  5492  1F4B                     u5000:
  5493  1F4B                     l3108:
  5494  1F4B  0860               	movf	___fltol@sign1,w
  5495  1F4C  1903               	btfsc	3,2
  5496  1F4D  2F4F               	goto	u5011
  5497  1F4E  2F50               	goto	u5010
  5498  1F4F                     u5011:
  5499  1F4F  2F5B               	goto	l622
  5500  1F50                     u5010:
  5501  1F50                     l3110:
  5502  1F50  09D7               	comf	___fltol@f1,f
  5503  1F51  09D8               	comf	___fltol@f1+1,f
  5504  1F52  09D9               	comf	___fltol@f1+2,f
  5505  1F53  09DA               	comf	___fltol@f1+3,f
  5506  1F54  0AD7               	incf	___fltol@f1,f
  5507  1F55  1903               	skipnz
  5508  1F56  0AD8               	incf	___fltol@f1+1,f
  5509  1F57  1903               	skipnz
  5510  1F58  0AD9               	incf	___fltol@f1+2,f
  5511  1F59  1903               	skipnz
  5512  1F5A  0ADA               	incf	___fltol@f1+3,f
  5513  1F5B                     l622:
  5514  1F5B                     l612:
  5515  1F5B  0008               	return
  5516  1F5C                     __end_of___fltol:
  5517                           
  5518                           	psect	text15
  5519  1D79                     __ptext15:	
  5520 ;; *************** function ___flsub *****************
  5521 ;; Defined at:
  5522 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;  a               4    0[BANK1 ] long 
  5525 ;;  b               4    4[BANK1 ] long 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;		None
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  4    0[BANK1 ] long 
  5530 ;; Registers used:
  5531 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5537 ;;      Params:         0       0       8       0       0
  5538 ;;      Locals:         0       0       0       0       0
  5539 ;;      Temps:          0       0       0       0       0
  5540 ;;      Totals:         0       0       8       0       0
  5541 ;;Total ram usage:        8 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; Hardware stack levels required when called:    3
  5544 ;; This function calls:
  5545 ;;		___fladd
  5546 ;; This function is called by:
  5547 ;;		_sprintf
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551                           
  5552                           ;psect for function ___flsub
  5553  1D79                     ___flsub:
  5554  1D79                     l3132:	
  5555                           ;incstack = 0
  5556                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5557                           
  5558  1D79  3080               	movlw	128
  5559  1D7A  1683               	bsf	3,5	;RP0=1, select bank1
  5560  1D7B  1303               	bcf	3,6	;RP1=0, select bank1
  5561  1D7C  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5562  1D7D                     l3134:
  5563  1D7D  0827               	movf	(___flsub@b+3)^(0+128),w
  5564  1D7E  1283               	bcf	3,5	;RP0=0, select bank0
  5565  1D7F  1303               	bcf	3,6	;RP1=0, select bank0
  5566  1D80  00DB               	movwf	___fladd@b+3
  5567  1D81  1683               	bsf	3,5	;RP0=1, select bank1
  5568  1D82  1303               	bcf	3,6	;RP1=0, select bank1
  5569  1D83  0826               	movf	(___flsub@b+2)^(0+128),w
  5570  1D84  1283               	bcf	3,5	;RP0=0, select bank0
  5571  1D85  1303               	bcf	3,6	;RP1=0, select bank0
  5572  1D86  00DA               	movwf	___fladd@b+2
  5573  1D87  1683               	bsf	3,5	;RP0=1, select bank1
  5574  1D88  1303               	bcf	3,6	;RP1=0, select bank1
  5575  1D89  0825               	movf	(___flsub@b+1)^(0+128),w
  5576  1D8A  1283               	bcf	3,5	;RP0=0, select bank0
  5577  1D8B  1303               	bcf	3,6	;RP1=0, select bank0
  5578  1D8C  00D9               	movwf	___fladd@b+1
  5579  1D8D  1683               	bsf	3,5	;RP0=1, select bank1
  5580  1D8E  1303               	bcf	3,6	;RP1=0, select bank1
  5581  1D8F  0824               	movf	___flsub@b^(0+128),w
  5582  1D90  1283               	bcf	3,5	;RP0=0, select bank0
  5583  1D91  1303               	bcf	3,6	;RP1=0, select bank0
  5584  1D92  00D8               	movwf	___fladd@b
  5585  1D93  1683               	bsf	3,5	;RP0=1, select bank1
  5586  1D94  1303               	bcf	3,6	;RP1=0, select bank1
  5587  1D95  0823               	movf	(___flsub@a+3)^(0+128),w
  5588  1D96  1283               	bcf	3,5	;RP0=0, select bank0
  5589  1D97  1303               	bcf	3,6	;RP1=0, select bank0
  5590  1D98  00DF               	movwf	___fladd@a+3
  5591  1D99  1683               	bsf	3,5	;RP0=1, select bank1
  5592  1D9A  1303               	bcf	3,6	;RP1=0, select bank1
  5593  1D9B  0822               	movf	(___flsub@a+2)^(0+128),w
  5594  1D9C  1283               	bcf	3,5	;RP0=0, select bank0
  5595  1D9D  1303               	bcf	3,6	;RP1=0, select bank0
  5596  1D9E  00DE               	movwf	___fladd@a+2
  5597  1D9F  1683               	bsf	3,5	;RP0=1, select bank1
  5598  1DA0  1303               	bcf	3,6	;RP1=0, select bank1
  5599  1DA1  0821               	movf	(___flsub@a+1)^(0+128),w
  5600  1DA2  1283               	bcf	3,5	;RP0=0, select bank0
  5601  1DA3  1303               	bcf	3,6	;RP1=0, select bank0
  5602  1DA4  00DD               	movwf	___fladd@a+1
  5603  1DA5  1683               	bsf	3,5	;RP0=1, select bank1
  5604  1DA6  1303               	bcf	3,6	;RP1=0, select bank1
  5605  1DA7  0820               	movf	___flsub@a^(0+128),w
  5606  1DA8  1283               	bcf	3,5	;RP0=0, select bank0
  5607  1DA9  1303               	bcf	3,6	;RP1=0, select bank0
  5608  1DAA  00DC               	movwf	___fladd@a
  5609  1DAB  160A  118A  2274  160A  158A  	fcall	___fladd
  5610  1DB0  1283               	bcf	3,5	;RP0=0, select bank0
  5611  1DB1  1303               	bcf	3,6	;RP1=0, select bank0
  5612  1DB2  085B               	movf	?___fladd+3,w
  5613  1DB3  1683               	bsf	3,5	;RP0=1, select bank1
  5614  1DB4  1303               	bcf	3,6	;RP1=0, select bank1
  5615  1DB5  00A3               	movwf	(?___flsub+3)^(0+128)
  5616  1DB6  1283               	bcf	3,5	;RP0=0, select bank0
  5617  1DB7  1303               	bcf	3,6	;RP1=0, select bank0
  5618  1DB8  085A               	movf	?___fladd+2,w
  5619  1DB9  1683               	bsf	3,5	;RP0=1, select bank1
  5620  1DBA  1303               	bcf	3,6	;RP1=0, select bank1
  5621  1DBB  00A2               	movwf	(?___flsub+2)^(0+128)
  5622  1DBC  1283               	bcf	3,5	;RP0=0, select bank0
  5623  1DBD  1303               	bcf	3,6	;RP1=0, select bank0
  5624  1DBE  0859               	movf	?___fladd+1,w
  5625  1DBF  1683               	bsf	3,5	;RP0=1, select bank1
  5626  1DC0  1303               	bcf	3,6	;RP1=0, select bank1
  5627  1DC1  00A1               	movwf	(?___flsub+1)^(0+128)
  5628  1DC2  1283               	bcf	3,5	;RP0=0, select bank0
  5629  1DC3  1303               	bcf	3,6	;RP1=0, select bank0
  5630  1DC4  0858               	movf	?___fladd,w
  5631  1DC5  1683               	bsf	3,5	;RP0=1, select bank1
  5632  1DC6  1303               	bcf	3,6	;RP1=0, select bank1
  5633  1DC7  00A0               	movwf	?___flsub^(0+128)
  5634  1DC8                     l782:
  5635  1DC8  0008               	return
  5636  1DC9                     __end_of___flsub:
  5637                           
  5638                           	psect	text16
  5639  1274                     __ptext16:	
  5640 ;; *************** function ___fladd *****************
  5641 ;; Defined at:
  5642 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;  b               4   56[BANK0 ] long 
  5645 ;;  a               4   60[BANK0 ] long 
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;  grs             1   75[BANK0 ] unsigned char 
  5648 ;;  bexp            1   74[BANK0 ] unsigned char 
  5649 ;;  aexp            1   73[BANK0 ] unsigned char 
  5650 ;;  signs           1   72[BANK0 ] unsigned char 
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  4   56[BANK0 ] unsigned char 
  5653 ;; Registers used:
  5654 ;;		wreg, status,2, status,0, btemp+1
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5660 ;;      Params:         0       8       0       0       0
  5661 ;;      Locals:         0       4       0       0       0
  5662 ;;      Temps:          0       8       0       0       0
  5663 ;;      Totals:         0      20       0       0       0
  5664 ;;Total ram usage:       20 bytes
  5665 ;; Hardware stack levels used:    1
  5666 ;; Hardware stack levels required when called:    2
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_sprintf
  5671 ;;		___flsub
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           
  5676                           ;psect for function ___fladd
  5677  1274                     ___fladd:
  5678  1274                     l2464:	
  5679                           ;incstack = 0
  5680                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5681                           
  5682  1274  1283               	bcf	3,5	;RP0=0, select bank0
  5683  1275  1303               	bcf	3,6	;RP1=0, select bank0
  5684  1276  085B               	movf	___fladd@b+3,w
  5685  1277  3980               	andlw	128
  5686  1278  00E0               	movwf	??___fladd
  5687  1279  0860               	movf	??___fladd,w
  5688  127A  00E8               	movwf	___fladd@signs
  5689  127B                     l2466:
  5690  127B  085B               	movf	___fladd@b+3,w
  5691  127C  00E0               	movwf	??___fladd
  5692  127D  0760               	addwf	??___fladd,w
  5693  127E  00E1               	movwf	??___fladd+1
  5694  127F  0861               	movf	??___fladd+1,w
  5695  1280  00EA               	movwf	___fladd@bexp
  5696  1281                     l2468:
  5697  1281  1FDA               	btfss	___fladd@b+2,7
  5698  1282  2A84               	goto	u3331
  5699  1283  2A85               	goto	u3330
  5700  1284                     u3331:
  5701  1284  2A86               	goto	l2472
  5702  1285                     u3330:
  5703  1285                     l2470:
  5704  1285  146A               	bsf	___fladd@bexp,0
  5705  1286                     l2472:
  5706  1286  086A               	movf	___fladd@bexp,w
  5707  1287  1903               	btfsc	3,2
  5708  1288  2A8A               	goto	u3341
  5709  1289  2A8B               	goto	u3340
  5710  128A                     u3341:
  5711  128A  2A9B               	goto	l2482
  5712  128B                     u3340:
  5713  128B                     l2474:
  5714  128B  0A6A               	incf	___fladd@bexp,w
  5715  128C  1D03               	btfss	3,2
  5716  128D  2A8F               	goto	u3351
  5717  128E  2A90               	goto	u3350
  5718  128F                     u3351:
  5719  128F  2A98               	goto	l2478
  5720  1290                     u3350:
  5721  1290                     l2476:
  5722  1290  3000               	movlw	0
  5723  1291  00DB               	movwf	___fladd@b+3
  5724  1292  3000               	movlw	0
  5725  1293  00DA               	movwf	___fladd@b+2
  5726  1294  3000               	movlw	0
  5727  1295  00D9               	movwf	___fladd@b+1
  5728  1296  3000               	movlw	0
  5729  1297  00D8               	movwf	___fladd@b
  5730  1298                     l2478:
  5731  1298  17DA               	bsf	___fladd@b+2,7
  5732  1299                     l2480:
  5733  1299  01DB               	clrf	___fladd@b+3
  5734  129A  2AA3               	goto	l2484
  5735  129B                     l2482:
  5736  129B  3000               	movlw	0
  5737  129C  00DB               	movwf	___fladd@b+3
  5738  129D  3000               	movlw	0
  5739  129E  00DA               	movwf	___fladd@b+2
  5740  129F  3000               	movlw	0
  5741  12A0  00D9               	movwf	___fladd@b+1
  5742  12A1  3000               	movlw	0
  5743  12A2  00D8               	movwf	___fladd@b
  5744  12A3                     l2484:
  5745  12A3  085F               	movf	___fladd@a+3,w
  5746  12A4  3980               	andlw	128
  5747  12A5  00E0               	movwf	??___fladd
  5748  12A6  0860               	movf	??___fladd,w
  5749  12A7  00E9               	movwf	___fladd@aexp
  5750  12A8                     l2486:
  5751  12A8  0869               	movf	___fladd@aexp,w
  5752  12A9  0668               	xorwf	___fladd@signs,w
  5753  12AA  1903               	skipnz
  5754  12AB  2AAD               	goto	u3361
  5755  12AC  2AAE               	goto	u3360
  5756  12AD                     u3361:
  5757  12AD  2AAF               	goto	l2490
  5758  12AE                     u3360:
  5759  12AE                     l2488:
  5760  12AE  1768               	bsf	___fladd@signs,6
  5761  12AF                     l2490:
  5762  12AF  085F               	movf	___fladd@a+3,w
  5763  12B0  00E0               	movwf	??___fladd
  5764  12B1  0760               	addwf	??___fladd,w
  5765  12B2  00E1               	movwf	??___fladd+1
  5766  12B3  0861               	movf	??___fladd+1,w
  5767  12B4  00E9               	movwf	___fladd@aexp
  5768  12B5                     l2492:
  5769  12B5  1FDE               	btfss	___fladd@a+2,7
  5770  12B6  2AB8               	goto	u3371
  5771  12B7  2AB9               	goto	u3370
  5772  12B8                     u3371:
  5773  12B8  2ABA               	goto	l2496
  5774  12B9                     u3370:
  5775  12B9                     l2494:
  5776  12B9  1469               	bsf	___fladd@aexp,0
  5777  12BA                     l2496:
  5778  12BA  0869               	movf	___fladd@aexp,w
  5779  12BB  1903               	btfsc	3,2
  5780  12BC  2ABE               	goto	u3381
  5781  12BD  2ABF               	goto	u3380
  5782  12BE                     u3381:
  5783  12BE  2ACF               	goto	l2506
  5784  12BF                     u3380:
  5785  12BF                     l2498:
  5786  12BF  0A69               	incf	___fladd@aexp,w
  5787  12C0  1D03               	btfss	3,2
  5788  12C1  2AC3               	goto	u3391
  5789  12C2  2AC4               	goto	u3390
  5790  12C3                     u3391:
  5791  12C3  2ACC               	goto	l2502
  5792  12C4                     u3390:
  5793  12C4                     l2500:
  5794  12C4  3000               	movlw	0
  5795  12C5  00DF               	movwf	___fladd@a+3
  5796  12C6  3000               	movlw	0
  5797  12C7  00DE               	movwf	___fladd@a+2
  5798  12C8  3000               	movlw	0
  5799  12C9  00DD               	movwf	___fladd@a+1
  5800  12CA  3000               	movlw	0
  5801  12CB  00DC               	movwf	___fladd@a
  5802  12CC                     l2502:
  5803  12CC  17DE               	bsf	___fladd@a+2,7
  5804  12CD                     l2504:
  5805  12CD  01DF               	clrf	___fladd@a+3
  5806  12CE  2AD7               	goto	l736
  5807  12CF                     l2506:
  5808  12CF  3000               	movlw	0
  5809  12D0  00DF               	movwf	___fladd@a+3
  5810  12D1  3000               	movlw	0
  5811  12D2  00DE               	movwf	___fladd@a+2
  5812  12D3  3000               	movlw	0
  5813  12D4  00DD               	movwf	___fladd@a+1
  5814  12D5  3000               	movlw	0
  5815  12D6  00DC               	movwf	___fladd@a
  5816  12D7                     l736:
  5817  12D7  086A               	movf	___fladd@bexp,w
  5818  12D8  0269               	subwf	___fladd@aexp,w
  5819  12D9  1803               	skipnc
  5820  12DA  2ADC               	goto	u3401
  5821  12DB  2ADD               	goto	u3400
  5822  12DC                     u3401:
  5823  12DC  2B21               	goto	l2542
  5824  12DD                     u3400:
  5825  12DD                     l2508:
  5826  12DD  1F68               	btfss	___fladd@signs,6
  5827  12DE  2AE0               	goto	u3411
  5828  12DF  2AE1               	goto	u3410
  5829  12E0                     u3411:
  5830  12E0  2AE5               	goto	l2512
  5831  12E1                     u3410:
  5832  12E1                     l2510:
  5833  12E1  3080               	movlw	128
  5834  12E2  00E0               	movwf	??___fladd
  5835  12E3  0860               	movf	??___fladd,w
  5836  12E4  06E8               	xorwf	___fladd@signs,f
  5837  12E5                     l2512:
  5838  12E5  086A               	movf	___fladd@bexp,w
  5839  12E6  00E0               	movwf	??___fladd
  5840  12E7  0860               	movf	??___fladd,w
  5841  12E8  00EB               	movwf	___fladd@grs
  5842  12E9                     l2514:
  5843  12E9  0869               	movf	___fladd@aexp,w
  5844  12EA  00E0               	movwf	??___fladd
  5845  12EB  0860               	movf	??___fladd,w
  5846  12EC  00EA               	movwf	___fladd@bexp
  5847  12ED                     l2516:
  5848  12ED  086B               	movf	___fladd@grs,w
  5849  12EE  00E0               	movwf	??___fladd
  5850  12EF  0860               	movf	??___fladd,w
  5851  12F0  00E9               	movwf	___fladd@aexp
  5852  12F1                     l2518:
  5853  12F1  0858               	movf	___fladd@b,w
  5854  12F2  00E0               	movwf	??___fladd
  5855  12F3  0860               	movf	??___fladd,w
  5856  12F4  00EB               	movwf	___fladd@grs
  5857  12F5                     l2520:
  5858  12F5  085C               	movf	___fladd@a,w
  5859  12F6  00E0               	movwf	??___fladd
  5860  12F7  0860               	movf	??___fladd,w
  5861  12F8  00D8               	movwf	___fladd@b
  5862  12F9                     l2522:
  5863  12F9  086B               	movf	___fladd@grs,w
  5864  12FA  00E0               	movwf	??___fladd
  5865  12FB  0860               	movf	??___fladd,w
  5866  12FC  00DC               	movwf	___fladd@a
  5867  12FD                     l2524:
  5868  12FD  0859               	movf	___fladd@b+1,w
  5869  12FE  00E0               	movwf	??___fladd
  5870  12FF  0860               	movf	??___fladd,w
  5871  1300  00EB               	movwf	___fladd@grs
  5872  1301                     l2526:
  5873  1301  085D               	movf	___fladd@a+1,w
  5874  1302  00E0               	movwf	??___fladd
  5875  1303  0860               	movf	??___fladd,w
  5876  1304  00D9               	movwf	___fladd@b+1
  5877  1305                     l2528:
  5878  1305  086B               	movf	___fladd@grs,w
  5879  1306  00E0               	movwf	??___fladd
  5880  1307  0860               	movf	??___fladd,w
  5881  1308  00DD               	movwf	___fladd@a+1
  5882  1309                     l2530:
  5883  1309  085A               	movf	___fladd@b+2,w
  5884  130A  00E0               	movwf	??___fladd
  5885  130B  0860               	movf	??___fladd,w
  5886  130C  00EB               	movwf	___fladd@grs
  5887  130D                     l2532:
  5888  130D  085E               	movf	___fladd@a+2,w
  5889  130E  00E0               	movwf	??___fladd
  5890  130F  0860               	movf	??___fladd,w
  5891  1310  00DA               	movwf	___fladd@b+2
  5892  1311                     l2534:
  5893  1311  086B               	movf	___fladd@grs,w
  5894  1312  00E0               	movwf	??___fladd
  5895  1313  0860               	movf	??___fladd,w
  5896  1314  00DE               	movwf	___fladd@a+2
  5897  1315                     l2536:
  5898  1315  085B               	movf	___fladd@b+3,w
  5899  1316  00E0               	movwf	??___fladd
  5900  1317  0860               	movf	??___fladd,w
  5901  1318  00EB               	movwf	___fladd@grs
  5902  1319                     l2538:
  5903  1319  085F               	movf	___fladd@a+3,w
  5904  131A  00E0               	movwf	??___fladd
  5905  131B  0860               	movf	??___fladd,w
  5906  131C  00DB               	movwf	___fladd@b+3
  5907  131D                     l2540:
  5908  131D  086B               	movf	___fladd@grs,w
  5909  131E  00E0               	movwf	??___fladd
  5910  131F  0860               	movf	??___fladd,w
  5911  1320  00DF               	movwf	___fladd@a+3
  5912  1321                     l2542:
  5913  1321  01EB               	clrf	___fladd@grs
  5914  1322                     l2544:
  5915  1322  0869               	movf	___fladd@aexp,w
  5916  1323  00E0               	movwf	??___fladd
  5917  1324  01E1               	clrf	??___fladd+1
  5918  1325  0861               	movf	??___fladd+1,w
  5919  1326  00E3               	movwf	??___fladd+3
  5920  1327  086A               	movf	___fladd@bexp,w
  5921  1328  0260               	subwf	??___fladd,w
  5922  1329  00E2               	movwf	??___fladd+2
  5923  132A  1C03               	skipc
  5924  132B  03E3               	decf	??___fladd+3,f
  5925  132C  0863               	movf	??___fladd+3,w
  5926  132D  3A80               	xorlw	128
  5927  132E  00FF               	movwf	btemp+1
  5928  132F  3080               	movlw	128
  5929  1330  027F               	subwf	btemp+1,w
  5930  1331  1D03               	skipz
  5931  1332  2B35               	goto	u3425
  5932  1333  301A               	movlw	26
  5933  1334  0262               	subwf	??___fladd+2,w
  5934  1335                     u3425:
  5935  1335  1C03               	skipc
  5936  1336  2B38               	goto	u3421
  5937  1337  2B39               	goto	u3420
  5938  1338                     u3421:
  5939  1338  2B76               	goto	l2560
  5940  1339                     u3420:
  5941  1339                     l2546:
  5942  1339  1283               	bcf	3,5	;RP0=0, select bank0
  5943  133A  1303               	bcf	3,6	;RP1=0, select bank0
  5944  133B  085B               	movf	___fladd@b+3,w
  5945  133C  045A               	iorwf	___fladd@b+2,w
  5946  133D  0459               	iorwf	___fladd@b+1,w
  5947  133E  0458               	iorwf	___fladd@b,w
  5948  133F  1D03               	skipz
  5949  1340  2B42               	goto	u3431
  5950  1341  2B44               	goto	u3430
  5951  1342                     u3431:
  5952  1342  3001               	movlw	1
  5953  1343  2B45               	goto	u3440
  5954  1344                     u3430:
  5955  1344  3000               	movlw	0
  5956  1345                     u3440:
  5957  1345  00E0               	movwf	??___fladd
  5958  1346  0860               	movf	??___fladd,w
  5959  1347  00EB               	movwf	___fladd@grs
  5960  1348  3000               	movlw	0
  5961  1349  00DB               	movwf	___fladd@b+3
  5962  134A  3000               	movlw	0
  5963  134B  00DA               	movwf	___fladd@b+2
  5964  134C  3000               	movlw	0
  5965  134D  00D9               	movwf	___fladd@b+1
  5966  134E  3000               	movlw	0
  5967  134F  00D8               	movwf	___fladd@b
  5968  1350  0869               	movf	___fladd@aexp,w
  5969  1351  00E0               	movwf	??___fladd
  5970  1352  0860               	movf	??___fladd,w
  5971  1353  00EA               	movwf	___fladd@bexp
  5972  1354  2B7E               	goto	l740
  5973  1355                     l742:
  5974  1355  1C6B               	btfss	___fladd@grs,0
  5975  1356  2B58               	goto	u3451
  5976  1357  2B59               	goto	u3450
  5977  1358                     u3451:
  5978  1358  2B62               	goto	l2550
  5979  1359                     u3450:
  5980  1359                     l2548:
  5981  1359  086B               	movf	___fladd@grs,w
  5982  135A  00E0               	movwf	??___fladd
  5983  135B  1003               	clrc
  5984  135C  0C60               	rrf	??___fladd,w
  5985  135D  3801               	iorlw	1
  5986  135E  00E1               	movwf	??___fladd+1
  5987  135F  0861               	movf	??___fladd+1,w
  5988  1360  00EB               	movwf	___fladd@grs
  5989  1361  2B64               	goto	l2552
  5990  1362                     l2550:
  5991  1362  1003               	clrc
  5992  1363  0CEB               	rrf	___fladd@grs,f
  5993  1364                     l2552:
  5994  1364  1C58               	btfss	___fladd@b,0
  5995  1365  2B67               	goto	u3461
  5996  1366  2B68               	goto	u3460
  5997  1367                     u3461:
  5998  1367  2B69               	goto	l2556
  5999  1368                     u3460:
  6000  1368                     l2554:
  6001  1368  17EB               	bsf	___fladd@grs,7
  6002  1369                     l2556:
  6003  1369  3001               	movlw	1
  6004  136A  00E0               	movwf	??___fladd
  6005  136B                     u3475:
  6006  136B  0D5B               	rlf	___fladd@b+3,w
  6007  136C  0CDB               	rrf	___fladd@b+3,f
  6008  136D  0CDA               	rrf	___fladd@b+2,f
  6009  136E  0CD9               	rrf	___fladd@b+1,f
  6010  136F  0CD8               	rrf	___fladd@b,f
  6011  1370  0BE0               	decfsz	??___fladd& (0+127),f
  6012  1371  2B6B               	goto	u3475
  6013  1372                     l2558:
  6014  1372  3001               	movlw	1
  6015  1373  00E0               	movwf	??___fladd
  6016  1374  0860               	movf	??___fladd,w
  6017  1375  07EA               	addwf	___fladd@bexp,f
  6018  1376                     l2560:
  6019  1376  1283               	bcf	3,5	;RP0=0, select bank0
  6020  1377  1303               	bcf	3,6	;RP1=0, select bank0
  6021  1378  0869               	movf	___fladd@aexp,w
  6022  1379  026A               	subwf	___fladd@bexp,w
  6023  137A  1C03               	skipc
  6024  137B  2B7D               	goto	u3481
  6025  137C  2B7E               	goto	u3480
  6026  137D                     u3481:
  6027  137D  2B55               	goto	l742
  6028  137E                     u3480:
  6029  137E                     l740:
  6030  137E  1B68               	btfsc	___fladd@signs,6
  6031  137F  2B81               	goto	u3491
  6032  1380  2B82               	goto	u3490
  6033  1381                     u3491:
  6034  1381  2BCD               	goto	l2586
  6035  1382                     u3490:
  6036  1382                     l2562:
  6037  1382  086A               	movf	___fladd@bexp,w
  6038  1383  1D03               	btfss	3,2
  6039  1384  2B86               	goto	u3501
  6040  1385  2B87               	goto	u3500
  6041  1386                     u3501:
  6042  1386  2B90               	goto	l2568
  6043  1387                     u3500:
  6044  1387                     l2564:
  6045  1387  3000               	movlw	0
  6046  1388  00DB               	movwf	?___fladd+3
  6047  1389  3000               	movlw	0
  6048  138A  00DA               	movwf	?___fladd+2
  6049  138B  3000               	movlw	0
  6050  138C  00D9               	movwf	?___fladd+1
  6051  138D  3000               	movlw	0
  6052  138E  00D8               	movwf	?___fladd
  6053  138F  2CFB               	goto	l749
  6054  1390                     l2568:
  6055  1390  085C               	movf	___fladd@a,w
  6056  1391  07D8               	addwf	___fladd@b,f
  6057  1392  085D               	movf	___fladd@a+1,w
  6058  1393  1103               	clrz
  6059  1394  1803               	skipnc
  6060  1395  3E01               	addlw	1
  6061  1396  1903               	skipnz
  6062  1397  2B99               	goto	u3511
  6063  1398  07D9               	addwf	___fladd@b+1,f
  6064  1399                     u3511:
  6065  1399  085E               	movf	___fladd@a+2,w
  6066  139A  1103               	clrz
  6067  139B  1803               	skipnc
  6068  139C  3E01               	addlw	1
  6069  139D  1903               	skipnz
  6070  139E  2BA0               	goto	u3512
  6071  139F  07DA               	addwf	___fladd@b+2,f
  6072  13A0                     u3512:
  6073  13A0  085F               	movf	___fladd@a+3,w
  6074  13A1  1103               	clrz
  6075  13A2  1803               	skipnc
  6076  13A3  3E01               	addlw	1
  6077  13A4  1903               	skipnz
  6078  13A5  2BA7               	goto	u3513
  6079  13A6  07DB               	addwf	___fladd@b+3,f
  6080  13A7                     u3513:
  6081  13A7                     l2570:
  6082  13A7  1C5B               	btfss	___fladd@b+3,0
  6083  13A8  2BAA               	goto	u3521
  6084  13A9  2BAB               	goto	u3520
  6085  13AA                     u3521:
  6086  13AA  2C81               	goto	l2620
  6087  13AB                     u3520:
  6088  13AB                     l2572:
  6089  13AB  1C6B               	btfss	___fladd@grs,0
  6090  13AC  2BAE               	goto	u3531
  6091  13AD  2BAF               	goto	u3530
  6092  13AE                     u3531:
  6093  13AE  2BB8               	goto	l2576
  6094  13AF                     u3530:
  6095  13AF                     l2574:
  6096  13AF  086B               	movf	___fladd@grs,w
  6097  13B0  00E0               	movwf	??___fladd
  6098  13B1  1003               	clrc
  6099  13B2  0C60               	rrf	??___fladd,w
  6100  13B3  3801               	iorlw	1
  6101  13B4  00E1               	movwf	??___fladd+1
  6102  13B5  0861               	movf	??___fladd+1,w
  6103  13B6  00EB               	movwf	___fladd@grs
  6104  13B7  2BBA               	goto	l2578
  6105  13B8                     l2576:
  6106  13B8  1003               	clrc
  6107  13B9  0CEB               	rrf	___fladd@grs,f
  6108  13BA                     l2578:
  6109  13BA  1C58               	btfss	___fladd@b,0
  6110  13BB  2BBD               	goto	u3541
  6111  13BC  2BBE               	goto	u3540
  6112  13BD                     u3541:
  6113  13BD  2BBF               	goto	l2582
  6114  13BE                     u3540:
  6115  13BE                     l2580:
  6116  13BE  17EB               	bsf	___fladd@grs,7
  6117  13BF                     l2582:
  6118  13BF  3001               	movlw	1
  6119  13C0  00E0               	movwf	??___fladd
  6120  13C1                     u3555:
  6121  13C1  0D5B               	rlf	___fladd@b+3,w
  6122  13C2  0CDB               	rrf	___fladd@b+3,f
  6123  13C3  0CDA               	rrf	___fladd@b+2,f
  6124  13C4  0CD9               	rrf	___fladd@b+1,f
  6125  13C5  0CD8               	rrf	___fladd@b,f
  6126  13C6  0BE0               	decfsz	??___fladd& (0+127),f
  6127  13C7  2BC1               	goto	u3555
  6128  13C8                     l2584:
  6129  13C8  3001               	movlw	1
  6130  13C9  00E0               	movwf	??___fladd
  6131  13CA  0860               	movf	??___fladd,w
  6132  13CB  07EA               	addwf	___fladd@bexp,f
  6133  13CC  2C81               	goto	l2620
  6134  13CD                     l2586:
  6135  13CD  085B               	movf	___fladd@b+3,w
  6136  13CE  3A80               	xorlw	128
  6137  13CF  00FF               	movwf	btemp+1
  6138  13D0  085F               	movf	___fladd@a+3,w
  6139  13D1  3A80               	xorlw	128
  6140  13D2  027F               	subwf	btemp+1,w
  6141  13D3  1D03               	skipz
  6142  13D4  2BDF               	goto	u3563
  6143  13D5  085E               	movf	___fladd@a+2,w
  6144  13D6  025A               	subwf	___fladd@b+2,w
  6145  13D7  1D03               	skipz
  6146  13D8  2BDF               	goto	u3563
  6147  13D9  085D               	movf	___fladd@a+1,w
  6148  13DA  0259               	subwf	___fladd@b+1,w
  6149  13DB  1D03               	skipz
  6150  13DC  2BDF               	goto	u3563
  6151  13DD  085C               	movf	___fladd@a,w
  6152  13DE  0258               	subwf	___fladd@b,w
  6153  13DF                     u3563:
  6154  13DF  1803               	skipnc
  6155  13E0  2BE2               	goto	u3561
  6156  13E1  2BE3               	goto	u3560
  6157  13E2                     u3561:
  6158  13E2  2C3B               	goto	l2596
  6159  13E3                     u3560:
  6160  13E3                     l2588:
  6161  13E3  30FF               	movlw	255
  6162  13E4  00E0               	movwf	??___fladd
  6163  13E5  30FF               	movlw	255
  6164  13E6  00E1               	movwf	??___fladd+1
  6165  13E7  30FF               	movlw	255
  6166  13E8  00E2               	movwf	??___fladd+2
  6167  13E9  30FF               	movlw	255
  6168  13EA  00E3               	movwf	??___fladd+3
  6169  13EB  085C               	movf	___fladd@a,w
  6170  13EC  00E4               	movwf	??___fladd+4
  6171  13ED  085D               	movf	___fladd@a+1,w
  6172  13EE  00E5               	movwf	??___fladd+5
  6173  13EF  085E               	movf	___fladd@a+2,w
  6174  13F0  00E6               	movwf	??___fladd+6
  6175  13F1  085F               	movf	___fladd@a+3,w
  6176  13F2  00E7               	movwf	??___fladd+7
  6177  13F3  0858               	movf	___fladd@b,w
  6178  13F4  02E4               	subwf	??___fladd+4,f
  6179  13F5  0859               	movf	___fladd@b+1,w
  6180  13F6  1C03               	skipc
  6181  13F7  0F59               	incfsz	___fladd@b+1,w
  6182  13F8  2BFA               	goto	u3571
  6183  13F9  2BFB               	goto	u3572
  6184  13FA                     u3571:
  6185  13FA  02E5               	subwf	??___fladd+5,f
  6186  13FB                     u3572:
  6187  13FB  085A               	movf	___fladd@b+2,w
  6188  13FC  1C03               	skipc
  6189  13FD  0F5A               	incfsz	___fladd@b+2,w
  6190  13FE  2C00               	goto	u3573
  6191  13FF  2C01               	goto	u3574
  6192  1400                     u3573:
  6193  1400  02E6               	subwf	??___fladd+6,f
  6194  1401                     u3574:
  6195  1401  085B               	movf	___fladd@b+3,w
  6196  1402  1C03               	skipc
  6197  1403  0F5B               	incfsz	___fladd@b+3,w
  6198  1404  2C06               	goto	u3575
  6199  1405  2C07               	goto	u3576
  6200  1406                     u3575:
  6201  1406  02E7               	subwf	??___fladd+7,f
  6202  1407                     u3576:
  6203  1407  0864               	movf	??___fladd+4,w
  6204  1408  07E0               	addwf	??___fladd,f
  6205  1409  0865               	movf	??___fladd+5,w
  6206  140A  1803               	skipnc
  6207  140B  0F65               	incfsz	??___fladd+5,w
  6208  140C  2C0E               	goto	u3580
  6209  140D  2C0F               	goto	u3581
  6210  140E                     u3580:
  6211  140E  07E1               	addwf	??___fladd+1,f
  6212  140F                     u3581:
  6213  140F  0866               	movf	??___fladd+6,w
  6214  1410  1803               	skipnc
  6215  1411  0F66               	incfsz	??___fladd+6,w
  6216  1412  2C14               	goto	u3582
  6217  1413  2C15               	goto	u3583
  6218  1414                     u3582:
  6219  1414  07E2               	addwf	??___fladd+2,f
  6220  1415                     u3583:
  6221  1415  0867               	movf	??___fladd+7,w
  6222  1416  1803               	skipnc
  6223  1417  0A67               	incf	??___fladd+7,w
  6224  1418  07E3               	addwf	??___fladd+3,f
  6225  1419  0863               	movf	??___fladd+3,w
  6226  141A  00DB               	movwf	___fladd@b+3
  6227  141B  0862               	movf	??___fladd+2,w
  6228  141C  00DA               	movwf	___fladd@b+2
  6229  141D  0861               	movf	??___fladd+1,w
  6230  141E  00D9               	movwf	___fladd@b+1
  6231  141F  0860               	movf	??___fladd,w
  6232  1420  00D8               	movwf	___fladd@b
  6233  1421                     l2590:
  6234  1421  3080               	movlw	128
  6235  1422  00E0               	movwf	??___fladd
  6236  1423  0860               	movf	??___fladd,w
  6237  1424  06E8               	xorwf	___fladd@signs,f
  6238  1425  09EB               	comf	___fladd@grs,f
  6239  1426  0AEB               	incf	___fladd@grs,f
  6240  1427                     l2592:
  6241  1427  086B               	movf	___fladd@grs,w
  6242  1428  1D03               	btfss	3,2
  6243  1429  2C2B               	goto	u3591
  6244  142A  2C2C               	goto	u3590
  6245  142B                     u3591:
  6246  142B  2C49               	goto	l757
  6247  142C                     u3590:
  6248  142C                     l2594:
  6249  142C  3001               	movlw	1
  6250  142D  07D8               	addwf	___fladd@b,f
  6251  142E  3000               	movlw	0
  6252  142F  1803               	skipnc
  6253  1430  3001               	movlw	1
  6254  1431  07D9               	addwf	___fladd@b+1,f
  6255  1432  3000               	movlw	0
  6256  1433  1803               	skipnc
  6257  1434  3001               	movlw	1
  6258  1435  07DA               	addwf	___fladd@b+2,f
  6259  1436  3000               	movlw	0
  6260  1437  1803               	skipnc
  6261  1438  3001               	movlw	1
  6262  1439  07DB               	addwf	___fladd@b+3,f
  6263  143A  2C49               	goto	l757
  6264  143B                     l2596:
  6265  143B  085C               	movf	___fladd@a,w
  6266  143C  02D8               	subwf	___fladd@b,f
  6267  143D  085D               	movf	___fladd@a+1,w
  6268  143E  1C03               	skipc
  6269  143F  0F5D               	incfsz	___fladd@a+1,w
  6270  1440  02D9               	subwf	___fladd@b+1,f
  6271  1441  085E               	movf	___fladd@a+2,w
  6272  1442  1C03               	skipc
  6273  1443  0F5E               	incfsz	___fladd@a+2,w
  6274  1444  02DA               	subwf	___fladd@b+2,f
  6275  1445  085F               	movf	___fladd@a+3,w
  6276  1446  1C03               	skipc
  6277  1447  0F5F               	incfsz	___fladd@a+3,w
  6278  1448  02DB               	subwf	___fladd@b+3,f
  6279  1449                     l757:
  6280  1449  085B               	movf	___fladd@b+3,w
  6281  144A  045A               	iorwf	___fladd@b+2,w
  6282  144B  0459               	iorwf	___fladd@b+1,w
  6283  144C  0458               	iorwf	___fladd@b,w
  6284  144D  1D03               	skipz
  6285  144E  2C50               	goto	u3601
  6286  144F  2C51               	goto	u3600
  6287  1450                     u3601:
  6288  1450  2C7D               	goto	l2618
  6289  1451                     u3600:
  6290  1451                     l2598:
  6291  1451  086B               	movf	___fladd@grs,w
  6292  1452  1D03               	btfss	3,2
  6293  1453  2C55               	goto	u3611
  6294  1454  2C56               	goto	u3610
  6295  1455                     u3611:
  6296  1455  2C7D               	goto	l2618
  6297  1456                     u3610:
  6298  1456                     l2600:
  6299  1456  3000               	movlw	0
  6300  1457  00DB               	movwf	?___fladd+3
  6301  1458  3000               	movlw	0
  6302  1459  00DA               	movwf	?___fladd+2
  6303  145A  3000               	movlw	0
  6304  145B  00D9               	movwf	?___fladd+1
  6305  145C  3000               	movlw	0
  6306  145D  00D8               	movwf	?___fladd
  6307  145E  2CFB               	goto	l749
  6308  145F                     l2604:
  6309  145F  3001               	movlw	1
  6310  1460  00E0               	movwf	??___fladd
  6311  1461                     u3625:
  6312  1461  1003               	clrc
  6313  1462  0DD8               	rlf	___fladd@b,f
  6314  1463  0DD9               	rlf	___fladd@b+1,f
  6315  1464  0DDA               	rlf	___fladd@b+2,f
  6316  1465  0DDB               	rlf	___fladd@b+3,f
  6317  1466  0BE0               	decfsz	??___fladd,f
  6318  1467  2C61               	goto	u3625
  6319  1468                     l2606:
  6320  1468  1FEB               	btfss	___fladd@grs,7
  6321  1469  2C6B               	goto	u3631
  6322  146A  2C6C               	goto	u3630
  6323  146B                     u3631:
  6324  146B  2C6D               	goto	l761
  6325  146C                     u3630:
  6326  146C                     l2608:
  6327  146C  1458               	bsf	___fladd@b,0
  6328  146D                     l761:
  6329  146D  1C6B               	btfss	___fladd@grs,0
  6330  146E  2C70               	goto	u3641
  6331  146F  2C71               	goto	u3640
  6332  1470                     u3641:
  6333  1470  2C74               	goto	l2612
  6334  1471                     u3640:
  6335  1471                     l2610:
  6336  1471  1403               	setc
  6337  1472  0DEB               	rlf	___fladd@grs,f
  6338  1473  2C76               	goto	l2614
  6339  1474                     l2612:
  6340  1474  1003               	clrc
  6341  1475  0DEB               	rlf	___fladd@grs,f
  6342  1476                     l2614:
  6343  1476  086A               	movf	___fladd@bexp,w
  6344  1477  1903               	btfsc	3,2
  6345  1478  2C7A               	goto	u3651
  6346  1479  2C7B               	goto	u3650
  6347  147A                     u3651:
  6348  147A  2C7D               	goto	l2618
  6349  147B                     u3650:
  6350  147B                     l2616:
  6351  147B  3001               	movlw	1
  6352  147C  02EA               	subwf	___fladd@bexp,f
  6353  147D                     l2618:
  6354  147D  1FDA               	btfss	___fladd@b+2,7
  6355  147E  2C80               	goto	u3661
  6356  147F  2C81               	goto	u3660
  6357  1480                     u3661:
  6358  1480  2C5F               	goto	l2604
  6359  1481                     u3660:
  6360  1481                     l2620:
  6361  1481  01E9               	clrf	___fladd@aexp
  6362  1482                     l2622:
  6363  1482  1FEB               	btfss	___fladd@grs,7
  6364  1483  2C85               	goto	u3671
  6365  1484  2C86               	goto	u3670
  6366  1485                     u3671:
  6367  1485  2C94               	goto	l2630
  6368  1486                     u3670:
  6369  1486                     l2624:
  6370  1486  086B               	movf	___fladd@grs,w
  6371  1487  397F               	andlw	127
  6372  1488  1903               	btfsc	3,2
  6373  1489  2C8B               	goto	u3681
  6374  148A  2C8C               	goto	u3680
  6375  148B                     u3681:
  6376  148B  2C8F               	goto	l767
  6377  148C                     u3680:
  6378  148C                     l2626:
  6379  148C  01E9               	clrf	___fladd@aexp
  6380  148D  0AE9               	incf	___fladd@aexp,f
  6381  148E  2C94               	goto	l2630
  6382  148F                     l767:
  6383  148F  1C58               	btfss	___fladd@b,0
  6384  1490  2C92               	goto	u3691
  6385  1491  2C93               	goto	u3690
  6386  1492                     u3691:
  6387  1492  2C94               	goto	l2630
  6388  1493                     u3690:
  6389  1493  2C8C               	goto	l2626
  6390  1494                     l2630:
  6391  1494  0869               	movf	___fladd@aexp,w
  6392  1495  1903               	btfsc	3,2
  6393  1496  2C98               	goto	u3701
  6394  1497  2C99               	goto	u3700
  6395  1498                     u3701:
  6396  1498  2CCD               	goto	l770
  6397  1499                     u3700:
  6398  1499                     l2632:
  6399  1499  3001               	movlw	1
  6400  149A  07D8               	addwf	___fladd@b,f
  6401  149B  3000               	movlw	0
  6402  149C  1803               	skipnc
  6403  149D  3001               	movlw	1
  6404  149E  07D9               	addwf	___fladd@b+1,f
  6405  149F  3000               	movlw	0
  6406  14A0  1803               	skipnc
  6407  14A1  3001               	movlw	1
  6408  14A2  07DA               	addwf	___fladd@b+2,f
  6409  14A3  3000               	movlw	0
  6410  14A4  1803               	skipnc
  6411  14A5  3001               	movlw	1
  6412  14A6  07DB               	addwf	___fladd@b+3,f
  6413  14A7                     l2634:
  6414  14A7  1C5B               	btfss	___fladd@b+3,0
  6415  14A8  2CAA               	goto	u3711
  6416  14A9  2CAB               	goto	u3710
  6417  14AA                     u3711:
  6418  14AA  2CCD               	goto	l770
  6419  14AB                     u3710:
  6420  14AB                     l2636:
  6421  14AB  0858               	movf	___fladd@b,w
  6422  14AC  00E0               	movwf	??___fladd
  6423  14AD  0859               	movf	___fladd@b+1,w
  6424  14AE  00E1               	movwf	??___fladd+1
  6425  14AF  085A               	movf	___fladd@b+2,w
  6426  14B0  00E2               	movwf	??___fladd+2
  6427  14B1  085B               	movf	___fladd@b+3,w
  6428  14B2  00E3               	movwf	??___fladd+3
  6429  14B3  3001               	movlw	1
  6430  14B4  00E4               	movwf	??___fladd+4
  6431  14B5                     u3725:
  6432  14B5  0D63               	rlf	??___fladd+3,w
  6433  14B6  0CE3               	rrf	??___fladd+3,f
  6434  14B7  0CE2               	rrf	??___fladd+2,f
  6435  14B8  0CE1               	rrf	??___fladd+1,f
  6436  14B9  0CE0               	rrf	??___fladd,f
  6437  14BA                     u3720:
  6438  14BA  0BE4               	decfsz	??___fladd+4,f
  6439  14BB  2CB5               	goto	u3725
  6440  14BC  0863               	movf	??___fladd+3,w
  6441  14BD  00DB               	movwf	___fladd@b+3
  6442  14BE  0862               	movf	??___fladd+2,w
  6443  14BF  00DA               	movwf	___fladd@b+2
  6444  14C0  0861               	movf	??___fladd+1,w
  6445  14C1  00D9               	movwf	___fladd@b+1
  6446  14C2  0860               	movf	??___fladd,w
  6447  14C3  00D8               	movwf	___fladd@b
  6448  14C4  0A6A               	incf	___fladd@bexp,w
  6449  14C5  1903               	btfsc	3,2
  6450  14C6  2CC8               	goto	u3731
  6451  14C7  2CC9               	goto	u3730
  6452  14C8                     u3731:
  6453  14C8  2CCD               	goto	l770
  6454  14C9                     u3730:
  6455  14C9                     l2638:
  6456  14C9  3001               	movlw	1
  6457  14CA  00E0               	movwf	??___fladd
  6458  14CB  0860               	movf	??___fladd,w
  6459  14CC  07EA               	addwf	___fladd@bexp,f
  6460  14CD                     l770:
  6461  14CD  0A6A               	incf	___fladd@bexp,w
  6462  14CE  1903               	btfsc	3,2
  6463  14CF  2CD1               	goto	u3741
  6464  14D0  2CD2               	goto	u3740
  6465  14D1                     u3741:
  6466  14D1  2CD7               	goto	l2642
  6467  14D2                     u3740:
  6468  14D2                     l2640:
  6469  14D2  086A               	movf	___fladd@bexp,w
  6470  14D3  1D03               	btfss	3,2
  6471  14D4  2CD6               	goto	u3751
  6472  14D5  2CD7               	goto	u3750
  6473  14D6                     u3751:
  6474  14D6  2CE5               	goto	l2648
  6475  14D7                     u3750:
  6476  14D7                     l2642:
  6477  14D7  3000               	movlw	0
  6478  14D8  00DB               	movwf	___fladd@b+3
  6479  14D9  3000               	movlw	0
  6480  14DA  00DA               	movwf	___fladd@b+2
  6481  14DB  3000               	movlw	0
  6482  14DC  00D9               	movwf	___fladd@b+1
  6483  14DD  3000               	movlw	0
  6484  14DE  00D8               	movwf	___fladd@b
  6485  14DF                     l2644:
  6486  14DF  086A               	movf	___fladd@bexp,w
  6487  14E0  1D03               	btfss	3,2
  6488  14E1  2CE3               	goto	u3761
  6489  14E2  2CE4               	goto	u3760
  6490  14E3                     u3761:
  6491  14E3  2CE5               	goto	l2648
  6492  14E4                     u3760:
  6493  14E4                     l2646:
  6494  14E4  01E8               	clrf	___fladd@signs
  6495  14E5                     l2648:
  6496  14E5  1C6A               	btfss	___fladd@bexp,0
  6497  14E6  2CE8               	goto	u3771
  6498  14E7  2CE9               	goto	u3770
  6499  14E8                     u3771:
  6500  14E8  2CEB               	goto	l2652
  6501  14E9                     u3770:
  6502  14E9                     l2650:
  6503  14E9  17DA               	bsf	___fladd@b+2,7
  6504  14EA  2CEF               	goto	l778
  6505  14EB                     l2652:
  6506  14EB  307F               	movlw	127
  6507  14EC  00E0               	movwf	??___fladd
  6508  14ED  0860               	movf	??___fladd,w
  6509  14EE  05DA               	andwf	___fladd@b+2,f
  6510  14EF                     l778:
  6511  14EF  086A               	movf	___fladd@bexp,w
  6512  14F0  00E0               	movwf	??___fladd
  6513  14F1  1003               	clrc
  6514  14F2  0C60               	rrf	??___fladd,w
  6515  14F3  00E1               	movwf	??___fladd+1
  6516  14F4  0861               	movf	??___fladd+1,w
  6517  14F5  00DB               	movwf	___fladd@b+3
  6518  14F6                     l2654:
  6519  14F6  1FE8               	btfss	___fladd@signs,7
  6520  14F7  2CF9               	goto	u3781
  6521  14F8  2CFA               	goto	u3780
  6522  14F9                     u3781:
  6523  14F9  2CFB               	goto	l779
  6524  14FA                     u3780:
  6525  14FA                     l2656:
  6526  14FA  17DB               	bsf	___fladd@b+3,7
  6527  14FB                     l779:
  6528  14FB                     l749:
  6529  14FB  0008               	return
  6530  14FC                     __end_of___fladd:
  6531                           
  6532                           	psect	text17
  6533  0800                     __ptext17:	
  6534 ;; *************** function ___flneg *****************
  6535 ;; Defined at:
  6536 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;  f1              4    3[COMMON] unsigned char 
  6539 ;; Auto vars:     Size  Location     Type
  6540 ;;		None
  6541 ;; Return value:  Size  Location     Type
  6542 ;;                  4    3[COMMON] unsigned char 
  6543 ;; Registers used:
  6544 ;;		wreg
  6545 ;; Tracked objects:
  6546 ;;		On entry : 0/0
  6547 ;;		On exit  : 0/0
  6548 ;;		Unchanged: 0/0
  6549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6550 ;;      Params:         4       0       0       0       0
  6551 ;;      Locals:         0       0       0       0       0
  6552 ;;      Temps:          0       0       0       0       0
  6553 ;;      Totals:         4       0       0       0       0
  6554 ;;Total ram usage:        4 bytes
  6555 ;; Hardware stack levels used:    1
  6556 ;; Hardware stack levels required when called:    2
  6557 ;; This function calls:
  6558 ;;		Nothing
  6559 ;; This function is called by:
  6560 ;;		_sprintf
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           
  6564                           
  6565                           ;psect for function ___flneg
  6566  0800                     ___flneg:
  6567  0800                     l3068:	
  6568                           ;incstack = 0
  6569                           ; Regs used in ___flneg: [wreg]
  6570                           
  6571  0800  0876               	movf	___flneg@f1+3,w
  6572  0801  0475               	iorwf	___flneg@f1+2,w
  6573  0802  0474               	iorwf	___flneg@f1+1,w
  6574  0803  0473               	iorwf	___flneg@f1,w
  6575  0804  1903               	skipnz
  6576  0805  2807               	goto	u4911
  6577  0806  2808               	goto	u4910
  6578  0807                     u4911:
  6579  0807  280A               	goto	l3072
  6580  0808                     u4910:
  6581  0808                     l3070:
  6582  0808  3080               	movlw	128
  6583  0809  06F6               	xorwf	___flneg@f1+3,f
  6584  080A                     l3072:
  6585  080A                     l608:
  6586  080A  0008               	return
  6587  080B                     __end_of___flneg:
  6588                           
  6589                           	psect	text18
  6590  1F5C                     __ptext18:	
  6591 ;; *************** function ___flge *****************
  6592 ;; Defined at:
  6593 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;  ff1             4    0[BANK0 ] unsigned char 
  6596 ;;  ff2             4    4[BANK0 ] unsigned char 
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;		None
  6599 ;; Return value:  Size  Location     Type
  6600 ;;		None               void
  6601 ;; Registers used:
  6602 ;;		wreg, status,2, status,0
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6608 ;;      Params:         0       8       0       0       0
  6609 ;;      Locals:         0       0       0       0       0
  6610 ;;      Temps:          4       0       0       0       0
  6611 ;;      Totals:         4       8       0       0       0
  6612 ;;Total ram usage:       12 bytes
  6613 ;; Hardware stack levels used:    1
  6614 ;; Hardware stack levels required when called:    2
  6615 ;; This function calls:
  6616 ;;		Nothing
  6617 ;; This function is called by:
  6618 ;;		_sprintf
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           
  6623                           ;psect for function ___flge
  6624  1F5C                     ___flge:
  6625  1F5C                     l3898:	
  6626                           ;incstack = 0
  6627                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6628                           
  6629  1F5C  3000               	movlw	0
  6630  1F5D  1283               	bcf	3,5	;RP0=0, select bank0
  6631  1F5E  1303               	bcf	3,6	;RP1=0, select bank0
  6632  1F5F  0520               	andwf	___flge@ff1,w
  6633  1F60  00F3               	movwf	??___flge
  6634  1F61  3000               	movlw	0
  6635  1F62  0521               	andwf	___flge@ff1+1,w
  6636  1F63  00F4               	movwf	??___flge+1
  6637  1F64  3080               	movlw	128
  6638  1F65  0522               	andwf	___flge@ff1+2,w
  6639  1F66  00F5               	movwf	??___flge+2
  6640  1F67  307F               	movlw	127
  6641  1F68  0523               	andwf	___flge@ff1+3,w
  6642  1F69  00F6               	movwf	??___flge+3
  6643  1F6A  0876               	movf	??___flge+3,w
  6644  1F6B  0475               	iorwf	??___flge+2,w
  6645  1F6C  0474               	iorwf	??___flge+1,w
  6646  1F6D  0473               	iorwf	??___flge,w
  6647  1F6E  1D03               	skipz
  6648  1F6F  2F71               	goto	u6501
  6649  1F70  2F72               	goto	u6500
  6650  1F71                     u6501:
  6651  1F71  2F7A               	goto	l600
  6652  1F72                     u6500:
  6653  1F72                     l3900:
  6654  1F72  3000               	movlw	0
  6655  1F73  00A3               	movwf	___flge@ff1+3
  6656  1F74  3000               	movlw	0
  6657  1F75  00A2               	movwf	___flge@ff1+2
  6658  1F76  3000               	movlw	0
  6659  1F77  00A1               	movwf	___flge@ff1+1
  6660  1F78  3000               	movlw	0
  6661  1F79  00A0               	movwf	___flge@ff1
  6662  1F7A                     l600:
  6663  1F7A  3000               	movlw	0
  6664  1F7B  0524               	andwf	___flge@ff2,w
  6665  1F7C  00F3               	movwf	??___flge
  6666  1F7D  3000               	movlw	0
  6667  1F7E  0525               	andwf	___flge@ff2+1,w
  6668  1F7F  00F4               	movwf	??___flge+1
  6669  1F80  3080               	movlw	128
  6670  1F81  0526               	andwf	___flge@ff2+2,w
  6671  1F82  00F5               	movwf	??___flge+2
  6672  1F83  307F               	movlw	127
  6673  1F84  0527               	andwf	___flge@ff2+3,w
  6674  1F85  00F6               	movwf	??___flge+3
  6675  1F86  0876               	movf	??___flge+3,w
  6676  1F87  0475               	iorwf	??___flge+2,w
  6677  1F88  0474               	iorwf	??___flge+1,w
  6678  1F89  0473               	iorwf	??___flge,w
  6679  1F8A  1D03               	skipz
  6680  1F8B  2F8D               	goto	u6511
  6681  1F8C  2F8E               	goto	u6510
  6682  1F8D                     u6511:
  6683  1F8D  2F96               	goto	l3904
  6684  1F8E                     u6510:
  6685  1F8E                     l3902:
  6686  1F8E  3000               	movlw	0
  6687  1F8F  00A7               	movwf	___flge@ff2+3
  6688  1F90  3000               	movlw	0
  6689  1F91  00A6               	movwf	___flge@ff2+2
  6690  1F92  3000               	movlw	0
  6691  1F93  00A5               	movwf	___flge@ff2+1
  6692  1F94  3000               	movlw	0
  6693  1F95  00A4               	movwf	___flge@ff2
  6694  1F96                     l3904:
  6695  1F96  1FA3               	btfss	___flge@ff1+3,7
  6696  1F97  2F99               	goto	u6521
  6697  1F98  2F9A               	goto	u6520
  6698  1F99                     u6521:
  6699  1F99  2FBE               	goto	l3908
  6700  1F9A                     u6520:
  6701  1F9A                     l3906:
  6702  1F9A  3000               	movlw	0
  6703  1F9B  00F3               	movwf	??___flge
  6704  1F9C  3000               	movlw	0
  6705  1F9D  00F4               	movwf	??___flge+1
  6706  1F9E  3000               	movlw	0
  6707  1F9F  00F5               	movwf	??___flge+2
  6708  1FA0  3080               	movlw	128
  6709  1FA1  00F6               	movwf	??___flge+3
  6710  1FA2  0820               	movf	___flge@ff1,w
  6711  1FA3  02F3               	subwf	??___flge,f
  6712  1FA4  0821               	movf	___flge@ff1+1,w
  6713  1FA5  1C03               	skipc
  6714  1FA6  0F21               	incfsz	___flge@ff1+1,w
  6715  1FA7  2FA9               	goto	u6531
  6716  1FA8  2FAA               	goto	u6532
  6717  1FA9                     u6531:
  6718  1FA9  02F4               	subwf	??___flge+1,f
  6719  1FAA                     u6532:
  6720  1FAA  0822               	movf	___flge@ff1+2,w
  6721  1FAB  1C03               	skipc
  6722  1FAC  0F22               	incfsz	___flge@ff1+2,w
  6723  1FAD  2FAF               	goto	u6533
  6724  1FAE  2FB0               	goto	u6534
  6725  1FAF                     u6533:
  6726  1FAF  02F5               	subwf	??___flge+2,f
  6727  1FB0                     u6534:
  6728  1FB0  0823               	movf	___flge@ff1+3,w
  6729  1FB1  1C03               	skipc
  6730  1FB2  0F23               	incfsz	___flge@ff1+3,w
  6731  1FB3  2FB5               	goto	u6535
  6732  1FB4  2FB6               	goto	u6536
  6733  1FB5                     u6535:
  6734  1FB5  02F6               	subwf	??___flge+3,f
  6735  1FB6                     u6536:
  6736  1FB6  0876               	movf	??___flge+3,w
  6737  1FB7  00A3               	movwf	___flge@ff1+3
  6738  1FB8  0875               	movf	??___flge+2,w
  6739  1FB9  00A2               	movwf	___flge@ff1+2
  6740  1FBA  0874               	movf	??___flge+1,w
  6741  1FBB  00A1               	movwf	___flge@ff1+1
  6742  1FBC  0873               	movf	??___flge,w
  6743  1FBD  00A0               	movwf	___flge@ff1
  6744  1FBE                     l3908:
  6745  1FBE  1FA7               	btfss	___flge@ff2+3,7
  6746  1FBF  2FC1               	goto	u6541
  6747  1FC0  2FC2               	goto	u6540
  6748  1FC1                     u6541:
  6749  1FC1  2FE6               	goto	l603
  6750  1FC2                     u6540:
  6751  1FC2                     l3910:
  6752  1FC2  3000               	movlw	0
  6753  1FC3  00F3               	movwf	??___flge
  6754  1FC4  3000               	movlw	0
  6755  1FC5  00F4               	movwf	??___flge+1
  6756  1FC6  3000               	movlw	0
  6757  1FC7  00F5               	movwf	??___flge+2
  6758  1FC8  3080               	movlw	128
  6759  1FC9  00F6               	movwf	??___flge+3
  6760  1FCA  0824               	movf	___flge@ff2,w
  6761  1FCB  02F3               	subwf	??___flge,f
  6762  1FCC  0825               	movf	___flge@ff2+1,w
  6763  1FCD  1C03               	skipc
  6764  1FCE  0F25               	incfsz	___flge@ff2+1,w
  6765  1FCF  2FD1               	goto	u6551
  6766  1FD0  2FD2               	goto	u6552
  6767  1FD1                     u6551:
  6768  1FD1  02F4               	subwf	??___flge+1,f
  6769  1FD2                     u6552:
  6770  1FD2  0826               	movf	___flge@ff2+2,w
  6771  1FD3  1C03               	skipc
  6772  1FD4  0F26               	incfsz	___flge@ff2+2,w
  6773  1FD5  2FD7               	goto	u6553
  6774  1FD6  2FD8               	goto	u6554
  6775  1FD7                     u6553:
  6776  1FD7  02F5               	subwf	??___flge+2,f
  6777  1FD8                     u6554:
  6778  1FD8  0827               	movf	___flge@ff2+3,w
  6779  1FD9  1C03               	skipc
  6780  1FDA  0F27               	incfsz	___flge@ff2+3,w
  6781  1FDB  2FDD               	goto	u6555
  6782  1FDC  2FDE               	goto	u6556
  6783  1FDD                     u6555:
  6784  1FDD  02F6               	subwf	??___flge+3,f
  6785  1FDE                     u6556:
  6786  1FDE  0876               	movf	??___flge+3,w
  6787  1FDF  00A7               	movwf	___flge@ff2+3
  6788  1FE0  0875               	movf	??___flge+2,w
  6789  1FE1  00A6               	movwf	___flge@ff2+2
  6790  1FE2  0874               	movf	??___flge+1,w
  6791  1FE3  00A5               	movwf	___flge@ff2+1
  6792  1FE4  0873               	movf	??___flge,w
  6793  1FE5  00A4               	movwf	___flge@ff2
  6794  1FE6                     l603:
  6795  1FE6  3080               	movlw	128
  6796  1FE7  06A3               	xorwf	___flge@ff1+3,f
  6797  1FE8  3080               	movlw	128
  6798  1FE9  06A7               	xorwf	___flge@ff2+3,f
  6799  1FEA  0827               	movf	___flge@ff2+3,w
  6800  1FEB  0223               	subwf	___flge@ff1+3,w
  6801  1FEC  1D03               	skipz
  6802  1FED  2FF8               	goto	u6565
  6803  1FEE  0826               	movf	___flge@ff2+2,w
  6804  1FEF  0222               	subwf	___flge@ff1+2,w
  6805  1FF0  1D03               	skipz
  6806  1FF1  2FF8               	goto	u6565
  6807  1FF2  0825               	movf	___flge@ff2+1,w
  6808  1FF3  0221               	subwf	___flge@ff1+1,w
  6809  1FF4  1D03               	skipz
  6810  1FF5  2FF8               	goto	u6565
  6811  1FF6  0824               	movf	___flge@ff2,w
  6812  1FF7  0220               	subwf	___flge@ff1,w
  6813  1FF8                     u6565:
  6814  1FF8  1803               	skipnc
  6815  1FF9  2FFB               	goto	u6561
  6816  1FFA  2FFC               	goto	u6560
  6817  1FFB                     u6561:
  6818  1FFB  2FFE               	goto	l3914
  6819  1FFC                     u6560:
  6820  1FFC                     l3912:
  6821  1FFC  1003               	clrc
  6822  1FFD  2FFF               	goto	l604
  6823  1FFE                     l3914:
  6824  1FFE  1403               	setc
  6825  1FFF                     l604:
  6826  1FFF  0008               	return
  6827  2000                     __end_of___flge:
  6828                           
  6829                           	psect	text19
  6830  1D29                     __ptext19:	
  6831 ;; *************** function ___fleq *****************
  6832 ;; Defined at:
  6833 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;  ff1             4    0[BANK0 ] unsigned char 
  6836 ;;  ff2             4    4[BANK0 ] unsigned char 
  6837 ;; Auto vars:     Size  Location     Type
  6838 ;;		None
  6839 ;; Return value:  Size  Location     Type
  6840 ;;		None               void
  6841 ;; Registers used:
  6842 ;;		wreg, status,2, status,0
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6848 ;;      Params:         0       8       0       0       0
  6849 ;;      Locals:         0       0       0       0       0
  6850 ;;      Temps:          4       0       0       0       0
  6851 ;;      Totals:         4       8       0       0       0
  6852 ;;Total ram usage:       12 bytes
  6853 ;; Hardware stack levels used:    1
  6854 ;; Hardware stack levels required when called:    2
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_sprintf
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           
  6863                           ;psect for function ___fleq
  6864  1D29                     ___fleq:
  6865  1D29                     l3886:	
  6866                           ;incstack = 0
  6867                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6868                           
  6869  1D29  3000               	movlw	0
  6870  1D2A  1283               	bcf	3,5	;RP0=0, select bank0
  6871  1D2B  1303               	bcf	3,6	;RP1=0, select bank0
  6872  1D2C  0520               	andwf	___fleq@ff1,w
  6873  1D2D  00F3               	movwf	??___fleq
  6874  1D2E  3000               	movlw	0
  6875  1D2F  0521               	andwf	___fleq@ff1+1,w
  6876  1D30  00F4               	movwf	??___fleq+1
  6877  1D31  3080               	movlw	128
  6878  1D32  0522               	andwf	___fleq@ff1+2,w
  6879  1D33  00F5               	movwf	??___fleq+2
  6880  1D34  307F               	movlw	127
  6881  1D35  0523               	andwf	___fleq@ff1+3,w
  6882  1D36  00F6               	movwf	??___fleq+3
  6883  1D37  0876               	movf	??___fleq+3,w
  6884  1D38  0475               	iorwf	??___fleq+2,w
  6885  1D39  0474               	iorwf	??___fleq+1,w
  6886  1D3A  0473               	iorwf	??___fleq,w
  6887  1D3B  1D03               	skipz
  6888  1D3C  2D3E               	goto	u6471
  6889  1D3D  2D3F               	goto	u6470
  6890  1D3E                     u6471:
  6891  1D3E  2D47               	goto	l595
  6892  1D3F                     u6470:
  6893  1D3F                     l3888:
  6894  1D3F  3000               	movlw	0
  6895  1D40  00A3               	movwf	___fleq@ff1+3
  6896  1D41  3000               	movlw	0
  6897  1D42  00A2               	movwf	___fleq@ff1+2
  6898  1D43  3000               	movlw	0
  6899  1D44  00A1               	movwf	___fleq@ff1+1
  6900  1D45  3000               	movlw	0
  6901  1D46  00A0               	movwf	___fleq@ff1
  6902  1D47                     l595:
  6903  1D47  3000               	movlw	0
  6904  1D48  0524               	andwf	___fleq@ff2,w
  6905  1D49  00F3               	movwf	??___fleq
  6906  1D4A  3000               	movlw	0
  6907  1D4B  0525               	andwf	___fleq@ff2+1,w
  6908  1D4C  00F4               	movwf	??___fleq+1
  6909  1D4D  3080               	movlw	128
  6910  1D4E  0526               	andwf	___fleq@ff2+2,w
  6911  1D4F  00F5               	movwf	??___fleq+2
  6912  1D50  307F               	movlw	127
  6913  1D51  0527               	andwf	___fleq@ff2+3,w
  6914  1D52  00F6               	movwf	??___fleq+3
  6915  1D53  0876               	movf	??___fleq+3,w
  6916  1D54  0475               	iorwf	??___fleq+2,w
  6917  1D55  0474               	iorwf	??___fleq+1,w
  6918  1D56  0473               	iorwf	??___fleq,w
  6919  1D57  1D03               	skipz
  6920  1D58  2D5A               	goto	u6481
  6921  1D59  2D5B               	goto	u6480
  6922  1D5A                     u6481:
  6923  1D5A  2D63               	goto	l596
  6924  1D5B                     u6480:
  6925  1D5B                     l3890:
  6926  1D5B  3000               	movlw	0
  6927  1D5C  00A7               	movwf	___fleq@ff2+3
  6928  1D5D  3000               	movlw	0
  6929  1D5E  00A6               	movwf	___fleq@ff2+2
  6930  1D5F  3000               	movlw	0
  6931  1D60  00A5               	movwf	___fleq@ff2+1
  6932  1D61  3000               	movlw	0
  6933  1D62  00A4               	movwf	___fleq@ff2
  6934  1D63                     l596:
  6935  1D63  0827               	movf	___fleq@ff2+3,w
  6936  1D64  0623               	xorwf	___fleq@ff1+3,w
  6937  1D65  1D03               	skipz
  6938  1D66  2D71               	goto	u6495
  6939  1D67  0826               	movf	___fleq@ff2+2,w
  6940  1D68  0622               	xorwf	___fleq@ff1+2,w
  6941  1D69  1D03               	skipz
  6942  1D6A  2D71               	goto	u6495
  6943  1D6B  0825               	movf	___fleq@ff2+1,w
  6944  1D6C  0621               	xorwf	___fleq@ff1+1,w
  6945  1D6D  1D03               	skipz
  6946  1D6E  2D71               	goto	u6495
  6947  1D6F  0824               	movf	___fleq@ff2,w
  6948  1D70  0620               	xorwf	___fleq@ff1,w
  6949  1D71                     u6495:
  6950  1D71  1903               	skipnz
  6951  1D72  2D74               	goto	u6491
  6952  1D73  2D75               	goto	u6490
  6953  1D74                     u6491:
  6954  1D74  2D77               	goto	l3894
  6955  1D75                     u6490:
  6956  1D75                     l3892:
  6957  1D75  1003               	clrc
  6958  1D76  2D78               	goto	l597
  6959  1D77                     l3894:
  6960  1D77  1403               	setc
  6961  1D78                     l597:
  6962  1D78  0008               	return
  6963  1D79                     __end_of___fleq:
  6964                           
  6965                           	psect	text20
  6966  1B42                     __ptext20:	
  6967 ;; *************** function _send_crct *****************
  6968 ;; Defined at:
  6969 ;;		line 209 in file "main.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;  st              1    wreg     PTR unsigned char 
  6972 ;;		 -> f(10), 
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;  st              1    7[COMMON] PTR unsigned char 
  6975 ;;		 -> f(10), 
  6976 ;;  i               2    5[COMMON] int 
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  1    wreg      void 
  6979 ;; Registers used:
  6980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6986 ;;      Params:         0       0       0       0       0
  6987 ;;      Locals:         3       0       0       0       0
  6988 ;;      Temps:          1       0       0       0       0
  6989 ;;      Totals:         4       0       0       0       0
  6990 ;;Total ram usage:        4 bytes
  6991 ;; Hardware stack levels used:    1
  6992 ;; Hardware stack levels required when called:    3
  6993 ;; This function calls:
  6994 ;;		_send_char
  6995 ;; This function is called by:
  6996 ;;		_main
  6997 ;; This function uses a non-reentrant model
  6998 ;;
  6999                           
  7000                           
  7001                           ;psect for function _send_crct
  7002  1B42                     _send_crct:
  7003                           
  7004                           ;incstack = 0
  7005                           ; Regs used in _send_crct: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7006                           ;send_crct@st stored from wreg
  7007  1B42  00F7               	movwf	send_crct@st
  7008  1B43                     l3534:
  7009                           
  7010                           ;main.c: 210:     int i = 0;
  7011  1B43  01F5               	clrf	send_crct@i
  7012  1B44  01F6               	clrf	send_crct@i+1
  7013                           
  7014                           ;main.c: 211:     while (st[i] != 0){
  7015  1B45  2B57               	goto	l3540
  7016  1B46                     l3536:
  7017                           
  7018                           ;main.c: 212:         send_char(st[i]);
  7019  1B46  0875               	movf	send_crct@i,w
  7020  1B47  0777               	addwf	send_crct@st,w
  7021  1B48  00F4               	movwf	??_send_crct
  7022  1B49  0874               	movf	??_send_crct,w
  7023  1B4A  0084               	movwf	4
  7024  1B4B  0800               	movf	0,w
  7025  1B4C  160A  158A  22A7  160A  158A  	fcall	_send_char
  7026  1B51                     l3538:
  7027                           
  7028                           ;main.c: 213:         i++;
  7029  1B51  3001               	movlw	1
  7030  1B52  07F5               	addwf	send_crct@i,f
  7031  1B53  1803               	skipnc
  7032  1B54  0AF6               	incf	send_crct@i+1,f
  7033  1B55  3000               	movlw	0
  7034  1B56  07F6               	addwf	send_crct@i+1,f
  7035  1B57                     l3540:
  7036                           
  7037                           ;main.c: 211:     while (st[i] != 0){
  7038  1B57  0875               	movf	send_crct@i,w
  7039  1B58  0777               	addwf	send_crct@st,w
  7040  1B59  00F4               	movwf	??_send_crct
  7041  1B5A  0874               	movf	??_send_crct,w
  7042  1B5B  0084               	movwf	4
  7043  1B5C  1383               	bcf	3,7	;select IRP bank0
  7044  1B5D  0800               	movf	0,w
  7045  1B5E  1D03               	btfss	3,2
  7046  1B5F  2B61               	goto	u5761
  7047  1B60  2B62               	goto	u5760
  7048  1B61                     u5761:
  7049  1B61  2B46               	goto	l3536
  7050  1B62                     u5760:
  7051  1B62                     l128:
  7052  1B62  0008               	return
  7053  1B63                     __end_of_send_crct:
  7054                           
  7055                           	psect	text21
  7056  1AA7                     __ptext21:	
  7057 ;; *************** function _send_char *****************
  7058 ;; Defined at:
  7059 ;;		line 217 in file "main.c"
  7060 ;; Parameters:    Size  Location     Type
  7061 ;;  dato            1    wreg     unsigned char 
  7062 ;; Auto vars:     Size  Location     Type
  7063 ;;  dato            1    3[COMMON] unsigned char 
  7064 ;; Return value:  Size  Location     Type
  7065 ;;                  1    wreg      void 
  7066 ;; Registers used:
  7067 ;;		wreg
  7068 ;; Tracked objects:
  7069 ;;		On entry : 0/0
  7070 ;;		On exit  : 0/0
  7071 ;;		Unchanged: 0/0
  7072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7073 ;;      Params:         0       0       0       0       0
  7074 ;;      Locals:         1       0       0       0       0
  7075 ;;      Temps:          0       0       0       0       0
  7076 ;;      Totals:         1       0       0       0       0
  7077 ;;Total ram usage:        1 bytes
  7078 ;; Hardware stack levels used:    1
  7079 ;; Hardware stack levels required when called:    2
  7080 ;; This function calls:
  7081 ;;		Nothing
  7082 ;; This function is called by:
  7083 ;;		_send_crct
  7084 ;; This function uses a non-reentrant model
  7085 ;;
  7086                           
  7087                           
  7088                           ;psect for function _send_char
  7089  1AA7                     _send_char:
  7090                           
  7091                           ;incstack = 0
  7092                           ; Regs used in _send_char: [wreg]
  7093                           ;send_char@dato stored from wreg
  7094  1AA7  00F3               	movwf	send_char@dato
  7095  1AA8                     l2798:
  7096  1AA8                     l131:	
  7097                           ;main.c: 218:     while(!TXIF);
  7098                           
  7099  1AA8  1283               	bcf	3,5	;RP0=0, select bank0
  7100  1AA9  1303               	bcf	3,6	;RP1=0, select bank0
  7101  1AAA  1E0C               	btfss	12,4	;volatile
  7102  1AAB  2AAD               	goto	u4161
  7103  1AAC  2AAE               	goto	u4160
  7104  1AAD                     u4161:
  7105  1AAD  2AA8               	goto	l131
  7106  1AAE                     u4160:
  7107  1AAE                     l2800:
  7108                           
  7109                           ;main.c: 219:     TXREG = dato;
  7110  1AAE  0873               	movf	send_char@dato,w
  7111  1AAF  0099               	movwf	25	;volatile
  7112  1AB0                     l134:
  7113  1AB0  0008               	return
  7114  1AB1                     __end_of_send_char:
  7115                           
  7116                           	psect	text22
  7117  1C15                     __ptext22:	
  7118 ;; *************** function _conv *****************
  7119 ;; Defined at:
  7120 ;;		line 222 in file "main.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;  aa              1    wreg     unsigned char 
  7123 ;; Auto vars:     Size  Location     Type
  7124 ;;  aa              1   48[BANK0 ] unsigned char 
  7125 ;;  result          4   44[BANK0 ] unsigned char 
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  4   36[BANK0 ] unsigned char 
  7128 ;; Registers used:
  7129 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7135 ;;      Params:         0       4       0       0       0
  7136 ;;      Locals:         0       5       0       0       0
  7137 ;;      Temps:          0       4       0       0       0
  7138 ;;      Totals:         0      13       0       0       0
  7139 ;;Total ram usage:       13 bytes
  7140 ;; Hardware stack levels used:    1
  7141 ;; Hardware stack levels required when called:    4
  7142 ;; This function calls:
  7143 ;;		___flmul
  7144 ;;		___xxtofl
  7145 ;; This function is called by:
  7146 ;;		_main
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           
  7151                           ;psect for function _conv
  7152  1C15                     _conv:
  7153                           
  7154                           ;incstack = 0
  7155                           ; Regs used in _conv: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7156                           ;conv@aa stored from wreg
  7157  1C15  1283               	bcf	3,5	;RP0=0, select bank0
  7158  1C16  1303               	bcf	3,6	;RP1=0, select bank0
  7159  1C17  00D0               	movwf	conv@aa
  7160  1C18                     l4014:
  7161                           
  7162                           ;main.c: 223:     double result;;main.c: 224:     result = aa*0.0196;
  7163  1C18  303C               	movlw	60
  7164  1C19  00AD               	movwf	___flmul@b+3
  7165  1C1A  30A0               	movlw	160
  7166  1C1B  00AC               	movwf	___flmul@b+2
  7167  1C1C  3090               	movlw	144
  7168  1C1D  00AB               	movwf	___flmul@b+1
  7169  1C1E  302E               	movlw	46
  7170  1C1F  00AA               	movwf	___flmul@b
  7171  1C20  0850               	movf	conv@aa,w
  7172  1C21  00C8               	movwf	??_conv
  7173  1C22  01C9               	clrf	??_conv+1
  7174  1C23  01CA               	clrf	??_conv+2
  7175  1C24  01CB               	clrf	??_conv+3
  7176  1C25  084B               	movf	??_conv+3,w
  7177  1C26  00F6               	movwf	___xxtofl@val+3
  7178  1C27  084A               	movf	??_conv+2,w
  7179  1C28  00F5               	movwf	___xxtofl@val+2
  7180  1C29  0849               	movf	??_conv+1,w
  7181  1C2A  00F4               	movwf	___xxtofl@val+1
  7182  1C2B  0848               	movf	??_conv,w
  7183  1C2C  00F3               	movwf	___xxtofl@val
  7184  1C2D  3001               	movlw	1
  7185  1C2E  160A  118A  203B  160A  158A  	fcall	___xxtofl
  7186  1C33  0876               	movf	?___xxtofl+3,w
  7187  1C34  1283               	bcf	3,5	;RP0=0, select bank0
  7188  1C35  1303               	bcf	3,6	;RP1=0, select bank0
  7189  1C36  00B1               	movwf	___flmul@a+3
  7190  1C37  0875               	movf	?___xxtofl+2,w
  7191  1C38  00B0               	movwf	___flmul@a+2
  7192  1C39  0874               	movf	?___xxtofl+1,w
  7193  1C3A  00AF               	movwf	___flmul@a+1
  7194  1C3B  0873               	movf	?___xxtofl,w
  7195  1C3C  00AE               	movwf	___flmul@a
  7196  1C3D  120A  158A  213C  160A  158A  	fcall	___flmul
  7197  1C42  1283               	bcf	3,5	;RP0=0, select bank0
  7198  1C43  1303               	bcf	3,6	;RP1=0, select bank0
  7199  1C44  082D               	movf	?___flmul+3,w
  7200  1C45  00CF               	movwf	conv@result+3
  7201  1C46  082C               	movf	?___flmul+2,w
  7202  1C47  00CE               	movwf	conv@result+2
  7203  1C48  082B               	movf	?___flmul+1,w
  7204  1C49  00CD               	movwf	conv@result+1
  7205  1C4A  082A               	movf	?___flmul,w
  7206  1C4B  00CC               	movwf	conv@result
  7207  1C4C                     l4016:
  7208                           
  7209                           ;main.c: 225:     return result;
  7210  1C4C  084F               	movf	conv@result+3,w
  7211  1C4D  00C7               	movwf	?_conv+3
  7212  1C4E  084E               	movf	conv@result+2,w
  7213  1C4F  00C6               	movwf	?_conv+2
  7214  1C50  084D               	movf	conv@result+1,w
  7215  1C51  00C5               	movwf	?_conv+1
  7216  1C52  084C               	movf	conv@result,w
  7217  1C53  00C4               	movwf	?_conv
  7218  1C54                     l137:
  7219  1C54  0008               	return
  7220  1C55                     __end_of_conv:
  7221                           
  7222                           	psect	text23
  7223  103B                     __ptext23:	
  7224 ;; *************** function ___xxtofl *****************
  7225 ;; Defined at:
  7226 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;  sign            1    wreg     unsigned char 
  7229 ;;  val             4    3[COMMON] long 
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;  sign            1    4[BANK0 ] unsigned char 
  7232 ;;  arg             4    6[BANK0 ] unsigned long 
  7233 ;;  exp             1    5[BANK0 ] unsigned char 
  7234 ;; Return value:  Size  Location     Type
  7235 ;;                  4    3[COMMON] unsigned char 
  7236 ;; Registers used:
  7237 ;;		wreg, status,2, status,0
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 0/0
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7243 ;;      Params:         4       0       0       0       0
  7244 ;;      Locals:         0       6       0       0       0
  7245 ;;      Temps:          0       4       0       0       0
  7246 ;;      Totals:         4      10       0       0       0
  7247 ;;Total ram usage:       14 bytes
  7248 ;; Hardware stack levels used:    1
  7249 ;; Hardware stack levels required when called:    2
  7250 ;; This function calls:
  7251 ;;		Nothing
  7252 ;; This function is called by:
  7253 ;;		_conv
  7254 ;;		_sprintf
  7255 ;;		_valadc
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           
  7259                           
  7260                           ;psect for function ___xxtofl
  7261  103B                     ___xxtofl:
  7262                           
  7263                           ;incstack = 0
  7264                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7265                           ;___xxtofl@sign stored from wreg
  7266  103B  1283               	bcf	3,5	;RP0=0, select bank0
  7267  103C  1303               	bcf	3,6	;RP1=0, select bank0
  7268  103D  00A4               	movwf	___xxtofl@sign
  7269  103E                     l3938:
  7270  103E  0824               	movf	___xxtofl@sign,w
  7271  103F  1903               	btfsc	3,2
  7272  1040  2842               	goto	u6631
  7273  1041  2843               	goto	u6630
  7274  1042                     u6631:
  7275  1042  2857               	goto	l3944
  7276  1043                     u6630:
  7277  1043                     l3940:
  7278  1043  1FF6               	btfss	___xxtofl@val+3,7
  7279  1044  2846               	goto	u6641
  7280  1045  2847               	goto	u6640
  7281  1046                     u6641:
  7282  1046  2857               	goto	l3944
  7283  1047                     u6640:
  7284  1047                     l3942:
  7285  1047  0973               	comf	___xxtofl@val,w
  7286  1048  00A6               	movwf	___xxtofl@arg
  7287  1049  0974               	comf	___xxtofl@val+1,w
  7288  104A  00A7               	movwf	___xxtofl@arg+1
  7289  104B  0975               	comf	___xxtofl@val+2,w
  7290  104C  00A8               	movwf	___xxtofl@arg+2
  7291  104D  0976               	comf	___xxtofl@val+3,w
  7292  104E  00A9               	movwf	___xxtofl@arg+3
  7293  104F  0AA6               	incf	___xxtofl@arg,f
  7294  1050  1903               	skipnz
  7295  1051  0AA7               	incf	___xxtofl@arg+1,f
  7296  1052  1903               	skipnz
  7297  1053  0AA8               	incf	___xxtofl@arg+2,f
  7298  1054  1903               	skipnz
  7299  1055  0AA9               	incf	___xxtofl@arg+3,f
  7300  1056  285F               	goto	l876
  7301  1057                     l3944:
  7302  1057  0876               	movf	___xxtofl@val+3,w
  7303  1058  00A9               	movwf	___xxtofl@arg+3
  7304  1059  0875               	movf	___xxtofl@val+2,w
  7305  105A  00A8               	movwf	___xxtofl@arg+2
  7306  105B  0874               	movf	___xxtofl@val+1,w
  7307  105C  00A7               	movwf	___xxtofl@arg+1
  7308  105D  0873               	movf	___xxtofl@val,w
  7309  105E  00A6               	movwf	___xxtofl@arg
  7310  105F                     l876:
  7311  105F  0876               	movf	___xxtofl@val+3,w
  7312  1060  0475               	iorwf	___xxtofl@val+2,w
  7313  1061  0474               	iorwf	___xxtofl@val+1,w
  7314  1062  0473               	iorwf	___xxtofl@val,w
  7315  1063  1D03               	skipz
  7316  1064  2866               	goto	u6651
  7317  1065  2867               	goto	u6650
  7318  1066                     u6651:
  7319  1066  2870               	goto	l3950
  7320  1067                     u6650:
  7321  1067                     l3946:
  7322  1067  3000               	movlw	0
  7323  1068  00F6               	movwf	?___xxtofl+3
  7324  1069  3000               	movlw	0
  7325  106A  00F5               	movwf	?___xxtofl+2
  7326  106B  3000               	movlw	0
  7327  106C  00F4               	movwf	?___xxtofl+1
  7328  106D  3000               	movlw	0
  7329  106E  00F3               	movwf	?___xxtofl
  7330  106F  28F6               	goto	l878
  7331  1070                     l3950:
  7332  1070  3096               	movlw	150
  7333  1071  00A0               	movwf	??___xxtofl
  7334  1072  0820               	movf	??___xxtofl,w
  7335  1073  00A5               	movwf	___xxtofl@exp
  7336  1074  2882               	goto	l3954
  7337  1075                     l3952:
  7338  1075  3001               	movlw	1
  7339  1076  00A0               	movwf	??___xxtofl
  7340  1077  0820               	movf	??___xxtofl,w
  7341  1078  07A5               	addwf	___xxtofl@exp,f
  7342  1079  3001               	movlw	1
  7343  107A                     u6665:
  7344  107A  1003               	clrc
  7345  107B  0CA9               	rrf	___xxtofl@arg+3,f
  7346  107C  0CA8               	rrf	___xxtofl@arg+2,f
  7347  107D  0CA7               	rrf	___xxtofl@arg+1,f
  7348  107E  0CA6               	rrf	___xxtofl@arg,f
  7349  107F  3EFF               	addlw	-1
  7350  1080  1D03               	skipz
  7351  1081  287A               	goto	u6665
  7352  1082                     l3954:
  7353  1082  30FE               	movlw	254
  7354  1083  0529               	andwf	___xxtofl@arg+3,w
  7355  1084  1D03               	btfss	3,2
  7356  1085  2887               	goto	u6671
  7357  1086  2888               	goto	u6670
  7358  1087                     u6671:
  7359  1087  2875               	goto	l3952
  7360  1088                     u6670:
  7361  1088  28A4               	goto	l882
  7362  1089                     l3956:
  7363  1089  3001               	movlw	1
  7364  108A  00A0               	movwf	??___xxtofl
  7365  108B  0820               	movf	??___xxtofl,w
  7366  108C  07A5               	addwf	___xxtofl@exp,f
  7367  108D                     l3958:
  7368  108D  3001               	movlw	1
  7369  108E  07A6               	addwf	___xxtofl@arg,f
  7370  108F  3000               	movlw	0
  7371  1090  1803               	skipnc
  7372  1091  3001               	movlw	1
  7373  1092  07A7               	addwf	___xxtofl@arg+1,f
  7374  1093  3000               	movlw	0
  7375  1094  1803               	skipnc
  7376  1095  3001               	movlw	1
  7377  1096  07A8               	addwf	___xxtofl@arg+2,f
  7378  1097  3000               	movlw	0
  7379  1098  1803               	skipnc
  7380  1099  3001               	movlw	1
  7381  109A  07A9               	addwf	___xxtofl@arg+3,f
  7382  109B                     l3960:
  7383  109B  3001               	movlw	1
  7384  109C                     u6685:
  7385  109C  1003               	clrc
  7386  109D  0CA9               	rrf	___xxtofl@arg+3,f
  7387  109E  0CA8               	rrf	___xxtofl@arg+2,f
  7388  109F  0CA7               	rrf	___xxtofl@arg+1,f
  7389  10A0  0CA6               	rrf	___xxtofl@arg,f
  7390  10A1  3EFF               	addlw	-1
  7391  10A2  1D03               	skipz
  7392  10A3  289C               	goto	u6685
  7393  10A4                     l882:
  7394  10A4  30FF               	movlw	255
  7395  10A5  0529               	andwf	___xxtofl@arg+3,w
  7396  10A6  1D03               	btfss	3,2
  7397  10A7  28A9               	goto	u6691
  7398  10A8  28AA               	goto	u6690
  7399  10A9                     u6691:
  7400  10A9  2889               	goto	l3956
  7401  10AA                     u6690:
  7402  10AA  28B6               	goto	l3964
  7403  10AB                     l3962:
  7404  10AB  3001               	movlw	1
  7405  10AC  02A5               	subwf	___xxtofl@exp,f
  7406  10AD  3001               	movlw	1
  7407  10AE  00A0               	movwf	??___xxtofl
  7408  10AF                     u6705:
  7409  10AF  1003               	clrc
  7410  10B0  0DA6               	rlf	___xxtofl@arg,f
  7411  10B1  0DA7               	rlf	___xxtofl@arg+1,f
  7412  10B2  0DA8               	rlf	___xxtofl@arg+2,f
  7413  10B3  0DA9               	rlf	___xxtofl@arg+3,f
  7414  10B4  0BA0               	decfsz	??___xxtofl,f
  7415  10B5  28AF               	goto	u6705
  7416  10B6                     l3964:
  7417  10B6  1BA8               	btfsc	___xxtofl@arg+2,7
  7418  10B7  28B9               	goto	u6711
  7419  10B8  28BA               	goto	u6710
  7420  10B9                     u6711:
  7421  10B9  28C0               	goto	l889
  7422  10BA                     u6710:
  7423  10BA                     l3966:
  7424  10BA  3002               	movlw	2
  7425  10BB  0225               	subwf	___xxtofl@exp,w
  7426  10BC  1803               	skipnc
  7427  10BD  28BF               	goto	u6721
  7428  10BE  28C0               	goto	u6720
  7429  10BF                     u6721:
  7430  10BF  28AB               	goto	l3962
  7431  10C0                     u6720:
  7432  10C0                     l889:
  7433  10C0  1825               	btfsc	___xxtofl@exp,0
  7434  10C1  28C3               	goto	u6731
  7435  10C2  28C4               	goto	u6730
  7436  10C3                     u6731:
  7437  10C3  28CC               	goto	l890
  7438  10C4                     u6730:
  7439  10C4                     l3968:
  7440  10C4  30FF               	movlw	255
  7441  10C5  05A6               	andwf	___xxtofl@arg,f
  7442  10C6  30FF               	movlw	255
  7443  10C7  05A7               	andwf	___xxtofl@arg+1,f
  7444  10C8  307F               	movlw	127
  7445  10C9  05A8               	andwf	___xxtofl@arg+2,f
  7446  10CA  30FF               	movlw	255
  7447  10CB  05A9               	andwf	___xxtofl@arg+3,f
  7448  10CC                     l890:
  7449  10CC  1003               	clrc
  7450  10CD  0CA5               	rrf	___xxtofl@exp,f
  7451  10CE                     l3970:
  7452  10CE  0825               	movf	___xxtofl@exp,w
  7453  10CF  00A0               	movwf	??___xxtofl
  7454  10D0  01A1               	clrf	??___xxtofl+1
  7455  10D1  01A2               	clrf	??___xxtofl+2
  7456  10D2  01A3               	clrf	??___xxtofl+3
  7457  10D3  3018               	movlw	24
  7458  10D4                     u6745:
  7459  10D4  1003               	clrc
  7460  10D5  0DA0               	rlf	??___xxtofl,f
  7461  10D6  0DA1               	rlf	??___xxtofl+1,f
  7462  10D7  0DA2               	rlf	??___xxtofl+2,f
  7463  10D8  0DA3               	rlf	??___xxtofl+3,f
  7464  10D9                     u6740:
  7465  10D9  3EFF               	addlw	-1
  7466  10DA  1D03               	skipz
  7467  10DB  28D4               	goto	u6745
  7468  10DC  0820               	movf	??___xxtofl,w
  7469  10DD  04A6               	iorwf	___xxtofl@arg,f
  7470  10DE  0821               	movf	??___xxtofl+1,w
  7471  10DF  04A7               	iorwf	___xxtofl@arg+1,f
  7472  10E0  0822               	movf	??___xxtofl+2,w
  7473  10E1  04A8               	iorwf	___xxtofl@arg+2,f
  7474  10E2  0823               	movf	??___xxtofl+3,w
  7475  10E3  04A9               	iorwf	___xxtofl@arg+3,f
  7476  10E4                     l3972:
  7477  10E4  0824               	movf	___xxtofl@sign,w
  7478  10E5  1903               	btfsc	3,2
  7479  10E6  28E8               	goto	u6751
  7480  10E7  28E9               	goto	u6750
  7481  10E8                     u6751:
  7482  10E8  28EE               	goto	l3978
  7483  10E9                     u6750:
  7484  10E9                     l3974:
  7485  10E9  1FF6               	btfss	___xxtofl@val+3,7
  7486  10EA  28EC               	goto	u6761
  7487  10EB  28ED               	goto	u6760
  7488  10EC                     u6761:
  7489  10EC  28EE               	goto	l3978
  7490  10ED                     u6760:
  7491  10ED                     l3976:
  7492  10ED  17A9               	bsf	___xxtofl@arg+3,7
  7493  10EE                     l3978:
  7494  10EE  0829               	movf	___xxtofl@arg+3,w
  7495  10EF  00F6               	movwf	?___xxtofl+3
  7496  10F0  0828               	movf	___xxtofl@arg+2,w
  7497  10F1  00F5               	movwf	?___xxtofl+2
  7498  10F2  0827               	movf	___xxtofl@arg+1,w
  7499  10F3  00F4               	movwf	?___xxtofl+1
  7500  10F4  0826               	movf	___xxtofl@arg,w
  7501  10F5  00F3               	movwf	?___xxtofl
  7502  10F6                     l878:
  7503  10F6  0008               	return
  7504  10F7                     __end_of___xxtofl:
  7505                           
  7506                           	psect	text24
  7507  093C                     __ptext24:	
  7508 ;; *************** function ___flmul *****************
  7509 ;; Defined at:
  7510 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;  b               4   10[BANK0 ] unsigned char 
  7513 ;;  a               4   14[BANK0 ] unsigned char 
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;  prod            4   30[BANK0 ] struct .
  7516 ;;  grs             4   24[BANK0 ] unsigned long 
  7517 ;;  temp            2   34[BANK0 ] struct .
  7518 ;;  bexp            1   29[BANK0 ] unsigned char 
  7519 ;;  aexp            1   28[BANK0 ] unsigned char 
  7520 ;;  sign            1   23[BANK0 ] unsigned char 
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  4   10[BANK0 ] unsigned char 
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7530 ;;      Params:         0       8       0       0       0
  7531 ;;      Locals:         0      13       0       0       0
  7532 ;;      Temps:          0       5       0       0       0
  7533 ;;      Totals:         0      26       0       0       0
  7534 ;;Total ram usage:       26 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:    3
  7537 ;; This function calls:
  7538 ;;		__Umul8_16
  7539 ;; This function is called by:
  7540 ;;		_conv
  7541 ;;		_fround
  7542 ;;		_scale
  7543 ;;		_sprintf
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           
  7548                           ;psect for function ___flmul
  7549  093C                     ___flmul:
  7550  093C                     l2658:	
  7551                           ;incstack = 0
  7552                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7553                           
  7554  093C  1283               	bcf	3,5	;RP0=0, select bank0
  7555  093D  1303               	bcf	3,6	;RP1=0, select bank0
  7556  093E  082D               	movf	___flmul@b+3,w
  7557  093F  3980               	andlw	128
  7558  0940  00B2               	movwf	??___flmul
  7559  0941  0832               	movf	??___flmul,w
  7560  0942  00B7               	movwf	___flmul@sign
  7561  0943                     l2660:
  7562  0943  082D               	movf	___flmul@b+3,w
  7563  0944  00B2               	movwf	??___flmul
  7564  0945  0732               	addwf	??___flmul,w
  7565  0946  00B3               	movwf	??___flmul+1
  7566  0947  0833               	movf	??___flmul+1,w
  7567  0948  00BD               	movwf	___flmul@bexp
  7568  0949                     l2662:
  7569  0949  1FAC               	btfss	___flmul@b+2,7
  7570  094A  294C               	goto	u3791
  7571  094B  294D               	goto	u3790
  7572  094C                     u3791:
  7573  094C  294E               	goto	l2666
  7574  094D                     u3790:
  7575  094D                     l2664:
  7576  094D  143D               	bsf	___flmul@bexp,0
  7577  094E                     l2666:
  7578  094E  083D               	movf	___flmul@bexp,w
  7579  094F  1903               	btfsc	3,2
  7580  0950  2952               	goto	u3801
  7581  0951  2953               	goto	u3800
  7582  0952                     u3801:
  7583  0952  2962               	goto	l2674
  7584  0953                     u3800:
  7585  0953                     l2668:
  7586  0953  0A3D               	incf	___flmul@bexp,w
  7587  0954  1D03               	btfss	3,2
  7588  0955  2957               	goto	u3811
  7589  0956  2958               	goto	u3810
  7590  0957                     u3811:
  7591  0957  2960               	goto	l2672
  7592  0958                     u3810:
  7593  0958                     l2670:
  7594  0958  3000               	movlw	0
  7595  0959  00AD               	movwf	___flmul@b+3
  7596  095A  3000               	movlw	0
  7597  095B  00AC               	movwf	___flmul@b+2
  7598  095C  3000               	movlw	0
  7599  095D  00AB               	movwf	___flmul@b+1
  7600  095E  3000               	movlw	0
  7601  095F  00AA               	movwf	___flmul@b
  7602  0960                     l2672:
  7603  0960  17AC               	bsf	___flmul@b+2,7
  7604  0961  296A               	goto	l2676
  7605  0962                     l2674:
  7606  0962  3000               	movlw	0
  7607  0963  00AD               	movwf	___flmul@b+3
  7608  0964  3000               	movlw	0
  7609  0965  00AC               	movwf	___flmul@b+2
  7610  0966  3000               	movlw	0
  7611  0967  00AB               	movwf	___flmul@b+1
  7612  0968  3000               	movlw	0
  7613  0969  00AA               	movwf	___flmul@b
  7614  096A                     l2676:
  7615  096A  0831               	movf	___flmul@a+3,w
  7616  096B  3980               	andlw	128
  7617  096C  00B2               	movwf	??___flmul
  7618  096D  0832               	movf	??___flmul,w
  7619  096E  06B7               	xorwf	___flmul@sign,f
  7620  096F                     l2678:
  7621  096F  0831               	movf	___flmul@a+3,w
  7622  0970  00B2               	movwf	??___flmul
  7623  0971  0732               	addwf	??___flmul,w
  7624  0972  00B3               	movwf	??___flmul+1
  7625  0973  0833               	movf	??___flmul+1,w
  7626  0974  00BC               	movwf	___flmul@aexp
  7627  0975                     l2680:
  7628  0975  1FB0               	btfss	___flmul@a+2,7
  7629  0976  2978               	goto	u3821
  7630  0977  2979               	goto	u3820
  7631  0978                     u3821:
  7632  0978  297A               	goto	l2684
  7633  0979                     u3820:
  7634  0979                     l2682:
  7635  0979  143C               	bsf	___flmul@aexp,0
  7636  097A                     l2684:
  7637  097A  083C               	movf	___flmul@aexp,w
  7638  097B  1903               	btfsc	3,2
  7639  097C  297E               	goto	u3831
  7640  097D  297F               	goto	u3830
  7641  097E                     u3831:
  7642  097E  298E               	goto	l2692
  7643  097F                     u3830:
  7644  097F                     l2686:
  7645  097F  0A3C               	incf	___flmul@aexp,w
  7646  0980  1D03               	btfss	3,2
  7647  0981  2983               	goto	u3841
  7648  0982  2984               	goto	u3840
  7649  0983                     u3841:
  7650  0983  298C               	goto	l2690
  7651  0984                     u3840:
  7652  0984                     l2688:
  7653  0984  3000               	movlw	0
  7654  0985  00B1               	movwf	___flmul@a+3
  7655  0986  3000               	movlw	0
  7656  0987  00B0               	movwf	___flmul@a+2
  7657  0988  3000               	movlw	0
  7658  0989  00AF               	movwf	___flmul@a+1
  7659  098A  3000               	movlw	0
  7660  098B  00AE               	movwf	___flmul@a
  7661  098C                     l2690:
  7662  098C  17B0               	bsf	___flmul@a+2,7
  7663  098D  2996               	goto	l2694
  7664  098E                     l2692:
  7665  098E  3000               	movlw	0
  7666  098F  00B1               	movwf	___flmul@a+3
  7667  0990  3000               	movlw	0
  7668  0991  00B0               	movwf	___flmul@a+2
  7669  0992  3000               	movlw	0
  7670  0993  00AF               	movwf	___flmul@a+1
  7671  0994  3000               	movlw	0
  7672  0995  00AE               	movwf	___flmul@a
  7673  0996                     l2694:
  7674  0996  083C               	movf	___flmul@aexp,w
  7675  0997  1903               	btfsc	3,2
  7676  0998  299A               	goto	u3851
  7677  0999  299B               	goto	u3850
  7678  099A                     u3851:
  7679  099A  29A0               	goto	l2698
  7680  099B                     u3850:
  7681  099B                     l2696:
  7682  099B  083D               	movf	___flmul@bexp,w
  7683  099C  1D03               	btfss	3,2
  7684  099D  299F               	goto	u3861
  7685  099E  29A0               	goto	u3860
  7686  099F                     u3861:
  7687  099F  29A9               	goto	l2702
  7688  09A0                     u3860:
  7689  09A0                     l2698:
  7690  09A0  3000               	movlw	0
  7691  09A1  00AD               	movwf	?___flmul+3
  7692  09A2  3000               	movlw	0
  7693  09A3  00AC               	movwf	?___flmul+2
  7694  09A4  3000               	movlw	0
  7695  09A5  00AB               	movwf	?___flmul+1
  7696  09A6  3000               	movlw	0
  7697  09A7  00AA               	movwf	?___flmul
  7698  09A8  2C9C               	goto	l832
  7699  09A9                     l2702:
  7700  09A9  082A               	movf	___flmul@b,w
  7701  09AA  00B2               	movwf	??___flmul
  7702  09AB  0832               	movf	??___flmul,w
  7703  09AC  00F3               	movwf	__Umul8_16@multiplicand
  7704  09AD  0830               	movf	___flmul@a+2,w
  7705  09AE  160A  158A  23AE  120A  158A  	fcall	__Umul8_16
  7706  09B3  0874               	movf	?__Umul8_16+1,w
  7707  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  7708  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  7709  09B6  00C3               	movwf	___flmul@temp+1
  7710  09B7  0873               	movf	?__Umul8_16,w
  7711  09B8  00C2               	movwf	___flmul@temp
  7712  09B9                     l2704:
  7713  09B9  0842               	movf	___flmul@temp,w
  7714  09BA  00B2               	movwf	??___flmul
  7715  09BB  01B3               	clrf	??___flmul+1
  7716  09BC  01B4               	clrf	??___flmul+2
  7717  09BD  01B5               	clrf	??___flmul+3
  7718  09BE  0835               	movf	??___flmul+3,w
  7719  09BF  00BB               	movwf	___flmul@grs+3
  7720  09C0  0834               	movf	??___flmul+2,w
  7721  09C1  00BA               	movwf	___flmul@grs+2
  7722  09C2  0833               	movf	??___flmul+1,w
  7723  09C3  00B9               	movwf	___flmul@grs+1
  7724  09C4  0832               	movf	??___flmul,w
  7725  09C5  00B8               	movwf	___flmul@grs
  7726  09C6                     l2706:
  7727  09C6  0843               	movf	___flmul@temp+1,w
  7728  09C7  00B2               	movwf	??___flmul
  7729  09C8  01B3               	clrf	??___flmul+1
  7730  09C9  01B4               	clrf	??___flmul+2
  7731  09CA  01B5               	clrf	??___flmul+3
  7732  09CB  0835               	movf	??___flmul+3,w
  7733  09CC  00C1               	movwf	___flmul@prod+3
  7734  09CD  0834               	movf	??___flmul+2,w
  7735  09CE  00C0               	movwf	___flmul@prod+2
  7736  09CF  0833               	movf	??___flmul+1,w
  7737  09D0  00BF               	movwf	___flmul@prod+1
  7738  09D1  0832               	movf	??___flmul,w
  7739  09D2  00BE               	movwf	___flmul@prod
  7740  09D3  082B               	movf	___flmul@b+1,w
  7741  09D4  00B2               	movwf	??___flmul
  7742  09D5  0832               	movf	??___flmul,w
  7743  09D6  00F3               	movwf	__Umul8_16@multiplicand
  7744  09D7  082F               	movf	___flmul@a+1,w
  7745  09D8  160A  158A  23AE  120A  158A  	fcall	__Umul8_16
  7746  09DD  0874               	movf	?__Umul8_16+1,w
  7747  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  7748  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  7749  09E0  00C3               	movwf	___flmul@temp+1
  7750  09E1  0873               	movf	?__Umul8_16,w
  7751  09E2  00C2               	movwf	___flmul@temp
  7752  09E3                     l2708:
  7753  09E3  0842               	movf	___flmul@temp,w
  7754  09E4  00B2               	movwf	??___flmul
  7755  09E5  01B3               	clrf	??___flmul+1
  7756  09E6  01B4               	clrf	??___flmul+2
  7757  09E7  01B5               	clrf	??___flmul+3
  7758  09E8  0832               	movf	??___flmul,w
  7759  09E9  07B8               	addwf	___flmul@grs,f
  7760  09EA  0833               	movf	??___flmul+1,w
  7761  09EB  1103               	clrz
  7762  09EC  1803               	skipnc
  7763  09ED  3E01               	addlw	1
  7764  09EE  1903               	skipnz
  7765  09EF  29F1               	goto	u3871
  7766  09F0  07B9               	addwf	___flmul@grs+1,f
  7767  09F1                     u3871:
  7768  09F1  0834               	movf	??___flmul+2,w
  7769  09F2  1103               	clrz
  7770  09F3  1803               	skipnc
  7771  09F4  3E01               	addlw	1
  7772  09F5  1903               	skipnz
  7773  09F6  29F8               	goto	u3872
  7774  09F7  07BA               	addwf	___flmul@grs+2,f
  7775  09F8                     u3872:
  7776  09F8  0835               	movf	??___flmul+3,w
  7777  09F9  1103               	clrz
  7778  09FA  1803               	skipnc
  7779  09FB  3E01               	addlw	1
  7780  09FC  1903               	skipnz
  7781  09FD  29FF               	goto	u3873
  7782  09FE  07BB               	addwf	___flmul@grs+3,f
  7783  09FF                     u3873:
  7784  09FF                     l2710:
  7785  09FF  0843               	movf	___flmul@temp+1,w
  7786  0A00  00B2               	movwf	??___flmul
  7787  0A01  01B3               	clrf	??___flmul+1
  7788  0A02  01B4               	clrf	??___flmul+2
  7789  0A03  01B5               	clrf	??___flmul+3
  7790  0A04  0832               	movf	??___flmul,w
  7791  0A05  07BE               	addwf	___flmul@prod,f
  7792  0A06  0833               	movf	??___flmul+1,w
  7793  0A07  1103               	clrz
  7794  0A08  1803               	skipnc
  7795  0A09  3E01               	addlw	1
  7796  0A0A  1903               	skipnz
  7797  0A0B  2A0D               	goto	u3881
  7798  0A0C  07BF               	addwf	___flmul@prod+1,f
  7799  0A0D                     u3881:
  7800  0A0D  0834               	movf	??___flmul+2,w
  7801  0A0E  1103               	clrz
  7802  0A0F  1803               	skipnc
  7803  0A10  3E01               	addlw	1
  7804  0A11  1903               	skipnz
  7805  0A12  2A14               	goto	u3882
  7806  0A13  07C0               	addwf	___flmul@prod+2,f
  7807  0A14                     u3882:
  7808  0A14  0835               	movf	??___flmul+3,w
  7809  0A15  1103               	clrz
  7810  0A16  1803               	skipnc
  7811  0A17  3E01               	addlw	1
  7812  0A18  1903               	skipnz
  7813  0A19  2A1B               	goto	u3883
  7814  0A1A  07C1               	addwf	___flmul@prod+3,f
  7815  0A1B                     u3883:
  7816  0A1B  082C               	movf	___flmul@b+2,w
  7817  0A1C  00B2               	movwf	??___flmul
  7818  0A1D  0832               	movf	??___flmul,w
  7819  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  7820  0A1F  082E               	movf	___flmul@a,w
  7821  0A20  160A  158A  23AE  120A  158A  	fcall	__Umul8_16
  7822  0A25  0874               	movf	?__Umul8_16+1,w
  7823  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  7824  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  7825  0A28  00C3               	movwf	___flmul@temp+1
  7826  0A29  0873               	movf	?__Umul8_16,w
  7827  0A2A  00C2               	movwf	___flmul@temp
  7828  0A2B                     l2712:
  7829  0A2B  0842               	movf	___flmul@temp,w
  7830  0A2C  00B2               	movwf	??___flmul
  7831  0A2D  01B3               	clrf	??___flmul+1
  7832  0A2E  01B4               	clrf	??___flmul+2
  7833  0A2F  01B5               	clrf	??___flmul+3
  7834  0A30  0832               	movf	??___flmul,w
  7835  0A31  07B8               	addwf	___flmul@grs,f
  7836  0A32  0833               	movf	??___flmul+1,w
  7837  0A33  1103               	clrz
  7838  0A34  1803               	skipnc
  7839  0A35  3E01               	addlw	1
  7840  0A36  1903               	skipnz
  7841  0A37  2A39               	goto	u3891
  7842  0A38  07B9               	addwf	___flmul@grs+1,f
  7843  0A39                     u3891:
  7844  0A39  0834               	movf	??___flmul+2,w
  7845  0A3A  1103               	clrz
  7846  0A3B  1803               	skipnc
  7847  0A3C  3E01               	addlw	1
  7848  0A3D  1903               	skipnz
  7849  0A3E  2A40               	goto	u3892
  7850  0A3F  07BA               	addwf	___flmul@grs+2,f
  7851  0A40                     u3892:
  7852  0A40  0835               	movf	??___flmul+3,w
  7853  0A41  1103               	clrz
  7854  0A42  1803               	skipnc
  7855  0A43  3E01               	addlw	1
  7856  0A44  1903               	skipnz
  7857  0A45  2A47               	goto	u3893
  7858  0A46  07BB               	addwf	___flmul@grs+3,f
  7859  0A47                     u3893:
  7860  0A47                     l2714:
  7861  0A47  0843               	movf	___flmul@temp+1,w
  7862  0A48  00B2               	movwf	??___flmul
  7863  0A49  01B3               	clrf	??___flmul+1
  7864  0A4A  01B4               	clrf	??___flmul+2
  7865  0A4B  01B5               	clrf	??___flmul+3
  7866  0A4C  0832               	movf	??___flmul,w
  7867  0A4D  07BE               	addwf	___flmul@prod,f
  7868  0A4E  0833               	movf	??___flmul+1,w
  7869  0A4F  1103               	clrz
  7870  0A50  1803               	skipnc
  7871  0A51  3E01               	addlw	1
  7872  0A52  1903               	skipnz
  7873  0A53  2A55               	goto	u3901
  7874  0A54  07BF               	addwf	___flmul@prod+1,f
  7875  0A55                     u3901:
  7876  0A55  0834               	movf	??___flmul+2,w
  7877  0A56  1103               	clrz
  7878  0A57  1803               	skipnc
  7879  0A58  3E01               	addlw	1
  7880  0A59  1903               	skipnz
  7881  0A5A  2A5C               	goto	u3902
  7882  0A5B  07C0               	addwf	___flmul@prod+2,f
  7883  0A5C                     u3902:
  7884  0A5C  0835               	movf	??___flmul+3,w
  7885  0A5D  1103               	clrz
  7886  0A5E  1803               	skipnc
  7887  0A5F  3E01               	addlw	1
  7888  0A60  1903               	skipnz
  7889  0A61  2A63               	goto	u3903
  7890  0A62  07C1               	addwf	___flmul@prod+3,f
  7891  0A63                     u3903:
  7892  0A63                     l2716:
  7893  0A63  3008               	movlw	8
  7894  0A64  00B2               	movwf	??___flmul
  7895  0A65                     u3915:
  7896  0A65  1003               	clrc
  7897  0A66  0DB8               	rlf	___flmul@grs,f
  7898  0A67  0DB9               	rlf	___flmul@grs+1,f
  7899  0A68  0DBA               	rlf	___flmul@grs+2,f
  7900  0A69  0DBB               	rlf	___flmul@grs+3,f
  7901  0A6A  0BB2               	decfsz	??___flmul,f
  7902  0A6B  2A65               	goto	u3915
  7903  0A6C                     l2718:
  7904  0A6C  082B               	movf	___flmul@b+1,w
  7905  0A6D  00B2               	movwf	??___flmul
  7906  0A6E  0832               	movf	??___flmul,w
  7907  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  7908  0A70  082E               	movf	___flmul@a,w
  7909  0A71  160A  158A  23AE  120A  158A  	fcall	__Umul8_16
  7910  0A76  0874               	movf	?__Umul8_16+1,w
  7911  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  7912  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  7913  0A79  00C3               	movwf	___flmul@temp+1
  7914  0A7A  0873               	movf	?__Umul8_16,w
  7915  0A7B  00C2               	movwf	___flmul@temp
  7916  0A7C                     l2720:
  7917  0A7C  0842               	movf	___flmul@temp,w
  7918  0A7D  00B2               	movwf	??___flmul
  7919  0A7E  0843               	movf	___flmul@temp+1,w
  7920  0A7F  00B3               	movwf	??___flmul+1
  7921  0A80  01B4               	clrf	??___flmul+2
  7922  0A81  01B5               	clrf	??___flmul+3
  7923  0A82  0832               	movf	??___flmul,w
  7924  0A83  07B8               	addwf	___flmul@grs,f
  7925  0A84  0833               	movf	??___flmul+1,w
  7926  0A85  1103               	clrz
  7927  0A86  1803               	skipnc
  7928  0A87  3E01               	addlw	1
  7929  0A88  1903               	skipnz
  7930  0A89  2A8B               	goto	u3921
  7931  0A8A  07B9               	addwf	___flmul@grs+1,f
  7932  0A8B                     u3921:
  7933  0A8B  0834               	movf	??___flmul+2,w
  7934  0A8C  1103               	clrz
  7935  0A8D  1803               	skipnc
  7936  0A8E  3E01               	addlw	1
  7937  0A8F  1903               	skipnz
  7938  0A90  2A92               	goto	u3922
  7939  0A91  07BA               	addwf	___flmul@grs+2,f
  7940  0A92                     u3922:
  7941  0A92  0835               	movf	??___flmul+3,w
  7942  0A93  1103               	clrz
  7943  0A94  1803               	skipnc
  7944  0A95  3E01               	addlw	1
  7945  0A96  1903               	skipnz
  7946  0A97  2A99               	goto	u3923
  7947  0A98  07BB               	addwf	___flmul@grs+3,f
  7948  0A99                     u3923:
  7949  0A99                     l2722:
  7950  0A99  082A               	movf	___flmul@b,w
  7951  0A9A  00B2               	movwf	??___flmul
  7952  0A9B  0832               	movf	??___flmul,w
  7953  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  7954  0A9D  082F               	movf	___flmul@a+1,w
  7955  0A9E  160A  158A  23AE  120A  158A  	fcall	__Umul8_16
  7956  0AA3  0874               	movf	?__Umul8_16+1,w
  7957  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  7958  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  7959  0AA6  00C3               	movwf	___flmul@temp+1
  7960  0AA7  0873               	movf	?__Umul8_16,w
  7961  0AA8  00C2               	movwf	___flmul@temp
  7962  0AA9                     l2724:
  7963  0AA9  0842               	movf	___flmul@temp,w
  7964  0AAA  00B2               	movwf	??___flmul
  7965  0AAB  0843               	movf	___flmul@temp+1,w
  7966  0AAC  00B3               	movwf	??___flmul+1
  7967  0AAD  01B4               	clrf	??___flmul+2
  7968  0AAE  01B5               	clrf	??___flmul+3
  7969  0AAF  0832               	movf	??___flmul,w
  7970  0AB0  07B8               	addwf	___flmul@grs,f
  7971  0AB1  0833               	movf	??___flmul+1,w
  7972  0AB2  1103               	clrz
  7973  0AB3  1803               	skipnc
  7974  0AB4  3E01               	addlw	1
  7975  0AB5  1903               	skipnz
  7976  0AB6  2AB8               	goto	u3931
  7977  0AB7  07B9               	addwf	___flmul@grs+1,f
  7978  0AB8                     u3931:
  7979  0AB8  0834               	movf	??___flmul+2,w
  7980  0AB9  1103               	clrz
  7981  0ABA  1803               	skipnc
  7982  0ABB  3E01               	addlw	1
  7983  0ABC  1903               	skipnz
  7984  0ABD  2ABF               	goto	u3932
  7985  0ABE  07BA               	addwf	___flmul@grs+2,f
  7986  0ABF                     u3932:
  7987  0ABF  0835               	movf	??___flmul+3,w
  7988  0AC0  1103               	clrz
  7989  0AC1  1803               	skipnc
  7990  0AC2  3E01               	addlw	1
  7991  0AC3  1903               	skipnz
  7992  0AC4  2AC6               	goto	u3933
  7993  0AC5  07BB               	addwf	___flmul@grs+3,f
  7994  0AC6                     u3933:
  7995  0AC6                     l2726:
  7996  0AC6  3008               	movlw	8
  7997  0AC7  00B2               	movwf	??___flmul
  7998  0AC8                     u3945:
  7999  0AC8  1003               	clrc
  8000  0AC9  0DB8               	rlf	___flmul@grs,f
  8001  0ACA  0DB9               	rlf	___flmul@grs+1,f
  8002  0ACB  0DBA               	rlf	___flmul@grs+2,f
  8003  0ACC  0DBB               	rlf	___flmul@grs+3,f
  8004  0ACD  0BB2               	decfsz	??___flmul,f
  8005  0ACE  2AC8               	goto	u3945
  8006  0ACF  082A               	movf	___flmul@b,w
  8007  0AD0  00B2               	movwf	??___flmul
  8008  0AD1  0832               	movf	??___flmul,w
  8009  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  8010  0AD3  082E               	movf	___flmul@a,w
  8011  0AD4  160A  158A  23AE  120A  158A  	fcall	__Umul8_16
  8012  0AD9  0874               	movf	?__Umul8_16+1,w
  8013  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  8014  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  8015  0ADC  00C3               	movwf	___flmul@temp+1
  8016  0ADD  0873               	movf	?__Umul8_16,w
  8017  0ADE  00C2               	movwf	___flmul@temp
  8018  0ADF                     l2728:
  8019  0ADF  0842               	movf	___flmul@temp,w
  8020  0AE0  00B2               	movwf	??___flmul
  8021  0AE1  0843               	movf	___flmul@temp+1,w
  8022  0AE2  00B3               	movwf	??___flmul+1
  8023  0AE3  01B4               	clrf	??___flmul+2
  8024  0AE4  01B5               	clrf	??___flmul+3
  8025  0AE5  0832               	movf	??___flmul,w
  8026  0AE6  07B8               	addwf	___flmul@grs,f
  8027  0AE7  0833               	movf	??___flmul+1,w
  8028  0AE8  1103               	clrz
  8029  0AE9  1803               	skipnc
  8030  0AEA  3E01               	addlw	1
  8031  0AEB  1903               	skipnz
  8032  0AEC  2AEE               	goto	u3951
  8033  0AED  07B9               	addwf	___flmul@grs+1,f
  8034  0AEE                     u3951:
  8035  0AEE  0834               	movf	??___flmul+2,w
  8036  0AEF  1103               	clrz
  8037  0AF0  1803               	skipnc
  8038  0AF1  3E01               	addlw	1
  8039  0AF2  1903               	skipnz
  8040  0AF3  2AF5               	goto	u3952
  8041  0AF4  07BA               	addwf	___flmul@grs+2,f
  8042  0AF5                     u3952:
  8043  0AF5  0835               	movf	??___flmul+3,w
  8044  0AF6  1103               	clrz
  8045  0AF7  1803               	skipnc
  8046  0AF8  3E01               	addlw	1
  8047  0AF9  1903               	skipnz
  8048  0AFA  2AFC               	goto	u3953
  8049  0AFB  07BB               	addwf	___flmul@grs+3,f
  8050  0AFC                     u3953:
  8051  0AFC                     l2730:
  8052  0AFC  082B               	movf	___flmul@b+1,w
  8053  0AFD  00B2               	movwf	??___flmul
  8054  0AFE  0832               	movf	??___flmul,w
  8055  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  8056  0B00  0830               	movf	___flmul@a+2,w
  8057  0B01  160A  158A  23AE  120A  158A  	fcall	__Umul8_16
  8058  0B06  0874               	movf	?__Umul8_16+1,w
  8059  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  8060  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  8061  0B09  00C3               	movwf	___flmul@temp+1
  8062  0B0A  0873               	movf	?__Umul8_16,w
  8063  0B0B  00C2               	movwf	___flmul@temp
  8064  0B0C  0842               	movf	___flmul@temp,w
  8065  0B0D  00B2               	movwf	??___flmul
  8066  0B0E  0843               	movf	___flmul@temp+1,w
  8067  0B0F  00B3               	movwf	??___flmul+1
  8068  0B10  01B4               	clrf	??___flmul+2
  8069  0B11  01B5               	clrf	??___flmul+3
  8070  0B12  0832               	movf	??___flmul,w
  8071  0B13  07BE               	addwf	___flmul@prod,f
  8072  0B14  0833               	movf	??___flmul+1,w
  8073  0B15  1103               	clrz
  8074  0B16  1803               	skipnc
  8075  0B17  3E01               	addlw	1
  8076  0B18  1903               	skipnz
  8077  0B19  2B1B               	goto	u3961
  8078  0B1A  07BF               	addwf	___flmul@prod+1,f
  8079  0B1B                     u3961:
  8080  0B1B  0834               	movf	??___flmul+2,w
  8081  0B1C  1103               	clrz
  8082  0B1D  1803               	skipnc
  8083  0B1E  3E01               	addlw	1
  8084  0B1F  1903               	skipnz
  8085  0B20  2B22               	goto	u3962
  8086  0B21  07C0               	addwf	___flmul@prod+2,f
  8087  0B22                     u3962:
  8088  0B22  0835               	movf	??___flmul+3,w
  8089  0B23  1103               	clrz
  8090  0B24  1803               	skipnc
  8091  0B25  3E01               	addlw	1
  8092  0B26  1903               	skipnz
  8093  0B27  2B29               	goto	u3963
  8094  0B28  07C1               	addwf	___flmul@prod+3,f
  8095  0B29                     u3963:
  8096  0B29                     l2732:
  8097  0B29  082C               	movf	___flmul@b+2,w
  8098  0B2A  00B2               	movwf	??___flmul
  8099  0B2B  0832               	movf	??___flmul,w
  8100  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  8101  0B2D  082F               	movf	___flmul@a+1,w
  8102  0B2E  160A  158A  23AE  120A  158A  	fcall	__Umul8_16
  8103  0B33  0874               	movf	?__Umul8_16+1,w
  8104  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  8105  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  8106  0B36  00C3               	movwf	___flmul@temp+1
  8107  0B37  0873               	movf	?__Umul8_16,w
  8108  0B38  00C2               	movwf	___flmul@temp
  8109  0B39                     l2734:
  8110  0B39  0842               	movf	___flmul@temp,w
  8111  0B3A  00B2               	movwf	??___flmul
  8112  0B3B  0843               	movf	___flmul@temp+1,w
  8113  0B3C  00B3               	movwf	??___flmul+1
  8114  0B3D  01B4               	clrf	??___flmul+2
  8115  0B3E  01B5               	clrf	??___flmul+3
  8116  0B3F  0832               	movf	??___flmul,w
  8117  0B40  07BE               	addwf	___flmul@prod,f
  8118  0B41  0833               	movf	??___flmul+1,w
  8119  0B42  1103               	clrz
  8120  0B43  1803               	skipnc
  8121  0B44  3E01               	addlw	1
  8122  0B45  1903               	skipnz
  8123  0B46  2B48               	goto	u3971
  8124  0B47  07BF               	addwf	___flmul@prod+1,f
  8125  0B48                     u3971:
  8126  0B48  0834               	movf	??___flmul+2,w
  8127  0B49  1103               	clrz
  8128  0B4A  1803               	skipnc
  8129  0B4B  3E01               	addlw	1
  8130  0B4C  1903               	skipnz
  8131  0B4D  2B4F               	goto	u3972
  8132  0B4E  07C0               	addwf	___flmul@prod+2,f
  8133  0B4F                     u3972:
  8134  0B4F  0835               	movf	??___flmul+3,w
  8135  0B50  1103               	clrz
  8136  0B51  1803               	skipnc
  8137  0B52  3E01               	addlw	1
  8138  0B53  1903               	skipnz
  8139  0B54  2B56               	goto	u3973
  8140  0B55  07C1               	addwf	___flmul@prod+3,f
  8141  0B56                     u3973:
  8142  0B56  082C               	movf	___flmul@b+2,w
  8143  0B57  00B2               	movwf	??___flmul
  8144  0B58  0832               	movf	??___flmul,w
  8145  0B59  00F3               	movwf	__Umul8_16@multiplicand
  8146  0B5A  0830               	movf	___flmul@a+2,w
  8147  0B5B  160A  158A  23AE  120A  158A  	fcall	__Umul8_16
  8148  0B60  0874               	movf	?__Umul8_16+1,w
  8149  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8150  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8151  0B63  00C3               	movwf	___flmul@temp+1
  8152  0B64  0873               	movf	?__Umul8_16,w
  8153  0B65  00C2               	movwf	___flmul@temp
  8154  0B66                     l2736:
  8155  0B66  0842               	movf	___flmul@temp,w
  8156  0B67  00B2               	movwf	??___flmul
  8157  0B68  0843               	movf	___flmul@temp+1,w
  8158  0B69  00B3               	movwf	??___flmul+1
  8159  0B6A  01B4               	clrf	??___flmul+2
  8160  0B6B  01B5               	clrf	??___flmul+3
  8161  0B6C  3008               	movlw	8
  8162  0B6D                     u3985:
  8163  0B6D  1003               	clrc
  8164  0B6E  0DB2               	rlf	??___flmul,f
  8165  0B6F  0DB3               	rlf	??___flmul+1,f
  8166  0B70  0DB4               	rlf	??___flmul+2,f
  8167  0B71  0DB5               	rlf	??___flmul+3,f
  8168  0B72                     u3980:
  8169  0B72  3EFF               	addlw	-1
  8170  0B73  1D03               	skipz
  8171  0B74  2B6D               	goto	u3985
  8172  0B75  0832               	movf	??___flmul,w
  8173  0B76  07BE               	addwf	___flmul@prod,f
  8174  0B77  0833               	movf	??___flmul+1,w
  8175  0B78  1103               	clrz
  8176  0B79  1803               	skipnc
  8177  0B7A  3E01               	addlw	1
  8178  0B7B  1903               	skipnz
  8179  0B7C  2B7E               	goto	u3991
  8180  0B7D  07BF               	addwf	___flmul@prod+1,f
  8181  0B7E                     u3991:
  8182  0B7E  0834               	movf	??___flmul+2,w
  8183  0B7F  1103               	clrz
  8184  0B80  1803               	skipnc
  8185  0B81  3E01               	addlw	1
  8186  0B82  1903               	skipnz
  8187  0B83  2B85               	goto	u3992
  8188  0B84  07C0               	addwf	___flmul@prod+2,f
  8189  0B85                     u3992:
  8190  0B85  0835               	movf	??___flmul+3,w
  8191  0B86  1103               	clrz
  8192  0B87  1803               	skipnc
  8193  0B88  3E01               	addlw	1
  8194  0B89  1903               	skipnz
  8195  0B8A  2B8C               	goto	u3993
  8196  0B8B  07C1               	addwf	___flmul@prod+3,f
  8197  0B8C                     u3993:
  8198  0B8C                     l2738:
  8199  0B8C  0838               	movf	___flmul@grs,w
  8200  0B8D  00B2               	movwf	??___flmul
  8201  0B8E  0839               	movf	___flmul@grs+1,w
  8202  0B8F  00B3               	movwf	??___flmul+1
  8203  0B90  083A               	movf	___flmul@grs+2,w
  8204  0B91  00B4               	movwf	??___flmul+2
  8205  0B92  083B               	movf	___flmul@grs+3,w
  8206  0B93  00B5               	movwf	??___flmul+3
  8207  0B94  3018               	movlw	24
  8208  0B95                     u4005:
  8209  0B95  1003               	clrc
  8210  0B96  0CB5               	rrf	??___flmul+3,f
  8211  0B97  0CB4               	rrf	??___flmul+2,f
  8212  0B98  0CB3               	rrf	??___flmul+1,f
  8213  0B99  0CB2               	rrf	??___flmul,f
  8214  0B9A                     u4000:
  8215  0B9A  3EFF               	addlw	-1
  8216  0B9B  1D03               	skipz
  8217  0B9C  2B95               	goto	u4005
  8218  0B9D  0832               	movf	??___flmul,w
  8219  0B9E  07BE               	addwf	___flmul@prod,f
  8220  0B9F  0833               	movf	??___flmul+1,w
  8221  0BA0  1103               	clrz
  8222  0BA1  1803               	skipnc
  8223  0BA2  3E01               	addlw	1
  8224  0BA3  1903               	skipnz
  8225  0BA4  2BA6               	goto	u4011
  8226  0BA5  07BF               	addwf	___flmul@prod+1,f
  8227  0BA6                     u4011:
  8228  0BA6  0834               	movf	??___flmul+2,w
  8229  0BA7  1103               	clrz
  8230  0BA8  1803               	skipnc
  8231  0BA9  3E01               	addlw	1
  8232  0BAA  1903               	skipnz
  8233  0BAB  2BAD               	goto	u4012
  8234  0BAC  07C0               	addwf	___flmul@prod+2,f
  8235  0BAD                     u4012:
  8236  0BAD  0835               	movf	??___flmul+3,w
  8237  0BAE  1103               	clrz
  8238  0BAF  1803               	skipnc
  8239  0BB0  3E01               	addlw	1
  8240  0BB1  1903               	skipnz
  8241  0BB2  2BB4               	goto	u4013
  8242  0BB3  07C1               	addwf	___flmul@prod+3,f
  8243  0BB4                     u4013:
  8244  0BB4                     l2740:
  8245  0BB4  3008               	movlw	8
  8246  0BB5  00B2               	movwf	??___flmul
  8247  0BB6                     u4025:
  8248  0BB6  1003               	clrc
  8249  0BB7  0DB8               	rlf	___flmul@grs,f
  8250  0BB8  0DB9               	rlf	___flmul@grs+1,f
  8251  0BB9  0DBA               	rlf	___flmul@grs+2,f
  8252  0BBA  0DBB               	rlf	___flmul@grs+3,f
  8253  0BBB  0BB2               	decfsz	??___flmul,f
  8254  0BBC  2BB6               	goto	u4025
  8255  0BBD                     l2742:
  8256  0BBD  083D               	movf	___flmul@bexp,w
  8257  0BBE  073C               	addwf	___flmul@aexp,w
  8258  0BBF  00B2               	movwf	??___flmul
  8259  0BC0  01B3               	clrf	??___flmul+1
  8260  0BC1  0DB3               	rlf	??___flmul+1,f
  8261  0BC2  0832               	movf	??___flmul,w
  8262  0BC3  3E82               	addlw	130
  8263  0BC4  00C2               	movwf	___flmul@temp
  8264  0BC5  0833               	movf	??___flmul+1,w
  8265  0BC6  1803               	skipnc
  8266  0BC7  3E01               	addlw	1
  8267  0BC8  3EFF               	addlw	255
  8268  0BC9  00C3               	movwf	___flmul@temp+1
  8269  0BCA  2BE8               	goto	l2754
  8270  0BCB                     l2744:
  8271  0BCB  3001               	movlw	1
  8272  0BCC  00B2               	movwf	??___flmul
  8273  0BCD                     u4035:
  8274  0BCD  1003               	clrc
  8275  0BCE  0DBE               	rlf	___flmul@prod,f
  8276  0BCF  0DBF               	rlf	___flmul@prod+1,f
  8277  0BD0  0DC0               	rlf	___flmul@prod+2,f
  8278  0BD1  0DC1               	rlf	___flmul@prod+3,f
  8279  0BD2  0BB2               	decfsz	??___flmul,f
  8280  0BD3  2BCD               	goto	u4035
  8281  0BD4                     l2746:
  8282  0BD4  1FBB               	btfss	___flmul@grs+3,7
  8283  0BD5  2BD7               	goto	u4041
  8284  0BD6  2BD8               	goto	u4040
  8285  0BD7                     u4041:
  8286  0BD7  2BD9               	goto	l2750
  8287  0BD8                     u4040:
  8288  0BD8                     l2748:
  8289  0BD8  143E               	bsf	___flmul@prod,0
  8290  0BD9                     l2750:
  8291  0BD9  3001               	movlw	1
  8292  0BDA  00B2               	movwf	??___flmul
  8293  0BDB                     u4055:
  8294  0BDB  1003               	clrc
  8295  0BDC  0DB8               	rlf	___flmul@grs,f
  8296  0BDD  0DB9               	rlf	___flmul@grs+1,f
  8297  0BDE  0DBA               	rlf	___flmul@grs+2,f
  8298  0BDF  0DBB               	rlf	___flmul@grs+3,f
  8299  0BE0  0BB2               	decfsz	??___flmul,f
  8300  0BE1  2BDB               	goto	u4055
  8301  0BE2                     l2752:
  8302  0BE2  30FF               	movlw	255
  8303  0BE3  07C2               	addwf	___flmul@temp,f
  8304  0BE4  1803               	skipnc
  8305  0BE5  0AC3               	incf	___flmul@temp+1,f
  8306  0BE6  30FF               	movlw	255
  8307  0BE7  07C3               	addwf	___flmul@temp+1,f
  8308  0BE8                     l2754:
  8309  0BE8  1FC0               	btfss	___flmul@prod+2,7
  8310  0BE9  2BEB               	goto	u4061
  8311  0BEA  2BEC               	goto	u4060
  8312  0BEB                     u4061:
  8313  0BEB  2BCB               	goto	l2744
  8314  0BEC                     u4060:
  8315  0BEC                     l2756:
  8316  0BEC  01BC               	clrf	___flmul@aexp
  8317  0BED                     l2758:
  8318  0BED  1FBB               	btfss	___flmul@grs+3,7
  8319  0BEE  2BF0               	goto	u4071
  8320  0BEF  2BF1               	goto	u4070
  8321  0BF0                     u4071:
  8322  0BF0  2C0D               	goto	l2766
  8323  0BF1                     u4070:
  8324  0BF1                     l2760:
  8325  0BF1  30FF               	movlw	255
  8326  0BF2  0538               	andwf	___flmul@grs,w
  8327  0BF3  00B2               	movwf	??___flmul
  8328  0BF4  30FF               	movlw	255
  8329  0BF5  0539               	andwf	___flmul@grs+1,w
  8330  0BF6  00B3               	movwf	??___flmul+1
  8331  0BF7  30FF               	movlw	255
  8332  0BF8  053A               	andwf	___flmul@grs+2,w
  8333  0BF9  00B4               	movwf	??___flmul+2
  8334  0BFA  307F               	movlw	127
  8335  0BFB  053B               	andwf	___flmul@grs+3,w
  8336  0BFC  00B5               	movwf	??___flmul+3
  8337  0BFD  0835               	movf	??___flmul+3,w
  8338  0BFE  0434               	iorwf	??___flmul+2,w
  8339  0BFF  0433               	iorwf	??___flmul+1,w
  8340  0C00  0432               	iorwf	??___flmul,w
  8341  0C01  1903               	skipnz
  8342  0C02  2C04               	goto	u4081
  8343  0C03  2C05               	goto	u4080
  8344  0C04                     u4081:
  8345  0C04  2C08               	goto	l838
  8346  0C05                     u4080:
  8347  0C05                     l2762:
  8348  0C05  01BC               	clrf	___flmul@aexp
  8349  0C06  0ABC               	incf	___flmul@aexp,f
  8350  0C07  2C0D               	goto	l2766
  8351  0C08                     l838:
  8352  0C08  1C3E               	btfss	___flmul@prod,0
  8353  0C09  2C0B               	goto	u4091
  8354  0C0A  2C0C               	goto	u4090
  8355  0C0B                     u4091:
  8356  0C0B  2C0D               	goto	l2766
  8357  0C0C                     u4090:
  8358  0C0C  2C05               	goto	l2762
  8359  0C0D                     l2766:
  8360  0C0D  083C               	movf	___flmul@aexp,w
  8361  0C0E  1903               	btfsc	3,2
  8362  0C0F  2C11               	goto	u4101
  8363  0C10  2C12               	goto	u4100
  8364  0C11                     u4101:
  8365  0C11  2C43               	goto	l2776
  8366  0C12                     u4100:
  8367  0C12                     l2768:
  8368  0C12  3001               	movlw	1
  8369  0C13  07BE               	addwf	___flmul@prod,f
  8370  0C14  3000               	movlw	0
  8371  0C15  1803               	skipnc
  8372  0C16  3001               	movlw	1
  8373  0C17  07BF               	addwf	___flmul@prod+1,f
  8374  0C18  3000               	movlw	0
  8375  0C19  1803               	skipnc
  8376  0C1A  3001               	movlw	1
  8377  0C1B  07C0               	addwf	___flmul@prod+2,f
  8378  0C1C  3000               	movlw	0
  8379  0C1D  1803               	skipnc
  8380  0C1E  3001               	movlw	1
  8381  0C1F  07C1               	addwf	___flmul@prod+3,f
  8382  0C20                     l2770:
  8383  0C20  1C41               	btfss	___flmul@prod+3,0
  8384  0C21  2C23               	goto	u4111
  8385  0C22  2C24               	goto	u4110
  8386  0C23                     u4111:
  8387  0C23  2C43               	goto	l2776
  8388  0C24                     u4110:
  8389  0C24                     l2772:
  8390  0C24  083E               	movf	___flmul@prod,w
  8391  0C25  00B2               	movwf	??___flmul
  8392  0C26  083F               	movf	___flmul@prod+1,w
  8393  0C27  00B3               	movwf	??___flmul+1
  8394  0C28  0840               	movf	___flmul@prod+2,w
  8395  0C29  00B4               	movwf	??___flmul+2
  8396  0C2A  0841               	movf	___flmul@prod+3,w
  8397  0C2B  00B5               	movwf	??___flmul+3
  8398  0C2C  3001               	movlw	1
  8399  0C2D  00B6               	movwf	??___flmul+4
  8400  0C2E                     u4125:
  8401  0C2E  0D35               	rlf	??___flmul+3,w
  8402  0C2F  0CB5               	rrf	??___flmul+3,f
  8403  0C30  0CB4               	rrf	??___flmul+2,f
  8404  0C31  0CB3               	rrf	??___flmul+1,f
  8405  0C32  0CB2               	rrf	??___flmul,f
  8406  0C33                     u4120:
  8407  0C33  0BB6               	decfsz	??___flmul+4,f
  8408  0C34  2C2E               	goto	u4125
  8409  0C35  0835               	movf	??___flmul+3,w
  8410  0C36  00C1               	movwf	___flmul@prod+3
  8411  0C37  0834               	movf	??___flmul+2,w
  8412  0C38  00C0               	movwf	___flmul@prod+2
  8413  0C39  0833               	movf	??___flmul+1,w
  8414  0C3A  00BF               	movwf	___flmul@prod+1
  8415  0C3B  0832               	movf	??___flmul,w
  8416  0C3C  00BE               	movwf	___flmul@prod
  8417  0C3D                     l2774:
  8418  0C3D  3001               	movlw	1
  8419  0C3E  07C2               	addwf	___flmul@temp,f
  8420  0C3F  1803               	skipnc
  8421  0C40  0AC3               	incf	___flmul@temp+1,f
  8422  0C41  3000               	movlw	0
  8423  0C42  07C3               	addwf	___flmul@temp+1,f
  8424  0C43                     l2776:
  8425  0C43  0843               	movf	___flmul@temp+1,w
  8426  0C44  3A80               	xorlw	128
  8427  0C45  00FF               	movwf	btemp+1
  8428  0C46  3080               	movlw	128
  8429  0C47  027F               	subwf	btemp+1,w
  8430  0C48  1D03               	skipz
  8431  0C49  2C4C               	goto	u4135
  8432  0C4A  30FF               	movlw	255
  8433  0C4B  0242               	subwf	___flmul@temp,w
  8434  0C4C                     u4135:
  8435  0C4C  1C03               	skipc
  8436  0C4D  2C4F               	goto	u4131
  8437  0C4E  2C50               	goto	u4130
  8438  0C4F                     u4131:
  8439  0C4F  2C5B               	goto	l2780
  8440  0C50                     u4130:
  8441  0C50                     l2778:
  8442  0C50  307F               	movlw	127
  8443  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  8444  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  8445  0C53  00C1               	movwf	___flmul@prod+3
  8446  0C54  3080               	movlw	128
  8447  0C55  00C0               	movwf	___flmul@prod+2
  8448  0C56  3000               	movlw	0
  8449  0C57  00BF               	movwf	___flmul@prod+1
  8450  0C58  3000               	movlw	0
  8451  0C59  00BE               	movwf	___flmul@prod
  8452  0C5A  2C90               	goto	l844
  8453  0C5B                     l2780:
  8454  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  8455  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  8456  0C5D  0843               	movf	___flmul@temp+1,w
  8457  0C5E  3A80               	xorlw	128
  8458  0C5F  00FF               	movwf	btemp+1
  8459  0C60  3080               	movlw	128
  8460  0C61  027F               	subwf	btemp+1,w
  8461  0C62  1D03               	skipz
  8462  0C63  2C66               	goto	u4145
  8463  0C64  3001               	movlw	1
  8464  0C65  0242               	subwf	___flmul@temp,w
  8465  0C66                     u4145:
  8466  0C66  1803               	skipnc
  8467  0C67  2C69               	goto	u4141
  8468  0C68  2C6A               	goto	u4140
  8469  0C69                     u4141:
  8470  0C69  2C76               	goto	l2786
  8471  0C6A                     u4140:
  8472  0C6A                     l2782:
  8473  0C6A  3000               	movlw	0
  8474  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8475  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  8476  0C6D  00C1               	movwf	___flmul@prod+3
  8477  0C6E  3000               	movlw	0
  8478  0C6F  00C0               	movwf	___flmul@prod+2
  8479  0C70  3000               	movlw	0
  8480  0C71  00BF               	movwf	___flmul@prod+1
  8481  0C72  3000               	movlw	0
  8482  0C73  00BE               	movwf	___flmul@prod
  8483  0C74                     l2784:
  8484  0C74  01B7               	clrf	___flmul@sign
  8485  0C75  2C90               	goto	l844
  8486  0C76                     l2786:
  8487  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8488  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  8489  0C78  0842               	movf	___flmul@temp,w
  8490  0C79  00B2               	movwf	??___flmul
  8491  0C7A  0832               	movf	??___flmul,w
  8492  0C7B  00BD               	movwf	___flmul@bexp
  8493  0C7C  30FF               	movlw	255
  8494  0C7D  05BE               	andwf	___flmul@prod,f
  8495  0C7E  30FF               	movlw	255
  8496  0C7F  05BF               	andwf	___flmul@prod+1,f
  8497  0C80  307F               	movlw	127
  8498  0C81  05C0               	andwf	___flmul@prod+2,f
  8499  0C82  3000               	movlw	0
  8500  0C83  05C1               	andwf	___flmul@prod+3,f
  8501  0C84                     l2788:
  8502  0C84  1C3D               	btfss	___flmul@bexp,0
  8503  0C85  2C87               	goto	u4151
  8504  0C86  2C88               	goto	u4150
  8505  0C87                     u4151:
  8506  0C87  2C89               	goto	l2792
  8507  0C88                     u4150:
  8508  0C88                     l2790:
  8509  0C88  17C0               	bsf	___flmul@prod+2,7
  8510  0C89                     l2792:
  8511  0C89  083D               	movf	___flmul@bexp,w
  8512  0C8A  00B2               	movwf	??___flmul
  8513  0C8B  1003               	clrc
  8514  0C8C  0C32               	rrf	??___flmul,w
  8515  0C8D  00B3               	movwf	??___flmul+1
  8516  0C8E  0833               	movf	??___flmul+1,w
  8517  0C8F  00C1               	movwf	___flmul@prod+3
  8518  0C90                     l844:
  8519  0C90  0837               	movf	___flmul@sign,w
  8520  0C91  00B2               	movwf	??___flmul
  8521  0C92  0832               	movf	??___flmul,w
  8522  0C93  04C1               	iorwf	___flmul@prod+3,f
  8523  0C94                     l2794:
  8524  0C94  0841               	movf	___flmul@prod+3,w
  8525  0C95  00AD               	movwf	?___flmul+3
  8526  0C96  0840               	movf	___flmul@prod+2,w
  8527  0C97  00AC               	movwf	?___flmul+2
  8528  0C98  083F               	movf	___flmul@prod+1,w
  8529  0C99  00AB               	movwf	?___flmul+1
  8530  0C9A  083E               	movf	___flmul@prod,w
  8531  0C9B  00AA               	movwf	?___flmul
  8532  0C9C                     l832:
  8533  0C9C  0008               	return
  8534  0C9D                     __end_of___flmul:
  8535                           
  8536                           	psect	text25
  8537  1BAE                     __ptext25:	
  8538 ;; *************** function __Umul8_16 *****************
  8539 ;; Defined at:
  8540 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  8541 ;; Parameters:    Size  Location     Type
  8542 ;;  multiplier      1    wreg     unsigned char 
  8543 ;;  multiplicand    1    3[COMMON] unsigned char 
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;  multiplier      1    4[BANK0 ] unsigned char 
  8546 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  8547 ;;  product         2    0[BANK0 ] unsigned int 
  8548 ;; Return value:  Size  Location     Type
  8549 ;;                  2    3[COMMON] unsigned int 
  8550 ;; Registers used:
  8551 ;;		wreg, status,2, status,0
  8552 ;; Tracked objects:
  8553 ;;		On entry : 0/0
  8554 ;;		On exit  : 0/0
  8555 ;;		Unchanged: 0/0
  8556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8557 ;;      Params:         2       0       0       0       0
  8558 ;;      Locals:         0       5       0       0       0
  8559 ;;      Temps:          2       0       0       0       0
  8560 ;;      Totals:         4       5       0       0       0
  8561 ;;Total ram usage:        9 bytes
  8562 ;; Hardware stack levels used:    1
  8563 ;; Hardware stack levels required when called:    2
  8564 ;; This function calls:
  8565 ;;		Nothing
  8566 ;; This function is called by:
  8567 ;;		___flmul
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           
  8572                           ;psect for function __Umul8_16
  8573  1BAE                     __Umul8_16:
  8574                           
  8575                           ;incstack = 0
  8576                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8577                           ;__Umul8_16@multiplier stored from wreg
  8578  1BAE  1283               	bcf	3,5	;RP0=0, select bank0
  8579  1BAF  1303               	bcf	3,6	;RP1=0, select bank0
  8580  1BB0  00A4               	movwf	__Umul8_16@multiplier
  8581  1BB1                     l2302:
  8582  1BB1  01A0               	clrf	__Umul8_16@product
  8583  1BB2  01A1               	clrf	__Umul8_16@product+1
  8584  1BB3                     l2304:
  8585  1BB3  0873               	movf	__Umul8_16@multiplicand,w
  8586  1BB4  00F5               	movwf	??__Umul8_16
  8587  1BB5  01F6               	clrf	??__Umul8_16+1
  8588  1BB6  0875               	movf	??__Umul8_16,w
  8589  1BB7  00A2               	movwf	__Umul8_16@word_mpld
  8590  1BB8  0876               	movf	??__Umul8_16+1,w
  8591  1BB9  00A3               	movwf	__Umul8_16@word_mpld+1
  8592  1BBA                     l2306:
  8593  1BBA  1C24               	btfss	__Umul8_16@multiplier,0
  8594  1BBB  2BBD               	goto	u2901
  8595  1BBC  2BBE               	goto	u2900
  8596  1BBD                     u2901:
  8597  1BBD  2BC4               	goto	l851
  8598  1BBE                     u2900:
  8599  1BBE                     l2308:
  8600  1BBE  0822               	movf	__Umul8_16@word_mpld,w
  8601  1BBF  07A0               	addwf	__Umul8_16@product,f
  8602  1BC0  1803               	skipnc
  8603  1BC1  0AA1               	incf	__Umul8_16@product+1,f
  8604  1BC2  0823               	movf	__Umul8_16@word_mpld+1,w
  8605  1BC3  07A1               	addwf	__Umul8_16@product+1,f
  8606  1BC4                     l851:
  8607  1BC4  3001               	movlw	1
  8608  1BC5                     u2915:
  8609  1BC5  1003               	clrc
  8610  1BC6  0DA2               	rlf	__Umul8_16@word_mpld,f
  8611  1BC7  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  8612  1BC8  3EFF               	addlw	-1
  8613  1BC9  1D03               	skipz
  8614  1BCA  2BC5               	goto	u2915
  8615  1BCB  1003               	clrc
  8616  1BCC  0CA4               	rrf	__Umul8_16@multiplier,f
  8617  1BCD                     l2310:
  8618  1BCD  0824               	movf	__Umul8_16@multiplier,w
  8619  1BCE  1D03               	btfss	3,2
  8620  1BCF  2BD1               	goto	u2921
  8621  1BD0  2BD2               	goto	u2920
  8622  1BD1                     u2921:
  8623  1BD1  2BBA               	goto	l2306
  8624  1BD2                     u2920:
  8625  1BD2                     l2312:
  8626  1BD2  0821               	movf	__Umul8_16@product+1,w
  8627  1BD3  00F4               	movwf	?__Umul8_16+1
  8628  1BD4  0820               	movf	__Umul8_16@product,w
  8629  1BD5  00F3               	movwf	?__Umul8_16
  8630  1BD6                     l853:
  8631  1BD6  0008               	return
  8632  1BD7                     __end_of__Umul8_16:
  8633                           
  8634                           	psect	text26
  8635  1AE2                     __ptext26:	
  8636 ;; *************** function _cfg_usart *****************
  8637 ;; Defined at:
  8638 ;;		line 181 in file "main.c"
  8639 ;; Parameters:    Size  Location     Type
  8640 ;;		None
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;		None
  8643 ;; Return value:  Size  Location     Type
  8644 ;;                  1    wreg      void 
  8645 ;; Registers used:
  8646 ;;		wreg, status,2
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8652 ;;      Params:         0       0       0       0       0
  8653 ;;      Locals:         0       0       0       0       0
  8654 ;;      Temps:          0       0       0       0       0
  8655 ;;      Totals:         0       0       0       0       0
  8656 ;;Total ram usage:        0 bytes
  8657 ;; Hardware stack levels used:    1
  8658 ;; Hardware stack levels required when called:    2
  8659 ;; This function calls:
  8660 ;;		Nothing
  8661 ;; This function is called by:
  8662 ;;		_main
  8663 ;; This function uses a non-reentrant model
  8664 ;;
  8665                           
  8666                           
  8667                           ;psect for function _cfg_usart
  8668  1AE2                     _cfg_usart:
  8669  1AE2                     l3220:	
  8670                           ;incstack = 0
  8671                           ; Regs used in _cfg_usart: [wreg+status,2]
  8672                           
  8673                           
  8674                           ;main.c: 183:     TXSTAbits.SYNC = 0;
  8675  1AE2  1683               	bsf	3,5	;RP0=1, select bank1
  8676  1AE3  1303               	bcf	3,6	;RP1=0, select bank1
  8677  1AE4  1218               	bcf	24,4	;volatile
  8678                           
  8679                           ;main.c: 184:     TXSTAbits.BRGH = 1;
  8680  1AE5  1518               	bsf	24,2	;volatile
  8681                           
  8682                           ;main.c: 186:     BAUDCTLbits.BRG16 = 1;
  8683  1AE6  1683               	bsf	3,5	;RP0=1, select bank3
  8684  1AE7  1703               	bsf	3,6	;RP1=1, select bank3
  8685  1AE8  1587               	bsf	7,3	;volatile
  8686  1AE9                     l3222:
  8687                           
  8688                           ;main.c: 188:     SPBRG = 25;
  8689  1AE9  3019               	movlw	25
  8690  1AEA  1683               	bsf	3,5	;RP0=1, select bank1
  8691  1AEB  1303               	bcf	3,6	;RP1=0, select bank1
  8692  1AEC  0099               	movwf	25	;volatile
  8693  1AED                     l3224:
  8694                           
  8695                           ;main.c: 189:     SPBRGH = 0;
  8696  1AED  019A               	clrf	26	;volatile
  8697  1AEE                     l3226:
  8698                           
  8699                           ;main.c: 191:     RCSTAbits.SPEN = 1;
  8700  1AEE  1283               	bcf	3,5	;RP0=0, select bank0
  8701  1AEF  1303               	bcf	3,6	;RP1=0, select bank0
  8702  1AF0  1798               	bsf	24,7	;volatile
  8703  1AF1                     l3228:
  8704                           
  8705                           ;main.c: 192:     RCSTAbits.RX9 = 0;
  8706  1AF1  1318               	bcf	24,6	;volatile
  8707  1AF2                     l3230:
  8708                           
  8709                           ;main.c: 193:     RCSTAbits.CREN = 1;
  8710  1AF2  1618               	bsf	24,4	;volatile
  8711  1AF3                     l3232:
  8712                           
  8713                           ;main.c: 195:     TXSTAbits.TXEN = 1;
  8714  1AF3  1683               	bsf	3,5	;RP0=1, select bank1
  8715  1AF4  1303               	bcf	3,6	;RP1=0, select bank1
  8716  1AF5  1698               	bsf	24,5	;volatile
  8717  1AF6                     l119:
  8718  1AF6  0008               	return
  8719  1AF7                     __end_of_cfg_usart:
  8720                           
  8721                           	psect	text27
  8722  1001                     __ptext27:	
  8723 ;; *************** function _cfg_io *****************
  8724 ;; Defined at:
  8725 ;;		line 152 in file "main.c"
  8726 ;; Parameters:    Size  Location     Type
  8727 ;;		None
  8728 ;; Auto vars:     Size  Location     Type
  8729 ;;		None
  8730 ;; Return value:  Size  Location     Type
  8731 ;;                  1    wreg      void 
  8732 ;; Registers used:
  8733 ;;		wreg, status,2
  8734 ;; Tracked objects:
  8735 ;;		On entry : 0/0
  8736 ;;		On exit  : 0/0
  8737 ;;		Unchanged: 0/0
  8738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8739 ;;      Params:         0       0       0       0       0
  8740 ;;      Locals:         0       0       0       0       0
  8741 ;;      Temps:          0       0       0       0       0
  8742 ;;      Totals:         0       0       0       0       0
  8743 ;;Total ram usage:        0 bytes
  8744 ;; Hardware stack levels used:    1
  8745 ;; Hardware stack levels required when called:    2
  8746 ;; This function calls:
  8747 ;;		Nothing
  8748 ;; This function is called by:
  8749 ;;		_main
  8750 ;; This function uses a non-reentrant model
  8751 ;;
  8752                           
  8753                           
  8754                           ;psect for function _cfg_io
  8755  1001                     _cfg_io:
  8756  1001                     l3196:	
  8757                           ;incstack = 0
  8758                           ; Regs used in _cfg_io: [wreg+status,2]
  8759                           
  8760                           
  8761                           ;main.c: 153:     ANSELH = 0x00;
  8762  1001  1683               	bsf	3,5	;RP0=1, select bank3
  8763  1002  1703               	bsf	3,6	;RP1=1, select bank3
  8764  1003  0189               	clrf	9	;volatile
  8765  1004                     l3198:
  8766                           
  8767                           ;main.c: 154:     ANSEL = 0x20;
  8768  1004  3020               	movlw	32
  8769  1005  0088               	movwf	8	;volatile
  8770  1006                     l3200:
  8771                           
  8772                           ;main.c: 156:     TRISB = 0x03;
  8773  1006  3003               	movlw	3
  8774  1007  1683               	bsf	3,5	;RP0=1, select bank1
  8775  1008  1303               	bcf	3,6	;RP1=0, select bank1
  8776  1009  0086               	movwf	6	;volatile
  8777                           
  8778                           ;main.c: 157:     TRISC = 0x00;
  8779  100A  0187               	clrf	7	;volatile
  8780                           
  8781                           ;main.c: 158:     TRISA = 0X00;
  8782  100B  0185               	clrf	5	;volatile
  8783                           
  8784                           ;main.c: 159:     TRISD = 0X00;
  8785  100C  0188               	clrf	8	;volatile
  8786  100D                     l3202:
  8787                           
  8788                           ;main.c: 160:     TRISE = 0x03;
  8789  100D  3003               	movlw	3
  8790  100E  0089               	movwf	9	;volatile
  8791  100F                     l110:
  8792  100F  0008               	return
  8793  1010                     __end_of_cfg_io:
  8794                           
  8795                           	psect	text28
  8796  1A91                     __ptext28:	
  8797 ;; *************** function _cfg_inte *****************
  8798 ;; Defined at:
  8799 ;;		line 199 in file "main.c"
  8800 ;; Parameters:    Size  Location     Type
  8801 ;;		None
  8802 ;; Auto vars:     Size  Location     Type
  8803 ;;		None
  8804 ;; Return value:  Size  Location     Type
  8805 ;;                  1    wreg      void 
  8806 ;; Registers used:
  8807 ;;		None
  8808 ;; Tracked objects:
  8809 ;;		On entry : 0/0
  8810 ;;		On exit  : 0/0
  8811 ;;		Unchanged: 0/0
  8812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8813 ;;      Params:         0       0       0       0       0
  8814 ;;      Locals:         0       0       0       0       0
  8815 ;;      Temps:          0       0       0       0       0
  8816 ;;      Totals:         0       0       0       0       0
  8817 ;;Total ram usage:        0 bytes
  8818 ;; Hardware stack levels used:    1
  8819 ;; Hardware stack levels required when called:    2
  8820 ;; This function calls:
  8821 ;;		Nothing
  8822 ;; This function is called by:
  8823 ;;		_main
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           
  8828                           ;psect for function _cfg_inte
  8829  1A91                     _cfg_inte:
  8830  1A91                     l3210:	
  8831                           ;incstack = 0
  8832                           ; Regs used in _cfg_inte: []
  8833                           
  8834                           
  8835                           ;main.c: 201:     INTCONbits.GIE = 1;
  8836  1A91  178B               	bsf	11,7	;volatile
  8837                           
  8838                           ;main.c: 202:     INTCONbits.PEIE = 1;
  8839  1A92  170B               	bsf	11,6	;volatile
  8840                           
  8841                           ;main.c: 203:     PIE1bits.RCIE = 1;
  8842  1A93  1683               	bsf	3,5	;RP0=1, select bank1
  8843  1A94  1303               	bcf	3,6	;RP1=0, select bank1
  8844  1A95  168C               	bsf	12,5	;volatile
  8845  1A96                     l122:
  8846  1A96  0008               	return
  8847  1A97                     __end_of_cfg_inte:
  8848                           
  8849                           	psect	text29
  8850  1A97                     __ptext29:	
  8851 ;; *************** function _cfg_clk *****************
  8852 ;; Defined at:
  8853 ;;		line 177 in file "main.c"
  8854 ;; Parameters:    Size  Location     Type
  8855 ;;		None
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;		None
  8858 ;; Return value:  Size  Location     Type
  8859 ;;                  1    wreg      void 
  8860 ;; Registers used:
  8861 ;;		wreg, status,2, status,0
  8862 ;; Tracked objects:
  8863 ;;		On entry : 0/0
  8864 ;;		On exit  : 0/0
  8865 ;;		Unchanged: 0/0
  8866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8867 ;;      Params:         0       0       0       0       0
  8868 ;;      Locals:         0       0       0       0       0
  8869 ;;      Temps:          0       0       0       0       0
  8870 ;;      Totals:         0       0       0       0       0
  8871 ;;Total ram usage:        0 bytes
  8872 ;; Hardware stack levels used:    1
  8873 ;; Hardware stack levels required when called:    2
  8874 ;; This function calls:
  8875 ;;		Nothing
  8876 ;; This function is called by:
  8877 ;;		_main
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           
  8881                           
  8882                           ;psect for function _cfg_clk
  8883  1A97                     _cfg_clk:
  8884  1A97                     l3206:	
  8885                           ;incstack = 0
  8886                           ; Regs used in _cfg_clk: [wreg+status,2+status,0]
  8887                           
  8888                           
  8889                           ;main.c: 178:     OSCCONbits.IRCF = 0b100;
  8890  1A97  1683               	bsf	3,5	;RP0=1, select bank1
  8891  1A98  1303               	bcf	3,6	;RP1=0, select bank1
  8892  1A99  080F               	movf	15,w	;volatile
  8893  1A9A  398F               	andlw	-113
  8894  1A9B  3840               	iorlw	64
  8895  1A9C  008F               	movwf	15	;volatile
  8896  1A9D                     l3208:
  8897                           
  8898                           ;main.c: 179:     OSCCONbits.SCS = 1;
  8899  1A9D  140F               	bsf	15,0	;volatile
  8900  1A9E                     l116:
  8901  1A9E  0008               	return
  8902  1A9F                     __end_of_cfg_clk:
  8903                           
  8904                           	psect	text30
  8905  1AF7                     __ptext30:	
  8906 ;; *************** function _cfg_adc *****************
  8907 ;; Defined at:
  8908 ;;		line 164 in file "main.c"
  8909 ;; Parameters:    Size  Location     Type
  8910 ;;		None
  8911 ;; Auto vars:     Size  Location     Type
  8912 ;;		None
  8913 ;; Return value:  Size  Location     Type
  8914 ;;                  1    wreg      void 
  8915 ;; Registers used:
  8916 ;;		wreg, status,2, status,0
  8917 ;; Tracked objects:
  8918 ;;		On entry : 0/0
  8919 ;;		On exit  : 0/0
  8920 ;;		Unchanged: 0/0
  8921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8922 ;;      Params:         0       0       0       0       0
  8923 ;;      Locals:         0       0       0       0       0
  8924 ;;      Temps:          1       0       0       0       0
  8925 ;;      Totals:         1       0       0       0       0
  8926 ;;Total ram usage:        1 bytes
  8927 ;; Hardware stack levels used:    1
  8928 ;; Hardware stack levels required when called:    2
  8929 ;; This function calls:
  8930 ;;		Nothing
  8931 ;; This function is called by:
  8932 ;;		_main
  8933 ;; This function uses a non-reentrant model
  8934 ;;
  8935                           
  8936                           
  8937                           ;psect for function _cfg_adc
  8938  1AF7                     _cfg_adc:
  8939  1AF7                     l3212:	
  8940                           ;incstack = 0
  8941                           ; Regs used in _cfg_adc: [wreg+status,2+status,0]
  8942                           
  8943                           
  8944                           ;main.c: 165:     ADCON1bits.ADFM = 0;
  8945  1AF7  1683               	bsf	3,5	;RP0=1, select bank1
  8946  1AF8  1303               	bcf	3,6	;RP1=0, select bank1
  8947  1AF9  139F               	bcf	31,7	;volatile
  8948                           
  8949                           ;main.c: 166:     ADCON1bits.VCFG0 = 0;
  8950  1AFA  121F               	bcf	31,4	;volatile
  8951                           
  8952                           ;main.c: 167:     ADCON1bits.VCFG1 = 0;
  8953  1AFB  129F               	bcf	31,5	;volatile
  8954                           
  8955                           ;main.c: 169:     ADCON0bits.ADCS0 = 0;
  8956  1AFC  1283               	bcf	3,5	;RP0=0, select bank0
  8957  1AFD  1303               	bcf	3,6	;RP1=0, select bank0
  8958  1AFE  131F               	bcf	31,6	;volatile
  8959                           
  8960                           ;main.c: 170:     ADCON0bits.ADCS1 = 0;
  8961  1AFF  139F               	bcf	31,7	;volatile
  8962  1B00                     l3214:
  8963                           
  8964                           ;main.c: 171:     ADCON0bits.CHS = 5;
  8965  1B00  081F               	movf	31,w	;volatile
  8966  1B01  39C3               	andlw	-61
  8967  1B02  3814               	iorlw	20
  8968  1B03  009F               	movwf	31	;volatile
  8969  1B04                     l3216:
  8970                           
  8971                           ;main.c: 172:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8972  1B04  3042               	movlw	66
  8973  1B05  00F3               	movwf	??_cfg_adc
  8974  1B06                     u7327:
  8975  1B06  0BF3               	decfsz	??_cfg_adc,f
  8976  1B07  2B06               	goto	u7327
  8977  1B08  0000               	nop
  8978  1B09                     l3218:
  8979                           
  8980                           ;main.c: 173:     ADCON0bits.ADON = 1;
  8981  1B09  1283               	bcf	3,5	;RP0=0, select bank0
  8982  1B0A  1303               	bcf	3,6	;RP1=0, select bank0
  8983  1B0B  141F               	bsf	31,0	;volatile
  8984  1B0C                     l113:
  8985  1B0C  0008               	return
  8986  1B0D                     __end_of_cfg_adc:
  8987                           
  8988                           	psect	text31
  8989  1C55                     __ptext31:	
  8990 ;; *************** function _Lcd_Write_String *****************
  8991 ;; Defined at:
  8992 ;;		line 110 in file "LCD.c"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;  a               2    6[COMMON] PTR unsigned char 
  8995 ;;		 -> f(10), STR_1(16), 
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;  i               2    8[COMMON] int 
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  1    wreg      void 
  9000 ;; Registers used:
  9001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9007 ;;      Params:         2       0       0       0       0
  9008 ;;      Locals:         2       0       0       0       0
  9009 ;;      Temps:          0       3       0       0       0
  9010 ;;      Totals:         4       3       0       0       0
  9011 ;;Total ram usage:        7 bytes
  9012 ;; Hardware stack levels used:    1
  9013 ;; Hardware stack levels required when called:    4
  9014 ;; This function calls:
  9015 ;;		_Lcd_Write_Char
  9016 ;; This function is called by:
  9017 ;;		_main
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           
  9022                           ;psect for function _Lcd_Write_String
  9023  1C55                     _Lcd_Write_String:
  9024  1C55                     l4006:	
  9025                           ;incstack = 0
  9026                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9027                           
  9028                           
  9029                           ;LCD.c: 111:     int i;;LCD.c: 112:     for (i = 0; a[i] != '\0'; i++)
  9030  1C55  01F8               	clrf	Lcd_Write_String@i
  9031  1C56  01F9               	clrf	Lcd_Write_String@i+1
  9032  1C57  2C7A               	goto	l4012
  9033  1C58                     l4008:
  9034                           
  9035                           ;LCD.c: 113:         Lcd_Write_Char(a[i]);
  9036  1C58  0878               	movf	Lcd_Write_String@i,w
  9037  1C59  0776               	addwf	Lcd_Write_String@a,w
  9038  1C5A  00A1               	movwf	??_Lcd_Write_String+1
  9039  1C5B  0877               	movf	Lcd_Write_String@a+1,w
  9040  1C5C  00A0               	movwf	??_Lcd_Write_String
  9041  1C5D  1803               	skipnc
  9042  1C5E  0AA0               	incf	??_Lcd_Write_String,f
  9043  1C5F  1FF8               	btfss	Lcd_Write_String@i,7
  9044  1C60  2C62               	goto	u6790
  9045  1C61  03A0               	decf	??_Lcd_Write_String,f
  9046  1C62                     u6790:
  9047  1C62  1283               	bcf	3,5	;RP0=0, select bank0
  9048  1C63  1303               	bcf	3,6	;RP1=0, select bank0
  9049  1C64  0820               	movf	??_Lcd_Write_String,w
  9050  1C65  00A2               	movwf	??_Lcd_Write_String+2
  9051  1C66  0822               	movf	??_Lcd_Write_String+2,w
  9052  1C67  00FF               	movwf	btemp+1
  9053  1C68  0821               	movf	??_Lcd_Write_String+1,w
  9054  1C69  0084               	movwf	4
  9055  1C6A  160A  158A  2000  160A  158A  	fcall	stringtab
  9056  1C6F  160A  158A  2327  160A  158A  	fcall	_Lcd_Write_Char
  9057  1C74                     l4010:
  9058  1C74  3001               	movlw	1
  9059  1C75  07F8               	addwf	Lcd_Write_String@i,f
  9060  1C76  1803               	skipnc
  9061  1C77  0AF9               	incf	Lcd_Write_String@i+1,f
  9062  1C78  3000               	movlw	0
  9063  1C79  07F9               	addwf	Lcd_Write_String@i+1,f
  9064  1C7A                     l4012:
  9065  1C7A  0878               	movf	Lcd_Write_String@i,w
  9066  1C7B  0776               	addwf	Lcd_Write_String@a,w
  9067  1C7C  1283               	bcf	3,5	;RP0=0, select bank0
  9068  1C7D  1303               	bcf	3,6	;RP1=0, select bank0
  9069  1C7E  00A1               	movwf	??_Lcd_Write_String+1
  9070  1C7F  0877               	movf	Lcd_Write_String@a+1,w
  9071  1C80  00A0               	movwf	??_Lcd_Write_String
  9072  1C81  1803               	skipnc
  9073  1C82  0AA0               	incf	??_Lcd_Write_String,f
  9074  1C83  1FF8               	btfss	Lcd_Write_String@i,7
  9075  1C84  2C86               	goto	u6800
  9076  1C85  03A0               	decf	??_Lcd_Write_String,f
  9077  1C86                     u6800:
  9078  1C86  1283               	bcf	3,5	;RP0=0, select bank0
  9079  1C87  1303               	bcf	3,6	;RP1=0, select bank0
  9080  1C88  0820               	movf	??_Lcd_Write_String,w
  9081  1C89  00A2               	movwf	??_Lcd_Write_String+2
  9082  1C8A  0822               	movf	??_Lcd_Write_String+2,w
  9083  1C8B  00FF               	movwf	btemp+1
  9084  1C8C  0821               	movf	??_Lcd_Write_String+1,w
  9085  1C8D  0084               	movwf	4
  9086  1C8E  160A  158A  2000  160A  158A  	fcall	stringtab
  9087  1C93  3A00               	xorlw	0
  9088  1C94  1D03               	skipz
  9089  1C95  2C97               	goto	u6811
  9090  1C96  2C98               	goto	u6810
  9091  1C97                     u6811:
  9092  1C97  2C58               	goto	l4008
  9093  1C98                     u6810:
  9094  1C98                     l202:
  9095  1C98  0008               	return
  9096  1C99                     __end_of_Lcd_Write_String:
  9097                           
  9098                           	psect	text32
  9099  1B27                     __ptext32:	
  9100 ;; *************** function _Lcd_Write_Char *****************
  9101 ;; Defined at:
  9102 ;;		line 94 in file "LCD.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;  a               1    wreg     unsigned char 
  9105 ;; Auto vars:     Size  Location     Type
  9106 ;;  a               1    5[COMMON] unsigned char 
  9107 ;; Return value:  Size  Location     Type
  9108 ;;                  1    wreg      void 
  9109 ;; Registers used:
  9110 ;;		wreg, status,2, status,0, pclath, cstack
  9111 ;; Tracked objects:
  9112 ;;		On entry : 0/0
  9113 ;;		On exit  : 0/0
  9114 ;;		Unchanged: 0/0
  9115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9116 ;;      Params:         0       0       0       0       0
  9117 ;;      Locals:         1       0       0       0       0
  9118 ;;      Temps:          1       0       0       0       0
  9119 ;;      Totals:         2       0       0       0       0
  9120 ;;Total ram usage:        2 bytes
  9121 ;; Hardware stack levels used:    1
  9122 ;; Hardware stack levels required when called:    3
  9123 ;; This function calls:
  9124 ;;		_Lcd_Port
  9125 ;; This function is called by:
  9126 ;;		_Lcd_Write_String
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           
  9131                           ;psect for function _Lcd_Write_Char
  9132  1B27                     _Lcd_Write_Char:
  9133                           
  9134                           ;incstack = 0
  9135                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9136                           ;Lcd_Write_Char@a stored from wreg
  9137  1B27  00F5               	movwf	Lcd_Write_Char@a
  9138  1B28                     l3706:
  9139                           
  9140                           ;LCD.c: 98:     PORTCbits.RC0 = 1;
  9141  1B28  1283               	bcf	3,5	;RP0=0, select bank0
  9142  1B29  1303               	bcf	3,6	;RP1=0, select bank0
  9143  1B2A  1407               	bsf	7,0	;volatile
  9144  1B2B                     l3708:
  9145                           
  9146                           ;LCD.c: 99:     Lcd_Port(a);
  9147  1B2B  0875               	movf	Lcd_Write_Char@a,w
  9148  1B2C  160A  158A  23D7  160A  158A  	fcall	_Lcd_Port
  9149  1B31                     l3710:
  9150                           
  9151                           ;LCD.c: 100:     RC1 = 1;
  9152  1B31  1283               	bcf	3,5	;RP0=0, select bank0
  9153  1B32  1303               	bcf	3,6	;RP1=0, select bank0
  9154  1B33  1487               	bsf	7,1	;volatile
  9155  1B34                     l3712:
  9156                           
  9157                           ;LCD.c: 101:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9158  1B34  301A               	movlw	26
  9159  1B35  00F4               	movwf	??_Lcd_Write_Char
  9160  1B36                     u7337:
  9161  1B36  0BF4               	decfsz	??_Lcd_Write_Char,f
  9162  1B37  2B36               	goto	u7337
  9163  1B38  0000               	nop
  9164  1B39                     l3714:
  9165                           
  9166                           ;LCD.c: 102:     RC1 = 0;
  9167  1B39  1283               	bcf	3,5	;RP0=0, select bank0
  9168  1B3A  1303               	bcf	3,6	;RP1=0, select bank0
  9169  1B3B  1087               	bcf	7,1	;volatile
  9170  1B3C                     l3716:
  9171                           
  9172                           ;LCD.c: 103:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9173  1B3C  301A               	movlw	26
  9174  1B3D  00F4               	movwf	??_Lcd_Write_Char
  9175  1B3E                     u7347:
  9176  1B3E  0BF4               	decfsz	??_Lcd_Write_Char,f
  9177  1B3F  2B3E               	goto	u7347
  9178  1B40  0000               	nop
  9179  1B41                     l196:
  9180  1B41  0008               	return
  9181  1B42                     __end_of_Lcd_Write_Char:
  9182                           
  9183                           	psect	text33
  9184  1B88                     __ptext33:	
  9185 ;; *************** function _Lcd_Set_Cursor *****************
  9186 ;; Defined at:
  9187 ;;		line 69 in file "LCD.c"
  9188 ;; Parameters:    Size  Location     Type
  9189 ;;  a               1    wreg     unsigned char 
  9190 ;;  b               1    7[COMMON] unsigned char 
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;  a               1    0[BANK0 ] unsigned char 
  9193 ;;  temp            1    1[BANK0 ] unsigned char 
  9194 ;; Return value:  Size  Location     Type
  9195 ;;                  1    wreg      void 
  9196 ;; Registers used:
  9197 ;;		wreg, status,2, status,0, pclath, cstack
  9198 ;; Tracked objects:
  9199 ;;		On entry : 0/0
  9200 ;;		On exit  : 0/0
  9201 ;;		Unchanged: 0/0
  9202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9203 ;;      Params:         1       0       0       0       0
  9204 ;;      Locals:         0       2       0       0       0
  9205 ;;      Temps:          1       0       0       0       0
  9206 ;;      Totals:         2       2       0       0       0
  9207 ;;Total ram usage:        4 bytes
  9208 ;; Hardware stack levels used:    1
  9209 ;; Hardware stack levels required when called:    4
  9210 ;; This function calls:
  9211 ;;		_Lcd_Cmd
  9212 ;; This function is called by:
  9213 ;;		_main
  9214 ;; This function uses a non-reentrant model
  9215 ;;
  9216                           
  9217                           
  9218                           ;psect for function _Lcd_Set_Cursor
  9219  1B88                     _Lcd_Set_Cursor:
  9220                           
  9221                           ;incstack = 0
  9222                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9223                           ;Lcd_Set_Cursor@a stored from wreg
  9224  1B88  1283               	bcf	3,5	;RP0=0, select bank0
  9225  1B89  1303               	bcf	3,6	;RP1=0, select bank0
  9226  1B8A  00A0               	movwf	Lcd_Set_Cursor@a
  9227  1B8B                     l3994:
  9228                           
  9229                           ;LCD.c: 70:     char temp;;LCD.c: 71:     if (a == 1) {
  9230  1B8B  0320               	decf	Lcd_Set_Cursor@a,w
  9231  1B8C  1D03               	btfss	3,2
  9232  1B8D  2B8F               	goto	u6771
  9233  1B8E  2B90               	goto	u6770
  9234  1B8F                     u6771:
  9235  1B8F  2B9C               	goto	l4000
  9236  1B90                     u6770:
  9237  1B90                     l3996:
  9238                           
  9239                           ;LCD.c: 72:         temp = 0x80 + b - 1;
  9240  1B90  0877               	movf	Lcd_Set_Cursor@b,w
  9241  1B91  3E7F               	addlw	127
  9242  1B92  00F8               	movwf	??_Lcd_Set_Cursor
  9243  1B93  0878               	movf	??_Lcd_Set_Cursor,w
  9244  1B94  00A1               	movwf	Lcd_Set_Cursor@temp
  9245  1B95                     l3998:
  9246                           
  9247                           ;LCD.c: 73:         Lcd_Cmd(temp);
  9248  1B95  0821               	movf	Lcd_Set_Cursor@temp,w
  9249  1B96  160A  158A  230D  160A  158A  	fcall	_Lcd_Cmd
  9250                           
  9251                           ;LCD.c: 74:     } else if (a == 2) {
  9252  1B9B  2BAD               	goto	l190
  9253  1B9C                     l4000:
  9254  1B9C  3002               	movlw	2
  9255  1B9D  0620               	xorwf	Lcd_Set_Cursor@a,w
  9256  1B9E  1D03               	btfss	3,2
  9257  1B9F  2BA1               	goto	u6781
  9258  1BA0  2BA2               	goto	u6780
  9259  1BA1                     u6781:
  9260  1BA1  2BAD               	goto	l190
  9261  1BA2                     u6780:
  9262  1BA2                     l4002:
  9263                           
  9264                           ;LCD.c: 75:         temp = 0xC0 + b - 1;
  9265  1BA2  0877               	movf	Lcd_Set_Cursor@b,w
  9266  1BA3  3EBF               	addlw	191
  9267  1BA4  00F8               	movwf	??_Lcd_Set_Cursor
  9268  1BA5  0878               	movf	??_Lcd_Set_Cursor,w
  9269  1BA6  00A1               	movwf	Lcd_Set_Cursor@temp
  9270  1BA7                     l4004:
  9271                           
  9272                           ;LCD.c: 76:         Lcd_Cmd(temp);
  9273  1BA7  0821               	movf	Lcd_Set_Cursor@temp,w
  9274  1BA8  160A  158A  230D  160A  158A  	fcall	_Lcd_Cmd
  9275  1BAD                     l190:
  9276  1BAD  0008               	return
  9277  1BAE                     __end_of_Lcd_Set_Cursor:
  9278                           
  9279                           	psect	text34
  9280  1CDF                     __ptext34:	
  9281 ;; *************** function _Lcd_Init *****************
  9282 ;; Defined at:
  9283 ;;		line 80 in file "LCD.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;		None
  9286 ;; Auto vars:     Size  Location     Type
  9287 ;;		None
  9288 ;; Return value:  Size  Location     Type
  9289 ;;                  1    wreg      void 
  9290 ;; Registers used:
  9291 ;;		wreg, status,2, status,0, pclath, cstack
  9292 ;; Tracked objects:
  9293 ;;		On entry : 0/0
  9294 ;;		On exit  : 0/0
  9295 ;;		Unchanged: 0/0
  9296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9297 ;;      Params:         0       0       0       0       0
  9298 ;;      Locals:         0       0       0       0       0
  9299 ;;      Temps:          3       0       0       0       0
  9300 ;;      Totals:         3       0       0       0       0
  9301 ;;Total ram usage:        3 bytes
  9302 ;; Hardware stack levels used:    1
  9303 ;; Hardware stack levels required when called:    4
  9304 ;; This function calls:
  9305 ;;		_Lcd_Cmd
  9306 ;;		_Lcd_Port
  9307 ;; This function is called by:
  9308 ;;		_main
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           
  9313                           ;psect for function _Lcd_Init
  9314  1CDF                     _Lcd_Init:
  9315  1CDF                     l3982:	
  9316                           ;incstack = 0
  9317                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9318                           
  9319                           
  9320                           ;LCD.c: 81:     Lcd_Port(0x00);
  9321  1CDF  3000               	movlw	0
  9322  1CE0  160A  158A  23D7  160A  158A  	fcall	_Lcd_Port
  9323  1CE5                     l3984:
  9324                           
  9325                           ;LCD.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9326  1CE5  3034               	movlw	52
  9327  1CE6  00F8               	movwf	??_Lcd_Init+1
  9328  1CE7  30F1               	movlw	241
  9329  1CE8  00F7               	movwf	??_Lcd_Init
  9330  1CE9                     u7357:
  9331  1CE9  0BF7               	decfsz	??_Lcd_Init,f
  9332  1CEA  2CE9               	goto	u7357
  9333  1CEB  0BF8               	decfsz	??_Lcd_Init+1,f
  9334  1CEC  2CE9               	goto	u7357
  9335  1CED  2CEE               	nop2
  9336  1CEE                     l3986:
  9337                           
  9338                           ;LCD.c: 83:     Lcd_Cmd(0x3F);
  9339  1CEE  303F               	movlw	63
  9340  1CEF  160A  158A  230D  160A  158A  	fcall	_Lcd_Cmd
  9341                           
  9342                           ;LCD.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9343  1CF4  300D               	movlw	13
  9344  1CF5  00F8               	movwf	??_Lcd_Init+1
  9345  1CF6  30FB               	movlw	251
  9346  1CF7  00F7               	movwf	??_Lcd_Init
  9347  1CF8                     u7367:
  9348  1CF8  0BF7               	decfsz	??_Lcd_Init,f
  9349  1CF9  2CF8               	goto	u7367
  9350  1CFA  0BF8               	decfsz	??_Lcd_Init+1,f
  9351  1CFB  2CF8               	goto	u7367
  9352  1CFC  2CFD               	nop2
  9353  1CFD                     l3988:
  9354                           
  9355                           ;LCD.c: 85:     Lcd_Cmd(0x3F);
  9356  1CFD  303F               	movlw	63
  9357  1CFE  160A  158A  230D  160A  158A  	fcall	_Lcd_Cmd
  9358  1D03                     l3990:
  9359                           
  9360                           ;LCD.c: 86:     _delay((unsigned long)((110)*(8000000/4000.0)));
  9361  1D03  3002               	movlw	2
  9362  1D04  00F9               	movwf	??_Lcd_Init+2
  9363  1D05  301E               	movlw	30
  9364  1D06  00F8               	movwf	??_Lcd_Init+1
  9365  1D07  30B3               	movlw	179
  9366  1D08  00F7               	movwf	??_Lcd_Init
  9367  1D09                     u7377:
  9368  1D09  0BF7               	decfsz	??_Lcd_Init,f
  9369  1D0A  2D09               	goto	u7377
  9370  1D0B  0BF8               	decfsz	??_Lcd_Init+1,f
  9371  1D0C  2D09               	goto	u7377
  9372  1D0D  0BF9               	decfsz	??_Lcd_Init+2,f
  9373  1D0E  2D09               	goto	u7377
  9374  1D0F  2D10               	nop2
  9375                           
  9376                           ;LCD.c: 87:     Lcd_Cmd(0x3F);
  9377  1D10  303F               	movlw	63
  9378  1D11  160A  158A  230D  160A  158A  	fcall	_Lcd_Cmd
  9379                           
  9380                           ;LCD.c: 89:     Lcd_Cmd(0x38);
  9381  1D16  3038               	movlw	56
  9382  1D17  160A  158A  230D  160A  158A  	fcall	_Lcd_Cmd
  9383                           
  9384                           ;LCD.c: 90:     Lcd_Cmd(0x0C);
  9385  1D1C  300C               	movlw	12
  9386  1D1D  160A  158A  230D  160A  158A  	fcall	_Lcd_Cmd
  9387                           
  9388                           ;LCD.c: 91:     Lcd_Cmd(0x06);
  9389  1D22  3006               	movlw	6
  9390  1D23  160A  158A  230D  160A  158A  	fcall	_Lcd_Cmd
  9391  1D28                     l193:
  9392  1D28  0008               	return
  9393  1D29                     __end_of_Lcd_Init:
  9394                           
  9395                           	psect	text35
  9396  1AB1                     __ptext35:	
  9397 ;; *************** function _Lcd_Clear *****************
  9398 ;; Defined at:
  9399 ;;		line 64 in file "LCD.c"
  9400 ;; Parameters:    Size  Location     Type
  9401 ;;		None
  9402 ;; Auto vars:     Size  Location     Type
  9403 ;;		None
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  1    wreg      void 
  9406 ;; Registers used:
  9407 ;;		wreg, status,2, status,0, pclath, cstack
  9408 ;; Tracked objects:
  9409 ;;		On entry : 0/0
  9410 ;;		On exit  : 0/0
  9411 ;;		Unchanged: 0/0
  9412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9413 ;;      Params:         0       0       0       0       0
  9414 ;;      Locals:         0       0       0       0       0
  9415 ;;      Temps:          0       0       0       0       0
  9416 ;;      Totals:         0       0       0       0       0
  9417 ;;Total ram usage:        0 bytes
  9418 ;; Hardware stack levels used:    1
  9419 ;; Hardware stack levels required when called:    4
  9420 ;; This function calls:
  9421 ;;		_Lcd_Cmd
  9422 ;; This function is called by:
  9423 ;;		_main
  9424 ;; This function uses a non-reentrant model
  9425 ;;
  9426                           
  9427                           
  9428                           ;psect for function _Lcd_Clear
  9429  1AB1                     _Lcd_Clear:
  9430  1AB1                     l3992:	
  9431                           ;incstack = 0
  9432                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9433                           
  9434                           
  9435                           ;LCD.c: 65:     Lcd_Cmd(0);
  9436  1AB1  3000               	movlw	0
  9437  1AB2  160A  158A  230D  160A  158A  	fcall	_Lcd_Cmd
  9438                           
  9439                           ;LCD.c: 66:     Lcd_Cmd(1);
  9440  1AB7  3001               	movlw	1
  9441  1AB8  160A  158A  230D  160A  158A  	fcall	_Lcd_Cmd
  9442  1ABD                     l184:
  9443  1ABD  0008               	return
  9444  1ABE                     __end_of_Lcd_Clear:
  9445                           
  9446                           	psect	text36
  9447  1B0D                     __ptext36:	
  9448 ;; *************** function _Lcd_Cmd *****************
  9449 ;; Defined at:
  9450 ;;		line 56 in file "LCD.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;  a               1    wreg     unsigned char 
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;  a               1    6[COMMON] unsigned char 
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  1    wreg      void 
  9457 ;; Registers used:
  9458 ;;		wreg, status,2, status,0, pclath, cstack
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9464 ;;      Params:         0       0       0       0       0
  9465 ;;      Locals:         1       0       0       0       0
  9466 ;;      Temps:          2       0       0       0       0
  9467 ;;      Totals:         3       0       0       0       0
  9468 ;;Total ram usage:        3 bytes
  9469 ;; Hardware stack levels used:    1
  9470 ;; Hardware stack levels required when called:    3
  9471 ;; This function calls:
  9472 ;;		_Lcd_Port
  9473 ;; This function is called by:
  9474 ;;		_Lcd_Clear
  9475 ;;		_Lcd_Set_Cursor
  9476 ;;		_Lcd_Init
  9477 ;;		_Lcd_Shift_Right
  9478 ;;		_Lcd_Shift_Left
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482                           
  9483                           ;psect for function _Lcd_Cmd
  9484  1B0D                     _Lcd_Cmd:
  9485                           
  9486                           ;incstack = 0
  9487                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9488                           ;Lcd_Cmd@a stored from wreg
  9489  1B0D  00F6               	movwf	Lcd_Cmd@a
  9490  1B0E                     l3696:
  9491                           
  9492                           ;LCD.c: 57:     PORTCbits.RC0 = 0;
  9493  1B0E  1283               	bcf	3,5	;RP0=0, select bank0
  9494  1B0F  1303               	bcf	3,6	;RP1=0, select bank0
  9495  1B10  1007               	bcf	7,0	;volatile
  9496  1B11                     l3698:
  9497                           
  9498                           ;LCD.c: 58:     Lcd_Port(a);
  9499  1B11  0876               	movf	Lcd_Cmd@a,w
  9500  1B12  160A  158A  23D7  160A  158A  	fcall	_Lcd_Port
  9501  1B17                     l3700:
  9502                           
  9503                           ;LCD.c: 59:     RC1 = 1;
  9504  1B17  1283               	bcf	3,5	;RP0=0, select bank0
  9505  1B18  1303               	bcf	3,6	;RP1=0, select bank0
  9506  1B19  1487               	bsf	7,1	;volatile
  9507  1B1A                     l3702:
  9508                           
  9509                           ;LCD.c: 60:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9510  1B1A  300B               	movlw	11
  9511  1B1B  00F5               	movwf	??_Lcd_Cmd+1
  9512  1B1C  3062               	movlw	98
  9513  1B1D  00F4               	movwf	??_Lcd_Cmd
  9514  1B1E                     u7387:
  9515  1B1E  0BF4               	decfsz	??_Lcd_Cmd,f
  9516  1B1F  2B1E               	goto	u7387
  9517  1B20  0BF5               	decfsz	??_Lcd_Cmd+1,f
  9518  1B21  2B1E               	goto	u7387
  9519  1B22  0000               	nop
  9520  1B23                     l3704:
  9521                           
  9522                           ;LCD.c: 61:     RC1 = 0;
  9523  1B23  1283               	bcf	3,5	;RP0=0, select bank0
  9524  1B24  1303               	bcf	3,6	;RP1=0, select bank0
  9525  1B25  1087               	bcf	7,1	;volatile
  9526  1B26                     l181:
  9527  1B26  0008               	return
  9528  1B27                     __end_of_Lcd_Cmd:
  9529                           
  9530                           	psect	text37
  9531  1BD7                     __ptext37:	
  9532 ;; *************** function _Lcd_Port *****************
  9533 ;; Defined at:
  9534 ;;		line 13 in file "LCD.c"
  9535 ;; Parameters:    Size  Location     Type
  9536 ;;  a               1    wreg     unsigned char 
  9537 ;; Auto vars:     Size  Location     Type
  9538 ;;  a               1    3[COMMON] unsigned char 
  9539 ;; Return value:  Size  Location     Type
  9540 ;;                  1    wreg      void 
  9541 ;; Registers used:
  9542 ;;		wreg
  9543 ;; Tracked objects:
  9544 ;;		On entry : 0/0
  9545 ;;		On exit  : 0/0
  9546 ;;		Unchanged: 0/0
  9547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9548 ;;      Params:         0       0       0       0       0
  9549 ;;      Locals:         1       0       0       0       0
  9550 ;;      Temps:          0       0       0       0       0
  9551 ;;      Totals:         1       0       0       0       0
  9552 ;;Total ram usage:        1 bytes
  9553 ;; Hardware stack levels used:    1
  9554 ;; Hardware stack levels required when called:    2
  9555 ;; This function calls:
  9556 ;;		Nothing
  9557 ;; This function is called by:
  9558 ;;		_Lcd_Cmd
  9559 ;;		_Lcd_Init
  9560 ;;		_Lcd_Write_Char
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           
  9565                           ;psect for function _Lcd_Port
  9566  1BD7                     _Lcd_Port:
  9567                           
  9568                           ;incstack = 0
  9569                           ; Regs used in _Lcd_Port: [wreg]
  9570                           ;Lcd_Port@a stored from wreg
  9571  1BD7  00F3               	movwf	Lcd_Port@a
  9572  1BD8                     l3634:
  9573                           
  9574                           ;LCD.c: 15:     if (a & 1)
  9575  1BD8  1C73               	btfss	Lcd_Port@a,0
  9576  1BD9  2BDB               	goto	u5791
  9577  1BDA  2BDC               	goto	u5790
  9578  1BDB                     u5791:
  9579  1BDB  2BE0               	goto	l162
  9580  1BDC                     u5790:
  9581  1BDC                     l3636:
  9582                           
  9583                           ;LCD.c: 16:         RD0 = 1;
  9584  1BDC  1283               	bcf	3,5	;RP0=0, select bank0
  9585  1BDD  1303               	bcf	3,6	;RP1=0, select bank0
  9586  1BDE  1408               	bsf	8,0	;volatile
  9587  1BDF  2BE3               	goto	l163
  9588  1BE0                     l162:	
  9589                           ;LCD.c: 17:     else
  9590                           
  9591                           
  9592                           ;LCD.c: 18:         RD0 = 0;
  9593  1BE0  1283               	bcf	3,5	;RP0=0, select bank0
  9594  1BE1  1303               	bcf	3,6	;RP1=0, select bank0
  9595  1BE2  1008               	bcf	8,0	;volatile
  9596  1BE3                     l163:
  9597                           
  9598                           ;LCD.c: 20:     if (a & 2)
  9599  1BE3  1CF3               	btfss	Lcd_Port@a,1
  9600  1BE4  2BE6               	goto	u5801
  9601  1BE5  2BE7               	goto	u5800
  9602  1BE6                     u5801:
  9603  1BE6  2BE9               	goto	l164
  9604  1BE7                     u5800:
  9605  1BE7                     l3638:
  9606                           
  9607                           ;LCD.c: 21:         RD1 = 1;
  9608  1BE7  1488               	bsf	8,1	;volatile
  9609  1BE8  2BEA               	goto	l165
  9610  1BE9                     l164:	
  9611                           ;LCD.c: 22:     else
  9612                           
  9613                           
  9614                           ;LCD.c: 23:         RD1 = 0;
  9615  1BE9  1088               	bcf	8,1	;volatile
  9616  1BEA                     l165:
  9617                           
  9618                           ;LCD.c: 25:     if (a & 4)
  9619  1BEA  1D73               	btfss	Lcd_Port@a,2
  9620  1BEB  2BED               	goto	u5811
  9621  1BEC  2BEE               	goto	u5810
  9622  1BED                     u5811:
  9623  1BED  2BF0               	goto	l166
  9624  1BEE                     u5810:
  9625  1BEE                     l3640:
  9626                           
  9627                           ;LCD.c: 26:         RD2 = 1;
  9628  1BEE  1508               	bsf	8,2	;volatile
  9629  1BEF  2BF1               	goto	l167
  9630  1BF0                     l166:	
  9631                           ;LCD.c: 27:     else
  9632                           
  9633                           
  9634                           ;LCD.c: 28:         RD2 = 0;
  9635  1BF0  1108               	bcf	8,2	;volatile
  9636  1BF1                     l167:
  9637                           
  9638                           ;LCD.c: 30:     if (a & 8)
  9639  1BF1  1DF3               	btfss	Lcd_Port@a,3
  9640  1BF2  2BF4               	goto	u5821
  9641  1BF3  2BF5               	goto	u5820
  9642  1BF4                     u5821:
  9643  1BF4  2BF7               	goto	l168
  9644  1BF5                     u5820:
  9645  1BF5                     l3642:
  9646                           
  9647                           ;LCD.c: 31:         RD3 = 1;
  9648  1BF5  1588               	bsf	8,3	;volatile
  9649  1BF6  2BF8               	goto	l169
  9650  1BF7                     l168:	
  9651                           ;LCD.c: 32:     else
  9652                           
  9653                           
  9654                           ;LCD.c: 33:         RD3 = 0;
  9655  1BF7  1188               	bcf	8,3	;volatile
  9656  1BF8                     l169:
  9657                           
  9658                           ;LCD.c: 35:     if (a & 16)
  9659  1BF8  1E73               	btfss	Lcd_Port@a,4
  9660  1BF9  2BFB               	goto	u5831
  9661  1BFA  2BFC               	goto	u5830
  9662  1BFB                     u5831:
  9663  1BFB  2BFE               	goto	l170
  9664  1BFC                     u5830:
  9665  1BFC                     l3644:
  9666                           
  9667                           ;LCD.c: 36:         RD4 = 1;
  9668  1BFC  1608               	bsf	8,4	;volatile
  9669  1BFD  2BFF               	goto	l171
  9670  1BFE                     l170:	
  9671                           ;LCD.c: 37:     else
  9672                           
  9673                           
  9674                           ;LCD.c: 38:         RD4 = 0;
  9675  1BFE  1208               	bcf	8,4	;volatile
  9676  1BFF                     l171:
  9677                           
  9678                           ;LCD.c: 40:     if (a & 32)
  9679  1BFF  1EF3               	btfss	Lcd_Port@a,5
  9680  1C00  2C02               	goto	u5841
  9681  1C01  2C03               	goto	u5840
  9682  1C02                     u5841:
  9683  1C02  2C05               	goto	l172
  9684  1C03                     u5840:
  9685  1C03                     l3646:
  9686                           
  9687                           ;LCD.c: 41:         RD5 = 1;
  9688  1C03  1688               	bsf	8,5	;volatile
  9689  1C04  2C06               	goto	l173
  9690  1C05                     l172:	
  9691                           ;LCD.c: 42:     else
  9692                           
  9693                           
  9694                           ;LCD.c: 43:         RD5 = 0;
  9695  1C05  1288               	bcf	8,5	;volatile
  9696  1C06                     l173:
  9697                           
  9698                           ;LCD.c: 45:     if (a & 64)
  9699  1C06  1F73               	btfss	Lcd_Port@a,6
  9700  1C07  2C09               	goto	u5851
  9701  1C08  2C0A               	goto	u5850
  9702  1C09                     u5851:
  9703  1C09  2C0C               	goto	l174
  9704  1C0A                     u5850:
  9705  1C0A                     l3648:
  9706                           
  9707                           ;LCD.c: 46:         RD6 = 1;
  9708  1C0A  1708               	bsf	8,6	;volatile
  9709  1C0B  2C0D               	goto	l175
  9710  1C0C                     l174:	
  9711                           ;LCD.c: 47:     else
  9712                           
  9713                           
  9714                           ;LCD.c: 48:         RD6 = 0;
  9715  1C0C  1308               	bcf	8,6	;volatile
  9716  1C0D                     l175:
  9717                           
  9718                           ;LCD.c: 50:     if (a & 128)
  9719  1C0D  1FF3               	btfss	Lcd_Port@a,7
  9720  1C0E  2C10               	goto	u5861
  9721  1C0F  2C11               	goto	u5860
  9722  1C10                     u5861:
  9723  1C10  2C13               	goto	l176
  9724  1C11                     u5860:
  9725  1C11                     l3650:
  9726                           
  9727                           ;LCD.c: 51:         RD7 = 1;
  9728  1C11  1788               	bsf	8,7	;volatile
  9729  1C12  2C14               	goto	l178
  9730  1C13                     l176:	
  9731                           ;LCD.c: 52:     else
  9732                           
  9733                           
  9734                           ;LCD.c: 53:         RD7 = 0;
  9735  1C13  1388               	bcf	8,7	;volatile
  9736  1C14                     l178:
  9737  1C14  0008               	return
  9738  1C15                     __end_of_Lcd_Port:
  9739                           
  9740                           	psect	text38
  9741  1ABE                     __ptext38:	
  9742 ;; *************** function _isr *****************
  9743 ;; Defined at:
  9744 ;;		line 86 in file "main.c"
  9745 ;; Parameters:    Size  Location     Type
  9746 ;;		None
  9747 ;; Auto vars:     Size  Location     Type
  9748 ;;		None
  9749 ;; Return value:  Size  Location     Type
  9750 ;;                  1    wreg      void 
  9751 ;; Registers used:
  9752 ;;		wreg, status,2, status,0, pclath, cstack
  9753 ;; Tracked objects:
  9754 ;;		On entry : 0/0
  9755 ;;		On exit  : 0/0
  9756 ;;		Unchanged: 0/0
  9757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9758 ;;      Params:         0       0       0       0       0
  9759 ;;      Locals:         0       0       0       0       0
  9760 ;;      Temps:          2       0       0       0       0
  9761 ;;      Totals:         2       0       0       0       0
  9762 ;;Total ram usage:        2 bytes
  9763 ;; Hardware stack levels used:    1
  9764 ;; Hardware stack levels required when called:    1
  9765 ;; This function calls:
  9766 ;;		_int_adc
  9767 ;; This function is called by:
  9768 ;;		Interrupt level 1
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           
  9773                           ;psect for function _isr
  9774  1ABE                     _isr:
  9775  1ABE                     i1l3542:
  9776                           
  9777                           ;main.c: 88:     if (PIR1bits.ADIF){
  9778  1ABE  1283               	bcf	3,5	;RP0=0, select bank0
  9779  1ABF  1303               	bcf	3,6	;RP1=0, select bank0
  9780  1AC0  1F0C               	btfss	12,6	;volatile
  9781  1AC1  2AC3               	goto	u577_21
  9782  1AC2  2AC4               	goto	u577_20
  9783  1AC3                     u577_21:
  9784  1AC3  2AC9               	goto	i1l92
  9785  1AC4                     u577_20:
  9786  1AC4                     i1l3544:
  9787                           
  9788                           ;main.c: 89:         int_adc();
  9789  1AC4  160A  118A  2010  160A  158A  	fcall	_int_adc
  9790  1AC9                     i1l92:
  9791  1AC9  0872               	movf	??_isr+1,w
  9792  1ACA  008A               	movwf	10
  9793  1ACB  0E71               	swapf	??_isr,w
  9794  1ACC  0083               	movwf	3
  9795  1ACD  0EFE               	swapf	btemp,f
  9796  1ACE  0E7E               	swapf	btemp,w
  9797  1ACF  0009               	retfie
  9798  1AD0                     __end_of_isr:
  9799                           
  9800                           	psect	intentry
  9801  0004                     __pintentry:	
  9802                           ;incstack = 0
  9803                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  9804                           
  9805  0004                     interrupt_function:
  9806  007E                     saved_w	set	btemp
  9807  0004  00FE               	movwf	btemp
  9808  0005  0E03               	swapf	3,w
  9809  0006  00F1               	movwf	??_isr
  9810  0007  080A               	movf	10,w
  9811  0008  00F2               	movwf	??_isr+1
  9812  0009  160A  158A  2ABE   	ljmp	_isr
  9813                           
  9814                           	psect	text39
  9815  1010                     __ptext39:	
  9816 ;; *************** function _int_adc *****************
  9817 ;; Defined at:
  9818 ;;		line 93 in file "main.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;		None
  9821 ;; Auto vars:     Size  Location     Type
  9822 ;;		None
  9823 ;; Return value:  Size  Location     Type
  9824 ;;                  1    wreg      void 
  9825 ;; Registers used:
  9826 ;;		wreg, status,2, status,0
  9827 ;; Tracked objects:
  9828 ;;		On entry : 0/0
  9829 ;;		On exit  : 0/0
  9830 ;;		Unchanged: 0/0
  9831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9832 ;;      Params:         0       0       0       0       0
  9833 ;;      Locals:         0       0       0       0       0
  9834 ;;      Temps:          1       0       0       0       0
  9835 ;;      Totals:         1       0       0       0       0
  9836 ;;Total ram usage:        1 bytes
  9837 ;; Hardware stack levels used:    1
  9838 ;; This function calls:
  9839 ;;		Nothing
  9840 ;; This function is called by:
  9841 ;;		_isr
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845                           
  9846                           ;psect for function _int_adc
  9847  1010                     _int_adc:
  9848  1010                     i1l3182:	
  9849                           ;incstack = 0
  9850                           ; Regs used in _int_adc: [wreg+status,2+status,0]
  9851                           
  9852                           
  9853                           ;main.c: 94:     if(ADCON0bits.CHS == 5){
  9854  1010  1283               	bcf	3,5	;RP0=0, select bank0
  9855  1011  1303               	bcf	3,6	;RP1=0, select bank0
  9856  1012  0C1F               	rrf	31,w	;volatile
  9857  1013  00F0               	movwf	??_int_adc
  9858  1014  0C70               	rrf	??_int_adc,w
  9859  1015  390F               	andlw	15
  9860  1016  3A05               	xorlw	5
  9861  1017  1D03               	skipz
  9862  1018  281A               	goto	u522_21
  9863  1019  281B               	goto	u522_20
  9864  101A                     u522_21:
  9865  101A  2824               	goto	i1l3188
  9866  101B                     u522_20:
  9867  101B                     i1l3184:
  9868                           
  9869                           ;main.c: 95:         V1 = ADRESH;
  9870  101B  081E               	movf	30,w	;volatile
  9871  101C  00F0               	movwf	??_int_adc
  9872  101D  0870               	movf	??_int_adc,w
  9873  101E  00EF               	movwf	_V1
  9874  101F                     i1l3186:
  9875                           
  9876                           ;main.c: 96:         ADCON0bits.CHS = 6;
  9877  101F  081F               	movf	31,w	;volatile
  9878  1020  39C3               	andlw	-61
  9879  1021  3818               	iorlw	24
  9880  1022  009F               	movwf	31	;volatile
  9881                           
  9882                           ;main.c: 97:         }
  9883  1023  2839               	goto	i1l3194
  9884  1024                     i1l3188:
  9885  1024  0C1F               	rrf	31,w	;volatile
  9886  1025  00F0               	movwf	??_int_adc
  9887  1026  0C70               	rrf	??_int_adc,w
  9888  1027  390F               	andlw	15
  9889  1028  3A06               	xorlw	6
  9890  1029  1D03               	skipz
  9891  102A  282C               	goto	u523_21
  9892  102B  282D               	goto	u523_20
  9893  102C                     u523_21:
  9894  102C  2839               	goto	i1l3194
  9895  102D                     u523_20:
  9896  102D                     i1l3190:
  9897                           
  9898                           ;main.c: 99:         V2 = ADRESH;
  9899  102D  081E               	movf	30,w	;volatile
  9900  102E  00F0               	movwf	??_int_adc
  9901  102F  0870               	movf	??_int_adc,w
  9902  1030  1683               	bsf	3,5	;RP0=1, select bank1
  9903  1031  1303               	bcf	3,6	;RP1=0, select bank1
  9904  1032  00D9               	movwf	_V2^(0+128)
  9905  1033                     i1l3192:
  9906                           
  9907                           ;main.c: 100:         ADCON0bits.CHS = 5;
  9908  1033  1283               	bcf	3,5	;RP0=0, select bank0
  9909  1034  1303               	bcf	3,6	;RP1=0, select bank0
  9910  1035  081F               	movf	31,w	;volatile
  9911  1036  39C3               	andlw	-61
  9912  1037  3814               	iorlw	20
  9913  1038  009F               	movwf	31	;volatile
  9914  1039                     i1l3194:
  9915                           
  9916                           ;main.c: 102:     PIR1bits.ADIF = 0;
  9917  1039  130C               	bcf	12,6	;volatile
  9918  103A                     i1l98:
  9919  103A  0008               	return
  9920  103B                     __end_of_int_adc:
  9921  007E                     btemp	set	126	;btemp
  9922  007E                     wtemp0	set	126
  9923                           
  9924                           	psect	config
  9925                           
  9926                           ;Config register CONFIG1 @ 0x2007
  9927                           ;	Oscillator Selection bits
  9928                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  9929                           ;	Watchdog Timer Enable bit
  9930                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9931                           ;	Power-up Timer Enable bit
  9932                           ;	PWRTE = OFF, PWRT disabled
  9933                           ;	RE3/MCLR pin function select bit
  9934                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9935                           ;	Code Protection bit
  9936                           ;	CP = OFF, Program memory code protection is disabled
  9937                           ;	Data Code Protection bit
  9938                           ;	CPD = OFF, Data memory code protection is disabled
  9939                           ;	Brown Out Reset Selection bits
  9940                           ;	BOREN = OFF, BOR disabled
  9941                           ;	Internal External Switchover bit
  9942                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9943                           ;	Fail-Safe Clock Monitor Enabled bit
  9944                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9945                           ;	Low Voltage Programming Enable bit
  9946                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9947                           ;	In-Circuit Debugger Mode bit
  9948                           ;	DEBUG = 0x1, unprogrammed default
  9949  2007                     	org	8199
  9950  2007  20D6               	dw	8406
  9951                           
  9952                           ;Config register CONFIG2 @ 0x2008
  9953                           ;	Brown-out Reset Selection bit
  9954                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9955                           ;	Flash Program Memory Self Write Enable bits
  9956                           ;	WRT = OFF, Write protection off
  9957  2008                     	org	8200
  9958  2008  3FFF               	dw	16383
  9959                           
  9960                           	psect	text1_split_1
  9961  0020                     u6950:
  9962  0020                     l4116:
  9963  0020  1683               	bsf	3,5	;RP0=1, select bank1
  9964  0021  1303               	bcf	3,6	;RP1=0, select bank1
  9965  0022  0848               	movf	(sprintf@fval+3)^(0+128),w
  9966  0023  1283               	bcf	3,5	;RP0=0, select bank0
  9967  0024  1303               	bcf	3,6	;RP1=0, select bank0
  9968  0025  00A3               	movwf	___fleq@ff1+3
  9969  0026  1683               	bsf	3,5	;RP0=1, select bank1
  9970  0027  1303               	bcf	3,6	;RP1=0, select bank1
  9971  0028  0847               	movf	(sprintf@fval+2)^(0+128),w
  9972  0029  1283               	bcf	3,5	;RP0=0, select bank0
  9973  002A  1303               	bcf	3,6	;RP1=0, select bank0
  9974  002B  00A2               	movwf	___fleq@ff1+2
  9975  002C  1683               	bsf	3,5	;RP0=1, select bank1
  9976  002D  1303               	bcf	3,6	;RP1=0, select bank1
  9977  002E  0846               	movf	(sprintf@fval+1)^(0+128),w
  9978  002F  1283               	bcf	3,5	;RP0=0, select bank0
  9979  0030  1303               	bcf	3,6	;RP1=0, select bank0
  9980  0031  00A1               	movwf	___fleq@ff1+1
  9981  0032  1683               	bsf	3,5	;RP0=1, select bank1
  9982  0033  1303               	bcf	3,6	;RP1=0, select bank1
  9983  0034  0845               	movf	sprintf@fval^(0+128),w
  9984  0035  1283               	bcf	3,5	;RP0=0, select bank0
  9985  0036  1303               	bcf	3,6	;RP1=0, select bank0
  9986  0037  00A0               	movwf	___fleq@ff1
  9987  0038  3000               	movlw	0
  9988  0039  00A7               	movwf	___fleq@ff2+3
  9989  003A  3000               	movlw	0
  9990  003B  00A6               	movwf	___fleq@ff2+2
  9991  003C  3000               	movlw	0
  9992  003D  00A5               	movwf	___fleq@ff2+1
  9993  003E  3000               	movlw	0
  9994  003F  00A4               	movwf	___fleq@ff2
  9995  0040  160A  158A  2529  120A  118A  	fcall	___fleq
  9996  0045  1803               	btfsc	3,0
  9997  0046  2848               	goto	u6961
  9998  0047  2849               	goto	u6960
  9999  0048                     u6961:
 10000  0048  292B               	goto	l4136
 10001  0049                     u6960:
 10002  0049                     l4118:
 10003  0049  1683               	bsf	3,5	;RP0=1, select bank1
 10004  004A  1303               	bcf	3,6	;RP1=0, select bank1
 10005  004B  0848               	movf	(sprintf@fval+3)^(0+128),w
 10006  004C  1283               	bcf	3,5	;RP0=0, select bank0
 10007  004D  1303               	bcf	3,6	;RP1=0, select bank0
 10008  004E  00DA               	movwf	___fltol@f1+3
 10009  004F  1683               	bsf	3,5	;RP0=1, select bank1
 10010  0050  1303               	bcf	3,6	;RP1=0, select bank1
 10011  0051  0847               	movf	(sprintf@fval+2)^(0+128),w
 10012  0052  1283               	bcf	3,5	;RP0=0, select bank0
 10013  0053  1303               	bcf	3,6	;RP1=0, select bank0
 10014  0054  00D9               	movwf	___fltol@f1+2
 10015  0055  1683               	bsf	3,5	;RP0=1, select bank1
 10016  0056  1303               	bcf	3,6	;RP1=0, select bank1
 10017  0057  0846               	movf	(sprintf@fval+1)^(0+128),w
 10018  0058  1283               	bcf	3,5	;RP0=0, select bank0
 10019  0059  1303               	bcf	3,6	;RP1=0, select bank0
 10020  005A  00D8               	movwf	___fltol@f1+1
 10021  005B  1683               	bsf	3,5	;RP0=1, select bank1
 10022  005C  1303               	bcf	3,6	;RP1=0, select bank1
 10023  005D  0845               	movf	sprintf@fval^(0+128),w
 10024  005E  1283               	bcf	3,5	;RP0=0, select bank0
 10025  005F  1303               	bcf	3,6	;RP1=0, select bank0
 10026  0060  00D7               	movwf	___fltol@f1
 10027  0061  160A  158A  26E0  120A  118A  	fcall	___fltol
 10028  0066  1283               	bcf	3,5	;RP0=0, select bank0
 10029  0067  1303               	bcf	3,6	;RP1=0, select bank0
 10030  0068  085A               	movf	?___fltol+3,w
 10031  0069  0459               	iorwf	?___fltol+2,w
 10032  006A  0458               	iorwf	?___fltol+1,w
 10033  006B  0457               	iorwf	?___fltol,w
 10034  006C  1D03               	skipz
 10035  006D  286F               	goto	u6971
 10036  006E  2870               	goto	u6970
 10037  006F                     u6971:
 10038  006F  292B               	goto	l4136
 10039  0070                     u6970:
 10040  0070                     l4120:
 10041  0070  1683               	bsf	3,5	;RP0=1, select bank1
 10042  0071  1303               	bcf	3,6	;RP1=0, select bank1
 10043  0072  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10044  0073  3A80               	xorlw	128
 10045  0074  00FF               	movwf	btemp+1
 10046  0075  3080               	movlw	128
 10047  0076  027F               	subwf	btemp+1,w
 10048  0077  1D03               	skipz
 10049  0078  287B               	goto	u6985
 10050  0079  3002               	movlw	2
 10051  007A  0243               	subwf	sprintf@eexp^(0+128),w
 10052  007B                     u6985:
 10053  007B  1C03               	skipc
 10054  007C  287E               	goto	u6981
 10055  007D  287F               	goto	u6980
 10056  007E                     u6981:
 10057  007E  292B               	goto	l4136
 10058  007F                     u6980:
 10059  007F                     l4122:
 10060                           
 10061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10062  007F  1683               	bsf	3,5	;RP0=1, select bank1
 10063  0080  1303               	bcf	3,6	;RP1=0, select bank1
 10064  0081  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 10065  0082  1283               	bcf	3,5	;RP0=0, select bank0
 10066  0083  1303               	bcf	3,6	;RP1=0, select bank0
 10067  0084  00A3               	movwf	___flge@ff1+3
 10068  0085  1683               	bsf	3,5	;RP0=1, select bank1
 10069  0086  1303               	bcf	3,6	;RP1=0, select bank1
 10070  0087  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 10071  0088  1283               	bcf	3,5	;RP0=0, select bank0
 10072  0089  1303               	bcf	3,6	;RP1=0, select bank0
 10073  008A  00A2               	movwf	___flge@ff1+2
 10074  008B  1683               	bsf	3,5	;RP0=1, select bank1
 10075  008C  1303               	bcf	3,6	;RP1=0, select bank1
 10076  008D  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 10077  008E  1283               	bcf	3,5	;RP0=0, select bank0
 10078  008F  1303               	bcf	3,6	;RP1=0, select bank0
 10079  0090  00A1               	movwf	___flge@ff1+1
 10080  0091  1683               	bsf	3,5	;RP0=1, select bank1
 10081  0092  1303               	bcf	3,6	;RP1=0, select bank1
 10082  0093  083F               	movf	sprintf@tmpval^(0+128),w
 10083  0094  1283               	bcf	3,5	;RP0=0, select bank0
 10084  0095  1303               	bcf	3,6	;RP1=0, select bank0
 10085  0096  00A0               	movwf	___flge@ff1
 10086  0097  3040               	movlw	64
 10087  0098  00A7               	movwf	___flge@ff2+3
 10088  0099  3089               	movlw	137
 10089  009A  00A6               	movwf	___flge@ff2+2
 10090  009B  3070               	movlw	112
 10091  009C  00A5               	movwf	___flge@ff2+1
 10092  009D  305F               	movlw	95
 10093  009E  00A4               	movwf	___flge@ff2
 10094  009F  160A  158A  275C  120A  118A  	fcall	___flge
 10095  00A4  1803               	btfsc	3,0
 10096  00A5  28A7               	goto	u6991
 10097  00A6  28A8               	goto	u6990
 10098  00A7                     u6991:
 10099  00A7  28B1               	goto	l4126
 10100  00A8                     u6990:
 10101  00A8                     l4124:
 10102                           
 10103                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10104  00A8  30F7               	movlw	247
 10105  00A9  1683               	bsf	3,5	;RP0=1, select bank1
 10106  00AA  1303               	bcf	3,6	;RP1=0, select bank1
 10107  00AB  07C3               	addwf	sprintf@eexp^(0+128),f
 10108  00AC  1803               	skipnc
 10109  00AD  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10110  00AE  30FF               	movlw	255
 10111  00AF  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10112                           
 10113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10114  00B0  28B9               	goto	l4128
 10115  00B1                     l4126:
 10116                           
 10117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10118  00B1  30F8               	movlw	248
 10119  00B2  1683               	bsf	3,5	;RP0=1, select bank1
 10120  00B3  1303               	bcf	3,6	;RP1=0, select bank1
 10121  00B4  07C3               	addwf	sprintf@eexp^(0+128),f
 10122  00B5  1803               	skipnc
 10123  00B6  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10124  00B7  30FF               	movlw	255
 10125  00B8  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10126  00B9                     l4128:
 10127                           
 10128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10129  00B9  0843               	movf	sprintf@eexp^(0+128),w
 10130  00BA  120A  158A  249D  120A  118A  	fcall	_scale
 10131  00BF  1283               	bcf	3,5	;RP0=0, select bank0
 10132  00C0  1303               	bcf	3,6	;RP1=0, select bank0
 10133  00C1  0847               	movf	?_scale+3,w
 10134  00C2  1683               	bsf	3,5	;RP0=1, select bank1
 10135  00C3  1303               	bcf	3,6	;RP1=0, select bank1
 10136  00C4  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10137  00C5  1283               	bcf	3,5	;RP0=0, select bank0
 10138  00C6  1303               	bcf	3,6	;RP1=0, select bank0
 10139  00C7  0846               	movf	?_scale+2,w
 10140  00C8  1683               	bsf	3,5	;RP0=1, select bank1
 10141  00C9  1303               	bcf	3,6	;RP1=0, select bank1
 10142  00CA  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10143  00CB  1283               	bcf	3,5	;RP0=0, select bank0
 10144  00CC  1303               	bcf	3,6	;RP1=0, select bank0
 10145  00CD  0845               	movf	?_scale+1,w
 10146  00CE  1683               	bsf	3,5	;RP0=1, select bank1
 10147  00CF  1303               	bcf	3,6	;RP1=0, select bank1
 10148  00D0  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10149  00D1  1283               	bcf	3,5	;RP0=0, select bank0
 10150  00D2  1303               	bcf	3,6	;RP1=0, select bank0
 10151  00D3  0844               	movf	?_scale,w
 10152  00D4  1683               	bsf	3,5	;RP0=1, select bank1
 10153  00D5  1303               	bcf	3,6	;RP1=0, select bank1
 10154  00D6  00BF               	movwf	sprintf@tmpval^(0+128)
 10155  00D7                     l4130:
 10156  00D7  0848               	movf	(sprintf@fval+3)^(0+128),w
 10157  00D8  1283               	bcf	3,5	;RP0=0, select bank0
 10158  00D9  1303               	bcf	3,6	;RP1=0, select bank0
 10159  00DA  00A3               	movwf	__div_to_l_@f1+3
 10160  00DB  1683               	bsf	3,5	;RP0=1, select bank1
 10161  00DC  1303               	bcf	3,6	;RP1=0, select bank1
 10162  00DD  0847               	movf	(sprintf@fval+2)^(0+128),w
 10163  00DE  1283               	bcf	3,5	;RP0=0, select bank0
 10164  00DF  1303               	bcf	3,6	;RP1=0, select bank0
 10165  00E0  00A2               	movwf	__div_to_l_@f1+2
 10166  00E1  1683               	bsf	3,5	;RP0=1, select bank1
 10167  00E2  1303               	bcf	3,6	;RP1=0, select bank1
 10168  00E3  0846               	movf	(sprintf@fval+1)^(0+128),w
 10169  00E4  1283               	bcf	3,5	;RP0=0, select bank0
 10170  00E5  1303               	bcf	3,6	;RP1=0, select bank0
 10171  00E6  00A1               	movwf	__div_to_l_@f1+1
 10172  00E7  1683               	bsf	3,5	;RP0=1, select bank1
 10173  00E8  1303               	bcf	3,6	;RP1=0, select bank1
 10174  00E9  0845               	movf	sprintf@fval^(0+128),w
 10175  00EA  1283               	bcf	3,5	;RP0=0, select bank0
 10176  00EB  1303               	bcf	3,6	;RP1=0, select bank0
 10177  00EC  00A0               	movwf	__div_to_l_@f1
 10178  00ED  1683               	bsf	3,5	;RP0=1, select bank1
 10179  00EE  1303               	bcf	3,6	;RP1=0, select bank1
 10180  00EF  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 10181  00F0  1283               	bcf	3,5	;RP0=0, select bank0
 10182  00F1  1303               	bcf	3,6	;RP1=0, select bank0
 10183  00F2  00A7               	movwf	__div_to_l_@f2+3
 10184  00F3  1683               	bsf	3,5	;RP0=1, select bank1
 10185  00F4  1303               	bcf	3,6	;RP1=0, select bank1
 10186  00F5  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 10187  00F6  1283               	bcf	3,5	;RP0=0, select bank0
 10188  00F7  1303               	bcf	3,6	;RP1=0, select bank0
 10189  00F8  00A6               	movwf	__div_to_l_@f2+2
 10190  00F9  1683               	bsf	3,5	;RP0=1, select bank1
 10191  00FA  1303               	bcf	3,6	;RP1=0, select bank1
 10192  00FB  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 10193  00FC  1283               	bcf	3,5	;RP0=0, select bank0
 10194  00FD  1303               	bcf	3,6	;RP1=0, select bank0
 10195  00FE  00A5               	movwf	__div_to_l_@f2+1
 10196  00FF  1683               	bsf	3,5	;RP0=1, select bank1
 10197  0100  1303               	bcf	3,6	;RP1=0, select bank1
 10198  0101  083F               	movf	sprintf@tmpval^(0+128),w
 10199  0102  1283               	bcf	3,5	;RP0=0, select bank0
 10200  0103  1303               	bcf	3,6	;RP1=0, select bank0
 10201  0104  00A4               	movwf	__div_to_l_@f2
 10202  0105  160A  118A  21B4  120A  118A  	fcall	__div_to_l_
 10203  010A  1283               	bcf	3,5	;RP0=0, select bank0
 10204  010B  1303               	bcf	3,6	;RP1=0, select bank0
 10205  010C  0823               	movf	?__div_to_l_+3,w
 10206  010D  1683               	bsf	3,5	;RP0=1, select bank1
 10207  010E  1303               	bcf	3,6	;RP1=0, select bank1
 10208  010F  00BA               	movwf	(sprintf@val+3)^(0+128)
 10209  0110  1283               	bcf	3,5	;RP0=0, select bank0
 10210  0111  1303               	bcf	3,6	;RP1=0, select bank0
 10211  0112  0822               	movf	?__div_to_l_+2,w
 10212  0113  1683               	bsf	3,5	;RP0=1, select bank1
 10213  0114  1303               	bcf	3,6	;RP1=0, select bank1
 10214  0115  00B9               	movwf	(sprintf@val+2)^(0+128)
 10215  0116  1283               	bcf	3,5	;RP0=0, select bank0
 10216  0117  1303               	bcf	3,6	;RP1=0, select bank0
 10217  0118  0821               	movf	?__div_to_l_+1,w
 10218  0119  1683               	bsf	3,5	;RP0=1, select bank1
 10219  011A  1303               	bcf	3,6	;RP1=0, select bank1
 10220  011B  00B8               	movwf	(sprintf@val+1)^(0+128)
 10221  011C  1283               	bcf	3,5	;RP0=0, select bank0
 10222  011D  1303               	bcf	3,6	;RP1=0, select bank0
 10223  011E  0820               	movf	?__div_to_l_,w
 10224  011F  1683               	bsf	3,5	;RP0=1, select bank1
 10225  0120  1303               	bcf	3,6	;RP1=0, select bank1
 10226  0121  00B7               	movwf	sprintf@val^(0+128)
 10227  0122                     l4134:
 10228                           
 10229                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10230  0122  3000               	movlw	0
 10231  0123  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10232  0124  3000               	movlw	0
 10233  0125  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10234  0126  3000               	movlw	0
 10235  0127  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10236  0128  3000               	movlw	0
 10237  0129  00C5               	movwf	sprintf@fval^(0+128)
 10238                           
 10239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10240  012A  2991               	goto	l4142
 10241  012B                     l4136:
 10242                           
 10243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10244  012B  1683               	bsf	3,5	;RP0=1, select bank1
 10245  012C  1303               	bcf	3,6	;RP1=0, select bank1
 10246  012D  0848               	movf	(sprintf@fval+3)^(0+128),w
 10247  012E  1283               	bcf	3,5	;RP0=0, select bank0
 10248  012F  1303               	bcf	3,6	;RP1=0, select bank0
 10249  0130  00DA               	movwf	___fltol@f1+3
 10250  0131  1683               	bsf	3,5	;RP0=1, select bank1
 10251  0132  1303               	bcf	3,6	;RP1=0, select bank1
 10252  0133  0847               	movf	(sprintf@fval+2)^(0+128),w
 10253  0134  1283               	bcf	3,5	;RP0=0, select bank0
 10254  0135  1303               	bcf	3,6	;RP1=0, select bank0
 10255  0136  00D9               	movwf	___fltol@f1+2
 10256  0137  1683               	bsf	3,5	;RP0=1, select bank1
 10257  0138  1303               	bcf	3,6	;RP1=0, select bank1
 10258  0139  0846               	movf	(sprintf@fval+1)^(0+128),w
 10259  013A  1283               	bcf	3,5	;RP0=0, select bank0
 10260  013B  1303               	bcf	3,6	;RP1=0, select bank0
 10261  013C  00D8               	movwf	___fltol@f1+1
 10262  013D  1683               	bsf	3,5	;RP0=1, select bank1
 10263  013E  1303               	bcf	3,6	;RP1=0, select bank1
 10264  013F  0845               	movf	sprintf@fval^(0+128),w
 10265  0140  1283               	bcf	3,5	;RP0=0, select bank0
 10266  0141  1303               	bcf	3,6	;RP1=0, select bank0
 10267  0142  00D7               	movwf	___fltol@f1
 10268  0143  160A  158A  26E0  120A  118A  	fcall	___fltol
 10269  0148  1283               	bcf	3,5	;RP0=0, select bank0
 10270  0149  1303               	bcf	3,6	;RP1=0, select bank0
 10271  014A  085A               	movf	?___fltol+3,w
 10272  014B  1683               	bsf	3,5	;RP0=1, select bank1
 10273  014C  1303               	bcf	3,6	;RP1=0, select bank1
 10274  014D  00BA               	movwf	(sprintf@val+3)^(0+128)
 10275  014E  1283               	bcf	3,5	;RP0=0, select bank0
 10276  014F  1303               	bcf	3,6	;RP1=0, select bank0
 10277  0150  0859               	movf	?___fltol+2,w
 10278  0151  1683               	bsf	3,5	;RP0=1, select bank1
 10279  0152  1303               	bcf	3,6	;RP1=0, select bank1
 10280  0153  00B9               	movwf	(sprintf@val+2)^(0+128)
 10281  0154  1283               	bcf	3,5	;RP0=0, select bank0
 10282  0155  1303               	bcf	3,6	;RP1=0, select bank0
 10283  0156  0858               	movf	?___fltol+1,w
 10284  0157  1683               	bsf	3,5	;RP0=1, select bank1
 10285  0158  1303               	bcf	3,6	;RP1=0, select bank1
 10286  0159  00B8               	movwf	(sprintf@val+1)^(0+128)
 10287  015A  1283               	bcf	3,5	;RP0=0, select bank0
 10288  015B  1303               	bcf	3,6	;RP1=0, select bank0
 10289  015C  0857               	movf	?___fltol,w
 10290  015D  1683               	bsf	3,5	;RP0=1, select bank1
 10291  015E  1303               	bcf	3,6	;RP1=0, select bank1
 10292  015F  00B7               	movwf	sprintf@val^(0+128)
 10293  0160                     l4138:
 10294                           
 10295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10296  0160  083A               	movf	(sprintf@val+3)^(0+128),w
 10297  0161  00F6               	movwf	___xxtofl@val+3
 10298  0162  0839               	movf	(sprintf@val+2)^(0+128),w
 10299  0163  00F5               	movwf	___xxtofl@val+2
 10300  0164  0838               	movf	(sprintf@val+1)^(0+128),w
 10301  0165  00F4               	movwf	___xxtofl@val+1
 10302  0166  0837               	movf	sprintf@val^(0+128),w
 10303  0167  00F3               	movwf	___xxtofl@val
 10304  0168  3000               	movlw	0
 10305  0169  160A  118A  203B  120A  118A  	fcall	___xxtofl
 10306  016E  0876               	movf	?___xxtofl+3,w
 10307  016F  1683               	bsf	3,5	;RP0=1, select bank1
 10308  0170  1303               	bcf	3,6	;RP1=0, select bank1
 10309  0171  00A3               	movwf	(___flsub@a+3)^(0+128)
 10310  0172  0875               	movf	?___xxtofl+2,w
 10311  0173  00A2               	movwf	(___flsub@a+2)^(0+128)
 10312  0174  0874               	movf	?___xxtofl+1,w
 10313  0175  00A1               	movwf	(___flsub@a+1)^(0+128)
 10314  0176  0873               	movf	?___xxtofl,w
 10315  0177  00A0               	movwf	___flsub@a^(0+128)
 10316  0178  0848               	movf	(sprintf@fval+3)^(0+128),w
 10317  0179  00A7               	movwf	(___flsub@b+3)^(0+128)
 10318  017A  0847               	movf	(sprintf@fval+2)^(0+128),w
 10319  017B  00A6               	movwf	(___flsub@b+2)^(0+128)
 10320  017C  0846               	movf	(sprintf@fval+1)^(0+128),w
 10321  017D  00A5               	movwf	(___flsub@b+1)^(0+128)
 10322  017E  0845               	movf	sprintf@fval^(0+128),w
 10323  017F  00A4               	movwf	___flsub@b^(0+128)
 10324  0180  160A  158A  2579  120A  118A  	fcall	___flsub
 10325  0185  1683               	bsf	3,5	;RP0=1, select bank1
 10326  0186  1303               	bcf	3,6	;RP1=0, select bank1
 10327  0187  0823               	movf	(?___flsub+3)^(0+128),w
 10328  0188  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10329  0189  0822               	movf	(?___flsub+2)^(0+128),w
 10330  018A  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10331  018B  0821               	movf	(?___flsub+1)^(0+128),w
 10332  018C  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10333  018D  0820               	movf	?___flsub^(0+128),w
 10334  018E  00C5               	movwf	sprintf@fval^(0+128)
 10335  018F                     l4140:
 10336                           
 10337                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10338  018F  01C3               	clrf	sprintf@eexp^(0+128)
 10339  0190  01C4               	clrf	(sprintf@eexp+1)^(0+128)
 10340  0191                     l4142:
 10341                           
 10342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10343  0191  01CC               	clrf	sprintf@c^(0+128)
 10344  0192  0ACC               	incf	sprintf@c^(0+128),f
 10345  0193                     l4148:
 10346                           
 10347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10348  0193  084C               	movf	sprintf@c^(0+128),w
 10349  0194  00AD               	movwf	??_sprintf^(0+128)
 10350  0195  3001               	movlw	1
 10351  0196                     u7005:
 10352  0196  1003               	clrc
 10353  0197  0DAD               	rlf	??_sprintf^(0+128),f
 10354  0198  3EFF               	addlw	-1
 10355  0199  1D03               	skipz
 10356  019A  2996               	goto	u7005
 10357  019B  1003               	clrc
 10358  019C  0D2D               	rlf	??_sprintf^(0+128),w
 10359  019D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10360  019E  0084               	movwf	4
 10361  019F  160A  158A  200A  120A  118A  	fcall	stringdir
 10362  01A4  00AE               	movwf	(??_sprintf+1)^(0+128)
 10363  01A5  160A  158A  200A  120A  118A  	fcall	stringdir
 10364  01AA  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
 10365  01AB  160A  158A  200A  120A  118A  	fcall	stringdir
 10366  01B0  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
 10367  01B1  160A  158A  200A  120A  118A  	fcall	stringdir
 10368  01B6  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
 10369  01B7  0831               	movf	(??_sprintf+4)^(0+128),w
 10370  01B8  023A               	subwf	(sprintf@val+3)^(0+128),w
 10371  01B9  1D03               	skipz
 10372  01BA  29C5               	goto	u7015
 10373  01BB  0830               	movf	(??_sprintf+3)^(0+128),w
 10374  01BC  0239               	subwf	(sprintf@val+2)^(0+128),w
 10375  01BD  1D03               	skipz
 10376  01BE  29C5               	goto	u7015
 10377  01BF  082F               	movf	(??_sprintf+2)^(0+128),w
 10378  01C0  0238               	subwf	(sprintf@val+1)^(0+128),w
 10379  01C1  1D03               	skipz
 10380  01C2  29C5               	goto	u7015
 10381  01C3  082E               	movf	(??_sprintf+1)^(0+128),w
 10382  01C4  0237               	subwf	sprintf@val^(0+128),w
 10383  01C5                     u7015:
 10384  01C5  1803               	skipnc
 10385  01C6  29C8               	goto	u7011
 10386  01C7  29C9               	goto	u7010
 10387  01C8                     u7011:
 10388  01C8  29CA               	goto	l4152
 10389  01C9                     u7010:
 10390  01C9  29D4               	goto	l4154
 10391  01CA                     l4152:
 10392  01CA  3001               	movlw	1
 10393  01CB  00AD               	movwf	??_sprintf^(0+128)
 10394  01CC  082D               	movf	??_sprintf^(0+128),w
 10395  01CD  07CC               	addwf	sprintf@c^(0+128),f
 10396  01CE  300A               	movlw	10
 10397  01CF  064C               	xorwf	sprintf@c^(0+128),w
 10398  01D0  1D03               	btfss	3,2
 10399  01D1  29D3               	goto	u7021
 10400  01D2  29D4               	goto	u7020
 10401  01D3                     u7021:
 10402  01D3  2993               	goto	l4148
 10403  01D4                     u7020:
 10404  01D4                     l4154:
 10405                           
 10406                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10407  01D4  084C               	movf	sprintf@c^(0+128),w
 10408  01D5  074A               	addwf	sprintf@prec^(0+128),w
 10409  01D6  00AD               	movwf	??_sprintf^(0+128)
 10410  01D7  084B               	movf	(sprintf@prec+1)^(0+128),w
 10411  01D8  1803               	skipnc
 10412  01D9  0A4B               	incf	(sprintf@prec+1)^(0+128),w
 10413  01DA  00AE               	movwf	(??_sprintf^(0+128)+1)
 10414  01DB  0843               	movf	sprintf@eexp^(0+128),w
 10415  01DC  072D               	addwf	??_sprintf^(0+128),w
 10416  01DD  00AF               	movwf	(??_sprintf+2)^(0+128)
 10417  01DE  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10418  01DF  1803               	skipnc
 10419  01E0  0A44               	incf	(sprintf@eexp+1)^(0+128),w
 10420  01E1  072E               	addwf	(??_sprintf+1)^(0+128),w
 10421  01E2  00B0               	movwf	(??_sprintf+3)^(0+128)
 10422  01E3  082F               	movf	(??_sprintf+2)^(0+128),w
 10423  01E4  02BD               	subwf	sprintf@width^(0+128),f
 10424  01E5  0830               	movf	(??_sprintf+3)^(0+128),w
 10425  01E6  1C03               	skipc
 10426  01E7  03BE               	decf	(sprintf@width+1)^(0+128),f
 10427  01E8  02BE               	subwf	(sprintf@width+1)^(0+128),f
 10428                           
 10429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10430  01E9  084A               	movf	sprintf@prec^(0+128),w
 10431  01EA  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 10432  01EB  1903               	btfsc	3,2
 10433  01EC  29EE               	goto	u7031
 10434  01ED  29EF               	goto	u7030
 10435  01EE                     u7031:
 10436  01EE  29F5               	goto	l4158
 10437  01EF                     u7030:
 10438  01EF                     l4156:
 10439                           
 10440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10441  01EF  30FF               	movlw	255
 10442  01F0  07BD               	addwf	sprintf@width^(0+128),f
 10443  01F1  1803               	skipnc
 10444  01F2  0ABE               	incf	(sprintf@width+1)^(0+128),f
 10445  01F3  30FF               	movlw	255
 10446  01F4  07BE               	addwf	(sprintf@width+1)^(0+128),f
 10447  01F5                     l4158:
 10448                           
 10449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10450  01F5  3003               	movlw	3
 10451  01F6  053B               	andwf	sprintf@flag^(0+128),w
 10452  01F7  00AD               	movwf	??_sprintf^(0+128)
 10453  01F8  3000               	movlw	0
 10454  01F9  053C               	andwf	(sprintf@flag+1)^(0+128),w
 10455  01FA  00AE               	movwf	(??_sprintf+1)^(0+128)
 10456  01FB  082D               	movf	??_sprintf^(0+128),w
 10457  01FC  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10458  01FD  1903               	btfsc	3,2
 10459  01FE  2A00               	goto	u7041
 10460  01FF  2A01               	goto	u7040
 10461  0200                     u7041:
 10462  0200  2A16               	goto	l4168
 10463  0201                     u7040:
 10464  0201                     l4160:
 10465                           
 10466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10467  0201  30FF               	movlw	255
 10468  0202  07BD               	addwf	sprintf@width^(0+128),f
 10469  0203  1803               	skipnc
 10470  0204  0ABE               	incf	(sprintf@width+1)^(0+128),f
 10471  0205  30FF               	movlw	255
 10472  0206  07BE               	addwf	(sprintf@width+1)^(0+128),f
 10473  0207  2A16               	goto	l4168
 10474  0208                     l4162:
 10475                           
 10476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10477  0208  3020               	movlw	32
 10478  0209  1683               	bsf	3,5	;RP0=1, select bank1
 10479  020A  1303               	bcf	3,6	;RP1=0, select bank1
 10480  020B  00AD               	movwf	??_sprintf^(0+128)
 10481  020C  0849               	movf	sprintf@sp^(0+128),w
 10482  020D  0084               	movwf	4
 10483  020E  082D               	movf	??_sprintf^(0+128),w
 10484  020F  1383               	bcf	3,7	;select IRP bank0
 10485  0210  0080               	movwf	0
 10486  0211                     l4164:
 10487  0211  3001               	movlw	1
 10488  0212  00AD               	movwf	??_sprintf^(0+128)
 10489  0213  082D               	movf	??_sprintf^(0+128),w
 10490  0214  07C9               	addwf	sprintf@sp^(0+128),f
 10491  0215  2A01               	goto	l4160
 10492  0216                     l4168:
 10493                           
 10494                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10495  0216  083E               	movf	(sprintf@width+1)^(0+128),w
 10496  0217  3A80               	xorlw	128
 10497  0218  00FF               	movwf	btemp+1
 10498  0219  3080               	movlw	128
 10499  021A  027F               	subwf	btemp+1,w
 10500  021B  1D03               	skipz
 10501  021C  2A1F               	goto	u7055
 10502  021D  3001               	movlw	1
 10503  021E  023D               	subwf	sprintf@width^(0+128),w
 10504  021F                     u7055:
 10505  021F  1803               	skipnc
 10506  0220  2A22               	goto	u7051
 10507  0221  2A23               	goto	u7050
 10508  0222                     u7051:
 10509  0222  2A08               	goto	l4162
 10510  0223                     u7050:
 10511  0223                     l4170:
 10512                           
 10513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10514  0223  3003               	movlw	3
 10515  0224  1683               	bsf	3,5	;RP0=1, select bank1
 10516  0225  1303               	bcf	3,6	;RP1=0, select bank1
 10517  0226  053B               	andwf	sprintf@flag^(0+128),w
 10518  0227  00AD               	movwf	??_sprintf^(0+128)
 10519  0228  3000               	movlw	0
 10520  0229  053C               	andwf	(sprintf@flag+1)^(0+128),w
 10521  022A  00AE               	movwf	(??_sprintf+1)^(0+128)
 10522  022B  082D               	movf	??_sprintf^(0+128),w
 10523  022C  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10524  022D  1903               	btfsc	3,2
 10525  022E  2A30               	goto	u7061
 10526  022F  2A31               	goto	u7060
 10527  0230                     u7061:
 10528  0230  2AE3               	goto	l375
 10529  0231                     u7060:
 10530  0231                     l4172:
 10531                           
 10532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10533  0231  302D               	movlw	45
 10534  0232  00AD               	movwf	??_sprintf^(0+128)
 10535  0233  0849               	movf	sprintf@sp^(0+128),w
 10536  0234  0084               	movwf	4
 10537  0235  082D               	movf	??_sprintf^(0+128),w
 10538  0236  1383               	bcf	3,7	;select IRP bank0
 10539  0237  0080               	movwf	0
 10540  0238                     l4174:
 10541  0238  3001               	movlw	1
 10542  0239  00AD               	movwf	??_sprintf^(0+128)
 10543  023A  082D               	movf	??_sprintf^(0+128),w
 10544  023B  07C9               	addwf	sprintf@sp^(0+128),f
 10545  023C  2AE3               	goto	l375
 10546  023D                     l4176:
 10547                           
 10548                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10549  023D  084C               	movf	sprintf@c^(0+128),w
 10550  023E  00AD               	movwf	??_sprintf^(0+128)
 10551  023F  3001               	movlw	1
 10552  0240                     u7075:
 10553  0240  1003               	clrc
 10554  0241  0DAD               	rlf	??_sprintf^(0+128),f
 10555  0242  3EFF               	addlw	-1
 10556  0243  1D03               	skipz
 10557  0244  2A40               	goto	u7075
 10558  0245  1003               	clrc
 10559  0246  0D2D               	rlf	??_sprintf^(0+128),w
 10560  0247  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10561  0248  0084               	movwf	4
 10562  0249  160A  158A  200A  120A  118A  	fcall	stringdir
 10563  024E  1283               	bcf	3,5	;RP0=0, select bank0
 10564  024F  1303               	bcf	3,6	;RP1=0, select bank0
 10565  0250  00A0               	movwf	___lldiv@divisor
 10566  0251  160A  158A  200A  120A  118A  	fcall	stringdir
 10567  0256  00A1               	movwf	___lldiv@divisor+1
 10568  0257  160A  158A  200A  120A  118A  	fcall	stringdir
 10569  025C  00A2               	movwf	___lldiv@divisor+2
 10570  025D  160A  158A  200A  120A  118A  	fcall	stringdir
 10571  0262  00A3               	movwf	___lldiv@divisor+3
 10572  0263  1683               	bsf	3,5	;RP0=1, select bank1
 10573  0264  1303               	bcf	3,6	;RP1=0, select bank1
 10574  0265  083A               	movf	(sprintf@val+3)^(0+128),w
 10575  0266  1283               	bcf	3,5	;RP0=0, select bank0
 10576  0267  1303               	bcf	3,6	;RP1=0, select bank0
 10577  0268  00A7               	movwf	___lldiv@dividend+3
 10578  0269  1683               	bsf	3,5	;RP0=1, select bank1
 10579  026A  1303               	bcf	3,6	;RP1=0, select bank1
 10580  026B  0839               	movf	(sprintf@val+2)^(0+128),w
 10581  026C  1283               	bcf	3,5	;RP0=0, select bank0
 10582  026D  1303               	bcf	3,6	;RP1=0, select bank0
 10583  026E  00A6               	movwf	___lldiv@dividend+2
 10584  026F  1683               	bsf	3,5	;RP0=1, select bank1
 10585  0270  1303               	bcf	3,6	;RP1=0, select bank1
 10586  0271  0838               	movf	(sprintf@val+1)^(0+128),w
 10587  0272  1283               	bcf	3,5	;RP0=0, select bank0
 10588  0273  1303               	bcf	3,6	;RP1=0, select bank0
 10589  0274  00A5               	movwf	___lldiv@dividend+1
 10590  0275  1683               	bsf	3,5	;RP0=1, select bank1
 10591  0276  1303               	bcf	3,6	;RP1=0, select bank1
 10592  0277  0837               	movf	sprintf@val^(0+128),w
 10593  0278  1283               	bcf	3,5	;RP0=0, select bank0
 10594  0279  1303               	bcf	3,6	;RP1=0, select bank0
 10595  027A  00A4               	movwf	___lldiv@dividend
 10596  027B  160A  158A  2678  120A  118A  	fcall	___lldiv
 10597  0280  1283               	bcf	3,5	;RP0=0, select bank0
 10598  0281  1303               	bcf	3,6	;RP1=0, select bank0
 10599  0282  0823               	movf	?___lldiv+3,w
 10600  0283  1683               	bsf	3,5	;RP0=1, select bank1
 10601  0284  1303               	bcf	3,6	;RP1=0, select bank1
 10602  0285  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10603  0286  1283               	bcf	3,5	;RP0=0, select bank0
 10604  0287  1303               	bcf	3,6	;RP1=0, select bank0
 10605  0288  0822               	movf	?___lldiv+2,w
 10606  0289  1683               	bsf	3,5	;RP0=1, select bank1
 10607  028A  1303               	bcf	3,6	;RP1=0, select bank1
 10608  028B  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10609  028C  1283               	bcf	3,5	;RP0=0, select bank0
 10610  028D  1303               	bcf	3,6	;RP1=0, select bank0
 10611  028E  0821               	movf	?___lldiv+1,w
 10612  028F  1683               	bsf	3,5	;RP0=1, select bank1
 10613  0290  1303               	bcf	3,6	;RP1=0, select bank1
 10614  0291  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10615  0292  1283               	bcf	3,5	;RP0=0, select bank0
 10616  0293  1303               	bcf	3,6	;RP1=0, select bank0
 10617  0294  0820               	movf	?___lldiv,w
 10618  0295  1683               	bsf	3,5	;RP0=1, select bank1
 10619  0296  1303               	bcf	3,6	;RP1=0, select bank1
 10620  0297  00BF               	movwf	sprintf@tmpval^(0+128)
 10621  0298                     l4178:
 10622                           
 10623                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10624  0298  3000               	movlw	0
 10625  0299  1283               	bcf	3,5	;RP0=0, select bank0
 10626  029A  1303               	bcf	3,6	;RP1=0, select bank0
 10627  029B  00A3               	movwf	___llmod@divisor+3
 10628  029C  3000               	movlw	0
 10629  029D  00A2               	movwf	___llmod@divisor+2
 10630  029E  3000               	movlw	0
 10631  029F  00A1               	movwf	___llmod@divisor+1
 10632  02A0  300A               	movlw	10
 10633  02A1  00A0               	movwf	___llmod@divisor
 10634  02A2  1683               	bsf	3,5	;RP0=1, select bank1
 10635  02A3  1303               	bcf	3,6	;RP1=0, select bank1
 10636  02A4  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 10637  02A5  1283               	bcf	3,5	;RP0=0, select bank0
 10638  02A6  1303               	bcf	3,6	;RP1=0, select bank0
 10639  02A7  00A7               	movwf	___llmod@dividend+3
 10640  02A8  1683               	bsf	3,5	;RP0=1, select bank1
 10641  02A9  1303               	bcf	3,6	;RP1=0, select bank1
 10642  02AA  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 10643  02AB  1283               	bcf	3,5	;RP0=0, select bank0
 10644  02AC  1303               	bcf	3,6	;RP1=0, select bank0
 10645  02AD  00A6               	movwf	___llmod@dividend+2
 10646  02AE  1683               	bsf	3,5	;RP0=1, select bank1
 10647  02AF  1303               	bcf	3,6	;RP1=0, select bank1
 10648  02B0  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 10649  02B1  1283               	bcf	3,5	;RP0=0, select bank0
 10650  02B2  1303               	bcf	3,6	;RP1=0, select bank0
 10651  02B3  00A5               	movwf	___llmod@dividend+1
 10652  02B4  1683               	bsf	3,5	;RP0=1, select bank1
 10653  02B5  1303               	bcf	3,6	;RP1=0, select bank1
 10654  02B6  083F               	movf	sprintf@tmpval^(0+128),w
 10655  02B7  1283               	bcf	3,5	;RP0=0, select bank0
 10656  02B8  1303               	bcf	3,6	;RP1=0, select bank0
 10657  02B9  00A4               	movwf	___llmod@dividend
 10658  02BA  160A  158A  25C9  120A  118A  	fcall	___llmod
 10659  02BF  1283               	bcf	3,5	;RP0=0, select bank0
 10660  02C0  1303               	bcf	3,6	;RP1=0, select bank0
 10661  02C1  0823               	movf	?___llmod+3,w
 10662  02C2  1683               	bsf	3,5	;RP0=1, select bank1
 10663  02C3  1303               	bcf	3,6	;RP1=0, select bank1
 10664  02C4  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10665  02C5  1283               	bcf	3,5	;RP0=0, select bank0
 10666  02C6  1303               	bcf	3,6	;RP1=0, select bank0
 10667  02C7  0822               	movf	?___llmod+2,w
 10668  02C8  1683               	bsf	3,5	;RP0=1, select bank1
 10669  02C9  1303               	bcf	3,6	;RP1=0, select bank1
 10670  02CA  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10671  02CB  1283               	bcf	3,5	;RP0=0, select bank0
 10672  02CC  1303               	bcf	3,6	;RP1=0, select bank0
 10673  02CD  0821               	movf	?___llmod+1,w
 10674  02CE  1683               	bsf	3,5	;RP0=1, select bank1
 10675  02CF  1303               	bcf	3,6	;RP1=0, select bank1
 10676  02D0  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10677  02D1  1283               	bcf	3,5	;RP0=0, select bank0
 10678  02D2  1303               	bcf	3,6	;RP1=0, select bank0
 10679  02D3  0820               	movf	?___llmod,w
 10680  02D4  1683               	bsf	3,5	;RP0=1, select bank1
 10681  02D5  1303               	bcf	3,6	;RP1=0, select bank1
 10682  02D6  00BF               	movwf	sprintf@tmpval^(0+128)
 10683  02D7                     l4180:
 10684                           
 10685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10686  02D7  083F               	movf	sprintf@tmpval^(0+128),w
 10687  02D8  3E30               	addlw	48
 10688  02D9  00AD               	movwf	??_sprintf^(0+128)
 10689  02DA  0849               	movf	sprintf@sp^(0+128),w
 10690  02DB  0084               	movwf	4
 10691  02DC  082D               	movf	??_sprintf^(0+128),w
 10692  02DD  1383               	bcf	3,7	;select IRP bank0
 10693  02DE  0080               	movwf	0
 10694  02DF  3001               	movlw	1
 10695  02E0  00AD               	movwf	??_sprintf^(0+128)
 10696  02E1  082D               	movf	??_sprintf^(0+128),w
 10697  02E2  07C9               	addwf	sprintf@sp^(0+128),f
 10698  02E3                     l375:	
 10699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10700                           
 10701                           
 10702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10703  02E3  3001               	movlw	1
 10704  02E4  02CC               	subwf	sprintf@c^(0+128),f
 10705  02E5  0A4C               	incf	sprintf@c^(0+128),w
 10706  02E6  1D03               	btfss	3,2
 10707  02E7  2AE9               	goto	u7081
 10708  02E8  2AEA               	goto	u7080
 10709  02E9                     u7081:
 10710  02E9  2A3D               	goto	l4176
 10711  02EA                     u7080:
 10712  02EA  2AFE               	goto	l4188
 10713  02EB                     l4182:
 10714                           
 10715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10716  02EB  3030               	movlw	48
 10717  02EC  1683               	bsf	3,5	;RP0=1, select bank1
 10718  02ED  1303               	bcf	3,6	;RP1=0, select bank1
 10719  02EE  00AD               	movwf	??_sprintf^(0+128)
 10720  02EF  0849               	movf	sprintf@sp^(0+128),w
 10721  02F0  0084               	movwf	4
 10722  02F1  082D               	movf	??_sprintf^(0+128),w
 10723  02F2  1383               	bcf	3,7	;select IRP bank0
 10724  02F3  0080               	movwf	0
 10725  02F4                     l4184:
 10726  02F4  3001               	movlw	1
 10727  02F5  00AD               	movwf	??_sprintf^(0+128)
 10728  02F6  082D               	movf	??_sprintf^(0+128),w
 10729  02F7  07C9               	addwf	sprintf@sp^(0+128),f
 10730  02F8                     l4186:
 10731                           
 10732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10733  02F8  30FF               	movlw	255
 10734  02F9  07C3               	addwf	sprintf@eexp^(0+128),f
 10735  02FA  1803               	skipnc
 10736  02FB  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10737  02FC  30FF               	movlw	255
 10738  02FD  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10739  02FE                     l4188:
 10740                           
 10741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10742  02FE  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10743  02FF  3A80               	xorlw	128
 10744  0300  00FF               	movwf	btemp+1
 10745  0301  3080               	movlw	128
 10746  0302  027F               	subwf	btemp+1,w
 10747  0303  1D03               	skipz
 10748  0304  2B07               	goto	u7095
 10749  0305  3001               	movlw	1
 10750  0306  0243               	subwf	sprintf@eexp^(0+128),w
 10751  0307                     u7095:
 10752  0307  1803               	skipnc
 10753  0308  2B0A               	goto	u7091
 10754  0309  2B0B               	goto	u7090
 10755  030A                     u7091:
 10756  030A  2AEB               	goto	l4182
 10757  030B                     u7090:
 10758  030B                     l4190:
 10759                           
 10760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10761  030B  1683               	bsf	3,5	;RP0=1, select bank1
 10762  030C  1303               	bcf	3,6	;RP1=0, select bank1
 10763  030D  084B               	movf	(sprintf@prec+1)^(0+128),w
 10764  030E  3A80               	xorlw	128
 10765  030F  00FF               	movwf	btemp+1
 10766  0310  3080               	movlw	128
 10767  0311  027F               	subwf	btemp+1,w
 10768  0312  1D03               	skipz
 10769  0313  2B16               	goto	u7105
 10770  0314  3009               	movlw	9
 10771  0315  024A               	subwf	sprintf@prec^(0+128),w
 10772  0316                     u7105:
 10773  0316  1C03               	skipc
 10774  0317  2B19               	goto	u7101
 10775  0318  2B1A               	goto	u7100
 10776  0319                     u7101:
 10777  0319  2B21               	goto	l4194
 10778  031A                     u7100:
 10779  031A                     l4192:
 10780                           
 10781                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10782  031A  3008               	movlw	8
 10783  031B  1683               	bsf	3,5	;RP0=1, select bank1
 10784  031C  1303               	bcf	3,6	;RP1=0, select bank1
 10785  031D  00AD               	movwf	??_sprintf^(0+128)
 10786  031E  082D               	movf	??_sprintf^(0+128),w
 10787  031F  00CC               	movwf	sprintf@c^(0+128)
 10788  0320  2B27               	goto	l382
 10789  0321                     l4194:
 10790                           
 10791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10792  0321  1683               	bsf	3,5	;RP0=1, select bank1
 10793  0322  1303               	bcf	3,6	;RP1=0, select bank1
 10794  0323  084A               	movf	sprintf@prec^(0+128),w
 10795  0324  00AD               	movwf	??_sprintf^(0+128)
 10796  0325  082D               	movf	??_sprintf^(0+128),w
 10797  0326  00CC               	movwf	sprintf@c^(0+128)
 10798  0327                     l382:
 10799                           
 10800                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10801  0327  084C               	movf	sprintf@c^(0+128),w
 10802  0328  00AD               	movwf	??_sprintf^(0+128)
 10803  0329  01AE               	clrf	(??_sprintf^(0+128)+1)
 10804  032A  082D               	movf	??_sprintf^(0+128),w
 10805  032B  02CA               	subwf	sprintf@prec^(0+128),f
 10806  032C  082E               	movf	(??_sprintf+1)^(0+128),w
 10807  032D  1C03               	skipc
 10808  032E  03CB               	decf	(sprintf@prec+1)^(0+128),f
 10809  032F  02CB               	subwf	(sprintf@prec+1)^(0+128),f
 10810  0330                     l4196:
 10811                           
 10812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10813  0330  084C               	movf	sprintf@c^(0+128),w
 10814  0331  1903               	btfsc	3,2
 10815  0332  2B34               	goto	u7111
 10816  0333  2B35               	goto	u7110
 10817  0334                     u7111:
 10818  0334  2B40               	goto	l4202
 10819  0335                     u7110:
 10820  0335                     l4198:
 10821                           
 10822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10823  0335  302E               	movlw	46
 10824  0336  00AD               	movwf	??_sprintf^(0+128)
 10825  0337  0849               	movf	sprintf@sp^(0+128),w
 10826  0338  0084               	movwf	4
 10827  0339  082D               	movf	??_sprintf^(0+128),w
 10828  033A  1383               	bcf	3,7	;select IRP bank0
 10829  033B  0080               	movwf	0
 10830  033C                     l4200:
 10831  033C  3001               	movlw	1
 10832  033D  00AD               	movwf	??_sprintf^(0+128)
 10833  033E  082D               	movf	??_sprintf^(0+128),w
 10834  033F  07C9               	addwf	sprintf@sp^(0+128),f
 10835  0340                     l4202:
 10836                           
 10837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10838  0340  084C               	movf	sprintf@c^(0+128),w
 10839  0341  120A  158A  249D  120A  118A  	fcall	_scale
 10840  0346  1283               	bcf	3,5	;RP0=0, select bank0
 10841  0347  1303               	bcf	3,6	;RP1=0, select bank0
 10842  0348  0847               	movf	?_scale+3,w
 10843  0349  1683               	bsf	3,5	;RP0=1, select bank1
 10844  034A  1303               	bcf	3,6	;RP1=0, select bank1
 10845  034B  00B5               	movwf	(_sprintf$1203+3)^(0+128)
 10846  034C  1283               	bcf	3,5	;RP0=0, select bank0
 10847  034D  1303               	bcf	3,6	;RP1=0, select bank0
 10848  034E  0846               	movf	?_scale+2,w
 10849  034F  1683               	bsf	3,5	;RP0=1, select bank1
 10850  0350  1303               	bcf	3,6	;RP1=0, select bank1
 10851  0351  00B4               	movwf	(_sprintf$1203+2)^(0+128)
 10852  0352  1283               	bcf	3,5	;RP0=0, select bank0
 10853  0353  1303               	bcf	3,6	;RP1=0, select bank0
 10854  0354  0845               	movf	?_scale+1,w
 10855  0355  1683               	bsf	3,5	;RP0=1, select bank1
 10856  0356  1303               	bcf	3,6	;RP1=0, select bank1
 10857  0357  00B3               	movwf	(_sprintf$1203+1)^(0+128)
 10858  0358  1283               	bcf	3,5	;RP0=0, select bank0
 10859  0359  1303               	bcf	3,6	;RP1=0, select bank0
 10860  035A  0844               	movf	?_scale,w
 10861  035B  1683               	bsf	3,5	;RP0=1, select bank1
 10862  035C  1303               	bcf	3,6	;RP1=0, select bank1
 10863  035D  00B2               	movwf	_sprintf$1203^(0+128)
 10864  035E                     l4204:
 10865                           
 10866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10867  035E  0835               	movf	(_sprintf$1203+3)^(0+128),w
 10868  035F  1283               	bcf	3,5	;RP0=0, select bank0
 10869  0360  1303               	bcf	3,6	;RP1=0, select bank0
 10870  0361  00B1               	movwf	___flmul@a+3
 10871  0362  1683               	bsf	3,5	;RP0=1, select bank1
 10872  0363  1303               	bcf	3,6	;RP1=0, select bank1
 10873  0364  0834               	movf	(_sprintf$1203+2)^(0+128),w
 10874  0365  1283               	bcf	3,5	;RP0=0, select bank0
 10875  0366  1303               	bcf	3,6	;RP1=0, select bank0
 10876  0367  00B0               	movwf	___flmul@a+2
 10877  0368  1683               	bsf	3,5	;RP0=1, select bank1
 10878  0369  1303               	bcf	3,6	;RP1=0, select bank1
 10879  036A  0833               	movf	(_sprintf$1203+1)^(0+128),w
 10880  036B  1283               	bcf	3,5	;RP0=0, select bank0
 10881  036C  1303               	bcf	3,6	;RP1=0, select bank0
 10882  036D  00AF               	movwf	___flmul@a+1
 10883  036E  1683               	bsf	3,5	;RP0=1, select bank1
 10884  036F  1303               	bcf	3,6	;RP1=0, select bank1
 10885  0370  0832               	movf	_sprintf$1203^(0+128),w
 10886  0371  1283               	bcf	3,5	;RP0=0, select bank0
 10887  0372  1303               	bcf	3,6	;RP1=0, select bank0
 10888  0373  00AE               	movwf	___flmul@a
 10889  0374  1683               	bsf	3,5	;RP0=1, select bank1
 10890  0375  1303               	bcf	3,6	;RP1=0, select bank1
 10891  0376  0848               	movf	(sprintf@fval+3)^(0+128),w
 10892  0377  1283               	bcf	3,5	;RP0=0, select bank0
 10893  0378  1303               	bcf	3,6	;RP1=0, select bank0
 10894  0379  00AD               	movwf	___flmul@b+3
 10895  037A  1683               	bsf	3,5	;RP0=1, select bank1
 10896  037B  1303               	bcf	3,6	;RP1=0, select bank1
 10897  037C  0847               	movf	(sprintf@fval+2)^(0+128),w
 10898  037D  1283               	bcf	3,5	;RP0=0, select bank0
 10899  037E  1303               	bcf	3,6	;RP1=0, select bank0
 10900  037F  00AC               	movwf	___flmul@b+2
 10901  0380  1683               	bsf	3,5	;RP0=1, select bank1
 10902  0381  1303               	bcf	3,6	;RP1=0, select bank1
 10903  0382  0846               	movf	(sprintf@fval+1)^(0+128),w
 10904  0383  1283               	bcf	3,5	;RP0=0, select bank0
 10905  0384  1303               	bcf	3,6	;RP1=0, select bank0
 10906  0385  00AB               	movwf	___flmul@b+1
 10907  0386  1683               	bsf	3,5	;RP0=1, select bank1
 10908  0387  1303               	bcf	3,6	;RP1=0, select bank1
 10909  0388  0845               	movf	sprintf@fval^(0+128),w
 10910  0389  1283               	bcf	3,5	;RP0=0, select bank0
 10911  038A  1303               	bcf	3,6	;RP1=0, select bank0
 10912  038B  00AA               	movwf	___flmul@b
 10913  038C  120A  158A  213C  120A  118A  	fcall	___flmul
 10914  0391  1283               	bcf	3,5	;RP0=0, select bank0
 10915  0392  1303               	bcf	3,6	;RP1=0, select bank0
 10916  0393  082D               	movf	?___flmul+3,w
 10917  0394  00DA               	movwf	___fltol@f1+3
 10918  0395  082C               	movf	?___flmul+2,w
 10919  0396  00D9               	movwf	___fltol@f1+2
 10920  0397  082B               	movf	?___flmul+1,w
 10921  0398  00D8               	movwf	___fltol@f1+1
 10922  0399  082A               	movf	?___flmul,w
 10923  039A  00D7               	movwf	___fltol@f1
 10924  039B  160A  158A  26E0  120A  118A  	fcall	___fltol
 10925  03A0  1283               	bcf	3,5	;RP0=0, select bank0
 10926  03A1  1303               	bcf	3,6	;RP1=0, select bank0
 10927  03A2  085A               	movf	?___fltol+3,w
 10928  03A3  1683               	bsf	3,5	;RP0=1, select bank1
 10929  03A4  1303               	bcf	3,6	;RP1=0, select bank1
 10930  03A5  00BA               	movwf	(sprintf@val+3)^(0+128)
 10931  03A6  1283               	bcf	3,5	;RP0=0, select bank0
 10932  03A7  1303               	bcf	3,6	;RP1=0, select bank0
 10933  03A8  0859               	movf	?___fltol+2,w
 10934  03A9  1683               	bsf	3,5	;RP0=1, select bank1
 10935  03AA  1303               	bcf	3,6	;RP1=0, select bank1
 10936  03AB  00B9               	movwf	(sprintf@val+2)^(0+128)
 10937  03AC  1283               	bcf	3,5	;RP0=0, select bank0
 10938  03AD  1303               	bcf	3,6	;RP1=0, select bank0
 10939  03AE  0858               	movf	?___fltol+1,w
 10940  03AF  1683               	bsf	3,5	;RP0=1, select bank1
 10941  03B0  1303               	bcf	3,6	;RP1=0, select bank1
 10942  03B1  00B8               	movwf	(sprintf@val+1)^(0+128)
 10943  03B2  1283               	bcf	3,5	;RP0=0, select bank0
 10944  03B3  1303               	bcf	3,6	;RP1=0, select bank0
 10945  03B4  0857               	movf	?___fltol,w
 10946  03B5  1683               	bsf	3,5	;RP0=1, select bank1
 10947  03B6  1303               	bcf	3,6	;RP1=0, select bank1
 10948  03B7  00B7               	movwf	sprintf@val^(0+128)
 10949                           
 10950                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10951  03B8  2CBA               	goto	l4214
 10952  03B9                     l4206:
 10953                           
 10954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10955  03B9  084C               	movf	sprintf@c^(0+128),w
 10956  03BA  00AD               	movwf	??_sprintf^(0+128)
 10957  03BB  3001               	movlw	1
 10958  03BC                     u7125:
 10959  03BC  1003               	clrc
 10960  03BD  0DAD               	rlf	??_sprintf^(0+128),f
 10961  03BE  3EFF               	addlw	-1
 10962  03BF  1D03               	skipz
 10963  03C0  2BBC               	goto	u7125
 10964  03C1  1003               	clrc
 10965  03C2  0D2D               	rlf	??_sprintf^(0+128),w
 10966  03C3  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10967  03C4  0084               	movwf	4
 10968  03C5  160A  158A  200A  120A  118A  	fcall	stringdir
 10969  03CA  1283               	bcf	3,5	;RP0=0, select bank0
 10970  03CB  1303               	bcf	3,6	;RP1=0, select bank0
 10971  03CC  00A0               	movwf	___lldiv@divisor
 10972  03CD  160A  158A  200A  120A  118A  	fcall	stringdir
 10973  03D2  00A1               	movwf	___lldiv@divisor+1
 10974  03D3  160A  158A  200A  120A  118A  	fcall	stringdir
 10975  03D8  00A2               	movwf	___lldiv@divisor+2
 10976  03D9  160A  158A  200A  120A  118A  	fcall	stringdir
 10977  03DE  00A3               	movwf	___lldiv@divisor+3
 10978  03DF  1683               	bsf	3,5	;RP0=1, select bank1
 10979  03E0  1303               	bcf	3,6	;RP1=0, select bank1
 10980  03E1  083A               	movf	(sprintf@val+3)^(0+128),w
 10981  03E2  1283               	bcf	3,5	;RP0=0, select bank0
 10982  03E3  1303               	bcf	3,6	;RP1=0, select bank0
 10983  03E4  00A7               	movwf	___lldiv@dividend+3
 10984  03E5  1683               	bsf	3,5	;RP0=1, select bank1
 10985  03E6  1303               	bcf	3,6	;RP1=0, select bank1
 10986  03E7  0839               	movf	(sprintf@val+2)^(0+128),w
 10987  03E8  1283               	bcf	3,5	;RP0=0, select bank0
 10988  03E9  1303               	bcf	3,6	;RP1=0, select bank0
 10989  03EA  00A6               	movwf	___lldiv@dividend+2
 10990  03EB  1683               	bsf	3,5	;RP0=1, select bank1
 10991  03EC  1303               	bcf	3,6	;RP1=0, select bank1
 10992  03ED  0838               	movf	(sprintf@val+1)^(0+128),w
 10993  03EE  1283               	bcf	3,5	;RP0=0, select bank0
 10994  03EF  1303               	bcf	3,6	;RP1=0, select bank0
 10995  03F0  00A5               	movwf	___lldiv@dividend+1
 10996  03F1  1683               	bsf	3,5	;RP0=1, select bank1
 10997  03F2  1303               	bcf	3,6	;RP1=0, select bank1
 10998  03F3  0837               	movf	sprintf@val^(0+128),w
 10999  03F4  1283               	bcf	3,5	;RP0=0, select bank0
 11000  03F5  1303               	bcf	3,6	;RP1=0, select bank0
 11001  03F6  00A4               	movwf	___lldiv@dividend
 11002  03F7  160A  158A  2678  120A  118A  	fcall	___lldiv
 11003  03FC  1283               	bcf	3,5	;RP0=0, select bank0
 11004  03FD  1303               	bcf	3,6	;RP1=0, select bank0
 11005  03FE  0823               	movf	?___lldiv+3,w
 11006  03FF  1683               	bsf	3,5	;RP0=1, select bank1
 11007  0400  1303               	bcf	3,6	;RP1=0, select bank1
 11008  0401  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 11009  0402  1283               	bcf	3,5	;RP0=0, select bank0
 11010  0403  1303               	bcf	3,6	;RP1=0, select bank0
 11011  0404  0822               	movf	?___lldiv+2,w
 11012  0405  1683               	bsf	3,5	;RP0=1, select bank1
 11013  0406  1303               	bcf	3,6	;RP1=0, select bank1
 11014  0407  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 11015  0408  1283               	bcf	3,5	;RP0=0, select bank0
 11016  0409  1303               	bcf	3,6	;RP1=0, select bank0
 11017  040A  0821               	movf	?___lldiv+1,w
 11018  040B  1683               	bsf	3,5	;RP0=1, select bank1
 11019  040C  1303               	bcf	3,6	;RP1=0, select bank1
 11020  040D  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 11021  040E  1283               	bcf	3,5	;RP0=0, select bank0
 11022  040F  1303               	bcf	3,6	;RP1=0, select bank0
 11023  0410  0820               	movf	?___lldiv,w
 11024  0411  1683               	bsf	3,5	;RP0=1, select bank1
 11025  0412  1303               	bcf	3,6	;RP1=0, select bank1
 11026  0413  00BF               	movwf	sprintf@tmpval^(0+128)
 11027  0414                     l4208:
 11028                           
 11029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11030  0414  3000               	movlw	0
 11031  0415  1283               	bcf	3,5	;RP0=0, select bank0
 11032  0416  1303               	bcf	3,6	;RP1=0, select bank0
 11033  0417  00A3               	movwf	___llmod@divisor+3
 11034  0418  3000               	movlw	0
 11035  0419  00A2               	movwf	___llmod@divisor+2
 11036  041A  3000               	movlw	0
 11037  041B  00A1               	movwf	___llmod@divisor+1
 11038  041C  300A               	movlw	10
 11039  041D  00A0               	movwf	___llmod@divisor
 11040  041E  1683               	bsf	3,5	;RP0=1, select bank1
 11041  041F  1303               	bcf	3,6	;RP1=0, select bank1
 11042  0420  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 11043  0421  1283               	bcf	3,5	;RP0=0, select bank0
 11044  0422  1303               	bcf	3,6	;RP1=0, select bank0
 11045  0423  00A7               	movwf	___llmod@dividend+3
 11046  0424  1683               	bsf	3,5	;RP0=1, select bank1
 11047  0425  1303               	bcf	3,6	;RP1=0, select bank1
 11048  0426  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 11049  0427  1283               	bcf	3,5	;RP0=0, select bank0
 11050  0428  1303               	bcf	3,6	;RP1=0, select bank0
 11051  0429  00A6               	movwf	___llmod@dividend+2
 11052  042A  1683               	bsf	3,5	;RP0=1, select bank1
 11053  042B  1303               	bcf	3,6	;RP1=0, select bank1
 11054  042C  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 11055  042D  1283               	bcf	3,5	;RP0=0, select bank0
 11056  042E  1303               	bcf	3,6	;RP1=0, select bank0
 11057  042F  00A5               	movwf	___llmod@dividend+1
 11058  0430  1683               	bsf	3,5	;RP0=1, select bank1
 11059  0431  1303               	bcf	3,6	;RP1=0, select bank1
 11060  0432  083F               	movf	sprintf@tmpval^(0+128),w
 11061  0433  1283               	bcf	3,5	;RP0=0, select bank0
 11062  0434  1303               	bcf	3,6	;RP1=0, select bank0
 11063  0435  00A4               	movwf	___llmod@dividend
 11064  0436  160A  158A  25C9  120A  118A  	fcall	___llmod
 11065  043B  1283               	bcf	3,5	;RP0=0, select bank0
 11066  043C  1303               	bcf	3,6	;RP1=0, select bank0
 11067  043D  0823               	movf	?___llmod+3,w
 11068  043E  1683               	bsf	3,5	;RP0=1, select bank1
 11069  043F  1303               	bcf	3,6	;RP1=0, select bank1
 11070  0440  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 11071  0441  1283               	bcf	3,5	;RP0=0, select bank0
 11072  0442  1303               	bcf	3,6	;RP1=0, select bank0
 11073  0443  0822               	movf	?___llmod+2,w
 11074  0444  1683               	bsf	3,5	;RP0=1, select bank1
 11075  0445  1303               	bcf	3,6	;RP1=0, select bank1
 11076  0446  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 11077  0447  1283               	bcf	3,5	;RP0=0, select bank0
 11078  0448  1303               	bcf	3,6	;RP1=0, select bank0
 11079  0449  0821               	movf	?___llmod+1,w
 11080  044A  1683               	bsf	3,5	;RP0=1, select bank1
 11081  044B  1303               	bcf	3,6	;RP1=0, select bank1
 11082  044C  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 11083  044D  1283               	bcf	3,5	;RP0=0, select bank0
 11084  044E  1303               	bcf	3,6	;RP1=0, select bank0
 11085  044F  0820               	movf	?___llmod,w
 11086  0450  1683               	bsf	3,5	;RP0=1, select bank1
 11087  0451  1303               	bcf	3,6	;RP1=0, select bank1
 11088  0452  00BF               	movwf	sprintf@tmpval^(0+128)
 11089  0453                     l4210:
 11090                           
 11091                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11092  0453  083F               	movf	sprintf@tmpval^(0+128),w
 11093  0454  3E30               	addlw	48
 11094  0455  00AD               	movwf	??_sprintf^(0+128)
 11095  0456  0849               	movf	sprintf@sp^(0+128),w
 11096  0457  0084               	movwf	4
 11097  0458  082D               	movf	??_sprintf^(0+128),w
 11098  0459  1383               	bcf	3,7	;select IRP bank0
 11099  045A  0080               	movwf	0
 11100  045B  3001               	movlw	1
 11101  045C  00AD               	movwf	??_sprintf^(0+128)
 11102  045D  082D               	movf	??_sprintf^(0+128),w
 11103  045E  07C9               	addwf	sprintf@sp^(0+128),f
 11104  045F                     l4212:
 11105                           
 11106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11107  045F  084C               	movf	sprintf@c^(0+128),w
 11108  0460  00AD               	movwf	??_sprintf^(0+128)
 11109  0461  3001               	movlw	1
 11110  0462                     u7135:
 11111  0462  1003               	clrc
 11112  0463  0DAD               	rlf	??_sprintf^(0+128),f
 11113  0464  3EFF               	addlw	-1
 11114  0465  1D03               	skipz
 11115  0466  2C62               	goto	u7135
 11116  0467  1003               	clrc
 11117  0468  0D2D               	rlf	??_sprintf^(0+128),w
 11118  0469  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11119  046A  0084               	movwf	4
 11120  046B  160A  158A  200A  120A  118A  	fcall	stringdir
 11121  0470  1283               	bcf	3,5	;RP0=0, select bank0
 11122  0471  1303               	bcf	3,6	;RP1=0, select bank0
 11123  0472  00A0               	movwf	___llmod@divisor
 11124  0473  160A  158A  200A  120A  118A  	fcall	stringdir
 11125  0478  00A1               	movwf	___llmod@divisor+1
 11126  0479  160A  158A  200A  120A  118A  	fcall	stringdir
 11127  047E  00A2               	movwf	___llmod@divisor+2
 11128  047F  160A  158A  200A  120A  118A  	fcall	stringdir
 11129  0484  00A3               	movwf	___llmod@divisor+3
 11130  0485  1683               	bsf	3,5	;RP0=1, select bank1
 11131  0486  1303               	bcf	3,6	;RP1=0, select bank1
 11132  0487  083A               	movf	(sprintf@val+3)^(0+128),w
 11133  0488  1283               	bcf	3,5	;RP0=0, select bank0
 11134  0489  1303               	bcf	3,6	;RP1=0, select bank0
 11135  048A  00A7               	movwf	___llmod@dividend+3
 11136  048B  1683               	bsf	3,5	;RP0=1, select bank1
 11137  048C  1303               	bcf	3,6	;RP1=0, select bank1
 11138  048D  0839               	movf	(sprintf@val+2)^(0+128),w
 11139  048E  1283               	bcf	3,5	;RP0=0, select bank0
 11140  048F  1303               	bcf	3,6	;RP1=0, select bank0
 11141  0490  00A6               	movwf	___llmod@dividend+2
 11142  0491  1683               	bsf	3,5	;RP0=1, select bank1
 11143  0492  1303               	bcf	3,6	;RP1=0, select bank1
 11144  0493  0838               	movf	(sprintf@val+1)^(0+128),w
 11145  0494  1283               	bcf	3,5	;RP0=0, select bank0
 11146  0495  1303               	bcf	3,6	;RP1=0, select bank0
 11147  0496  00A5               	movwf	___llmod@dividend+1
 11148  0497  1683               	bsf	3,5	;RP0=1, select bank1
 11149  0498  1303               	bcf	3,6	;RP1=0, select bank1
 11150  0499  0837               	movf	sprintf@val^(0+128),w
 11151  049A  1283               	bcf	3,5	;RP0=0, select bank0
 11152  049B  1303               	bcf	3,6	;RP1=0, select bank0
 11153  049C  00A4               	movwf	___llmod@dividend
 11154  049D  160A  158A  25C9  120A  118A  	fcall	___llmod
 11155  04A2  1283               	bcf	3,5	;RP0=0, select bank0
 11156  04A3  1303               	bcf	3,6	;RP1=0, select bank0
 11157  04A4  0823               	movf	?___llmod+3,w
 11158  04A5  1683               	bsf	3,5	;RP0=1, select bank1
 11159  04A6  1303               	bcf	3,6	;RP1=0, select bank1
 11160  04A7  00BA               	movwf	(sprintf@val+3)^(0+128)
 11161  04A8  1283               	bcf	3,5	;RP0=0, select bank0
 11162  04A9  1303               	bcf	3,6	;RP1=0, select bank0
 11163  04AA  0822               	movf	?___llmod+2,w
 11164  04AB  1683               	bsf	3,5	;RP0=1, select bank1
 11165  04AC  1303               	bcf	3,6	;RP1=0, select bank1
 11166  04AD  00B9               	movwf	(sprintf@val+2)^(0+128)
 11167  04AE  1283               	bcf	3,5	;RP0=0, select bank0
 11168  04AF  1303               	bcf	3,6	;RP1=0, select bank0
 11169  04B0  0821               	movf	?___llmod+1,w
 11170  04B1  1683               	bsf	3,5	;RP0=1, select bank1
 11171  04B2  1303               	bcf	3,6	;RP1=0, select bank1
 11172  04B3  00B8               	movwf	(sprintf@val+1)^(0+128)
 11173  04B4  1283               	bcf	3,5	;RP0=0, select bank0
 11174  04B5  1303               	bcf	3,6	;RP1=0, select bank0
 11175  04B6  0820               	movf	?___llmod,w
 11176  04B7  1683               	bsf	3,5	;RP0=1, select bank1
 11177  04B8  1303               	bcf	3,6	;RP1=0, select bank1
 11178  04B9  00B7               	movwf	sprintf@val^(0+128)
 11179  04BA                     l4214:
 11180                           
 11181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11182  04BA  3001               	movlw	1
 11183  04BB  02CC               	subwf	sprintf@c^(0+128),f
 11184  04BC  0A4C               	incf	sprintf@c^(0+128),w
 11185  04BD  1D03               	btfss	3,2
 11186  04BE  2CC0               	goto	u7141
 11187  04BF  2CC1               	goto	u7140
 11188  04C0                     u7141:
 11189  04C0  2BB9               	goto	l4206
 11190  04C1                     u7140:
 11191  04C1  2CD3               	goto	l4222
 11192  04C2                     l4216:
 11193                           
 11194                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11195  04C2  3030               	movlw	48
 11196  04C3  00AD               	movwf	??_sprintf^(0+128)
 11197  04C4  0849               	movf	sprintf@sp^(0+128),w
 11198  04C5  0084               	movwf	4
 11199  04C6  082D               	movf	??_sprintf^(0+128),w
 11200  04C7  1383               	bcf	3,7	;select IRP bank0
 11201  04C8  0080               	movwf	0
 11202  04C9                     l4218:
 11203  04C9  3001               	movlw	1
 11204  04CA  00AD               	movwf	??_sprintf^(0+128)
 11205  04CB  082D               	movf	??_sprintf^(0+128),w
 11206  04CC  07C9               	addwf	sprintf@sp^(0+128),f
 11207  04CD                     l4220:
 11208                           
 11209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11210  04CD  30FF               	movlw	255
 11211  04CE  07CA               	addwf	sprintf@prec^(0+128),f
 11212  04CF  1803               	skipnc
 11213  04D0  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11214  04D1  30FF               	movlw	255
 11215  04D2  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11216  04D3                     l4222:
 11217                           
 11218                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11219  04D3  084A               	movf	sprintf@prec^(0+128),w
 11220  04D4  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11221  04D5  1D03               	btfss	3,2
 11222  04D6  2CD8               	goto	u7151
 11223  04D7  2CD9               	goto	u7150
 11224  04D8                     u7151:
 11225  04D8  2CC2               	goto	l4216
 11226  04D9                     u7150:
 11227  04D9  2D9F               	goto	l4270
 11228  04DA                     l4224:
 11229                           
 11230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 11231  04DA  084A               	movf	sprintf@prec^(0+128),w
 11232  04DB  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11233  04DC  1D03               	btfss	3,2
 11234  04DD  2CDF               	goto	u7161
 11235  04DE  2CE0               	goto	u7160
 11236  04DF                     u7161:
 11237  04DF  2CEE               	goto	l390
 11238  04E0                     u7160:
 11239  04E0                     l4226:
 11240  04E0  083A               	movf	(sprintf@val+3)^(0+128),w
 11241  04E1  0439               	iorwf	(sprintf@val+2)^(0+128),w
 11242  04E2  0438               	iorwf	(sprintf@val+1)^(0+128),w
 11243  04E3  0437               	iorwf	sprintf@val^(0+128),w
 11244  04E4  1D03               	skipz
 11245  04E5  2CE7               	goto	u7171
 11246  04E6  2CE8               	goto	u7170
 11247  04E7                     u7171:
 11248  04E7  2CEE               	goto	l390
 11249  04E8                     u7170:
 11250  04E8                     l4228:
 11251                           
 11252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11253  04E8  3001               	movlw	1
 11254  04E9  07CA               	addwf	sprintf@prec^(0+128),f
 11255  04EA  1803               	skipnc
 11256  04EB  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11257  04EC  3000               	movlw	0
 11258  04ED  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11259  04EE                     l390:
 11260                           
 11261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11262  04EE  084B               	movf	(sprintf@prec+1)^(0+128),w
 11263  04EF  3A80               	xorlw	128
 11264  04F0  3C80               	sublw	128
 11265  04F1  1D03               	skipz
 11266  04F2  2CF5               	goto	u7185
 11267  04F3  084A               	movf	sprintf@prec^(0+128),w
 11268  04F4  024C               	subwf	sprintf@c^(0+128),w
 11269  04F5                     u7185:
 11270  04F5  1803               	skipnc
 11271  04F6  2CF8               	goto	u7181
 11272  04F7  2CF9               	goto	u7180
 11273  04F8                     u7181:
 11274  04F8  2D00               	goto	l4232
 11275  04F9                     u7180:
 11276  04F9                     l4230:
 11277                           
 11278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11279  04F9  1683               	bsf	3,5	;RP0=1, select bank1
 11280  04FA  1303               	bcf	3,6	;RP1=0, select bank1
 11281  04FB  084A               	movf	sprintf@prec^(0+128),w
 11282  04FC  00AD               	movwf	??_sprintf^(0+128)
 11283  04FD  082D               	movf	??_sprintf^(0+128),w
 11284  04FE  00CC               	movwf	sprintf@c^(0+128)
 11285  04FF  2D18               	goto	l4236
 11286  0500                     l4232:
 11287  0500  1683               	bsf	3,5	;RP0=1, select bank1
 11288  0501  1303               	bcf	3,6	;RP1=0, select bank1
 11289  0502  084B               	movf	(sprintf@prec+1)^(0+128),w
 11290  0503  3A80               	xorlw	128
 11291  0504  00AD               	movwf	??_sprintf^(0+128)
 11292  0505  3080               	movlw	128
 11293  0506  022D               	subwf	??_sprintf^(0+128),w
 11294  0507  1D03               	skipz
 11295  0508  2D0B               	goto	u7195
 11296  0509  084C               	movf	sprintf@c^(0+128),w
 11297  050A  024A               	subwf	sprintf@prec^(0+128),w
 11298  050B                     u7195:
 11299  050B  1803               	skipnc
 11300  050C  2D0E               	goto	u7191
 11301  050D  2D0F               	goto	u7190
 11302  050E                     u7191:
 11303  050E  2D18               	goto	l4236
 11304  050F                     u7190:
 11305  050F                     l4234:
 11306                           
 11307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11308  050F  1683               	bsf	3,5	;RP0=1, select bank1
 11309  0510  1303               	bcf	3,6	;RP1=0, select bank1
 11310  0511  084C               	movf	sprintf@c^(0+128),w
 11311  0512  00AD               	movwf	??_sprintf^(0+128)
 11312  0513  01AE               	clrf	(??_sprintf^(0+128)+1)
 11313  0514  082D               	movf	??_sprintf^(0+128),w
 11314  0515  00CA               	movwf	sprintf@prec^(0+128)
 11315  0516  082E               	movf	(??_sprintf+1)^(0+128),w
 11316  0517  00CB               	movwf	(sprintf@prec+1)^(0+128)
 11317  0518                     l4236:
 11318                           
 11319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11320  0518  1683               	bsf	3,5	;RP0=1, select bank1
 11321  0519  1303               	bcf	3,6	;RP1=0, select bank1
 11322  051A  083D               	movf	sprintf@width^(0+128),w
 11323  051B  043E               	iorwf	(sprintf@width+1)^(0+128),w
 11324  051C  1903               	btfsc	3,2
 11325  051D  2D1F               	goto	u7201
 11326  051E  2D20               	goto	u7200
 11327  051F                     u7201:
 11328  051F  2D32               	goto	l4242
 11329  0520                     u7200:
 11330  0520                     l4238:
 11331  0520  3003               	movlw	3
 11332  0521  053B               	andwf	sprintf@flag^(0+128),w
 11333  0522  00AD               	movwf	??_sprintf^(0+128)
 11334  0523  3000               	movlw	0
 11335  0524  053C               	andwf	(sprintf@flag+1)^(0+128),w
 11336  0525  00AE               	movwf	(??_sprintf+1)^(0+128)
 11337  0526  082D               	movf	??_sprintf^(0+128),w
 11338  0527  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11339  0528  1903               	btfsc	3,2
 11340  0529  2D2B               	goto	u7211
 11341  052A  2D2C               	goto	u7210
 11342  052B                     u7211:
 11343  052B  2D32               	goto	l4242
 11344  052C                     u7210:
 11345  052C                     l4240:
 11346                           
 11347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11348  052C  30FF               	movlw	255
 11349  052D  07BD               	addwf	sprintf@width^(0+128),f
 11350  052E  1803               	skipnc
 11351  052F  0ABE               	incf	(sprintf@width+1)^(0+128),f
 11352  0530  30FF               	movlw	255
 11353  0531  07BE               	addwf	(sprintf@width+1)^(0+128),f
 11354  0532                     l4242:
 11355                           
 11356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11357  0532  1F3C               	btfss	(sprintf@flag+1)^(0+128),6
 11358  0533  2D35               	goto	u7221
 11359  0534  2D36               	goto	u7220
 11360  0535                     u7221:
 11361  0535  2D51               	goto	l4250
 11362  0536                     u7220:
 11363  0536                     l4244:
 11364                           
 11365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11366  0536  084B               	movf	(sprintf@prec+1)^(0+128),w
 11367  0537  3A80               	xorlw	128
 11368  0538  00AD               	movwf	??_sprintf^(0+128)
 11369  0539  083E               	movf	(sprintf@width+1)^(0+128),w
 11370  053A  3A80               	xorlw	128
 11371  053B  022D               	subwf	??_sprintf^(0+128),w
 11372  053C  1D03               	skipz
 11373  053D  2D40               	goto	u7235
 11374  053E  083D               	movf	sprintf@width^(0+128),w
 11375  053F  024A               	subwf	sprintf@prec^(0+128),w
 11376  0540                     u7235:
 11377  0540  1803               	skipnc
 11378  0541  2D43               	goto	u7231
 11379  0542  2D44               	goto	u7230
 11380  0543                     u7231:
 11381  0543  2D4D               	goto	l4248
 11382  0544                     u7230:
 11383  0544                     l4246:
 11384                           
 11385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11386  0544  1683               	bsf	3,5	;RP0=1, select bank1
 11387  0545  1303               	bcf	3,6	;RP1=0, select bank1
 11388  0546  084A               	movf	sprintf@prec^(0+128),w
 11389  0547  02BD               	subwf	sprintf@width^(0+128),f
 11390  0548  084B               	movf	(sprintf@prec+1)^(0+128),w
 11391  0549  1C03               	skipc
 11392  054A  03BE               	decf	(sprintf@width+1)^(0+128),f
 11393  054B  02BE               	subwf	(sprintf@width+1)^(0+128),f
 11394  054C  2D51               	goto	l4250
 11395  054D                     l4248:
 11396                           
 11397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11398  054D  1683               	bsf	3,5	;RP0=1, select bank1
 11399  054E  1303               	bcf	3,6	;RP1=0, select bank1
 11400  054F  01BD               	clrf	sprintf@width^(0+128)
 11401  0550  01BE               	clrf	(sprintf@width+1)^(0+128)
 11402  0551                     l4250:
 11403                           
 11404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11405  0551  083E               	movf	(sprintf@width+1)^(0+128),w
 11406  0552  3A80               	xorlw	128
 11407  0553  3C80               	sublw	128
 11408  0554  1D03               	skipz
 11409  0555  2D58               	goto	u7245
 11410  0556  083D               	movf	sprintf@width^(0+128),w
 11411  0557  024C               	subwf	sprintf@c^(0+128),w
 11412  0558                     u7245:
 11413  0558  1803               	skipnc
 11414  0559  2D5B               	goto	u7241
 11415  055A  2D5C               	goto	u7240
 11416  055B                     u7241:
 11417  055B  2D68               	goto	l4254
 11418  055C                     u7240:
 11419  055C                     l4252:
 11420                           
 11421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11422  055C  1683               	bsf	3,5	;RP0=1, select bank1
 11423  055D  1303               	bcf	3,6	;RP1=0, select bank1
 11424  055E  084C               	movf	sprintf@c^(0+128),w
 11425  055F  00AD               	movwf	??_sprintf^(0+128)
 11426  0560  01AE               	clrf	(??_sprintf^(0+128)+1)
 11427  0561  082D               	movf	??_sprintf^(0+128),w
 11428  0562  02BD               	subwf	sprintf@width^(0+128),f
 11429  0563  082E               	movf	(??_sprintf+1)^(0+128),w
 11430  0564  1C03               	skipc
 11431  0565  03BE               	decf	(sprintf@width+1)^(0+128),f
 11432  0566  02BE               	subwf	(sprintf@width+1)^(0+128),f
 11433  0567  2D6C               	goto	l4256
 11434  0568                     l4254:
 11435                           
 11436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11437  0568  1683               	bsf	3,5	;RP0=1, select bank1
 11438  0569  1303               	bcf	3,6	;RP1=0, select bank1
 11439  056A  01BD               	clrf	sprintf@width^(0+128)
 11440  056B  01BE               	clrf	(sprintf@width+1)^(0+128)
 11441  056C                     l4256:
 11442                           
 11443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11444  056C  083D               	movf	sprintf@width^(0+128),w
 11445  056D  043E               	iorwf	(sprintf@width+1)^(0+128),w
 11446  056E  1903               	btfsc	3,2
 11447  056F  2D71               	goto	u7251
 11448  0570  2D72               	goto	u7250
 11449  0571                     u7251:
 11450  0571  2D89               	goto	l4264
 11451  0572                     u7250:
 11452  0572                     l4258:
 11453                           
 11454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11455  0572  3020               	movlw	32
 11456  0573  00AD               	movwf	??_sprintf^(0+128)
 11457  0574  0849               	movf	sprintf@sp^(0+128),w
 11458  0575  0084               	movwf	4
 11459  0576  082D               	movf	??_sprintf^(0+128),w
 11460  0577  1383               	bcf	3,7	;select IRP bank0
 11461  0578  0080               	movwf	0
 11462  0579                     l4260:
 11463  0579  3001               	movlw	1
 11464  057A  00AD               	movwf	??_sprintf^(0+128)
 11465  057B  082D               	movf	??_sprintf^(0+128),w
 11466  057C  07C9               	addwf	sprintf@sp^(0+128),f
 11467  057D                     l4262:
 11468  057D  30FF               	movlw	255
 11469  057E  07BD               	addwf	sprintf@width^(0+128),f
 11470  057F  1803               	skipnc
 11471  0580  0ABE               	incf	(sprintf@width+1)^(0+128),f
 11472  0581  30FF               	movlw	255
 11473  0582  07BE               	addwf	(sprintf@width+1)^(0+128),f
 11474  0583  083D               	movf	sprintf@width^(0+128),w
 11475  0584  043E               	iorwf	(sprintf@width+1)^(0+128),w
 11476  0585  1D03               	btfss	3,2
 11477  0586  2D88               	goto	u7261
 11478  0587  2D89               	goto	u7260
 11479  0588                     u7261:
 11480  0588  2D72               	goto	l4258
 11481  0589                     u7260:
 11482  0589                     l4264:
 11483                           
 11484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11485  0589  3003               	movlw	3
 11486  058A  053B               	andwf	sprintf@flag^(0+128),w
 11487  058B  00AD               	movwf	??_sprintf^(0+128)
 11488  058C  3000               	movlw	0
 11489  058D  053C               	andwf	(sprintf@flag+1)^(0+128),w
 11490  058E  00AE               	movwf	(??_sprintf+1)^(0+128)
 11491  058F  082D               	movf	??_sprintf^(0+128),w
 11492  0590  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11493  0591  1903               	btfsc	3,2
 11494  0592  2D94               	goto	u7271
 11495  0593  2D95               	goto	u7270
 11496  0594                     u7271:
 11497  0594  2D9F               	goto	l4270
 11498  0595                     u7270:
 11499  0595                     l4266:
 11500                           
 11501                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11502  0595  302D               	movlw	45
 11503  0596  00AD               	movwf	??_sprintf^(0+128)
 11504  0597  0849               	movf	sprintf@sp^(0+128),w
 11505  0598  0084               	movwf	4
 11506  0599  082D               	movf	??_sprintf^(0+128),w
 11507  059A  1383               	bcf	3,7	;select IRP bank0
 11508  059B  0080               	movwf	0
 11509  059C  160A  118A  2D13   	goto	l4026
 11510  059F                     l4270:
 11511                           
 11512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11513  059F  3001               	movlw	1
 11514  05A0  07A8               	addwf	sprintf@f^(0+128),f
 11515  05A1  30FF               	movlw	-1
 11516  05A2  0728               	addwf	sprintf@f^(0+128),w
 11517  05A3  0084               	movwf	4
 11518  05A4  160A  158A  200A  120A  118A  	fcall	stringdir
 11519  05A9  00AD               	movwf	??_sprintf^(0+128)
 11520  05AA  082D               	movf	??_sprintf^(0+128),w
 11521  05AB  00CC               	movwf	sprintf@c^(0+128)
 11522  05AC  084C               	movf	sprintf@c^(0+128),w
 11523  05AD  1D03               	btfss	3,2
 11524  05AE  2DB0               	goto	u7281
 11525  05AF  2DB3               	goto	u7280
 11526  05B0                     u7281:
 11527  05B0  160A  118A  2D06   	goto	l4022
 11528  05B3                     u7280:
 11529  05B3                     l4272:
 11530                           
 11531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11532  05B3  0849               	movf	sprintf@sp^(0+128),w
 11533  05B4  0084               	movwf	4
 11534  05B5  1383               	bcf	3,7	;select IRP bank0
 11535  05B6  0180               	clrf	0
 11536  05B7                     l405:
 11537  05B7  0008               	return
 11538  05B8                     __end_of_sprintf:
>>>>>>> parent of a4453d3 (Todo funciona menos último contador)

Data Sizes:
    Strings     23
    Constant    144
<<<<<<< HEAD
    Data        1
    BSS         36
=======
    Data        0
    BSS         25
>>>>>>> parent of a4453d3 (Todo funciona menos último contador)
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
<<<<<<< HEAD
    COMMON           14      8       9
    BANK0            80     80      80
    BANK1            80     56      72
    BANK3            96      0      20
=======
    COMMON           14     10      11
    BANK0            80     79      80
    BANK1            80     45      68
    BANK3            96      0       0
>>>>>>> parent of a4453d3 (Todo funciona menos último contador)
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> f(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> f(BANK1[10]), STR_1(CODE[16]), 

<<<<<<< HEAD
=======
    send_crct@st	PTR unsigned char  size(1) Largest target is 10
		 -> f(BANK1[10]), 

>>>>>>> parent of a4453d3 (Todo funciona menos último contador)

Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _main->_Lcd_Write_String
    _sprintf->__div_to_l_
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___awmod
    ___flmul->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    _isr->_int_adc

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conv->___flmul
    ___flmul->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (0) _main                                                 3     3      0   47292
                                             53 BANK1      3     3      0
=======
 (0) _main                                                 3     3      0   42386
                                             76 BANK0      3     3      0
>>>>>>> parent of a4453d3 (Todo funciona menos último contador)
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _cfg_adc
                            _cfg_clk
                           _cfg_inte
                             _cfg_io
                          _cfg_usart
                               _conv
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   34839
                                              8 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8087
                                             36 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              0 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             36 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             55 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             56 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (1) _conv                                                13     9      4    6684
                                             40 BANK0     13     9      4
=======
 (1) _send_crct                                            4     4      0     145
                                              4 COMMON     4     4      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conv                                                13     9      4    5356
                                             36 BANK0     13     9      4
>>>>>>> parent of a4453d3 (Todo funciona menos último contador)
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                             10 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _cfg_usart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_io                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_inte                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_clk                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_adc                                              1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     589
                                              6 COMMON     4     2      2
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     279
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     651
                                              7 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0     527
                                              7 COMMON     3     3      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     279
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     279
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     248
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              1 COMMON     2     2      0
                            _int_adc
 ---------------------------------------------------------------------------------
 (6) _int_adc                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _cfg_adc
   _cfg_clk
   _cfg_inte
   _cfg_io
   _cfg_usart
   _conv
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _isr (ROOT)
   _int_adc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
<<<<<<< HEAD
BANK3               60      0      14       9       20.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
=======
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
>>>>>>> parent of a4453d3 (Todo funciona menos último contador)
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     38      48       7       90.0%
BITBANK1            50      0       0       6        0.0%
<<<<<<< HEAD
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B5      12        0.0%
ABS                  0      0      B5       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 27 10:52:53 2021

                        pc 0002                         _V1 00E6                         _V2 00E5  
                       _V3 00E4                         _f1 019A                         _f2 0190  
             ___awdiv@sign 002A                         fsr 0004        ___wmul@multiplicand 0022  
      __Umul8_16@word_mpld 0024                        l200 1B82                        l203 1940  
                      l132 190B                        l141 18AF                        l135 189D  
                      l144 1AA9                        l209 1AEF                        l129 18CE  
                      l170 1A38                        l138 18F5                        l322 07EE  
                      l171 1A3E                        l180 1A5B                        l172 1A3F  
                      l412 05E1                        l181 1A61                        l173 1A45  
                      l182 1A62                        l174 1A46                        l183 1A68  
                      l175 1A4C                        l191 18BC                        l351 1597  
                      l176 1A4D                        l416 19AE                        l185 1A69  
                      l177 1A53                        l169 1A35                        l329 0FFF  
                      l178 1A54                        l602 1BA1                        l610 1154  
                      l418 19C6                        l179 1A5A                        l603 1BBD  
                      l611 116D                        l188 1925                        l604 1BD2  
                      l452 1DA1                        l197 199F                        l382 030D  
                      l607 10E8                        l615 07FB                        l633 1FFF  
                      l626 1E71                        l634 1F71                        l722 1B35  
                      l619 1E86                        l644 1FF2                        l732 1A2B  
                      l629 1E86                        l637 1FC2                        l397 0518  
                      l389 0351                        l590 11EE                        l582 1CD3  
                      l743 128F                        l903 18E0                        l672 1C78  
                      l569 1E0A                        l586 122B                        l851 0C90  
                      l747 1336                        l587 1190                        l860 19EF  
                      l764 1401                        l756 14B3                        l845 0C08  
                      l749 130D                        l597 121E                        l774 1447  
                      l839 0C9C                        l768 1425                        l785 14A7  
                      l777 1485                        l858 19DD                        l786 14B3  
                      l883 1EAB                        l885 1F42                        l789 1C22  
                      l896 1F0C                        l897 1F18                        l889 1EF0  
                      _RC1 0039                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      _v11 00E0                        _v22 00DC                        _v33 00D8  
                      _op1 0078                        _isr 195D                        fsr0 0004  
                      indf 0000               ___awmod@sign 0077               ___flmul@aexp 003C  
             ___flmul@bexp 0041               ___flmul@sign 003B               ___flmul@temp 0046  
             ___flmul@prod 0042               ___fltol@exp1 0065                       l3001 11E8  
                     l3003 11F2                       l3011 120C                       l3101 1E0B  
                     l3111 1E37                       l3103 1E18                       l3113 1E3F  
                     l3041 1D4F                       l3017 1213                       l3009 11FA  
                     l2401 1E01                       l4001 0E26                       l3131 1E66  
                     l3123 1E4D                       l3115 1E41                       l3107 1E21  
                     l3051 1D89                       l3043 1D5C                       l3019 1223  
                     l2403 1E06                       l4101 10CA                       l2501 123E  
                     l3133 1E76                       l3117 1E45                       l3125 1E5F  
                     l3109 1E36                       l3053 1D8A                       l3045 1D60  
                     l3037 1D3A                       l3141 1C30                       l4013 0F44  
                     l4005 0E53                       l4111 112C                       l4103 10E0  
                     l2503 1243                       l2511 1253                       l3135 1E7B  
                     l3055 1D93                       l3047 1D69                       l3039 1D4C  
                     l3151 1C6A                       l3143 1C3D                       l4023 1F43  
                     l4015 0F4B                       l4007 0E5A                       l4201 1ACB  
                     l3241 18C0                       l4113 1130                       l4105 10FC  
                     l4121 07EF                       l2601 1363                       l2521 126D  
                     l2513 125B                       l2505 1248                       l3049 1D7B  
                     l3057 1D99                       l3145 1C41                       l3153 1C70  
                     l3137 1C23                       l4041 1F89                       l4025 1F56  
                     l4203 1AD3                       l3251 1896                       l3243 18C2  
                     l4131 1E8F                       l4115 116A                       l4107 1104  
                     l4123 07F9                       l2611 1377                       l2603 1367  
                     l2531 1284                       l2523 1271                       l2515 1260  
                     l2507 1250                       l3147 1C53                       l3139 1C2D  
                     l4051 1FB4                       l4043 1F92                       l4035 1F72  
                     l2371 1DB0                       l2363 1DA2                       l4019 0FD3  
                     l4211 14B7                       l3261 1903                       l3253 189C  
                     l3245 18C9                       l4141 1EBC                       l4133 1E93  
                     l4205 1A6D                       l4117 116C                       l4109 1108  
                     l4125 07FB                       l2621 13DF                       l2613 1380  
                     l2605 1370                       l2541 129D                       l2533 1285  
                     l2525 1272                       l2517 1266                       l2509 1251  
                     l3157 1BD3                       l3149 1C61                       l4061 1FCE  
                     l4053 1FBC                       l4045 1F9B                       l4037 1F78  
                     l4029 1F5F                       l2381 1DC5                       l2373 1DB4  
                     l2365 1DA5                       l4301 1794                       l4221 14D4  
                     l4213 14BE                       l3263 1908                       l3255 18A6  
                     l3247 18CB                       l3239 18BD                       l3271 18ED  
                     l4151 1EE7                       l4143 1EC1                       l4135 1EA3  
                     l4207 1AA1                       l2623 13E4                       l2607 1372  
                     l2615 1385                       l2551 12B1                       l2543 12A1  
                     l2527 1277                       l2535 1287                       l2519 1267  
                     l3159 1BD7                       l4071 1FF7                       l4055 1FC6  
                     l4063 1FE0                       l4047 1FA9                       l4039 1F87  
                     l2391 1DE8                       l2383 1DC8                       l2375 1DB9  
                     l2367 1DA9                       l4311 007E                       l4303 17A3  
                     l4231 1522                       l4223 14E4                       l4215 14C4  
                     l3257 18F6                       l3273 18F0                       l3265 18E1  
                     l4161 1F1A                       l4153 1EF7                       l4145 1ECE  
                     l4137 1EB3                       l4129 1E8A                       l2641 142C  
                     l2633 1417                       l2617 139B                       l2625 13F3  
                     l2609 1376                       l2561 12C5                       l2553 12B5  
                     l2545 12A5                       l2537 1295                       l2529 127C  
                     l4081 19B5                       l4049 1FB3                       l2393 1DEE  
                     l2385 1DCF                       l2377 1DBD                       l2369 1DAE  
                     l4401 047D                       l4321 00E5                       l4313 008D  
                     l4305 17EA                       l4241 1548                       l4225 14E8  
                     l4233 1532                       l4217 14CB                       l3259 18FF  
                     l3275 18F1                       l3267 18E8                       l4163 1F30  
                     l4155 1F02                       l4147 1ED5                       l4091 1B99  
                     l2651 143A                       l2643 142E                       l2635 1420  
                     l2627 1409                       l2619 13D9                       l2563 12C9  
                     l2555 12B9                       l2547 12A9                       l2539 1299  
                     l2571 12D9                       l4083 19BC                       l4075 19A0  
                     l2395 1DEF                       l2387 1DD3                       l2379 1DBF  
                     l4411 04F7                       l4403 0489                       l4331 01B9  
                     l4315 00B6                       l4307 002E                       l4251 1595  
                     l4243 156B                       l4235 1540                       l4227 150B  
                     l4219 14D0                       l3701 1A31                       l4181 1B5C  
                     l4173 1B36                       l3277 18F2                       l3269 18EC  
                     l4165 1F35                       l4157 1F06                       l4149 1ED9  
                     l4093 1BB5                       l2661 1451                       l2653 143E  
                     l2645 1433                       l2637 1424                       l2629 140E  
                     l2581 131C                       l2573 12DA                       l2565 12CD  
                     l2557 12BD                       l2549 12AD                       l2493 122C  
                     l4085 19C2                       l4077 19A2                       l4069 1FE7  
                     l2397 1DF6                       l2389 1DD7                       l4421 0523  
                     l4413 04FD                       l4405 04E4                       l4333 01BB  
                     l4325 0130                       l4317 00BF                       l4309 0057  
                     l4261 15C7                       l4245 157E                       l4237 1541  
                     l4229 151E                       l4501 08CA                       l3711 1A58  
                     l3703 1A3C                       l4183 18B0                       l4175 1B3C  
                     l4191 198E                       l4167 1F39                       l4159 1F10  
                     l4095 1BCF                       l2671 148F                       l2663 145F  
                     l2655 1444                       l2639 1429                       l2647 1435  
                     l2591 133A                       l2583 1320                       l2575 12F1  
                     l2567 12D1                       l2559 12C1                       l2495 1233  
                     l4079 19A8                       l2911 18D7                       l2399 1DFC  
                     l4431 0556                       l4423 052A                       l4407 04EC  
                     l4351 022B                       l4343 01F4                       l4319 00C7  
                     l4327 0139                       l4271 1639                       l4263 15CB  
                     l4415 0504                       l4255 1599                       l4247 1582  
                     l4239 1545                       l4511 0901                       l4503 08D5  
                     l3713 1A5F                       l3705 1A43                       l4177 1B46  
                     l4193 1994                       l4185 197D                       l4169 1F3A  
                     l4097 1BD1                       l4089 1B83                       l2681 14A3  
                     l2673 1497                       l2665 1463                       l2649 1439  
                     l2593 133F                       l2585 1321                       l2577 1311  
                     l2569 12D5                       l2497 1239                       l2913 18DD  
                     l3721 1C80                       l4441 057B                       l4433 055C  
                     l4425 0539                       l4417 050A                       l4409 04F3  
                     l4361 024D                       l4353 0232                       l4345 01FE  
                     l4329 016E                       l4281 1679                       l4273 163D  
                     l4265 15D9                       l4257 15B5                       l4249 1593  
                     l4521 092E                       l4513 0910                       l4505 08DB  
                     l3715 1A66                       l3707 1A4A                       l4179 1B56  
                     l4195 1999                       l4187 1982                       l3811 094E  
                     l3803 093C                       l2683 14AE                       l2675 149C  
                     l2667 1481                       l2659 144C                       l2587 132A  
                     l2579 131A                       l2499 123D                       l2915 18DF  
                     l2907 18D0                       l3731 1C96                       l3723 1C85  
                     l4451 05A3                       l4443 0586                       l4435 0560  
                     l4427 0542                       l4419 0512                       l4371 0301  
                     l4363 025B                       l4355 023B                       l4347 0219  
                     l4339 01BD                       l4291 16E8                       l4283 169C  
                     l4275 1641                       l4267 15DD                       l4259 15C3  
                     l4523 0935                       l4515 0916                       l4507 08E2  
                     l3709 1A51                       l4189 1987                       l4197 1AAA  
                     l3901 0BEC                       l3821 096A                       l3813 0953  
                     l3805 0943                       l2685 14B2                       l2677 149D  
                     l2669 148A                       l2597 1348                       l2589 132E  
                     l2909 18D1                       l3741 1CB2                       l3733 1C99  
                     l3725 1C87                       l3717 1C79                       l4453 05A7  
                     l4445 0592                       l4437 056E                       l4429 054A  
                     l4381 0335                       l4373 0315                       l4365 0262  
                     l4349 021F                       l4293 1733                       l4285 16BF  
                     l4277 1668                       l4269 1604                       l4461 05C9  
                     l4517 0921                       l4509 08FE                       l4199 1AAF  
                     l3911 0C0D                       l3903 0BED                       l3831 097F  
                     l3823 096F                       l3815 0958                       l3807 0949  
                     l2679 14A1                       l2599 135F                       l3751 1CCF  
                     l3743 1CB8                       l3735 1CA0                       l3727 1C8B  
                     l3719 1C7A                       l4455 05B3                       l4447 0596  
                     l4439 0577                       l4391 0366                       l4383 0344  
                     l4375 031E                       l4367 0267                       l4359 0240  
                     l4295 175A                       l4287 16C3                       l4279 1673  
                     l4463 05DD                       l4519 0928                       l3913 0C12  
                     l3921 0C43                       l3905 0BF1                       l3841 099B  
                     l3833 0984                       l3825 0975                       l3817 0960  
                     l3809 094D                       l3761 1AFD                       l3745 1CBF  
                     l3737 1CA4                       l3729 1C90                       l4457 05BF  
                     l4449 059C                       l4393 036A                       l4385 034B  
                     l4377 0322                       l4369 02C2                       l4297 1763  
                     l4289 16C9                       l4481 081E                       l4473 0805  
                     l3691 19D7                       l3931 0C76                       l3923 0C50  
                     l3915 0C20                       l3907 0C05                       l3851 09C6  
                     l3843 09A0                       l3835 098C                       l3827 0979  
                     l3819 0962                       l2971 116E                       l3771 1B23  
                     l3763 1B04                       l3755 1AF0                       l3739 1CA8  
                     l3747 1CC5                       l4395 0388                       l4387 035A  
                     l4379 0328                       l4299 178C                       l4563 15AD  
                     l4491 0840                       l4483 0823                       l4475 080F  
                     l3693 19E6                       l3685 19CA                       l3933 0C84  
                     l3925 0C5B                       l3917 0C24                       l3861 0A63  
                     l3853 09E3                       l3837 098E                       l3829 097A  
                     l2973 117B                       l3773 1B24                       l3765 1B08  
                     l3757 1AF4                       l3781 19F0                       l3749 1CCA  
                     l4397 03E3                       l4389 035F                       l4493 0860  
                     l4485 0826                       l4477 0814                       l3951 1922  
                     l3943 190F                       l3695 19EB                       l3687 19CC  
                     l3935 0C88                       l3927 0C6A                       l3919 0C3D  
                     l3871 0AC6                       l3863 0A6C                       l3855 09FF  
                     l3847 09A9                       l3839 0996                       l2991 11B5  
                     l2983 1191                       l3775 1B2B                       l3767 1B0C  
                     l3759 1AFA                       l3791 1A0A                       l3783 19F8  
                     l4399 043E                       l4495 087E                       l4487 082B  
                     l4479 0819                       l3945 1910                       l3961 1938  
                     l3953 1927                       l3689 19D3                       l3937 0C89  
                     l3929 0C74                       l3881 0B66                       l3873 0ADF  
                     l3865 0A7C                       l3857 0A2B                       l3849 09B9  
                     l2993 11BE                       l2985 1199                       l2977 1184  
                     l3769 1B1D                       l3777 1B31                       l3793 1A14  
                     l3785 19FB                       l4497 089C                       l4489 0835  
                     l3699 1A2D                       l3947 1916                       l3963 193B  
                     l3955 192A                       l3939 0C94                       l3891 0BD4  
                     l3883 0B8C                       l3875 0AFC                       l3867 0A99  
                     l3859 0A47                       l2995 11D0                       l2987 11AA  
                     l3795 1A1A                       l3787 1A02                       l4499 08A6  
                     l3949 1919                       l3957 1930                       l3893 0BD8  
                     l3885 0BB4                       l3877 0B29                       l3869 0AA9  
                     l2997 11DE                       l2989 11AC                       l3797 1A21  
                     l3789 1A06                       l3973 06FA                       l3965 05E5  
                     l3959 1933                       l3895 0BD9                       l3887 0BBD  
                     l3879 0B39                       l2999 11DF                       l3799 1A27  
                     l3975 0700                       l3967 05EB                       l3983 0CA0  
                     l3897 0BE2                       l3889 0BCB                       l3985 0CA4  
                     l3899 0BE8                       l3979 07AB                       l3995 0D97  
                     l3987 0CA6                       ?_isr 0070                       l3997 0D9E  
                     l3989 0CAD                       STR_1 10B5                       STR_2 10A0  
                     u3100 1DD7                       u3101 1DD6                       u3120 1DE8  
                     u3121 1DE7                       u3115 1DD8                       u3140 1DFC  
                     u3060 1DA9                       u3141 1DFB                       u3125 1DE4  
                     u3061 1DA8                       u3150 1E01                       u3070 1DB4  
                     u3151 1E00                       u3135 1DF0                       u3071 1DB3  
                     u3400 1248                       u3080 1DC5                       u3401 1247  
                     u3081 1DC4                       u3410 1266                       u5010 1E5E  
                     u3411 1265                       u5011 1E5D                       u3500 1311  
                     u3420 1271                       u5020 1E65                       u3501 1310  
                     u3421 1270                       u5021 1E64                       u5005 1E4E  
                     u3510 1320                       u3430 1277                       u5110 1C70  
                     u3511 131F                       u3431 1276                       u5111 1C6F  
                     u3095 1DC9                       u3440 127C                       u5040 1E76  
                     u6000 1C80                       u3441 127B                       u5041 1E75  
                     u5105 1C62                       u6001 1C7F                       u3610 139B  
                     u3530 1336                       u3450 1295                       u5050 1E7B  
                     u6010 1C8B                       u3611 139A                       u3531 1335  
                     u3451 1294                       u5051 1E7A                       u5035 1E68  
                     u6011 1C8A                       u3700 1433                       u3540 133A  
                     u3460 1299                       u3380 123D                       u5060 1C2D  
                     u6020 1C96                       u3701 1432                       u3621 13B2  
                     u3613 1397                       u3605 1379                       u3541 1339  
                     u3525 1323                       u3461 1298                       u3381 123C  
                     u5061 1C2C                       u6021 1C95                       u3710 1439  
                     u3630 13C6                       u3622 13B3                       u3550 133F  
                     u3470 12F1                       u3390 1243                       u6110 1B0C  
                     u3711 1438                       u3631 13C7                       u3623 13B8  
                     u3551 133E                       u3471 12F0                       u3391 1242  
                     u6111 1B0B                       u3800 148F                       u3720 143E  
                     u3640 13E4                       u3632 13CC                       u3624 13B9  
                     u3480 12FC                       u5080 1C41                       u7000 19C2  
                     u6040 1CA8                       u3801 148E                       u3721 143D  
                     u3641 13E3                       u3633 13CD                       u3625 13BE  
                     u3561 1351                       u3481 12FA                       u5081 1C40  
                     u7001 19C1                       u6105 1AFE                       u6041 1CA7  
                     u7010 1B99                       u3810 149C                       u3730 1444  
                     u3650 1409                       u3626 13BF                       u3570 1363  
                     u3562 1358                       u3490 12FD                       u5090 1C53  
                     u4610 117B                       u6130 1B1D                       u6210 1A27  
                     u6050 1CB2                       u7011 1B98                       u3811 149B  
                     u3731 1443                       u3651 1408                       u3571 1362  
                     u3563 135F                       u3475 12ED                       u5091 1C52  
                     u5075 1C32                       u4611 117A                       u6131 1B1C  
                     u6211 1A26                       u6051 1CB1                       u6035 1C9A  
                     u6220 094D                       u7020 1BB5                       u7100 116A  
                     u3820 14A1                       u3740 144B                       u3660 140E  
                     u3580 1367                       u4700 120B                       u4620 118F  
                     u4460 18D7                       u6301 09F1                       u6221 094C  
                     u7021 1BB4                       u7101 1169                       u3821 14A0  
                     u3741 144A                       u3661 140D                       u3581 1366  
                     u4701 120A                       u4621 118E                       u6125 1B0D  
                     u6205 1A1B                       u4461 18D6                       u6302 09F8  
                     u6230 0953                       u7030 1BCF                       u7110 07F9  
                     u3830 14B2                       u3750 1451                       u3590 1376  
                     u4710 1212                       u6150 1B31                       u4470 18DD  
                     u6070 1CC5                       u6311 0A0D                       u6303 09FF  
                     u6231 0952                       u7031 1BCE                       u7111 07F8  
                     u3831 14B1                       u3751 1450                       u3591 1375  
                     u5095 1C4F                       u4711 1211                       u6151 1B30  
                     u6135 1B19                       u4471 18DC                       u6071 1CC4  
                     u6055 1CAE                       u6312 0A14                       u6240 0958  
                     u7200 1F06                       u7120 1E8F                       u7040 10E0  
                     u3760 1463                       u3680 1424                       u4800 1D60  
                     u4640 11D0                       u6160 19F8                       u6080 1CCA  
                     u6401 0B48                       u6321 0A39                       u6313 0A1B  
                     u6241 0957                       u7201 1F05                       u7121 1E8E  
                     u7105 1166                       u7041 10DF                       u3761 1462  
                     u3681 1423                       u4801 1D5F                       u4641 11CF  
                     u6145 1B25                       u6161 19F7                       u6081 1CC9  
                     u6065 1CB9                       u6410 0B72                       u6402 0B4F  
                     u6322 0A40                       u6250 0979                       u7210 1F0C  
                     u7130 1E93                       u7050 10FC                       u3770 1472  
                     u3690 1429                       u4730 1223                       u6090 1AFA  
                     u6403 0B56                       u6331 0A55                       u6323 0A47  
                     u6251 0978                       u7211 1F0B                       u7131 1E92  
                     u7035 1BCB                       u7051 10FB                       u3691 1428  
                     u3675 1419                       u4731 1222                       u4635 11B7  
                     u6091 1AF9                       u7300 1AEF                       u6500 0BF1  
                     u6332 0A5C                       u6260 097F                       u7220 1F10  
                     u7140 1EB3                       u7060 1108                       u3780 1481  
                     u4820 1D7B                       u4660 11EE                       u6180 1A0A  
                     u7301 1AEE                       u6501 0BF0                       u6421 0B7E  
                     u6333 0A63                       u6261 097E                       u7221 1F0F  
                     u7141 1EB2                       u7061 1107                       u3781 1480  
                     u4821 1D7A                       u4725 1215                       u4661 11ED  
                     u4645 11CC                       u6181 1A09                       u6510 0C05  
                     u6430 0B9A                       u6422 0B85                       u6270 0984  
                     u7230 1F25                       u3790 148A                       u4670 11F2  
                     u6190 1A14                       u7310 14C4                       u6511 0C04  
                     u6423 0B8C                       u6415 0B6D                       u6351 0A8B  
                     u6271 0983                       u7071 1117                       u3791 1489  
                     u3775 146D                       u4815 1D62                       u4671 11F1  
                     u4655 11E1                       u6191 1A13                       u6175 19FC  
                     u7311 14C3                       u6520 0C0C                       u6352 0A92  
                     u6280 099B                       u7240 1F35                       u7160 1ED4  
                     u7080 1130                       u7072 1118                       u4840 1D99  
                     u4680 11F9                       u7400 16C3                       u7320 14E4  
                     u6521 0C0B                       u6441 0BA6                       u6361 0AB8  
                     u6353 0A99                       u6345 0A65                       u6281 099A  
                     u7241 1F34                       u7161 1ED3                       u7081 112F  
                     u7073 111D                       u4841 1D98                       u4825 1D77  
                     u4681 11F8                       u7401 16C2                       u7321 14E3  
                     u6530 0C12                       u6442 0BAD                       u6362 0ABF  
                     u6290 09A0                       u7250 1F39                       u7074 111E  
                     u7410 175A                       u7330 1532                       u6531 0C11  
                     u6443 0BB4                       u6435 0B95                       u6363 0AC6  
                     u6291 099F                       u7251 1F38                       u7235 1F20  
                     u7155 1EC6                       u7091 113F                       u7075 1123  
                     u4835 1D8B                       u6195 1A10                       u7411 1759  
                     u7331 1531                       u7260 1982                       u6540 0C24  
                     u7180 1EF6                       u7092 1140                       u7076 1124  
                     u4780 1D4C                       u7500 01F3                       u7420 178C  
                     u7340 1540                       u7261 1981                       u6541 0C23  
                     u6381 0AEE                       u7181 1EF5                       u7093 1145  
                     u4781 1D4B                       u6605 0608                       u7501 01F2  
                     u7421 178B                       u7341 153F                       u7270 1994  
                     u5910 19EB                       u6550 0C33                       u6470 0BD8  
                     u6382 0AF5                       u7094 1146                       u6630 0700  
                     u7510 01FE                       u7430 17A3                       u7350 1592  
                     u7271 1993                       u5911 19EA                       u6471 0BD7  
                     u6455 0BB6                       u6391 0B1B                       u6383 0AFC  
                     u6375 0AC8                       u7175 1EE8                       u7095 114B  
                     u4695 11FB                       u6631 06FF                       u6615 0664  
                     u7511 01FD                       u7431 17A2                       u7351 1591  
                     u5920 1A31                       u7280 1AB9                       u6560 0C50  
                     u6392 0B22                       u7096 114C                       u4960 1E18  
                     u6800 0F4B                       u6720 0D9E                       u7600 035F  
                     u7520 0219                       u7440 002E                       u7360 15C3  
                     u5921 1A30                       u5905 19DE                       u6561 0C4F  
                     u6465 0BCD                       u6393 0B29                       u4961 1E17  
                     u6625 06B9                       u6801 0F4A                       u6721 0D9D  
                     u6705 0D0B                       u7601 035E                       u7521 0218  
                     u7505 01EF                       u7441 17FA                       u7361 15C0  
                     u5930 1A3C                       u7290 1ADD                       u6570 0C6A  
                     u6490 0BEC                       u4970 1E2F                       u7530 022B  
                     u7450 0057                       u7370 15C7                       i1l99 1973  
                     u5931 1A3B                       u6571 0C69                       u6555 0C2E  
                     u6491 0BEB                       u7195 1EFB                       u4795 1D51  
                     u6715 0D56                       u7531 022A                       u7451 0056  
                     u7435 179F                       u7371 15C6                       u5940 1A43  
                     u6580 0C88                       u4980 1E45                       u6900 1FC6  
                     u7700 0556                       u7540 024D                       u7460 007E  
                     u7380 1604                       u5941 1A42                       u6581 0C87  
                     u6565 0C4C                       u6485 0BDB                       u4981 1E44  
                     u6901 1FC5                       u6645 071D                       u7701 0555  
                     u7541 024C                       u7461 007D                       u7445 17F5  
                     u7381 1603                       u5950 1A4A                       u4990 1E4C  
                     u6910 1FCD                       u6590 05EB                       u6670 0CA4  
                     u7710 0560                       u7630 04EB                       u7550 025B  
                     u7470 008D                       u7390 1668                       u5951 1A49  
                     u6575 0C66                       u4991 1E4B                       u4975 1E2A  
                     u6911 1FCC                       u6655 076A                       u6591 05EA  
                     u6815 0F5E                       u6735 0DB1                       u6671 0CA3  
                     u7711 055F                       u7631 04EA                       u7615 03E6  
                     u7551 025A                       u7471 008C                       u7391 1667  
                     u5960 1A51                       u6840 1F56                       u6760 0E5A  
                     u6680 0CAD                       u7720 056E                       u7640 0503  
                     u7480 00B6                       u7800 0916                       u5961 1A50  
                     u6841 1F55                       u6665 07B6                       u6825 0F9A  
                     u6761 0E59                       u6745 0DED                       u6681 0CAC  
                     u7721 056D                       u7641 0502                       u7625 048C  
                     u7545 0249                       u7481 00B5                       u7801 0915  
                     u5970 1A58                       u5890 19D7                       u6930 1FDF  
                     u6850 1F70                       u7730 0586                       u7650 050A  
                     u7570 0314                       u7810 0921                       u5971 1A57  
                     u5891 19D6                       u6931 1FDE                       u6851 1F6F  
                     u6835 0FD6                       u6755 0E29                       u7731 0585  
                     u7651 0509                       u7571 0313                       u7475 0089  
                     u7811 0920                       u5980 1A5F                       u6940 1FE6  
                     u7740 059C                       u7660 0512                       u7580 0335  
                     u5981 1A5E                       u6941 1FE5                       u6925 1FCF  
                     u7741 059B                       u7725 056A                       u7661 0511  
                     u7581 0334                       u7565 026A                       u5990 1A66  
                     u6870 1FA9                       u7750 05B3                       u7670 0523  
                     u7590 0344                       u5991 1A65                       u6871 1FA8  
                     u6775 0E7C                       u6695 0CCF                       u7751 05B2  
                     u7735 0582                       u7671 0522                       u7591 0343  
                     u7495 01C0                       u6960 1FF7                       u7760 05BF  
                     u7680 0539                       u6961 1FF6                       u6865 1F94  
                     u6785 0EB8                       u7761 05BE                       u7681 0538  
                     u7585 0331                       u6970 19A8                       u6890 1FC2  
                     u7770 05DD                       u7690 054A                       u7907 1B52  
                     u6971 19A7                       u6955 1FE9                       u6891 1FC1  
                     u6875 1FA5                       u6795 0F03                       u7771 05DA  
                     u7691 0549                       u7675 051F                       u7595 0340  
                     u7827 08EC                       u7780 08DB                       u7917 1B64  
                     u6885 1FB5                       u7685 0535                       u7837 08FA  
                     u7781 08DA                       u7790 08E2                       u7927 191D  
                     u7847 0909                       u7791 08E1                       u6985 19AF  
                     u7857 0932                       u7867 1905                       u6995 19B6  
                     u7877 1935                       u7887 193D                       u7897 1B42  
        ?_Lcd_Write_String 0020                       _conv 1A6A                       _main 0805  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0022  
             _sprintf$1197 00BA            __end_of_Lcd_Cmd 1926                      ??_isr 0073  
            ___fltol@sign1 0064                      ?_conv 0048            __end_of___fladd 14B4  
                    ?_main 0070            __end_of___awdiv 1E0B            __end_of___flneg 07FC  
          __end_of___awmod 1CD4            __end_of___flmul 0C9D            __end_of___flsub 1C23  
          __end_of___fltol 1E87                      _ANSEL 0188            __end_of___lldiv 1DA2  
          ___awdiv@divisor 0024            __end_of___llmod 1C79            __end_of___lwdiv 1B36  
                    i1l104 195C                      i1l113 1D39            __end_of___lwmod 1A2C  
          ___awdiv@counter 0029                      _RCREG 001A            __end_of_cfg_adc 190C  
                    _SPBRG 0099                      _PORTA 0005            __end_of_cfg_clk 189E  
  __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019                      _bmenu 00E7            __end_of_dpowers 10A0  
          __end_of_int_adc 195D                      _scale 0C9D            __end_of_isdigit 18E1  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 05E2           __end_of_Lcd_Init 1B83           __end_of_Lcd_Port 1A6A  
          __initialization 000F               __end_of_conv 1AAA               __end_of_main 093C  
                   ??_conv 004C                     ??_main 00D5         __size_of_Lcd_Clear 000D  
     __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0024                     ?_scale 0048  
                   _ADRESH 001E           ___awdiv@dividend 0026                     _ANSELH 0189  
                   i1l3211 1953                     i1l3213 1959                     i1l3221 1CF1  
                   i1l3207 1941                     i1l3223 1CF4                     i1l3231 1D19  
                   i1l3215 1CD4                     i1l3209 194C                     i1l3233 1D1E  
                   i1l3225 1CFC                     i1l3217 1CD8                     i1l3235 1D26  
                   i1l3227 1D0B                     i1l3219 1CDE                     i1l3237 1D35  
                   i1l3229 1D0C                     i1l3581 1963                     i1l3583 1968  
                   i1l3585 196E                     i1l3579 195D                     u530_20 1D26  
                   u530_21 1D25                     u526_20 194C                     u526_21 194B  
                   u527_20 1CDE                     u527_21 1CDD                     u528_20 1CFC  
                   u528_21 1CFB                     u529_20 1D1E                     u529_21 1D1D  
                   u583_20 1963                     u583_21 1962                     u584_20 196E  
                   u584_21 196D                  ??_Lcd_Cmd 0076                     _SPBRGH 009A  
                   u793_27 1CE6                     u794_27 1D04                     u795_27 1D12  
                   u796_27 1D2E    __size_of_Lcd_Write_Char 001B           __end_of_cfg_inte 18B0  
         __end_of___xxtofl 1F43           __end_of__powers_ 1044                     ___flge 10CA  
                   ___fleq 1B83                  ??___fladd 0064                     ___wmul 19A0  
                ??___awdiv 0028                     _cfg_io 18BD                  ??___flneg 0075  
                ??___awmod 0075                  ??___flmul 0036                  ??___flsub 0078  
                ??___fltol 005F                  ??___lldiv 0075                  ??___llmod 0075  
                ??___lwdiv 0077                  ??___lwmod 0075                  ??_cfg_adc 0075  
                ??_cfg_clk 0075                     _fround 05E2           ___awdiv@quotient 002B  
          ___awmod@divisor 0020           __end_of_int_uart 1D3A            ___awmod@counter 0076  
                   conv@aa 0054                  ??_int_adc 0070                  ??_isdigit 0075  
       __size_of__Umul8_16 0029                     saved_w 007E                  ??_sprintf 00B5  
          Lcd_Set_Cursor@a 0023            Lcd_Set_Cursor@b 0021                 ___flge@ff1 0020  
               ___flge@ff2 0024               ___xxtofl@arg 002A               ___xxtofl@exp 0029  
             ___xxtofl@val 0020                 ___fleq@ff1 0020                 ___fleq@ff2 0024  
  __end_of__initialization 002A                 ___flneg@f1 0020          __end_of_Lcd_Clear 18BD  
               ___fltol@f1 005B             __pcstackCOMMON 0070               __pidataBANK1 07FC  
       __size_of_cfg_usart 0015              __end_of_scale 1000             _Lcd_Set_Cursor 197A  
               __div_to_l_ 116E                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 002D            __div_to_l_@cntr 002C                    ??_scale 004C  
          __div_to_l_@quot 0028               sprintf@width 00C5                 __pbssBANK1 00D8  
               __pbssBANK3 0190              __div_to_l_@f1 0020              __div_to_l_@f2 0024  
        __end_of__Umul8_16 19F0                 __pmaintext 0805                    ?___flge 0020  
                  ?___fleq 0020                    ?___wmul 0020                    ?_cfg_io 0070  
               __pintentry 0004                    ?_fround 0048  __size_of_Lcd_Write_String 0046  
   __end_of_Lcd_Set_Cursor 19A0                  ?_cfg_inte 0070                  ?___xxtofl 0020  
               ??_Lcd_Init 0021                 ??_Lcd_Port 0075                 __stringtab 1000  
        __end_of_cfg_usart 18F6             _Lcd_Write_Char 1926                    _Lcd_Cmd 190C  
                ?_int_uart 0070          __end_of__npowers_ 1078                 _scale$1196 0056  
          __size_of___flge 00A4            __size_of___fleq 0050                    ___fladd 122C  
                  ___awdiv 1DA2                    ___flneg 07EF                    ___awmod 1C79  
                  ___flmul 093C                    ___flsub 1BD3                    ___fltol 1E0B  
                  ___lldiv 1D3A            __size_of___wmul 0027                    ___llmod 1C23  
          __size_of_cfg_io 0012                    ___lwdiv 1AF0                    ___lwmod 19F0  
                  _cfg_adc 18F6                    _cfg_clk 1896            __size_of_fround 020D  
          ?_Lcd_Set_Cursor 0021                    __ptext1 14B4                    __ptext2 0C9D  
                  __ptext3 1C79                    __ptext4 1DA2                    __ptext5 18CF  
                  __ptext6 05E2                    __ptext7 19F0                    __ptext8 1AF0  
                  __ptext9 1F43                ?__div_to_l_ 0020                    _dpowers 1078  
                  _int_adc 1941                 ??_cfg_inte 0075                    _isdigit 18CF  
             __size_of_isr 001D                 ??___xxtofl 0024           ___awmod@dividend 0022  
                  _sprintf 14B4                    clrloop0 189F     __end_of_Lcd_Write_Char 1941  
     end_of_initialization 002A                 ??_int_uart 0070            ___lldiv@divisor 0020  
          ___lldiv@counter 002C                  _RCSTAbits 0018                    psplit$0 E0036  
                Lcd_Port@a 0075             __tdiv_to_l_@f1 0020             __tdiv_to_l_@f2 0024  
            ??__tdiv_to_l_ 0028                  _PORTCbits 0007                ___fladd@grs 006F  
            ___xxtofl@sign 0028            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0020  
        Lcd_Write_String@i 0025                 conv@result 0050                ___flmul@grs 003D  
                _TXSTAbits 0098        __size_of__div_to_l_ 00BE                  _Lcd_Clear 18B0  
           __end_of___flge 116E             __end_of___fleq 1BD3             __end_of___wmul 19C7  
           __end_of_cfg_io 18CF           _Lcd_Write_String 1AAA          pnum$text1_split_1 0036  
              _BAUDCTLbits 0187             __end_of_fround 07EF        start_initialization 000F  
      __end_of__tdiv_to_l_ 2000                __end_of_isr 197A          __size_of_Lcd_Init 004D  
        __size_of_Lcd_Port 003E            ___llmod@divisor 0020            ___llmod@counter 0076  
               ?_Lcd_Clear 0070                   ??___flge 0028                   ??___fleq 0028  
                 ??___wmul 0075                   ??_cfg_io 0075                  __Umul8_16 19C7  
              __pdataBANK1 00E7            Lcd_Write_Char@a 0077                   ??_fround 004C  
            sprintf@tmpval 00C7                  ___fladd@a 0060                  ___fladd@b 005C  
               fround@prec 005B                  ___flmul@a 0032                  ___flmul@b 002E  
              __pbssCOMMON 0078                  ___flsub@a 00A0                  ___flsub@b 00A4  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of_cfg_inte 000A          __size_of___xxtofl 00BC               _isdigit$1010 0075  
                 ?_Lcd_Cmd 0070                sprintf@flag 00C3                sprintf@eexp 00CB  
              sprintf@fval 00CD                sprintf@prec 00D2                  _cfg_usart 18E1  
         ___lwdiv@dividend 0026          __size_of_int_uart 0066           ??_Lcd_Set_Cursor 0022  
                 ?___fladd 005C                   ?___awdiv 0024                   ?___flneg 0020  
                 ?___awmod 0020                   ?___flmul 002E                   ?___flsub 00A0  
                 ?___fltol 005B                   ?___lldiv 0020                   ?___llmod 0020  
                __npowers_ 1044                 ?__Umul8_16 0075                   ?___lwdiv 0024  
                 ?___lwmod 0020                   ?_cfg_adc 0070                   ?_cfg_clk 0070  
                __pstrings 1000                __tdiv_to_l_ 1F43               ??__div_to_l_ 0075  
                 ?_int_adc 0070                   ?_isdigit 0070           ___lwdiv@quotient 0029  
                 ?_sprintf 00A8             __size_of_scale 0363          interrupt_function 0004  
           ___wmul@product 0075                  clear_ram0 189E                 ?_cfg_usart 0070  
                 _PIE1bits 008C                   Lcd_Cmd@a 0020                   _PIR1bits 000C  
       __end_of__div_to_l_ 122C                ??_Lcd_Clear 0078                 _ADCON0bits 001F  
              __stringbase 100F                 _ADCON1bits 009F          ___wmul@multiplier 0020  
         ??_Lcd_Write_Char 0076                   _Lcd_Init 1B36                   _Lcd_Port 1A2C  
 __end_of_Lcd_Write_String 1AF0           __size_of_Lcd_Cmd 001A                ??__Umul8_16 0020  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000D  
         __size_of___awmod 005B           __size_of___flmul 0361           __size_of___flsub 0050  
         __size_of___fltol 007C           __size_of___lldiv 0068           __size_of___llmod 0056  
         __size_of___lwdiv 0046           __size_of___lwmod 003C           __size_of_cfg_adc 0016  
         __size_of_cfg_clk 0008                _fround$1194 0057                _fround$1195 0053  
       __end_of__stringtab 1010                 sprintf@val 00BF                   _cfg_inte 18A6  
                 ___xxtofl 1E87           __size_of_int_adc 001C           __size_of_isdigit 0012  
          ___lwdiv@divisor 0024            ___lwdiv@counter 0028                   __ptext10 116E  
                 __ptext11 19A0                   __ptext20 1A6A                   __ptext12 1C23  
                 __ptext21 1E87                   __ptext13 1D3A                   __ptext30 1926  
                 __ptext22 093C                   __ptext14 1E0B                   __ptext31 197A  
                 __ptext23 19C7                   __ptext15 1BD3                   __ptext32 1B36  
                 __ptext24 18E1                   __ptext16 122C                   __ptext33 18B0  
                 __ptext25 18BD                   __ptext17 07EF                   __ptext34 190C  
                 __ptext26 18A6                   __ptext18 10CA                   __ptext35 1A2C  
                 __ptext27 1896                   __ptext19 1B83                   __ptext36 195D  
                 __ptext28 18F6                   __ptext37 1CD4                   __ptext29 1AAA  
                 __ptext38 1941                   __powers_ 1010           __size_of_sprintf F12E  
            __size_of_conv 0040              __size_of_main 0137                  pnum$text1 000E  
                 _int_uart 1CD4                ??_cfg_usart 0075                 _INTCONbits 000B  
                 isdigit@c 0076                   scale@scl 005A                   intlevel1 0000  
                sprintf@ap 00BE           __tdiv_to_l_@exp1 0031           __tdiv_to_l_@cntr 0030  
                sprintf@sp 00D1           __tdiv_to_l_@quot 002C           ___lwmod@dividend 0022  
         ___lldiv@dividend 0024                  stringcode 100A                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 0024               ?__tdiv_to_l_ 0020     __Umul8_16@multiplicand 0075  
                 sprintf@c 00D4                   sprintf@f 00A8           ___lldiv@quotient 0028  
          ___lwmod@divisor 0020            ___lwmod@counter 0076                   stringdir 100A  
                 stringtab 1000              ___fladd@signs 006C               ___fladd@aexp 006D  
             ___fladd@bexp 006E       __Umul8_16@multiplier 0026          __Umul8_16@product 0022  
=======
BANK1               50     2D      44       7       85.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 26 18:40:37 2021

                        _f 00DA                          _g 00CD                          pc 0002  
                       _V1 006F                         _V2 00D9               ___awdiv@sign 0026  
                       fsr 0004        ___wmul@multiplicand 0075        __Umul8_16@word_mpld 0022  
                      l110 100F                        l113 1B0C                        l105 0939  
                      l202 1C98                        l122 1A96                        l131 1AA8  
                      l116 1A9E                        l134 1AB0                        l119 1AF6  
                      l128 1B62                        l137 1C54                        l170 1BFE  
                      l162 1BE0                        l322 0FFF                        l171 1BFF  
                      l163 1BE3                        l411 1B87                        l315 07C4  
                      l172 1C05                        l164 1BE9                        l173 1C06  
                      l165 1BEA                        l181 1B26                        l405 05B7  
                      l174 1C0C                        l166 1BF0                        l190 1BAD  
                      l175 1C0D                        l167 1BF1                        l176 1C13  
                      l168 1BF7                        l184 1ABD                        l600 1F7A  
                      l344 15C3                        l169 1BF8                        l193 1D28  
                      l409 1B6F                        l178 1C14                        l603 1FE6  
                      l196 1B41                        l604 1FFF                        l612 1F5B  
                      l445 1EDF                        l622 1F5B                        l630 1176  
                      l390 04EE                        l382 0327                        l375 02E3  
                      l608 080A                        l626 11B3                        l562 0873  
                      l619 1F46                        l627 1125                        l715 1CDE  
                      l740 137E                        l580 11D6                        l637 11A6  
                      l725 07FE                        l742 1355                        l590 1264  
                      l583 1234                        l575 1E77                        l832 0C9C  
                      l736 12D7                        l761 146D                        l665 1E1E  
                      l770 14CD                        l851 1BC4                        l595 1D47  
                      l579 1273                        l844 0C90                        l596 1D63  
                      l853 1BD6                        l597 1D78                        l757 1449  
                      l749 14FB                        l838 0C08                        l782 1DC8  
                      l767 148F                        l890 10CC                        l882 10A4  
                      l778 14EF                        l779 14FB                        l876 105F  
                      l878 10F6                        l896 1AE1                        l889 10C0  
                      _RC1 0039                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      _v11 00D5                        _v22 00D1                        _isr 1ABE  
                      _val 007A                        fsr0 0004                        indf 0000  
             ___awmod@sign 0079               ___flmul@aexp 003C               ___flmul@bexp 003D  
             ___flmul@sign 0037               ___flmul@temp 0042               ___flmul@prod 003E  
             ___fltol@exp1 0061                       l3000 1B65                       l3002 1B69  
                     l3100 1F34                       l3004 1B76                       l2310 1BCD  
                     l2302 1BB1                       l3110 1F50                       l3006 1B7D  
                     l4000 1B9C                       l3200 1006                       l2312 1BD2  
                     l2304 1BB3                       l3008 1B83                       l2400 1E4C  
                     l4002 1BA2                       l4010 1C74                       l3210 1A91  
                     l3202 100D                       l2306 1BBA                       l3106 1F3B  
                     l2410 1E6E                       l2402 1E56                       l4004 1BA7  
                     l4012 1C7A                       l3212 1AF7                       l3220 1AE2  
                     l2308 1BBE                       l2500 12C4                       l3132 1D79  
                     l3108 1F4B                       l2420 1CA3                       l2412 1E73  
                     l2404 1E5C                       l4100 16E8                       l4020 14FF  
                     l4006 1C55                       l3214 1B00                       l3206 1A97  
                     l3230 1AF2                       l3222 1AE9                       l4014 1C18  
                     l3070 0808                       l2510 12E1                       l2502 12CC  
                     l3134 1D7D                       l2430 1CC6                       l2422 1CA6  
                     l2406 1E63                       l4102 1733                       l4110 1794  
                     l4030 151C                       l4022 1506                       l4008 1C58  
                     l3216 1B04                       l3208 1A9D                       l3232 1AF3  
                     l3224 1AED                       l4016 1C4C                       l3072 080A  
                     l2600 1456                       l2520 12F5                       l2512 12E5  
                     l2504 12CD                       l2432 1CCC                       l2424 1CAD  
                     l2416 1C99                       l2408 1E69                       l4200 033C  
                     l4120 0070                       l4112 17A3                       l4104 175A  
                     l4040 155C                       l4032 152C                       l4024 150C  
                     l3218 1B09                       l3226 1AEE                       l2610 1471  
                     l2530 1309                       l2522 12F9                       l2514 12E9  
                     l2506 12CF                       l3090 1F16                       l3082 1EF6  
                     l2434 1CCD                       l2426 1CB1                       l2418 1C9D  
                     l2450 07D9                       l2442 07C5                       l4210 0453  
                     l4202 0340                       l4130 00D7                       l4122 007F  
                     l4114 17EA                       l4106 1763                       l4050 1582  
                     l4034 1530                       l4042 156C                       l4026 1513  
                     l3228 1AF1                       l3068 0800                       l2612 1474  
                     l2604 145F                       l2620 1481                       l2540 131D  
                     l2532 130D                       l2524 12FD                       l2516 12ED  
                     l2508 12DD                       l3092 1F1A                       l3084 1F0B  
                     l3076 1EE0                       l2436 1CD4                       l2428 1CB5  
                     l2452 07DD                       l2444 07CB                       l2460 07FA  
                     l2380 1E20                       l4220 04CD                       l4212 045F  
                     l4204 035E                       l4140 018F                       l4124 00A8  
                     l4116 0020                       l4108 178C                       l4060 15C1  
                     l4052 1597                       l4044 157A                       l4036 1545  
                     l4028 1518                       l4300 08AB                       l2710 09FF  
                     l2702 09A9                       l2630 1494                       l2622 1482  
                     l2614 1476                       l2606 1468                       l2550 1362  
                     l2534 1311                       l2526 1301                       l2518 12F1  
                     l2542 1321                       l2470 1285                       l3086 1F0C  
                     l3078 1EED                       l2438 1CDA                       l2454 07E7  
                     l2446 07CE                       l2390 1E34                       l2382 1E24  
                     l4230 04F9                       l4222 04D3                       l4206 03B9  
                     l4214 04BA                       l4142 0191                       l4134 0122  
                     l4126 00B1                       l4118 0049                       l4070 15F3  
                     l4054 15AA                       l4046 157B                       l4038 1558  
                     l4310 0910                       l4302 08CB                       l2720 0A7C  
                     l2712 0A2B                       l2704 09B9                       l2800 1AAE  
                     l2640 14D2                       l2632 1499                       l2624 1486  
                     l2616 147B                       l2608 146C                       l2552 1364  
                     l2560 1376                       l2544 1322                       l2536 1315  
                     l2528 1305                       l2480 1299                       l2472 1286  
                     l2464 1274                       l3088 1F14                       l2456 07ED  
                     l2448 07D5                       l2392 1E3A                       l2384 1E29  
                     l4240 052C                       l4232 0500                       l4216 04C2  
                     l4208 0414                       l4160 0201                       l4152 01CA  
                     l4128 00B9                       l4136 012B                       l4080 1649  
                     l4072 15F7                       l4224 04DA                       l4064 15C5  
                     l4056 15AE                       l4048 157F                       l4320 0936  
                     l4312 0914                       l4304 08E9                       l2730 0AFC  
                     l2722 0A99                       l2714 0A47                       l2706 09C6  
                     l2650 14E9                       l2642 14D7                       l2634 14A7  
                     l2626 148C                       l2618 147D                       l2570 13A7  
                     l2562 1382                       l2554 1368                       l2546 1339  
                     l2538 1319                       l2490 12AF                       l2474 128B  
                     l2482 129B                       l2466 127B                       l3098 1F22  
                     l2458 07F4                       l2394 1E3D                       l2386 1E2B  
                     l2378 1E1F                       l4250 0551                       l4242 0532  
                     l4234 050F                       l4226 04E0                       l4218 04C9  
                     l4170 0223                       l4162 0208                       l4154 01D4  
                     l4138 0160                       l4090 1689                       l4082 164D  
                     l4074 1605                       l4066 15E1                       l4058 15BF  
                     l4314 091A                       l4306 08F1                       l3700 1B17  
                     l3196 1001                       l2740 0BB4                       l2732 0B29  
                     l2724 0AA9                       l2716 0A63                       l2708 09E3  
                     l2660 0943                       l3540 1B57                       l2652 14EB  
                     l2644 14DF                       l2636 14AB                       l2580 13BE  
                     l2572 13AB                       l2564 1387                       l2556 1369  
                     l2548 1359                       l2492 12B5                       l2484 12A3  
                     l2476 1290                       l2468 1281                       l2396 1E44  
                     l2388 1E2F                       l4260 0579                       l4252 055C  
                     l4244 0536                       l4236 0518                       l4228 04E8  
                     l4180 02D7                       l4172 0231                       l4164 0211  
                     l4156 01EF                       l4148 0193                       l4092 169C  
                     l4084 1651                       l4076 1609                       l4068 15EF  
                     l4316 0929                       l4308 0907                       l3702 1B1A  
                     l3710 1B31                       l3198 1004                       l2750 0BD9  
                     l2742 0BBD                       l2734 0B39                       l2726 0AC6  
                     l2718 0A6C                       l2670 0958                       l2662 0949  
                     l3534 1B43                       l2654 14F6                       l2646 14E4  
                     l2638 14C9                       l2590 1421                       l2582 13BF  
                     l2574 13AF                       l2558 1372                       l2494 12B9  
                     l2486 12A8                       l2478 1298                       l2398 1E48  
                     l4262 057D                       l4254 0568                       l4246 0544  
                     l4238 0520                       l4190 030B                       l4182 02EB  
                     l4174 0238                       l4158 01F5                       l4094 16BF  
                     l4086 1678                       l4078 1630                       l4270 059F  
                     l4318 092F                       l3640 1BEE                       l3704 1B23  
                     l3712 1B34                       l2760 0BF1                       l2752 0BE2  
                     l2744 0BCB                       l2736 0B66                       l2728 0ADF  
                     l2680 0975                       l2672 0960                       l2664 094D  
                     l3536 1B46                       l2656 14FA                       l2648 14E5  
                     l2592 1427                       l2584 13C8                       l2576 13B8  
                     l2568 1390                       l2496 12BA                       l2488 12AE  
                     l2832 06D0                       l2824 05BB                       l3720 0CA4  
                     l4264 0589                       l4256 056C                       l4248 054D  
                     l4192 031A                       l4184 02F4                       l4176 023D  
                     l4168 0216                       l4096 16C3                       l4088 1683  
                     l4272 05B3                       l3650 1C11                       l3642 1BF5  
                     l3634 1BD8                       l3714 1B39                       l3706 1B28  
                     l2770 0C20                       l2762 0C05                       l2746 0BD4  
                     l2754 0BE8                       l2738 0B8C                       l2690 098C  
                     l2682 0979                       l2674 0962                       l2666 094E  
                     l2658 093C                       l3538 1B51                       l2594 142C  
                     l2578 13BA                       l2586 13CD                       l2498 12BF  
                     l3810 11B4                       l2834 06D6                       l2826 05C1  
                     l3730 0D97                       l3722 0CA6                       l4266 0595  
                     l4258 0572                       l4194 0321                       l4186 02F8  
                     l4178 0298                       l4098 16C9                       l4362 15D9  
                     l4290 088D                       l4282 0874                       l3644 1BFC  
                     l3636 1BDC                       l3716 1B3C                       l3708 1B2B  
                     l2780 0C5B                       l2772 0C24                       l2756 0BEC  
                     l2748 0BD8                       l2692 098E                       l2684 097A  
                     l2676 096A                       l2668 0953                       l3900 1F72  
                     l2588 13E3                       l2596 143B                       l3812 11C1  
                     l3804 119B                       l3660 0819                       l3652 080B  
                     l3732 0D9E                       l3724 0CAD                       l3740 0E53  
                     l4196 0330                       l4188 02FE                       l4292 0892  
                     l4284 087E                       l3646 1C03                       l3638 1BE7  
                     l2790 0C88                       l2782 0C6A                       l2774 0C3D  
                     l2766 0C0D                       l2758 0BED                       l2694 0996  
                     l2686 097F                       l2678 096F                       l3910 1FC2  
                     l3902 1F8E                       l2598 1451                       l3830 11FB  
                     l3822 11D7                       l3806 11AB                       l2838 0781  
                     l3670 082E                       l3662 081D                       l3654 080E  
                     l3750 0F4B                       l3742 0E5A                       l3718 0CA0  
                     l4198 0335                       l4294 0895                       l4286 0883  
                     l3648 1C0A                       l2792 0C89                       l2784 0C74  
                     l2768 0C12                       l2776 0C43                       l2696 099B  
                     l2688 0984                       l3912 1FFC                       l3904 1F96  
                     l3920 1DD3                       l3840 122E                       l3832 1204  
                     l3824 11DF                       l3816 11CA                       l3760 110A  
                     l3680 0851                       l3672 0831                       l3664 0822  
                     l3656 0812                       l3736 0E26                       l4296 089A  
                     l4288 0888                       l2794 0C94                       l2786 0C76  
                     l2778 0C50                       l2698 09A0                       l3914 1FFE  
                     l3906 1F9A                       l3930 1E07                       l3922 1DD6  
                     l3842 1238                       l3850 1252                       l3834 1216  
                     l3826 11F0                       l3770 1126                       l2890 1AE0  
                     l2882 1AD1                       l3690 086A                       l3682 0857  
                     l3674 0838                       l3666 0826                       l3658 0817  
                     l3754 0FD3                       l4298 08A2                       l2788 0C84  
                     l3940 1043                       l3908 1FBE                       l3932 1E10  
                     l3924 1DE3                       l3836 1224                       l3828 11F2  
                     l3780 114F                       l3772 112C                       l3764 1113  
                     l2884 1AD2                       l3692 086F                       l3684 0858  
                     l3676 083C                       l3668 0828                       l3748 0F44  
                     l3950 1070                       l3942 1047                       l2798 1AA8  
                     l3870 1E9E                       l3862 1E78                       l3926 1DE7  
                     l3934 1E16                       l3918 1DC9                       l3838 1225  
                     l3790 117A                       l3782 115D                       l3774 113B  
                     l3758 10F7                       l2886 1AD8                       l3686 085F  
                     l3678 0840                       l3696 1B0E                       l3960 109B  
                     l3952 1075                       l3944 1057                       l3880 1ED1  
                     l3872 1EA7                       l3864 1E8A                       l3928 1DF9  
                     l3856 1259                       l3848 1240                       l3784 1167  
                     l3776 113D                       l2888 1ADE                       l3688 0865  
                     l3698 1B11                       l3970 10CE                       l3962 10AB  
                     l3954 1082                       l3946 1067                       l3938 103E  
                     l3890 1D5B                       l3874 1EB9                       l3866 1E8D  
                     l3882 1ED7                       l3858 1269                       l3786 1168  
                     l3778 1146                       l3972 10E4                       l3964 10B6  
                     l3956 1089                       l3892 1D75                       l3876 1EC7  
                     l3868 1E9A                       l3796 1182                       l3788 1170  
                     l3990 1D03                       l3982 1CDF                       l3974 10E9  
                     l3966 10BA                       l3958 108D                       l3894 1D77  
                     l3886 1D29                       l3878 1EC8                       l2998 1B63  
                     l3798 1194                       l3992 1AB1                       l3984 1CE5  
                     l3976 10ED                       l3968 10C4                       l3888 1D3F  
                     l3986 1CEE                       l3994 1B8B                       l3978 10EE  
                     l3898 1F5C                       l3988 1CFD                       l3996 1B90  
                     ?_isr 0070                       l3998 1B95                       STR_1 18A0  
                     STR_2 18B0                       u3110 1E24                       u3111 1E23  
                     u4000 0B9A                       u3200 1CA3                       u3120 1E2F  
                     u3201 1CA2                       u3121 1E2E                       u3130 1E3A  
                     u4011 0BA6                       u3131 1E39                       u4100 0C12  
                     u4012 0BAD                       u3220 1CB5                       u3300 07E7  
                     u4101 0C11                       u4013 0BB4                       u4005 0B95  
                     u3221 1CB4                       u3301 07E6                       u4110 0C24  
                     u3150 1E4C                       u4111 0C23                       u3215 1CA7  
                     u3151 1E4B                       u4120 0C33                       u4040 0BD8  
                     u3400 12DD                       u5000 1F4B                       u3240 1CC6  
                     u3320 07FA                       u3160 1E56                       u4041 0BD7  
                     u4025 0BB6                       u3401 12DC                       u5001 1F4A  
                     u3241 1CC5                       u3321 07F9                       u3305 07E3  
                     u3161 1E55                       u3145 1E3E                       u4130 0C50  
                     u3410 12E1                       u3330 1285                       u5010 1F50  
                     u4210 06D6                       u4131 0C4F                       u4035 0BCD  
                     u3411 12E0                       u3331 1284                       u5011 1F4F  
                     u3235 1CB6                       u3315 07EE                       u4211 06D5  
                     u4140 0C6A                       u4060 0BEC                       u3500 1387  
                     u3420 1339                       u3340 128B                       u3260 1CDA  
                     u3180 1E69                       u4141 0C69                       u4125 0C2E  
                     u4061 0BEB                       u3501 1386                       u3421 1338  
                     u3341 128A                       u3261 1CD9                       u3245 1CC2  
                     u4205 068F                       u3181 1E68                       u3165 1E52  
                     u4150 0C88                       u4070 0BF1                       u3430 1344  
                     u3350 1290                       u3270 07CB                       u3190 1E6E  
                     u4151 0C87                       u4135 0C4C                       u4071 0BF0  
                     u4055 0BDB                       u3511 1399                       u3431 1342  
                     u3351 128F                       u3255 1CCE                       u3271 07CA  
                     u3191 1E6D                       u3175 1E5D                       u4080 0C05  
                     u4160 1AAE                       u3600 1451                       u3520 13AB  
                     u3512 13A0                       u3440 1345                       u3360 12AE  
                     u4145 0C66                       u4081 0C04                       u4161 1AAD  
                     u3601 1450                       u3521 13AA                       u3513 13A7  
                     u3425 1335                       u3361 12AD                       u4225 06F3  
                     u4090 0C0C                       u3610 1456                       u3530 13AF  
                     u3450 1359                       u3370 12B9                       u3290 07DD  
                     u4170 05C1                       u4091 0C0B                       u3611 1455  
                     u3531 13AE                       u3451 1358                       u3371 12B8  
                     u3291 07DC                       u4235 0740                       u4171 05C0  
                     u2900 1BBE                       u3700 1499                       u3540 13BE  
                     u3460 1368                       u3380 12BF                       u4420 1AD8  
                     u6100 0F4B                       u6020 0D9E                       u2901 1BBD  
                     u3701 1498                       u3541 13BD                       u3461 1367  
                     u3381 12BE                       u3285 07CF                       u4245 078C  
                     u4421 1AD7                       u6101 0F4A                       u6021 0D9D  
                     u6005 0D0B                       u3710 14AB                       u3630 146C  
                     u3390 12C4                       u4430 1ADE                       u3711 14AA  
                     u3631 146B                       u3391 12C3                       u4431 1ADD  
                     u6015 0D56                       u2920 1BD2                       u3800 0953  
                     u3720 14BA                       u3640 1471                       u3560 13E3  
                     u3480 137E                       u6200 117A                       u2921 1BD1  
                     u3801 0952                       u3641 1470                       u3625 1461  
                     u3561 13E2                       u3481 137D                       u6201 1179  
                     u4185 05DE                       u3810 0958                       u3730 14C9  
                     u3650 147B                       u3490 1382                       u6210 1181  
                     u7010 01C9                       u2915 1BC5                       u3811 0957  
                     u3731 14C8                       u3651 147A                       u3571 13FA  
                     u3563 13DF                       u3555 13C1                       u3491 1381  
                     u3475 136B                       u6211 1180                       u4195 063A  
                     u6115 0F5E                       u6035 0DB1                       u7011 01C8  
                     u3820 0979                       u3740 14D2                       u3660 1481  
                     u3580 140E                       u3572 13FB                       u4700 1B69  
                     u6300 1216                       u6140 110A                       u6060 0E5A  
                     u7100 031A                       u7020 01D4                       u3901 0A55  
                     u3821 0978                       u3741 14D1                       u3725 14B5  
                     u3661 1480                       u3581 140F                       u3573 1400  
                     u4701 1B68                       u6301 1215                       u6141 1109  
                     u6125 0F9A                       u6061 0E59                       u6045 0DED  
                     u7101 0319                       u7021 01D3                       u7005 0196  
                     u3902 0A5C                       u3830 097F                       u3750 14D7  
                     u3670 1486                       u3590 142C                       u3582 1414  
                     u3574 1401                       u6230 1193                       u6150 1124  
                     u7110 0335                       u7030 01EF                       u3903 0A63  
                     u3831 097E                       u3751 14D6                       u3671 1485  
                     u3591 142B                       u3583 1415                       u3575 1406  
                     u6231 1192                       u6151 1123                       u6135 0FD6  
                     u6055 0E29                       u7111 0334                       u7031 01EE  
                     u7015 01C5                       u3840 0984                       u3760 14E4  
                     u3680 148C                       u3576 1407                       u6400 1E8A  
                     u6320 1234                       u6240 119A                       u7200 0520  
                     u7040 0201                       u3921 0A8B                       u3841 0983  
                     u3761 14E3                       u3681 148B                       u6401 1E89  
                     u6321 1233                       u6305 1212                       u6241 1199  
                     u6225 1183                       u7201 051F                       u7105 0316  
                     u7041 0200                       u3922 0A92                       u3850 099B  
                     u3770 14E9                       u3690 1493                       u4730 1B83  
                     u6330 1238                       u6170 115D                       u7210 052C  
                     u7050 0223                       u3931 0AB8                       u3923 0A99  
                     u3915 0A65                       u3851 099A                       u3771 14E8  
                     u3691 1492                       u4731 1B82                       u4715 1B70  
                     u6331 1237                       u6315 1227                       u6171 115C  
                     u6075 0E7C                       u7211 052B                       u7051 0222  
                     u3932 0ABF                       u3860 09A0                       u6500 1F72  
                     u3780 14FA                       u6420 1E9E                       u6340 123F  
                     u6260 11AB                       u7220 0536                       u7140 04C1  
                     u7060 0231                       u3933 0AC6                       u3861 099F  
                     u6501 1F71                       u3781 14F9                       u6421 1E9D  
                     u4725 1B77                       u6341 123E                       u6261 11AA  
                     u6165 1148                       u6085 0EB8                       u7221 0535  
                     u7141 04C0                       u7125 03BC                       u7061 0230  
                     u3790 094D                       u6510 1F8E                       u4910 0808  
                     u6270 11C1                       u6190 1176                       u7230 0544  
                     u7150 04D9                       u3951 0AEE                       u3871 09F1  
                     u3791 094C                       u6511 1F8D                       u4911 0807  
                     u6415 1E8F                       u6271 11C0                       u6255 119D  
                     u6191 1175                       u6175 1159                       u6095 0F03  
                     u7231 0543                       u7151 04D8                       u7135 0462  
                     u7055 021F                       u5800 1BE7                       u3952 0AF5  
                     u3872 09F8                       u6520 1F9A                       u4920 1EED  
                     u6440 1EB9                       u6600 1DF9                       u6360 1251  
                     u6280 11D5                       u7240 055C                       u7160 04E0  
                     u7080 02EA                       u5801 1BE6                       u3961 0B1B  
                     u3953 0AFC                       u3945 0AC8                       u3881 0A0D  
                     u3873 09FF                       u6521 1F99                       u4921 1EEC  
                     u6441 1EB8                       u6601 1DF8                       u6361 1250  
                     u6281 11D4                       u6185 1169                       u7241 055B  
                     u7161 04DF                       u7081 02E9                       u5810 1BEE  
                     u3962 0B22                       u3882 0A14                       u4930 1F04  
                     u6370 1258                       u7250 0572                       u7170 04E8  
                     u7090 030B                       u5811 1BED                       u3971 0B48  
                     u3963 0B29                       u3891 0A39                       u3883 0A1B  
                     u6531 1FA9                       u6435 1EA0                       u6371 1257  
                     u6355 1241                       u7251 0571                       u7235 0540  
                     u7171 04E7                       u7091 030A                       u7075 0240  
                     u7307 0922                       i1l92 1AC9                       u5820 1BF5  
                     u3980 0B72                       u3972 0B4F                       u3892 0A40  
                     u6540 1FC2                       u6532 1FAA                       u4940 1F1A  
                     u6460 1ED7                       u6620 1E16                       u7260 0589  
                     u7180 04F9                       u5821 1BF4                       u3973 0B56  
                     u3893 0A47                       u6541 1FC1                       u6533 1FAF  
                     u4941 1F19                       u6461 1ED6                       u6445 1EB5  
                     u6621 1E15                       u6605 1DF5                       u7261 0588  
                     u7245 0558                       u7181 04F8                       u7317 0933  
                     u5830 1BFC                       u6710 10BA                       u6630 1043  
                     u6470 1D3F                       u6534 1FB0                       u4950 1F21  
                     u6390 1269                       u5910 0840                       u7270 0595  
                     u7190 050F                       u5831 1BFB                       u7327 1B06  
                     u3991 0B7E                       u6711 10B9                       u6631 1042  
                     u6471 1D3E                       u6551 1FD1                       u6535 1FB5  
                     u4951 1F20                       u4935 1EFF                       u6455 1EC9  
                     u6615 1E08                       u6391 1268                       u6295 11FD  
                     u5911 083F                       u7271 0594                       u7191 050E  
                     u7095 0307                       u5840 1C03                       u6800 1C86  
                     u3992 0B85                       u6720 10C0                       u6640 1047  
                     u5760 1B62                       u6480 1D5B                       u6560 1FFC  
                     u6552 1FD2                       u6536 1FB6                       u7280 05B3  
                     u5841 1C02                       u7337 1B36                       u3993 0B8C  
                     u3985 0B6D                       u6721 10BF                       u6705 10AF  
                     u6641 1046                       u5761 1B61                       u6481 1D5A  
                     u6561 1FFB                       u6553 1FD7                       u6385 125B  
                     u5905 0832                       u7281 05B0                       u7185 04F5  
                     i1l98 103A                       u5850 1C0A                       u6810 1C98  
                     u6730 10C4                       u6650 1067                       u6490 1D75  
                     u6554 1FD8                       u4970 1F33                       u6570 1DD3  
                     u5930 0851                       u7290 092F                       u5851 1C09  
                     u7347 1B3E                       u6811 1C97                       u6731 10C3  
                     u6651 1066                       u6491 1D74                       u6555 1FDD  
                     u4971 1F32                       u6571 1DD2                       u5931 0850  
                     u7195 050B                       u7291 092E                       u5860 1C11  
                     u6740 10D9                       u6556 1FDE                       u4980 1F3A  
                     u6900 1678                       u6820 150C                       u5861 1C10  
                     u7357 1CE9                       u6565 1FF8                       u4981 1F39  
                     u4965 1F23                       u5925 0841                       u6901 1677  
                     u6821 150B                       u5790 1BDC                       u6750 10E9  
                     u6670 1088                       u6590 1DE7                       u5950 0865  
                     u5870 0812                       u6910 16C3                       u6830 152C  
                     u5791 1BDB                       u7367 1CF8                       u6751 10E8  
                     u6671 1087                       u6495 1D71                       u6591 1DE6  
                     u5951 0864                       u5935 084D                       u5871 0811  
                     u6911 16C2                       u6831 152B                       u6760 10ED  
                     u5960 086A                       u5880 081D                       u6920 175A  
                     u6840 156C                       u7377 1D09                       u6761 10EC  
                     u6745 10D4                       u6665 107A                       u6585 1DD8  
                     u5961 0869                       u5945 0859                       u5881 081C  
                     u6921 1759                       u6841 156B                       u6770 1B90  
                     u6690 10AA                       u5890 082E                       u5970 0CA4  
                     u6930 178C                       u6850 157A                       u7387 1B1E  
                     u6771 1B8F                       u6691 10A9                       u4995 1F3D  
                     u5891 082D                       u5971 0CA3                       u6931 178B  
                     u6851 1579                       u6780 1BA2                       u5980 0CAD  
                     u6940 17A3                       u6860 15BE                       u6781 1BA1  
                     u6685 109C                       u5981 0CAC                       u6941 17A2  
                     u6861 15BD                       u6790 1C62                       u6950 0020  
                     u6870 15EF                       u6951 17FA                       u6871 15EC  
                     u6960 0049                       u6880 15F3                       u6961 0048  
                     u6945 179F                       u6881 15F2                       u6970 0070  
                     u6890 1630                       u5995 0CCF                       u6971 006F  
                     u6955 17F5                       u6891 162F                       u6980 007F  
                     u6981 007E                       u6990 00A8                       u6991 00A7  
                     u6985 007B                       _TXIF 0064          ?_Lcd_Write_String 0076  
                     _conv 1C15                       _main 0874                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0020               _sprintf$1203 00B2  
          __end_of_Lcd_Cmd 1B27                      ??_isr 0071              ___fltol@sign1 0060  
                    ?_conv 0044            __end_of___fladd 14FC                      ?_main 0070  
          __end_of___awdiv 0874            __end_of___flneg 080B            __end_of___awmod 1E78  
          __end_of___flmul 0C9D            __end_of___flsub 1DC9            __end_of___fltol 1F5C  
                    _ANSEL 0188            __end_of___lldiv 1EE0            ___awdiv@divisor 0020  
          __end_of___llmod 1E1F            __end_of___lwdiv 1CDF            __end_of___lwmod 07FF  
          ___awdiv@counter 0025            __end_of_cfg_adc 1B0D                      _SPBRG 0099  
          __end_of_cfg_clk 1A9F    __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _TXREG 0019            __end_of_dpowers 18A0  
          __end_of_int_adc 103B                      _scale 0C9D            __end_of_isdigit 1AE2  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 05B8           __end_of_Lcd_Init 1D29           __end_of_Lcd_Port 1C15  
          __initialization 000F               __end_of_conv 1C55               __end_of_main 093C  
                   ??_conv 0048                     ??_main 006C         __size_of_Lcd_Clear 000D  
     __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0024                     ?_scale 0044  
                   _ADRESH 001E           ___awdiv@dividend 0022                     _ANSELH 0189  
                   i1l3190 102D                     i1l3182 1010                     i1l3192 1033  
                   i1l3184 101B                     i1l3194 1039                     i1l3186 101F  
                   i1l3188 1024                     i1l3542 1ABE                     i1l3544 1AC4  
                   u522_20 101B                     u522_21 101A                     u523_20 102D  
                   u523_21 102C                  ??_Lcd_Cmd 0074                     u577_20 1AC4  
                   u577_21 1AC3                     _SPBRGH 009A    __size_of_Lcd_Write_Char 001B  
         __end_of_cfg_inte 1A97           __end_of___xxtofl 10F7           __end_of__powers_ 1844  
                   ___flge 1F5C                     ___fleq 1D29                  ??___fladd 0060  
                   ___wmul 1B63                  ??___awdiv 0024                     _cfg_io 1001  
                ??___flneg 0077                  ??___awmod 0077                  ??___flmul 0032  
                ??___flsub 007A                  ??___fltol 005B                  ??___lldiv 0073  
                ??___llmod 0073                  ??___lwdiv 0079                  ??___lwmod 0077  
                ??_cfg_adc 0073                  ??_cfg_clk 0073                     _fround 05B8  
         ___awdiv@quotient 0027            ___awmod@divisor 0073            ___awmod@counter 0078  
                   conv@aa 0050                  ??_int_adc 0070                  ??_isdigit 0073  
       __size_of__Umul8_16 0029                     saved_w 007E                  ??_sprintf 00AD  
          Lcd_Set_Cursor@a 0020            Lcd_Set_Cursor@b 0077                 ___flge@ff1 0020  
               ___flge@ff2 0024               ___xxtofl@arg 0026               ___xxtofl@exp 0025  
             ___xxtofl@val 0073                 ___fleq@ff1 0020                 ___fleq@ff2 0024  
  __end_of__initialization 001C                 ___flneg@f1 0073          __end_of_Lcd_Clear 1ABE  
               ___fltol@f1 0057             __pcstackCOMMON 0070         __size_of_cfg_usart 0015  
            __end_of_scale 1000             _Lcd_Set_Cursor 1B88                 __div_to_l_ 11B4  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070            __div_to_l_@exp1 0079  
          __div_to_l_@cntr 0078                    ??_scale 0048            __div_to_l_@quot 0074  
             sprintf@width 00BD                 __pbssBANK0 006F                 __pbssBANK1 00CD  
            __div_to_l_@f1 0020              __div_to_l_@f2 0024          __end_of__Umul8_16 1BD7  
               __pmaintext 0874                    ?___flge 0020                    ?___fleq 0020  
                  ?___wmul 0073                    ?_cfg_io 0070                 __pintentry 0004  
       __size_of_send_char 000A         __size_of_send_crct 0021                    ?_fround 0044  
__size_of_Lcd_Write_String 0044     __end_of_Lcd_Set_Cursor 1BAE                  ?_cfg_inte 0070  
                ?___xxtofl 0073                 ??_Lcd_Init 0077                 ??_Lcd_Port 0073  
              send_crct@st 0077                 __stringtab 1800          __end_of_cfg_usart 1AF7  
           _Lcd_Write_Char 1B27                    _Lcd_Cmd 1B0D          __end_of__npowers_ 1878  
               _scale$1202 0052            __size_of___flge 00A4            __size_of___fleq 0050  
                  ___fladd 1274                    ___awdiv 080B                    ___flneg 0800  
                  ___awmod 1E1F                    ___flmul 093C                    ___flsub 1D79  
                  ___fltol 1EE0                    ___lldiv 1E78            __size_of___wmul 0025  
                  ___llmod 1DC9            __size_of_cfg_io 000F                    ___lwdiv 1C99  
                  ___lwmod 07C5                    _cfg_adc 1AF7                    _cfg_clk 1A97  
          __size_of_fround 020D            ?_Lcd_Set_Cursor 0077                    __ptext1 14FC  
                  __ptext2 0C9D                    __ptext3 1E1F                    __ptext4 080B  
                  __ptext5 1AD0                    __ptext6 05B8                    __ptext7 07C5  
                  __ptext8 1C99                    __ptext9 10F7                ?__div_to_l_ 0020  
                  _dpowers 1878                    _int_adc 1010                 ??_cfg_inte 0073  
                  _isdigit 1AD0               __size_of_isr 0012                 ??___xxtofl 0020  
         ___awmod@dividend 0075                    _sprintf 14FC                    clrloop0 1AA0  
   __end_of_Lcd_Write_Char 1B42       end_of_initialization 001C          __end_of_send_char 1AB1  
        __end_of_send_crct 1B63            ___lldiv@divisor 0020            ___lldiv@counter 0078  
                _RCSTAbits 0018                    psplit$0 C0035                  Lcd_Port@a 0073  
           __tdiv_to_l_@f1 0020             __tdiv_to_l_@f2 0024              send_char@dato 0073  
            ??__tdiv_to_l_ 0073                  _PORTCbits 0007                ___fladd@grs 006B  
            ___xxtofl@sign 0024            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076  
        Lcd_Write_String@i 0078                 conv@result 004C                ___flmul@grs 0038  
                _TXSTAbits 0098        __size_of__div_to_l_ 00C0                  _Lcd_Clear 1AB1  
           __end_of___flge 2000             __end_of___fleq 1D79             __end_of___wmul 1B88  
           __end_of_cfg_io 1010           _Lcd_Write_String 1C55          pnum$text1_split_1 0035  
              _BAUDCTLbits 0187             __end_of_fround 07C5        start_initialization 000F  
      __end_of__tdiv_to_l_ 11B4                __end_of_isr 1AD0          __size_of_Lcd_Init 004A  
        __size_of_Lcd_Port 003E            ___llmod@divisor 0020            ___llmod@counter 0074  
               ?_Lcd_Clear 0070                   ??___flge 0073                   ??___fleq 0073  
                 ??___wmul 0077                   ??_cfg_io 0073                  __Umul8_16 1BAE  
          Lcd_Write_Char@a 0075                   ??_fround 0048              sprintf@tmpval 00BF  
                ___fladd@a 005C                  ___fladd@b 0058                 fround@prec 0057  
                ___flmul@a 002E                  ___flmul@b 002A                __pbssCOMMON 007A  
                ___flsub@a 00A0                  ___flsub@b 00A4                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0          __size_of_cfg_inte 0006  
        __size_of___xxtofl 00BC               _isdigit$1016 0073                   ?_Lcd_Cmd 0070  
              sprintf@flag 00BB                sprintf@eexp 00C3                sprintf@fval 00C5  
              sprintf@prec 00CA                  _cfg_usart 1AE2           ___lwdiv@dividend 0022  
         ??_Lcd_Set_Cursor 0078                   ?___fladd 0058                   ?___awdiv 0020  
                 ?___flneg 0073                   ?___awmod 0073                   ?___flmul 002A  
                 ?___flsub 00A0                   ?___fltol 0057                   ?___lldiv 0020  
                 ?___llmod 0020                  __npowers_ 1844                 ?__Umul8_16 0073  
                 ?___lwdiv 0020                   ?___lwmod 0073                   ?_cfg_adc 0070  
                 ?_cfg_clk 0070                  __pstrings 1800                __tdiv_to_l_ 10F7  
               send_crct@i 0075               ??__div_to_l_ 0073                   ?_int_adc 0070  
                 ?_isdigit 0070           ___lwdiv@quotient 0024                   ?_sprintf 00A8  
           __size_of_scale 0363          interrupt_function 0004             ___wmul@product 0077  
                clear_ram0 1A9F                 ?_cfg_usart 0070                   _PIE1bits 008C  
                _send_char 1AA7                  _send_crct 1B42                   Lcd_Cmd@a 0076  
                 _PIR1bits 000C         __end_of__div_to_l_ 1274                ??_Lcd_Clear 0077  
               _ADCON0bits 001F                __stringbase 180F                 _ADCON1bits 009F  
        ___wmul@multiplier 0073           ??_Lcd_Write_Char 0074                   _Lcd_Init 1CDF  
                 _Lcd_Port 1BD7   __end_of_Lcd_Write_String 1C99           __size_of_Lcd_Cmd 001A  
               ?_send_char 0070                 ?_send_crct 0070                ??__Umul8_16 0075  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 0059           __size_of___flmul 0361           __size_of___flsub 0050  
         __size_of___fltol 007C           __size_of___lldiv 0068           __size_of___llmod 0056  
         __size_of___lwdiv 0046           __size_of___lwmod 003A           __size_of_cfg_adc 0016  
              _fround$1200 0053                _fround$1201 004F           __size_of_cfg_clk 0008  
       __end_of__stringtab 1810                 sprintf@val 00B7                   _cfg_inte 1A91  
                 ___xxtofl 103B           __size_of_int_adc 002B           __size_of_isdigit 0012  
          ___lwdiv@divisor 0020            ___lwdiv@counter 0026                   __ptext10 11B4  
                 __ptext11 1B63                   __ptext20 1B42                   __ptext12 1DC9  
                 __ptext21 1AA7                   __ptext13 1E78                   __ptext30 1AF7  
                 __ptext22 1C15                   __ptext14 1EE0                   __ptext31 1C55  
                 __ptext23 103B                   __ptext15 1D79                   __ptext32 1B27  
                 __ptext24 093C                   __ptext16 1274                   __ptext33 1B88  
                 __ptext25 1BAE                   __ptext17 0800                   __ptext34 1CDF  
                 __ptext26 1AE2                   __ptext18 1F5C                   __ptext35 1AB1  
                 __ptext27 1001                   __ptext19 1D29                   __ptext36 1B0D  
                 __ptext28 1A91                   __ptext37 1BD7                   __ptext29 1A97  
                 __ptext38 1ABE                   __ptext39 1010                   __powers_ 1810  
         __size_of_sprintf F0BC              __size_of_conv 0040              __size_of_main 00C8  
                pnum$text1 000C                ??_cfg_usart 0073                 _INTCONbits 000B  
                 isdigit@c 0074                   scale@scl 0056                   intlevel1 0000  
                sprintf@ap 00B6           __tdiv_to_l_@exp1 002D           __tdiv_to_l_@cntr 002C  
                sprintf@sp 00C9           __tdiv_to_l_@quot 0028           ___lwmod@dividend 0075  
         ___lldiv@dividend 0024                ??_send_char 0073                ??_send_crct 0074  
                stringcode 180A                 _OSCCONbits 008F         Lcd_Set_Cursor@temp 0021  
             ?__tdiv_to_l_ 0020     __Umul8_16@multiplicand 0073                   sprintf@c 00CC  
                 sprintf@f 00A8           ___lldiv@quotient 0074            ___lwmod@divisor 0073  
          ___lwmod@counter 0078                   stringdir 180A                   stringtab 1800  
            ___fladd@signs 0068               ___fladd@aexp 0069               ___fladd@bexp 006A  
     __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
>>>>>>> parent of a4453d3 (Todo funciona menos último contador)
