

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jul 23 18:29:34 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0105                     	;# 
   153  0107                     	;# 
   154  0108                     	;# 
   155  0109                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0185                     	;# 
   162  0187                     	;# 
   163  0188                     	;# 
   164  0189                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  0105                     	;# 
   309  0107                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  0185                     	;# 
   318  0187                     	;# 
   319  0188                     	;# 
   320  0189                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  008F                     	;# 
   368  0090                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0094                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  009F                     	;# 
   386  0105                     	;# 
   387  0107                     	;# 
   388  0108                     	;# 
   389  0109                     	;# 
   390  010C                     	;# 
   391  010C                     	;# 
   392  010D                     	;# 
   393  010E                     	;# 
   394  010F                     	;# 
   395  0185                     	;# 
   396  0187                     	;# 
   397  0188                     	;# 
   398  0189                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401                           
   402                           	psect	strings
   403  1800                     __pstrings:
   404  1800                     stringtab:
   405  1800                     __stringtab:
   406                           
   407                           ;	String table - string pointers are 1 byte each
   408  1800  1BFF               	btfsc	btemp+1,7
   409  1801  280A               	ljmp	stringcode
   410  1802  1383               	bcf	3,7
   411  1803  187F               	btfsc	btemp+1,0
   412  1804  1783               	bsf	3,7
   413  1805  0800               	movf	0,w
   414  1806  0A84               	incf	4,f
   415  1807  1903               	skipnz
   416  1808  0AFF               	incf	btemp+1,f
   417  1809  0008               	return
   418  180A                     stringcode:
   419  180A                     stringdir:
   420  180A  3018               	movlw	high stringdir
   421  180B  008A               	movwf	10
   422  180C  0804               	movf	4,w
   423  180D  0A84               	incf	4,f
   424  180E  0782               	addwf	2,f
   425  180F                     __stringbase:
   426  180F  3400               	retlw	0
   427  1810                     __end_of__stringtab:
   428  1810                     __powers_:
   429  1810  3400               	retlw	0
   430  1811  3400               	retlw	0
   431  1812  3480               	retlw	128
   432  1813  343F               	retlw	63
   433  1814  3400               	retlw	0
   434  1815  3400               	retlw	0
   435  1816  3420               	retlw	32
   436  1817  3441               	retlw	65
   437  1818  3400               	retlw	0
   438  1819  3400               	retlw	0
   439  181A  34C8               	retlw	200
   440  181B  3442               	retlw	66
   441  181C  3400               	retlw	0
   442  181D  3400               	retlw	0
   443  181E  347A               	retlw	122
   444  181F  3444               	retlw	68
   445  1820  3400               	retlw	0
   446  1821  3440               	retlw	64
   447  1822  341C               	retlw	28
   448  1823  3446               	retlw	70
   449  1824  3400               	retlw	0
   450  1825  3450               	retlw	80
   451  1826  34C3               	retlw	195
   452  1827  3447               	retlw	71
   453  1828  3400               	retlw	0
   454  1829  3424               	retlw	36
   455  182A  3474               	retlw	116
   456  182B  3449               	retlw	73
   457  182C  3480               	retlw	128
   458  182D  3496               	retlw	150
   459  182E  3418               	retlw	24
   460  182F  344B               	retlw	75
   461  1830  3420               	retlw	32
   462  1831  34BC               	retlw	188
   463  1832  34BE               	retlw	190
   464  1833  344C               	retlw	76
   465  1834  3428               	retlw	40
   466  1835  346B               	retlw	107
   467  1836  346E               	retlw	110
   468  1837  344E               	retlw	78
   469  1838  34F9               	retlw	249
   470  1839  3402               	retlw	2
   471  183A  3415               	retlw	21
   472  183B  3450               	retlw	80
   473  183C  34EC               	retlw	236
   474  183D  3478               	retlw	120
   475  183E  34AD               	retlw	173
   476  183F  3460               	retlw	96
   477  1840  34CA               	retlw	202
   478  1841  34F2               	retlw	242
   479  1842  3449               	retlw	73
   480  1843  3471               	retlw	113
   481  1844                     __end_of__powers_:
   482  1844                     __npowers_:
   483  1844  3400               	retlw	0
   484  1845  3400               	retlw	0
   485  1846  3480               	retlw	128
   486  1847  343F               	retlw	63
   487  1848  34CD               	retlw	205
   488  1849  34CC               	retlw	204
   489  184A  34CC               	retlw	204
   490  184B  343D               	retlw	61
   491  184C  340A               	retlw	10
   492  184D  34D7               	retlw	215
   493  184E  3423               	retlw	35
   494  184F  343C               	retlw	60
   495  1850  346F               	retlw	111
   496  1851  3412               	retlw	18
   497  1852  3483               	retlw	131
   498  1853  343A               	retlw	58
   499  1854  3417               	retlw	23
   500  1855  34B7               	retlw	183
   501  1856  34D1               	retlw	209
   502  1857  3438               	retlw	56
   503  1858  34AC               	retlw	172
   504  1859  34C5               	retlw	197
   505  185A  3427               	retlw	39
   506  185B  3437               	retlw	55
   507  185C  34BD               	retlw	189
   508  185D  3437               	retlw	55
   509  185E  3486               	retlw	134
   510  185F  3435               	retlw	53
   511  1860  3495               	retlw	149
   512  1861  34BF               	retlw	191
   513  1862  34D6               	retlw	214
   514  1863  3433               	retlw	51
   515  1864  3477               	retlw	119
   516  1865  34CC               	retlw	204
   517  1866  342B               	retlw	43
   518  1867  3432               	retlw	50
   519  1868  345F               	retlw	95
   520  1869  3470               	retlw	112
   521  186A  3489               	retlw	137
   522  186B  3430               	retlw	48
   523  186C  34FF               	retlw	255
   524  186D  34E6               	retlw	230
   525  186E  34DB               	retlw	219
   526  186F  342E               	retlw	46
   527  1870  3408               	retlw	8
   528  1871  34E5               	retlw	229
   529  1872  343C               	retlw	60
   530  1873  341E               	retlw	30
   531  1874  3460               	retlw	96
   532  1875  3442               	retlw	66
   533  1876  34A2               	retlw	162
   534  1877  340D               	retlw	13
   535  1878                     __end_of__npowers_:
   536  1878                     _dpowers:
   537  1878  3401               	retlw	1
   538  1879  3400               	retlw	0
   539  187A  3400               	retlw	0
   540  187B  3400               	retlw	0
   541  187C  340A               	retlw	10
   542  187D  3400               	retlw	0
   543  187E  3400               	retlw	0
   544  187F  3400               	retlw	0
   545  1880  3464               	retlw	100
   546  1881  3400               	retlw	0
   547  1882  3400               	retlw	0
   548  1883  3400               	retlw	0
   549  1884  34E8               	retlw	232
   550  1885  3403               	retlw	3
   551  1886  3400               	retlw	0
   552  1887  3400               	retlw	0
   553  1888  3410               	retlw	16
   554  1889  3427               	retlw	39
   555  188A  3400               	retlw	0
   556  188B  3400               	retlw	0
   557  188C  34A0               	retlw	160
   558  188D  3486               	retlw	134
   559  188E  3401               	retlw	1
   560  188F  3400               	retlw	0
   561  1890  3440               	retlw	64
   562  1891  3442               	retlw	66
   563  1892  340F               	retlw	15
   564  1893  3400               	retlw	0
   565  1894  3480               	retlw	128
   566  1895  3496               	retlw	150
   567  1896  3498               	retlw	152
   568  1897  3400               	retlw	0
   569  1898  3400               	retlw	0
   570  1899  34E1               	retlw	225
   571  189A  34F5               	retlw	245
   572  189B  3405               	retlw	5
   573  189C  3400               	retlw	0
   574  189D  34CA               	retlw	202
   575  189E  349A               	retlw	154
   576  189F  343B               	retlw	59
   577  18A0                     __end_of_dpowers:
   578  001E                     _ADRESH	set	30
   579  0007                     _PORTCbits	set	7
   580  0018                     _RCSTAbits	set	24
   581  0019                     _TXREG	set	25
   582  001F                     _ADCON0bits	set	31
   583  000C                     _PIR1bits	set	12
   584  0039                     _RC1	set	57
   585  0047                     _RD7	set	71
   586  0046                     _RD6	set	70
   587  0045                     _RD5	set	69
   588  0044                     _RD4	set	68
   589  0043                     _RD3	set	67
   590  0042                     _RD2	set	66
   591  0041                     _RD1	set	65
   592  0040                     _RD0	set	64
   593  0064                     _TXIF	set	100
   594  009A                     _SPBRGH	set	154
   595  0099                     _SPBRG	set	153
   596  0098                     _TXSTAbits	set	152
   597  008F                     _OSCCONbits	set	143
   598  009F                     _ADCON1bits	set	159
   599  0089                     _TRISE	set	137
   600  0085                     _TRISA	set	133
   601  0087                     _TRISC	set	135
   602  0086                     _TRISB	set	134
   603  0087                     _TRISCbits	set	135
   604  0088                     _TRISD	set	136
   605  0187                     _BAUDCTLbits	set	391
   606  0188                     _ANSEL	set	392
   607  0189                     _ANSELH	set	393
   608  18A0                     STR_1:
   609  18A0  3453               	retlw	83	;'S'
   610  18A1  3431               	retlw	49	;'1'
   611  18A2  343A               	retlw	58	;':'
   612  18A3  3420               	retlw	32	;' '
   613  18A4  3453               	retlw	83	;'S'
   614  18A5  3432               	retlw	50	;'2'
   615  18A6  343A               	retlw	58	;':'
   616  18A7  3420               	retlw	32	;' '
   617  18A8  3453               	retlw	83	;'S'
   618  18A9  3433               	retlw	51	;'3'
   619  18AA  343A               	retlw	58	;':'
   620  18AB  3400               	retlw	0
   621  18AC                     STR_2:
   622  18AC  3425               	retlw	37	;'%'
   623  18AD  3433               	retlw	51	;'3'
   624  18AE  342E               	retlw	46	;'.'
   625  18AF  3432               	retlw	50	;'2'
   626  18B0  3466               	retlw	102	;'f'
   627  18B1  3456               	retlw	86	;'V'
   628  18B2  3400               	retlw	0
   629  18B3                     STR_3:
   630  18B3  3448               	retlw	72	;'H'
   631  18B4  344F               	retlw	79	;'O'
   632  18B5  344C               	retlw	76	;'L'
   633  18B6  3441               	retlw	65	;'A'
   634  18B7  3400               	retlw	0
   635                           
   636                           	psect	cinit
   637  000F                     start_initialization:	
   638                           ; #config settings
   639                           
   640  000F                     __initialization:
   641                           
   642                           ; Clear objects allocated to COMMON
   643  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   644  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   645                           
   646                           ; Clear objects allocated to BANK1
   647  0011  1383               	bcf	3,7	;select IRP bank0
   648  0012  30D0               	movlw	low __pbssBANK1
   649  0013  0084               	movwf	4
   650  0014  30E8               	movlw	low (__pbssBANK1+24)
   651  0015  160A  158A  2239  120A  118A  	fcall	clear_ram0
   652  001A                     end_of_initialization:	
   653                           ;End of C runtime variable initialization code
   654                           
   655  001A                     __end_of__initialization:
   656  001A  0183               	clrf	3
   657  001B  120A  158A  2878   	ljmp	_main	;jump to C main() function
   658                           
   659                           	psect	bssCOMMON
   660  0077                     __pbssCOMMON:
   661  0077                     _val:
   662  0077                     	ds	1
   663  0078                     _num:
   664  0078                     	ds	1
   665                           
   666                           	psect	bssBANK1
   667  00D0                     __pbssBANK1:
   668  00D0                     _g:
   669  00D0                     	ds	4
   670  00D4                     _v22:
   671  00D4                     	ds	4
   672  00D8                     _v11:
   673  00D8                     	ds	4
   674  00DC                     _V2:
   675  00DC                     	ds	1
   676  00DD                     _V1:
   677  00DD                     	ds	1
   678  00DE                     _f:
   679  00DE                     	ds	10
   680                           
   681                           	psect	clrtext
   682  1A39                     clear_ram0:	
   683                           ;	Called with FSR containing the base address, and
   684                           ;	W with the last address+1
   685                           
   686  1A39  0064               	clrwdt	;clear the watchdog before getting into this loop
   687  1A3A                     clrloop0:
   688  1A3A  0180               	clrf	0	;clear RAM location pointed to by FSR
   689  1A3B  0A84               	incf	4,f	;increment pointer
   690  1A3C  0604               	xorwf	4,w	;XOR with final address
   691  1A3D  1903               	btfsc	3,2	;have we reached the end yet?
   692  1A3E  3400               	retlw	0	;all done for this memory range, return
   693  1A3F  0604               	xorwf	4,w	;XOR again to restore value
   694  1A40  2A3A               	goto	clrloop0	;do the next byte
   695                           
   696                           	psect	cstackBANK1
   697  00A0                     __pcstackBANK1:
   698  00A0                     ?___flsub:
   699  00A0                     ___flsub@a:	
   700                           ; 4 bytes @ 0x0
   701                           
   702                           
   703                           ; 4 bytes @ 0x0
   704  00A0                     	ds	4
   705  00A4                     ___flsub@b:
   706                           
   707                           ; 4 bytes @ 0x4
   708  00A4                     	ds	4
   709  00A8                     ?_sprintf:
   710  00A8                     sprintf@f:	
   711                           ; 2 bytes @ 0x8
   712                           
   713                           
   714                           ; 1 bytes @ 0x8
   715  00A8                     	ds	5
   716  00AD                     ??_sprintf:
   717                           
   718                           ; 1 bytes @ 0xD
   719  00AD                     	ds	5
   720  00B2                     _sprintf$1181:
   721                           
   722                           ; 4 bytes @ 0x12
   723  00B2                     	ds	4
   724  00B6                     sprintf@ap:
   725                           
   726                           ; 1 bytes @ 0x16
   727  00B6                     	ds	1
   728  00B7                     sprintf@val:
   729                           
   730                           ; 4 bytes @ 0x17
   731  00B7                     	ds	4
   732  00BB                     sprintf@flag:
   733                           
   734                           ; 2 bytes @ 0x1B
   735  00BB                     	ds	2
   736  00BD                     sprintf@width:
   737                           
   738                           ; 2 bytes @ 0x1D
   739  00BD                     	ds	2
   740  00BF                     sprintf@tmpval:
   741                           
   742                           ; 4 bytes @ 0x1F
   743  00BF                     	ds	4
   744  00C3                     sprintf@eexp:
   745                           
   746                           ; 2 bytes @ 0x23
   747  00C3                     	ds	2
   748  00C5                     sprintf@fval:
   749                           
   750                           ; 4 bytes @ 0x25
   751  00C5                     	ds	4
   752  00C9                     sprintf@sp:
   753                           
   754                           ; 1 bytes @ 0x29
   755  00C9                     	ds	1
   756  00CA                     sprintf@prec:
   757                           
   758                           ; 2 bytes @ 0x2A
   759  00CA                     	ds	2
   760  00CC                     sprintf@c:
   761                           
   762                           ; 1 bytes @ 0x2C
   763  00CC                     	ds	1
   764  00CD                     ??_main:
   765                           
   766                           ; 1 bytes @ 0x2D
   767  00CD                     	ds	3
   768                           
   769                           	psect	cstackCOMMON
   770  0070                     __pcstackCOMMON:
   771  0070                     ?_isdigit:
   772  0070                     ?_int_adc:	
   773                           ; 1 bit 
   774                           
   775  0070                     ?_valadc:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ??_valadc:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ?_cfg_io:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?_cfg_adc:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ?_Lcd_Init:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     ?_Lcd_Clear:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     ?_send_crct:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0070                     ?_send_char:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ?_isr:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     ?_main:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     ?_Lcd_Port:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ?_Lcd_Cmd:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ?_Lcd_Write_Char:	
   812                           ; 1 bytes @ 0x0
   813                           
   814                           
   815                           ; 1 bytes @ 0x0
   816  0070                     	ds	1
   817  0071                     valadc@aa:
   818                           
   819                           ; 1 bytes @ 0x1
   820  0071                     	ds	1
   821  0072                     ??_int_adc:
   822                           
   823                           ; 1 bytes @ 0x2
   824  0072                     	ds	1
   825  0073                     ??_isr:
   826                           
   827                           ; 1 bytes @ 0x3
   828  0073                     	ds	2
   829  0075                     ??_cfg_io:
   830  0075                     ??_cfg_adc:	
   831                           ; 1 bytes @ 0x5
   832                           
   833  0075                     ??_send_char:	
   834                           ; 1 bytes @ 0x5
   835                           
   836  0075                     ??_isdigit:	
   837                           ; 1 bytes @ 0x5
   838                           
   839  0075                     ??__div_to_l_:	
   840                           ; 1 bytes @ 0x5
   841                           
   842  0075                     ??_Lcd_Port:	
   843                           ; 1 bytes @ 0x5
   844                           
   845  0075                     ??___wmul:	
   846                           ; 1 bytes @ 0x5
   847                           
   848  0075                     ??___lldiv:	
   849                           ; 1 bytes @ 0x5
   850                           
   851  0075                     ??___awmod:	
   852                           ; 1 bytes @ 0x5
   853                           
   854  0075                     ??___flneg:	
   855                           ; 1 bytes @ 0x5
   856                           
   857  0075                     ??___llmod:	
   858                           ; 1 bytes @ 0x5
   859                           
   860  0075                     ??___lwmod:	
   861                           ; 1 bytes @ 0x5
   862                           
   863  0075                     ?__Umul8_16:	
   864                           ; 1 bytes @ 0x5
   865                           
   866  0075                     send_char@dato:	
   867                           ; 2 bytes @ 0x5
   868                           
   869  0075                     Lcd_Port@a:	
   870                           ; 1 bytes @ 0x5
   871                           
   872  0075                     __Umul8_16@multiplicand:	
   873                           ; 1 bytes @ 0x5
   874                           
   875  0075                     _isdigit$994:	
   876                           ; 1 bytes @ 0x5
   877                           
   878  0075                     ___wmul@product:	
   879                           ; 1 bytes @ 0x5
   880                           
   881                           
   882                           ; 2 bytes @ 0x5
   883  0075                     	ds	1
   884  0076                     ??_send_crct:
   885  0076                     ??_Lcd_Write_Char:	
   886                           ; 1 bytes @ 0x6
   887                           
   888  0076                     ??___awdiv:	
   889                           ; 1 bytes @ 0x6
   890                           
   891  0076                     Lcd_Cmd@a:	
   892                           ; 1 bytes @ 0x6
   893                           
   894  0076                     ___llmod@counter:	
   895                           ; 1 bytes @ 0x6
   896                           
   897  0076                     ___lwmod@counter:	
   898                           ; 1 bytes @ 0x6
   899                           
   900  0076                     isdigit@c:	
   901                           ; 1 bytes @ 0x6
   902                           
   903                           
   904                           ; 1 bytes @ 0x6
   905  0076                     	ds	1
   906  0077                     ??_Lcd_Clear:
   907  0077                     ??___flsub:	
   908                           ; 1 bytes @ 0x7
   909                           
   910                           
   911                           	psect	cstackBANK0
   912  0020                     __pcstackBANK0:	
   913                           ; 1 bytes @ 0x7
   914                           
   915  0020                     ?___fleq:
   916  0020                     ?___flge:	
   917                           ; 1 bit 
   918                           
   919  0020                     ??__Umul8_16:	
   920                           ; 1 bit 
   921                           
   922  0020                     ??_Lcd_Cmd:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0020                     ?___wmul:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0020                     ?___awmod:	
   929                           ; 2 bytes @ 0x0
   930                           
   931  0020                     ?___lwmod:	
   932                           ; 2 bytes @ 0x0
   933                           
   934  0020                     ?__tdiv_to_l_:	
   935                           ; 2 bytes @ 0x0
   936                           
   937  0020                     ?__div_to_l_:	
   938                           ; 4 bytes @ 0x0
   939                           
   940  0020                     ?___lldiv:	
   941                           ; 4 bytes @ 0x0
   942                           
   943  0020                     ?___flneg:	
   944                           ; 4 bytes @ 0x0
   945                           
   946  0020                     ?___llmod:	
   947                           ; 4 bytes @ 0x0
   948                           
   949  0020                     ?___xxtofl:	
   950                           ; 4 bytes @ 0x0
   951                           
   952  0020                     send_crct@st:	
   953                           ; 4 bytes @ 0x0
   954                           
   955  0020                     Lcd_Write_Char@a:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0020                     ___wmul@multiplier:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0020                     ___awmod@divisor:	
   962                           ; 2 bytes @ 0x0
   963                           
   964  0020                     ___lwmod@divisor:	
   965                           ; 2 bytes @ 0x0
   966                           
   967  0020                     ___lldiv@divisor:	
   968                           ; 2 bytes @ 0x0
   969                           
   970  0020                     __div_to_l_@f1:	
   971                           ; 4 bytes @ 0x0
   972                           
   973  0020                     ___fleq@ff1:	
   974                           ; 4 bytes @ 0x0
   975                           
   976  0020                     ___flge@ff1:	
   977                           ; 4 bytes @ 0x0
   978                           
   979  0020                     ___flneg@f1:	
   980                           ; 4 bytes @ 0x0
   981                           
   982  0020                     __tdiv_to_l_@f1:	
   983                           ; 4 bytes @ 0x0
   984                           
   985  0020                     ___llmod@divisor:	
   986                           ; 4 bytes @ 0x0
   987                           
   988  0020                     ___xxtofl@val:	
   989                           ; 4 bytes @ 0x0
   990                           
   991                           
   992                           ; 4 bytes @ 0x0
   993  0020                     	ds	1
   994  0021                     ?_Lcd_Write_String:
   995  0021                     send_crct@i:	
   996                           ; 1 bytes @ 0x1
   997                           
   998  0021                     Lcd_Write_String@a:	
   999                           ; 2 bytes @ 0x1
  1000                           
  1001                           
  1002                           ; 2 bytes @ 0x1
  1003  0021                     	ds	1
  1004  0022                     ??_Lcd_Init:
  1005  0022                     ?_Lcd_Set_Cursor:	
  1006                           ; 1 bytes @ 0x2
  1007                           
  1008  0022                     Lcd_Set_Cursor@b:	
  1009                           ; 1 bytes @ 0x2
  1010                           
  1011  0022                     ___wmul@multiplicand:	
  1012                           ; 1 bytes @ 0x2
  1013                           
  1014  0022                     ___awmod@dividend:	
  1015                           ; 2 bytes @ 0x2
  1016                           
  1017  0022                     ___lwmod@dividend:	
  1018                           ; 2 bytes @ 0x2
  1019                           
  1020  0022                     __Umul8_16@product:	
  1021                           ; 2 bytes @ 0x2
  1022                           
  1023                           
  1024                           ; 2 bytes @ 0x2
  1025  0022                     	ds	1
  1026  0023                     ??_Lcd_Set_Cursor:
  1027  0023                     ??_Lcd_Write_String:	
  1028                           ; 1 bytes @ 0x3
  1029                           
  1030                           
  1031                           ; 1 bytes @ 0x3
  1032  0023                     	ds	1
  1033  0024                     ??___xxtofl:
  1034  0024                     ?___lwdiv:	
  1035                           ; 1 bytes @ 0x4
  1036                           
  1037  0024                     Lcd_Set_Cursor@a:	
  1038                           ; 2 bytes @ 0x4
  1039                           
  1040  0024                     ___awmod@counter:	
  1041                           ; 1 bytes @ 0x4
  1042                           
  1043  0024                     ___lwdiv@divisor:	
  1044                           ; 1 bytes @ 0x4
  1045                           
  1046  0024                     __Umul8_16@word_mpld:	
  1047                           ; 2 bytes @ 0x4
  1048                           
  1049  0024                     ___lldiv@dividend:	
  1050                           ; 2 bytes @ 0x4
  1051                           
  1052  0024                     __div_to_l_@f2:	
  1053                           ; 4 bytes @ 0x4
  1054                           
  1055  0024                     ___fleq@ff2:	
  1056                           ; 4 bytes @ 0x4
  1057                           
  1058  0024                     ___flge@ff2:	
  1059                           ; 4 bytes @ 0x4
  1060                           
  1061  0024                     __tdiv_to_l_@f2:	
  1062                           ; 4 bytes @ 0x4
  1063                           
  1064  0024                     ___llmod@dividend:	
  1065                           ; 4 bytes @ 0x4
  1066                           
  1067                           
  1068                           ; 4 bytes @ 0x4
  1069  0024                     	ds	1
  1070  0025                     Lcd_Set_Cursor@temp:
  1071  0025                     ___awmod@sign:	
  1072                           ; 1 bytes @ 0x5
  1073                           
  1074                           
  1075                           ; 1 bytes @ 0x5
  1076  0025                     	ds	1
  1077  0026                     ?___awdiv:
  1078  0026                     __Umul8_16@multiplier:	
  1079                           ; 2 bytes @ 0x6
  1080                           
  1081  0026                     Lcd_Write_String@i:	
  1082                           ; 1 bytes @ 0x6
  1083                           
  1084  0026                     ___awdiv@divisor:	
  1085                           ; 2 bytes @ 0x6
  1086                           
  1087  0026                     ___lwdiv@dividend:	
  1088                           ; 2 bytes @ 0x6
  1089                           
  1090                           
  1091                           ; 2 bytes @ 0x6
  1092  0026                     	ds	2
  1093  0028                     ??__tdiv_to_l_:
  1094  0028                     ??___fleq:	
  1095                           ; 1 bytes @ 0x8
  1096                           
  1097  0028                     ??___flge:	
  1098                           ; 1 bytes @ 0x8
  1099                           
  1100  0028                     ??___lwdiv:	
  1101                           ; 1 bytes @ 0x8
  1102                           
  1103  0028                     ___xxtofl@sign:	
  1104                           ; 1 bytes @ 0x8
  1105                           
  1106  0028                     ___awdiv@dividend:	
  1107                           ; 1 bytes @ 0x8
  1108                           
  1109  0028                     ___lldiv@quotient:	
  1110                           ; 2 bytes @ 0x8
  1111                           
  1112  0028                     __div_to_l_@quot:	
  1113                           ; 4 bytes @ 0x8
  1114                           
  1115                           
  1116                           ; 4 bytes @ 0x8
  1117  0028                     	ds	1
  1118  0029                     ___xxtofl@exp:
  1119  0029                     ___lwdiv@quotient:	
  1120                           ; 1 bytes @ 0x9
  1121                           
  1122                           
  1123                           ; 2 bytes @ 0x9
  1124  0029                     	ds	1
  1125  002A                     ___awdiv@counter:
  1126  002A                     ___xxtofl@arg:	
  1127                           ; 1 bytes @ 0xA
  1128                           
  1129                           
  1130                           ; 4 bytes @ 0xA
  1131  002A                     	ds	1
  1132  002B                     ___awdiv@sign:
  1133  002B                     ___lwdiv@counter:	
  1134                           ; 1 bytes @ 0xB
  1135                           
  1136                           
  1137                           ; 1 bytes @ 0xB
  1138  002B                     	ds	1
  1139  002C                     ___lldiv@counter:
  1140  002C                     __div_to_l_@cntr:	
  1141                           ; 1 bytes @ 0xC
  1142                           
  1143  002C                     ___awdiv@quotient:	
  1144                           ; 1 bytes @ 0xC
  1145                           
  1146  002C                     __tdiv_to_l_@quot:	
  1147                           ; 2 bytes @ 0xC
  1148                           
  1149                           
  1150                           ; 4 bytes @ 0xC
  1151  002C                     	ds	1
  1152  002D                     __div_to_l_@exp1:
  1153                           
  1154                           ; 1 bytes @ 0xD
  1155  002D                     	ds	1
  1156  002E                     ?___flmul:
  1157  002E                     ___flmul@b:	
  1158                           ; 4 bytes @ 0xE
  1159                           
  1160                           
  1161                           ; 4 bytes @ 0xE
  1162  002E                     	ds	2
  1163  0030                     __tdiv_to_l_@cntr:
  1164                           
  1165                           ; 1 bytes @ 0x10
  1166  0030                     	ds	1
  1167  0031                     __tdiv_to_l_@exp1:
  1168                           
  1169                           ; 1 bytes @ 0x11
  1170  0031                     	ds	1
  1171  0032                     ___flmul@a:
  1172                           
  1173                           ; 4 bytes @ 0x12
  1174  0032                     	ds	4
  1175  0036                     ??___flmul:
  1176                           
  1177                           ; 1 bytes @ 0x16
  1178  0036                     	ds	5
  1179  003B                     ___flmul@sign:
  1180                           
  1181                           ; 1 bytes @ 0x1B
  1182  003B                     	ds	1
  1183  003C                     ___flmul@aexp:
  1184                           
  1185                           ; 1 bytes @ 0x1C
  1186  003C                     	ds	1
  1187  003D                     ___flmul@grs:
  1188                           
  1189                           ; 4 bytes @ 0x1D
  1190  003D                     	ds	4
  1191  0041                     ___flmul@bexp:
  1192                           
  1193                           ; 1 bytes @ 0x21
  1194  0041                     	ds	1
  1195  0042                     ___flmul@prod:
  1196                           
  1197                           ; 4 bytes @ 0x22
  1198  0042                     	ds	4
  1199  0046                     ___flmul@temp:
  1200                           
  1201                           ; 2 bytes @ 0x26
  1202  0046                     	ds	2
  1203  0048                     ?_conv:
  1204  0048                     ?_fround:	
  1205                           ; 4 bytes @ 0x28
  1206                           
  1207  0048                     ?_scale:	
  1208                           ; 4 bytes @ 0x28
  1209                           
  1210                           
  1211                           ; 4 bytes @ 0x28
  1212  0048                     	ds	4
  1213  004C                     ??_conv:
  1214  004C                     ??_fround:	
  1215                           ; 1 bytes @ 0x2C
  1216                           
  1217  004C                     ??_scale:	
  1218                           ; 1 bytes @ 0x2C
  1219                           
  1220                           
  1221                           ; 1 bytes @ 0x2C
  1222  004C                     	ds	4
  1223  0050                     conv@result:
  1224                           
  1225                           ; 4 bytes @ 0x30
  1226  0050                     	ds	3
  1227  0053                     _fround$1179:
  1228                           
  1229                           ; 4 bytes @ 0x33
  1230  0053                     	ds	1
  1231  0054                     conv@aa:
  1232                           
  1233                           ; 1 bytes @ 0x34
  1234  0054                     	ds	2
  1235  0056                     _scale$1180:
  1236                           
  1237                           ; 4 bytes @ 0x36
  1238  0056                     	ds	1
  1239  0057                     _fround$1178:
  1240                           
  1241                           ; 4 bytes @ 0x37
  1242  0057                     	ds	3
  1243  005A                     scale@scl:
  1244                           
  1245                           ; 1 bytes @ 0x3A
  1246  005A                     	ds	1
  1247  005B                     ?___fltol:
  1248  005B                     fround@prec:	
  1249                           ; 4 bytes @ 0x3B
  1250                           
  1251  005B                     ___fltol@f1:	
  1252                           ; 1 bytes @ 0x3B
  1253                           
  1254                           
  1255                           ; 4 bytes @ 0x3B
  1256  005B                     	ds	1
  1257  005C                     ?___fladd:
  1258  005C                     ___fladd@b:	
  1259                           ; 4 bytes @ 0x3C
  1260                           
  1261                           
  1262                           ; 4 bytes @ 0x3C
  1263  005C                     	ds	3
  1264  005F                     ??___fltol:
  1265                           
  1266                           ; 1 bytes @ 0x3F
  1267  005F                     	ds	1
  1268  0060                     ___fladd@a:
  1269                           
  1270                           ; 4 bytes @ 0x40
  1271  0060                     	ds	4
  1272  0064                     ??___fladd:
  1273  0064                     ___fltol@sign1:	
  1274                           ; 1 bytes @ 0x44
  1275                           
  1276                           
  1277                           ; 1 bytes @ 0x44
  1278  0064                     	ds	1
  1279  0065                     ___fltol@exp1:
  1280                           
  1281                           ; 1 bytes @ 0x45
  1282  0065                     	ds	7
  1283  006C                     ___fladd@signs:
  1284                           
  1285                           ; 1 bytes @ 0x4C
  1286  006C                     	ds	1
  1287  006D                     ___fladd@aexp:
  1288                           
  1289                           ; 1 bytes @ 0x4D
  1290  006D                     	ds	1
  1291  006E                     ___fladd@bexp:
  1292                           
  1293                           ; 1 bytes @ 0x4E
  1294  006E                     	ds	1
  1295  006F                     ___fladd@grs:
  1296                           
  1297                           ; 1 bytes @ 0x4F
  1298  006F                     	ds	1
  1299                           
  1300                           	psect	maintext
  1301  0878                     __pmaintext:	
  1302 ;;
  1303 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1304 ;;
  1305 ;; *************** function _main *****************
  1306 ;; Defined at:
  1307 ;;		line 85 in file "main.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  a               2    0        unsigned int 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : B00/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0
  1323 ;;      Temps:          0       0       3       0       0
  1324 ;;      Totals:         0       0       3       0       0
  1325 ;;Total ram usage:        3 bytes
  1326 ;; Hardware stack levels required when called:    7
  1327 ;; This function calls:
  1328 ;;		_Lcd_Clear
  1329 ;;		_Lcd_Init
  1330 ;;		_Lcd_Set_Cursor
  1331 ;;		_Lcd_Write_String
  1332 ;;		_cfg_adc
  1333 ;;		_cfg_io
  1334 ;;		_conv
  1335 ;;		_send_crct
  1336 ;;		_sprintf
  1337 ;; This function is called by:
  1338 ;;		Startup code after reset
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           
  1343                           ;psect for function _main
  1344  0878                     _main:
  1345  0878                     l4415:	
  1346                           ;incstack = 0
  1347                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1348                           
  1349                           
  1350                           ;main.c: 86:   cfg_io();
  1351  0878  120A  158A  2000  120A  158A  	fcall	_cfg_io
  1352                           
  1353                           ;main.c: 87:   cfg_adc();
  1354  087D  160A  158A  227C  120A  158A  	fcall	_cfg_adc
  1355  0882                     l4417:
  1356                           
  1357                           ;main.c: 88:   unsigned int a;;main.c: 89:   TRISD = 0x00;
  1358  0882  1683               	bsf	3,5	;RP0=1, select bank1
  1359  0883  1303               	bcf	3,6	;RP1=0, select bank1
  1360  0884  0188               	clrf	8	;volatile
  1361  0885                     l4419:
  1362                           
  1363                           ;main.c: 90:   TRISCbits.TRISC6 = 0;
  1364  0885  1307               	bcf	7,6	;volatile
  1365  0886                     l4421:
  1366                           
  1367                           ;main.c: 91:   TRISCbits.TRISC7 = 0;
  1368  0886  1387               	bcf	7,7	;volatile
  1369  0887                     l4423:
  1370                           
  1371                           ;main.c: 92:   Lcd_Init();
  1372  0887  160A  158A  24C2  120A  158A  	fcall	_Lcd_Init
  1373  088C                     l4425:
  1374                           
  1375                           ;main.c: 93:   ADCON0bits.GO = 1;
  1376  088C  1283               	bcf	3,5	;RP0=0, select bank0
  1377  088D  1303               	bcf	3,6	;RP1=0, select bank0
  1378  088E  149F               	bsf	31,1	;volatile
  1379  088F                     l4427:
  1380                           
  1381                           ;main.c: 97:     Lcd_Clear();
  1382  088F  160A  158A  224B  120A  158A  	fcall	_Lcd_Clear
  1383  0894                     l4429:
  1384                           
  1385                           ;main.c: 98:     Lcd_Set_Cursor(1,1);
  1386  0894  1283               	bcf	3,5	;RP0=0, select bank0
  1387  0895  1303               	bcf	3,6	;RP1=0, select bank0
  1388  0896  01A2               	clrf	Lcd_Set_Cursor@b
  1389  0897  0AA2               	incf	Lcd_Set_Cursor@b,f
  1390  0898  3001               	movlw	1
  1391  0899  160A  158A  22AD  120A  158A  	fcall	_Lcd_Set_Cursor
  1392  089E                     l4431:
  1393                           
  1394                           ;main.c: 99:     Lcd_Write_String("S1: S2: S3:");
  1395  089E  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1396  089F  1283               	bcf	3,5	;RP0=0, select bank0
  1397  08A0  1303               	bcf	3,6	;RP1=0, select bank0
  1398  08A1  00A1               	movwf	Lcd_Write_String@a
  1399  08A2  3080               	movlw	128
  1400  08A3  00A2               	movwf	Lcd_Write_String@a+1
  1401  08A4  160A  158A  2436  120A  158A  	fcall	_Lcd_Write_String
  1402  08A9                     l4433:
  1403                           
  1404                           ;main.c: 100:     v11 = conv(V1);
  1405  08A9  1683               	bsf	3,5	;RP0=1, select bank1
  1406  08AA  1303               	bcf	3,6	;RP1=0, select bank1
  1407  08AB  085D               	movf	_V1^(0+128),w
  1408  08AC  160A  158A  23F6  120A  158A  	fcall	_conv
  1409  08B1  1283               	bcf	3,5	;RP0=0, select bank0
  1410  08B2  1303               	bcf	3,6	;RP1=0, select bank0
  1411  08B3  084B               	movf	?_conv+3,w
  1412  08B4  1683               	bsf	3,5	;RP0=1, select bank1
  1413  08B5  1303               	bcf	3,6	;RP1=0, select bank1
  1414  08B6  00DB               	movwf	(_v11+3)^(0+128)
  1415  08B7  1283               	bcf	3,5	;RP0=0, select bank0
  1416  08B8  1303               	bcf	3,6	;RP1=0, select bank0
  1417  08B9  084A               	movf	?_conv+2,w
  1418  08BA  1683               	bsf	3,5	;RP0=1, select bank1
  1419  08BB  1303               	bcf	3,6	;RP1=0, select bank1
  1420  08BC  00DA               	movwf	(_v11+2)^(0+128)
  1421  08BD  1283               	bcf	3,5	;RP0=0, select bank0
  1422  08BE  1303               	bcf	3,6	;RP1=0, select bank0
  1423  08BF  0849               	movf	?_conv+1,w
  1424  08C0  1683               	bsf	3,5	;RP0=1, select bank1
  1425  08C1  1303               	bcf	3,6	;RP1=0, select bank1
  1426  08C2  00D9               	movwf	(_v11+1)^(0+128)
  1427  08C3  1283               	bcf	3,5	;RP0=0, select bank0
  1428  08C4  1303               	bcf	3,6	;RP1=0, select bank0
  1429  08C5  0848               	movf	?_conv,w
  1430  08C6  1683               	bsf	3,5	;RP0=1, select bank1
  1431  08C7  1303               	bcf	3,6	;RP1=0, select bank1
  1432  08C8  00D8               	movwf	_v11^(0+128)
  1433  08C9                     l4435:
  1434                           
  1435                           ;main.c: 101:     v22 = conv(V2);
  1436  08C9  085C               	movf	_V2^(0+128),w
  1437  08CA  160A  158A  23F6  120A  158A  	fcall	_conv
  1438  08CF  1283               	bcf	3,5	;RP0=0, select bank0
  1439  08D0  1303               	bcf	3,6	;RP1=0, select bank0
  1440  08D1  084B               	movf	?_conv+3,w
  1441  08D2  1683               	bsf	3,5	;RP0=1, select bank1
  1442  08D3  1303               	bcf	3,6	;RP1=0, select bank1
  1443  08D4  00D7               	movwf	(_v22+3)^(0+128)
  1444  08D5  1283               	bcf	3,5	;RP0=0, select bank0
  1445  08D6  1303               	bcf	3,6	;RP1=0, select bank0
  1446  08D7  084A               	movf	?_conv+2,w
  1447  08D8  1683               	bsf	3,5	;RP0=1, select bank1
  1448  08D9  1303               	bcf	3,6	;RP1=0, select bank1
  1449  08DA  00D6               	movwf	(_v22+2)^(0+128)
  1450  08DB  1283               	bcf	3,5	;RP0=0, select bank0
  1451  08DC  1303               	bcf	3,6	;RP1=0, select bank0
  1452  08DD  0849               	movf	?_conv+1,w
  1453  08DE  1683               	bsf	3,5	;RP0=1, select bank1
  1454  08DF  1303               	bcf	3,6	;RP1=0, select bank1
  1455  08E0  00D5               	movwf	(_v22+1)^(0+128)
  1456  08E1  1283               	bcf	3,5	;RP0=0, select bank0
  1457  08E2  1303               	bcf	3,6	;RP1=0, select bank0
  1458  08E3  0848               	movf	?_conv,w
  1459  08E4  1683               	bsf	3,5	;RP0=1, select bank1
  1460  08E5  1303               	bcf	3,6	;RP1=0, select bank1
  1461  08E6  00D4               	movwf	_v22^(0+128)
  1462  08E7                     l4437:
  1463                           
  1464                           ;main.c: 103:     Lcd_Set_Cursor(2,1);
  1465  08E7  1283               	bcf	3,5	;RP0=0, select bank0
  1466  08E8  1303               	bcf	3,6	;RP1=0, select bank0
  1467  08E9  01A2               	clrf	Lcd_Set_Cursor@b
  1468  08EA  0AA2               	incf	Lcd_Set_Cursor@b,f
  1469  08EB  3002               	movlw	2
  1470  08EC  160A  158A  22AD  120A  158A  	fcall	_Lcd_Set_Cursor
  1471  08F1                     l4439:
  1472                           
  1473                           ;main.c: 104:     sprintf(f, "%3.2fV",v11);
  1474  08F1  309D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1475  08F2  1683               	bsf	3,5	;RP0=1, select bank1
  1476  08F3  1303               	bcf	3,6	;RP1=0, select bank1
  1477  08F4  00CD               	movwf	??_main^(0+128)
  1478  08F5  084D               	movf	??_main^(0+128),w
  1479  08F6  00A8               	movwf	sprintf@f^(0+128)
  1480  08F7  085B               	movf	(_v11+3)^(0+128),w
  1481  08F8  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1482  08F9  085A               	movf	(_v11+2)^(0+128),w
  1483  08FA  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1484  08FB  0859               	movf	(_v11+1)^(0+128),w
  1485  08FC  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1486  08FD  0858               	movf	_v11^(0+128),w
  1487  08FE  00A9               	movwf	(?_sprintf^(0+128)+1)
  1488  08FF  30DE               	movlw	(low (_f| 0))& (0+255)
  1489  0900  160A  118A  24B4  120A  158A  	fcall	_sprintf
  1490  0905                     l4441:
  1491                           
  1492                           ;main.c: 105:     Lcd_Write_String(f);
  1493  0905  30DE               	movlw	(low (_f| 0))& (0+255)
  1494  0906  1283               	bcf	3,5	;RP0=0, select bank0
  1495  0907  1303               	bcf	3,6	;RP1=0, select bank0
  1496  0908  00A1               	movwf	Lcd_Write_String@a
  1497  0909  3000               	movlw	0
  1498  090A  00A2               	movwf	Lcd_Write_String@a+1
  1499  090B  160A  158A  2436  120A  158A  	fcall	_Lcd_Write_String
  1500  0910                     l4443:
  1501                           
  1502                           ;main.c: 109:     TXREG = '\f';
  1503  0910  300C               	movlw	12
  1504  0911  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0912  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0913  0099               	movwf	25	;volatile
  1507  0914                     l4445:
  1508                           
  1509                           ;main.c: 110:     send_crct("HOLA");
  1510  0914  30A4               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1511  0915  160A  158A  2323  120A  158A  	fcall	_send_crct
  1512  091A                     l4447:
  1513                           
  1514                           ;main.c: 112:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1515  091A  3015               	movlw	21
  1516  091B  1683               	bsf	3,5	;RP0=1, select bank1
  1517  091C  1303               	bcf	3,6	;RP1=0, select bank1
  1518  091D  00CF               	movwf	(??_main^(0+128)+2)
  1519  091E  304B               	movlw	75
  1520  091F  00CE               	movwf	(??_main^(0+128)+1)
  1521  0920  30BD               	movlw	189
  1522  0921  00CD               	movwf	??_main^(0+128)
  1523  0922                     u7727:
  1524  0922  0BCD               	decfsz	??_main^(0+128),f
  1525  0923  2922               	goto	u7727
  1526  0924  0BCE               	decfsz	(??_main^(0+128)+1),f
  1527  0925  2922               	goto	u7727
  1528  0926  0BCF               	decfsz	(??_main^(0+128)+2),f
  1529  0927  2922               	goto	u7727
  1530  0928  2929               	nop2
  1531  0929                     l4449:
  1532                           
  1533                           ;main.c: 114:     if(ADCON0bits.GO == 0){
  1534  0929  1283               	bcf	3,5	;RP0=0, select bank0
  1535  092A  1303               	bcf	3,6	;RP1=0, select bank0
  1536  092B  189F               	btfsc	31,1	;volatile
  1537  092C  292E               	goto	u7711
  1538  092D  292F               	goto	u7710
  1539  092E                     u7711:
  1540  092E  2939               	goto	l98
  1541  092F                     u7710:
  1542  092F                     l4451:
  1543                           
  1544                           ;main.c: 115:             _delay((unsigned long)((100)*(8000000/4000000.0)));
  1545  092F  3041               	movlw	65
  1546  0930  1683               	bsf	3,5	;RP0=1, select bank1
  1547  0931  1303               	bcf	3,6	;RP1=0, select bank1
  1548  0932  00CD               	movwf	??_main^(0+128)
  1549  0933                     u7737:
  1550  0933  0BCD               	decfsz	??_main^(0+128),f
  1551  0934  2933               	goto	u7737
  1552  0935  2936               	nop2
  1553  0936                     l4453:
  1554                           
  1555                           ;main.c: 116:             ADCON0bits.GO = 1;
  1556  0936  1283               	bcf	3,5	;RP0=0, select bank0
  1557  0937  1303               	bcf	3,6	;RP1=0, select bank0
  1558  0938  149F               	bsf	31,1	;volatile
  1559  0939                     l98:
  1560  0939  120A  118A  280C   	ljmp	start
  1561  093C                     __end_of_main:
  1562                           
  1563                           	psect	text1
  1564  14B4                     __ptext1:	
  1565 ;; *************** function _sprintf *****************
  1566 ;; Defined at:
  1567 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  sp              1    wreg     PTR unsigned char 
  1570 ;;		 -> f(10), 
  1571 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1572 ;;		 -> STR_2(7), 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  sp              1   41[BANK1 ] PTR unsigned char 
  1575 ;;		 -> f(10), 
  1576 ;;  fval            4   37[BANK1 ] PTR unsigned char 
  1577 ;;  tmpval          4   31[BANK1 ] struct .
  1578 ;;  val             4   23[BANK1 ] unsigned long 
  1579 ;;  prec            2   42[BANK1 ] int 
  1580 ;;  eexp            2   35[BANK1 ] int 
  1581 ;;  width           2   29[BANK1 ] int 
  1582 ;;  flag            2   27[BANK1 ] unsigned short 
  1583 ;;  cp              2    0        PTR const unsigned char 
  1584 ;;  len             2    0        unsigned int 
  1585 ;;  c               1   44[BANK1 ] unsigned char 
  1586 ;;  ap              1   22[BANK1 ] PTR void [1]
  1587 ;;		 -> ?_sprintf(2), 
  1588 ;;  d               1    0        unsigned char 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  2    8[BANK1 ] int 
  1591 ;; Registers used:
  1592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1598 ;;      Params:         0       0       5       0       0
  1599 ;;      Locals:         0       0      27       0       0
  1600 ;;      Temps:          0       0       5       0       0
  1601 ;;      Totals:         0       0      37       0       0
  1602 ;;Total ram usage:       37 bytes
  1603 ;; Hardware stack levels used:    1
  1604 ;; Hardware stack levels required when called:    6
  1605 ;; This function calls:
  1606 ;;		___awdiv
  1607 ;;		___fladd
  1608 ;;		___fleq
  1609 ;;		___flge
  1610 ;;		___flmul
  1611 ;;		___flneg
  1612 ;;		___flsub
  1613 ;;		___fltol
  1614 ;;		___lldiv
  1615 ;;		___llmod
  1616 ;;		___wmul
  1617 ;;		___xxtofl
  1618 ;;		__div_to_l_
  1619 ;;		__tdiv_to_l_
  1620 ;;		_fround
  1621 ;;		_isdigit
  1622 ;;		_scale
  1623 ;; This function is called by:
  1624 ;;		_main
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           
  1629                           ;psect for function _sprintf
  1630  14B4                     _sprintf:
  1631                           
  1632                           ;incstack = 0
  1633                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1634                           ;sprintf@sp stored from wreg
  1635  14B4  1683               	bsf	3,5	;RP0=1, select bank1
  1636  14B5  1303               	bcf	3,6	;RP1=0, select bank1
  1637  14B6  00C9               	movwf	sprintf@sp^(0+128)
  1638  14B7                     l4145:
  1639                           
  1640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1641  14B7  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1642  14B8  00AD               	movwf	??_sprintf^(0+128)
  1643  14B9  082D               	movf	??_sprintf^(0+128),w
  1644  14BA  00B6               	movwf	sprintf@ap^(0+128)
  1645  14BB                     L1:
  1646                           
  1647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1648  14BB  120A  118A  2DB9   	goto	l4395
  1649  14BE                     l4147:
  1650                           
  1651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1652  14BE  3025               	movlw	37
  1653  14BF  064C               	xorwf	sprintf@c^(0+128),w
  1654  14C0  1903               	btfsc	3,2
  1655  14C1  2CC3               	goto	u7231
  1656  14C2  2CC4               	goto	u7230
  1657  14C3                     u7231:
  1658  14C3  2CD0               	goto	l4153
  1659  14C4                     u7230:
  1660  14C4                     l4149:
  1661                           
  1662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1663  14C4  084C               	movf	sprintf@c^(0+128),w
  1664  14C5  00AD               	movwf	??_sprintf^(0+128)
  1665  14C6  0849               	movf	sprintf@sp^(0+128),w
  1666  14C7  0084               	movwf	4
  1667  14C8  082D               	movf	??_sprintf^(0+128),w
  1668  14C9  1383               	bcf	3,7	;select IRP bank0
  1669  14CA  0080               	movwf	0
  1670  14CB                     l4151:
  1671  14CB  3001               	movlw	1
  1672  14CC  00AD               	movwf	??_sprintf^(0+128)
  1673  14CD  082D               	movf	??_sprintf^(0+128),w
  1674  14CE  07C9               	addwf	sprintf@sp^(0+128),f
  1675                           
  1676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1677  14CF  2CBB               	goto	L1
  1678  14D0                     l4153:
  1679                           
  1680                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1681  14D0  01BD               	clrf	sprintf@width^(0+128)
  1682  14D1  01BE               	clrf	(sprintf@width+1)^(0+128)
  1683                           
  1684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1685  14D2  01BB               	clrf	sprintf@flag^(0+128)
  1686  14D3  01BC               	clrf	(sprintf@flag+1)^(0+128)
  1687  14D4                     l4155:
  1688                           
  1689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1690  14D4  0828               	movf	sprintf@f^(0+128),w
  1691  14D5  0084               	movwf	4
  1692  14D6  160A  158A  200A  160A  118A  	fcall	stringdir
  1693  14DB  160A  158A  226A  160A  118A  	fcall	_isdigit
  1694  14E0  1C03               	btfss	3,0
  1695  14E1  2CE3               	goto	u7241
  1696  14E2  2CE4               	goto	u7240
  1697  14E3                     u7241:
  1698  14E3  2D32               	goto	l4167
  1699  14E4                     u7240:
  1700  14E4                     l4157:
  1701                           
  1702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1703  14E4  1683               	bsf	3,5	;RP0=1, select bank1
  1704  14E5  1303               	bcf	3,6	;RP1=0, select bank1
  1705  14E6  01BD               	clrf	sprintf@width^(0+128)
  1706  14E7  01BE               	clrf	(sprintf@width+1)^(0+128)
  1707  14E8                     l4159:
  1708                           
  1709                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1710  14E8  300A               	movlw	10
  1711  14E9  1283               	bcf	3,5	;RP0=0, select bank0
  1712  14EA  1303               	bcf	3,6	;RP1=0, select bank0
  1713  14EB  00A0               	movwf	___wmul@multiplier
  1714  14EC  3000               	movlw	0
  1715  14ED  00A1               	movwf	___wmul@multiplier+1
  1716  14EE  1683               	bsf	3,5	;RP0=1, select bank1
  1717  14EF  1303               	bcf	3,6	;RP1=0, select bank1
  1718  14F0  083E               	movf	(sprintf@width+1)^(0+128),w
  1719  14F1  1283               	bcf	3,5	;RP0=0, select bank0
  1720  14F2  1303               	bcf	3,6	;RP1=0, select bank0
  1721  14F3  00A3               	movwf	___wmul@multiplicand+1
  1722  14F4  1683               	bsf	3,5	;RP0=1, select bank1
  1723  14F5  1303               	bcf	3,6	;RP1=0, select bank1
  1724  14F6  083D               	movf	sprintf@width^(0+128),w
  1725  14F7  1283               	bcf	3,5	;RP0=0, select bank0
  1726  14F8  1303               	bcf	3,6	;RP1=0, select bank0
  1727  14F9  00A2               	movwf	___wmul@multiplicand
  1728  14FA  160A  158A  22D3  160A  118A  	fcall	___wmul
  1729  14FF  1283               	bcf	3,5	;RP0=0, select bank0
  1730  1500  1303               	bcf	3,6	;RP1=0, select bank0
  1731  1501  0821               	movf	?___wmul+1,w
  1732  1502  1683               	bsf	3,5	;RP0=1, select bank1
  1733  1503  1303               	bcf	3,6	;RP1=0, select bank1
  1734  1504  00BE               	movwf	(sprintf@width+1)^(0+128)
  1735  1505  1283               	bcf	3,5	;RP0=0, select bank0
  1736  1506  1303               	bcf	3,6	;RP1=0, select bank0
  1737  1507  0820               	movf	?___wmul,w
  1738  1508  1683               	bsf	3,5	;RP0=1, select bank1
  1739  1509  1303               	bcf	3,6	;RP1=0, select bank1
  1740  150A  00BD               	movwf	sprintf@width^(0+128)
  1741  150B                     l4161:
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1744  150B  0828               	movf	sprintf@f^(0+128),w
  1745  150C  0084               	movwf	4
  1746  150D  160A  158A  200A  160A  118A  	fcall	stringdir
  1747  1512  3ED0               	addlw	208
  1748  1513  00AD               	movwf	??_sprintf^(0+128)
  1749  1514  30FF               	movlw	255
  1750  1515  1803               	skipnc
  1751  1516  3000               	movlw	0
  1752  1517  00AE               	movwf	(??_sprintf^(0+128)+1)
  1753  1518  082D               	movf	??_sprintf^(0+128),w
  1754  1519  07BD               	addwf	sprintf@width^(0+128),f
  1755  151A  1803               	skipnc
  1756  151B  0ABE               	incf	(sprintf@width+1)^(0+128),f
  1757  151C  082E               	movf	(??_sprintf+1)^(0+128),w
  1758  151D  07BE               	addwf	(sprintf@width+1)^(0+128),f
  1759  151E                     l4163:
  1760  151E  3001               	movlw	1
  1761  151F  00AD               	movwf	??_sprintf^(0+128)
  1762  1520  082D               	movf	??_sprintf^(0+128),w
  1763  1521  07A8               	addwf	sprintf@f^(0+128),f
  1764  1522                     l4165:
  1765                           
  1766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1767  1522  0828               	movf	sprintf@f^(0+128),w
  1768  1523  0084               	movwf	4
  1769  1524  160A  158A  200A  160A  118A  	fcall	stringdir
  1770  1529  160A  158A  226A  160A  118A  	fcall	_isdigit
  1771  152E  1803               	btfsc	3,0
  1772  152F  2D31               	goto	u7251
  1773  1530  2D32               	goto	u7250
  1774  1531                     u7251:
  1775  1531  2CE8               	goto	l4159
  1776  1532                     u7250:
  1777  1532                     l4167:
  1778                           
  1779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1780  1532  1683               	bsf	3,5	;RP0=1, select bank1
  1781  1533  1303               	bcf	3,6	;RP1=0, select bank1
  1782  1534  0828               	movf	sprintf@f^(0+128),w
  1783  1535  0084               	movwf	4
  1784  1536  160A  158A  200A  160A  118A  	fcall	stringdir
  1785  153B  3A2E               	xorlw	46
  1786  153C  1D03               	skipz
  1787  153D  2D3F               	goto	u7261
  1788  153E  2D40               	goto	u7260
  1789  153F                     u7261:
  1790  153F  2D93               	goto	l4183
  1791  1540                     u7260:
  1792  1540                     l4169:
  1793                           
  1794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1795  1540  173C               	bsf	(sprintf@flag^(0+128)+1),6
  1796  1541                     l4171:
  1797                           
  1798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1799  1541  3001               	movlw	1
  1800  1542  00AD               	movwf	??_sprintf^(0+128)
  1801  1543  082D               	movf	??_sprintf^(0+128),w
  1802  1544  07A8               	addwf	sprintf@f^(0+128),f
  1803  1545                     l4173:
  1804                           
  1805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1806  1545  01CA               	clrf	sprintf@prec^(0+128)
  1807  1546  01CB               	clrf	(sprintf@prec+1)^(0+128)
  1808                           
  1809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1810  1547  2D82               	goto	l4181
  1811  1548                     l4175:
  1812                           
  1813                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1814  1548  300A               	movlw	10
  1815  1549  1283               	bcf	3,5	;RP0=0, select bank0
  1816  154A  1303               	bcf	3,6	;RP1=0, select bank0
  1817  154B  00A0               	movwf	___wmul@multiplier
  1818  154C  3000               	movlw	0
  1819  154D  00A1               	movwf	___wmul@multiplier+1
  1820  154E  1683               	bsf	3,5	;RP0=1, select bank1
  1821  154F  1303               	bcf	3,6	;RP1=0, select bank1
  1822  1550  084B               	movf	(sprintf@prec+1)^(0+128),w
  1823  1551  1283               	bcf	3,5	;RP0=0, select bank0
  1824  1552  1303               	bcf	3,6	;RP1=0, select bank0
  1825  1553  00A3               	movwf	___wmul@multiplicand+1
  1826  1554  1683               	bsf	3,5	;RP0=1, select bank1
  1827  1555  1303               	bcf	3,6	;RP1=0, select bank1
  1828  1556  084A               	movf	sprintf@prec^(0+128),w
  1829  1557  1283               	bcf	3,5	;RP0=0, select bank0
  1830  1558  1303               	bcf	3,6	;RP1=0, select bank0
  1831  1559  00A2               	movwf	___wmul@multiplicand
  1832  155A  160A  158A  22D3  160A  118A  	fcall	___wmul
  1833  155F  1283               	bcf	3,5	;RP0=0, select bank0
  1834  1560  1303               	bcf	3,6	;RP1=0, select bank0
  1835  1561  0821               	movf	?___wmul+1,w
  1836  1562  1683               	bsf	3,5	;RP0=1, select bank1
  1837  1563  1303               	bcf	3,6	;RP1=0, select bank1
  1838  1564  00CB               	movwf	(sprintf@prec+1)^(0+128)
  1839  1565  1283               	bcf	3,5	;RP0=0, select bank0
  1840  1566  1303               	bcf	3,6	;RP1=0, select bank0
  1841  1567  0820               	movf	?___wmul,w
  1842  1568  1683               	bsf	3,5	;RP0=1, select bank1
  1843  1569  1303               	bcf	3,6	;RP1=0, select bank1
  1844  156A  00CA               	movwf	sprintf@prec^(0+128)
  1845  156B                     l4177:
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1848  156B  0828               	movf	sprintf@f^(0+128),w
  1849  156C  0084               	movwf	4
  1850  156D  160A  158A  200A  160A  118A  	fcall	stringdir
  1851  1572  3ED0               	addlw	208
  1852  1573  00AD               	movwf	??_sprintf^(0+128)
  1853  1574  30FF               	movlw	255
  1854  1575  1803               	skipnc
  1855  1576  3000               	movlw	0
  1856  1577  00AE               	movwf	(??_sprintf^(0+128)+1)
  1857  1578  082D               	movf	??_sprintf^(0+128),w
  1858  1579  07CA               	addwf	sprintf@prec^(0+128),f
  1859  157A  1803               	skipnc
  1860  157B  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  1861  157C  082E               	movf	(??_sprintf+1)^(0+128),w
  1862  157D  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  1863  157E                     l4179:
  1864  157E  3001               	movlw	1
  1865  157F  00AD               	movwf	??_sprintf^(0+128)
  1866  1580  082D               	movf	??_sprintf^(0+128),w
  1867  1581  07A8               	addwf	sprintf@f^(0+128),f
  1868  1582                     l4181:
  1869                           
  1870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1871  1582  0828               	movf	sprintf@f^(0+128),w
  1872  1583  0084               	movwf	4
  1873  1584  160A  158A  200A  160A  118A  	fcall	stringdir
  1874  1589  160A  158A  226A  160A  118A  	fcall	_isdigit
  1875  158E  1803               	btfsc	3,0
  1876  158F  2D91               	goto	u7271
  1877  1590  2D92               	goto	u7270
  1878  1591                     u7271:
  1879  1591  2D48               	goto	l4175
  1880  1592                     u7270:
  1881  1592  2D99               	goto	l4189
  1882  1593                     l4183:
  1883                           
  1884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1885  1593  01CA               	clrf	sprintf@prec^(0+128)
  1886  1594  01CB               	clrf	(sprintf@prec+1)^(0+128)
  1887  1595                     l4185:
  1888                           
  1889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1890  1595  163C               	bsf	(sprintf@flag^(0+128)+1),4
  1891  1596  2D99               	goto	l4189
  1892  1597                     l333:	
  1893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1894                           
  1895                           
  1896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1897  1597  153C               	bsf	(sprintf@flag^(0+128)+1),2
  1898                           
  1899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1900  1598  2DB5               	goto	l4191
  1901  1599                     l4189:
  1902  1599  3001               	movlw	1
  1903  159A  1683               	bsf	3,5	;RP0=1, select bank1
  1904  159B  1303               	bcf	3,6	;RP1=0, select bank1
  1905  159C  07A8               	addwf	sprintf@f^(0+128),f
  1906  159D  30FF               	movlw	-1
  1907  159E  0728               	addwf	sprintf@f^(0+128),w
  1908  159F  0084               	movwf	4
  1909  15A0  160A  158A  200A  160A  118A  	fcall	stringdir
  1910  15A5  00CC               	movwf	sprintf@c^(0+128)
  1911  15A6  00AD               	movwf	??_sprintf^(0+128)
  1912  15A7  01AE               	clrf	(??_sprintf^(0+128)+1)
  1913                           
  1914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1915                           ; Switch size 1, requested type "simple"
  1916                           ; Number of cases is 1, Range of values is 0 to 0
  1917                           ; switch strategies available:
  1918                           ; Name         Instructions Cycles
  1919                           ; simple_byte            4     3 (average)
  1920                           ; direct_byte           11     8 (fixed)
  1921                           ; jumptable            260     6 (fixed)
  1922                           ;	Chosen strategy is simple_byte
  1923  15A8  082E               	movf	(??_sprintf+1)^(0+128),w
  1924  15A9  3A00               	xorlw	0	; case 0
  1925  15AA  1903               	skipnz
  1926  15AB  2DAD               	goto	l4491
  1927  15AC  2CBB               	goto	L1
  1928  15AD                     l4491:
  1929                           
  1930                           ; Switch size 1, requested type "simple"
  1931                           ; Number of cases is 2, Range of values is 0 to 102
  1932                           ; switch strategies available:
  1933                           ; Name         Instructions Cycles
  1934                           ; simple_byte            7     4 (average)
  1935                           ; jumptable            260     6 (fixed)
  1936                           ;	Chosen strategy is simple_byte
  1937  15AD  082D               	movf	??_sprintf^(0+128),w
  1938  15AE  3A00               	xorlw	0	; case 0
  1939  15AF  1903               	skipnz
  1940  15B0  2FFD               	goto	L3
  1941  15B1  3A66               	xorlw	102	; case 102
  1942  15B2  1903               	skipnz
  1943  15B3  2D97               	goto	l333
  1944  15B4  2CBB               	goto	L1
  1945  15B5                     l4191:
  1946                           
  1947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1948  15B5  3000               	movlw	0
  1949  15B6  053B               	andwf	sprintf@flag^(0+128),w
  1950  15B7  00AD               	movwf	??_sprintf^(0+128)
  1951  15B8  3007               	movlw	7
  1952  15B9  053C               	andwf	(sprintf@flag+1)^(0+128),w
  1953  15BA  00AE               	movwf	(??_sprintf+1)^(0+128)
  1954  15BB  082D               	movf	??_sprintf^(0+128),w
  1955  15BC  042E               	iorwf	(??_sprintf^(0+128)+1),w
  1956  15BD  1903               	btfsc	3,2
  1957  15BE  2DC0               	goto	u7281
  1958  15BF  2DC3               	goto	u7280
  1959  15C0                     u7281:
  1960  15C0  120A  118A  2CF4   	goto	l4349
  1961  15C3                     u7280:
  1962  15C3                     l4193:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1965  15C3  1E3C               	btfss	(sprintf@flag+1)^(0+128),4
  1966  15C4  2DC6               	goto	u7291
  1967  15C5  2DC7               	goto	u7290
  1968  15C6                     u7291:
  1969  15C6  2DCB               	goto	l4197
  1970  15C7                     u7290:
  1971  15C7                     l4195:
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1974  15C7  3006               	movlw	6
  1975  15C8  00CA               	movwf	sprintf@prec^(0+128)
  1976  15C9  3000               	movlw	0
  1977  15CA  00CB               	movwf	(sprintf@prec^(0+128)+1)
  1978  15CB                     l4197:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1981  15CB  0836               	movf	sprintf@ap^(0+128),w
  1982  15CC  0084               	movwf	4
  1983  15CD  1383               	bcf	3,7	;select IRP bank0
  1984  15CE  0800               	movf	0,w
  1985  15CF  00C5               	movwf	sprintf@fval^(0+128)
  1986  15D0  0A84               	incf	4,f
  1987  15D1  0800               	movf	0,w
  1988  15D2  00C6               	movwf	(sprintf@fval+1)^(0+128)
  1989  15D3  0A84               	incf	4,f
  1990  15D4  0800               	movf	0,w
  1991  15D5  00C7               	movwf	(sprintf@fval+2)^(0+128)
  1992  15D6  0A84               	incf	4,f
  1993  15D7  0800               	movf	0,w
  1994  15D8  00C8               	movwf	(sprintf@fval+3)^(0+128)
  1995  15D9                     l4199:
  1996  15D9  3004               	movlw	4
  1997  15DA  00AD               	movwf	??_sprintf^(0+128)
  1998  15DB  082D               	movf	??_sprintf^(0+128),w
  1999  15DC  07B6               	addwf	sprintf@ap^(0+128),f
  2000  15DD                     l4201:
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2003  15DD  0848               	movf	(sprintf@fval+3)^(0+128),w
  2004  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  2005  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  2006  15E0  00A3               	movwf	___flge@ff1+3
  2007  15E1  1683               	bsf	3,5	;RP0=1, select bank1
  2008  15E2  1303               	bcf	3,6	;RP1=0, select bank1
  2009  15E3  0847               	movf	(sprintf@fval+2)^(0+128),w
  2010  15E4  1283               	bcf	3,5	;RP0=0, select bank0
  2011  15E5  1303               	bcf	3,6	;RP1=0, select bank0
  2012  15E6  00A2               	movwf	___flge@ff1+2
  2013  15E7  1683               	bsf	3,5	;RP0=1, select bank1
  2014  15E8  1303               	bcf	3,6	;RP1=0, select bank1
  2015  15E9  0846               	movf	(sprintf@fval+1)^(0+128),w
  2016  15EA  1283               	bcf	3,5	;RP0=0, select bank0
  2017  15EB  1303               	bcf	3,6	;RP1=0, select bank0
  2018  15EC  00A1               	movwf	___flge@ff1+1
  2019  15ED  1683               	bsf	3,5	;RP0=1, select bank1
  2020  15EE  1303               	bcf	3,6	;RP1=0, select bank1
  2021  15EF  0845               	movf	sprintf@fval^(0+128),w
  2022  15F0  1283               	bcf	3,5	;RP0=0, select bank0
  2023  15F1  1303               	bcf	3,6	;RP1=0, select bank0
  2024  15F2  00A0               	movwf	___flge@ff1
  2025  15F3  3000               	movlw	0
  2026  15F4  00A7               	movwf	___flge@ff2+3
  2027  15F5  3000               	movlw	0
  2028  15F6  00A6               	movwf	___flge@ff2+2
  2029  15F7  3000               	movlw	0
  2030  15F8  00A5               	movwf	___flge@ff2+1
  2031  15F9  3000               	movlw	0
  2032  15FA  00A4               	movwf	___flge@ff2
  2033  15FB  160A  118A  200D  160A  118A  	fcall	___flge
  2034  1600  1803               	btfsc	3,0
  2035  1601  2E03               	goto	u7301
  2036  1602  2E04               	goto	u7300
  2037  1603                     u7301:
  2038  1603  2E3D               	goto	l4207
  2039  1604                     u7300:
  2040  1604                     l4203:
  2041                           
  2042                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2043  1604  1683               	bsf	3,5	;RP0=1, select bank1
  2044  1605  1303               	bcf	3,6	;RP1=0, select bank1
  2045  1606  0848               	movf	(sprintf@fval+3)^(0+128),w
  2046  1607  1283               	bcf	3,5	;RP0=0, select bank0
  2047  1608  1303               	bcf	3,6	;RP1=0, select bank0
  2048  1609  00A3               	movwf	___flneg@f1+3
  2049  160A  1683               	bsf	3,5	;RP0=1, select bank1
  2050  160B  1303               	bcf	3,6	;RP1=0, select bank1
  2051  160C  0847               	movf	(sprintf@fval+2)^(0+128),w
  2052  160D  1283               	bcf	3,5	;RP0=0, select bank0
  2053  160E  1303               	bcf	3,6	;RP1=0, select bank0
  2054  160F  00A2               	movwf	___flneg@f1+2
  2055  1610  1683               	bsf	3,5	;RP0=1, select bank1
  2056  1611  1303               	bcf	3,6	;RP1=0, select bank1
  2057  1612  0846               	movf	(sprintf@fval+1)^(0+128),w
  2058  1613  1283               	bcf	3,5	;RP0=0, select bank0
  2059  1614  1303               	bcf	3,6	;RP1=0, select bank0
  2060  1615  00A1               	movwf	___flneg@f1+1
  2061  1616  1683               	bsf	3,5	;RP0=1, select bank1
  2062  1617  1303               	bcf	3,6	;RP1=0, select bank1
  2063  1618  0845               	movf	sprintf@fval^(0+128),w
  2064  1619  1283               	bcf	3,5	;RP0=0, select bank0
  2065  161A  1303               	bcf	3,6	;RP1=0, select bank0
  2066  161B  00A0               	movwf	___flneg@f1
  2067  161C  160A  118A  2000  160A  118A  	fcall	___flneg
  2068  1621  1283               	bcf	3,5	;RP0=0, select bank0
  2069  1622  1303               	bcf	3,6	;RP1=0, select bank0
  2070  1623  0823               	movf	?___flneg+3,w
  2071  1624  1683               	bsf	3,5	;RP0=1, select bank1
  2072  1625  1303               	bcf	3,6	;RP1=0, select bank1
  2073  1626  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2074  1627  1283               	bcf	3,5	;RP0=0, select bank0
  2075  1628  1303               	bcf	3,6	;RP1=0, select bank0
  2076  1629  0822               	movf	?___flneg+2,w
  2077  162A  1683               	bsf	3,5	;RP0=1, select bank1
  2078  162B  1303               	bcf	3,6	;RP1=0, select bank1
  2079  162C  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2080  162D  1283               	bcf	3,5	;RP0=0, select bank0
  2081  162E  1303               	bcf	3,6	;RP1=0, select bank0
  2082  162F  0821               	movf	?___flneg+1,w
  2083  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2084  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2085  1632  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2086  1633  1283               	bcf	3,5	;RP0=0, select bank0
  2087  1634  1303               	bcf	3,6	;RP1=0, select bank0
  2088  1635  0820               	movf	?___flneg,w
  2089  1636  1683               	bsf	3,5	;RP0=1, select bank1
  2090  1637  1303               	bcf	3,6	;RP1=0, select bank1
  2091  1638  00C5               	movwf	sprintf@fval^(0+128)
  2092  1639                     l4205:
  2093                           
  2094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2095  1639  3003               	movlw	3
  2096  163A  04BB               	iorwf	sprintf@flag^(0+128),f
  2097  163B  3000               	movlw	0
  2098  163C  04BC               	iorwf	(sprintf@flag+1)^(0+128),f
  2099  163D                     l4207:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2102  163D  1683               	bsf	3,5	;RP0=1, select bank1
  2103  163E  1303               	bcf	3,6	;RP1=0, select bank1
  2104  163F  01C3               	clrf	sprintf@eexp^(0+128)
  2105  1640  01C4               	clrf	(sprintf@eexp+1)^(0+128)
  2106  1641                     l4209:
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2109  1641  0848               	movf	(sprintf@fval+3)^(0+128),w
  2110  1642  1283               	bcf	3,5	;RP0=0, select bank0
  2111  1643  1303               	bcf	3,6	;RP1=0, select bank0
  2112  1644  00A3               	movwf	___fleq@ff1+3
  2113  1645  1683               	bsf	3,5	;RP0=1, select bank1
  2114  1646  1303               	bcf	3,6	;RP1=0, select bank1
  2115  1647  0847               	movf	(sprintf@fval+2)^(0+128),w
  2116  1648  1283               	bcf	3,5	;RP0=0, select bank0
  2117  1649  1303               	bcf	3,6	;RP1=0, select bank0
  2118  164A  00A2               	movwf	___fleq@ff1+2
  2119  164B  1683               	bsf	3,5	;RP0=1, select bank1
  2120  164C  1303               	bcf	3,6	;RP1=0, select bank1
  2121  164D  0846               	movf	(sprintf@fval+1)^(0+128),w
  2122  164E  1283               	bcf	3,5	;RP0=0, select bank0
  2123  164F  1303               	bcf	3,6	;RP1=0, select bank0
  2124  1650  00A1               	movwf	___fleq@ff1+1
  2125  1651  1683               	bsf	3,5	;RP0=1, select bank1
  2126  1652  1303               	bcf	3,6	;RP1=0, select bank1
  2127  1653  0845               	movf	sprintf@fval^(0+128),w
  2128  1654  1283               	bcf	3,5	;RP0=0, select bank0
  2129  1655  1303               	bcf	3,6	;RP1=0, select bank0
  2130  1656  00A0               	movwf	___fleq@ff1
  2131  1657  3000               	movlw	0
  2132  1658  00A7               	movwf	___fleq@ff2+3
  2133  1659  3000               	movlw	0
  2134  165A  00A6               	movwf	___fleq@ff2+2
  2135  165B  3000               	movlw	0
  2136  165C  00A5               	movwf	___fleq@ff2+1
  2137  165D  3000               	movlw	0
  2138  165E  00A4               	movwf	___fleq@ff2
  2139  165F  160A  158A  250F  160A  118A  	fcall	___fleq
  2140  1664  1803               	btfsc	3,0
  2141  1665  2E67               	goto	u7311
  2142  1666  2E68               	goto	u7310
  2143  1667                     u7311:
  2144  1667  2F94               	goto	l4235
  2145  1668                     u7310:
  2146  1668                     l4211:
  2147                           
  2148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2149  1668  1003               	clrc
  2150  1669  1683               	bsf	3,5	;RP0=1, select bank1
  2151  166A  1303               	bcf	3,6	;RP1=0, select bank1
  2152  166B  0D47               	rlf	(sprintf@fval+2)^(0+128),w
  2153  166C  0D48               	rlf	(sprintf@fval+3)^(0+128),w
  2154  166D  3E82               	addlw	130
  2155  166E  00C3               	movwf	sprintf@eexp^(0+128)
  2156  166F  30FF               	movlw	255
  2157  1670  1803               	skipnc
  2158  1671  3000               	movlw	0
  2159  1672  00C4               	movwf	(sprintf@eexp^(0+128)+1)
  2160  1673                     l4213:
  2161                           
  2162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2163  1673  30FF               	movlw	255
  2164  1674  07C3               	addwf	sprintf@eexp^(0+128),f
  2165  1675  1803               	skipnc
  2166  1676  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2167  1677  30FF               	movlw	255
  2168  1678  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2169  1679                     l4215:
  2170                           
  2171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2172  1679  3003               	movlw	3
  2173  167A  1283               	bcf	3,5	;RP0=0, select bank0
  2174  167B  1303               	bcf	3,6	;RP1=0, select bank0
  2175  167C  00A0               	movwf	___wmul@multiplier
  2176  167D  3000               	movlw	0
  2177  167E  00A1               	movwf	___wmul@multiplier+1
  2178  167F  1683               	bsf	3,5	;RP0=1, select bank1
  2179  1680  1303               	bcf	3,6	;RP1=0, select bank1
  2180  1681  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2181  1682  1283               	bcf	3,5	;RP0=0, select bank0
  2182  1683  1303               	bcf	3,6	;RP1=0, select bank0
  2183  1684  00A3               	movwf	___wmul@multiplicand+1
  2184  1685  1683               	bsf	3,5	;RP0=1, select bank1
  2185  1686  1303               	bcf	3,6	;RP1=0, select bank1
  2186  1687  0843               	movf	sprintf@eexp^(0+128),w
  2187  1688  1283               	bcf	3,5	;RP0=0, select bank0
  2188  1689  1303               	bcf	3,6	;RP1=0, select bank0
  2189  168A  00A2               	movwf	___wmul@multiplicand
  2190  168B  160A  158A  22D3  160A  118A  	fcall	___wmul
  2191  1690  1283               	bcf	3,5	;RP0=0, select bank0
  2192  1691  1303               	bcf	3,6	;RP1=0, select bank0
  2193  1692  0821               	movf	?___wmul+1,w
  2194  1693  1683               	bsf	3,5	;RP0=1, select bank1
  2195  1694  1303               	bcf	3,6	;RP1=0, select bank1
  2196  1695  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2197  1696  1283               	bcf	3,5	;RP0=0, select bank0
  2198  1697  1303               	bcf	3,6	;RP1=0, select bank0
  2199  1698  0820               	movf	?___wmul,w
  2200  1699  1683               	bsf	3,5	;RP0=1, select bank1
  2201  169A  1303               	bcf	3,6	;RP1=0, select bank1
  2202  169B  00C3               	movwf	sprintf@eexp^(0+128)
  2203  169C                     l4217:
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2206  169C  300A               	movlw	10
  2207  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2208  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2209  169F  00A6               	movwf	___awdiv@divisor
  2210  16A0  3000               	movlw	0
  2211  16A1  00A7               	movwf	___awdiv@divisor+1
  2212  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  2213  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  2214  16A4  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2215  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2216  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2217  16A7  00A9               	movwf	___awdiv@dividend+1
  2218  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2219  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2220  16AA  0843               	movf	sprintf@eexp^(0+128),w
  2221  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  2222  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  2223  16AD  00A8               	movwf	___awdiv@dividend
  2224  16AE  120A  158A  200F  160A  118A  	fcall	___awdiv
  2225  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  2226  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  2227  16B5  0827               	movf	?___awdiv+1,w
  2228  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  2229  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2230  16B8  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2231  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2232  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2233  16BB  0826               	movf	?___awdiv,w
  2234  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2235  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2236  16BE  00C3               	movwf	sprintf@eexp^(0+128)
  2237  16BF                     l4219:
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2240  16BF  1FC4               	btfss	(sprintf@eexp+1)^(0+128),7
  2241  16C0  2EC2               	goto	u7321
  2242  16C1  2EC3               	goto	u7320
  2243  16C2                     u7321:
  2244  16C2  2EC9               	goto	l4223
  2245  16C3                     u7320:
  2246  16C3                     l4221:
  2247                           
  2248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2249  16C3  30FF               	movlw	255
  2250  16C4  07C3               	addwf	sprintf@eexp^(0+128),f
  2251  16C5  1803               	skipnc
  2252  16C6  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2253  16C7  30FF               	movlw	255
  2254  16C8  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2255  16C9                     l4223:
  2256                           
  2257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2258  16C9  0343               	decf	sprintf@eexp^(0+128),w
  2259  16CA  3AFF               	xorlw	255
  2260  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  2261  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2262  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2263  16D2  084B               	movf	?_scale+3,w
  2264  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  2265  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  2266  16D5  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2267  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2268  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2269  16D8  084A               	movf	?_scale+2,w
  2270  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  2271  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  2272  16DB  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2273  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  2274  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  2275  16DE  0849               	movf	?_scale+1,w
  2276  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  2277  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  2278  16E1  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2279  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2280  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2281  16E4  0848               	movf	?_scale,w
  2282  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  2283  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  2284  16E7  00BF               	movwf	sprintf@tmpval^(0+128)
  2285  16E8                     l4225:
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2288  16E8  0848               	movf	(sprintf@fval+3)^(0+128),w
  2289  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  2290  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  2291  16EB  00B1               	movwf	___flmul@b+3
  2292  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  2293  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  2294  16EE  0847               	movf	(sprintf@fval+2)^(0+128),w
  2295  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2296  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2297  16F1  00B0               	movwf	___flmul@b+2
  2298  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  2299  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  2300  16F4  0846               	movf	(sprintf@fval+1)^(0+128),w
  2301  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  2302  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  2303  16F7  00AF               	movwf	___flmul@b+1
  2304  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  2305  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  2306  16FA  0845               	movf	sprintf@fval^(0+128),w
  2307  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  2308  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  2309  16FD  00AE               	movwf	___flmul@b
  2310  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  2311  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  2312  1700  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2313  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2314  1702  1303               	bcf	3,6	;RP1=0, select bank0
  2315  1703  00B5               	movwf	___flmul@a+3
  2316  1704  1683               	bsf	3,5	;RP0=1, select bank1
  2317  1705  1303               	bcf	3,6	;RP1=0, select bank1
  2318  1706  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2319  1707  1283               	bcf	3,5	;RP0=0, select bank0
  2320  1708  1303               	bcf	3,6	;RP1=0, select bank0
  2321  1709  00B4               	movwf	___flmul@a+2
  2322  170A  1683               	bsf	3,5	;RP0=1, select bank1
  2323  170B  1303               	bcf	3,6	;RP1=0, select bank1
  2324  170C  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2325  170D  1283               	bcf	3,5	;RP0=0, select bank0
  2326  170E  1303               	bcf	3,6	;RP1=0, select bank0
  2327  170F  00B3               	movwf	___flmul@a+1
  2328  1710  1683               	bsf	3,5	;RP0=1, select bank1
  2329  1711  1303               	bcf	3,6	;RP1=0, select bank1
  2330  1712  083F               	movf	sprintf@tmpval^(0+128),w
  2331  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2332  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2333  1715  00B2               	movwf	___flmul@a
  2334  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  2335  171B  1283               	bcf	3,5	;RP0=0, select bank0
  2336  171C  1303               	bcf	3,6	;RP1=0, select bank0
  2337  171D  0831               	movf	?___flmul+3,w
  2338  171E  1683               	bsf	3,5	;RP0=1, select bank1
  2339  171F  1303               	bcf	3,6	;RP1=0, select bank1
  2340  1720  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2341  1721  1283               	bcf	3,5	;RP0=0, select bank0
  2342  1722  1303               	bcf	3,6	;RP1=0, select bank0
  2343  1723  0830               	movf	?___flmul+2,w
  2344  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2345  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2346  1726  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2347  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2348  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2349  1729  082F               	movf	?___flmul+1,w
  2350  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2351  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2352  172C  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2353  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2354  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2355  172F  082E               	movf	?___flmul,w
  2356  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2357  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2358  1732  00BF               	movwf	sprintf@tmpval^(0+128)
  2359  1733                     l4227:
  2360                           
  2361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2362  1733  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2363  1734  1283               	bcf	3,5	;RP0=0, select bank0
  2364  1735  1303               	bcf	3,6	;RP1=0, select bank0
  2365  1736  00A3               	movwf	___flge@ff1+3
  2366  1737  1683               	bsf	3,5	;RP0=1, select bank1
  2367  1738  1303               	bcf	3,6	;RP1=0, select bank1
  2368  1739  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2369  173A  1283               	bcf	3,5	;RP0=0, select bank0
  2370  173B  1303               	bcf	3,6	;RP1=0, select bank0
  2371  173C  00A2               	movwf	___flge@ff1+2
  2372  173D  1683               	bsf	3,5	;RP0=1, select bank1
  2373  173E  1303               	bcf	3,6	;RP1=0, select bank1
  2374  173F  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2375  1740  1283               	bcf	3,5	;RP0=0, select bank0
  2376  1741  1303               	bcf	3,6	;RP1=0, select bank0
  2377  1742  00A1               	movwf	___flge@ff1+1
  2378  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2379  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2380  1745  083F               	movf	sprintf@tmpval^(0+128),w
  2381  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2382  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2383  1748  00A0               	movwf	___flge@ff1
  2384  1749  303F               	movlw	63
  2385  174A  00A7               	movwf	___flge@ff2+3
  2386  174B  3080               	movlw	128
  2387  174C  00A6               	movwf	___flge@ff2+2
  2388  174D  3000               	movlw	0
  2389  174E  00A5               	movwf	___flge@ff2+1
  2390  174F  3000               	movlw	0
  2391  1750  00A4               	movwf	___flge@ff2
  2392  1751  160A  118A  200D  160A  118A  	fcall	___flge
  2393  1756  1803               	btfsc	3,0
  2394  1757  2F59               	goto	u7331
  2395  1758  2F5A               	goto	u7330
  2396  1759                     u7331:
  2397  1759  2F63               	goto	l4231
  2398  175A                     u7330:
  2399  175A                     l4229:
  2400                           
  2401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2402  175A  30FF               	movlw	255
  2403  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2404  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2405  175D  07C3               	addwf	sprintf@eexp^(0+128),f
  2406  175E  1803               	skipnc
  2407  175F  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2408  1760  30FF               	movlw	255
  2409  1761  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2410  1762  2F94               	goto	l4235
  2411  1763                     l4231:
  2412  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2413  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2414  1765  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2415  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2416  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2417  1768  00A3               	movwf	___flge@ff1+3
  2418  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2419  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2420  176B  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2421  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2422  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2423  176E  00A2               	movwf	___flge@ff1+2
  2424  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2425  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2426  1771  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2427  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2428  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2429  1774  00A1               	movwf	___flge@ff1+1
  2430  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2431  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2432  1777  083F               	movf	sprintf@tmpval^(0+128),w
  2433  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2434  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2435  177A  00A0               	movwf	___flge@ff1
  2436  177B  3041               	movlw	65
  2437  177C  00A7               	movwf	___flge@ff2+3
  2438  177D  3020               	movlw	32
  2439  177E  00A6               	movwf	___flge@ff2+2
  2440  177F  3000               	movlw	0
  2441  1780  00A5               	movwf	___flge@ff2+1
  2442  1781  3000               	movlw	0
  2443  1782  00A4               	movwf	___flge@ff2
  2444  1783  160A  118A  200D  160A  118A  	fcall	___flge
  2445  1788  1C03               	btfss	3,0
  2446  1789  2F8B               	goto	u7341
  2447  178A  2F8C               	goto	u7340
  2448  178B                     u7341:
  2449  178B  2F94               	goto	l4235
  2450  178C                     u7340:
  2451  178C                     l4233:
  2452                           
  2453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2454  178C  3001               	movlw	1
  2455  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2456  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2457  178F  07C3               	addwf	sprintf@eexp^(0+128),f
  2458  1790  1803               	skipnc
  2459  1791  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2460  1792  3000               	movlw	0
  2461  1793  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2462  1794                     l4235:
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2465  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2466  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2467  1796  084B               	movf	(sprintf@prec+1)^(0+128),w
  2468  1797  3A80               	xorlw	128
  2469  1798  00FF               	movwf	btemp+1
  2470  1799  3080               	movlw	128
  2471  179A  027F               	subwf	btemp+1,w
  2472  179B  1D03               	skipz
  2473  179C  2F9F               	goto	u7355
  2474  179D  300D               	movlw	13
  2475  179E  024A               	subwf	sprintf@prec^(0+128),w
  2476  179F                     u7355:
  2477  179F  1803               	skipnc
  2478  17A0  2FA2               	goto	u7351
  2479  17A1  2FA3               	goto	u7350
  2480  17A2                     u7351:
  2481  17A2  2FEA               	goto	l4239
  2482  17A3                     u7350:
  2483  17A3                     l4237:
  2484                           
  2485                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2486  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2487  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2488  17A5  084A               	movf	sprintf@prec^(0+128),w
  2489  17A6  120A  118A  25D2  160A  118A  	fcall	_fround
  2490  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2491  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2492  17AD  084B               	movf	?_fround+3,w
  2493  17AE  00DF               	movwf	___fladd@b+3
  2494  17AF  084A               	movf	?_fround+2,w
  2495  17B0  00DE               	movwf	___fladd@b+2
  2496  17B1  0849               	movf	?_fround+1,w
  2497  17B2  00DD               	movwf	___fladd@b+1
  2498  17B3  0848               	movf	?_fround,w
  2499  17B4  00DC               	movwf	___fladd@b
  2500  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2501  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2502  17B7  0848               	movf	(sprintf@fval+3)^(0+128),w
  2503  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2504  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2505  17BA  00E3               	movwf	___fladd@a+3
  2506  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2507  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2508  17BD  0847               	movf	(sprintf@fval+2)^(0+128),w
  2509  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2510  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2511  17C0  00E2               	movwf	___fladd@a+2
  2512  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2513  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2514  17C3  0846               	movf	(sprintf@fval+1)^(0+128),w
  2515  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2516  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2517  17C6  00E1               	movwf	___fladd@a+1
  2518  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2519  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2520  17C9  0845               	movf	sprintf@fval^(0+128),w
  2521  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2522  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2523  17CC  00E0               	movwf	___fladd@a
  2524  17CD  160A  118A  222C  160A  118A  	fcall	___fladd
  2525  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2526  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2527  17D4  085F               	movf	?___fladd+3,w
  2528  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2529  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2530  17D7  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2531  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2532  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2533  17DA  085E               	movf	?___fladd+2,w
  2534  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2535  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2536  17DD  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2537  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2538  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2539  17E0  085D               	movf	?___fladd+1,w
  2540  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2541  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2542  17E3  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2543  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2544  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2545  17E6  085C               	movf	?___fladd,w
  2546  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2547  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2548  17E9  00C5               	movwf	sprintf@fval^(0+128)
  2549  17EA                     l4239:
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2552  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2553  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2554  17EC  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2555  17ED  3A80               	xorlw	128
  2556  17EE  00FF               	movwf	btemp+1
  2557  17EF  3080               	movlw	128
  2558  17F0  027F               	subwf	btemp+1,w
  2559  17F1  1D03               	skipz
  2560  17F2  2FF5               	goto	u7365
  2561  17F3  300A               	movlw	10
  2562  17F4  0243               	subwf	sprintf@eexp^(0+128),w
  2563  17F5                     u7365:
  2564  17F5  1803               	skipnc
  2565  17F6  2FFA               	goto	u7361
  2566  17F7  120A  118A  281E   	goto	u7360
  2567  17FA                     u7361:
  2568  17FA  120A  118A  287D   	goto	l4247
  2569  17FD                     L3:
  2570  17FD                     L2:
  2571  17FD  120A  118A  2DCD   	ljmp	l4397
  2572                           
  2573                           	psect	text2
  2574  0C9D                     __ptext2:	
  2575 ;; *************** function _scale *****************
  2576 ;; Defined at:
  2577 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;  scl             1    wreg     char 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  scl             1   58[BANK0 ] char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  4   40[BANK0 ] char 
  2584 ;; Registers used:
  2585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2591 ;;      Params:         0       4       0       0       0
  2592 ;;      Locals:         0       5       0       0       0
  2593 ;;      Temps:          0      10       0       0       0
  2594 ;;      Totals:         0      19       0       0       0
  2595 ;;Total ram usage:       19 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    5
  2598 ;; This function calls:
  2599 ;;		___awdiv
  2600 ;;		___awmod
  2601 ;;		___flmul
  2602 ;; This function is called by:
  2603 ;;		_sprintf
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           
  2608                           ;psect for function _scale
  2609  0C9D                     _scale:
  2610                           
  2611                           ;incstack = 0
  2612                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2613                           ;scale@scl stored from wreg
  2614  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2615  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2616  0C9F  00DA               	movwf	scale@scl
  2617  0CA0                     l3917:
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2620  0CA0  1FDA               	btfss	scale@scl,7
  2621  0CA1  2CA3               	goto	u6591
  2622  0CA2  2CA4               	goto	u6590
  2623  0CA3                     u6591:
  2624  0CA3  2E53               	goto	l3939
  2625  0CA4                     u6590:
  2626  0CA4                     l3919:
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2629  0CA4  09DA               	comf	scale@scl,f
  2630  0CA5  0ADA               	incf	scale@scl,f
  2631  0CA6                     l3921:
  2632                           
  2633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2634  0CA6  085A               	movf	scale@scl,w
  2635  0CA7  3A80               	xorlw	128
  2636  0CA8  3E12               	addlw	-238
  2637  0CA9  1C03               	skipc
  2638  0CAA  2CAC               	goto	u6601
  2639  0CAB  2CAD               	goto	u6600
  2640  0CAC                     u6601:
  2641  0CAC  2D97               	goto	l3929
  2642  0CAD                     u6600:
  2643  0CAD                     l3923:
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2646  0CAD  300A               	movlw	10
  2647  0CAE  00A6               	movwf	___awdiv@divisor
  2648  0CAF  3000               	movlw	0
  2649  0CB0  00A7               	movwf	___awdiv@divisor+1
  2650  0CB1  085A               	movf	scale@scl,w
  2651  0CB2  00A2               	movwf	___awmod@dividend
  2652  0CB3  01A3               	clrf	___awmod@dividend+1
  2653  0CB4  1BA2               	btfsc	___awmod@dividend,7
  2654  0CB5  03A3               	decf	___awmod@dividend+1,f
  2655  0CB6  3064               	movlw	100
  2656  0CB7  00A0               	movwf	___awmod@divisor
  2657  0CB8  3000               	movlw	0
  2658  0CB9  00A1               	movwf	___awmod@divisor+1
  2659  0CBA  160A  158A  2605  120A  158A  	fcall	___awmod
  2660  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  2662  0CC1  0821               	movf	?___awmod+1,w
  2663  0CC2  00A9               	movwf	___awdiv@dividend+1
  2664  0CC3  0820               	movf	?___awmod,w
  2665  0CC4  00A8               	movwf	___awdiv@dividend
  2666  0CC5  120A  158A  200F  120A  158A  	fcall	___awdiv
  2667  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2668  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2669  0CCC  0826               	movf	?___awdiv,w
  2670  0CCD  00CC               	movwf	??_scale
  2671  0CCE  3001               	movlw	1
  2672  0CCF                     u6615:
  2673  0CCF  1003               	clrc
  2674  0CD0  0DCC               	rlf	??_scale,f
  2675  0CD1  3EFF               	addlw	-1
  2676  0CD2  1D03               	skipz
  2677  0CD3  2CCF               	goto	u6615
  2678  0CD4  1003               	clrc
  2679  0CD5  0D4C               	rlf	??_scale,w
  2680  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2681  0CD7  0084               	movwf	4
  2682  0CD8  160A  158A  200A  120A  158A  	fcall	stringdir
  2683  0CDD  00CD               	movwf	??_scale+1
  2684  0CDE  160A  158A  200A  120A  158A  	fcall	stringdir
  2685  0CE3  00CE               	movwf	??_scale+2
  2686  0CE4  160A  158A  200A  120A  158A  	fcall	stringdir
  2687  0CE9  00CF               	movwf	??_scale+3
  2688  0CEA  160A  158A  200A  120A  158A  	fcall	stringdir
  2689  0CEF  00D0               	movwf	??_scale+4
  2690  0CF0  0850               	movf	??_scale+4,w
  2691  0CF1  00B1               	movwf	___flmul@b+3
  2692  0CF2  084F               	movf	??_scale+3,w
  2693  0CF3  00B0               	movwf	___flmul@b+2
  2694  0CF4  084E               	movf	??_scale+2,w
  2695  0CF5  00AF               	movwf	___flmul@b+1
  2696  0CF6  084D               	movf	??_scale+1,w
  2697  0CF7  00AE               	movwf	___flmul@b
  2698  0CF8  3064               	movlw	100
  2699  0CF9  00A6               	movwf	___awdiv@divisor
  2700  0CFA  3000               	movlw	0
  2701  0CFB  00A7               	movwf	___awdiv@divisor+1
  2702  0CFC  085A               	movf	scale@scl,w
  2703  0CFD  00A8               	movwf	___awdiv@dividend
  2704  0CFE  01A9               	clrf	___awdiv@dividend+1
  2705  0CFF  1BA8               	btfsc	___awdiv@dividend,7
  2706  0D00  03A9               	decf	___awdiv@dividend+1,f
  2707  0D01  120A  158A  200F  120A  158A  	fcall	___awdiv
  2708  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0D08  0826               	movf	?___awdiv,w
  2711  0D09  00D1               	movwf	??_scale+5
  2712  0D0A  3001               	movlw	1
  2713  0D0B                     u6625:
  2714  0D0B  1003               	clrc
  2715  0D0C  0DD1               	rlf	??_scale+5,f
  2716  0D0D  3EFF               	addlw	-1
  2717  0D0E  1D03               	skipz
  2718  0D0F  2D0B               	goto	u6625
  2719  0D10  1003               	clrc
  2720  0D11  0D51               	rlf	??_scale+5,w
  2721  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2722  0D13  0084               	movwf	4
  2723  0D14  160A  158A  200A  120A  158A  	fcall	stringdir
  2724  0D19  00D2               	movwf	??_scale+6
  2725  0D1A  160A  158A  200A  120A  158A  	fcall	stringdir
  2726  0D1F  00D3               	movwf	??_scale+7
  2727  0D20  160A  158A  200A  120A  158A  	fcall	stringdir
  2728  0D25  00D4               	movwf	??_scale+8
  2729  0D26  160A  158A  200A  120A  158A  	fcall	stringdir
  2730  0D2B  00D5               	movwf	??_scale+9
  2731  0D2C  0855               	movf	??_scale+9,w
  2732  0D2D  00B5               	movwf	___flmul@a+3
  2733  0D2E  0854               	movf	??_scale+8,w
  2734  0D2F  00B4               	movwf	___flmul@a+2
  2735  0D30  0853               	movf	??_scale+7,w
  2736  0D31  00B3               	movwf	___flmul@a+1
  2737  0D32  0852               	movf	??_scale+6,w
  2738  0D33  00B2               	movwf	___flmul@a
  2739  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2740  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2742  0D3B  0831               	movf	?___flmul+3,w
  2743  0D3C  00D9               	movwf	_scale$1180+3
  2744  0D3D  0830               	movf	?___flmul+2,w
  2745  0D3E  00D8               	movwf	_scale$1180+2
  2746  0D3F  082F               	movf	?___flmul+1,w
  2747  0D40  00D7               	movwf	_scale$1180+1
  2748  0D41  082E               	movf	?___flmul,w
  2749  0D42  00D6               	movwf	_scale$1180
  2750                           
  2751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2752  0D43  300A               	movlw	10
  2753  0D44  00A0               	movwf	___awmod@divisor
  2754  0D45  3000               	movlw	0
  2755  0D46  00A1               	movwf	___awmod@divisor+1
  2756  0D47  085A               	movf	scale@scl,w
  2757  0D48  00A2               	movwf	___awmod@dividend
  2758  0D49  01A3               	clrf	___awmod@dividend+1
  2759  0D4A  1BA2               	btfsc	___awmod@dividend,7
  2760  0D4B  03A3               	decf	___awmod@dividend+1,f
  2761  0D4C  160A  158A  2605  120A  158A  	fcall	___awmod
  2762  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  2763  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  2764  0D53  0820               	movf	?___awmod,w
  2765  0D54  00CC               	movwf	??_scale
  2766  0D55  3001               	movlw	1
  2767  0D56                     u6635:
  2768  0D56  1003               	clrc
  2769  0D57  0DCC               	rlf	??_scale,f
  2770  0D58  3EFF               	addlw	-1
  2771  0D59  1D03               	skipz
  2772  0D5A  2D56               	goto	u6635
  2773  0D5B  1003               	clrc
  2774  0D5C  0D4C               	rlf	??_scale,w
  2775  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2776  0D5E  0084               	movwf	4
  2777  0D5F  160A  158A  200A  120A  158A  	fcall	stringdir
  2778  0D64  00CD               	movwf	??_scale+1
  2779  0D65  160A  158A  200A  120A  158A  	fcall	stringdir
  2780  0D6A  00CE               	movwf	??_scale+2
  2781  0D6B  160A  158A  200A  120A  158A  	fcall	stringdir
  2782  0D70  00CF               	movwf	??_scale+3
  2783  0D71  160A  158A  200A  120A  158A  	fcall	stringdir
  2784  0D76  00D0               	movwf	??_scale+4
  2785  0D77  0850               	movf	??_scale+4,w
  2786  0D78  00B1               	movwf	___flmul@b+3
  2787  0D79  084F               	movf	??_scale+3,w
  2788  0D7A  00B0               	movwf	___flmul@b+2
  2789  0D7B  084E               	movf	??_scale+2,w
  2790  0D7C  00AF               	movwf	___flmul@b+1
  2791  0D7D  084D               	movf	??_scale+1,w
  2792  0D7E  00AE               	movwf	___flmul@b
  2793  0D7F  0859               	movf	_scale$1180+3,w
  2794  0D80  00B5               	movwf	___flmul@a+3
  2795  0D81  0858               	movf	_scale$1180+2,w
  2796  0D82  00B4               	movwf	___flmul@a+2
  2797  0D83  0857               	movf	_scale$1180+1,w
  2798  0D84  00B3               	movwf	___flmul@a+1
  2799  0D85  0856               	movf	_scale$1180,w
  2800  0D86  00B2               	movwf	___flmul@a
  2801  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2802  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2803  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2804  0D8E  0831               	movf	?___flmul+3,w
  2805  0D8F  00CB               	movwf	?_scale+3
  2806  0D90  0830               	movf	?___flmul+2,w
  2807  0D91  00CA               	movwf	?_scale+2
  2808  0D92  082F               	movf	?___flmul+1,w
  2809  0D93  00C9               	movwf	?_scale+1
  2810  0D94  082E               	movf	?___flmul,w
  2811  0D95  00C8               	movwf	?_scale
  2812  0D96  2FFF               	goto	l311
  2813  0D97                     l3929:
  2814  0D97  085A               	movf	scale@scl,w
  2815  0D98  3A80               	xorlw	128
  2816  0D99  3E75               	addlw	-139
  2817  0D9A  1C03               	skipc
  2818  0D9B  2D9D               	goto	u6641
  2819  0D9C  2D9E               	goto	u6640
  2820  0D9D                     u6641:
  2821  0D9D  2E26               	goto	l3935
  2822  0D9E                     u6640:
  2823  0D9E                     l3931:
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2826  0D9E  300A               	movlw	10
  2827  0D9F  00A0               	movwf	___awmod@divisor
  2828  0DA0  3000               	movlw	0
  2829  0DA1  00A1               	movwf	___awmod@divisor+1
  2830  0DA2  085A               	movf	scale@scl,w
  2831  0DA3  00A2               	movwf	___awmod@dividend
  2832  0DA4  01A3               	clrf	___awmod@dividend+1
  2833  0DA5  1BA2               	btfsc	___awmod@dividend,7
  2834  0DA6  03A3               	decf	___awmod@dividend+1,f
  2835  0DA7  160A  158A  2605  120A  158A  	fcall	___awmod
  2836  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  2837  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  2838  0DAE  0820               	movf	?___awmod,w
  2839  0DAF  00CC               	movwf	??_scale
  2840  0DB0  3001               	movlw	1
  2841  0DB1                     u6655:
  2842  0DB1  1003               	clrc
  2843  0DB2  0DCC               	rlf	??_scale,f
  2844  0DB3  3EFF               	addlw	-1
  2845  0DB4  1D03               	skipz
  2846  0DB5  2DB1               	goto	u6655
  2847  0DB6  1003               	clrc
  2848  0DB7  0D4C               	rlf	??_scale,w
  2849  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2850  0DB9  0084               	movwf	4
  2851  0DBA  160A  158A  200A  120A  158A  	fcall	stringdir
  2852  0DBF  00CD               	movwf	??_scale+1
  2853  0DC0  160A  158A  200A  120A  158A  	fcall	stringdir
  2854  0DC5  00CE               	movwf	??_scale+2
  2855  0DC6  160A  158A  200A  120A  158A  	fcall	stringdir
  2856  0DCB  00CF               	movwf	??_scale+3
  2857  0DCC  160A  158A  200A  120A  158A  	fcall	stringdir
  2858  0DD1  00D0               	movwf	??_scale+4
  2859  0DD2  0850               	movf	??_scale+4,w
  2860  0DD3  00B1               	movwf	___flmul@b+3
  2861  0DD4  084F               	movf	??_scale+3,w
  2862  0DD5  00B0               	movwf	___flmul@b+2
  2863  0DD6  084E               	movf	??_scale+2,w
  2864  0DD7  00AF               	movwf	___flmul@b+1
  2865  0DD8  084D               	movf	??_scale+1,w
  2866  0DD9  00AE               	movwf	___flmul@b
  2867  0DDA  300A               	movlw	10
  2868  0DDB  00A6               	movwf	___awdiv@divisor
  2869  0DDC  3000               	movlw	0
  2870  0DDD  00A7               	movwf	___awdiv@divisor+1
  2871  0DDE  085A               	movf	scale@scl,w
  2872  0DDF  00A8               	movwf	___awdiv@dividend
  2873  0DE0  01A9               	clrf	___awdiv@dividend+1
  2874  0DE1  1BA8               	btfsc	___awdiv@dividend,7
  2875  0DE2  03A9               	decf	___awdiv@dividend+1,f
  2876  0DE3  120A  158A  200F  120A  158A  	fcall	___awdiv
  2877  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0DEA  0826               	movf	?___awdiv,w
  2880  0DEB  00D1               	movwf	??_scale+5
  2881  0DEC  3001               	movlw	1
  2882  0DED                     u6665:
  2883  0DED  1003               	clrc
  2884  0DEE  0DD1               	rlf	??_scale+5,f
  2885  0DEF  3EFF               	addlw	-1
  2886  0DF0  1D03               	skipz
  2887  0DF1  2DED               	goto	u6665
  2888  0DF2  1003               	clrc
  2889  0DF3  0D51               	rlf	??_scale+5,w
  2890  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2891  0DF5  0084               	movwf	4
  2892  0DF6  160A  158A  200A  120A  158A  	fcall	stringdir
  2893  0DFB  00D2               	movwf	??_scale+6
  2894  0DFC  160A  158A  200A  120A  158A  	fcall	stringdir
  2895  0E01  00D3               	movwf	??_scale+7
  2896  0E02  160A  158A  200A  120A  158A  	fcall	stringdir
  2897  0E07  00D4               	movwf	??_scale+8
  2898  0E08  160A  158A  200A  120A  158A  	fcall	stringdir
  2899  0E0D  00D5               	movwf	??_scale+9
  2900  0E0E  0855               	movf	??_scale+9,w
  2901  0E0F  00B5               	movwf	___flmul@a+3
  2902  0E10  0854               	movf	??_scale+8,w
  2903  0E11  00B4               	movwf	___flmul@a+2
  2904  0E12  0853               	movf	??_scale+7,w
  2905  0E13  00B3               	movwf	___flmul@a+1
  2906  0E14  0852               	movf	??_scale+6,w
  2907  0E15  00B2               	movwf	___flmul@a
  2908  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2909  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0E1D  0831               	movf	?___flmul+3,w
  2912  0E1E  00CB               	movwf	?_scale+3
  2913  0E1F  0830               	movf	?___flmul+2,w
  2914  0E20  00CA               	movwf	?_scale+2
  2915  0E21  082F               	movf	?___flmul+1,w
  2916  0E22  00C9               	movwf	?_scale+1
  2917  0E23  082E               	movf	?___flmul,w
  2918  0E24  00C8               	movwf	?_scale
  2919  0E25  2FFF               	goto	l311
  2920  0E26                     l3935:
  2921                           
  2922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2923  0E26  085A               	movf	scale@scl,w
  2924  0E27  00CC               	movwf	??_scale
  2925  0E28  3001               	movlw	1
  2926  0E29                     u6675:
  2927  0E29  1003               	clrc
  2928  0E2A  0DCC               	rlf	??_scale,f
  2929  0E2B  3EFF               	addlw	-1
  2930  0E2C  1D03               	skipz
  2931  0E2D  2E29               	goto	u6675
  2932  0E2E  1003               	clrc
  2933  0E2F  0D4C               	rlf	??_scale,w
  2934  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2935  0E31  0084               	movwf	4
  2936  0E32  160A  158A  200A  120A  158A  	fcall	stringdir
  2937  0E37  00CD               	movwf	??_scale+1
  2938  0E38  160A  158A  200A  120A  158A  	fcall	stringdir
  2939  0E3D  00CE               	movwf	??_scale+2
  2940  0E3E  160A  158A  200A  120A  158A  	fcall	stringdir
  2941  0E43  00CF               	movwf	??_scale+3
  2942  0E44  160A  158A  200A  120A  158A  	fcall	stringdir
  2943  0E49  00D0               	movwf	??_scale+4
  2944  0E4A  0850               	movf	??_scale+4,w
  2945  0E4B  00CB               	movwf	?_scale+3
  2946  0E4C  084F               	movf	??_scale+3,w
  2947  0E4D  00CA               	movwf	?_scale+2
  2948  0E4E  084E               	movf	??_scale+2,w
  2949  0E4F  00C9               	movwf	?_scale+1
  2950  0E50  084D               	movf	??_scale+1,w
  2951  0E51  00C8               	movwf	?_scale
  2952  0E52  2FFF               	goto	l311
  2953  0E53                     l3939:
  2954                           
  2955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2956  0E53  085A               	movf	scale@scl,w
  2957  0E54  3A80               	xorlw	128
  2958  0E55  3E12               	addlw	-238
  2959  0E56  1C03               	skipc
  2960  0E57  2E59               	goto	u6681
  2961  0E58  2E5A               	goto	u6680
  2962  0E59                     u6681:
  2963  0E59  2F44               	goto	l3947
  2964  0E5A                     u6680:
  2965  0E5A                     l3941:
  2966                           
  2967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2968  0E5A  300A               	movlw	10
  2969  0E5B  00A6               	movwf	___awdiv@divisor
  2970  0E5C  3000               	movlw	0
  2971  0E5D  00A7               	movwf	___awdiv@divisor+1
  2972  0E5E  085A               	movf	scale@scl,w
  2973  0E5F  00A2               	movwf	___awmod@dividend
  2974  0E60  01A3               	clrf	___awmod@dividend+1
  2975  0E61  1BA2               	btfsc	___awmod@dividend,7
  2976  0E62  03A3               	decf	___awmod@dividend+1,f
  2977  0E63  3064               	movlw	100
  2978  0E64  00A0               	movwf	___awmod@divisor
  2979  0E65  3000               	movlw	0
  2980  0E66  00A1               	movwf	___awmod@divisor+1
  2981  0E67  160A  158A  2605  120A  158A  	fcall	___awmod
  2982  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  2983  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  2984  0E6E  0821               	movf	?___awmod+1,w
  2985  0E6F  00A9               	movwf	___awdiv@dividend+1
  2986  0E70  0820               	movf	?___awmod,w
  2987  0E71  00A8               	movwf	___awdiv@dividend
  2988  0E72  120A  158A  200F  120A  158A  	fcall	___awdiv
  2989  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2990  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2991  0E79  0826               	movf	?___awdiv,w
  2992  0E7A  00CC               	movwf	??_scale
  2993  0E7B  3001               	movlw	1
  2994  0E7C                     u6695:
  2995  0E7C  1003               	clrc
  2996  0E7D  0DCC               	rlf	??_scale,f
  2997  0E7E  3EFF               	addlw	-1
  2998  0E7F  1D03               	skipz
  2999  0E80  2E7C               	goto	u6695
  3000  0E81  1003               	clrc
  3001  0E82  0D4C               	rlf	??_scale,w
  3002  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3003  0E84  0084               	movwf	4
  3004  0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  3005  0E8A  00CD               	movwf	??_scale+1
  3006  0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  3007  0E90  00CE               	movwf	??_scale+2
  3008  0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  3009  0E96  00CF               	movwf	??_scale+3
  3010  0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  3011  0E9C  00D0               	movwf	??_scale+4
  3012  0E9D  0850               	movf	??_scale+4,w
  3013  0E9E  00B1               	movwf	___flmul@b+3
  3014  0E9F  084F               	movf	??_scale+3,w
  3015  0EA0  00B0               	movwf	___flmul@b+2
  3016  0EA1  084E               	movf	??_scale+2,w
  3017  0EA2  00AF               	movwf	___flmul@b+1
  3018  0EA3  084D               	movf	??_scale+1,w
  3019  0EA4  00AE               	movwf	___flmul@b
  3020  0EA5  3064               	movlw	100
  3021  0EA6  00A6               	movwf	___awdiv@divisor
  3022  0EA7  3000               	movlw	0
  3023  0EA8  00A7               	movwf	___awdiv@divisor+1
  3024  0EA9  085A               	movf	scale@scl,w
  3025  0EAA  00A8               	movwf	___awdiv@dividend
  3026  0EAB  01A9               	clrf	___awdiv@dividend+1
  3027  0EAC  1BA8               	btfsc	___awdiv@dividend,7
  3028  0EAD  03A9               	decf	___awdiv@dividend+1,f
  3029  0EAE  120A  158A  200F  120A  158A  	fcall	___awdiv
  3030  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3031  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3032  0EB5  0826               	movf	?___awdiv,w
  3033  0EB6  00D1               	movwf	??_scale+5
  3034  0EB7  3001               	movlw	1
  3035  0EB8                     u6705:
  3036  0EB8  1003               	clrc
  3037  0EB9  0DD1               	rlf	??_scale+5,f
  3038  0EBA  3EFF               	addlw	-1
  3039  0EBB  1D03               	skipz
  3040  0EBC  2EB8               	goto	u6705
  3041  0EBD  1003               	clrc
  3042  0EBE  0D51               	rlf	??_scale+5,w
  3043  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3044  0EC0  0084               	movwf	4
  3045  0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  3046  0EC6  00D2               	movwf	??_scale+6
  3047  0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  3048  0ECC  00D3               	movwf	??_scale+7
  3049  0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  3050  0ED2  00D4               	movwf	??_scale+8
  3051  0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  3052  0ED8  00D5               	movwf	??_scale+9
  3053  0ED9  0855               	movf	??_scale+9,w
  3054  0EDA  00B5               	movwf	___flmul@a+3
  3055  0EDB  0854               	movf	??_scale+8,w
  3056  0EDC  00B4               	movwf	___flmul@a+2
  3057  0EDD  0853               	movf	??_scale+7,w
  3058  0EDE  00B3               	movwf	___flmul@a+1
  3059  0EDF  0852               	movf	??_scale+6,w
  3060  0EE0  00B2               	movwf	___flmul@a
  3061  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3062  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3064  0EE8  0831               	movf	?___flmul+3,w
  3065  0EE9  00D9               	movwf	_scale$1180+3
  3066  0EEA  0830               	movf	?___flmul+2,w
  3067  0EEB  00D8               	movwf	_scale$1180+2
  3068  0EEC  082F               	movf	?___flmul+1,w
  3069  0EED  00D7               	movwf	_scale$1180+1
  3070  0EEE  082E               	movf	?___flmul,w
  3071  0EEF  00D6               	movwf	_scale$1180
  3072                           
  3073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3074  0EF0  300A               	movlw	10
  3075  0EF1  00A0               	movwf	___awmod@divisor
  3076  0EF2  3000               	movlw	0
  3077  0EF3  00A1               	movwf	___awmod@divisor+1
  3078  0EF4  085A               	movf	scale@scl,w
  3079  0EF5  00A2               	movwf	___awmod@dividend
  3080  0EF6  01A3               	clrf	___awmod@dividend+1
  3081  0EF7  1BA2               	btfsc	___awmod@dividend,7
  3082  0EF8  03A3               	decf	___awmod@dividend+1,f
  3083  0EF9  160A  158A  2605  120A  158A  	fcall	___awmod
  3084  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  3085  0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  3086  0F00  0820               	movf	?___awmod,w
  3087  0F01  00CC               	movwf	??_scale
  3088  0F02  3001               	movlw	1
  3089  0F03                     u6715:
  3090  0F03  1003               	clrc
  3091  0F04  0DCC               	rlf	??_scale,f
  3092  0F05  3EFF               	addlw	-1
  3093  0F06  1D03               	skipz
  3094  0F07  2F03               	goto	u6715
  3095  0F08  1003               	clrc
  3096  0F09  0D4C               	rlf	??_scale,w
  3097  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3098  0F0B  0084               	movwf	4
  3099  0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  3100  0F11  00CD               	movwf	??_scale+1
  3101  0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  3102  0F17  00CE               	movwf	??_scale+2
  3103  0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  3104  0F1D  00CF               	movwf	??_scale+3
  3105  0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  3106  0F23  00D0               	movwf	??_scale+4
  3107  0F24  0850               	movf	??_scale+4,w
  3108  0F25  00B1               	movwf	___flmul@b+3
  3109  0F26  084F               	movf	??_scale+3,w
  3110  0F27  00B0               	movwf	___flmul@b+2
  3111  0F28  084E               	movf	??_scale+2,w
  3112  0F29  00AF               	movwf	___flmul@b+1
  3113  0F2A  084D               	movf	??_scale+1,w
  3114  0F2B  00AE               	movwf	___flmul@b
  3115  0F2C  0859               	movf	_scale$1180+3,w
  3116  0F2D  00B5               	movwf	___flmul@a+3
  3117  0F2E  0858               	movf	_scale$1180+2,w
  3118  0F2F  00B4               	movwf	___flmul@a+2
  3119  0F30  0857               	movf	_scale$1180+1,w
  3120  0F31  00B3               	movwf	___flmul@a+1
  3121  0F32  0856               	movf	_scale$1180,w
  3122  0F33  00B2               	movwf	___flmul@a
  3123  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3124  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3125  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3126  0F3B  0831               	movf	?___flmul+3,w
  3127  0F3C  00CB               	movwf	?_scale+3
  3128  0F3D  0830               	movf	?___flmul+2,w
  3129  0F3E  00CA               	movwf	?_scale+2
  3130  0F3F  082F               	movf	?___flmul+1,w
  3131  0F40  00C9               	movwf	?_scale+1
  3132  0F41  082E               	movf	?___flmul,w
  3133  0F42  00C8               	movwf	?_scale
  3134  0F43  2FFF               	goto	l311
  3135  0F44                     l3947:
  3136  0F44  085A               	movf	scale@scl,w
  3137  0F45  3A80               	xorlw	128
  3138  0F46  3E75               	addlw	-139
  3139  0F47  1C03               	skipc
  3140  0F48  2F4A               	goto	u6721
  3141  0F49  2F4B               	goto	u6720
  3142  0F4A                     u6721:
  3143  0F4A  2FD3               	goto	l3953
  3144  0F4B                     u6720:
  3145  0F4B                     l3949:
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3148  0F4B  300A               	movlw	10
  3149  0F4C  00A0               	movwf	___awmod@divisor
  3150  0F4D  3000               	movlw	0
  3151  0F4E  00A1               	movwf	___awmod@divisor+1
  3152  0F4F  085A               	movf	scale@scl,w
  3153  0F50  00A2               	movwf	___awmod@dividend
  3154  0F51  01A3               	clrf	___awmod@dividend+1
  3155  0F52  1BA2               	btfsc	___awmod@dividend,7
  3156  0F53  03A3               	decf	___awmod@dividend+1,f
  3157  0F54  160A  158A  2605  120A  158A  	fcall	___awmod
  3158  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  3159  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  3160  0F5B  0820               	movf	?___awmod,w
  3161  0F5C  00CC               	movwf	??_scale
  3162  0F5D  3001               	movlw	1
  3163  0F5E                     u6735:
  3164  0F5E  1003               	clrc
  3165  0F5F  0DCC               	rlf	??_scale,f
  3166  0F60  3EFF               	addlw	-1
  3167  0F61  1D03               	skipz
  3168  0F62  2F5E               	goto	u6735
  3169  0F63  1003               	clrc
  3170  0F64  0D4C               	rlf	??_scale,w
  3171  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3172  0F66  0084               	movwf	4
  3173  0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  3174  0F6C  00CD               	movwf	??_scale+1
  3175  0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  3176  0F72  00CE               	movwf	??_scale+2
  3177  0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  3178  0F78  00CF               	movwf	??_scale+3
  3179  0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  3180  0F7E  00D0               	movwf	??_scale+4
  3181  0F7F  0850               	movf	??_scale+4,w
  3182  0F80  00B1               	movwf	___flmul@b+3
  3183  0F81  084F               	movf	??_scale+3,w
  3184  0F82  00B0               	movwf	___flmul@b+2
  3185  0F83  084E               	movf	??_scale+2,w
  3186  0F84  00AF               	movwf	___flmul@b+1
  3187  0F85  084D               	movf	??_scale+1,w
  3188  0F86  00AE               	movwf	___flmul@b
  3189  0F87  300A               	movlw	10
  3190  0F88  00A6               	movwf	___awdiv@divisor
  3191  0F89  3000               	movlw	0
  3192  0F8A  00A7               	movwf	___awdiv@divisor+1
  3193  0F8B  085A               	movf	scale@scl,w
  3194  0F8C  00A8               	movwf	___awdiv@dividend
  3195  0F8D  01A9               	clrf	___awdiv@dividend+1
  3196  0F8E  1BA8               	btfsc	___awdiv@dividend,7
  3197  0F8F  03A9               	decf	___awdiv@dividend+1,f
  3198  0F90  120A  158A  200F  120A  158A  	fcall	___awdiv
  3199  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3200  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3201  0F97  0826               	movf	?___awdiv,w
  3202  0F98  00D1               	movwf	??_scale+5
  3203  0F99  3001               	movlw	1
  3204  0F9A                     u6745:
  3205  0F9A  1003               	clrc
  3206  0F9B  0DD1               	rlf	??_scale+5,f
  3207  0F9C  3EFF               	addlw	-1
  3208  0F9D  1D03               	skipz
  3209  0F9E  2F9A               	goto	u6745
  3210  0F9F  1003               	clrc
  3211  0FA0  0D51               	rlf	??_scale+5,w
  3212  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3213  0FA2  0084               	movwf	4
  3214  0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  3215  0FA8  00D2               	movwf	??_scale+6
  3216  0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  3217  0FAE  00D3               	movwf	??_scale+7
  3218  0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  3219  0FB4  00D4               	movwf	??_scale+8
  3220  0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  3221  0FBA  00D5               	movwf	??_scale+9
  3222  0FBB  0855               	movf	??_scale+9,w
  3223  0FBC  00B5               	movwf	___flmul@a+3
  3224  0FBD  0854               	movf	??_scale+8,w
  3225  0FBE  00B4               	movwf	___flmul@a+2
  3226  0FBF  0853               	movf	??_scale+7,w
  3227  0FC0  00B3               	movwf	___flmul@a+1
  3228  0FC1  0852               	movf	??_scale+6,w
  3229  0FC2  00B2               	movwf	___flmul@a
  3230  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3231  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3232  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3233  0FCA  0831               	movf	?___flmul+3,w
  3234  0FCB  00CB               	movwf	?_scale+3
  3235  0FCC  0830               	movf	?___flmul+2,w
  3236  0FCD  00CA               	movwf	?_scale+2
  3237  0FCE  082F               	movf	?___flmul+1,w
  3238  0FCF  00C9               	movwf	?_scale+1
  3239  0FD0  082E               	movf	?___flmul,w
  3240  0FD1  00C8               	movwf	?_scale
  3241  0FD2  2FFF               	goto	l311
  3242  0FD3                     l3953:
  3243                           
  3244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3245  0FD3  085A               	movf	scale@scl,w
  3246  0FD4  00CC               	movwf	??_scale
  3247  0FD5  3001               	movlw	1
  3248  0FD6                     u6755:
  3249  0FD6  1003               	clrc
  3250  0FD7  0DCC               	rlf	??_scale,f
  3251  0FD8  3EFF               	addlw	-1
  3252  0FD9  1D03               	skipz
  3253  0FDA  2FD6               	goto	u6755
  3254  0FDB  1003               	clrc
  3255  0FDC  0D4C               	rlf	??_scale,w
  3256  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3257  0FDE  0084               	movwf	4
  3258  0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  3259  0FE4  00CD               	movwf	??_scale+1
  3260  0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  3261  0FEA  00CE               	movwf	??_scale+2
  3262  0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  3263  0FF0  00CF               	movwf	??_scale+3
  3264  0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  3265  0FF6  00D0               	movwf	??_scale+4
  3266  0FF7  0850               	movf	??_scale+4,w
  3267  0FF8  00CB               	movwf	?_scale+3
  3268  0FF9  084F               	movf	??_scale+3,w
  3269  0FFA  00CA               	movwf	?_scale+2
  3270  0FFB  084E               	movf	??_scale+2,w
  3271  0FFC  00C9               	movwf	?_scale+1
  3272  0FFD  084D               	movf	??_scale+1,w
  3273  0FFE  00C8               	movwf	?_scale
  3274  0FFF                     l311:
  3275  0FFF  0008               	return
  3276  1000                     __end_of_scale:
  3277                           
  3278                           	psect	text3
  3279  1E05                     __ptext3:	
  3280 ;; *************** function ___awmod *****************
  3281 ;; Defined at:
  3282 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  divisor         2    0[BANK0 ] int 
  3285 ;;  dividend        2    2[BANK0 ] int 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  sign            1    5[BANK0 ] unsigned char 
  3288 ;;  counter         1    4[BANK0 ] unsigned char 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  2    0[BANK0 ] int 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3298 ;;      Params:         0       4       0       0       0
  3299 ;;      Locals:         0       2       0       0       0
  3300 ;;      Temps:          1       0       0       0       0
  3301 ;;      Totals:         1       6       0       0       0
  3302 ;;Total ram usage:        7 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; Hardware stack levels required when called:    3
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_scale
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function ___awmod
  3314  1E05                     ___awmod:
  3315  1E05                     l3673:	
  3316                           ;incstack = 0
  3317                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3318                           
  3319  1E05  1283               	bcf	3,5	;RP0=0, select bank0
  3320  1E06  1303               	bcf	3,6	;RP1=0, select bank0
  3321  1E07  01A5               	clrf	___awmod@sign
  3322  1E08                     l3675:
  3323  1E08  1FA3               	btfss	___awmod@dividend+1,7
  3324  1E09  2E0B               	goto	u5981
  3325  1E0A  2E0C               	goto	u5980
  3326  1E0B                     u5981:
  3327  1E0B  2E13               	goto	l3681
  3328  1E0C                     u5980:
  3329  1E0C                     l3677:
  3330  1E0C  09A2               	comf	___awmod@dividend,f
  3331  1E0D  09A3               	comf	___awmod@dividend+1,f
  3332  1E0E  0AA2               	incf	___awmod@dividend,f
  3333  1E0F  1903               	skipnz
  3334  1E10  0AA3               	incf	___awmod@dividend+1,f
  3335  1E11                     l3679:
  3336  1E11  01A5               	clrf	___awmod@sign
  3337  1E12  0AA5               	incf	___awmod@sign,f
  3338  1E13                     l3681:
  3339  1E13  1FA1               	btfss	___awmod@divisor+1,7
  3340  1E14  2E16               	goto	u5991
  3341  1E15  2E17               	goto	u5990
  3342  1E16                     u5991:
  3343  1E16  2E1C               	goto	l3685
  3344  1E17                     u5990:
  3345  1E17                     l3683:
  3346  1E17  09A0               	comf	___awmod@divisor,f
  3347  1E18  09A1               	comf	___awmod@divisor+1,f
  3348  1E19  0AA0               	incf	___awmod@divisor,f
  3349  1E1A  1903               	skipnz
  3350  1E1B  0AA1               	incf	___awmod@divisor+1,f
  3351  1E1C                     l3685:
  3352  1E1C  0820               	movf	___awmod@divisor,w
  3353  1E1D  0421               	iorwf	___awmod@divisor+1,w
  3354  1E1E  1903               	btfsc	3,2
  3355  1E1F  2E21               	goto	u6001
  3356  1E20  2E22               	goto	u6000
  3357  1E21                     u6001:
  3358  1E21  2E51               	goto	l3703
  3359  1E22                     u6000:
  3360  1E22                     l3687:
  3361  1E22  01A4               	clrf	___awmod@counter
  3362  1E23  0AA4               	incf	___awmod@counter,f
  3363  1E24  2E30               	goto	l3693
  3364  1E25                     l3689:
  3365  1E25  3001               	movlw	1
  3366  1E26                     u6015:
  3367  1E26  1003               	clrc
  3368  1E27  0DA0               	rlf	___awmod@divisor,f
  3369  1E28  0DA1               	rlf	___awmod@divisor+1,f
  3370  1E29  3EFF               	addlw	-1
  3371  1E2A  1D03               	skipz
  3372  1E2B  2E26               	goto	u6015
  3373  1E2C                     l3691:
  3374  1E2C  3001               	movlw	1
  3375  1E2D  00F5               	movwf	??___awmod
  3376  1E2E  0875               	movf	??___awmod,w
  3377  1E2F  07A4               	addwf	___awmod@counter,f
  3378  1E30                     l3693:
  3379  1E30  1FA1               	btfss	___awmod@divisor+1,7
  3380  1E31  2E33               	goto	u6021
  3381  1E32  2E34               	goto	u6020
  3382  1E33                     u6021:
  3383  1E33  2E25               	goto	l3689
  3384  1E34                     u6020:
  3385  1E34                     l3695:
  3386  1E34  0821               	movf	___awmod@divisor+1,w
  3387  1E35  0223               	subwf	___awmod@dividend+1,w
  3388  1E36  1D03               	skipz
  3389  1E37  2E3A               	goto	u6035
  3390  1E38  0820               	movf	___awmod@divisor,w
  3391  1E39  0222               	subwf	___awmod@dividend,w
  3392  1E3A                     u6035:
  3393  1E3A  1C03               	skipc
  3394  1E3B  2E3D               	goto	u6031
  3395  1E3C  2E3E               	goto	u6030
  3396  1E3D                     u6031:
  3397  1E3D  2E44               	goto	l3699
  3398  1E3E                     u6030:
  3399  1E3E                     l3697:
  3400  1E3E  0820               	movf	___awmod@divisor,w
  3401  1E3F  02A2               	subwf	___awmod@dividend,f
  3402  1E40  0821               	movf	___awmod@divisor+1,w
  3403  1E41  1C03               	skipc
  3404  1E42  03A3               	decf	___awmod@dividend+1,f
  3405  1E43  02A3               	subwf	___awmod@dividend+1,f
  3406  1E44                     l3699:
  3407  1E44  3001               	movlw	1
  3408  1E45                     u6045:
  3409  1E45  1003               	clrc
  3410  1E46  0CA1               	rrf	___awmod@divisor+1,f
  3411  1E47  0CA0               	rrf	___awmod@divisor,f
  3412  1E48  3EFF               	addlw	-1
  3413  1E49  1D03               	skipz
  3414  1E4A  2E45               	goto	u6045
  3415  1E4B                     l3701:
  3416  1E4B  3001               	movlw	1
  3417  1E4C  02A4               	subwf	___awmod@counter,f
  3418  1E4D  1D03               	btfss	3,2
  3419  1E4E  2E50               	goto	u6051
  3420  1E4F  2E51               	goto	u6050
  3421  1E50                     u6051:
  3422  1E50  2E34               	goto	l3695
  3423  1E51                     u6050:
  3424  1E51                     l3703:
  3425  1E51  0825               	movf	___awmod@sign,w
  3426  1E52  1903               	btfsc	3,2
  3427  1E53  2E55               	goto	u6061
  3428  1E54  2E56               	goto	u6060
  3429  1E55                     u6061:
  3430  1E55  2E5B               	goto	l3707
  3431  1E56                     u6060:
  3432  1E56                     l3705:
  3433  1E56  09A2               	comf	___awmod@dividend,f
  3434  1E57  09A3               	comf	___awmod@dividend+1,f
  3435  1E58  0AA2               	incf	___awmod@dividend,f
  3436  1E59  1903               	skipnz
  3437  1E5A  0AA3               	incf	___awmod@dividend+1,f
  3438  1E5B                     l3707:
  3439  1E5B  0823               	movf	___awmod@dividend+1,w
  3440  1E5C  00A1               	movwf	?___awmod+1
  3441  1E5D  0822               	movf	___awmod@dividend,w
  3442  1E5E  00A0               	movwf	?___awmod
  3443  1E5F                     l564:
  3444  1E5F  0008               	return
  3445  1E60                     __end_of___awmod:
  3446                           
  3447                           	psect	text4
  3448  080F                     __ptext4:	
  3449 ;; *************** function ___awdiv *****************
  3450 ;; Defined at:
  3451 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  divisor         2    6[BANK0 ] int 
  3454 ;;  dividend        2    8[BANK0 ] int 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  quotient        2   12[BANK0 ] int 
  3457 ;;  sign            1   11[BANK0 ] unsigned char 
  3458 ;;  counter         1   10[BANK0 ] unsigned char 
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  2    6[BANK0 ] int 
  3461 ;; Registers used:
  3462 ;;		wreg, status,2, status,0
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3468 ;;      Params:         0       4       0       0       0
  3469 ;;      Locals:         0       4       0       0       0
  3470 ;;      Temps:          1       0       0       0       0
  3471 ;;      Totals:         1       8       0       0       0
  3472 ;;Total ram usage:        9 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:    3
  3475 ;; This function calls:
  3476 ;;		Nothing
  3477 ;; This function is called by:
  3478 ;;		_scale
  3479 ;;		_sprintf
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           
  3484                           ;psect for function ___awdiv
  3485  080F                     ___awdiv:
  3486  080F                     l3629:	
  3487                           ;incstack = 0
  3488                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3489                           
  3490  080F  1283               	bcf	3,5	;RP0=0, select bank0
  3491  0810  1303               	bcf	3,6	;RP1=0, select bank0
  3492  0811  01AB               	clrf	___awdiv@sign
  3493  0812                     l3631:
  3494  0812  1FA7               	btfss	___awdiv@divisor+1,7
  3495  0813  2815               	goto	u5881
  3496  0814  2816               	goto	u5880
  3497  0815                     u5881:
  3498  0815  281D               	goto	l3637
  3499  0816                     u5880:
  3500  0816                     l3633:
  3501  0816  09A6               	comf	___awdiv@divisor,f
  3502  0817  09A7               	comf	___awdiv@divisor+1,f
  3503  0818  0AA6               	incf	___awdiv@divisor,f
  3504  0819  1903               	skipnz
  3505  081A  0AA7               	incf	___awdiv@divisor+1,f
  3506  081B                     l3635:
  3507  081B  01AB               	clrf	___awdiv@sign
  3508  081C  0AAB               	incf	___awdiv@sign,f
  3509  081D                     l3637:
  3510  081D  1FA9               	btfss	___awdiv@dividend+1,7
  3511  081E  2820               	goto	u5891
  3512  081F  2821               	goto	u5890
  3513  0820                     u5891:
  3514  0820  282A               	goto	l3643
  3515  0821                     u5890:
  3516  0821                     l3639:
  3517  0821  09A8               	comf	___awdiv@dividend,f
  3518  0822  09A9               	comf	___awdiv@dividend+1,f
  3519  0823  0AA8               	incf	___awdiv@dividend,f
  3520  0824  1903               	skipnz
  3521  0825  0AA9               	incf	___awdiv@dividend+1,f
  3522  0826                     l3641:
  3523  0826  3001               	movlw	1
  3524  0827  00F6               	movwf	??___awdiv
  3525  0828  0876               	movf	??___awdiv,w
  3526  0829  06AB               	xorwf	___awdiv@sign,f
  3527  082A                     l3643:
  3528  082A  01AC               	clrf	___awdiv@quotient
  3529  082B  01AD               	clrf	___awdiv@quotient+1
  3530  082C                     l3645:
  3531  082C  0826               	movf	___awdiv@divisor,w
  3532  082D  0427               	iorwf	___awdiv@divisor+1,w
  3533  082E  1903               	btfsc	3,2
  3534  082F  2831               	goto	u5901
  3535  0830  2832               	goto	u5900
  3536  0831                     u5901:
  3537  0831  2869               	goto	l3665
  3538  0832                     u5900:
  3539  0832                     l3647:
  3540  0832  01AA               	clrf	___awdiv@counter
  3541  0833  0AAA               	incf	___awdiv@counter,f
  3542  0834  2840               	goto	l3653
  3543  0835                     l3649:
  3544  0835  3001               	movlw	1
  3545  0836                     u5915:
  3546  0836  1003               	clrc
  3547  0837  0DA6               	rlf	___awdiv@divisor,f
  3548  0838  0DA7               	rlf	___awdiv@divisor+1,f
  3549  0839  3EFF               	addlw	-1
  3550  083A  1D03               	skipz
  3551  083B  2836               	goto	u5915
  3552  083C                     l3651:
  3553  083C  3001               	movlw	1
  3554  083D  00F6               	movwf	??___awdiv
  3555  083E  0876               	movf	??___awdiv,w
  3556  083F  07AA               	addwf	___awdiv@counter,f
  3557  0840                     l3653:
  3558  0840  1FA7               	btfss	___awdiv@divisor+1,7
  3559  0841  2843               	goto	u5921
  3560  0842  2844               	goto	u5920
  3561  0843                     u5921:
  3562  0843  2835               	goto	l3649
  3563  0844                     u5920:
  3564  0844                     l3655:
  3565  0844  3001               	movlw	1
  3566  0845                     u5935:
  3567  0845  1003               	clrc
  3568  0846  0DAC               	rlf	___awdiv@quotient,f
  3569  0847  0DAD               	rlf	___awdiv@quotient+1,f
  3570  0848  3EFF               	addlw	-1
  3571  0849  1D03               	skipz
  3572  084A  2845               	goto	u5935
  3573  084B  0827               	movf	___awdiv@divisor+1,w
  3574  084C  0229               	subwf	___awdiv@dividend+1,w
  3575  084D  1D03               	skipz
  3576  084E  2851               	goto	u5945
  3577  084F  0826               	movf	___awdiv@divisor,w
  3578  0850  0228               	subwf	___awdiv@dividend,w
  3579  0851                     u5945:
  3580  0851  1C03               	skipc
  3581  0852  2854               	goto	u5941
  3582  0853  2855               	goto	u5940
  3583  0854                     u5941:
  3584  0854  285C               	goto	l3661
  3585  0855                     u5940:
  3586  0855                     l3657:
  3587  0855  0826               	movf	___awdiv@divisor,w
  3588  0856  02A8               	subwf	___awdiv@dividend,f
  3589  0857  0827               	movf	___awdiv@divisor+1,w
  3590  0858  1C03               	skipc
  3591  0859  03A9               	decf	___awdiv@dividend+1,f
  3592  085A  02A9               	subwf	___awdiv@dividend+1,f
  3593  085B                     l3659:
  3594  085B  142C               	bsf	___awdiv@quotient,0
  3595  085C                     l3661:
  3596  085C  3001               	movlw	1
  3597  085D                     u5955:
  3598  085D  1003               	clrc
  3599  085E  0CA7               	rrf	___awdiv@divisor+1,f
  3600  085F  0CA6               	rrf	___awdiv@divisor,f
  3601  0860  3EFF               	addlw	-1
  3602  0861  1D03               	skipz
  3603  0862  285D               	goto	u5955
  3604  0863                     l3663:
  3605  0863  3001               	movlw	1
  3606  0864  02AA               	subwf	___awdiv@counter,f
  3607  0865  1D03               	btfss	3,2
  3608  0866  2868               	goto	u5961
  3609  0867  2869               	goto	u5960
  3610  0868                     u5961:
  3611  0868  2844               	goto	l3655
  3612  0869                     u5960:
  3613  0869                     l3665:
  3614  0869  082B               	movf	___awdiv@sign,w
  3615  086A  1903               	btfsc	3,2
  3616  086B  286D               	goto	u5971
  3617  086C  286E               	goto	u5970
  3618  086D                     u5971:
  3619  086D  2873               	goto	l3669
  3620  086E                     u5970:
  3621  086E                     l3667:
  3622  086E  09AC               	comf	___awdiv@quotient,f
  3623  086F  09AD               	comf	___awdiv@quotient+1,f
  3624  0870  0AAC               	incf	___awdiv@quotient,f
  3625  0871  1903               	skipnz
  3626  0872  0AAD               	incf	___awdiv@quotient+1,f
  3627  0873                     l3669:
  3628  0873  082D               	movf	___awdiv@quotient+1,w
  3629  0874  00A7               	movwf	?___awdiv+1
  3630  0875  082C               	movf	___awdiv@quotient,w
  3631  0876  00A6               	movwf	?___awdiv
  3632  0877                     l551:
  3633  0877  0008               	return
  3634  0878                     __end_of___awdiv:
  3635                           
  3636                           	psect	text5
  3637  1A6A                     __ptext5:	
  3638 ;; *************** function _isdigit *****************
  3639 ;; Defined at:
  3640 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  c               1    wreg     unsigned char 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  c               1    6[COMMON] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;		None               void
  3647 ;; Registers used:
  3648 ;;		wreg, status,2, status,0
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3654 ;;      Params:         0       0       0       0       0
  3655 ;;      Locals:         2       0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0
  3657 ;;      Totals:         2       0       0       0       0
  3658 ;;Total ram usage:        2 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    3
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_sprintf
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           
  3669                           ;psect for function _isdigit
  3670  1A6A                     _isdigit:
  3671                           
  3672                           ;incstack = 0
  3673                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3674                           ;isdigit@c stored from wreg
  3675  1A6A  00F6               	movwf	isdigit@c
  3676  1A6B                     l2873:
  3677  1A6B  01F5               	clrf	_isdigit$994
  3678  1A6C                     l2875:
  3679  1A6C  303A               	movlw	58
  3680  1A6D  0276               	subwf	isdigit@c,w
  3681  1A6E  1803               	skipnc
  3682  1A6F  2A71               	goto	u4411
  3683  1A70  2A72               	goto	u4410
  3684  1A71                     u4411:
  3685  1A71  2A7A               	goto	l2881
  3686  1A72                     u4410:
  3687  1A72                     l2877:
  3688  1A72  3030               	movlw	48
  3689  1A73  0276               	subwf	isdigit@c,w
  3690  1A74  1C03               	skipc
  3691  1A75  2A77               	goto	u4421
  3692  1A76  2A78               	goto	u4420
  3693  1A77                     u4421:
  3694  1A77  2A7A               	goto	l2881
  3695  1A78                     u4420:
  3696  1A78                     l2879:
  3697  1A78  01F5               	clrf	_isdigit$994
  3698  1A79  0AF5               	incf	_isdigit$994,f
  3699  1A7A                     l2881:
  3700  1A7A  0C75               	rrf	_isdigit$994,w
  3701  1A7B                     l885:
  3702  1A7B  0008               	return
  3703  1A7C                     __end_of_isdigit:
  3704                           
  3705                           	psect	text6
  3706  05D2                     __ptext6:	
  3707 ;; *************** function _fround *****************
  3708 ;; Defined at:
  3709 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  prec            1    wreg     unsigned char 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;  prec            1   59[BANK0 ] unsigned char 
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  4   40[BANK0 ] unsigned char 
  3716 ;; Registers used:
  3717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3723 ;;      Params:         0       4       0       0       0
  3724 ;;      Locals:         0       9       0       0       0
  3725 ;;      Temps:          0       7       0       0       0
  3726 ;;      Totals:         0      20       0       0       0
  3727 ;;Total ram usage:       20 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; Hardware stack levels required when called:    5
  3730 ;; This function calls:
  3731 ;;		___flmul
  3732 ;;		___lwdiv
  3733 ;;		___lwmod
  3734 ;; This function is called by:
  3735 ;;		_sprintf
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           
  3740                           ;psect for function _fround
  3741  05D2                     _fround:
  3742                           
  3743                           ;incstack = 0
  3744                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3745                           ;fround@prec stored from wreg
  3746  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  3747  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  3748  05D4  00DB               	movwf	fround@prec
  3749  05D5                     l3899:
  3750                           
  3751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3752  05D5  306E               	movlw	110
  3753  05D6  025B               	subwf	fround@prec,w
  3754  05D7  1C03               	skipc
  3755  05D8  2DDA               	goto	u6511
  3756  05D9  2DDB               	goto	u6510
  3757  05DA                     u6511:
  3758  05DA  2EEA               	goto	l3907
  3759  05DB                     u6510:
  3760  05DB                     l3901:
  3761                           
  3762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3763  05DB  303F               	movlw	63
  3764  05DC  00B1               	movwf	___flmul@b+3
  3765  05DD  3000               	movlw	0
  3766  05DE  00B0               	movwf	___flmul@b+2
  3767  05DF  3000               	movlw	0
  3768  05E0  00AF               	movwf	___flmul@b+1
  3769  05E1  3000               	movlw	0
  3770  05E2  00AE               	movwf	___flmul@b
  3771  05E3  3064               	movlw	100
  3772  05E4  00A4               	movwf	___lwdiv@divisor
  3773  05E5  3000               	movlw	0
  3774  05E6  00A5               	movwf	___lwdiv@divisor+1
  3775  05E7  085B               	movf	fround@prec,w
  3776  05E8  00CC               	movwf	??_fround
  3777  05E9  01CD               	clrf	??_fround+1
  3778  05EA  084C               	movf	??_fround,w
  3779  05EB  00A6               	movwf	___lwdiv@dividend
  3780  05EC  084D               	movf	??_fround+1,w
  3781  05ED  00A7               	movwf	___lwdiv@dividend+1
  3782  05EE  160A  158A  247C  120A  118A  	fcall	___lwdiv
  3783  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  3784  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  3785  05F5  0824               	movf	?___lwdiv,w
  3786  05F6  00CE               	movwf	??_fround+2
  3787  05F7  3001               	movlw	1
  3788  05F8                     u6525:
  3789  05F8  1003               	clrc
  3790  05F9  0DCE               	rlf	??_fround+2,f
  3791  05FA  3EFF               	addlw	-1
  3792  05FB  1D03               	skipz
  3793  05FC  2DF8               	goto	u6525
  3794  05FD  1003               	clrc
  3795  05FE  0D4E               	rlf	??_fround+2,w
  3796  05FF  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3797  0600  0084               	movwf	4
  3798  0601  160A  158A  200A  120A  118A  	fcall	stringdir
  3799  0606  00CF               	movwf	??_fround+3
  3800  0607  160A  158A  200A  120A  118A  	fcall	stringdir
  3801  060C  00D0               	movwf	??_fround+4
  3802  060D  160A  158A  200A  120A  118A  	fcall	stringdir
  3803  0612  00D1               	movwf	??_fround+5
  3804  0613  160A  158A  200A  120A  118A  	fcall	stringdir
  3805  0618  00D2               	movwf	??_fround+6
  3806  0619  0852               	movf	??_fround+6,w
  3807  061A  00B5               	movwf	___flmul@a+3
  3808  061B  0851               	movf	??_fround+5,w
  3809  061C  00B4               	movwf	___flmul@a+2
  3810  061D  0850               	movf	??_fround+4,w
  3811  061E  00B3               	movwf	___flmul@a+1
  3812  061F  084F               	movf	??_fround+3,w
  3813  0620  00B2               	movwf	___flmul@a
  3814  0621  120A  158A  213C  120A  118A  	fcall	___flmul
  3815  0626  1283               	bcf	3,5	;RP0=0, select bank0
  3816  0627  1303               	bcf	3,6	;RP1=0, select bank0
  3817  0628  0831               	movf	?___flmul+3,w
  3818  0629  00DA               	movwf	_fround$1178+3
  3819  062A  0830               	movf	?___flmul+2,w
  3820  062B  00D9               	movwf	_fround$1178+2
  3821  062C  082F               	movf	?___flmul+1,w
  3822  062D  00D8               	movwf	_fround$1178+1
  3823  062E  082E               	movf	?___flmul,w
  3824  062F  00D7               	movwf	_fround$1178
  3825                           
  3826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3827  0630  300A               	movlw	10
  3828  0631  00A4               	movwf	___lwdiv@divisor
  3829  0632  3000               	movlw	0
  3830  0633  00A5               	movwf	___lwdiv@divisor+1
  3831  0634  085B               	movf	fround@prec,w
  3832  0635  00CC               	movwf	??_fround
  3833  0636  01CD               	clrf	??_fround+1
  3834  0637  084C               	movf	??_fround,w
  3835  0638  00A2               	movwf	___lwmod@dividend
  3836  0639  084D               	movf	??_fround+1,w
  3837  063A  00A3               	movwf	___lwmod@dividend+1
  3838  063B  3064               	movlw	100
  3839  063C  00A0               	movwf	___lwmod@divisor
  3840  063D  3000               	movlw	0
  3841  063E  00A1               	movwf	___lwmod@divisor+1
  3842  063F  160A  158A  237C  120A  118A  	fcall	___lwmod
  3843  0644  1283               	bcf	3,5	;RP0=0, select bank0
  3844  0645  1303               	bcf	3,6	;RP1=0, select bank0
  3845  0646  0821               	movf	?___lwmod+1,w
  3846  0647  00A7               	movwf	___lwdiv@dividend+1
  3847  0648  0820               	movf	?___lwmod,w
  3848  0649  00A6               	movwf	___lwdiv@dividend
  3849  064A  160A  158A  247C  120A  118A  	fcall	___lwdiv
  3850  064F  1283               	bcf	3,5	;RP0=0, select bank0
  3851  0650  1303               	bcf	3,6	;RP1=0, select bank0
  3852  0651  0824               	movf	?___lwdiv,w
  3853  0652  00CE               	movwf	??_fround+2
  3854  0653  3001               	movlw	1
  3855  0654                     u6535:
  3856  0654  1003               	clrc
  3857  0655  0DCE               	rlf	??_fround+2,f
  3858  0656  3EFF               	addlw	-1
  3859  0657  1D03               	skipz
  3860  0658  2E54               	goto	u6535
  3861  0659  1003               	clrc
  3862  065A  0D4E               	rlf	??_fround+2,w
  3863  065B  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3864  065C  0084               	movwf	4
  3865  065D  160A  158A  200A  120A  118A  	fcall	stringdir
  3866  0662  00CF               	movwf	??_fround+3
  3867  0663  160A  158A  200A  120A  118A  	fcall	stringdir
  3868  0668  00D0               	movwf	??_fround+4
  3869  0669  160A  158A  200A  120A  118A  	fcall	stringdir
  3870  066E  00D1               	movwf	??_fround+5
  3871  066F  160A  158A  200A  120A  118A  	fcall	stringdir
  3872  0674  00D2               	movwf	??_fround+6
  3873  0675  0852               	movf	??_fround+6,w
  3874  0676  00B1               	movwf	___flmul@b+3
  3875  0677  0851               	movf	??_fround+5,w
  3876  0678  00B0               	movwf	___flmul@b+2
  3877  0679  0850               	movf	??_fround+4,w
  3878  067A  00AF               	movwf	___flmul@b+1
  3879  067B  084F               	movf	??_fround+3,w
  3880  067C  00AE               	movwf	___flmul@b
  3881  067D  085A               	movf	_fround$1178+3,w
  3882  067E  00B5               	movwf	___flmul@a+3
  3883  067F  0859               	movf	_fround$1178+2,w
  3884  0680  00B4               	movwf	___flmul@a+2
  3885  0681  0858               	movf	_fround$1178+1,w
  3886  0682  00B3               	movwf	___flmul@a+1
  3887  0683  0857               	movf	_fround$1178,w
  3888  0684  00B2               	movwf	___flmul@a
  3889  0685  120A  158A  213C  120A  118A  	fcall	___flmul
  3890  068A  1283               	bcf	3,5	;RP0=0, select bank0
  3891  068B  1303               	bcf	3,6	;RP1=0, select bank0
  3892  068C  0831               	movf	?___flmul+3,w
  3893  068D  00D6               	movwf	_fround$1179+3
  3894  068E  0830               	movf	?___flmul+2,w
  3895  068F  00D5               	movwf	_fround$1179+2
  3896  0690  082F               	movf	?___flmul+1,w
  3897  0691  00D4               	movwf	_fround$1179+1
  3898  0692  082E               	movf	?___flmul,w
  3899  0693  00D3               	movwf	_fround$1179
  3900                           
  3901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3902  0694  300A               	movlw	10
  3903  0695  00A0               	movwf	___lwmod@divisor
  3904  0696  3000               	movlw	0
  3905  0697  00A1               	movwf	___lwmod@divisor+1
  3906  0698  085B               	movf	fround@prec,w
  3907  0699  00CC               	movwf	??_fround
  3908  069A  01CD               	clrf	??_fround+1
  3909  069B  084C               	movf	??_fround,w
  3910  069C  00A2               	movwf	___lwmod@dividend
  3911  069D  084D               	movf	??_fround+1,w
  3912  069E  00A3               	movwf	___lwmod@dividend+1
  3913  069F  160A  158A  237C  120A  118A  	fcall	___lwmod
  3914  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  3915  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  3916  06A6  0820               	movf	?___lwmod,w
  3917  06A7  00CE               	movwf	??_fround+2
  3918  06A8  3001               	movlw	1
  3919  06A9                     u6545:
  3920  06A9  1003               	clrc
  3921  06AA  0DCE               	rlf	??_fround+2,f
  3922  06AB  3EFF               	addlw	-1
  3923  06AC  1D03               	skipz
  3924  06AD  2EA9               	goto	u6545
  3925  06AE  1003               	clrc
  3926  06AF  0D4E               	rlf	??_fround+2,w
  3927  06B0  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3928  06B1  0084               	movwf	4
  3929  06B2  160A  158A  200A  120A  118A  	fcall	stringdir
  3930  06B7  00CF               	movwf	??_fround+3
  3931  06B8  160A  158A  200A  120A  118A  	fcall	stringdir
  3932  06BD  00D0               	movwf	??_fround+4
  3933  06BE  160A  158A  200A  120A  118A  	fcall	stringdir
  3934  06C3  00D1               	movwf	??_fround+5
  3935  06C4  160A  158A  200A  120A  118A  	fcall	stringdir
  3936  06C9  00D2               	movwf	??_fround+6
  3937  06CA  0852               	movf	??_fround+6,w
  3938  06CB  00B1               	movwf	___flmul@b+3
  3939  06CC  0851               	movf	??_fround+5,w
  3940  06CD  00B0               	movwf	___flmul@b+2
  3941  06CE  0850               	movf	??_fround+4,w
  3942  06CF  00AF               	movwf	___flmul@b+1
  3943  06D0  084F               	movf	??_fround+3,w
  3944  06D1  00AE               	movwf	___flmul@b
  3945  06D2  0856               	movf	_fround$1179+3,w
  3946  06D3  00B5               	movwf	___flmul@a+3
  3947  06D4  0855               	movf	_fround$1179+2,w
  3948  06D5  00B4               	movwf	___flmul@a+2
  3949  06D6  0854               	movf	_fround$1179+1,w
  3950  06D7  00B3               	movwf	___flmul@a+1
  3951  06D8  0853               	movf	_fround$1179,w
  3952  06D9  00B2               	movwf	___flmul@a
  3953  06DA  120A  158A  213C  120A  118A  	fcall	___flmul
  3954  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3955  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  3956  06E1  0831               	movf	?___flmul+3,w
  3957  06E2  00CB               	movwf	?_fround+3
  3958  06E3  0830               	movf	?___flmul+2,w
  3959  06E4  00CA               	movwf	?_fround+2
  3960  06E5  082F               	movf	?___flmul+1,w
  3961  06E6  00C9               	movwf	?_fround+1
  3962  06E7  082E               	movf	?___flmul,w
  3963  06E8  00C8               	movwf	?_fround
  3964  06E9  2FDE               	goto	l304
  3965  06EA                     l3907:
  3966  06EA  300B               	movlw	11
  3967  06EB  025B               	subwf	fround@prec,w
  3968  06EC  1C03               	skipc
  3969  06ED  2EEF               	goto	u6551
  3970  06EE  2EF0               	goto	u6550
  3971  06EF                     u6551:
  3972  06EF  2F9B               	goto	l3913
  3973  06F0                     u6550:
  3974  06F0                     l3909:
  3975                           
  3976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3977  06F0  303F               	movlw	63
  3978  06F1  00B1               	movwf	___flmul@b+3
  3979  06F2  3000               	movlw	0
  3980  06F3  00B0               	movwf	___flmul@b+2
  3981  06F4  3000               	movlw	0
  3982  06F5  00AF               	movwf	___flmul@b+1
  3983  06F6  3000               	movlw	0
  3984  06F7  00AE               	movwf	___flmul@b
  3985  06F8  300A               	movlw	10
  3986  06F9  00A4               	movwf	___lwdiv@divisor
  3987  06FA  3000               	movlw	0
  3988  06FB  00A5               	movwf	___lwdiv@divisor+1
  3989  06FC  085B               	movf	fround@prec,w
  3990  06FD  00CC               	movwf	??_fround
  3991  06FE  01CD               	clrf	??_fround+1
  3992  06FF  084C               	movf	??_fround,w
  3993  0700  00A6               	movwf	___lwdiv@dividend
  3994  0701  084D               	movf	??_fround+1,w
  3995  0702  00A7               	movwf	___lwdiv@dividend+1
  3996  0703  160A  158A  247C  120A  118A  	fcall	___lwdiv
  3997  0708  1283               	bcf	3,5	;RP0=0, select bank0
  3998  0709  1303               	bcf	3,6	;RP1=0, select bank0
  3999  070A  0824               	movf	?___lwdiv,w
  4000  070B  00CE               	movwf	??_fround+2
  4001  070C  3001               	movlw	1
  4002  070D                     u6565:
  4003  070D  1003               	clrc
  4004  070E  0DCE               	rlf	??_fround+2,f
  4005  070F  3EFF               	addlw	-1
  4006  0710  1D03               	skipz
  4007  0711  2F0D               	goto	u6565
  4008  0712  1003               	clrc
  4009  0713  0D4E               	rlf	??_fround+2,w
  4010  0714  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4011  0715  0084               	movwf	4
  4012  0716  160A  158A  200A  120A  118A  	fcall	stringdir
  4013  071B  00CF               	movwf	??_fround+3
  4014  071C  160A  158A  200A  120A  118A  	fcall	stringdir
  4015  0721  00D0               	movwf	??_fround+4
  4016  0722  160A  158A  200A  120A  118A  	fcall	stringdir
  4017  0727  00D1               	movwf	??_fround+5
  4018  0728  160A  158A  200A  120A  118A  	fcall	stringdir
  4019  072D  00D2               	movwf	??_fround+6
  4020  072E  0852               	movf	??_fround+6,w
  4021  072F  00B5               	movwf	___flmul@a+3
  4022  0730  0851               	movf	??_fround+5,w
  4023  0731  00B4               	movwf	___flmul@a+2
  4024  0732  0850               	movf	??_fround+4,w
  4025  0733  00B3               	movwf	___flmul@a+1
  4026  0734  084F               	movf	??_fround+3,w
  4027  0735  00B2               	movwf	___flmul@a
  4028  0736  120A  158A  213C  120A  118A  	fcall	___flmul
  4029  073B  1283               	bcf	3,5	;RP0=0, select bank0
  4030  073C  1303               	bcf	3,6	;RP1=0, select bank0
  4031  073D  0831               	movf	?___flmul+3,w
  4032  073E  00DA               	movwf	_fround$1178+3
  4033  073F  0830               	movf	?___flmul+2,w
  4034  0740  00D9               	movwf	_fround$1178+2
  4035  0741  082F               	movf	?___flmul+1,w
  4036  0742  00D8               	movwf	_fround$1178+1
  4037  0743  082E               	movf	?___flmul,w
  4038  0744  00D7               	movwf	_fround$1178
  4039                           
  4040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4041  0745  300A               	movlw	10
  4042  0746  00A0               	movwf	___lwmod@divisor
  4043  0747  3000               	movlw	0
  4044  0748  00A1               	movwf	___lwmod@divisor+1
  4045  0749  085B               	movf	fround@prec,w
  4046  074A  00CC               	movwf	??_fround
  4047  074B  01CD               	clrf	??_fround+1
  4048  074C  084C               	movf	??_fround,w
  4049  074D  00A2               	movwf	___lwmod@dividend
  4050  074E  084D               	movf	??_fround+1,w
  4051  074F  00A3               	movwf	___lwmod@dividend+1
  4052  0750  160A  158A  237C  120A  118A  	fcall	___lwmod
  4053  0755  1283               	bcf	3,5	;RP0=0, select bank0
  4054  0756  1303               	bcf	3,6	;RP1=0, select bank0
  4055  0757  0820               	movf	?___lwmod,w
  4056  0758  00CE               	movwf	??_fround+2
  4057  0759  3001               	movlw	1
  4058  075A                     u6575:
  4059  075A  1003               	clrc
  4060  075B  0DCE               	rlf	??_fround+2,f
  4061  075C  3EFF               	addlw	-1
  4062  075D  1D03               	skipz
  4063  075E  2F5A               	goto	u6575
  4064  075F  1003               	clrc
  4065  0760  0D4E               	rlf	??_fround+2,w
  4066  0761  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4067  0762  0084               	movwf	4
  4068  0763  160A  158A  200A  120A  118A  	fcall	stringdir
  4069  0768  00CF               	movwf	??_fround+3
  4070  0769  160A  158A  200A  120A  118A  	fcall	stringdir
  4071  076E  00D0               	movwf	??_fround+4
  4072  076F  160A  158A  200A  120A  118A  	fcall	stringdir
  4073  0774  00D1               	movwf	??_fround+5
  4074  0775  160A  158A  200A  120A  118A  	fcall	stringdir
  4075  077A  00D2               	movwf	??_fround+6
  4076  077B  0852               	movf	??_fround+6,w
  4077  077C  00B1               	movwf	___flmul@b+3
  4078  077D  0851               	movf	??_fround+5,w
  4079  077E  00B0               	movwf	___flmul@b+2
  4080  077F  0850               	movf	??_fround+4,w
  4081  0780  00AF               	movwf	___flmul@b+1
  4082  0781  084F               	movf	??_fround+3,w
  4083  0782  00AE               	movwf	___flmul@b
  4084  0783  085A               	movf	_fround$1178+3,w
  4085  0784  00B5               	movwf	___flmul@a+3
  4086  0785  0859               	movf	_fround$1178+2,w
  4087  0786  00B4               	movwf	___flmul@a+2
  4088  0787  0858               	movf	_fround$1178+1,w
  4089  0788  00B3               	movwf	___flmul@a+1
  4090  0789  0857               	movf	_fround$1178,w
  4091  078A  00B2               	movwf	___flmul@a
  4092  078B  120A  158A  213C  120A  118A  	fcall	___flmul
  4093  0790  1283               	bcf	3,5	;RP0=0, select bank0
  4094  0791  1303               	bcf	3,6	;RP1=0, select bank0
  4095  0792  0831               	movf	?___flmul+3,w
  4096  0793  00CB               	movwf	?_fround+3
  4097  0794  0830               	movf	?___flmul+2,w
  4098  0795  00CA               	movwf	?_fround+2
  4099  0796  082F               	movf	?___flmul+1,w
  4100  0797  00C9               	movwf	?_fround+1
  4101  0798  082E               	movf	?___flmul,w
  4102  0799  00C8               	movwf	?_fround
  4103  079A  2FDE               	goto	l304
  4104  079B                     l3913:
  4105                           
  4106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4107  079B  303F               	movlw	63
  4108  079C  00B1               	movwf	___flmul@b+3
  4109  079D  3000               	movlw	0
  4110  079E  00B0               	movwf	___flmul@b+2
  4111  079F  3000               	movlw	0
  4112  07A0  00AF               	movwf	___flmul@b+1
  4113  07A1  3000               	movlw	0
  4114  07A2  00AE               	movwf	___flmul@b
  4115  07A3  085B               	movf	fround@prec,w
  4116  07A4  00CC               	movwf	??_fround
  4117  07A5  3001               	movlw	1
  4118  07A6                     u6585:
  4119  07A6  1003               	clrc
  4120  07A7  0DCC               	rlf	??_fround,f
  4121  07A8  3EFF               	addlw	-1
  4122  07A9  1D03               	skipz
  4123  07AA  2FA6               	goto	u6585
  4124  07AB  1003               	clrc
  4125  07AC  0D4C               	rlf	??_fround,w
  4126  07AD  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4127  07AE  0084               	movwf	4
  4128  07AF  160A  158A  200A  120A  118A  	fcall	stringdir
  4129  07B4  00CD               	movwf	??_fround+1
  4130  07B5  160A  158A  200A  120A  118A  	fcall	stringdir
  4131  07BA  00CE               	movwf	??_fround+2
  4132  07BB  160A  158A  200A  120A  118A  	fcall	stringdir
  4133  07C0  00CF               	movwf	??_fround+3
  4134  07C1  160A  158A  200A  120A  118A  	fcall	stringdir
  4135  07C6  00D0               	movwf	??_fround+4
  4136  07C7  0850               	movf	??_fround+4,w
  4137  07C8  00B5               	movwf	___flmul@a+3
  4138  07C9  084F               	movf	??_fround+3,w
  4139  07CA  00B4               	movwf	___flmul@a+2
  4140  07CB  084E               	movf	??_fround+2,w
  4141  07CC  00B3               	movwf	___flmul@a+1
  4142  07CD  084D               	movf	??_fround+1,w
  4143  07CE  00B2               	movwf	___flmul@a
  4144  07CF  120A  158A  213C  120A  118A  	fcall	___flmul
  4145  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  4146  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  4147  07D6  0831               	movf	?___flmul+3,w
  4148  07D7  00CB               	movwf	?_fround+3
  4149  07D8  0830               	movf	?___flmul+2,w
  4150  07D9  00CA               	movwf	?_fround+2
  4151  07DA  082F               	movf	?___flmul+1,w
  4152  07DB  00C9               	movwf	?_fround+1
  4153  07DC  082E               	movf	?___flmul,w
  4154  07DD  00C8               	movwf	?_fround
  4155  07DE                     l304:
  4156  07DE  0008               	return
  4157  07DF                     __end_of_fround:
  4158                           
  4159                           	psect	text7
  4160  1B7C                     __ptext7:	
  4161 ;; *************** function ___lwmod *****************
  4162 ;; Defined at:
  4163 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;  divisor         2    0[BANK0 ] unsigned int 
  4166 ;;  dividend        2    2[BANK0 ] unsigned int 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;  counter         1    6[COMMON] unsigned char 
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  2    0[BANK0 ] unsigned int 
  4171 ;; Registers used:
  4172 ;;		wreg, status,2, status,0
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4178 ;;      Params:         0       4       0       0       0
  4179 ;;      Locals:         1       0       0       0       0
  4180 ;;      Temps:          1       0       0       0       0
  4181 ;;      Totals:         2       4       0       0       0
  4182 ;;Total ram usage:        6 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:    3
  4185 ;; This function calls:
  4186 ;;		Nothing
  4187 ;; This function is called by:
  4188 ;;		_fround
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           
  4193                           ;psect for function ___lwmod
  4194  1B7C                     ___lwmod:
  4195  1B7C                     l3711:	
  4196                           ;incstack = 0
  4197                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4198                           
  4199  1B7C  1283               	bcf	3,5	;RP0=0, select bank0
  4200  1B7D  1303               	bcf	3,6	;RP1=0, select bank0
  4201  1B7E  0820               	movf	___lwmod@divisor,w
  4202  1B7F  0421               	iorwf	___lwmod@divisor+1,w
  4203  1B80  1903               	btfsc	3,2
  4204  1B81  2B83               	goto	u6071
  4205  1B82  2B84               	goto	u6070
  4206  1B83                     u6071:
  4207  1B83  2BB3               	goto	l3729
  4208  1B84                     u6070:
  4209  1B84                     l3713:
  4210  1B84  01F6               	clrf	___lwmod@counter
  4211  1B85  0AF6               	incf	___lwmod@counter,f
  4212  1B86  2B92               	goto	l3719
  4213  1B87                     l3715:
  4214  1B87  3001               	movlw	1
  4215  1B88                     u6085:
  4216  1B88  1003               	clrc
  4217  1B89  0DA0               	rlf	___lwmod@divisor,f
  4218  1B8A  0DA1               	rlf	___lwmod@divisor+1,f
  4219  1B8B  3EFF               	addlw	-1
  4220  1B8C  1D03               	skipz
  4221  1B8D  2B88               	goto	u6085
  4222  1B8E                     l3717:
  4223  1B8E  3001               	movlw	1
  4224  1B8F  00F5               	movwf	??___lwmod
  4225  1B90  0875               	movf	??___lwmod,w
  4226  1B91  07F6               	addwf	___lwmod@counter,f
  4227  1B92                     l3719:
  4228  1B92  1FA1               	btfss	___lwmod@divisor+1,7
  4229  1B93  2B95               	goto	u6091
  4230  1B94  2B96               	goto	u6090
  4231  1B95                     u6091:
  4232  1B95  2B87               	goto	l3715
  4233  1B96                     u6090:
  4234  1B96                     l3721:
  4235  1B96  0821               	movf	___lwmod@divisor+1,w
  4236  1B97  0223               	subwf	___lwmod@dividend+1,w
  4237  1B98  1D03               	skipz
  4238  1B99  2B9C               	goto	u6105
  4239  1B9A  0820               	movf	___lwmod@divisor,w
  4240  1B9B  0222               	subwf	___lwmod@dividend,w
  4241  1B9C                     u6105:
  4242  1B9C  1C03               	skipc
  4243  1B9D  2B9F               	goto	u6101
  4244  1B9E  2BA0               	goto	u6100
  4245  1B9F                     u6101:
  4246  1B9F  2BA6               	goto	l3725
  4247  1BA0                     u6100:
  4248  1BA0                     l3723:
  4249  1BA0  0820               	movf	___lwmod@divisor,w
  4250  1BA1  02A2               	subwf	___lwmod@dividend,f
  4251  1BA2  0821               	movf	___lwmod@divisor+1,w
  4252  1BA3  1C03               	skipc
  4253  1BA4  03A3               	decf	___lwmod@dividend+1,f
  4254  1BA5  02A3               	subwf	___lwmod@dividend+1,f
  4255  1BA6                     l3725:
  4256  1BA6  3001               	movlw	1
  4257  1BA7                     u6115:
  4258  1BA7  1003               	clrc
  4259  1BA8  0CA1               	rrf	___lwmod@divisor+1,f
  4260  1BA9  0CA0               	rrf	___lwmod@divisor,f
  4261  1BAA  3EFF               	addlw	-1
  4262  1BAB  1D03               	skipz
  4263  1BAC  2BA7               	goto	u6115
  4264  1BAD                     l3727:
  4265  1BAD  3001               	movlw	1
  4266  1BAE  02F6               	subwf	___lwmod@counter,f
  4267  1BAF  1D03               	btfss	3,2
  4268  1BB0  2BB2               	goto	u6121
  4269  1BB1  2BB3               	goto	u6120
  4270  1BB2                     u6121:
  4271  1BB2  2B96               	goto	l3721
  4272  1BB3                     u6120:
  4273  1BB3                     l3729:
  4274  1BB3  0823               	movf	___lwmod@dividend+1,w
  4275  1BB4  00A1               	movwf	?___lwmod+1
  4276  1BB5  0822               	movf	___lwmod@dividend,w
  4277  1BB6  00A0               	movwf	?___lwmod
  4278  1BB7                     l714:
  4279  1BB7  0008               	return
  4280  1BB8                     __end_of___lwmod:
  4281                           
  4282                           	psect	text8
  4283  1C7C                     __ptext8:	
  4284 ;; *************** function ___lwdiv *****************
  4285 ;; Defined at:
  4286 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  divisor         2    4[BANK0 ] unsigned int 
  4289 ;;  dividend        2    6[BANK0 ] unsigned int 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  quotient        2    9[BANK0 ] unsigned int 
  4292 ;;  counter         1   11[BANK0 ] unsigned char 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  2    4[BANK0 ] unsigned int 
  4295 ;; Registers used:
  4296 ;;		wreg, status,2, status,0
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4302 ;;      Params:         0       4       0       0       0
  4303 ;;      Locals:         0       3       0       0       0
  4304 ;;      Temps:          0       1       0       0       0
  4305 ;;      Totals:         0       8       0       0       0
  4306 ;;Total ram usage:        8 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    3
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_fround
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           
  4317                           ;psect for function ___lwdiv
  4318  1C7C                     ___lwdiv:
  4319  1C7C                     l2403:	
  4320                           ;incstack = 0
  4321                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4322                           
  4323  1C7C  1283               	bcf	3,5	;RP0=0, select bank0
  4324  1C7D  1303               	bcf	3,6	;RP1=0, select bank0
  4325  1C7E  01A9               	clrf	___lwdiv@quotient
  4326  1C7F  01AA               	clrf	___lwdiv@quotient+1
  4327  1C80                     l2405:
  4328  1C80  0824               	movf	___lwdiv@divisor,w
  4329  1C81  0425               	iorwf	___lwdiv@divisor+1,w
  4330  1C82  1903               	btfsc	3,2
  4331  1C83  2C85               	goto	u3191
  4332  1C84  2C86               	goto	u3190
  4333  1C85                     u3191:
  4334  1C85  2CBD               	goto	l2425
  4335  1C86                     u3190:
  4336  1C86                     l2407:
  4337  1C86  01AB               	clrf	___lwdiv@counter
  4338  1C87  0AAB               	incf	___lwdiv@counter,f
  4339  1C88  2C94               	goto	l2413
  4340  1C89                     l2409:
  4341  1C89  3001               	movlw	1
  4342  1C8A                     u3205:
  4343  1C8A  1003               	clrc
  4344  1C8B  0DA4               	rlf	___lwdiv@divisor,f
  4345  1C8C  0DA5               	rlf	___lwdiv@divisor+1,f
  4346  1C8D  3EFF               	addlw	-1
  4347  1C8E  1D03               	skipz
  4348  1C8F  2C8A               	goto	u3205
  4349  1C90                     l2411:
  4350  1C90  3001               	movlw	1
  4351  1C91  00A8               	movwf	??___lwdiv
  4352  1C92  0828               	movf	??___lwdiv,w
  4353  1C93  07AB               	addwf	___lwdiv@counter,f
  4354  1C94                     l2413:
  4355  1C94  1FA5               	btfss	___lwdiv@divisor+1,7
  4356  1C95  2C97               	goto	u3211
  4357  1C96  2C98               	goto	u3210
  4358  1C97                     u3211:
  4359  1C97  2C89               	goto	l2409
  4360  1C98                     u3210:
  4361  1C98                     l2415:
  4362  1C98  3001               	movlw	1
  4363  1C99                     u3225:
  4364  1C99  1003               	clrc
  4365  1C9A  0DA9               	rlf	___lwdiv@quotient,f
  4366  1C9B  0DAA               	rlf	___lwdiv@quotient+1,f
  4367  1C9C  3EFF               	addlw	-1
  4368  1C9D  1D03               	skipz
  4369  1C9E  2C99               	goto	u3225
  4370  1C9F  0825               	movf	___lwdiv@divisor+1,w
  4371  1CA0  0227               	subwf	___lwdiv@dividend+1,w
  4372  1CA1  1D03               	skipz
  4373  1CA2  2CA5               	goto	u3235
  4374  1CA3  0824               	movf	___lwdiv@divisor,w
  4375  1CA4  0226               	subwf	___lwdiv@dividend,w
  4376  1CA5                     u3235:
  4377  1CA5  1C03               	skipc
  4378  1CA6  2CA8               	goto	u3231
  4379  1CA7  2CA9               	goto	u3230
  4380  1CA8                     u3231:
  4381  1CA8  2CB0               	goto	l2421
  4382  1CA9                     u3230:
  4383  1CA9                     l2417:
  4384  1CA9  0824               	movf	___lwdiv@divisor,w
  4385  1CAA  02A6               	subwf	___lwdiv@dividend,f
  4386  1CAB  0825               	movf	___lwdiv@divisor+1,w
  4387  1CAC  1C03               	skipc
  4388  1CAD  03A7               	decf	___lwdiv@dividend+1,f
  4389  1CAE  02A7               	subwf	___lwdiv@dividend+1,f
  4390  1CAF                     l2419:
  4391  1CAF  1429               	bsf	___lwdiv@quotient,0
  4392  1CB0                     l2421:
  4393  1CB0  3001               	movlw	1
  4394  1CB1                     u3245:
  4395  1CB1  1003               	clrc
  4396  1CB2  0CA5               	rrf	___lwdiv@divisor+1,f
  4397  1CB3  0CA4               	rrf	___lwdiv@divisor,f
  4398  1CB4  3EFF               	addlw	-1
  4399  1CB5  1D03               	skipz
  4400  1CB6  2CB1               	goto	u3245
  4401  1CB7                     l2423:
  4402  1CB7  3001               	movlw	1
  4403  1CB8  02AB               	subwf	___lwdiv@counter,f
  4404  1CB9  1D03               	btfss	3,2
  4405  1CBA  2CBC               	goto	u3251
  4406  1CBB  2CBD               	goto	u3250
  4407  1CBC                     u3251:
  4408  1CBC  2C98               	goto	l2415
  4409  1CBD                     u3250:
  4410  1CBD                     l2425:
  4411  1CBD  082A               	movf	___lwdiv@quotient+1,w
  4412  1CBE  00A5               	movwf	?___lwdiv+1
  4413  1CBF  0829               	movf	___lwdiv@quotient,w
  4414  1CC0  00A4               	movwf	?___lwdiv
  4415  1CC1                     l704:
  4416  1CC1  0008               	return
  4417  1CC2                     __end_of___lwdiv:
  4418                           
  4419                           	psect	text9
  4420  10B1                     __ptext9:	
  4421 ;; *************** function __tdiv_to_l_ *****************
  4422 ;; Defined at:
  4423 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  f1              4    0[BANK0 ] float 
  4426 ;;  f2              4    4[BANK0 ] float 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  quot            4   12[BANK0 ] unsigned long 
  4429 ;;  exp1            1   17[BANK0 ] unsigned char 
  4430 ;;  cntr            1   16[BANK0 ] unsigned char 
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  4    0[BANK0 ] unsigned long 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4440 ;;      Params:         0       8       0       0       0
  4441 ;;      Locals:         0       6       0       0       0
  4442 ;;      Temps:          0       4       0       0       0
  4443 ;;      Totals:         0      18       0       0       0
  4444 ;;Total ram usage:       18 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    3
  4447 ;; This function calls:
  4448 ;;		Nothing
  4449 ;; This function is called by:
  4450 ;;		_sprintf
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           
  4455                           ;psect for function __tdiv_to_l_
  4456  10B1                     __tdiv_to_l_:
  4457  10B1                     l3957:	
  4458                           ;incstack = 0
  4459                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4460                           
  4461  10B1  1283               	bcf	3,5	;RP0=0, select bank0
  4462  10B2  1303               	bcf	3,6	;RP1=0, select bank0
  4463  10B3  0820               	movf	__tdiv_to_l_@f1,w
  4464  10B4  00A8               	movwf	??__tdiv_to_l_
  4465  10B5  0821               	movf	__tdiv_to_l_@f1+1,w
  4466  10B6  00A9               	movwf	??__tdiv_to_l_+1
  4467  10B7  0822               	movf	__tdiv_to_l_@f1+2,w
  4468  10B8  00AA               	movwf	??__tdiv_to_l_+2
  4469  10B9  1003               	clrc
  4470  10BA  0D29               	rlf	??__tdiv_to_l_+1,w
  4471  10BB  0D2A               	rlf	??__tdiv_to_l_+2,w
  4472  10BC  00AB               	movwf	??__tdiv_to_l_+3
  4473  10BD  082B               	movf	??__tdiv_to_l_+3,w
  4474  10BE  00B1               	movwf	__tdiv_to_l_@exp1
  4475  10BF  0831               	movf	__tdiv_to_l_@exp1,w
  4476  10C0  1D03               	btfss	3,2
  4477  10C1  28C3               	goto	u6761
  4478  10C2  28C4               	goto	u6760
  4479  10C3                     u6761:
  4480  10C3  28CD               	goto	l3963
  4481  10C4                     u6760:
  4482  10C4                     l3959:
  4483  10C4  3000               	movlw	0
  4484  10C5  00A3               	movwf	?__tdiv_to_l_+3
  4485  10C6  3000               	movlw	0
  4486  10C7  00A2               	movwf	?__tdiv_to_l_+2
  4487  10C8  3000               	movlw	0
  4488  10C9  00A1               	movwf	?__tdiv_to_l_+1
  4489  10CA  3000               	movlw	0
  4490  10CB  00A0               	movwf	?__tdiv_to_l_
  4491  10CC  296D               	goto	l615
  4492  10CD                     l3963:
  4493  10CD  0824               	movf	__tdiv_to_l_@f2,w
  4494  10CE  00A8               	movwf	??__tdiv_to_l_
  4495  10CF  0825               	movf	__tdiv_to_l_@f2+1,w
  4496  10D0  00A9               	movwf	??__tdiv_to_l_+1
  4497  10D1  0826               	movf	__tdiv_to_l_@f2+2,w
  4498  10D2  00AA               	movwf	??__tdiv_to_l_+2
  4499  10D3  1003               	clrc
  4500  10D4  0D29               	rlf	??__tdiv_to_l_+1,w
  4501  10D5  0D2A               	rlf	??__tdiv_to_l_+2,w
  4502  10D6  00AB               	movwf	??__tdiv_to_l_+3
  4503  10D7  082B               	movf	??__tdiv_to_l_+3,w
  4504  10D8  00B0               	movwf	__tdiv_to_l_@cntr
  4505  10D9  0830               	movf	__tdiv_to_l_@cntr,w
  4506  10DA  1D03               	btfss	3,2
  4507  10DB  28DD               	goto	u6771
  4508  10DC  28DE               	goto	u6770
  4509  10DD                     u6771:
  4510  10DD  28DF               	goto	l616
  4511  10DE                     u6770:
  4512  10DE  28C4               	goto	l3959
  4513  10DF                     l616:
  4514  10DF  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4515  10E0                     l3969:
  4516  10E0  30FF               	movlw	255
  4517  10E1  05A0               	andwf	__tdiv_to_l_@f1,f
  4518  10E2  30FF               	movlw	255
  4519  10E3  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4520  10E4  3000               	movlw	0
  4521  10E5  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4522  10E6                     l3971:
  4523  10E6  17A5               	bsf	__tdiv_to_l_@f2+1,7
  4524  10E7  30FF               	movlw	255
  4525  10E8  05A4               	andwf	__tdiv_to_l_@f2,f
  4526  10E9  30FF               	movlw	255
  4527  10EA  05A5               	andwf	__tdiv_to_l_@f2+1,f
  4528  10EB  3000               	movlw	0
  4529  10EC  05A6               	andwf	__tdiv_to_l_@f2+2,f
  4530  10ED  3000               	movlw	0
  4531  10EE  00AF               	movwf	__tdiv_to_l_@quot+3
  4532  10EF  3000               	movlw	0
  4533  10F0  00AE               	movwf	__tdiv_to_l_@quot+2
  4534  10F1  3000               	movlw	0
  4535  10F2  00AD               	movwf	__tdiv_to_l_@quot+1
  4536  10F3  3000               	movlw	0
  4537  10F4  00AC               	movwf	__tdiv_to_l_@quot
  4538  10F5                     l3973:
  4539  10F5  307F               	movlw	127
  4540  10F6  02B1               	subwf	__tdiv_to_l_@exp1,f
  4541  10F7                     l3975:
  4542  10F7  3098               	movlw	152
  4543  10F8  0730               	addwf	__tdiv_to_l_@cntr,w
  4544  10F9  00A8               	movwf	??__tdiv_to_l_
  4545  10FA  0828               	movf	??__tdiv_to_l_,w
  4546  10FB  02B1               	subwf	__tdiv_to_l_@exp1,f
  4547  10FC  3018               	movlw	24
  4548  10FD  00A8               	movwf	??__tdiv_to_l_
  4549  10FE  0828               	movf	??__tdiv_to_l_,w
  4550  10FF  00B0               	movwf	__tdiv_to_l_@cntr
  4551  1100                     l3977:
  4552  1100  3001               	movlw	1
  4553  1101  00A8               	movwf	??__tdiv_to_l_
  4554  1102                     u6785:
  4555  1102  1003               	clrc
  4556  1103  0DAC               	rlf	__tdiv_to_l_@quot,f
  4557  1104  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  4558  1105  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  4559  1106  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  4560  1107  0BA8               	decfsz	??__tdiv_to_l_,f
  4561  1108  2902               	goto	u6785
  4562  1109                     l3979:
  4563  1109  0826               	movf	__tdiv_to_l_@f2+2,w
  4564  110A  0222               	subwf	__tdiv_to_l_@f1+2,w
  4565  110B  1D03               	skipz
  4566  110C  2913               	goto	u6795
  4567  110D  0825               	movf	__tdiv_to_l_@f2+1,w
  4568  110E  0221               	subwf	__tdiv_to_l_@f1+1,w
  4569  110F  1D03               	skipz
  4570  1110  2913               	goto	u6795
  4571  1111  0824               	movf	__tdiv_to_l_@f2,w
  4572  1112  0220               	subwf	__tdiv_to_l_@f1,w
  4573  1113                     u6795:
  4574  1113  1C03               	skipc
  4575  1114  2916               	goto	u6791
  4576  1115  2917               	goto	u6790
  4577  1116                     u6791:
  4578  1116  2922               	goto	l3985
  4579  1117                     u6790:
  4580  1117                     l3981:
  4581  1117  0824               	movf	__tdiv_to_l_@f2,w
  4582  1118  02A0               	subwf	__tdiv_to_l_@f1,f
  4583  1119  0825               	movf	__tdiv_to_l_@f2+1,w
  4584  111A  1C03               	skipc
  4585  111B  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  4586  111C  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4587  111D  0826               	movf	__tdiv_to_l_@f2+2,w
  4588  111E  1C03               	skipc
  4589  111F  0A26               	incf	__tdiv_to_l_@f2+2,w
  4590  1120  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4591  1121                     l3983:
  4592  1121  142C               	bsf	__tdiv_to_l_@quot,0
  4593  1122                     l3985:
  4594  1122  3001               	movlw	1
  4595  1123                     u6805:
  4596  1123  1003               	clrc
  4597  1124  0DA0               	rlf	__tdiv_to_l_@f1,f
  4598  1125  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4599  1126  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4600  1127  3EFF               	addlw	-1
  4601  1128  1D03               	skipz
  4602  1129  2923               	goto	u6805
  4603  112A                     l3987:
  4604  112A  3001               	movlw	1
  4605  112B  02B0               	subwf	__tdiv_to_l_@cntr,f
  4606  112C  1D03               	btfss	3,2
  4607  112D  292F               	goto	u6811
  4608  112E  2930               	goto	u6810
  4609  112F                     u6811:
  4610  112F  2900               	goto	l3977
  4611  1130                     u6810:
  4612  1130                     l619:
  4613  1130  1FB1               	btfss	__tdiv_to_l_@exp1,7
  4614  1131  2933               	goto	u6821
  4615  1132  2934               	goto	u6820
  4616  1133                     u6821:
  4617  1133  294E               	goto	l3997
  4618  1134                     u6820:
  4619  1134                     l3989:
  4620  1134  0831               	movf	__tdiv_to_l_@exp1,w
  4621  1135  3A80               	xorlw	128
  4622  1136  3E97               	addlw	151
  4623  1137  1803               	skipnc
  4624  1138  293A               	goto	u6831
  4625  1139  293B               	goto	u6830
  4626  113A                     u6831:
  4627  113A  293C               	goto	l3995
  4628  113B                     u6830:
  4629  113B  28C4               	goto	l3959
  4630  113C                     l3995:
  4631  113C  3001               	movlw	1
  4632  113D                     u6845:
  4633  113D  1003               	clrc
  4634  113E  0CAF               	rrf	__tdiv_to_l_@quot+3,f
  4635  113F  0CAE               	rrf	__tdiv_to_l_@quot+2,f
  4636  1140  0CAD               	rrf	__tdiv_to_l_@quot+1,f
  4637  1141  0CAC               	rrf	__tdiv_to_l_@quot,f
  4638  1142  3EFF               	addlw	-1
  4639  1143  1D03               	skipz
  4640  1144  293D               	goto	u6845
  4641  1145  3001               	movlw	1
  4642  1146  00A8               	movwf	??__tdiv_to_l_
  4643  1147  0828               	movf	??__tdiv_to_l_,w
  4644  1148  07B1               	addwf	__tdiv_to_l_@exp1,f
  4645  1149  1D03               	btfss	3,2
  4646  114A  294C               	goto	u6851
  4647  114B  294D               	goto	u6850
  4648  114C                     u6851:
  4649  114C  293C               	goto	l3995
  4650  114D                     u6850:
  4651  114D  2965               	goto	l4005
  4652  114E                     l3997:
  4653  114E  3018               	movlw	24
  4654  114F  0231               	subwf	__tdiv_to_l_@exp1,w
  4655  1150  1C03               	skipc
  4656  1151  2953               	goto	u6861
  4657  1152  2954               	goto	u6860
  4658  1153                     u6861:
  4659  1153  2960               	goto	l626
  4660  1154                     u6860:
  4661  1154  28C4               	goto	l3959
  4662  1155                     l4003:
  4663  1155  3001               	movlw	1
  4664  1156  00A8               	movwf	??__tdiv_to_l_
  4665  1157                     u6875:
  4666  1157  1003               	clrc
  4667  1158  0DAC               	rlf	__tdiv_to_l_@quot,f
  4668  1159  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  4669  115A  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  4670  115B  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  4671  115C  0BA8               	decfsz	??__tdiv_to_l_,f
  4672  115D  2957               	goto	u6875
  4673  115E  3001               	movlw	1
  4674  115F  02B1               	subwf	__tdiv_to_l_@exp1,f
  4675  1160                     l626:
  4676  1160  0831               	movf	__tdiv_to_l_@exp1,w
  4677  1161  1D03               	btfss	3,2
  4678  1162  2964               	goto	u6881
  4679  1163  2965               	goto	u6880
  4680  1164                     u6881:
  4681  1164  2955               	goto	l4003
  4682  1165                     u6880:
  4683  1165                     l4005:
  4684  1165  082F               	movf	__tdiv_to_l_@quot+3,w
  4685  1166  00A3               	movwf	?__tdiv_to_l_+3
  4686  1167  082E               	movf	__tdiv_to_l_@quot+2,w
  4687  1168  00A2               	movwf	?__tdiv_to_l_+2
  4688  1169  082D               	movf	__tdiv_to_l_@quot+1,w
  4689  116A  00A1               	movwf	?__tdiv_to_l_+1
  4690  116B  082C               	movf	__tdiv_to_l_@quot,w
  4691  116C  00A0               	movwf	?__tdiv_to_l_
  4692  116D                     l615:
  4693  116D  0008               	return
  4694  116E                     __end_of__tdiv_to_l_:
  4695                           
  4696                           	psect	text10
  4697  116E                     __ptext10:	
  4698 ;; *************** function __div_to_l_ *****************
  4699 ;; Defined at:
  4700 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  f1              4    0[BANK0 ] unsigned long 
  4703 ;;  f2              4    4[BANK0 ] unsigned long 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  quot            4    8[BANK0 ] unsigned long 
  4706 ;;  exp1            1   13[BANK0 ] unsigned char 
  4707 ;;  cntr            1   12[BANK0 ] unsigned char 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  4    0[BANK0 ] unsigned long 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4717 ;;      Params:         0       8       0       0       0
  4718 ;;      Locals:         0       6       0       0       0
  4719 ;;      Temps:          1       0       0       0       0
  4720 ;;      Totals:         1      14       0       0       0
  4721 ;;Total ram usage:       15 bytes
  4722 ;; Hardware stack levels used:    1
  4723 ;; Hardware stack levels required when called:    3
  4724 ;; This function calls:
  4725 ;;		Nothing
  4726 ;; This function is called by:
  4727 ;;		_sprintf
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           
  4732                           ;psect for function __div_to_l_
  4733  116E                     __div_to_l_:
  4734  116E                     l2937:	
  4735                           ;incstack = 0
  4736                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  4737                           
  4738  116E  1003               	clrc
  4739  116F  1283               	bcf	3,5	;RP0=0, select bank0
  4740  1170  1303               	bcf	3,6	;RP1=0, select bank0
  4741  1171  0D22               	rlf	__div_to_l_@f1+2,w
  4742  1172  0D23               	rlf	__div_to_l_@f1+3,w
  4743  1173  00F5               	movwf	??__div_to_l_
  4744  1174  0875               	movf	??__div_to_l_,w
  4745  1175  00AD               	movwf	__div_to_l_@exp1
  4746  1176  082D               	movf	__div_to_l_@exp1,w
  4747  1177  1D03               	btfss	3,2
  4748  1178  297A               	goto	u4561
  4749  1179  297B               	goto	u4560
  4750  117A                     u4561:
  4751  117A  2984               	goto	l2943
  4752  117B                     u4560:
  4753  117B                     l2939:
  4754  117B  3000               	movlw	0
  4755  117C  00A3               	movwf	?__div_to_l_+3
  4756  117D  3000               	movlw	0
  4757  117E  00A2               	movwf	?__div_to_l_+2
  4758  117F  3000               	movlw	0
  4759  1180  00A1               	movwf	?__div_to_l_+1
  4760  1181  3000               	movlw	0
  4761  1182  00A0               	movwf	?__div_to_l_
  4762  1183  2A2B               	goto	l568
  4763  1184                     l2943:
  4764  1184  1003               	clrc
  4765  1185  0D26               	rlf	__div_to_l_@f2+2,w
  4766  1186  0D27               	rlf	__div_to_l_@f2+3,w
  4767  1187  00F5               	movwf	??__div_to_l_
  4768  1188  0875               	movf	??__div_to_l_,w
  4769  1189  00AC               	movwf	__div_to_l_@cntr
  4770  118A  082C               	movf	__div_to_l_@cntr,w
  4771  118B  1D03               	btfss	3,2
  4772  118C  298E               	goto	u4571
  4773  118D  298F               	goto	u4570
  4774  118E                     u4571:
  4775  118E  2990               	goto	l569
  4776  118F                     u4570:
  4777  118F  297B               	goto	l2939
  4778  1190                     l569:
  4779  1190  17A2               	bsf	__div_to_l_@f1+2,7
  4780  1191                     l2949:
  4781  1191  30FF               	movlw	255
  4782  1192  05A0               	andwf	__div_to_l_@f1,f
  4783  1193  30FF               	movlw	255
  4784  1194  05A1               	andwf	__div_to_l_@f1+1,f
  4785  1195  30FF               	movlw	255
  4786  1196  05A2               	andwf	__div_to_l_@f1+2,f
  4787  1197  3000               	movlw	0
  4788  1198  05A3               	andwf	__div_to_l_@f1+3,f
  4789  1199                     l2951:
  4790  1199  17A6               	bsf	__div_to_l_@f2+2,7
  4791  119A  30FF               	movlw	255
  4792  119B  05A4               	andwf	__div_to_l_@f2,f
  4793  119C  30FF               	movlw	255
  4794  119D  05A5               	andwf	__div_to_l_@f2+1,f
  4795  119E  30FF               	movlw	255
  4796  119F  05A6               	andwf	__div_to_l_@f2+2,f
  4797  11A0  3000               	movlw	0
  4798  11A1  05A7               	andwf	__div_to_l_@f2+3,f
  4799  11A2  3000               	movlw	0
  4800  11A3  00AB               	movwf	__div_to_l_@quot+3
  4801  11A4  3000               	movlw	0
  4802  11A5  00AA               	movwf	__div_to_l_@quot+2
  4803  11A6  3000               	movlw	0
  4804  11A7  00A9               	movwf	__div_to_l_@quot+1
  4805  11A8  3000               	movlw	0
  4806  11A9  00A8               	movwf	__div_to_l_@quot
  4807  11AA                     l2953:
  4808  11AA  307F               	movlw	127
  4809  11AB  02AD               	subwf	__div_to_l_@exp1,f
  4810  11AC                     l2955:
  4811  11AC  30A0               	movlw	160
  4812  11AD  072C               	addwf	__div_to_l_@cntr,w
  4813  11AE  00F5               	movwf	??__div_to_l_
  4814  11AF  0875               	movf	??__div_to_l_,w
  4815  11B0  02AD               	subwf	__div_to_l_@exp1,f
  4816  11B1  3020               	movlw	32
  4817  11B2  00F5               	movwf	??__div_to_l_
  4818  11B3  0875               	movf	??__div_to_l_,w
  4819  11B4  00AC               	movwf	__div_to_l_@cntr
  4820  11B5                     l2957:
  4821  11B5  3001               	movlw	1
  4822  11B6  00F5               	movwf	??__div_to_l_
  4823  11B7                     u4585:
  4824  11B7  1003               	clrc
  4825  11B8  0DA8               	rlf	__div_to_l_@quot,f
  4826  11B9  0DA9               	rlf	__div_to_l_@quot+1,f
  4827  11BA  0DAA               	rlf	__div_to_l_@quot+2,f
  4828  11BB  0DAB               	rlf	__div_to_l_@quot+3,f
  4829  11BC  0BF5               	decfsz	??__div_to_l_,f
  4830  11BD  29B7               	goto	u4585
  4831  11BE                     l2959:
  4832  11BE  0827               	movf	__div_to_l_@f2+3,w
  4833  11BF  0223               	subwf	__div_to_l_@f1+3,w
  4834  11C0  1D03               	skipz
  4835  11C1  29CC               	goto	u4595
  4836  11C2  0826               	movf	__div_to_l_@f2+2,w
  4837  11C3  0222               	subwf	__div_to_l_@f1+2,w
  4838  11C4  1D03               	skipz
  4839  11C5  29CC               	goto	u4595
  4840  11C6  0825               	movf	__div_to_l_@f2+1,w
  4841  11C7  0221               	subwf	__div_to_l_@f1+1,w
  4842  11C8  1D03               	skipz
  4843  11C9  29CC               	goto	u4595
  4844  11CA  0824               	movf	__div_to_l_@f2,w
  4845  11CB  0220               	subwf	__div_to_l_@f1,w
  4846  11CC                     u4595:
  4847  11CC  1C03               	skipc
  4848  11CD  29CF               	goto	u4591
  4849  11CE  29D0               	goto	u4590
  4850  11CF                     u4591:
  4851  11CF  29DF               	goto	l2965
  4852  11D0                     u4590:
  4853  11D0                     l2961:
  4854  11D0  0824               	movf	__div_to_l_@f2,w
  4855  11D1  02A0               	subwf	__div_to_l_@f1,f
  4856  11D2  0825               	movf	__div_to_l_@f2+1,w
  4857  11D3  1C03               	skipc
  4858  11D4  0F25               	incfsz	__div_to_l_@f2+1,w
  4859  11D5  02A1               	subwf	__div_to_l_@f1+1,f
  4860  11D6  0826               	movf	__div_to_l_@f2+2,w
  4861  11D7  1C03               	skipc
  4862  11D8  0F26               	incfsz	__div_to_l_@f2+2,w
  4863  11D9  02A2               	subwf	__div_to_l_@f1+2,f
  4864  11DA  0827               	movf	__div_to_l_@f2+3,w
  4865  11DB  1C03               	skipc
  4866  11DC  0F27               	incfsz	__div_to_l_@f2+3,w
  4867  11DD  02A3               	subwf	__div_to_l_@f1+3,f
  4868  11DE                     l2963:
  4869  11DE  1428               	bsf	__div_to_l_@quot,0
  4870  11DF                     l2965:
  4871  11DF  3001               	movlw	1
  4872  11E0  00F5               	movwf	??__div_to_l_
  4873  11E1                     u4605:
  4874  11E1  1003               	clrc
  4875  11E2  0DA0               	rlf	__div_to_l_@f1,f
  4876  11E3  0DA1               	rlf	__div_to_l_@f1+1,f
  4877  11E4  0DA2               	rlf	__div_to_l_@f1+2,f
  4878  11E5  0DA3               	rlf	__div_to_l_@f1+3,f
  4879  11E6  0BF5               	decfsz	??__div_to_l_,f
  4880  11E7  29E1               	goto	u4605
  4881  11E8                     l2967:
  4882  11E8  3001               	movlw	1
  4883  11E9  02AC               	subwf	__div_to_l_@cntr,f
  4884  11EA  1D03               	btfss	3,2
  4885  11EB  29ED               	goto	u4611
  4886  11EC  29EE               	goto	u4610
  4887  11ED                     u4611:
  4888  11ED  29B5               	goto	l2957
  4889  11EE                     u4610:
  4890  11EE                     l572:
  4891  11EE  1FAD               	btfss	__div_to_l_@exp1,7
  4892  11EF  29F1               	goto	u4621
  4893  11F0  29F2               	goto	u4620
  4894  11F1                     u4621:
  4895  11F1  2A0C               	goto	l2977
  4896  11F2                     u4620:
  4897  11F2                     l2969:
  4898  11F2  082D               	movf	__div_to_l_@exp1,w
  4899  11F3  3A80               	xorlw	128
  4900  11F4  3E9F               	addlw	159
  4901  11F5  1803               	skipnc
  4902  11F6  29F8               	goto	u4631
  4903  11F7  29F9               	goto	u4630
  4904  11F8                     u4631:
  4905  11F8  29FA               	goto	l2975
  4906  11F9                     u4630:
  4907  11F9  297B               	goto	l2939
  4908  11FA                     l2975:
  4909  11FA  3001               	movlw	1
  4910  11FB                     u4645:
  4911  11FB  1003               	clrc
  4912  11FC  0CAB               	rrf	__div_to_l_@quot+3,f
  4913  11FD  0CAA               	rrf	__div_to_l_@quot+2,f
  4914  11FE  0CA9               	rrf	__div_to_l_@quot+1,f
  4915  11FF  0CA8               	rrf	__div_to_l_@quot,f
  4916  1200  3EFF               	addlw	-1
  4917  1201  1D03               	skipz
  4918  1202  29FB               	goto	u4645
  4919  1203  3001               	movlw	1
  4920  1204  00F5               	movwf	??__div_to_l_
  4921  1205  0875               	movf	??__div_to_l_,w
  4922  1206  07AD               	addwf	__div_to_l_@exp1,f
  4923  1207  1D03               	btfss	3,2
  4924  1208  2A0A               	goto	u4651
  4925  1209  2A0B               	goto	u4650
  4926  120A                     u4651:
  4927  120A  29FA               	goto	l2975
  4928  120B                     u4650:
  4929  120B  2A23               	goto	l2985
  4930  120C                     l2977:
  4931  120C  3020               	movlw	32
  4932  120D  022D               	subwf	__div_to_l_@exp1,w
  4933  120E  1C03               	skipc
  4934  120F  2A11               	goto	u4661
  4935  1210  2A12               	goto	u4660
  4936  1211                     u4661:
  4937  1211  2A1E               	goto	l579
  4938  1212                     u4660:
  4939  1212  297B               	goto	l2939
  4940  1213                     l2983:
  4941  1213  3001               	movlw	1
  4942  1214  00F5               	movwf	??__div_to_l_
  4943  1215                     u4675:
  4944  1215  1003               	clrc
  4945  1216  0DA8               	rlf	__div_to_l_@quot,f
  4946  1217  0DA9               	rlf	__div_to_l_@quot+1,f
  4947  1218  0DAA               	rlf	__div_to_l_@quot+2,f
  4948  1219  0DAB               	rlf	__div_to_l_@quot+3,f
  4949  121A  0BF5               	decfsz	??__div_to_l_,f
  4950  121B  2A15               	goto	u4675
  4951  121C  3001               	movlw	1
  4952  121D  02AD               	subwf	__div_to_l_@exp1,f
  4953  121E                     l579:
  4954  121E  082D               	movf	__div_to_l_@exp1,w
  4955  121F  1D03               	btfss	3,2
  4956  1220  2A22               	goto	u4681
  4957  1221  2A23               	goto	u4680
  4958  1222                     u4681:
  4959  1222  2A13               	goto	l2983
  4960  1223                     u4680:
  4961  1223                     l2985:
  4962  1223  082B               	movf	__div_to_l_@quot+3,w
  4963  1224  00A3               	movwf	?__div_to_l_+3
  4964  1225  082A               	movf	__div_to_l_@quot+2,w
  4965  1226  00A2               	movwf	?__div_to_l_+2
  4966  1227  0829               	movf	__div_to_l_@quot+1,w
  4967  1228  00A1               	movwf	?__div_to_l_+1
  4968  1229  0828               	movf	__div_to_l_@quot,w
  4969  122A  00A0               	movwf	?__div_to_l_
  4970  122B                     l568:
  4971  122B  0008               	return
  4972  122C                     __end_of__div_to_l_:
  4973                           
  4974                           	psect	text11
  4975  1AD3                     __ptext11:	
  4976 ;; *************** function ___wmul *****************
  4977 ;; Defined at:
  4978 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4979 ;; Parameters:    Size  Location     Type
  4980 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4981 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;  product         2    5[COMMON] unsigned int 
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  2    0[BANK0 ] unsigned int 
  4986 ;; Registers used:
  4987 ;;		wreg, status,2, status,0
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4993 ;;      Params:         0       4       0       0       0
  4994 ;;      Locals:         2       0       0       0       0
  4995 ;;      Temps:          0       0       0       0       0
  4996 ;;      Totals:         2       4       0       0       0
  4997 ;;Total ram usage:        6 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:    3
  5000 ;; This function calls:
  5001 ;;		Nothing
  5002 ;; This function is called by:
  5003 ;;		_sprintf
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007                           
  5008                           ;psect for function ___wmul
  5009  1AD3                     ___wmul:
  5010  1AD3                     l4009:	
  5011                           ;incstack = 0
  5012                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5013                           
  5014  1AD3  01F5               	clrf	___wmul@product
  5015  1AD4  01F6               	clrf	___wmul@product+1
  5016  1AD5                     l4011:
  5017  1AD5  1283               	bcf	3,5	;RP0=0, select bank0
  5018  1AD6  1303               	bcf	3,6	;RP1=0, select bank0
  5019  1AD7  1C20               	btfss	___wmul@multiplier,0
  5020  1AD8  2ADA               	goto	u6891
  5021  1AD9  2ADB               	goto	u6890
  5022  1ADA                     u6891:
  5023  1ADA  2AE1               	goto	l398
  5024  1ADB                     u6890:
  5025  1ADB                     l4013:
  5026  1ADB  0822               	movf	___wmul@multiplicand,w
  5027  1ADC  07F5               	addwf	___wmul@product,f
  5028  1ADD  1803               	skipnc
  5029  1ADE  0AF6               	incf	___wmul@product+1,f
  5030  1ADF  0823               	movf	___wmul@multiplicand+1,w
  5031  1AE0  07F6               	addwf	___wmul@product+1,f
  5032  1AE1                     l398:
  5033  1AE1  3001               	movlw	1
  5034  1AE2                     u6905:
  5035  1AE2  1003               	clrc
  5036  1AE3  0DA2               	rlf	___wmul@multiplicand,f
  5037  1AE4  0DA3               	rlf	___wmul@multiplicand+1,f
  5038  1AE5  3EFF               	addlw	-1
  5039  1AE6  1D03               	skipz
  5040  1AE7  2AE2               	goto	u6905
  5041  1AE8                     l4015:
  5042  1AE8  3001               	movlw	1
  5043  1AE9                     u6915:
  5044  1AE9  1003               	clrc
  5045  1AEA  0CA1               	rrf	___wmul@multiplier+1,f
  5046  1AEB  0CA0               	rrf	___wmul@multiplier,f
  5047  1AEC  3EFF               	addlw	-1
  5048  1AED  1D03               	skipz
  5049  1AEE  2AE9               	goto	u6915
  5050  1AEF                     l4017:
  5051  1AEF  0820               	movf	___wmul@multiplier,w
  5052  1AF0  0421               	iorwf	___wmul@multiplier+1,w
  5053  1AF1  1D03               	btfss	3,2
  5054  1AF2  2AF4               	goto	u6921
  5055  1AF3  2AF5               	goto	u6920
  5056  1AF4                     u6921:
  5057  1AF4  2AD5               	goto	l4011
  5058  1AF5                     u6920:
  5059  1AF5                     l4019:
  5060  1AF5  0876               	movf	___wmul@product+1,w
  5061  1AF6  00A1               	movwf	?___wmul+1
  5062  1AF7  0875               	movf	___wmul@product,w
  5063  1AF8  00A0               	movwf	?___wmul
  5064  1AF9                     l400:
  5065  1AF9  0008               	return
  5066  1AFA                     __end_of___wmul:
  5067                           
  5068                           	psect	text12
  5069  1DAF                     __ptext12:	
  5070 ;; *************** function ___llmod *****************
  5071 ;; Defined at:
  5072 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;  divisor         4    0[BANK0 ] unsigned long 
  5075 ;;  dividend        4    4[BANK0 ] unsigned long 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  counter         1    6[COMMON] unsigned char 
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  4    0[BANK0 ] unsigned long 
  5080 ;; Registers used:
  5081 ;;		wreg, status,2, status,0
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5087 ;;      Params:         0       8       0       0       0
  5088 ;;      Locals:         1       0       0       0       0
  5089 ;;      Temps:          1       0       0       0       0
  5090 ;;      Totals:         2       8       0       0       0
  5091 ;;Total ram usage:       10 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:    3
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_sprintf
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           
  5102                           ;psect for function ___llmod
  5103  1DAF                     ___llmod:
  5104  1DAF                     l3103:	
  5105                           ;incstack = 0
  5106                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5107                           
  5108  1DAF  1283               	bcf	3,5	;RP0=0, select bank0
  5109  1DB0  1303               	bcf	3,6	;RP1=0, select bank0
  5110  1DB1  0823               	movf	___llmod@divisor+3,w
  5111  1DB2  0422               	iorwf	___llmod@divisor+2,w
  5112  1DB3  0421               	iorwf	___llmod@divisor+1,w
  5113  1DB4  0420               	iorwf	___llmod@divisor,w
  5114  1DB5  1903               	skipnz
  5115  1DB6  2DB8               	goto	u5011
  5116  1DB7  2DB9               	goto	u5010
  5117  1DB8                     u5011:
  5118  1DB8  2DFC               	goto	l3119
  5119  1DB9                     u5010:
  5120  1DB9                     l3105:
  5121  1DB9  01F6               	clrf	___llmod@counter
  5122  1DBA  0AF6               	incf	___llmod@counter,f
  5123  1DBB  2DC9               	goto	l3109
  5124  1DBC                     l3107:
  5125  1DBC  3001               	movlw	1
  5126  1DBD  00F5               	movwf	??___llmod
  5127  1DBE                     u5025:
  5128  1DBE  1003               	clrc
  5129  1DBF  0DA0               	rlf	___llmod@divisor,f
  5130  1DC0  0DA1               	rlf	___llmod@divisor+1,f
  5131  1DC1  0DA2               	rlf	___llmod@divisor+2,f
  5132  1DC2  0DA3               	rlf	___llmod@divisor+3,f
  5133  1DC3  0BF5               	decfsz	??___llmod,f
  5134  1DC4  2DBE               	goto	u5025
  5135  1DC5  3001               	movlw	1
  5136  1DC6  00F5               	movwf	??___llmod
  5137  1DC7  0875               	movf	??___llmod,w
  5138  1DC8  07F6               	addwf	___llmod@counter,f
  5139  1DC9                     l3109:
  5140  1DC9  1FA3               	btfss	___llmod@divisor+3,7
  5141  1DCA  2DCC               	goto	u5031
  5142  1DCB  2DCD               	goto	u5030
  5143  1DCC                     u5031:
  5144  1DCC  2DBC               	goto	l3107
  5145  1DCD                     u5030:
  5146  1DCD                     l3111:
  5147  1DCD  0823               	movf	___llmod@divisor+3,w
  5148  1DCE  0227               	subwf	___llmod@dividend+3,w
  5149  1DCF  1D03               	skipz
  5150  1DD0  2DDB               	goto	u5045
  5151  1DD1  0822               	movf	___llmod@divisor+2,w
  5152  1DD2  0226               	subwf	___llmod@dividend+2,w
  5153  1DD3  1D03               	skipz
  5154  1DD4  2DDB               	goto	u5045
  5155  1DD5  0821               	movf	___llmod@divisor+1,w
  5156  1DD6  0225               	subwf	___llmod@dividend+1,w
  5157  1DD7  1D03               	skipz
  5158  1DD8  2DDB               	goto	u5045
  5159  1DD9  0820               	movf	___llmod@divisor,w
  5160  1DDA  0224               	subwf	___llmod@dividend,w
  5161  1DDB                     u5045:
  5162  1DDB  1C03               	skipc
  5163  1DDC  2DDE               	goto	u5041
  5164  1DDD  2DDF               	goto	u5040
  5165  1DDE                     u5041:
  5166  1DDE  2DED               	goto	l3115
  5167  1DDF                     u5040:
  5168  1DDF                     l3113:
  5169  1DDF  0820               	movf	___llmod@divisor,w
  5170  1DE0  02A4               	subwf	___llmod@dividend,f
  5171  1DE1  0821               	movf	___llmod@divisor+1,w
  5172  1DE2  1C03               	skipc
  5173  1DE3  0F21               	incfsz	___llmod@divisor+1,w
  5174  1DE4  02A5               	subwf	___llmod@dividend+1,f
  5175  1DE5  0822               	movf	___llmod@divisor+2,w
  5176  1DE6  1C03               	skipc
  5177  1DE7  0F22               	incfsz	___llmod@divisor+2,w
  5178  1DE8  02A6               	subwf	___llmod@dividend+2,f
  5179  1DE9  0823               	movf	___llmod@divisor+3,w
  5180  1DEA  1C03               	skipc
  5181  1DEB  0F23               	incfsz	___llmod@divisor+3,w
  5182  1DEC  02A7               	subwf	___llmod@dividend+3,f
  5183  1DED                     l3115:
  5184  1DED  3001               	movlw	1
  5185  1DEE                     u5055:
  5186  1DEE  1003               	clrc
  5187  1DEF  0CA3               	rrf	___llmod@divisor+3,f
  5188  1DF0  0CA2               	rrf	___llmod@divisor+2,f
  5189  1DF1  0CA1               	rrf	___llmod@divisor+1,f
  5190  1DF2  0CA0               	rrf	___llmod@divisor,f
  5191  1DF3  3EFF               	addlw	-1
  5192  1DF4  1D03               	skipz
  5193  1DF5  2DEE               	goto	u5055
  5194  1DF6                     l3117:
  5195  1DF6  3001               	movlw	1
  5196  1DF7  02F6               	subwf	___llmod@counter,f
  5197  1DF8  1D03               	btfss	3,2
  5198  1DF9  2DFB               	goto	u5061
  5199  1DFA  2DFC               	goto	u5060
  5200  1DFB                     u5061:
  5201  1DFB  2DCD               	goto	l3111
  5202  1DFC                     u5060:
  5203  1DFC                     l3119:
  5204  1DFC  0827               	movf	___llmod@dividend+3,w
  5205  1DFD  00A3               	movwf	?___llmod+3
  5206  1DFE  0826               	movf	___llmod@dividend+2,w
  5207  1DFF  00A2               	movwf	?___llmod+2
  5208  1E00  0825               	movf	___llmod@dividend+1,w
  5209  1E01  00A1               	movwf	?___llmod+1
  5210  1E02  0824               	movf	___llmod@dividend,w
  5211  1E03  00A0               	movwf	?___llmod
  5212  1E04                     l654:
  5213  1E04  0008               	return
  5214  1E05                     __end_of___llmod:
  5215                           
  5216                           	psect	text13
  5217  1E60                     __ptext13:	
  5218 ;; *************** function ___lldiv *****************
  5219 ;; Defined at:
  5220 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  divisor         4    0[BANK0 ] unsigned long 
  5223 ;;  dividend        4    4[BANK0 ] unsigned long 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  quotient        4    8[BANK0 ] unsigned long 
  5226 ;;  counter         1   12[BANK0 ] unsigned char 
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  4    0[BANK0 ] unsigned long 
  5229 ;; Registers used:
  5230 ;;		wreg, status,2, status,0
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5236 ;;      Params:         0       8       0       0       0
  5237 ;;      Locals:         0       5       0       0       0
  5238 ;;      Temps:          1       0       0       0       0
  5239 ;;      Totals:         1      13       0       0       0
  5240 ;;Total ram usage:       14 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; Hardware stack levels required when called:    3
  5243 ;; This function calls:
  5244 ;;		Nothing
  5245 ;; This function is called by:
  5246 ;;		_sprintf
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250                           
  5251                           ;psect for function ___lldiv
  5252  1E60                     ___lldiv:
  5253  1E60                     l3003:	
  5254                           ;incstack = 0
  5255                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5256                           
  5257  1E60  3000               	movlw	0
  5258  1E61  1283               	bcf	3,5	;RP0=0, select bank0
  5259  1E62  1303               	bcf	3,6	;RP1=0, select bank0
  5260  1E63  00AB               	movwf	___lldiv@quotient+3
  5261  1E64  3000               	movlw	0
  5262  1E65  00AA               	movwf	___lldiv@quotient+2
  5263  1E66  3000               	movlw	0
  5264  1E67  00A9               	movwf	___lldiv@quotient+1
  5265  1E68  3000               	movlw	0
  5266  1E69  00A8               	movwf	___lldiv@quotient
  5267  1E6A  0823               	movf	___lldiv@divisor+3,w
  5268  1E6B  0422               	iorwf	___lldiv@divisor+2,w
  5269  1E6C  0421               	iorwf	___lldiv@divisor+1,w
  5270  1E6D  0420               	iorwf	___lldiv@divisor,w
  5271  1E6E  1903               	skipnz
  5272  1E6F  2E71               	goto	u4731
  5273  1E70  2E72               	goto	u4730
  5274  1E71                     u4731:
  5275  1E71  2EBF               	goto	l3023
  5276  1E72                     u4730:
  5277  1E72                     l3005:
  5278  1E72  01AC               	clrf	___lldiv@counter
  5279  1E73  0AAC               	incf	___lldiv@counter,f
  5280  1E74  2E82               	goto	l3009
  5281  1E75                     l3007:
  5282  1E75  3001               	movlw	1
  5283  1E76  00F5               	movwf	??___lldiv
  5284  1E77                     u4745:
  5285  1E77  1003               	clrc
  5286  1E78  0DA0               	rlf	___lldiv@divisor,f
  5287  1E79  0DA1               	rlf	___lldiv@divisor+1,f
  5288  1E7A  0DA2               	rlf	___lldiv@divisor+2,f
  5289  1E7B  0DA3               	rlf	___lldiv@divisor+3,f
  5290  1E7C  0BF5               	decfsz	??___lldiv,f
  5291  1E7D  2E77               	goto	u4745
  5292  1E7E  3001               	movlw	1
  5293  1E7F  00F5               	movwf	??___lldiv
  5294  1E80  0875               	movf	??___lldiv,w
  5295  1E81  07AC               	addwf	___lldiv@counter,f
  5296  1E82                     l3009:
  5297  1E82  1FA3               	btfss	___lldiv@divisor+3,7
  5298  1E83  2E85               	goto	u4751
  5299  1E84  2E86               	goto	u4750
  5300  1E85                     u4751:
  5301  1E85  2E75               	goto	l3007
  5302  1E86                     u4750:
  5303  1E86                     l3011:
  5304  1E86  3001               	movlw	1
  5305  1E87  00F5               	movwf	??___lldiv
  5306  1E88                     u4765:
  5307  1E88  1003               	clrc
  5308  1E89  0DA8               	rlf	___lldiv@quotient,f
  5309  1E8A  0DA9               	rlf	___lldiv@quotient+1,f
  5310  1E8B  0DAA               	rlf	___lldiv@quotient+2,f
  5311  1E8C  0DAB               	rlf	___lldiv@quotient+3,f
  5312  1E8D  0BF5               	decfsz	??___lldiv,f
  5313  1E8E  2E88               	goto	u4765
  5314  1E8F                     l3013:
  5315  1E8F  0823               	movf	___lldiv@divisor+3,w
  5316  1E90  0227               	subwf	___lldiv@dividend+3,w
  5317  1E91  1D03               	skipz
  5318  1E92  2E9D               	goto	u4775
  5319  1E93  0822               	movf	___lldiv@divisor+2,w
  5320  1E94  0226               	subwf	___lldiv@dividend+2,w
  5321  1E95  1D03               	skipz
  5322  1E96  2E9D               	goto	u4775
  5323  1E97  0821               	movf	___lldiv@divisor+1,w
  5324  1E98  0225               	subwf	___lldiv@dividend+1,w
  5325  1E99  1D03               	skipz
  5326  1E9A  2E9D               	goto	u4775
  5327  1E9B  0820               	movf	___lldiv@divisor,w
  5328  1E9C  0224               	subwf	___lldiv@dividend,w
  5329  1E9D                     u4775:
  5330  1E9D  1C03               	skipc
  5331  1E9E  2EA0               	goto	u4771
  5332  1E9F  2EA1               	goto	u4770
  5333  1EA0                     u4771:
  5334  1EA0  2EB0               	goto	l3019
  5335  1EA1                     u4770:
  5336  1EA1                     l3015:
  5337  1EA1  0820               	movf	___lldiv@divisor,w
  5338  1EA2  02A4               	subwf	___lldiv@dividend,f
  5339  1EA3  0821               	movf	___lldiv@divisor+1,w
  5340  1EA4  1C03               	skipc
  5341  1EA5  0F21               	incfsz	___lldiv@divisor+1,w
  5342  1EA6  02A5               	subwf	___lldiv@dividend+1,f
  5343  1EA7  0822               	movf	___lldiv@divisor+2,w
  5344  1EA8  1C03               	skipc
  5345  1EA9  0F22               	incfsz	___lldiv@divisor+2,w
  5346  1EAA  02A6               	subwf	___lldiv@dividend+2,f
  5347  1EAB  0823               	movf	___lldiv@divisor+3,w
  5348  1EAC  1C03               	skipc
  5349  1EAD  0F23               	incfsz	___lldiv@divisor+3,w
  5350  1EAE  02A7               	subwf	___lldiv@dividend+3,f
  5351  1EAF                     l3017:
  5352  1EAF  1428               	bsf	___lldiv@quotient,0
  5353  1EB0                     l3019:
  5354  1EB0  3001               	movlw	1
  5355  1EB1                     u4785:
  5356  1EB1  1003               	clrc
  5357  1EB2  0CA3               	rrf	___lldiv@divisor+3,f
  5358  1EB3  0CA2               	rrf	___lldiv@divisor+2,f
  5359  1EB4  0CA1               	rrf	___lldiv@divisor+1,f
  5360  1EB5  0CA0               	rrf	___lldiv@divisor,f
  5361  1EB6  3EFF               	addlw	-1
  5362  1EB7  1D03               	skipz
  5363  1EB8  2EB1               	goto	u4785
  5364  1EB9                     l3021:
  5365  1EB9  3001               	movlw	1
  5366  1EBA  02AC               	subwf	___lldiv@counter,f
  5367  1EBB  1D03               	btfss	3,2
  5368  1EBC  2EBE               	goto	u4791
  5369  1EBD  2EBF               	goto	u4790
  5370  1EBE                     u4791:
  5371  1EBE  2E86               	goto	l3011
  5372  1EBF                     u4790:
  5373  1EBF                     l3023:
  5374  1EBF  082B               	movf	___lldiv@quotient+3,w
  5375  1EC0  00A3               	movwf	?___lldiv+3
  5376  1EC1  082A               	movf	___lldiv@quotient+2,w
  5377  1EC2  00A2               	movwf	?___lldiv+2
  5378  1EC3  0829               	movf	___lldiv@quotient+1,w
  5379  1EC4  00A1               	movwf	?___lldiv+1
  5380  1EC5  0828               	movf	___lldiv@quotient,w
  5381  1EC6  00A0               	movwf	?___lldiv
  5382  1EC7                     l434:
  5383  1EC7  0008               	return
  5384  1EC8                     __end_of___lldiv:
  5385                           
  5386                           	psect	text14
  5387  1EC8                     __ptext14:	
  5388 ;; *************** function ___fltol *****************
  5389 ;; Defined at:
  5390 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  f1              4   59[BANK0 ] unsigned long 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  exp1            1   69[BANK0 ] unsigned char 
  5395 ;;  sign1           1   68[BANK0 ] unsigned char 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  4   59[BANK0 ] long 
  5398 ;; Registers used:
  5399 ;;		wreg, status,2, status,0
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5405 ;;      Params:         0       4       0       0       0
  5406 ;;      Locals:         0       2       0       0       0
  5407 ;;      Temps:          0       5       0       0       0
  5408 ;;      Totals:         0      11       0       0       0
  5409 ;;Total ram usage:       11 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; Hardware stack levels required when called:    3
  5412 ;; This function calls:
  5413 ;;		Nothing
  5414 ;; This function is called by:
  5415 ;;		_sprintf
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           
  5420                           ;psect for function ___fltol
  5421  1EC8                     ___fltol:
  5422  1EC8                     l3067:	
  5423                           ;incstack = 0
  5424                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5425                           
  5426  1EC8  1003               	clrc
  5427  1EC9  1283               	bcf	3,5	;RP0=0, select bank0
  5428  1ECA  1303               	bcf	3,6	;RP1=0, select bank0
  5429  1ECB  0D5D               	rlf	___fltol@f1+2,w
  5430  1ECC  0D5E               	rlf	___fltol@f1+3,w
  5431  1ECD  00DF               	movwf	??___fltol
  5432  1ECE  085F               	movf	??___fltol,w
  5433  1ECF  00E5               	movwf	___fltol@exp1
  5434  1ED0  0865               	movf	___fltol@exp1,w
  5435  1ED1  1D03               	btfss	3,2
  5436  1ED2  2ED4               	goto	u4911
  5437  1ED3  2ED5               	goto	u4910
  5438  1ED4                     u4911:
  5439  1ED4  2EDE               	goto	l3073
  5440  1ED5                     u4910:
  5441  1ED5                     l3069:
  5442  1ED5  3000               	movlw	0
  5443  1ED6  00DE               	movwf	?___fltol+3
  5444  1ED7  3000               	movlw	0
  5445  1ED8  00DD               	movwf	?___fltol+2
  5446  1ED9  3000               	movlw	0
  5447  1EDA  00DC               	movwf	?___fltol+1
  5448  1EDB  3000               	movlw	0
  5449  1EDC  00DB               	movwf	?___fltol
  5450  1EDD  2F43               	goto	l601
  5451  1EDE                     l3073:
  5452  1EDE  085B               	movf	___fltol@f1,w
  5453  1EDF  00DF               	movwf	??___fltol
  5454  1EE0  085C               	movf	___fltol@f1+1,w
  5455  1EE1  00E0               	movwf	??___fltol+1
  5456  1EE2  085D               	movf	___fltol@f1+2,w
  5457  1EE3  00E1               	movwf	??___fltol+2
  5458  1EE4  085E               	movf	___fltol@f1+3,w
  5459  1EE5  00E2               	movwf	??___fltol+3
  5460  1EE6  301F               	movlw	31
  5461  1EE7                     u4925:
  5462  1EE7  1003               	clrc
  5463  1EE8  0CE2               	rrf	??___fltol+3,f
  5464  1EE9  0CE1               	rrf	??___fltol+2,f
  5465  1EEA  0CE0               	rrf	??___fltol+1,f
  5466  1EEB  0CDF               	rrf	??___fltol,f
  5467  1EEC                     u4920:
  5468  1EEC  3EFF               	addlw	-1
  5469  1EED  1D03               	skipz
  5470  1EEE  2EE7               	goto	u4925
  5471  1EEF  085F               	movf	??___fltol,w
  5472  1EF0  00E3               	movwf	??___fltol+4
  5473  1EF1  0863               	movf	??___fltol+4,w
  5474  1EF2  00E4               	movwf	___fltol@sign1
  5475  1EF3                     l3075:
  5476  1EF3  17DD               	bsf	___fltol@f1+2,7
  5477  1EF4                     l3077:
  5478  1EF4  30FF               	movlw	255
  5479  1EF5  05DB               	andwf	___fltol@f1,f
  5480  1EF6  30FF               	movlw	255
  5481  1EF7  05DC               	andwf	___fltol@f1+1,f
  5482  1EF8  30FF               	movlw	255
  5483  1EF9  05DD               	andwf	___fltol@f1+2,f
  5484  1EFA  3000               	movlw	0
  5485  1EFB  05DE               	andwf	___fltol@f1+3,f
  5486  1EFC                     l3079:
  5487  1EFC  3096               	movlw	150
  5488  1EFD  02E5               	subwf	___fltol@exp1,f
  5489  1EFE                     l3081:
  5490  1EFE  1FE5               	btfss	___fltol@exp1,7
  5491  1EFF  2F01               	goto	u4931
  5492  1F00  2F02               	goto	u4930
  5493  1F01                     u4931:
  5494  1F01  2F1C               	goto	l3091
  5495  1F02                     u4930:
  5496  1F02                     l3083:
  5497  1F02  0865               	movf	___fltol@exp1,w
  5498  1F03  3A80               	xorlw	128
  5499  1F04  3E97               	addlw	151
  5500  1F05  1803               	skipnc
  5501  1F06  2F08               	goto	u4941
  5502  1F07  2F09               	goto	u4940
  5503  1F08                     u4941:
  5504  1F08  2F0A               	goto	l3089
  5505  1F09                     u4940:
  5506  1F09  2ED5               	goto	l3069
  5507  1F0A                     l3089:
  5508  1F0A  3001               	movlw	1
  5509  1F0B                     u4955:
  5510  1F0B  1003               	clrc
  5511  1F0C  0CDE               	rrf	___fltol@f1+3,f
  5512  1F0D  0CDD               	rrf	___fltol@f1+2,f
  5513  1F0E  0CDC               	rrf	___fltol@f1+1,f
  5514  1F0F  0CDB               	rrf	___fltol@f1,f
  5515  1F10  3EFF               	addlw	-1
  5516  1F11  1D03               	skipz
  5517  1F12  2F0B               	goto	u4955
  5518  1F13  3001               	movlw	1
  5519  1F14  00DF               	movwf	??___fltol
  5520  1F15  085F               	movf	??___fltol,w
  5521  1F16  07E5               	addwf	___fltol@exp1,f
  5522  1F17  1D03               	btfss	3,2
  5523  1F18  2F1A               	goto	u4961
  5524  1F19  2F1B               	goto	u4960
  5525  1F1A                     u4961:
  5526  1F1A  2F0A               	goto	l3089
  5527  1F1B                     u4960:
  5528  1F1B  2F33               	goto	l3099
  5529  1F1C                     l3091:
  5530  1F1C  3020               	movlw	32
  5531  1F1D  0265               	subwf	___fltol@exp1,w
  5532  1F1E  1C03               	skipc
  5533  1F1F  2F21               	goto	u4971
  5534  1F20  2F22               	goto	u4970
  5535  1F21                     u4971:
  5536  1F21  2F2E               	goto	l608
  5537  1F22                     u4970:
  5538  1F22  2ED5               	goto	l3069
  5539  1F23                     l3097:
  5540  1F23  3001               	movlw	1
  5541  1F24  00DF               	movwf	??___fltol
  5542  1F25                     u4985:
  5543  1F25  1003               	clrc
  5544  1F26  0DDB               	rlf	___fltol@f1,f
  5545  1F27  0DDC               	rlf	___fltol@f1+1,f
  5546  1F28  0DDD               	rlf	___fltol@f1+2,f
  5547  1F29  0DDE               	rlf	___fltol@f1+3,f
  5548  1F2A  0BDF               	decfsz	??___fltol,f
  5549  1F2B  2F25               	goto	u4985
  5550  1F2C  3001               	movlw	1
  5551  1F2D  02E5               	subwf	___fltol@exp1,f
  5552  1F2E                     l608:
  5553  1F2E  0865               	movf	___fltol@exp1,w
  5554  1F2F  1D03               	btfss	3,2
  5555  1F30  2F32               	goto	u4991
  5556  1F31  2F33               	goto	u4990
  5557  1F32                     u4991:
  5558  1F32  2F23               	goto	l3097
  5559  1F33                     u4990:
  5560  1F33                     l3099:
  5561  1F33  0864               	movf	___fltol@sign1,w
  5562  1F34  1903               	btfsc	3,2
  5563  1F35  2F37               	goto	u5001
  5564  1F36  2F38               	goto	u5000
  5565  1F37                     u5001:
  5566  1F37  2F43               	goto	l611
  5567  1F38                     u5000:
  5568  1F38                     l3101:
  5569  1F38  09DB               	comf	___fltol@f1,f
  5570  1F39  09DC               	comf	___fltol@f1+1,f
  5571  1F3A  09DD               	comf	___fltol@f1+2,f
  5572  1F3B  09DE               	comf	___fltol@f1+3,f
  5573  1F3C  0ADB               	incf	___fltol@f1,f
  5574  1F3D  1903               	skipnz
  5575  1F3E  0ADC               	incf	___fltol@f1+1,f
  5576  1F3F  1903               	skipnz
  5577  1F40  0ADD               	incf	___fltol@f1+2,f
  5578  1F41  1903               	skipnz
  5579  1F42  0ADE               	incf	___fltol@f1+3,f
  5580  1F43                     l611:
  5581  1F43                     l601:
  5582  1F43  0008               	return
  5583  1F44                     __end_of___fltol:
  5584                           
  5585                           	psect	text15
  5586  1D5F                     __ptext15:	
  5587 ;; *************** function ___flsub *****************
  5588 ;; Defined at:
  5589 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;  a               4    0[BANK1 ] long 
  5592 ;;  b               4    4[BANK1 ] long 
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;		None
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  4    0[BANK1 ] long 
  5597 ;; Registers used:
  5598 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5604 ;;      Params:         0       0       8       0       0
  5605 ;;      Locals:         0       0       0       0       0
  5606 ;;      Temps:          0       0       0       0       0
  5607 ;;      Totals:         0       0       8       0       0
  5608 ;;Total ram usage:        8 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    4
  5611 ;; This function calls:
  5612 ;;		___fladd
  5613 ;; This function is called by:
  5614 ;;		_sprintf
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           
  5619                           ;psect for function ___flsub
  5620  1D5F                     ___flsub:
  5621  1D5F                     l3123:	
  5622                           ;incstack = 0
  5623                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5624                           
  5625  1D5F  3080               	movlw	128
  5626  1D60  1683               	bsf	3,5	;RP0=1, select bank1
  5627  1D61  1303               	bcf	3,6	;RP1=0, select bank1
  5628  1D62  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5629  1D63                     l3125:
  5630  1D63  0827               	movf	(___flsub@b+3)^(0+128),w
  5631  1D64  1283               	bcf	3,5	;RP0=0, select bank0
  5632  1D65  1303               	bcf	3,6	;RP1=0, select bank0
  5633  1D66  00DF               	movwf	___fladd@b+3
  5634  1D67  1683               	bsf	3,5	;RP0=1, select bank1
  5635  1D68  1303               	bcf	3,6	;RP1=0, select bank1
  5636  1D69  0826               	movf	(___flsub@b+2)^(0+128),w
  5637  1D6A  1283               	bcf	3,5	;RP0=0, select bank0
  5638  1D6B  1303               	bcf	3,6	;RP1=0, select bank0
  5639  1D6C  00DE               	movwf	___fladd@b+2
  5640  1D6D  1683               	bsf	3,5	;RP0=1, select bank1
  5641  1D6E  1303               	bcf	3,6	;RP1=0, select bank1
  5642  1D6F  0825               	movf	(___flsub@b+1)^(0+128),w
  5643  1D70  1283               	bcf	3,5	;RP0=0, select bank0
  5644  1D71  1303               	bcf	3,6	;RP1=0, select bank0
  5645  1D72  00DD               	movwf	___fladd@b+1
  5646  1D73  1683               	bsf	3,5	;RP0=1, select bank1
  5647  1D74  1303               	bcf	3,6	;RP1=0, select bank1
  5648  1D75  0824               	movf	___flsub@b^(0+128),w
  5649  1D76  1283               	bcf	3,5	;RP0=0, select bank0
  5650  1D77  1303               	bcf	3,6	;RP1=0, select bank0
  5651  1D78  00DC               	movwf	___fladd@b
  5652  1D79  1683               	bsf	3,5	;RP0=1, select bank1
  5653  1D7A  1303               	bcf	3,6	;RP1=0, select bank1
  5654  1D7B  0823               	movf	(___flsub@a+3)^(0+128),w
  5655  1D7C  1283               	bcf	3,5	;RP0=0, select bank0
  5656  1D7D  1303               	bcf	3,6	;RP1=0, select bank0
  5657  1D7E  00E3               	movwf	___fladd@a+3
  5658  1D7F  1683               	bsf	3,5	;RP0=1, select bank1
  5659  1D80  1303               	bcf	3,6	;RP1=0, select bank1
  5660  1D81  0822               	movf	(___flsub@a+2)^(0+128),w
  5661  1D82  1283               	bcf	3,5	;RP0=0, select bank0
  5662  1D83  1303               	bcf	3,6	;RP1=0, select bank0
  5663  1D84  00E2               	movwf	___fladd@a+2
  5664  1D85  1683               	bsf	3,5	;RP0=1, select bank1
  5665  1D86  1303               	bcf	3,6	;RP1=0, select bank1
  5666  1D87  0821               	movf	(___flsub@a+1)^(0+128),w
  5667  1D88  1283               	bcf	3,5	;RP0=0, select bank0
  5668  1D89  1303               	bcf	3,6	;RP1=0, select bank0
  5669  1D8A  00E1               	movwf	___fladd@a+1
  5670  1D8B  1683               	bsf	3,5	;RP0=1, select bank1
  5671  1D8C  1303               	bcf	3,6	;RP1=0, select bank1
  5672  1D8D  0820               	movf	___flsub@a^(0+128),w
  5673  1D8E  1283               	bcf	3,5	;RP0=0, select bank0
  5674  1D8F  1303               	bcf	3,6	;RP1=0, select bank0
  5675  1D90  00E0               	movwf	___fladd@a
  5676  1D91  160A  118A  222C  160A  158A  	fcall	___fladd
  5677  1D96  1283               	bcf	3,5	;RP0=0, select bank0
  5678  1D97  1303               	bcf	3,6	;RP1=0, select bank0
  5679  1D98  085F               	movf	?___fladd+3,w
  5680  1D99  1683               	bsf	3,5	;RP0=1, select bank1
  5681  1D9A  1303               	bcf	3,6	;RP1=0, select bank1
  5682  1D9B  00A3               	movwf	(?___flsub+3)^(0+128)
  5683  1D9C  1283               	bcf	3,5	;RP0=0, select bank0
  5684  1D9D  1303               	bcf	3,6	;RP1=0, select bank0
  5685  1D9E  085E               	movf	?___fladd+2,w
  5686  1D9F  1683               	bsf	3,5	;RP0=1, select bank1
  5687  1DA0  1303               	bcf	3,6	;RP1=0, select bank1
  5688  1DA1  00A2               	movwf	(?___flsub+2)^(0+128)
  5689  1DA2  1283               	bcf	3,5	;RP0=0, select bank0
  5690  1DA3  1303               	bcf	3,6	;RP1=0, select bank0
  5691  1DA4  085D               	movf	?___fladd+1,w
  5692  1DA5  1683               	bsf	3,5	;RP0=1, select bank1
  5693  1DA6  1303               	bcf	3,6	;RP1=0, select bank1
  5694  1DA7  00A1               	movwf	(?___flsub+1)^(0+128)
  5695  1DA8  1283               	bcf	3,5	;RP0=0, select bank0
  5696  1DA9  1303               	bcf	3,6	;RP1=0, select bank0
  5697  1DAA  085C               	movf	?___fladd,w
  5698  1DAB  1683               	bsf	3,5	;RP0=1, select bank1
  5699  1DAC  1303               	bcf	3,6	;RP1=0, select bank1
  5700  1DAD  00A0               	movwf	?___flsub^(0+128)
  5701  1DAE                     l771:
  5702  1DAE  0008               	return
  5703  1DAF                     __end_of___flsub:
  5704                           
  5705                           	psect	text16
  5706  122C                     __ptext16:	
  5707 ;; *************** function ___fladd *****************
  5708 ;; Defined at:
  5709 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  b               4   60[BANK0 ] long 
  5712 ;;  a               4   64[BANK0 ] long 
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;  grs             1   79[BANK0 ] unsigned char 
  5715 ;;  bexp            1   78[BANK0 ] unsigned char 
  5716 ;;  aexp            1   77[BANK0 ] unsigned char 
  5717 ;;  signs           1   76[BANK0 ] unsigned char 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  4   60[BANK0 ] unsigned char 
  5720 ;; Registers used:
  5721 ;;		wreg, status,2, status,0, btemp+1
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5727 ;;      Params:         0       8       0       0       0
  5728 ;;      Locals:         0       4       0       0       0
  5729 ;;      Temps:          0       8       0       0       0
  5730 ;;      Totals:         0      20       0       0       0
  5731 ;;Total ram usage:       20 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:    3
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		_sprintf
  5738 ;;		___flsub
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           
  5743                           ;psect for function ___fladd
  5744  122C                     ___fladd:
  5745  122C                     l2451:	
  5746                           ;incstack = 0
  5747                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5748                           
  5749  122C  1283               	bcf	3,5	;RP0=0, select bank0
  5750  122D  1303               	bcf	3,6	;RP1=0, select bank0
  5751  122E  085F               	movf	___fladd@b+3,w
  5752  122F  3980               	andlw	128
  5753  1230  00E4               	movwf	??___fladd
  5754  1231  0864               	movf	??___fladd,w
  5755  1232  00EC               	movwf	___fladd@signs
  5756  1233                     l2453:
  5757  1233  085F               	movf	___fladd@b+3,w
  5758  1234  00E4               	movwf	??___fladd
  5759  1235  0764               	addwf	??___fladd,w
  5760  1236  00E5               	movwf	??___fladd+1
  5761  1237  0865               	movf	??___fladd+1,w
  5762  1238  00EE               	movwf	___fladd@bexp
  5763  1239                     l2455:
  5764  1239  1FDE               	btfss	___fladd@b+2,7
  5765  123A  2A3C               	goto	u3321
  5766  123B  2A3D               	goto	u3320
  5767  123C                     u3321:
  5768  123C  2A3E               	goto	l2459
  5769  123D                     u3320:
  5770  123D                     l2457:
  5771  123D  146E               	bsf	___fladd@bexp,0
  5772  123E                     l2459:
  5773  123E  086E               	movf	___fladd@bexp,w
  5774  123F  1903               	btfsc	3,2
  5775  1240  2A42               	goto	u3331
  5776  1241  2A43               	goto	u3330
  5777  1242                     u3331:
  5778  1242  2A53               	goto	l2469
  5779  1243                     u3330:
  5780  1243                     l2461:
  5781  1243  0A6E               	incf	___fladd@bexp,w
  5782  1244  1D03               	btfss	3,2
  5783  1245  2A47               	goto	u3341
  5784  1246  2A48               	goto	u3340
  5785  1247                     u3341:
  5786  1247  2A50               	goto	l2465
  5787  1248                     u3340:
  5788  1248                     l2463:
  5789  1248  3000               	movlw	0
  5790  1249  00DF               	movwf	___fladd@b+3
  5791  124A  3000               	movlw	0
  5792  124B  00DE               	movwf	___fladd@b+2
  5793  124C  3000               	movlw	0
  5794  124D  00DD               	movwf	___fladd@b+1
  5795  124E  3000               	movlw	0
  5796  124F  00DC               	movwf	___fladd@b
  5797  1250                     l2465:
  5798  1250  17DE               	bsf	___fladd@b+2,7
  5799  1251                     l2467:
  5800  1251  01DF               	clrf	___fladd@b+3
  5801  1252  2A5B               	goto	l2471
  5802  1253                     l2469:
  5803  1253  3000               	movlw	0
  5804  1254  00DF               	movwf	___fladd@b+3
  5805  1255  3000               	movlw	0
  5806  1256  00DE               	movwf	___fladd@b+2
  5807  1257  3000               	movlw	0
  5808  1258  00DD               	movwf	___fladd@b+1
  5809  1259  3000               	movlw	0
  5810  125A  00DC               	movwf	___fladd@b
  5811  125B                     l2471:
  5812  125B  0863               	movf	___fladd@a+3,w
  5813  125C  3980               	andlw	128
  5814  125D  00E4               	movwf	??___fladd
  5815  125E  0864               	movf	??___fladd,w
  5816  125F  00ED               	movwf	___fladd@aexp
  5817  1260                     l2473:
  5818  1260  086D               	movf	___fladd@aexp,w
  5819  1261  066C               	xorwf	___fladd@signs,w
  5820  1262  1903               	skipnz
  5821  1263  2A65               	goto	u3351
  5822  1264  2A66               	goto	u3350
  5823  1265                     u3351:
  5824  1265  2A67               	goto	l2477
  5825  1266                     u3350:
  5826  1266                     l2475:
  5827  1266  176C               	bsf	___fladd@signs,6
  5828  1267                     l2477:
  5829  1267  0863               	movf	___fladd@a+3,w
  5830  1268  00E4               	movwf	??___fladd
  5831  1269  0764               	addwf	??___fladd,w
  5832  126A  00E5               	movwf	??___fladd+1
  5833  126B  0865               	movf	??___fladd+1,w
  5834  126C  00ED               	movwf	___fladd@aexp
  5835  126D                     l2479:
  5836  126D  1FE2               	btfss	___fladd@a+2,7
  5837  126E  2A70               	goto	u3361
  5838  126F  2A71               	goto	u3360
  5839  1270                     u3361:
  5840  1270  2A72               	goto	l2483
  5841  1271                     u3360:
  5842  1271                     l2481:
  5843  1271  146D               	bsf	___fladd@aexp,0
  5844  1272                     l2483:
  5845  1272  086D               	movf	___fladd@aexp,w
  5846  1273  1903               	btfsc	3,2
  5847  1274  2A76               	goto	u3371
  5848  1275  2A77               	goto	u3370
  5849  1276                     u3371:
  5850  1276  2A87               	goto	l2493
  5851  1277                     u3370:
  5852  1277                     l2485:
  5853  1277  0A6D               	incf	___fladd@aexp,w
  5854  1278  1D03               	btfss	3,2
  5855  1279  2A7B               	goto	u3381
  5856  127A  2A7C               	goto	u3380
  5857  127B                     u3381:
  5858  127B  2A84               	goto	l2489
  5859  127C                     u3380:
  5860  127C                     l2487:
  5861  127C  3000               	movlw	0
  5862  127D  00E3               	movwf	___fladd@a+3
  5863  127E  3000               	movlw	0
  5864  127F  00E2               	movwf	___fladd@a+2
  5865  1280  3000               	movlw	0
  5866  1281  00E1               	movwf	___fladd@a+1
  5867  1282  3000               	movlw	0
  5868  1283  00E0               	movwf	___fladd@a
  5869  1284                     l2489:
  5870  1284  17E2               	bsf	___fladd@a+2,7
  5871  1285                     l2491:
  5872  1285  01E3               	clrf	___fladd@a+3
  5873  1286  2A8F               	goto	l725
  5874  1287                     l2493:
  5875  1287  3000               	movlw	0
  5876  1288  00E3               	movwf	___fladd@a+3
  5877  1289  3000               	movlw	0
  5878  128A  00E2               	movwf	___fladd@a+2
  5879  128B  3000               	movlw	0
  5880  128C  00E1               	movwf	___fladd@a+1
  5881  128D  3000               	movlw	0
  5882  128E  00E0               	movwf	___fladd@a
  5883  128F                     l725:
  5884  128F  086E               	movf	___fladd@bexp,w
  5885  1290  026D               	subwf	___fladd@aexp,w
  5886  1291  1803               	skipnc
  5887  1292  2A94               	goto	u3391
  5888  1293  2A95               	goto	u3390
  5889  1294                     u3391:
  5890  1294  2AD9               	goto	l2529
  5891  1295                     u3390:
  5892  1295                     l2495:
  5893  1295  1F6C               	btfss	___fladd@signs,6
  5894  1296  2A98               	goto	u3401
  5895  1297  2A99               	goto	u3400
  5896  1298                     u3401:
  5897  1298  2A9D               	goto	l2499
  5898  1299                     u3400:
  5899  1299                     l2497:
  5900  1299  3080               	movlw	128
  5901  129A  00E4               	movwf	??___fladd
  5902  129B  0864               	movf	??___fladd,w
  5903  129C  06EC               	xorwf	___fladd@signs,f
  5904  129D                     l2499:
  5905  129D  086E               	movf	___fladd@bexp,w
  5906  129E  00E4               	movwf	??___fladd
  5907  129F  0864               	movf	??___fladd,w
  5908  12A0  00EF               	movwf	___fladd@grs
  5909  12A1                     l2501:
  5910  12A1  086D               	movf	___fladd@aexp,w
  5911  12A2  00E4               	movwf	??___fladd
  5912  12A3  0864               	movf	??___fladd,w
  5913  12A4  00EE               	movwf	___fladd@bexp
  5914  12A5                     l2503:
  5915  12A5  086F               	movf	___fladd@grs,w
  5916  12A6  00E4               	movwf	??___fladd
  5917  12A7  0864               	movf	??___fladd,w
  5918  12A8  00ED               	movwf	___fladd@aexp
  5919  12A9                     l2505:
  5920  12A9  085C               	movf	___fladd@b,w
  5921  12AA  00E4               	movwf	??___fladd
  5922  12AB  0864               	movf	??___fladd,w
  5923  12AC  00EF               	movwf	___fladd@grs
  5924  12AD                     l2507:
  5925  12AD  0860               	movf	___fladd@a,w
  5926  12AE  00E4               	movwf	??___fladd
  5927  12AF  0864               	movf	??___fladd,w
  5928  12B0  00DC               	movwf	___fladd@b
  5929  12B1                     l2509:
  5930  12B1  086F               	movf	___fladd@grs,w
  5931  12B2  00E4               	movwf	??___fladd
  5932  12B3  0864               	movf	??___fladd,w
  5933  12B4  00E0               	movwf	___fladd@a
  5934  12B5                     l2511:
  5935  12B5  085D               	movf	___fladd@b+1,w
  5936  12B6  00E4               	movwf	??___fladd
  5937  12B7  0864               	movf	??___fladd,w
  5938  12B8  00EF               	movwf	___fladd@grs
  5939  12B9                     l2513:
  5940  12B9  0861               	movf	___fladd@a+1,w
  5941  12BA  00E4               	movwf	??___fladd
  5942  12BB  0864               	movf	??___fladd,w
  5943  12BC  00DD               	movwf	___fladd@b+1
  5944  12BD                     l2515:
  5945  12BD  086F               	movf	___fladd@grs,w
  5946  12BE  00E4               	movwf	??___fladd
  5947  12BF  0864               	movf	??___fladd,w
  5948  12C0  00E1               	movwf	___fladd@a+1
  5949  12C1                     l2517:
  5950  12C1  085E               	movf	___fladd@b+2,w
  5951  12C2  00E4               	movwf	??___fladd
  5952  12C3  0864               	movf	??___fladd,w
  5953  12C4  00EF               	movwf	___fladd@grs
  5954  12C5                     l2519:
  5955  12C5  0862               	movf	___fladd@a+2,w
  5956  12C6  00E4               	movwf	??___fladd
  5957  12C7  0864               	movf	??___fladd,w
  5958  12C8  00DE               	movwf	___fladd@b+2
  5959  12C9                     l2521:
  5960  12C9  086F               	movf	___fladd@grs,w
  5961  12CA  00E4               	movwf	??___fladd
  5962  12CB  0864               	movf	??___fladd,w
  5963  12CC  00E2               	movwf	___fladd@a+2
  5964  12CD                     l2523:
  5965  12CD  085F               	movf	___fladd@b+3,w
  5966  12CE  00E4               	movwf	??___fladd
  5967  12CF  0864               	movf	??___fladd,w
  5968  12D0  00EF               	movwf	___fladd@grs
  5969  12D1                     l2525:
  5970  12D1  0863               	movf	___fladd@a+3,w
  5971  12D2  00E4               	movwf	??___fladd
  5972  12D3  0864               	movf	??___fladd,w
  5973  12D4  00DF               	movwf	___fladd@b+3
  5974  12D5                     l2527:
  5975  12D5  086F               	movf	___fladd@grs,w
  5976  12D6  00E4               	movwf	??___fladd
  5977  12D7  0864               	movf	??___fladd,w
  5978  12D8  00E3               	movwf	___fladd@a+3
  5979  12D9                     l2529:
  5980  12D9  01EF               	clrf	___fladd@grs
  5981  12DA                     l2531:
  5982  12DA  086D               	movf	___fladd@aexp,w
  5983  12DB  00E4               	movwf	??___fladd
  5984  12DC  01E5               	clrf	??___fladd+1
  5985  12DD  0865               	movf	??___fladd+1,w
  5986  12DE  00E7               	movwf	??___fladd+3
  5987  12DF  086E               	movf	___fladd@bexp,w
  5988  12E0  0264               	subwf	??___fladd,w
  5989  12E1  00E6               	movwf	??___fladd+2
  5990  12E2  1C03               	skipc
  5991  12E3  03E7               	decf	??___fladd+3,f
  5992  12E4  0867               	movf	??___fladd+3,w
  5993  12E5  3A80               	xorlw	128
  5994  12E6  00FF               	movwf	btemp+1
  5995  12E7  3080               	movlw	128
  5996  12E8  027F               	subwf	btemp+1,w
  5997  12E9  1D03               	skipz
  5998  12EA  2AED               	goto	u3415
  5999  12EB  301A               	movlw	26
  6000  12EC  0266               	subwf	??___fladd+2,w
  6001  12ED                     u3415:
  6002  12ED  1C03               	skipc
  6003  12EE  2AF0               	goto	u3411
  6004  12EF  2AF1               	goto	u3410
  6005  12F0                     u3411:
  6006  12F0  2B2E               	goto	l2547
  6007  12F1                     u3410:
  6008  12F1                     l2533:
  6009  12F1  1283               	bcf	3,5	;RP0=0, select bank0
  6010  12F2  1303               	bcf	3,6	;RP1=0, select bank0
  6011  12F3  085F               	movf	___fladd@b+3,w
  6012  12F4  045E               	iorwf	___fladd@b+2,w
  6013  12F5  045D               	iorwf	___fladd@b+1,w
  6014  12F6  045C               	iorwf	___fladd@b,w
  6015  12F7  1D03               	skipz
  6016  12F8  2AFA               	goto	u3421
  6017  12F9  2AFC               	goto	u3420
  6018  12FA                     u3421:
  6019  12FA  3001               	movlw	1
  6020  12FB  2AFD               	goto	u3430
  6021  12FC                     u3420:
  6022  12FC  3000               	movlw	0
  6023  12FD                     u3430:
  6024  12FD  00E4               	movwf	??___fladd
  6025  12FE  0864               	movf	??___fladd,w
  6026  12FF  00EF               	movwf	___fladd@grs
  6027  1300  3000               	movlw	0
  6028  1301  00DF               	movwf	___fladd@b+3
  6029  1302  3000               	movlw	0
  6030  1303  00DE               	movwf	___fladd@b+2
  6031  1304  3000               	movlw	0
  6032  1305  00DD               	movwf	___fladd@b+1
  6033  1306  3000               	movlw	0
  6034  1307  00DC               	movwf	___fladd@b
  6035  1308  086D               	movf	___fladd@aexp,w
  6036  1309  00E4               	movwf	??___fladd
  6037  130A  0864               	movf	??___fladd,w
  6038  130B  00EE               	movwf	___fladd@bexp
  6039  130C  2B36               	goto	l729
  6040  130D                     l731:
  6041  130D  1C6F               	btfss	___fladd@grs,0
  6042  130E  2B10               	goto	u3441
  6043  130F  2B11               	goto	u3440
  6044  1310                     u3441:
  6045  1310  2B1A               	goto	l2537
  6046  1311                     u3440:
  6047  1311                     l2535:
  6048  1311  086F               	movf	___fladd@grs,w
  6049  1312  00E4               	movwf	??___fladd
  6050  1313  1003               	clrc
  6051  1314  0C64               	rrf	??___fladd,w
  6052  1315  3801               	iorlw	1
  6053  1316  00E5               	movwf	??___fladd+1
  6054  1317  0865               	movf	??___fladd+1,w
  6055  1318  00EF               	movwf	___fladd@grs
  6056  1319  2B1C               	goto	l2539
  6057  131A                     l2537:
  6058  131A  1003               	clrc
  6059  131B  0CEF               	rrf	___fladd@grs,f
  6060  131C                     l2539:
  6061  131C  1C5C               	btfss	___fladd@b,0
  6062  131D  2B1F               	goto	u3451
  6063  131E  2B20               	goto	u3450
  6064  131F                     u3451:
  6065  131F  2B21               	goto	l2543
  6066  1320                     u3450:
  6067  1320                     l2541:
  6068  1320  17EF               	bsf	___fladd@grs,7
  6069  1321                     l2543:
  6070  1321  3001               	movlw	1
  6071  1322  00E4               	movwf	??___fladd
  6072  1323                     u3465:
  6073  1323  0D5F               	rlf	___fladd@b+3,w
  6074  1324  0CDF               	rrf	___fladd@b+3,f
  6075  1325  0CDE               	rrf	___fladd@b+2,f
  6076  1326  0CDD               	rrf	___fladd@b+1,f
  6077  1327  0CDC               	rrf	___fladd@b,f
  6078  1328  0BE4               	decfsz	??___fladd& (0+127),f
  6079  1329  2B23               	goto	u3465
  6080  132A                     l2545:
  6081  132A  3001               	movlw	1
  6082  132B  00E4               	movwf	??___fladd
  6083  132C  0864               	movf	??___fladd,w
  6084  132D  07EE               	addwf	___fladd@bexp,f
  6085  132E                     l2547:
  6086  132E  1283               	bcf	3,5	;RP0=0, select bank0
  6087  132F  1303               	bcf	3,6	;RP1=0, select bank0
  6088  1330  086D               	movf	___fladd@aexp,w
  6089  1331  026E               	subwf	___fladd@bexp,w
  6090  1332  1C03               	skipc
  6091  1333  2B35               	goto	u3471
  6092  1334  2B36               	goto	u3470
  6093  1335                     u3471:
  6094  1335  2B0D               	goto	l731
  6095  1336                     u3470:
  6096  1336                     l729:
  6097  1336  1B6C               	btfsc	___fladd@signs,6
  6098  1337  2B39               	goto	u3481
  6099  1338  2B3A               	goto	u3480
  6100  1339                     u3481:
  6101  1339  2B85               	goto	l2573
  6102  133A                     u3480:
  6103  133A                     l2549:
  6104  133A  086E               	movf	___fladd@bexp,w
  6105  133B  1D03               	btfss	3,2
  6106  133C  2B3E               	goto	u3491
  6107  133D  2B3F               	goto	u3490
  6108  133E                     u3491:
  6109  133E  2B48               	goto	l2555
  6110  133F                     u3490:
  6111  133F                     l2551:
  6112  133F  3000               	movlw	0
  6113  1340  00DF               	movwf	?___fladd+3
  6114  1341  3000               	movlw	0
  6115  1342  00DE               	movwf	?___fladd+2
  6116  1343  3000               	movlw	0
  6117  1344  00DD               	movwf	?___fladd+1
  6118  1345  3000               	movlw	0
  6119  1346  00DC               	movwf	?___fladd
  6120  1347  2CB3               	goto	l738
  6121  1348                     l2555:
  6122  1348  0860               	movf	___fladd@a,w
  6123  1349  07DC               	addwf	___fladd@b,f
  6124  134A  0861               	movf	___fladd@a+1,w
  6125  134B  1103               	clrz
  6126  134C  1803               	skipnc
  6127  134D  3E01               	addlw	1
  6128  134E  1903               	skipnz
  6129  134F  2B51               	goto	u3501
  6130  1350  07DD               	addwf	___fladd@b+1,f
  6131  1351                     u3501:
  6132  1351  0862               	movf	___fladd@a+2,w
  6133  1352  1103               	clrz
  6134  1353  1803               	skipnc
  6135  1354  3E01               	addlw	1
  6136  1355  1903               	skipnz
  6137  1356  2B58               	goto	u3502
  6138  1357  07DE               	addwf	___fladd@b+2,f
  6139  1358                     u3502:
  6140  1358  0863               	movf	___fladd@a+3,w
  6141  1359  1103               	clrz
  6142  135A  1803               	skipnc
  6143  135B  3E01               	addlw	1
  6144  135C  1903               	skipnz
  6145  135D  2B5F               	goto	u3503
  6146  135E  07DF               	addwf	___fladd@b+3,f
  6147  135F                     u3503:
  6148  135F                     l2557:
  6149  135F  1C5F               	btfss	___fladd@b+3,0
  6150  1360  2B62               	goto	u3511
  6151  1361  2B63               	goto	u3510
  6152  1362                     u3511:
  6153  1362  2C39               	goto	l2607
  6154  1363                     u3510:
  6155  1363                     l2559:
  6156  1363  1C6F               	btfss	___fladd@grs,0
  6157  1364  2B66               	goto	u3521
  6158  1365  2B67               	goto	u3520
  6159  1366                     u3521:
  6160  1366  2B70               	goto	l2563
  6161  1367                     u3520:
  6162  1367                     l2561:
  6163  1367  086F               	movf	___fladd@grs,w
  6164  1368  00E4               	movwf	??___fladd
  6165  1369  1003               	clrc
  6166  136A  0C64               	rrf	??___fladd,w
  6167  136B  3801               	iorlw	1
  6168  136C  00E5               	movwf	??___fladd+1
  6169  136D  0865               	movf	??___fladd+1,w
  6170  136E  00EF               	movwf	___fladd@grs
  6171  136F  2B72               	goto	l2565
  6172  1370                     l2563:
  6173  1370  1003               	clrc
  6174  1371  0CEF               	rrf	___fladd@grs,f
  6175  1372                     l2565:
  6176  1372  1C5C               	btfss	___fladd@b,0
  6177  1373  2B75               	goto	u3531
  6178  1374  2B76               	goto	u3530
  6179  1375                     u3531:
  6180  1375  2B77               	goto	l2569
  6181  1376                     u3530:
  6182  1376                     l2567:
  6183  1376  17EF               	bsf	___fladd@grs,7
  6184  1377                     l2569:
  6185  1377  3001               	movlw	1
  6186  1378  00E4               	movwf	??___fladd
  6187  1379                     u3545:
  6188  1379  0D5F               	rlf	___fladd@b+3,w
  6189  137A  0CDF               	rrf	___fladd@b+3,f
  6190  137B  0CDE               	rrf	___fladd@b+2,f
  6191  137C  0CDD               	rrf	___fladd@b+1,f
  6192  137D  0CDC               	rrf	___fladd@b,f
  6193  137E  0BE4               	decfsz	??___fladd& (0+127),f
  6194  137F  2B79               	goto	u3545
  6195  1380                     l2571:
  6196  1380  3001               	movlw	1
  6197  1381  00E4               	movwf	??___fladd
  6198  1382  0864               	movf	??___fladd,w
  6199  1383  07EE               	addwf	___fladd@bexp,f
  6200  1384  2C39               	goto	l2607
  6201  1385                     l2573:
  6202  1385  085F               	movf	___fladd@b+3,w
  6203  1386  3A80               	xorlw	128
  6204  1387  00FF               	movwf	btemp+1
  6205  1388  0863               	movf	___fladd@a+3,w
  6206  1389  3A80               	xorlw	128
  6207  138A  027F               	subwf	btemp+1,w
  6208  138B  1D03               	skipz
  6209  138C  2B97               	goto	u3553
  6210  138D  0862               	movf	___fladd@a+2,w
  6211  138E  025E               	subwf	___fladd@b+2,w
  6212  138F  1D03               	skipz
  6213  1390  2B97               	goto	u3553
  6214  1391  0861               	movf	___fladd@a+1,w
  6215  1392  025D               	subwf	___fladd@b+1,w
  6216  1393  1D03               	skipz
  6217  1394  2B97               	goto	u3553
  6218  1395  0860               	movf	___fladd@a,w
  6219  1396  025C               	subwf	___fladd@b,w
  6220  1397                     u3553:
  6221  1397  1803               	skipnc
  6222  1398  2B9A               	goto	u3551
  6223  1399  2B9B               	goto	u3550
  6224  139A                     u3551:
  6225  139A  2BF3               	goto	l2583
  6226  139B                     u3550:
  6227  139B                     l2575:
  6228  139B  30FF               	movlw	255
  6229  139C  00E4               	movwf	??___fladd
  6230  139D  30FF               	movlw	255
  6231  139E  00E5               	movwf	??___fladd+1
  6232  139F  30FF               	movlw	255
  6233  13A0  00E6               	movwf	??___fladd+2
  6234  13A1  30FF               	movlw	255
  6235  13A2  00E7               	movwf	??___fladd+3
  6236  13A3  0860               	movf	___fladd@a,w
  6237  13A4  00E8               	movwf	??___fladd+4
  6238  13A5  0861               	movf	___fladd@a+1,w
  6239  13A6  00E9               	movwf	??___fladd+5
  6240  13A7  0862               	movf	___fladd@a+2,w
  6241  13A8  00EA               	movwf	??___fladd+6
  6242  13A9  0863               	movf	___fladd@a+3,w
  6243  13AA  00EB               	movwf	??___fladd+7
  6244  13AB  085C               	movf	___fladd@b,w
  6245  13AC  02E8               	subwf	??___fladd+4,f
  6246  13AD  085D               	movf	___fladd@b+1,w
  6247  13AE  1C03               	skipc
  6248  13AF  0F5D               	incfsz	___fladd@b+1,w
  6249  13B0  2BB2               	goto	u3561
  6250  13B1  2BB3               	goto	u3562
  6251  13B2                     u3561:
  6252  13B2  02E9               	subwf	??___fladd+5,f
  6253  13B3                     u3562:
  6254  13B3  085E               	movf	___fladd@b+2,w
  6255  13B4  1C03               	skipc
  6256  13B5  0F5E               	incfsz	___fladd@b+2,w
  6257  13B6  2BB8               	goto	u3563
  6258  13B7  2BB9               	goto	u3564
  6259  13B8                     u3563:
  6260  13B8  02EA               	subwf	??___fladd+6,f
  6261  13B9                     u3564:
  6262  13B9  085F               	movf	___fladd@b+3,w
  6263  13BA  1C03               	skipc
  6264  13BB  0F5F               	incfsz	___fladd@b+3,w
  6265  13BC  2BBE               	goto	u3565
  6266  13BD  2BBF               	goto	u3566
  6267  13BE                     u3565:
  6268  13BE  02EB               	subwf	??___fladd+7,f
  6269  13BF                     u3566:
  6270  13BF  0868               	movf	??___fladd+4,w
  6271  13C0  07E4               	addwf	??___fladd,f
  6272  13C1  0869               	movf	??___fladd+5,w
  6273  13C2  1803               	skipnc
  6274  13C3  0F69               	incfsz	??___fladd+5,w
  6275  13C4  2BC6               	goto	u3570
  6276  13C5  2BC7               	goto	u3571
  6277  13C6                     u3570:
  6278  13C6  07E5               	addwf	??___fladd+1,f
  6279  13C7                     u3571:
  6280  13C7  086A               	movf	??___fladd+6,w
  6281  13C8  1803               	skipnc
  6282  13C9  0F6A               	incfsz	??___fladd+6,w
  6283  13CA  2BCC               	goto	u3572
  6284  13CB  2BCD               	goto	u3573
  6285  13CC                     u3572:
  6286  13CC  07E6               	addwf	??___fladd+2,f
  6287  13CD                     u3573:
  6288  13CD  086B               	movf	??___fladd+7,w
  6289  13CE  1803               	skipnc
  6290  13CF  0A6B               	incf	??___fladd+7,w
  6291  13D0  07E7               	addwf	??___fladd+3,f
  6292  13D1  0867               	movf	??___fladd+3,w
  6293  13D2  00DF               	movwf	___fladd@b+3
  6294  13D3  0866               	movf	??___fladd+2,w
  6295  13D4  00DE               	movwf	___fladd@b+2
  6296  13D5  0865               	movf	??___fladd+1,w
  6297  13D6  00DD               	movwf	___fladd@b+1
  6298  13D7  0864               	movf	??___fladd,w
  6299  13D8  00DC               	movwf	___fladd@b
  6300  13D9                     l2577:
  6301  13D9  3080               	movlw	128
  6302  13DA  00E4               	movwf	??___fladd
  6303  13DB  0864               	movf	??___fladd,w
  6304  13DC  06EC               	xorwf	___fladd@signs,f
  6305  13DD  09EF               	comf	___fladd@grs,f
  6306  13DE  0AEF               	incf	___fladd@grs,f
  6307  13DF                     l2579:
  6308  13DF  086F               	movf	___fladd@grs,w
  6309  13E0  1D03               	btfss	3,2
  6310  13E1  2BE3               	goto	u3581
  6311  13E2  2BE4               	goto	u3580
  6312  13E3                     u3581:
  6313  13E3  2C01               	goto	l746
  6314  13E4                     u3580:
  6315  13E4                     l2581:
  6316  13E4  3001               	movlw	1
  6317  13E5  07DC               	addwf	___fladd@b,f
  6318  13E6  3000               	movlw	0
  6319  13E7  1803               	skipnc
  6320  13E8  3001               	movlw	1
  6321  13E9  07DD               	addwf	___fladd@b+1,f
  6322  13EA  3000               	movlw	0
  6323  13EB  1803               	skipnc
  6324  13EC  3001               	movlw	1
  6325  13ED  07DE               	addwf	___fladd@b+2,f
  6326  13EE  3000               	movlw	0
  6327  13EF  1803               	skipnc
  6328  13F0  3001               	movlw	1
  6329  13F1  07DF               	addwf	___fladd@b+3,f
  6330  13F2  2C01               	goto	l746
  6331  13F3                     l2583:
  6332  13F3  0860               	movf	___fladd@a,w
  6333  13F4  02DC               	subwf	___fladd@b,f
  6334  13F5  0861               	movf	___fladd@a+1,w
  6335  13F6  1C03               	skipc
  6336  13F7  0F61               	incfsz	___fladd@a+1,w
  6337  13F8  02DD               	subwf	___fladd@b+1,f
  6338  13F9  0862               	movf	___fladd@a+2,w
  6339  13FA  1C03               	skipc
  6340  13FB  0F62               	incfsz	___fladd@a+2,w
  6341  13FC  02DE               	subwf	___fladd@b+2,f
  6342  13FD  0863               	movf	___fladd@a+3,w
  6343  13FE  1C03               	skipc
  6344  13FF  0F63               	incfsz	___fladd@a+3,w
  6345  1400  02DF               	subwf	___fladd@b+3,f
  6346  1401                     l746:
  6347  1401  085F               	movf	___fladd@b+3,w
  6348  1402  045E               	iorwf	___fladd@b+2,w
  6349  1403  045D               	iorwf	___fladd@b+1,w
  6350  1404  045C               	iorwf	___fladd@b,w
  6351  1405  1D03               	skipz
  6352  1406  2C08               	goto	u3591
  6353  1407  2C09               	goto	u3590
  6354  1408                     u3591:
  6355  1408  2C35               	goto	l2605
  6356  1409                     u3590:
  6357  1409                     l2585:
  6358  1409  086F               	movf	___fladd@grs,w
  6359  140A  1D03               	btfss	3,2
  6360  140B  2C0D               	goto	u3601
  6361  140C  2C0E               	goto	u3600
  6362  140D                     u3601:
  6363  140D  2C35               	goto	l2605
  6364  140E                     u3600:
  6365  140E                     l2587:
  6366  140E  3000               	movlw	0
  6367  140F  00DF               	movwf	?___fladd+3
  6368  1410  3000               	movlw	0
  6369  1411  00DE               	movwf	?___fladd+2
  6370  1412  3000               	movlw	0
  6371  1413  00DD               	movwf	?___fladd+1
  6372  1414  3000               	movlw	0
  6373  1415  00DC               	movwf	?___fladd
  6374  1416  2CB3               	goto	l738
  6375  1417                     l2591:
  6376  1417  3001               	movlw	1
  6377  1418  00E4               	movwf	??___fladd
  6378  1419                     u3615:
  6379  1419  1003               	clrc
  6380  141A  0DDC               	rlf	___fladd@b,f
  6381  141B  0DDD               	rlf	___fladd@b+1,f
  6382  141C  0DDE               	rlf	___fladd@b+2,f
  6383  141D  0DDF               	rlf	___fladd@b+3,f
  6384  141E  0BE4               	decfsz	??___fladd,f
  6385  141F  2C19               	goto	u3615
  6386  1420                     l2593:
  6387  1420  1FEF               	btfss	___fladd@grs,7
  6388  1421  2C23               	goto	u3621
  6389  1422  2C24               	goto	u3620
  6390  1423                     u3621:
  6391  1423  2C25               	goto	l750
  6392  1424                     u3620:
  6393  1424                     l2595:
  6394  1424  145C               	bsf	___fladd@b,0
  6395  1425                     l750:
  6396  1425  1C6F               	btfss	___fladd@grs,0
  6397  1426  2C28               	goto	u3631
  6398  1427  2C29               	goto	u3630
  6399  1428                     u3631:
  6400  1428  2C2C               	goto	l2599
  6401  1429                     u3630:
  6402  1429                     l2597:
  6403  1429  1403               	setc
  6404  142A  0DEF               	rlf	___fladd@grs,f
  6405  142B  2C2E               	goto	l2601
  6406  142C                     l2599:
  6407  142C  1003               	clrc
  6408  142D  0DEF               	rlf	___fladd@grs,f
  6409  142E                     l2601:
  6410  142E  086E               	movf	___fladd@bexp,w
  6411  142F  1903               	btfsc	3,2
  6412  1430  2C32               	goto	u3641
  6413  1431  2C33               	goto	u3640
  6414  1432                     u3641:
  6415  1432  2C35               	goto	l2605
  6416  1433                     u3640:
  6417  1433                     l2603:
  6418  1433  3001               	movlw	1
  6419  1434  02EE               	subwf	___fladd@bexp,f
  6420  1435                     l2605:
  6421  1435  1FDE               	btfss	___fladd@b+2,7
  6422  1436  2C38               	goto	u3651
  6423  1437  2C39               	goto	u3650
  6424  1438                     u3651:
  6425  1438  2C17               	goto	l2591
  6426  1439                     u3650:
  6427  1439                     l2607:
  6428  1439  01ED               	clrf	___fladd@aexp
  6429  143A                     l2609:
  6430  143A  1FEF               	btfss	___fladd@grs,7
  6431  143B  2C3D               	goto	u3661
  6432  143C  2C3E               	goto	u3660
  6433  143D                     u3661:
  6434  143D  2C4C               	goto	l2617
  6435  143E                     u3660:
  6436  143E                     l2611:
  6437  143E  086F               	movf	___fladd@grs,w
  6438  143F  397F               	andlw	127
  6439  1440  1903               	btfsc	3,2
  6440  1441  2C43               	goto	u3671
  6441  1442  2C44               	goto	u3670
  6442  1443                     u3671:
  6443  1443  2C47               	goto	l756
  6444  1444                     u3670:
  6445  1444                     l2613:
  6446  1444  01ED               	clrf	___fladd@aexp
  6447  1445  0AED               	incf	___fladd@aexp,f
  6448  1446  2C4C               	goto	l2617
  6449  1447                     l756:
  6450  1447  1C5C               	btfss	___fladd@b,0
  6451  1448  2C4A               	goto	u3681
  6452  1449  2C4B               	goto	u3680
  6453  144A                     u3681:
  6454  144A  2C4C               	goto	l2617
  6455  144B                     u3680:
  6456  144B  2C44               	goto	l2613
  6457  144C                     l2617:
  6458  144C  086D               	movf	___fladd@aexp,w
  6459  144D  1903               	btfsc	3,2
  6460  144E  2C50               	goto	u3691
  6461  144F  2C51               	goto	u3690
  6462  1450                     u3691:
  6463  1450  2C85               	goto	l759
  6464  1451                     u3690:
  6465  1451                     l2619:
  6466  1451  3001               	movlw	1
  6467  1452  07DC               	addwf	___fladd@b,f
  6468  1453  3000               	movlw	0
  6469  1454  1803               	skipnc
  6470  1455  3001               	movlw	1
  6471  1456  07DD               	addwf	___fladd@b+1,f
  6472  1457  3000               	movlw	0
  6473  1458  1803               	skipnc
  6474  1459  3001               	movlw	1
  6475  145A  07DE               	addwf	___fladd@b+2,f
  6476  145B  3000               	movlw	0
  6477  145C  1803               	skipnc
  6478  145D  3001               	movlw	1
  6479  145E  07DF               	addwf	___fladd@b+3,f
  6480  145F                     l2621:
  6481  145F  1C5F               	btfss	___fladd@b+3,0
  6482  1460  2C62               	goto	u3701
  6483  1461  2C63               	goto	u3700
  6484  1462                     u3701:
  6485  1462  2C85               	goto	l759
  6486  1463                     u3700:
  6487  1463                     l2623:
  6488  1463  085C               	movf	___fladd@b,w
  6489  1464  00E4               	movwf	??___fladd
  6490  1465  085D               	movf	___fladd@b+1,w
  6491  1466  00E5               	movwf	??___fladd+1
  6492  1467  085E               	movf	___fladd@b+2,w
  6493  1468  00E6               	movwf	??___fladd+2
  6494  1469  085F               	movf	___fladd@b+3,w
  6495  146A  00E7               	movwf	??___fladd+3
  6496  146B  3001               	movlw	1
  6497  146C  00E8               	movwf	??___fladd+4
  6498  146D                     u3715:
  6499  146D  0D67               	rlf	??___fladd+3,w
  6500  146E  0CE7               	rrf	??___fladd+3,f
  6501  146F  0CE6               	rrf	??___fladd+2,f
  6502  1470  0CE5               	rrf	??___fladd+1,f
  6503  1471  0CE4               	rrf	??___fladd,f
  6504  1472                     u3710:
  6505  1472  0BE8               	decfsz	??___fladd+4,f
  6506  1473  2C6D               	goto	u3715
  6507  1474  0867               	movf	??___fladd+3,w
  6508  1475  00DF               	movwf	___fladd@b+3
  6509  1476  0866               	movf	??___fladd+2,w
  6510  1477  00DE               	movwf	___fladd@b+2
  6511  1478  0865               	movf	??___fladd+1,w
  6512  1479  00DD               	movwf	___fladd@b+1
  6513  147A  0864               	movf	??___fladd,w
  6514  147B  00DC               	movwf	___fladd@b
  6515  147C  0A6E               	incf	___fladd@bexp,w
  6516  147D  1903               	btfsc	3,2
  6517  147E  2C80               	goto	u3721
  6518  147F  2C81               	goto	u3720
  6519  1480                     u3721:
  6520  1480  2C85               	goto	l759
  6521  1481                     u3720:
  6522  1481                     l2625:
  6523  1481  3001               	movlw	1
  6524  1482  00E4               	movwf	??___fladd
  6525  1483  0864               	movf	??___fladd,w
  6526  1484  07EE               	addwf	___fladd@bexp,f
  6527  1485                     l759:
  6528  1485  0A6E               	incf	___fladd@bexp,w
  6529  1486  1903               	btfsc	3,2
  6530  1487  2C89               	goto	u3731
  6531  1488  2C8A               	goto	u3730
  6532  1489                     u3731:
  6533  1489  2C8F               	goto	l2629
  6534  148A                     u3730:
  6535  148A                     l2627:
  6536  148A  086E               	movf	___fladd@bexp,w
  6537  148B  1D03               	btfss	3,2
  6538  148C  2C8E               	goto	u3741
  6539  148D  2C8F               	goto	u3740
  6540  148E                     u3741:
  6541  148E  2C9D               	goto	l2635
  6542  148F                     u3740:
  6543  148F                     l2629:
  6544  148F  3000               	movlw	0
  6545  1490  00DF               	movwf	___fladd@b+3
  6546  1491  3000               	movlw	0
  6547  1492  00DE               	movwf	___fladd@b+2
  6548  1493  3000               	movlw	0
  6549  1494  00DD               	movwf	___fladd@b+1
  6550  1495  3000               	movlw	0
  6551  1496  00DC               	movwf	___fladd@b
  6552  1497                     l2631:
  6553  1497  086E               	movf	___fladd@bexp,w
  6554  1498  1D03               	btfss	3,2
  6555  1499  2C9B               	goto	u3751
  6556  149A  2C9C               	goto	u3750
  6557  149B                     u3751:
  6558  149B  2C9D               	goto	l2635
  6559  149C                     u3750:
  6560  149C                     l2633:
  6561  149C  01EC               	clrf	___fladd@signs
  6562  149D                     l2635:
  6563  149D  1C6E               	btfss	___fladd@bexp,0
  6564  149E  2CA0               	goto	u3761
  6565  149F  2CA1               	goto	u3760
  6566  14A0                     u3761:
  6567  14A0  2CA3               	goto	l2639
  6568  14A1                     u3760:
  6569  14A1                     l2637:
  6570  14A1  17DE               	bsf	___fladd@b+2,7
  6571  14A2  2CA7               	goto	l767
  6572  14A3                     l2639:
  6573  14A3  307F               	movlw	127
  6574  14A4  00E4               	movwf	??___fladd
  6575  14A5  0864               	movf	??___fladd,w
  6576  14A6  05DE               	andwf	___fladd@b+2,f
  6577  14A7                     l767:
  6578  14A7  086E               	movf	___fladd@bexp,w
  6579  14A8  00E4               	movwf	??___fladd
  6580  14A9  1003               	clrc
  6581  14AA  0C64               	rrf	??___fladd,w
  6582  14AB  00E5               	movwf	??___fladd+1
  6583  14AC  0865               	movf	??___fladd+1,w
  6584  14AD  00DF               	movwf	___fladd@b+3
  6585  14AE                     l2641:
  6586  14AE  1FEC               	btfss	___fladd@signs,7
  6587  14AF  2CB1               	goto	u3771
  6588  14B0  2CB2               	goto	u3770
  6589  14B1                     u3771:
  6590  14B1  2CB3               	goto	l768
  6591  14B2                     u3770:
  6592  14B2                     l2643:
  6593  14B2  17DF               	bsf	___fladd@b+3,7
  6594  14B3                     l768:
  6595  14B3                     l738:
  6596  14B3  0008               	return
  6597  14B4                     __end_of___fladd:
  6598                           
  6599                           	psect	text17
  6600  1000                     __ptext17:	
  6601 ;; *************** function ___flneg *****************
  6602 ;; Defined at:
  6603 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;  f1              4    0[BANK0 ] unsigned char 
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;		None
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  4    0[BANK0 ] unsigned char 
  6610 ;; Registers used:
  6611 ;;		wreg
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6617 ;;      Params:         0       4       0       0       0
  6618 ;;      Locals:         0       0       0       0       0
  6619 ;;      Temps:          0       0       0       0       0
  6620 ;;      Totals:         0       4       0       0       0
  6621 ;;Total ram usage:        4 bytes
  6622 ;; Hardware stack levels used:    1
  6623 ;; Hardware stack levels required when called:    3
  6624 ;; This function calls:
  6625 ;;		Nothing
  6626 ;; This function is called by:
  6627 ;;		_sprintf
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631                           
  6632                           ;psect for function ___flneg
  6633  1000                     ___flneg:
  6634  1000                     l4055:	
  6635                           ;incstack = 0
  6636                           ; Regs used in ___flneg: [wreg]
  6637                           
  6638  1000  1283               	bcf	3,5	;RP0=0, select bank0
  6639  1001  1303               	bcf	3,6	;RP1=0, select bank0
  6640  1002  0823               	movf	___flneg@f1+3,w
  6641  1003  0422               	iorwf	___flneg@f1+2,w
  6642  1004  0421               	iorwf	___flneg@f1+1,w
  6643  1005  0420               	iorwf	___flneg@f1,w
  6644  1006  1903               	skipnz
  6645  1007  2809               	goto	u7031
  6646  1008  280A               	goto	u7030
  6647  1009                     u7031:
  6648  1009  280C               	goto	l4059
  6649  100A                     u7030:
  6650  100A                     l4057:
  6651  100A  3080               	movlw	128
  6652  100B  06A3               	xorwf	___flneg@f1+3,f
  6653  100C                     l4059:
  6654  100C                     l597:
  6655  100C  0008               	return
  6656  100D                     __end_of___flneg:
  6657                           
  6658                           	psect	text18
  6659  100D                     __ptext18:	
  6660 ;; *************** function ___flge *****************
  6661 ;; Defined at:
  6662 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;  ff1             4    0[BANK0 ] unsigned char 
  6665 ;;  ff2             4    4[BANK0 ] unsigned char 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;		None
  6668 ;; Return value:  Size  Location     Type
  6669 ;;		None               void
  6670 ;; Registers used:
  6671 ;;		wreg, status,2, status,0
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6677 ;;      Params:         0       8       0       0       0
  6678 ;;      Locals:         0       0       0       0       0
  6679 ;;      Temps:          0       4       0       0       0
  6680 ;;      Totals:         0      12       0       0       0
  6681 ;;Total ram usage:       12 bytes
  6682 ;; Hardware stack levels used:    1
  6683 ;; Hardware stack levels required when called:    3
  6684 ;; This function calls:
  6685 ;;		Nothing
  6686 ;; This function is called by:
  6687 ;;		_sprintf
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           
  6692                           ;psect for function ___flge
  6693  100D                     ___flge:
  6694  100D                     l4035:	
  6695                           ;incstack = 0
  6696                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6697                           
  6698  100D  3000               	movlw	0
  6699  100E  1283               	bcf	3,5	;RP0=0, select bank0
  6700  100F  1303               	bcf	3,6	;RP1=0, select bank0
  6701  1010  0520               	andwf	___flge@ff1,w
  6702  1011  00A8               	movwf	??___flge
  6703  1012  3000               	movlw	0
  6704  1013  0521               	andwf	___flge@ff1+1,w
  6705  1014  00A9               	movwf	??___flge+1
  6706  1015  3080               	movlw	128
  6707  1016  0522               	andwf	___flge@ff1+2,w
  6708  1017  00AA               	movwf	??___flge+2
  6709  1018  307F               	movlw	127
  6710  1019  0523               	andwf	___flge@ff1+3,w
  6711  101A  00AB               	movwf	??___flge+3
  6712  101B  082B               	movf	??___flge+3,w
  6713  101C  042A               	iorwf	??___flge+2,w
  6714  101D  0429               	iorwf	??___flge+1,w
  6715  101E  0428               	iorwf	??___flge,w
  6716  101F  1D03               	skipz
  6717  1020  2822               	goto	u6961
  6718  1021  2823               	goto	u6960
  6719  1022                     u6961:
  6720  1022  282B               	goto	l589
  6721  1023                     u6960:
  6722  1023                     l4037:
  6723  1023  3000               	movlw	0
  6724  1024  00A3               	movwf	___flge@ff1+3
  6725  1025  3000               	movlw	0
  6726  1026  00A2               	movwf	___flge@ff1+2
  6727  1027  3000               	movlw	0
  6728  1028  00A1               	movwf	___flge@ff1+1
  6729  1029  3000               	movlw	0
  6730  102A  00A0               	movwf	___flge@ff1
  6731  102B                     l589:
  6732  102B  3000               	movlw	0
  6733  102C  0524               	andwf	___flge@ff2,w
  6734  102D  00A8               	movwf	??___flge
  6735  102E  3000               	movlw	0
  6736  102F  0525               	andwf	___flge@ff2+1,w
  6737  1030  00A9               	movwf	??___flge+1
  6738  1031  3080               	movlw	128
  6739  1032  0526               	andwf	___flge@ff2+2,w
  6740  1033  00AA               	movwf	??___flge+2
  6741  1034  307F               	movlw	127
  6742  1035  0527               	andwf	___flge@ff2+3,w
  6743  1036  00AB               	movwf	??___flge+3
  6744  1037  082B               	movf	??___flge+3,w
  6745  1038  042A               	iorwf	??___flge+2,w
  6746  1039  0429               	iorwf	??___flge+1,w
  6747  103A  0428               	iorwf	??___flge,w
  6748  103B  1D03               	skipz
  6749  103C  283E               	goto	u6971
  6750  103D  283F               	goto	u6970
  6751  103E                     u6971:
  6752  103E  2847               	goto	l4041
  6753  103F                     u6970:
  6754  103F                     l4039:
  6755  103F  3000               	movlw	0
  6756  1040  00A7               	movwf	___flge@ff2+3
  6757  1041  3000               	movlw	0
  6758  1042  00A6               	movwf	___flge@ff2+2
  6759  1043  3000               	movlw	0
  6760  1044  00A5               	movwf	___flge@ff2+1
  6761  1045  3000               	movlw	0
  6762  1046  00A4               	movwf	___flge@ff2
  6763  1047                     l4041:
  6764  1047  1FA3               	btfss	___flge@ff1+3,7
  6765  1048  284A               	goto	u6981
  6766  1049  284B               	goto	u6980
  6767  104A                     u6981:
  6768  104A  286F               	goto	l4045
  6769  104B                     u6980:
  6770  104B                     l4043:
  6771  104B  3000               	movlw	0
  6772  104C  00A8               	movwf	??___flge
  6773  104D  3000               	movlw	0
  6774  104E  00A9               	movwf	??___flge+1
  6775  104F  3000               	movlw	0
  6776  1050  00AA               	movwf	??___flge+2
  6777  1051  3080               	movlw	128
  6778  1052  00AB               	movwf	??___flge+3
  6779  1053  0820               	movf	___flge@ff1,w
  6780  1054  02A8               	subwf	??___flge,f
  6781  1055  0821               	movf	___flge@ff1+1,w
  6782  1056  1C03               	skipc
  6783  1057  0F21               	incfsz	___flge@ff1+1,w
  6784  1058  285A               	goto	u6991
  6785  1059  285B               	goto	u6992
  6786  105A                     u6991:
  6787  105A  02A9               	subwf	??___flge+1,f
  6788  105B                     u6992:
  6789  105B  0822               	movf	___flge@ff1+2,w
  6790  105C  1C03               	skipc
  6791  105D  0F22               	incfsz	___flge@ff1+2,w
  6792  105E  2860               	goto	u6993
  6793  105F  2861               	goto	u6994
  6794  1060                     u6993:
  6795  1060  02AA               	subwf	??___flge+2,f
  6796  1061                     u6994:
  6797  1061  0823               	movf	___flge@ff1+3,w
  6798  1062  1C03               	skipc
  6799  1063  0F23               	incfsz	___flge@ff1+3,w
  6800  1064  2866               	goto	u6995
  6801  1065  2867               	goto	u6996
  6802  1066                     u6995:
  6803  1066  02AB               	subwf	??___flge+3,f
  6804  1067                     u6996:
  6805  1067  082B               	movf	??___flge+3,w
  6806  1068  00A3               	movwf	___flge@ff1+3
  6807  1069  082A               	movf	??___flge+2,w
  6808  106A  00A2               	movwf	___flge@ff1+2
  6809  106B  0829               	movf	??___flge+1,w
  6810  106C  00A1               	movwf	___flge@ff1+1
  6811  106D  0828               	movf	??___flge,w
  6812  106E  00A0               	movwf	___flge@ff1
  6813  106F                     l4045:
  6814  106F  1FA7               	btfss	___flge@ff2+3,7
  6815  1070  2872               	goto	u7001
  6816  1071  2873               	goto	u7000
  6817  1072                     u7001:
  6818  1072  2897               	goto	l592
  6819  1073                     u7000:
  6820  1073                     l4047:
  6821  1073  3000               	movlw	0
  6822  1074  00A8               	movwf	??___flge
  6823  1075  3000               	movlw	0
  6824  1076  00A9               	movwf	??___flge+1
  6825  1077  3000               	movlw	0
  6826  1078  00AA               	movwf	??___flge+2
  6827  1079  3080               	movlw	128
  6828  107A  00AB               	movwf	??___flge+3
  6829  107B  0824               	movf	___flge@ff2,w
  6830  107C  02A8               	subwf	??___flge,f
  6831  107D  0825               	movf	___flge@ff2+1,w
  6832  107E  1C03               	skipc
  6833  107F  0F25               	incfsz	___flge@ff2+1,w
  6834  1080  2882               	goto	u7011
  6835  1081  2883               	goto	u7012
  6836  1082                     u7011:
  6837  1082  02A9               	subwf	??___flge+1,f
  6838  1083                     u7012:
  6839  1083  0826               	movf	___flge@ff2+2,w
  6840  1084  1C03               	skipc
  6841  1085  0F26               	incfsz	___flge@ff2+2,w
  6842  1086  2888               	goto	u7013
  6843  1087  2889               	goto	u7014
  6844  1088                     u7013:
  6845  1088  02AA               	subwf	??___flge+2,f
  6846  1089                     u7014:
  6847  1089  0827               	movf	___flge@ff2+3,w
  6848  108A  1C03               	skipc
  6849  108B  0F27               	incfsz	___flge@ff2+3,w
  6850  108C  288E               	goto	u7015
  6851  108D  288F               	goto	u7016
  6852  108E                     u7015:
  6853  108E  02AB               	subwf	??___flge+3,f
  6854  108F                     u7016:
  6855  108F  082B               	movf	??___flge+3,w
  6856  1090  00A7               	movwf	___flge@ff2+3
  6857  1091  082A               	movf	??___flge+2,w
  6858  1092  00A6               	movwf	___flge@ff2+2
  6859  1093  0829               	movf	??___flge+1,w
  6860  1094  00A5               	movwf	___flge@ff2+1
  6861  1095  0828               	movf	??___flge,w
  6862  1096  00A4               	movwf	___flge@ff2
  6863  1097                     l592:
  6864  1097  3080               	movlw	128
  6865  1098  06A3               	xorwf	___flge@ff1+3,f
  6866  1099  3080               	movlw	128
  6867  109A  06A7               	xorwf	___flge@ff2+3,f
  6868  109B  0827               	movf	___flge@ff2+3,w
  6869  109C  0223               	subwf	___flge@ff1+3,w
  6870  109D  1D03               	skipz
  6871  109E  28A9               	goto	u7025
  6872  109F  0826               	movf	___flge@ff2+2,w
  6873  10A0  0222               	subwf	___flge@ff1+2,w
  6874  10A1  1D03               	skipz
  6875  10A2  28A9               	goto	u7025
  6876  10A3  0825               	movf	___flge@ff2+1,w
  6877  10A4  0221               	subwf	___flge@ff1+1,w
  6878  10A5  1D03               	skipz
  6879  10A6  28A9               	goto	u7025
  6880  10A7  0824               	movf	___flge@ff2,w
  6881  10A8  0220               	subwf	___flge@ff1,w
  6882  10A9                     u7025:
  6883  10A9  1803               	skipnc
  6884  10AA  28AC               	goto	u7021
  6885  10AB  28AD               	goto	u7020
  6886  10AC                     u7021:
  6887  10AC  28AF               	goto	l4051
  6888  10AD                     u7020:
  6889  10AD                     l4049:
  6890  10AD  1003               	clrc
  6891  10AE  28B0               	goto	l593
  6892  10AF                     l4051:
  6893  10AF  1403               	setc
  6894  10B0                     l593:
  6895  10B0  0008               	return
  6896  10B1                     __end_of___flge:
  6897                           
  6898                           	psect	text19
  6899  1D0F                     __ptext19:	
  6900 ;; *************** function ___fleq *****************
  6901 ;; Defined at:
  6902 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  ff1             4    0[BANK0 ] unsigned char 
  6905 ;;  ff2             4    4[BANK0 ] unsigned char 
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;		None
  6908 ;; Return value:  Size  Location     Type
  6909 ;;		None               void
  6910 ;; Registers used:
  6911 ;;		wreg, status,2, status,0
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6917 ;;      Params:         0       8       0       0       0
  6918 ;;      Locals:         0       0       0       0       0
  6919 ;;      Temps:          0       4       0       0       0
  6920 ;;      Totals:         0      12       0       0       0
  6921 ;;Total ram usage:       12 bytes
  6922 ;; Hardware stack levels used:    1
  6923 ;; Hardware stack levels required when called:    3
  6924 ;; This function calls:
  6925 ;;		Nothing
  6926 ;; This function is called by:
  6927 ;;		_sprintf
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           
  6932                           ;psect for function ___fleq
  6933  1D0F                     ___fleq:
  6934  1D0F                     l4023:	
  6935                           ;incstack = 0
  6936                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6937                           
  6938  1D0F  3000               	movlw	0
  6939  1D10  1283               	bcf	3,5	;RP0=0, select bank0
  6940  1D11  1303               	bcf	3,6	;RP1=0, select bank0
  6941  1D12  0520               	andwf	___fleq@ff1,w
  6942  1D13  00A8               	movwf	??___fleq
  6943  1D14  3000               	movlw	0
  6944  1D15  0521               	andwf	___fleq@ff1+1,w
  6945  1D16  00A9               	movwf	??___fleq+1
  6946  1D17  3080               	movlw	128
  6947  1D18  0522               	andwf	___fleq@ff1+2,w
  6948  1D19  00AA               	movwf	??___fleq+2
  6949  1D1A  307F               	movlw	127
  6950  1D1B  0523               	andwf	___fleq@ff1+3,w
  6951  1D1C  00AB               	movwf	??___fleq+3
  6952  1D1D  082B               	movf	??___fleq+3,w
  6953  1D1E  042A               	iorwf	??___fleq+2,w
  6954  1D1F  0429               	iorwf	??___fleq+1,w
  6955  1D20  0428               	iorwf	??___fleq,w
  6956  1D21  1D03               	skipz
  6957  1D22  2D24               	goto	u6931
  6958  1D23  2D25               	goto	u6930
  6959  1D24                     u6931:
  6960  1D24  2D2D               	goto	l584
  6961  1D25                     u6930:
  6962  1D25                     l4025:
  6963  1D25  3000               	movlw	0
  6964  1D26  00A3               	movwf	___fleq@ff1+3
  6965  1D27  3000               	movlw	0
  6966  1D28  00A2               	movwf	___fleq@ff1+2
  6967  1D29  3000               	movlw	0
  6968  1D2A  00A1               	movwf	___fleq@ff1+1
  6969  1D2B  3000               	movlw	0
  6970  1D2C  00A0               	movwf	___fleq@ff1
  6971  1D2D                     l584:
  6972  1D2D  3000               	movlw	0
  6973  1D2E  0524               	andwf	___fleq@ff2,w
  6974  1D2F  00A8               	movwf	??___fleq
  6975  1D30  3000               	movlw	0
  6976  1D31  0525               	andwf	___fleq@ff2+1,w
  6977  1D32  00A9               	movwf	??___fleq+1
  6978  1D33  3080               	movlw	128
  6979  1D34  0526               	andwf	___fleq@ff2+2,w
  6980  1D35  00AA               	movwf	??___fleq+2
  6981  1D36  307F               	movlw	127
  6982  1D37  0527               	andwf	___fleq@ff2+3,w
  6983  1D38  00AB               	movwf	??___fleq+3
  6984  1D39  082B               	movf	??___fleq+3,w
  6985  1D3A  042A               	iorwf	??___fleq+2,w
  6986  1D3B  0429               	iorwf	??___fleq+1,w
  6987  1D3C  0428               	iorwf	??___fleq,w
  6988  1D3D  1D03               	skipz
  6989  1D3E  2D40               	goto	u6941
  6990  1D3F  2D41               	goto	u6940
  6991  1D40                     u6941:
  6992  1D40  2D49               	goto	l585
  6993  1D41                     u6940:
  6994  1D41                     l4027:
  6995  1D41  3000               	movlw	0
  6996  1D42  00A7               	movwf	___fleq@ff2+3
  6997  1D43  3000               	movlw	0
  6998  1D44  00A6               	movwf	___fleq@ff2+2
  6999  1D45  3000               	movlw	0
  7000  1D46  00A5               	movwf	___fleq@ff2+1
  7001  1D47  3000               	movlw	0
  7002  1D48  00A4               	movwf	___fleq@ff2
  7003  1D49                     l585:
  7004  1D49  0827               	movf	___fleq@ff2+3,w
  7005  1D4A  0623               	xorwf	___fleq@ff1+3,w
  7006  1D4B  1D03               	skipz
  7007  1D4C  2D57               	goto	u6955
  7008  1D4D  0826               	movf	___fleq@ff2+2,w
  7009  1D4E  0622               	xorwf	___fleq@ff1+2,w
  7010  1D4F  1D03               	skipz
  7011  1D50  2D57               	goto	u6955
  7012  1D51  0825               	movf	___fleq@ff2+1,w
  7013  1D52  0621               	xorwf	___fleq@ff1+1,w
  7014  1D53  1D03               	skipz
  7015  1D54  2D57               	goto	u6955
  7016  1D55  0824               	movf	___fleq@ff2,w
  7017  1D56  0620               	xorwf	___fleq@ff1,w
  7018  1D57                     u6955:
  7019  1D57  1903               	skipnz
  7020  1D58  2D5A               	goto	u6951
  7021  1D59  2D5B               	goto	u6950
  7022  1D5A                     u6951:
  7023  1D5A  2D5D               	goto	l4031
  7024  1D5B                     u6950:
  7025  1D5B                     l4029:
  7026  1D5B  1003               	clrc
  7027  1D5C  2D5E               	goto	l586
  7028  1D5D                     l4031:
  7029  1D5D  1403               	setc
  7030  1D5E                     l586:
  7031  1D5E  0008               	return
  7032  1D5F                     __end_of___fleq:
  7033                           
  7034                           	psect	text20
  7035  1B23                     __ptext20:	
  7036 ;; *************** function _send_crct *****************
  7037 ;; Defined at:
  7038 ;;		line 174 in file "main.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;  st              1    wreg     PTR unsigned char 
  7041 ;;		 -> STR_3(5), 
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;  st              1    0[BANK0 ] PTR unsigned char 
  7044 ;;		 -> STR_3(5), 
  7045 ;;  i               2    1[BANK0 ] int 
  7046 ;; Return value:  Size  Location     Type
  7047 ;;                  1    wreg      void 
  7048 ;; Registers used:
  7049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7055 ;;      Params:         0       0       0       0       0
  7056 ;;      Locals:         0       3       0       0       0
  7057 ;;      Temps:          0       0       0       0       0
  7058 ;;      Totals:         0       3       0       0       0
  7059 ;;Total ram usage:        3 bytes
  7060 ;; Hardware stack levels used:    1
  7061 ;; Hardware stack levels required when called:    4
  7062 ;; This function calls:
  7063 ;;		_send_char
  7064 ;; This function is called by:
  7065 ;;		_main
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           
  7070                           ;psect for function _send_crct
  7071  1B23                     _send_crct:
  7072                           
  7073                           ;incstack = 0
  7074                           ; Regs used in _send_crct: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7075                           ;send_crct@st stored from wreg
  7076  1B23  1283               	bcf	3,5	;RP0=0, select bank0
  7077  1B24  1303               	bcf	3,6	;RP1=0, select bank0
  7078  1B25  00A0               	movwf	send_crct@st
  7079  1B26                     l4407:
  7080                           
  7081                           ;main.c: 175:     int i = 0;
  7082  1B26  01A1               	clrf	send_crct@i
  7083  1B27  01A2               	clrf	send_crct@i+1
  7084                           
  7085                           ;main.c: 176:     while (st[i] != 0){
  7086  1B28  2B3E               	goto	l4413
  7087  1B29                     l4409:
  7088                           
  7089                           ;main.c: 177:         send_char(st[i]);
  7090  1B29  0821               	movf	send_crct@i,w
  7091  1B2A  0720               	addwf	send_crct@st,w
  7092  1B2B  0084               	movwf	4
  7093  1B2C  160A  158A  200A  160A  158A  	fcall	stringdir
  7094  1B31  160A  158A  2241  160A  158A  	fcall	_send_char
  7095  1B36                     l4411:
  7096                           
  7097                           ;main.c: 178:         i++;
  7098  1B36  3001               	movlw	1
  7099  1B37  1283               	bcf	3,5	;RP0=0, select bank0
  7100  1B38  1303               	bcf	3,6	;RP1=0, select bank0
  7101  1B39  07A1               	addwf	send_crct@i,f
  7102  1B3A  1803               	skipnc
  7103  1B3B  0AA2               	incf	send_crct@i+1,f
  7104  1B3C  3000               	movlw	0
  7105  1B3D  07A2               	addwf	send_crct@i+1,f
  7106  1B3E                     l4413:
  7107                           
  7108                           ;main.c: 176:     while (st[i] != 0){
  7109  1B3E  0821               	movf	send_crct@i,w
  7110  1B3F  0720               	addwf	send_crct@st,w
  7111  1B40  0084               	movwf	4
  7112  1B41  160A  158A  200A  160A  158A  	fcall	stringdir
  7113  1B46  3A00               	xorlw	0
  7114  1B47  1D03               	skipz
  7115  1B48  2B4A               	goto	u7701
  7116  1B49  2B4B               	goto	u7700
  7117  1B4A                     u7701:
  7118  1B4A  2B29               	goto	l4409
  7119  1B4B                     u7700:
  7120  1B4B                     l118:
  7121  1B4B  0008               	return
  7122  1B4C                     __end_of_send_crct:
  7123                           
  7124                           	psect	text21
  7125  1A41                     __ptext21:	
  7126 ;; *************** function _send_char *****************
  7127 ;; Defined at:
  7128 ;;		line 182 in file "main.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;  dato            1    wreg     unsigned char 
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;  dato            1    5[COMMON] unsigned char 
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  1    wreg      void 
  7135 ;; Registers used:
  7136 ;;		wreg
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7142 ;;      Params:         0       0       0       0       0
  7143 ;;      Locals:         1       0       0       0       0
  7144 ;;      Temps:          0       0       0       0       0
  7145 ;;      Totals:         1       0       0       0       0
  7146 ;;Total ram usage:        1 bytes
  7147 ;; Hardware stack levels used:    1
  7148 ;; Hardware stack levels required when called:    3
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_send_crct
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156                           
  7157                           ;psect for function _send_char
  7158  1A41                     _send_char:
  7159                           
  7160                           ;incstack = 0
  7161                           ; Regs used in _send_char: [wreg]
  7162                           ;send_char@dato stored from wreg
  7163  1A41  00F5               	movwf	send_char@dato
  7164  1A42                     l3873:
  7165  1A42                     l121:	
  7166                           ;main.c: 183:     while(!TXIF);
  7167                           
  7168  1A42  1283               	bcf	3,5	;RP0=0, select bank0
  7169  1A43  1303               	bcf	3,6	;RP1=0, select bank0
  7170  1A44  1E0C               	btfss	12,4	;volatile
  7171  1A45  2A47               	goto	u6501
  7172  1A46  2A48               	goto	u6500
  7173  1A47                     u6501:
  7174  1A47  2A42               	goto	l121
  7175  1A48                     u6500:
  7176  1A48                     l3875:
  7177                           
  7178                           ;main.c: 184:     TXREG = dato;
  7179  1A48  0875               	movf	send_char@dato,w
  7180  1A49  0099               	movwf	25	;volatile
  7181  1A4A                     l124:
  7182  1A4A  0008               	return
  7183  1A4B                     __end_of_send_char:
  7184                           
  7185                           	psect	text22
  7186  1BF6                     __ptext22:	
  7187 ;; *************** function _conv *****************
  7188 ;; Defined at:
  7189 ;;		line 146 in file "main.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;  aa              1    wreg     unsigned char 
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;  aa              1   52[BANK0 ] unsigned char 
  7194 ;;  result          4   48[BANK0 ] unsigned char 
  7195 ;; Return value:  Size  Location     Type
  7196 ;;                  4   40[BANK0 ] unsigned char 
  7197 ;; Registers used:
  7198 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7199 ;; Tracked objects:
  7200 ;;		On entry : 0/0
  7201 ;;		On exit  : 0/0
  7202 ;;		Unchanged: 0/0
  7203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7204 ;;      Params:         0       4       0       0       0
  7205 ;;      Locals:         0       5       0       0       0
  7206 ;;      Temps:          0       4       0       0       0
  7207 ;;      Totals:         0      13       0       0       0
  7208 ;;Total ram usage:       13 bytes
  7209 ;; Hardware stack levels used:    1
  7210 ;; Hardware stack levels required when called:    5
  7211 ;; This function calls:
  7212 ;;		___flmul
  7213 ;;		___xxtofl
  7214 ;; This function is called by:
  7215 ;;		_main
  7216 ;; This function uses a non-reentrant model
  7217 ;;
  7218                           
  7219                           
  7220                           ;psect for function _conv
  7221  1BF6                     _conv:
  7222                           
  7223                           ;incstack = 0
  7224                           ; Regs used in _conv: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7225                           ;conv@aa stored from wreg
  7226  1BF6  1283               	bcf	3,5	;RP0=0, select bank0
  7227  1BF7  1303               	bcf	3,6	;RP1=0, select bank0
  7228  1BF8  00D4               	movwf	conv@aa
  7229  1BF9                     l4139:
  7230                           
  7231                           ;main.c: 147:     double result;;main.c: 148:     result = aa*0.0196;
  7232  1BF9  303C               	movlw	60
  7233  1BFA  00B1               	movwf	___flmul@b+3
  7234  1BFB  30A0               	movlw	160
  7235  1BFC  00B0               	movwf	___flmul@b+2
  7236  1BFD  3090               	movlw	144
  7237  1BFE  00AF               	movwf	___flmul@b+1
  7238  1BFF  302E               	movlw	46
  7239  1C00  00AE               	movwf	___flmul@b
  7240  1C01  0854               	movf	conv@aa,w
  7241  1C02  00CC               	movwf	??_conv
  7242  1C03  01CD               	clrf	??_conv+1
  7243  1C04  01CE               	clrf	??_conv+2
  7244  1C05  01CF               	clrf	??_conv+3
  7245  1C06  084F               	movf	??_conv+3,w
  7246  1C07  00A3               	movwf	___xxtofl@val+3
  7247  1C08  084E               	movf	??_conv+2,w
  7248  1C09  00A2               	movwf	___xxtofl@val+2
  7249  1C0A  084D               	movf	??_conv+1,w
  7250  1C0B  00A1               	movwf	___xxtofl@val+1
  7251  1C0C  084C               	movf	??_conv,w
  7252  1C0D  00A0               	movwf	___xxtofl@val
  7253  1C0E  3001               	movlw	1
  7254  1C0F  160A  158A  2744  160A  158A  	fcall	___xxtofl
  7255  1C14  1283               	bcf	3,5	;RP0=0, select bank0
  7256  1C15  1303               	bcf	3,6	;RP1=0, select bank0
  7257  1C16  0823               	movf	?___xxtofl+3,w
  7258  1C17  00B5               	movwf	___flmul@a+3
  7259  1C18  0822               	movf	?___xxtofl+2,w
  7260  1C19  00B4               	movwf	___flmul@a+2
  7261  1C1A  0821               	movf	?___xxtofl+1,w
  7262  1C1B  00B3               	movwf	___flmul@a+1
  7263  1C1C  0820               	movf	?___xxtofl,w
  7264  1C1D  00B2               	movwf	___flmul@a
  7265  1C1E  120A  158A  213C  160A  158A  	fcall	___flmul
  7266  1C23  1283               	bcf	3,5	;RP0=0, select bank0
  7267  1C24  1303               	bcf	3,6	;RP1=0, select bank0
  7268  1C25  0831               	movf	?___flmul+3,w
  7269  1C26  00D3               	movwf	conv@result+3
  7270  1C27  0830               	movf	?___flmul+2,w
  7271  1C28  00D2               	movwf	conv@result+2
  7272  1C29  082F               	movf	?___flmul+1,w
  7273  1C2A  00D1               	movwf	conv@result+1
  7274  1C2B  082E               	movf	?___flmul,w
  7275  1C2C  00D0               	movwf	conv@result
  7276  1C2D                     l4141:
  7277                           
  7278                           ;main.c: 149:     return result;
  7279  1C2D  0853               	movf	conv@result+3,w
  7280  1C2E  00CB               	movwf	?_conv+3
  7281  1C2F  0852               	movf	conv@result+2,w
  7282  1C30  00CA               	movwf	?_conv+2
  7283  1C31  0851               	movf	conv@result+1,w
  7284  1C32  00C9               	movwf	?_conv+1
  7285  1C33  0850               	movf	conv@result,w
  7286  1C34  00C8               	movwf	?_conv
  7287  1C35                     l109:
  7288  1C35  0008               	return
  7289  1C36                     __end_of_conv:
  7290                           
  7291                           	psect	text23
  7292  1F44                     __ptext23:	
  7293 ;; *************** function ___xxtofl *****************
  7294 ;; Defined at:
  7295 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;  sign            1    wreg     unsigned char 
  7298 ;;  val             4    0[BANK0 ] long 
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  sign            1    8[BANK0 ] unsigned char 
  7301 ;;  arg             4   10[BANK0 ] unsigned long 
  7302 ;;  exp             1    9[BANK0 ] unsigned char 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  4    0[BANK0 ] unsigned char 
  7305 ;; Registers used:
  7306 ;;		wreg, status,2, status,0
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7312 ;;      Params:         0       4       0       0       0
  7313 ;;      Locals:         0       6       0       0       0
  7314 ;;      Temps:          0       4       0       0       0
  7315 ;;      Totals:         0      14       0       0       0
  7316 ;;Total ram usage:       14 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; Hardware stack levels required when called:    3
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_conv
  7323 ;;		_sprintf
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           
  7328                           ;psect for function ___xxtofl
  7329  1F44                     ___xxtofl:
  7330                           
  7331                           ;incstack = 0
  7332                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7333                           ;___xxtofl@sign stored from wreg
  7334  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  7335  1F45  1303               	bcf	3,6	;RP1=0, select bank0
  7336  1F46  00A8               	movwf	___xxtofl@sign
  7337  1F47                     l4063:
  7338  1F47  0828               	movf	___xxtofl@sign,w
  7339  1F48  1903               	btfsc	3,2
  7340  1F49  2F4B               	goto	u7041
  7341  1F4A  2F4C               	goto	u7040
  7342  1F4B                     u7041:
  7343  1F4B  2F60               	goto	l4069
  7344  1F4C                     u7040:
  7345  1F4C                     l4065:
  7346  1F4C  1FA3               	btfss	___xxtofl@val+3,7
  7347  1F4D  2F4F               	goto	u7051
  7348  1F4E  2F50               	goto	u7050
  7349  1F4F                     u7051:
  7350  1F4F  2F60               	goto	l4069
  7351  1F50                     u7050:
  7352  1F50                     l4067:
  7353  1F50  0920               	comf	___xxtofl@val,w
  7354  1F51  00AA               	movwf	___xxtofl@arg
  7355  1F52  0921               	comf	___xxtofl@val+1,w
  7356  1F53  00AB               	movwf	___xxtofl@arg+1
  7357  1F54  0922               	comf	___xxtofl@val+2,w
  7358  1F55  00AC               	movwf	___xxtofl@arg+2
  7359  1F56  0923               	comf	___xxtofl@val+3,w
  7360  1F57  00AD               	movwf	___xxtofl@arg+3
  7361  1F58  0AAA               	incf	___xxtofl@arg,f
  7362  1F59  1903               	skipnz
  7363  1F5A  0AAB               	incf	___xxtofl@arg+1,f
  7364  1F5B  1903               	skipnz
  7365  1F5C  0AAC               	incf	___xxtofl@arg+2,f
  7366  1F5D  1903               	skipnz
  7367  1F5E  0AAD               	incf	___xxtofl@arg+3,f
  7368  1F5F  2F68               	goto	l865
  7369  1F60                     l4069:
  7370  1F60  0823               	movf	___xxtofl@val+3,w
  7371  1F61  00AD               	movwf	___xxtofl@arg+3
  7372  1F62  0822               	movf	___xxtofl@val+2,w
  7373  1F63  00AC               	movwf	___xxtofl@arg+2
  7374  1F64  0821               	movf	___xxtofl@val+1,w
  7375  1F65  00AB               	movwf	___xxtofl@arg+1
  7376  1F66  0820               	movf	___xxtofl@val,w
  7377  1F67  00AA               	movwf	___xxtofl@arg
  7378  1F68                     l865:
  7379  1F68  0823               	movf	___xxtofl@val+3,w
  7380  1F69  0422               	iorwf	___xxtofl@val+2,w
  7381  1F6A  0421               	iorwf	___xxtofl@val+1,w
  7382  1F6B  0420               	iorwf	___xxtofl@val,w
  7383  1F6C  1D03               	skipz
  7384  1F6D  2F6F               	goto	u7061
  7385  1F6E  2F70               	goto	u7060
  7386  1F6F                     u7061:
  7387  1F6F  2F79               	goto	l4075
  7388  1F70                     u7060:
  7389  1F70                     l4071:
  7390  1F70  3000               	movlw	0
  7391  1F71  00A3               	movwf	?___xxtofl+3
  7392  1F72  3000               	movlw	0
  7393  1F73  00A2               	movwf	?___xxtofl+2
  7394  1F74  3000               	movlw	0
  7395  1F75  00A1               	movwf	?___xxtofl+1
  7396  1F76  3000               	movlw	0
  7397  1F77  00A0               	movwf	?___xxtofl
  7398  1F78  2FFF               	goto	l867
  7399  1F79                     l4075:
  7400  1F79  3096               	movlw	150
  7401  1F7A  00A4               	movwf	??___xxtofl
  7402  1F7B  0824               	movf	??___xxtofl,w
  7403  1F7C  00A9               	movwf	___xxtofl@exp
  7404  1F7D  2F8B               	goto	l4079
  7405  1F7E                     l4077:
  7406  1F7E  3001               	movlw	1
  7407  1F7F  00A4               	movwf	??___xxtofl
  7408  1F80  0824               	movf	??___xxtofl,w
  7409  1F81  07A9               	addwf	___xxtofl@exp,f
  7410  1F82  3001               	movlw	1
  7411  1F83                     u7075:
  7412  1F83  1003               	clrc
  7413  1F84  0CAD               	rrf	___xxtofl@arg+3,f
  7414  1F85  0CAC               	rrf	___xxtofl@arg+2,f
  7415  1F86  0CAB               	rrf	___xxtofl@arg+1,f
  7416  1F87  0CAA               	rrf	___xxtofl@arg,f
  7417  1F88  3EFF               	addlw	-1
  7418  1F89  1D03               	skipz
  7419  1F8A  2F83               	goto	u7075
  7420  1F8B                     l4079:
  7421  1F8B  30FE               	movlw	254
  7422  1F8C  052D               	andwf	___xxtofl@arg+3,w
  7423  1F8D  1D03               	btfss	3,2
  7424  1F8E  2F90               	goto	u7081
  7425  1F8F  2F91               	goto	u7080
  7426  1F90                     u7081:
  7427  1F90  2F7E               	goto	l4077
  7428  1F91                     u7080:
  7429  1F91  2FAD               	goto	l871
  7430  1F92                     l4081:
  7431  1F92  3001               	movlw	1
  7432  1F93  00A4               	movwf	??___xxtofl
  7433  1F94  0824               	movf	??___xxtofl,w
  7434  1F95  07A9               	addwf	___xxtofl@exp,f
  7435  1F96                     l4083:
  7436  1F96  3001               	movlw	1
  7437  1F97  07AA               	addwf	___xxtofl@arg,f
  7438  1F98  3000               	movlw	0
  7439  1F99  1803               	skipnc
  7440  1F9A  3001               	movlw	1
  7441  1F9B  07AB               	addwf	___xxtofl@arg+1,f
  7442  1F9C  3000               	movlw	0
  7443  1F9D  1803               	skipnc
  7444  1F9E  3001               	movlw	1
  7445  1F9F  07AC               	addwf	___xxtofl@arg+2,f
  7446  1FA0  3000               	movlw	0
  7447  1FA1  1803               	skipnc
  7448  1FA2  3001               	movlw	1
  7449  1FA3  07AD               	addwf	___xxtofl@arg+3,f
  7450  1FA4                     l4085:
  7451  1FA4  3001               	movlw	1
  7452  1FA5                     u7095:
  7453  1FA5  1003               	clrc
  7454  1FA6  0CAD               	rrf	___xxtofl@arg+3,f
  7455  1FA7  0CAC               	rrf	___xxtofl@arg+2,f
  7456  1FA8  0CAB               	rrf	___xxtofl@arg+1,f
  7457  1FA9  0CAA               	rrf	___xxtofl@arg,f
  7458  1FAA  3EFF               	addlw	-1
  7459  1FAB  1D03               	skipz
  7460  1FAC  2FA5               	goto	u7095
  7461  1FAD                     l871:
  7462  1FAD  30FF               	movlw	255
  7463  1FAE  052D               	andwf	___xxtofl@arg+3,w
  7464  1FAF  1D03               	btfss	3,2
  7465  1FB0  2FB2               	goto	u7101
  7466  1FB1  2FB3               	goto	u7100
  7467  1FB2                     u7101:
  7468  1FB2  2F92               	goto	l4081
  7469  1FB3                     u7100:
  7470  1FB3  2FBF               	goto	l4089
  7471  1FB4                     l4087:
  7472  1FB4  3001               	movlw	1
  7473  1FB5  02A9               	subwf	___xxtofl@exp,f
  7474  1FB6  3001               	movlw	1
  7475  1FB7  00A4               	movwf	??___xxtofl
  7476  1FB8                     u7115:
  7477  1FB8  1003               	clrc
  7478  1FB9  0DAA               	rlf	___xxtofl@arg,f
  7479  1FBA  0DAB               	rlf	___xxtofl@arg+1,f
  7480  1FBB  0DAC               	rlf	___xxtofl@arg+2,f
  7481  1FBC  0DAD               	rlf	___xxtofl@arg+3,f
  7482  1FBD  0BA4               	decfsz	??___xxtofl,f
  7483  1FBE  2FB8               	goto	u7115
  7484  1FBF                     l4089:
  7485  1FBF  1BAC               	btfsc	___xxtofl@arg+2,7
  7486  1FC0  2FC2               	goto	u7121
  7487  1FC1  2FC3               	goto	u7120
  7488  1FC2                     u7121:
  7489  1FC2  2FC9               	goto	l878
  7490  1FC3                     u7120:
  7491  1FC3                     l4091:
  7492  1FC3  3002               	movlw	2
  7493  1FC4  0229               	subwf	___xxtofl@exp,w
  7494  1FC5  1803               	skipnc
  7495  1FC6  2FC8               	goto	u7131
  7496  1FC7  2FC9               	goto	u7130
  7497  1FC8                     u7131:
  7498  1FC8  2FB4               	goto	l4087
  7499  1FC9                     u7130:
  7500  1FC9                     l878:
  7501  1FC9  1829               	btfsc	___xxtofl@exp,0
  7502  1FCA  2FCC               	goto	u7141
  7503  1FCB  2FCD               	goto	u7140
  7504  1FCC                     u7141:
  7505  1FCC  2FD5               	goto	l879
  7506  1FCD                     u7140:
  7507  1FCD                     l4093:
  7508  1FCD  30FF               	movlw	255
  7509  1FCE  05AA               	andwf	___xxtofl@arg,f
  7510  1FCF  30FF               	movlw	255
  7511  1FD0  05AB               	andwf	___xxtofl@arg+1,f
  7512  1FD1  307F               	movlw	127
  7513  1FD2  05AC               	andwf	___xxtofl@arg+2,f
  7514  1FD3  30FF               	movlw	255
  7515  1FD4  05AD               	andwf	___xxtofl@arg+3,f
  7516  1FD5                     l879:
  7517  1FD5  1003               	clrc
  7518  1FD6  0CA9               	rrf	___xxtofl@exp,f
  7519  1FD7                     l4095:
  7520  1FD7  0829               	movf	___xxtofl@exp,w
  7521  1FD8  00A4               	movwf	??___xxtofl
  7522  1FD9  01A5               	clrf	??___xxtofl+1
  7523  1FDA  01A6               	clrf	??___xxtofl+2
  7524  1FDB  01A7               	clrf	??___xxtofl+3
  7525  1FDC  3018               	movlw	24
  7526  1FDD                     u7155:
  7527  1FDD  1003               	clrc
  7528  1FDE  0DA4               	rlf	??___xxtofl,f
  7529  1FDF  0DA5               	rlf	??___xxtofl+1,f
  7530  1FE0  0DA6               	rlf	??___xxtofl+2,f
  7531  1FE1  0DA7               	rlf	??___xxtofl+3,f
  7532  1FE2                     u7150:
  7533  1FE2  3EFF               	addlw	-1
  7534  1FE3  1D03               	skipz
  7535  1FE4  2FDD               	goto	u7155
  7536  1FE5  0824               	movf	??___xxtofl,w
  7537  1FE6  04AA               	iorwf	___xxtofl@arg,f
  7538  1FE7  0825               	movf	??___xxtofl+1,w
  7539  1FE8  04AB               	iorwf	___xxtofl@arg+1,f
  7540  1FE9  0826               	movf	??___xxtofl+2,w
  7541  1FEA  04AC               	iorwf	___xxtofl@arg+2,f
  7542  1FEB  0827               	movf	??___xxtofl+3,w
  7543  1FEC  04AD               	iorwf	___xxtofl@arg+3,f
  7544  1FED                     l4097:
  7545  1FED  0828               	movf	___xxtofl@sign,w
  7546  1FEE  1903               	btfsc	3,2
  7547  1FEF  2FF1               	goto	u7161
  7548  1FF0  2FF2               	goto	u7160
  7549  1FF1                     u7161:
  7550  1FF1  2FF7               	goto	l4103
  7551  1FF2                     u7160:
  7552  1FF2                     l4099:
  7553  1FF2  1FA3               	btfss	___xxtofl@val+3,7
  7554  1FF3  2FF5               	goto	u7171
  7555  1FF4  2FF6               	goto	u7170
  7556  1FF5                     u7171:
  7557  1FF5  2FF7               	goto	l4103
  7558  1FF6                     u7170:
  7559  1FF6                     l4101:
  7560  1FF6  17AD               	bsf	___xxtofl@arg+3,7
  7561  1FF7                     l4103:
  7562  1FF7  082D               	movf	___xxtofl@arg+3,w
  7563  1FF8  00A3               	movwf	?___xxtofl+3
  7564  1FF9  082C               	movf	___xxtofl@arg+2,w
  7565  1FFA  00A2               	movwf	?___xxtofl+2
  7566  1FFB  082B               	movf	___xxtofl@arg+1,w
  7567  1FFC  00A1               	movwf	?___xxtofl+1
  7568  1FFD  082A               	movf	___xxtofl@arg,w
  7569  1FFE  00A0               	movwf	?___xxtofl
  7570  1FFF                     l867:
  7571  1FFF  0008               	return
  7572  2000                     __end_of___xxtofl:
  7573                           
  7574                           	psect	text24
  7575  093C                     __ptext24:	
  7576 ;; *************** function ___flmul *****************
  7577 ;; Defined at:
  7578 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;  b               4   14[BANK0 ] unsigned char 
  7581 ;;  a               4   18[BANK0 ] unsigned char 
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;  prod            4   34[BANK0 ] struct .
  7584 ;;  grs             4   29[BANK0 ] unsigned long 
  7585 ;;  temp            2   38[BANK0 ] struct .
  7586 ;;  bexp            1   33[BANK0 ] unsigned char 
  7587 ;;  aexp            1   28[BANK0 ] unsigned char 
  7588 ;;  sign            1   27[BANK0 ] unsigned char 
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  4   14[BANK0 ] unsigned char 
  7591 ;; Registers used:
  7592 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7598 ;;      Params:         0       8       0       0       0
  7599 ;;      Locals:         0      13       0       0       0
  7600 ;;      Temps:          0       5       0       0       0
  7601 ;;      Totals:         0      26       0       0       0
  7602 ;;Total ram usage:       26 bytes
  7603 ;; Hardware stack levels used:    1
  7604 ;; Hardware stack levels required when called:    4
  7605 ;; This function calls:
  7606 ;;		__Umul8_16
  7607 ;; This function is called by:
  7608 ;;		_conv
  7609 ;;		_fround
  7610 ;;		_scale
  7611 ;;		_sprintf
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           
  7616                           ;psect for function ___flmul
  7617  093C                     ___flmul:
  7618  093C                     l3733:	
  7619                           ;incstack = 0
  7620                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7621                           
  7622  093C  1283               	bcf	3,5	;RP0=0, select bank0
  7623  093D  1303               	bcf	3,6	;RP1=0, select bank0
  7624  093E  0831               	movf	___flmul@b+3,w
  7625  093F  3980               	andlw	128
  7626  0940  00B6               	movwf	??___flmul
  7627  0941  0836               	movf	??___flmul,w
  7628  0942  00BB               	movwf	___flmul@sign
  7629  0943                     l3735:
  7630  0943  0831               	movf	___flmul@b+3,w
  7631  0944  00B6               	movwf	??___flmul
  7632  0945  0736               	addwf	??___flmul,w
  7633  0946  00B7               	movwf	??___flmul+1
  7634  0947  0837               	movf	??___flmul+1,w
  7635  0948  00C1               	movwf	___flmul@bexp
  7636  0949                     l3737:
  7637  0949  1FB0               	btfss	___flmul@b+2,7
  7638  094A  294C               	goto	u6131
  7639  094B  294D               	goto	u6130
  7640  094C                     u6131:
  7641  094C  294E               	goto	l3741
  7642  094D                     u6130:
  7643  094D                     l3739:
  7644  094D  1441               	bsf	___flmul@bexp,0
  7645  094E                     l3741:
  7646  094E  0841               	movf	___flmul@bexp,w
  7647  094F  1903               	btfsc	3,2
  7648  0950  2952               	goto	u6141
  7649  0951  2953               	goto	u6140
  7650  0952                     u6141:
  7651  0952  2962               	goto	l3749
  7652  0953                     u6140:
  7653  0953                     l3743:
  7654  0953  0A41               	incf	___flmul@bexp,w
  7655  0954  1D03               	btfss	3,2
  7656  0955  2957               	goto	u6151
  7657  0956  2958               	goto	u6150
  7658  0957                     u6151:
  7659  0957  2960               	goto	l3747
  7660  0958                     u6150:
  7661  0958                     l3745:
  7662  0958  3000               	movlw	0
  7663  0959  00B1               	movwf	___flmul@b+3
  7664  095A  3000               	movlw	0
  7665  095B  00B0               	movwf	___flmul@b+2
  7666  095C  3000               	movlw	0
  7667  095D  00AF               	movwf	___flmul@b+1
  7668  095E  3000               	movlw	0
  7669  095F  00AE               	movwf	___flmul@b
  7670  0960                     l3747:
  7671  0960  17B0               	bsf	___flmul@b+2,7
  7672  0961  296A               	goto	l3751
  7673  0962                     l3749:
  7674  0962  3000               	movlw	0
  7675  0963  00B1               	movwf	___flmul@b+3
  7676  0964  3000               	movlw	0
  7677  0965  00B0               	movwf	___flmul@b+2
  7678  0966  3000               	movlw	0
  7679  0967  00AF               	movwf	___flmul@b+1
  7680  0968  3000               	movlw	0
  7681  0969  00AE               	movwf	___flmul@b
  7682  096A                     l3751:
  7683  096A  0835               	movf	___flmul@a+3,w
  7684  096B  3980               	andlw	128
  7685  096C  00B6               	movwf	??___flmul
  7686  096D  0836               	movf	??___flmul,w
  7687  096E  06BB               	xorwf	___flmul@sign,f
  7688  096F                     l3753:
  7689  096F  0835               	movf	___flmul@a+3,w
  7690  0970  00B6               	movwf	??___flmul
  7691  0971  0736               	addwf	??___flmul,w
  7692  0972  00B7               	movwf	??___flmul+1
  7693  0973  0837               	movf	??___flmul+1,w
  7694  0974  00BC               	movwf	___flmul@aexp
  7695  0975                     l3755:
  7696  0975  1FB4               	btfss	___flmul@a+2,7
  7697  0976  2978               	goto	u6161
  7698  0977  2979               	goto	u6160
  7699  0978                     u6161:
  7700  0978  297A               	goto	l3759
  7701  0979                     u6160:
  7702  0979                     l3757:
  7703  0979  143C               	bsf	___flmul@aexp,0
  7704  097A                     l3759:
  7705  097A  083C               	movf	___flmul@aexp,w
  7706  097B  1903               	btfsc	3,2
  7707  097C  297E               	goto	u6171
  7708  097D  297F               	goto	u6170
  7709  097E                     u6171:
  7710  097E  298E               	goto	l3767
  7711  097F                     u6170:
  7712  097F                     l3761:
  7713  097F  0A3C               	incf	___flmul@aexp,w
  7714  0980  1D03               	btfss	3,2
  7715  0981  2983               	goto	u6181
  7716  0982  2984               	goto	u6180
  7717  0983                     u6181:
  7718  0983  298C               	goto	l3765
  7719  0984                     u6180:
  7720  0984                     l3763:
  7721  0984  3000               	movlw	0
  7722  0985  00B5               	movwf	___flmul@a+3
  7723  0986  3000               	movlw	0
  7724  0987  00B4               	movwf	___flmul@a+2
  7725  0988  3000               	movlw	0
  7726  0989  00B3               	movwf	___flmul@a+1
  7727  098A  3000               	movlw	0
  7728  098B  00B2               	movwf	___flmul@a
  7729  098C                     l3765:
  7730  098C  17B4               	bsf	___flmul@a+2,7
  7731  098D  2996               	goto	l3769
  7732  098E                     l3767:
  7733  098E  3000               	movlw	0
  7734  098F  00B5               	movwf	___flmul@a+3
  7735  0990  3000               	movlw	0
  7736  0991  00B4               	movwf	___flmul@a+2
  7737  0992  3000               	movlw	0
  7738  0993  00B3               	movwf	___flmul@a+1
  7739  0994  3000               	movlw	0
  7740  0995  00B2               	movwf	___flmul@a
  7741  0996                     l3769:
  7742  0996  083C               	movf	___flmul@aexp,w
  7743  0997  1903               	btfsc	3,2
  7744  0998  299A               	goto	u6191
  7745  0999  299B               	goto	u6190
  7746  099A                     u6191:
  7747  099A  29A0               	goto	l3773
  7748  099B                     u6190:
  7749  099B                     l3771:
  7750  099B  0841               	movf	___flmul@bexp,w
  7751  099C  1D03               	btfss	3,2
  7752  099D  299F               	goto	u6201
  7753  099E  29A0               	goto	u6200
  7754  099F                     u6201:
  7755  099F  29A9               	goto	l3777
  7756  09A0                     u6200:
  7757  09A0                     l3773:
  7758  09A0  3000               	movlw	0
  7759  09A1  00B1               	movwf	?___flmul+3
  7760  09A2  3000               	movlw	0
  7761  09A3  00B0               	movwf	?___flmul+2
  7762  09A4  3000               	movlw	0
  7763  09A5  00AF               	movwf	?___flmul+1
  7764  09A6  3000               	movlw	0
  7765  09A7  00AE               	movwf	?___flmul
  7766  09A8  2C9C               	goto	l821
  7767  09A9                     l3777:
  7768  09A9  082E               	movf	___flmul@b,w
  7769  09AA  00B6               	movwf	??___flmul
  7770  09AB  0836               	movf	??___flmul,w
  7771  09AC  00F5               	movwf	__Umul8_16@multiplicand
  7772  09AD  0834               	movf	___flmul@a+2,w
  7773  09AE  160A  158A  22FA  120A  158A  	fcall	__Umul8_16
  7774  09B3  0876               	movf	?__Umul8_16+1,w
  7775  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  7776  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  7777  09B6  00C7               	movwf	___flmul@temp+1
  7778  09B7  0875               	movf	?__Umul8_16,w
  7779  09B8  00C6               	movwf	___flmul@temp
  7780  09B9                     l3779:
  7781  09B9  0846               	movf	___flmul@temp,w
  7782  09BA  00B6               	movwf	??___flmul
  7783  09BB  01B7               	clrf	??___flmul+1
  7784  09BC  01B8               	clrf	??___flmul+2
  7785  09BD  01B9               	clrf	??___flmul+3
  7786  09BE  0839               	movf	??___flmul+3,w
  7787  09BF  00C0               	movwf	___flmul@grs+3
  7788  09C0  0838               	movf	??___flmul+2,w
  7789  09C1  00BF               	movwf	___flmul@grs+2
  7790  09C2  0837               	movf	??___flmul+1,w
  7791  09C3  00BE               	movwf	___flmul@grs+1
  7792  09C4  0836               	movf	??___flmul,w
  7793  09C5  00BD               	movwf	___flmul@grs
  7794  09C6                     l3781:
  7795  09C6  0847               	movf	___flmul@temp+1,w
  7796  09C7  00B6               	movwf	??___flmul
  7797  09C8  01B7               	clrf	??___flmul+1
  7798  09C9  01B8               	clrf	??___flmul+2
  7799  09CA  01B9               	clrf	??___flmul+3
  7800  09CB  0839               	movf	??___flmul+3,w
  7801  09CC  00C5               	movwf	___flmul@prod+3
  7802  09CD  0838               	movf	??___flmul+2,w
  7803  09CE  00C4               	movwf	___flmul@prod+2
  7804  09CF  0837               	movf	??___flmul+1,w
  7805  09D0  00C3               	movwf	___flmul@prod+1
  7806  09D1  0836               	movf	??___flmul,w
  7807  09D2  00C2               	movwf	___flmul@prod
  7808  09D3  082F               	movf	___flmul@b+1,w
  7809  09D4  00B6               	movwf	??___flmul
  7810  09D5  0836               	movf	??___flmul,w
  7811  09D6  00F5               	movwf	__Umul8_16@multiplicand
  7812  09D7  0833               	movf	___flmul@a+1,w
  7813  09D8  160A  158A  22FA  120A  158A  	fcall	__Umul8_16
  7814  09DD  0876               	movf	?__Umul8_16+1,w
  7815  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  7816  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  7817  09E0  00C7               	movwf	___flmul@temp+1
  7818  09E1  0875               	movf	?__Umul8_16,w
  7819  09E2  00C6               	movwf	___flmul@temp
  7820  09E3                     l3783:
  7821  09E3  0846               	movf	___flmul@temp,w
  7822  09E4  00B6               	movwf	??___flmul
  7823  09E5  01B7               	clrf	??___flmul+1
  7824  09E6  01B8               	clrf	??___flmul+2
  7825  09E7  01B9               	clrf	??___flmul+3
  7826  09E8  0836               	movf	??___flmul,w
  7827  09E9  07BD               	addwf	___flmul@grs,f
  7828  09EA  0837               	movf	??___flmul+1,w
  7829  09EB  1103               	clrz
  7830  09EC  1803               	skipnc
  7831  09ED  3E01               	addlw	1
  7832  09EE  1903               	skipnz
  7833  09EF  29F1               	goto	u6211
  7834  09F0  07BE               	addwf	___flmul@grs+1,f
  7835  09F1                     u6211:
  7836  09F1  0838               	movf	??___flmul+2,w
  7837  09F2  1103               	clrz
  7838  09F3  1803               	skipnc
  7839  09F4  3E01               	addlw	1
  7840  09F5  1903               	skipnz
  7841  09F6  29F8               	goto	u6212
  7842  09F7  07BF               	addwf	___flmul@grs+2,f
  7843  09F8                     u6212:
  7844  09F8  0839               	movf	??___flmul+3,w
  7845  09F9  1103               	clrz
  7846  09FA  1803               	skipnc
  7847  09FB  3E01               	addlw	1
  7848  09FC  1903               	skipnz
  7849  09FD  29FF               	goto	u6213
  7850  09FE  07C0               	addwf	___flmul@grs+3,f
  7851  09FF                     u6213:
  7852  09FF                     l3785:
  7853  09FF  0847               	movf	___flmul@temp+1,w
  7854  0A00  00B6               	movwf	??___flmul
  7855  0A01  01B7               	clrf	??___flmul+1
  7856  0A02  01B8               	clrf	??___flmul+2
  7857  0A03  01B9               	clrf	??___flmul+3
  7858  0A04  0836               	movf	??___flmul,w
  7859  0A05  07C2               	addwf	___flmul@prod,f
  7860  0A06  0837               	movf	??___flmul+1,w
  7861  0A07  1103               	clrz
  7862  0A08  1803               	skipnc
  7863  0A09  3E01               	addlw	1
  7864  0A0A  1903               	skipnz
  7865  0A0B  2A0D               	goto	u6221
  7866  0A0C  07C3               	addwf	___flmul@prod+1,f
  7867  0A0D                     u6221:
  7868  0A0D  0838               	movf	??___flmul+2,w
  7869  0A0E  1103               	clrz
  7870  0A0F  1803               	skipnc
  7871  0A10  3E01               	addlw	1
  7872  0A11  1903               	skipnz
  7873  0A12  2A14               	goto	u6222
  7874  0A13  07C4               	addwf	___flmul@prod+2,f
  7875  0A14                     u6222:
  7876  0A14  0839               	movf	??___flmul+3,w
  7877  0A15  1103               	clrz
  7878  0A16  1803               	skipnc
  7879  0A17  3E01               	addlw	1
  7880  0A18  1903               	skipnz
  7881  0A19  2A1B               	goto	u6223
  7882  0A1A  07C5               	addwf	___flmul@prod+3,f
  7883  0A1B                     u6223:
  7884  0A1B  0830               	movf	___flmul@b+2,w
  7885  0A1C  00B6               	movwf	??___flmul
  7886  0A1D  0836               	movf	??___flmul,w
  7887  0A1E  00F5               	movwf	__Umul8_16@multiplicand
  7888  0A1F  0832               	movf	___flmul@a,w
  7889  0A20  160A  158A  22FA  120A  158A  	fcall	__Umul8_16
  7890  0A25  0876               	movf	?__Umul8_16+1,w
  7891  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  7892  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  7893  0A28  00C7               	movwf	___flmul@temp+1
  7894  0A29  0875               	movf	?__Umul8_16,w
  7895  0A2A  00C6               	movwf	___flmul@temp
  7896  0A2B                     l3787:
  7897  0A2B  0846               	movf	___flmul@temp,w
  7898  0A2C  00B6               	movwf	??___flmul
  7899  0A2D  01B7               	clrf	??___flmul+1
  7900  0A2E  01B8               	clrf	??___flmul+2
  7901  0A2F  01B9               	clrf	??___flmul+3
  7902  0A30  0836               	movf	??___flmul,w
  7903  0A31  07BD               	addwf	___flmul@grs,f
  7904  0A32  0837               	movf	??___flmul+1,w
  7905  0A33  1103               	clrz
  7906  0A34  1803               	skipnc
  7907  0A35  3E01               	addlw	1
  7908  0A36  1903               	skipnz
  7909  0A37  2A39               	goto	u6231
  7910  0A38  07BE               	addwf	___flmul@grs+1,f
  7911  0A39                     u6231:
  7912  0A39  0838               	movf	??___flmul+2,w
  7913  0A3A  1103               	clrz
  7914  0A3B  1803               	skipnc
  7915  0A3C  3E01               	addlw	1
  7916  0A3D  1903               	skipnz
  7917  0A3E  2A40               	goto	u6232
  7918  0A3F  07BF               	addwf	___flmul@grs+2,f
  7919  0A40                     u6232:
  7920  0A40  0839               	movf	??___flmul+3,w
  7921  0A41  1103               	clrz
  7922  0A42  1803               	skipnc
  7923  0A43  3E01               	addlw	1
  7924  0A44  1903               	skipnz
  7925  0A45  2A47               	goto	u6233
  7926  0A46  07C0               	addwf	___flmul@grs+3,f
  7927  0A47                     u6233:
  7928  0A47                     l3789:
  7929  0A47  0847               	movf	___flmul@temp+1,w
  7930  0A48  00B6               	movwf	??___flmul
  7931  0A49  01B7               	clrf	??___flmul+1
  7932  0A4A  01B8               	clrf	??___flmul+2
  7933  0A4B  01B9               	clrf	??___flmul+3
  7934  0A4C  0836               	movf	??___flmul,w
  7935  0A4D  07C2               	addwf	___flmul@prod,f
  7936  0A4E  0837               	movf	??___flmul+1,w
  7937  0A4F  1103               	clrz
  7938  0A50  1803               	skipnc
  7939  0A51  3E01               	addlw	1
  7940  0A52  1903               	skipnz
  7941  0A53  2A55               	goto	u6241
  7942  0A54  07C3               	addwf	___flmul@prod+1,f
  7943  0A55                     u6241:
  7944  0A55  0838               	movf	??___flmul+2,w
  7945  0A56  1103               	clrz
  7946  0A57  1803               	skipnc
  7947  0A58  3E01               	addlw	1
  7948  0A59  1903               	skipnz
  7949  0A5A  2A5C               	goto	u6242
  7950  0A5B  07C4               	addwf	___flmul@prod+2,f
  7951  0A5C                     u6242:
  7952  0A5C  0839               	movf	??___flmul+3,w
  7953  0A5D  1103               	clrz
  7954  0A5E  1803               	skipnc
  7955  0A5F  3E01               	addlw	1
  7956  0A60  1903               	skipnz
  7957  0A61  2A63               	goto	u6243
  7958  0A62  07C5               	addwf	___flmul@prod+3,f
  7959  0A63                     u6243:
  7960  0A63                     l3791:
  7961  0A63  3008               	movlw	8
  7962  0A64  00B6               	movwf	??___flmul
  7963  0A65                     u6255:
  7964  0A65  1003               	clrc
  7965  0A66  0DBD               	rlf	___flmul@grs,f
  7966  0A67  0DBE               	rlf	___flmul@grs+1,f
  7967  0A68  0DBF               	rlf	___flmul@grs+2,f
  7968  0A69  0DC0               	rlf	___flmul@grs+3,f
  7969  0A6A  0BB6               	decfsz	??___flmul,f
  7970  0A6B  2A65               	goto	u6255
  7971  0A6C                     l3793:
  7972  0A6C  082F               	movf	___flmul@b+1,w
  7973  0A6D  00B6               	movwf	??___flmul
  7974  0A6E  0836               	movf	??___flmul,w
  7975  0A6F  00F5               	movwf	__Umul8_16@multiplicand
  7976  0A70  0832               	movf	___flmul@a,w
  7977  0A71  160A  158A  22FA  120A  158A  	fcall	__Umul8_16
  7978  0A76  0876               	movf	?__Umul8_16+1,w
  7979  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  7980  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  7981  0A79  00C7               	movwf	___flmul@temp+1
  7982  0A7A  0875               	movf	?__Umul8_16,w
  7983  0A7B  00C6               	movwf	___flmul@temp
  7984  0A7C                     l3795:
  7985  0A7C  0846               	movf	___flmul@temp,w
  7986  0A7D  00B6               	movwf	??___flmul
  7987  0A7E  0847               	movf	___flmul@temp+1,w
  7988  0A7F  00B7               	movwf	??___flmul+1
  7989  0A80  01B8               	clrf	??___flmul+2
  7990  0A81  01B9               	clrf	??___flmul+3
  7991  0A82  0836               	movf	??___flmul,w
  7992  0A83  07BD               	addwf	___flmul@grs,f
  7993  0A84  0837               	movf	??___flmul+1,w
  7994  0A85  1103               	clrz
  7995  0A86  1803               	skipnc
  7996  0A87  3E01               	addlw	1
  7997  0A88  1903               	skipnz
  7998  0A89  2A8B               	goto	u6261
  7999  0A8A  07BE               	addwf	___flmul@grs+1,f
  8000  0A8B                     u6261:
  8001  0A8B  0838               	movf	??___flmul+2,w
  8002  0A8C  1103               	clrz
  8003  0A8D  1803               	skipnc
  8004  0A8E  3E01               	addlw	1
  8005  0A8F  1903               	skipnz
  8006  0A90  2A92               	goto	u6262
  8007  0A91  07BF               	addwf	___flmul@grs+2,f
  8008  0A92                     u6262:
  8009  0A92  0839               	movf	??___flmul+3,w
  8010  0A93  1103               	clrz
  8011  0A94  1803               	skipnc
  8012  0A95  3E01               	addlw	1
  8013  0A96  1903               	skipnz
  8014  0A97  2A99               	goto	u6263
  8015  0A98  07C0               	addwf	___flmul@grs+3,f
  8016  0A99                     u6263:
  8017  0A99                     l3797:
  8018  0A99  082E               	movf	___flmul@b,w
  8019  0A9A  00B6               	movwf	??___flmul
  8020  0A9B  0836               	movf	??___flmul,w
  8021  0A9C  00F5               	movwf	__Umul8_16@multiplicand
  8022  0A9D  0833               	movf	___flmul@a+1,w
  8023  0A9E  160A  158A  22FA  120A  158A  	fcall	__Umul8_16
  8024  0AA3  0876               	movf	?__Umul8_16+1,w
  8025  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  8026  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  8027  0AA6  00C7               	movwf	___flmul@temp+1
  8028  0AA7  0875               	movf	?__Umul8_16,w
  8029  0AA8  00C6               	movwf	___flmul@temp
  8030  0AA9                     l3799:
  8031  0AA9  0846               	movf	___flmul@temp,w
  8032  0AAA  00B6               	movwf	??___flmul
  8033  0AAB  0847               	movf	___flmul@temp+1,w
  8034  0AAC  00B7               	movwf	??___flmul+1
  8035  0AAD  01B8               	clrf	??___flmul+2
  8036  0AAE  01B9               	clrf	??___flmul+3
  8037  0AAF  0836               	movf	??___flmul,w
  8038  0AB0  07BD               	addwf	___flmul@grs,f
  8039  0AB1  0837               	movf	??___flmul+1,w
  8040  0AB2  1103               	clrz
  8041  0AB3  1803               	skipnc
  8042  0AB4  3E01               	addlw	1
  8043  0AB5  1903               	skipnz
  8044  0AB6  2AB8               	goto	u6271
  8045  0AB7  07BE               	addwf	___flmul@grs+1,f
  8046  0AB8                     u6271:
  8047  0AB8  0838               	movf	??___flmul+2,w
  8048  0AB9  1103               	clrz
  8049  0ABA  1803               	skipnc
  8050  0ABB  3E01               	addlw	1
  8051  0ABC  1903               	skipnz
  8052  0ABD  2ABF               	goto	u6272
  8053  0ABE  07BF               	addwf	___flmul@grs+2,f
  8054  0ABF                     u6272:
  8055  0ABF  0839               	movf	??___flmul+3,w
  8056  0AC0  1103               	clrz
  8057  0AC1  1803               	skipnc
  8058  0AC2  3E01               	addlw	1
  8059  0AC3  1903               	skipnz
  8060  0AC4  2AC6               	goto	u6273
  8061  0AC5  07C0               	addwf	___flmul@grs+3,f
  8062  0AC6                     u6273:
  8063  0AC6                     l3801:
  8064  0AC6  3008               	movlw	8
  8065  0AC7  00B6               	movwf	??___flmul
  8066  0AC8                     u6285:
  8067  0AC8  1003               	clrc
  8068  0AC9  0DBD               	rlf	___flmul@grs,f
  8069  0ACA  0DBE               	rlf	___flmul@grs+1,f
  8070  0ACB  0DBF               	rlf	___flmul@grs+2,f
  8071  0ACC  0DC0               	rlf	___flmul@grs+3,f
  8072  0ACD  0BB6               	decfsz	??___flmul,f
  8073  0ACE  2AC8               	goto	u6285
  8074  0ACF  082E               	movf	___flmul@b,w
  8075  0AD0  00B6               	movwf	??___flmul
  8076  0AD1  0836               	movf	??___flmul,w
  8077  0AD2  00F5               	movwf	__Umul8_16@multiplicand
  8078  0AD3  0832               	movf	___flmul@a,w
  8079  0AD4  160A  158A  22FA  120A  158A  	fcall	__Umul8_16
  8080  0AD9  0876               	movf	?__Umul8_16+1,w
  8081  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  8082  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  8083  0ADC  00C7               	movwf	___flmul@temp+1
  8084  0ADD  0875               	movf	?__Umul8_16,w
  8085  0ADE  00C6               	movwf	___flmul@temp
  8086  0ADF                     l3803:
  8087  0ADF  0846               	movf	___flmul@temp,w
  8088  0AE0  00B6               	movwf	??___flmul
  8089  0AE1  0847               	movf	___flmul@temp+1,w
  8090  0AE2  00B7               	movwf	??___flmul+1
  8091  0AE3  01B8               	clrf	??___flmul+2
  8092  0AE4  01B9               	clrf	??___flmul+3
  8093  0AE5  0836               	movf	??___flmul,w
  8094  0AE6  07BD               	addwf	___flmul@grs,f
  8095  0AE7  0837               	movf	??___flmul+1,w
  8096  0AE8  1103               	clrz
  8097  0AE9  1803               	skipnc
  8098  0AEA  3E01               	addlw	1
  8099  0AEB  1903               	skipnz
  8100  0AEC  2AEE               	goto	u6291
  8101  0AED  07BE               	addwf	___flmul@grs+1,f
  8102  0AEE                     u6291:
  8103  0AEE  0838               	movf	??___flmul+2,w
  8104  0AEF  1103               	clrz
  8105  0AF0  1803               	skipnc
  8106  0AF1  3E01               	addlw	1
  8107  0AF2  1903               	skipnz
  8108  0AF3  2AF5               	goto	u6292
  8109  0AF4  07BF               	addwf	___flmul@grs+2,f
  8110  0AF5                     u6292:
  8111  0AF5  0839               	movf	??___flmul+3,w
  8112  0AF6  1103               	clrz
  8113  0AF7  1803               	skipnc
  8114  0AF8  3E01               	addlw	1
  8115  0AF9  1903               	skipnz
  8116  0AFA  2AFC               	goto	u6293
  8117  0AFB  07C0               	addwf	___flmul@grs+3,f
  8118  0AFC                     u6293:
  8119  0AFC                     l3805:
  8120  0AFC  082F               	movf	___flmul@b+1,w
  8121  0AFD  00B6               	movwf	??___flmul
  8122  0AFE  0836               	movf	??___flmul,w
  8123  0AFF  00F5               	movwf	__Umul8_16@multiplicand
  8124  0B00  0834               	movf	___flmul@a+2,w
  8125  0B01  160A  158A  22FA  120A  158A  	fcall	__Umul8_16
  8126  0B06  0876               	movf	?__Umul8_16+1,w
  8127  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  8128  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  8129  0B09  00C7               	movwf	___flmul@temp+1
  8130  0B0A  0875               	movf	?__Umul8_16,w
  8131  0B0B  00C6               	movwf	___flmul@temp
  8132  0B0C  0846               	movf	___flmul@temp,w
  8133  0B0D  00B6               	movwf	??___flmul
  8134  0B0E  0847               	movf	___flmul@temp+1,w
  8135  0B0F  00B7               	movwf	??___flmul+1
  8136  0B10  01B8               	clrf	??___flmul+2
  8137  0B11  01B9               	clrf	??___flmul+3
  8138  0B12  0836               	movf	??___flmul,w
  8139  0B13  07C2               	addwf	___flmul@prod,f
  8140  0B14  0837               	movf	??___flmul+1,w
  8141  0B15  1103               	clrz
  8142  0B16  1803               	skipnc
  8143  0B17  3E01               	addlw	1
  8144  0B18  1903               	skipnz
  8145  0B19  2B1B               	goto	u6301
  8146  0B1A  07C3               	addwf	___flmul@prod+1,f
  8147  0B1B                     u6301:
  8148  0B1B  0838               	movf	??___flmul+2,w
  8149  0B1C  1103               	clrz
  8150  0B1D  1803               	skipnc
  8151  0B1E  3E01               	addlw	1
  8152  0B1F  1903               	skipnz
  8153  0B20  2B22               	goto	u6302
  8154  0B21  07C4               	addwf	___flmul@prod+2,f
  8155  0B22                     u6302:
  8156  0B22  0839               	movf	??___flmul+3,w
  8157  0B23  1103               	clrz
  8158  0B24  1803               	skipnc
  8159  0B25  3E01               	addlw	1
  8160  0B26  1903               	skipnz
  8161  0B27  2B29               	goto	u6303
  8162  0B28  07C5               	addwf	___flmul@prod+3,f
  8163  0B29                     u6303:
  8164  0B29                     l3807:
  8165  0B29  0830               	movf	___flmul@b+2,w
  8166  0B2A  00B6               	movwf	??___flmul
  8167  0B2B  0836               	movf	??___flmul,w
  8168  0B2C  00F5               	movwf	__Umul8_16@multiplicand
  8169  0B2D  0833               	movf	___flmul@a+1,w
  8170  0B2E  160A  158A  22FA  120A  158A  	fcall	__Umul8_16
  8171  0B33  0876               	movf	?__Umul8_16+1,w
  8172  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  8173  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  8174  0B36  00C7               	movwf	___flmul@temp+1
  8175  0B37  0875               	movf	?__Umul8_16,w
  8176  0B38  00C6               	movwf	___flmul@temp
  8177  0B39                     l3809:
  8178  0B39  0846               	movf	___flmul@temp,w
  8179  0B3A  00B6               	movwf	??___flmul
  8180  0B3B  0847               	movf	___flmul@temp+1,w
  8181  0B3C  00B7               	movwf	??___flmul+1
  8182  0B3D  01B8               	clrf	??___flmul+2
  8183  0B3E  01B9               	clrf	??___flmul+3
  8184  0B3F  0836               	movf	??___flmul,w
  8185  0B40  07C2               	addwf	___flmul@prod,f
  8186  0B41  0837               	movf	??___flmul+1,w
  8187  0B42  1103               	clrz
  8188  0B43  1803               	skipnc
  8189  0B44  3E01               	addlw	1
  8190  0B45  1903               	skipnz
  8191  0B46  2B48               	goto	u6311
  8192  0B47  07C3               	addwf	___flmul@prod+1,f
  8193  0B48                     u6311:
  8194  0B48  0838               	movf	??___flmul+2,w
  8195  0B49  1103               	clrz
  8196  0B4A  1803               	skipnc
  8197  0B4B  3E01               	addlw	1
  8198  0B4C  1903               	skipnz
  8199  0B4D  2B4F               	goto	u6312
  8200  0B4E  07C4               	addwf	___flmul@prod+2,f
  8201  0B4F                     u6312:
  8202  0B4F  0839               	movf	??___flmul+3,w
  8203  0B50  1103               	clrz
  8204  0B51  1803               	skipnc
  8205  0B52  3E01               	addlw	1
  8206  0B53  1903               	skipnz
  8207  0B54  2B56               	goto	u6313
  8208  0B55  07C5               	addwf	___flmul@prod+3,f
  8209  0B56                     u6313:
  8210  0B56  0830               	movf	___flmul@b+2,w
  8211  0B57  00B6               	movwf	??___flmul
  8212  0B58  0836               	movf	??___flmul,w
  8213  0B59  00F5               	movwf	__Umul8_16@multiplicand
  8214  0B5A  0834               	movf	___flmul@a+2,w
  8215  0B5B  160A  158A  22FA  120A  158A  	fcall	__Umul8_16
  8216  0B60  0876               	movf	?__Umul8_16+1,w
  8217  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8218  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8219  0B63  00C7               	movwf	___flmul@temp+1
  8220  0B64  0875               	movf	?__Umul8_16,w
  8221  0B65  00C6               	movwf	___flmul@temp
  8222  0B66                     l3811:
  8223  0B66  0846               	movf	___flmul@temp,w
  8224  0B67  00B6               	movwf	??___flmul
  8225  0B68  0847               	movf	___flmul@temp+1,w
  8226  0B69  00B7               	movwf	??___flmul+1
  8227  0B6A  01B8               	clrf	??___flmul+2
  8228  0B6B  01B9               	clrf	??___flmul+3
  8229  0B6C  3008               	movlw	8
  8230  0B6D                     u6325:
  8231  0B6D  1003               	clrc
  8232  0B6E  0DB6               	rlf	??___flmul,f
  8233  0B6F  0DB7               	rlf	??___flmul+1,f
  8234  0B70  0DB8               	rlf	??___flmul+2,f
  8235  0B71  0DB9               	rlf	??___flmul+3,f
  8236  0B72                     u6320:
  8237  0B72  3EFF               	addlw	-1
  8238  0B73  1D03               	skipz
  8239  0B74  2B6D               	goto	u6325
  8240  0B75  0836               	movf	??___flmul,w
  8241  0B76  07C2               	addwf	___flmul@prod,f
  8242  0B77  0837               	movf	??___flmul+1,w
  8243  0B78  1103               	clrz
  8244  0B79  1803               	skipnc
  8245  0B7A  3E01               	addlw	1
  8246  0B7B  1903               	skipnz
  8247  0B7C  2B7E               	goto	u6331
  8248  0B7D  07C3               	addwf	___flmul@prod+1,f
  8249  0B7E                     u6331:
  8250  0B7E  0838               	movf	??___flmul+2,w
  8251  0B7F  1103               	clrz
  8252  0B80  1803               	skipnc
  8253  0B81  3E01               	addlw	1
  8254  0B82  1903               	skipnz
  8255  0B83  2B85               	goto	u6332
  8256  0B84  07C4               	addwf	___flmul@prod+2,f
  8257  0B85                     u6332:
  8258  0B85  0839               	movf	??___flmul+3,w
  8259  0B86  1103               	clrz
  8260  0B87  1803               	skipnc
  8261  0B88  3E01               	addlw	1
  8262  0B89  1903               	skipnz
  8263  0B8A  2B8C               	goto	u6333
  8264  0B8B  07C5               	addwf	___flmul@prod+3,f
  8265  0B8C                     u6333:
  8266  0B8C                     l3813:
  8267  0B8C  083D               	movf	___flmul@grs,w
  8268  0B8D  00B6               	movwf	??___flmul
  8269  0B8E  083E               	movf	___flmul@grs+1,w
  8270  0B8F  00B7               	movwf	??___flmul+1
  8271  0B90  083F               	movf	___flmul@grs+2,w
  8272  0B91  00B8               	movwf	??___flmul+2
  8273  0B92  0840               	movf	___flmul@grs+3,w
  8274  0B93  00B9               	movwf	??___flmul+3
  8275  0B94  3018               	movlw	24
  8276  0B95                     u6345:
  8277  0B95  1003               	clrc
  8278  0B96  0CB9               	rrf	??___flmul+3,f
  8279  0B97  0CB8               	rrf	??___flmul+2,f
  8280  0B98  0CB7               	rrf	??___flmul+1,f
  8281  0B99  0CB6               	rrf	??___flmul,f
  8282  0B9A                     u6340:
  8283  0B9A  3EFF               	addlw	-1
  8284  0B9B  1D03               	skipz
  8285  0B9C  2B95               	goto	u6345
  8286  0B9D  0836               	movf	??___flmul,w
  8287  0B9E  07C2               	addwf	___flmul@prod,f
  8288  0B9F  0837               	movf	??___flmul+1,w
  8289  0BA0  1103               	clrz
  8290  0BA1  1803               	skipnc
  8291  0BA2  3E01               	addlw	1
  8292  0BA3  1903               	skipnz
  8293  0BA4  2BA6               	goto	u6351
  8294  0BA5  07C3               	addwf	___flmul@prod+1,f
  8295  0BA6                     u6351:
  8296  0BA6  0838               	movf	??___flmul+2,w
  8297  0BA7  1103               	clrz
  8298  0BA8  1803               	skipnc
  8299  0BA9  3E01               	addlw	1
  8300  0BAA  1903               	skipnz
  8301  0BAB  2BAD               	goto	u6352
  8302  0BAC  07C4               	addwf	___flmul@prod+2,f
  8303  0BAD                     u6352:
  8304  0BAD  0839               	movf	??___flmul+3,w
  8305  0BAE  1103               	clrz
  8306  0BAF  1803               	skipnc
  8307  0BB0  3E01               	addlw	1
  8308  0BB1  1903               	skipnz
  8309  0BB2  2BB4               	goto	u6353
  8310  0BB3  07C5               	addwf	___flmul@prod+3,f
  8311  0BB4                     u6353:
  8312  0BB4                     l3815:
  8313  0BB4  3008               	movlw	8
  8314  0BB5  00B6               	movwf	??___flmul
  8315  0BB6                     u6365:
  8316  0BB6  1003               	clrc
  8317  0BB7  0DBD               	rlf	___flmul@grs,f
  8318  0BB8  0DBE               	rlf	___flmul@grs+1,f
  8319  0BB9  0DBF               	rlf	___flmul@grs+2,f
  8320  0BBA  0DC0               	rlf	___flmul@grs+3,f
  8321  0BBB  0BB6               	decfsz	??___flmul,f
  8322  0BBC  2BB6               	goto	u6365
  8323  0BBD                     l3817:
  8324  0BBD  0841               	movf	___flmul@bexp,w
  8325  0BBE  073C               	addwf	___flmul@aexp,w
  8326  0BBF  00B6               	movwf	??___flmul
  8327  0BC0  01B7               	clrf	??___flmul+1
  8328  0BC1  0DB7               	rlf	??___flmul+1,f
  8329  0BC2  0836               	movf	??___flmul,w
  8330  0BC3  3E82               	addlw	130
  8331  0BC4  00C6               	movwf	___flmul@temp
  8332  0BC5  0837               	movf	??___flmul+1,w
  8333  0BC6  1803               	skipnc
  8334  0BC7  3E01               	addlw	1
  8335  0BC8  3EFF               	addlw	255
  8336  0BC9  00C7               	movwf	___flmul@temp+1
  8337  0BCA  2BE8               	goto	l3829
  8338  0BCB                     l3819:
  8339  0BCB  3001               	movlw	1
  8340  0BCC  00B6               	movwf	??___flmul
  8341  0BCD                     u6375:
  8342  0BCD  1003               	clrc
  8343  0BCE  0DC2               	rlf	___flmul@prod,f
  8344  0BCF  0DC3               	rlf	___flmul@prod+1,f
  8345  0BD0  0DC4               	rlf	___flmul@prod+2,f
  8346  0BD1  0DC5               	rlf	___flmul@prod+3,f
  8347  0BD2  0BB6               	decfsz	??___flmul,f
  8348  0BD3  2BCD               	goto	u6375
  8349  0BD4                     l3821:
  8350  0BD4  1FC0               	btfss	___flmul@grs+3,7
  8351  0BD5  2BD7               	goto	u6381
  8352  0BD6  2BD8               	goto	u6380
  8353  0BD7                     u6381:
  8354  0BD7  2BD9               	goto	l3825
  8355  0BD8                     u6380:
  8356  0BD8                     l3823:
  8357  0BD8  1442               	bsf	___flmul@prod,0
  8358  0BD9                     l3825:
  8359  0BD9  3001               	movlw	1
  8360  0BDA  00B6               	movwf	??___flmul
  8361  0BDB                     u6395:
  8362  0BDB  1003               	clrc
  8363  0BDC  0DBD               	rlf	___flmul@grs,f
  8364  0BDD  0DBE               	rlf	___flmul@grs+1,f
  8365  0BDE  0DBF               	rlf	___flmul@grs+2,f
  8366  0BDF  0DC0               	rlf	___flmul@grs+3,f
  8367  0BE0  0BB6               	decfsz	??___flmul,f
  8368  0BE1  2BDB               	goto	u6395
  8369  0BE2                     l3827:
  8370  0BE2  30FF               	movlw	255
  8371  0BE3  07C6               	addwf	___flmul@temp,f
  8372  0BE4  1803               	skipnc
  8373  0BE5  0AC7               	incf	___flmul@temp+1,f
  8374  0BE6  30FF               	movlw	255
  8375  0BE7  07C7               	addwf	___flmul@temp+1,f
  8376  0BE8                     l3829:
  8377  0BE8  1FC4               	btfss	___flmul@prod+2,7
  8378  0BE9  2BEB               	goto	u6401
  8379  0BEA  2BEC               	goto	u6400
  8380  0BEB                     u6401:
  8381  0BEB  2BCB               	goto	l3819
  8382  0BEC                     u6400:
  8383  0BEC                     l3831:
  8384  0BEC  01BC               	clrf	___flmul@aexp
  8385  0BED                     l3833:
  8386  0BED  1FC0               	btfss	___flmul@grs+3,7
  8387  0BEE  2BF0               	goto	u6411
  8388  0BEF  2BF1               	goto	u6410
  8389  0BF0                     u6411:
  8390  0BF0  2C0D               	goto	l3841
  8391  0BF1                     u6410:
  8392  0BF1                     l3835:
  8393  0BF1  30FF               	movlw	255
  8394  0BF2  053D               	andwf	___flmul@grs,w
  8395  0BF3  00B6               	movwf	??___flmul
  8396  0BF4  30FF               	movlw	255
  8397  0BF5  053E               	andwf	___flmul@grs+1,w
  8398  0BF6  00B7               	movwf	??___flmul+1
  8399  0BF7  30FF               	movlw	255
  8400  0BF8  053F               	andwf	___flmul@grs+2,w
  8401  0BF9  00B8               	movwf	??___flmul+2
  8402  0BFA  307F               	movlw	127
  8403  0BFB  0540               	andwf	___flmul@grs+3,w
  8404  0BFC  00B9               	movwf	??___flmul+3
  8405  0BFD  0839               	movf	??___flmul+3,w
  8406  0BFE  0438               	iorwf	??___flmul+2,w
  8407  0BFF  0437               	iorwf	??___flmul+1,w
  8408  0C00  0436               	iorwf	??___flmul,w
  8409  0C01  1903               	skipnz
  8410  0C02  2C04               	goto	u6421
  8411  0C03  2C05               	goto	u6420
  8412  0C04                     u6421:
  8413  0C04  2C08               	goto	l827
  8414  0C05                     u6420:
  8415  0C05                     l3837:
  8416  0C05  01BC               	clrf	___flmul@aexp
  8417  0C06  0ABC               	incf	___flmul@aexp,f
  8418  0C07  2C0D               	goto	l3841
  8419  0C08                     l827:
  8420  0C08  1C42               	btfss	___flmul@prod,0
  8421  0C09  2C0B               	goto	u6431
  8422  0C0A  2C0C               	goto	u6430
  8423  0C0B                     u6431:
  8424  0C0B  2C0D               	goto	l3841
  8425  0C0C                     u6430:
  8426  0C0C  2C05               	goto	l3837
  8427  0C0D                     l3841:
  8428  0C0D  083C               	movf	___flmul@aexp,w
  8429  0C0E  1903               	btfsc	3,2
  8430  0C0F  2C11               	goto	u6441
  8431  0C10  2C12               	goto	u6440
  8432  0C11                     u6441:
  8433  0C11  2C43               	goto	l3851
  8434  0C12                     u6440:
  8435  0C12                     l3843:
  8436  0C12  3001               	movlw	1
  8437  0C13  07C2               	addwf	___flmul@prod,f
  8438  0C14  3000               	movlw	0
  8439  0C15  1803               	skipnc
  8440  0C16  3001               	movlw	1
  8441  0C17  07C3               	addwf	___flmul@prod+1,f
  8442  0C18  3000               	movlw	0
  8443  0C19  1803               	skipnc
  8444  0C1A  3001               	movlw	1
  8445  0C1B  07C4               	addwf	___flmul@prod+2,f
  8446  0C1C  3000               	movlw	0
  8447  0C1D  1803               	skipnc
  8448  0C1E  3001               	movlw	1
  8449  0C1F  07C5               	addwf	___flmul@prod+3,f
  8450  0C20                     l3845:
  8451  0C20  1C45               	btfss	___flmul@prod+3,0
  8452  0C21  2C23               	goto	u6451
  8453  0C22  2C24               	goto	u6450
  8454  0C23                     u6451:
  8455  0C23  2C43               	goto	l3851
  8456  0C24                     u6450:
  8457  0C24                     l3847:
  8458  0C24  0842               	movf	___flmul@prod,w
  8459  0C25  00B6               	movwf	??___flmul
  8460  0C26  0843               	movf	___flmul@prod+1,w
  8461  0C27  00B7               	movwf	??___flmul+1
  8462  0C28  0844               	movf	___flmul@prod+2,w
  8463  0C29  00B8               	movwf	??___flmul+2
  8464  0C2A  0845               	movf	___flmul@prod+3,w
  8465  0C2B  00B9               	movwf	??___flmul+3
  8466  0C2C  3001               	movlw	1
  8467  0C2D  00BA               	movwf	??___flmul+4
  8468  0C2E                     u6465:
  8469  0C2E  0D39               	rlf	??___flmul+3,w
  8470  0C2F  0CB9               	rrf	??___flmul+3,f
  8471  0C30  0CB8               	rrf	??___flmul+2,f
  8472  0C31  0CB7               	rrf	??___flmul+1,f
  8473  0C32  0CB6               	rrf	??___flmul,f
  8474  0C33                     u6460:
  8475  0C33  0BBA               	decfsz	??___flmul+4,f
  8476  0C34  2C2E               	goto	u6465
  8477  0C35  0839               	movf	??___flmul+3,w
  8478  0C36  00C5               	movwf	___flmul@prod+3
  8479  0C37  0838               	movf	??___flmul+2,w
  8480  0C38  00C4               	movwf	___flmul@prod+2
  8481  0C39  0837               	movf	??___flmul+1,w
  8482  0C3A  00C3               	movwf	___flmul@prod+1
  8483  0C3B  0836               	movf	??___flmul,w
  8484  0C3C  00C2               	movwf	___flmul@prod
  8485  0C3D                     l3849:
  8486  0C3D  3001               	movlw	1
  8487  0C3E  07C6               	addwf	___flmul@temp,f
  8488  0C3F  1803               	skipnc
  8489  0C40  0AC7               	incf	___flmul@temp+1,f
  8490  0C41  3000               	movlw	0
  8491  0C42  07C7               	addwf	___flmul@temp+1,f
  8492  0C43                     l3851:
  8493  0C43  0847               	movf	___flmul@temp+1,w
  8494  0C44  3A80               	xorlw	128
  8495  0C45  00FF               	movwf	btemp+1
  8496  0C46  3080               	movlw	128
  8497  0C47  027F               	subwf	btemp+1,w
  8498  0C48  1D03               	skipz
  8499  0C49  2C4C               	goto	u6475
  8500  0C4A  30FF               	movlw	255
  8501  0C4B  0246               	subwf	___flmul@temp,w
  8502  0C4C                     u6475:
  8503  0C4C  1C03               	skipc
  8504  0C4D  2C4F               	goto	u6471
  8505  0C4E  2C50               	goto	u6470
  8506  0C4F                     u6471:
  8507  0C4F  2C5B               	goto	l3855
  8508  0C50                     u6470:
  8509  0C50                     l3853:
  8510  0C50  307F               	movlw	127
  8511  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  8512  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  8513  0C53  00C5               	movwf	___flmul@prod+3
  8514  0C54  3080               	movlw	128
  8515  0C55  00C4               	movwf	___flmul@prod+2
  8516  0C56  3000               	movlw	0
  8517  0C57  00C3               	movwf	___flmul@prod+1
  8518  0C58  3000               	movlw	0
  8519  0C59  00C2               	movwf	___flmul@prod
  8520  0C5A  2C90               	goto	l833
  8521  0C5B                     l3855:
  8522  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  8523  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  8524  0C5D  0847               	movf	___flmul@temp+1,w
  8525  0C5E  3A80               	xorlw	128
  8526  0C5F  00FF               	movwf	btemp+1
  8527  0C60  3080               	movlw	128
  8528  0C61  027F               	subwf	btemp+1,w
  8529  0C62  1D03               	skipz
  8530  0C63  2C66               	goto	u6485
  8531  0C64  3001               	movlw	1
  8532  0C65  0246               	subwf	___flmul@temp,w
  8533  0C66                     u6485:
  8534  0C66  1803               	skipnc
  8535  0C67  2C69               	goto	u6481
  8536  0C68  2C6A               	goto	u6480
  8537  0C69                     u6481:
  8538  0C69  2C76               	goto	l3861
  8539  0C6A                     u6480:
  8540  0C6A                     l3857:
  8541  0C6A  3000               	movlw	0
  8542  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8543  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  8544  0C6D  00C5               	movwf	___flmul@prod+3
  8545  0C6E  3000               	movlw	0
  8546  0C6F  00C4               	movwf	___flmul@prod+2
  8547  0C70  3000               	movlw	0
  8548  0C71  00C3               	movwf	___flmul@prod+1
  8549  0C72  3000               	movlw	0
  8550  0C73  00C2               	movwf	___flmul@prod
  8551  0C74                     l3859:
  8552  0C74  01BB               	clrf	___flmul@sign
  8553  0C75  2C90               	goto	l833
  8554  0C76                     l3861:
  8555  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8556  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  8557  0C78  0846               	movf	___flmul@temp,w
  8558  0C79  00B6               	movwf	??___flmul
  8559  0C7A  0836               	movf	??___flmul,w
  8560  0C7B  00C1               	movwf	___flmul@bexp
  8561  0C7C  30FF               	movlw	255
  8562  0C7D  05C2               	andwf	___flmul@prod,f
  8563  0C7E  30FF               	movlw	255
  8564  0C7F  05C3               	andwf	___flmul@prod+1,f
  8565  0C80  307F               	movlw	127
  8566  0C81  05C4               	andwf	___flmul@prod+2,f
  8567  0C82  3000               	movlw	0
  8568  0C83  05C5               	andwf	___flmul@prod+3,f
  8569  0C84                     l3863:
  8570  0C84  1C41               	btfss	___flmul@bexp,0
  8571  0C85  2C87               	goto	u6491
  8572  0C86  2C88               	goto	u6490
  8573  0C87                     u6491:
  8574  0C87  2C89               	goto	l3867
  8575  0C88                     u6490:
  8576  0C88                     l3865:
  8577  0C88  17C4               	bsf	___flmul@prod+2,7
  8578  0C89                     l3867:
  8579  0C89  0841               	movf	___flmul@bexp,w
  8580  0C8A  00B6               	movwf	??___flmul
  8581  0C8B  1003               	clrc
  8582  0C8C  0C36               	rrf	??___flmul,w
  8583  0C8D  00B7               	movwf	??___flmul+1
  8584  0C8E  0837               	movf	??___flmul+1,w
  8585  0C8F  00C5               	movwf	___flmul@prod+3
  8586  0C90                     l833:
  8587  0C90  083B               	movf	___flmul@sign,w
  8588  0C91  00B6               	movwf	??___flmul
  8589  0C92  0836               	movf	??___flmul,w
  8590  0C93  04C5               	iorwf	___flmul@prod+3,f
  8591  0C94                     l3869:
  8592  0C94  0845               	movf	___flmul@prod+3,w
  8593  0C95  00B1               	movwf	?___flmul+3
  8594  0C96  0844               	movf	___flmul@prod+2,w
  8595  0C97  00B0               	movwf	?___flmul+2
  8596  0C98  0843               	movf	___flmul@prod+1,w
  8597  0C99  00AF               	movwf	?___flmul+1
  8598  0C9A  0842               	movf	___flmul@prod,w
  8599  0C9B  00AE               	movwf	?___flmul
  8600  0C9C                     l821:
  8601  0C9C  0008               	return
  8602  0C9D                     __end_of___flmul:
  8603                           
  8604                           	psect	text25
  8605  1AFA                     __ptext25:	
  8606 ;; *************** function __Umul8_16 *****************
  8607 ;; Defined at:
  8608 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;  multiplier      1    wreg     unsigned char 
  8611 ;;  multiplicand    1    5[COMMON] unsigned char 
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;  multiplier      1    6[BANK0 ] unsigned char 
  8614 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  8615 ;;  product         2    2[BANK0 ] unsigned int 
  8616 ;; Return value:  Size  Location     Type
  8617 ;;                  2    5[COMMON] unsigned int 
  8618 ;; Registers used:
  8619 ;;		wreg, status,2, status,0
  8620 ;; Tracked objects:
  8621 ;;		On entry : 0/0
  8622 ;;		On exit  : 0/0
  8623 ;;		Unchanged: 0/0
  8624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8625 ;;      Params:         2       0       0       0       0
  8626 ;;      Locals:         0       5       0       0       0
  8627 ;;      Temps:          0       2       0       0       0
  8628 ;;      Totals:         2       7       0       0       0
  8629 ;;Total ram usage:        9 bytes
  8630 ;; Hardware stack levels used:    1
  8631 ;; Hardware stack levels required when called:    3
  8632 ;; This function calls:
  8633 ;;		Nothing
  8634 ;; This function is called by:
  8635 ;;		___flmul
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639                           
  8640                           ;psect for function __Umul8_16
  8641  1AFA                     __Umul8_16:
  8642                           
  8643                           ;incstack = 0
  8644                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8645                           ;__Umul8_16@multiplier stored from wreg
  8646  1AFA  1283               	bcf	3,5	;RP0=0, select bank0
  8647  1AFB  1303               	bcf	3,6	;RP1=0, select bank0
  8648  1AFC  00A6               	movwf	__Umul8_16@multiplier
  8649  1AFD                     l3597:
  8650  1AFD  01A2               	clrf	__Umul8_16@product
  8651  1AFE  01A3               	clrf	__Umul8_16@product+1
  8652  1AFF                     l3599:
  8653  1AFF  0875               	movf	__Umul8_16@multiplicand,w
  8654  1B00  00A0               	movwf	??__Umul8_16
  8655  1B01  01A1               	clrf	??__Umul8_16+1
  8656  1B02  0820               	movf	??__Umul8_16,w
  8657  1B03  00A4               	movwf	__Umul8_16@word_mpld
  8658  1B04  0821               	movf	??__Umul8_16+1,w
  8659  1B05  00A5               	movwf	__Umul8_16@word_mpld+1
  8660  1B06                     l3601:
  8661  1B06  1C26               	btfss	__Umul8_16@multiplier,0
  8662  1B07  2B09               	goto	u5771
  8663  1B08  2B0A               	goto	u5770
  8664  1B09                     u5771:
  8665  1B09  2B10               	goto	l840
  8666  1B0A                     u5770:
  8667  1B0A                     l3603:
  8668  1B0A  0824               	movf	__Umul8_16@word_mpld,w
  8669  1B0B  07A2               	addwf	__Umul8_16@product,f
  8670  1B0C  1803               	skipnc
  8671  1B0D  0AA3               	incf	__Umul8_16@product+1,f
  8672  1B0E  0825               	movf	__Umul8_16@word_mpld+1,w
  8673  1B0F  07A3               	addwf	__Umul8_16@product+1,f
  8674  1B10                     l840:
  8675  1B10  3001               	movlw	1
  8676  1B11                     u5785:
  8677  1B11  1003               	clrc
  8678  1B12  0DA4               	rlf	__Umul8_16@word_mpld,f
  8679  1B13  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  8680  1B14  3EFF               	addlw	-1
  8681  1B15  1D03               	skipz
  8682  1B16  2B11               	goto	u5785
  8683  1B17  1003               	clrc
  8684  1B18  0CA6               	rrf	__Umul8_16@multiplier,f
  8685  1B19                     l3605:
  8686  1B19  0826               	movf	__Umul8_16@multiplier,w
  8687  1B1A  1D03               	btfss	3,2
  8688  1B1B  2B1D               	goto	u5791
  8689  1B1C  2B1E               	goto	u5790
  8690  1B1D                     u5791:
  8691  1B1D  2B06               	goto	l3601
  8692  1B1E                     u5790:
  8693  1B1E                     l3607:
  8694  1B1E  0823               	movf	__Umul8_16@product+1,w
  8695  1B1F  00F6               	movwf	?__Umul8_16+1
  8696  1B20  0822               	movf	__Umul8_16@product,w
  8697  1B21  00F5               	movwf	?__Umul8_16
  8698  1B22                     l842:
  8699  1B22  0008               	return
  8700  1B23                     __end_of__Umul8_16:
  8701                           
  8702                           	psect	text26
  8703  0800                     __ptext26:	
  8704 ;; *************** function _cfg_io *****************
  8705 ;; Defined at:
  8706 ;;		line 122 in file "main.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;		None
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;		None
  8711 ;; Return value:  Size  Location     Type
  8712 ;;                  1    wreg      void 
  8713 ;; Registers used:
  8714 ;;		wreg, status,2
  8715 ;; Tracked objects:
  8716 ;;		On entry : 0/0
  8717 ;;		On exit  : 0/0
  8718 ;;		Unchanged: 0/0
  8719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8720 ;;      Params:         0       0       0       0       0
  8721 ;;      Locals:         0       0       0       0       0
  8722 ;;      Temps:          0       0       0       0       0
  8723 ;;      Totals:         0       0       0       0       0
  8724 ;;Total ram usage:        0 bytes
  8725 ;; Hardware stack levels used:    1
  8726 ;; Hardware stack levels required when called:    3
  8727 ;; This function calls:
  8728 ;;		Nothing
  8729 ;; This function is called by:
  8730 ;;		_main
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           
  8735                           ;psect for function _cfg_io
  8736  0800                     _cfg_io:
  8737  0800                     l3185:	
  8738                           ;incstack = 0
  8739                           ; Regs used in _cfg_io: [wreg+status,2]
  8740                           
  8741                           
  8742                           ;main.c: 123:     ANSELH = 0x00;
  8743  0800  1683               	bsf	3,5	;RP0=1, select bank3
  8744  0801  1703               	bsf	3,6	;RP1=1, select bank3
  8745  0802  0189               	clrf	9	;volatile
  8746  0803                     l3187:
  8747                           
  8748                           ;main.c: 124:     ANSEL = 0x20;
  8749  0803  3020               	movlw	32
  8750  0804  0088               	movwf	8	;volatile
  8751  0805                     l3189:
  8752                           
  8753                           ;main.c: 126:     TRISB = 0x03;
  8754  0805  3003               	movlw	3
  8755  0806  1683               	bsf	3,5	;RP0=1, select bank1
  8756  0807  1303               	bcf	3,6	;RP1=0, select bank1
  8757  0808  0086               	movwf	6	;volatile
  8758                           
  8759                           ;main.c: 127:     TRISC = 0x00;
  8760  0809  0187               	clrf	7	;volatile
  8761                           
  8762                           ;main.c: 128:     TRISA = 0X00;
  8763  080A  0185               	clrf	5	;volatile
  8764                           
  8765                           ;main.c: 129:     TRISD = 0X00;
  8766  080B  0188               	clrf	8	;volatile
  8767  080C                     l3191:
  8768                           
  8769                           ;main.c: 130:     TRISE = 0x03;
  8770  080C  3003               	movlw	3
  8771  080D  0089               	movwf	9	;volatile
  8772  080E                     l103:
  8773  080E  0008               	return
  8774  080F                     __end_of_cfg_io:
  8775                           
  8776                           	psect	text27
  8777  1A7C                     __ptext27:	
  8778 ;; *************** function _cfg_adc *****************
  8779 ;; Defined at:
  8780 ;;		line 133 in file "main.c"
  8781 ;; Parameters:    Size  Location     Type
  8782 ;;		None
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;		None
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  1    wreg      void 
  8787 ;; Registers used:
  8788 ;;		wreg, status,2, status,0
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8794 ;;      Params:         0       0       0       0       0
  8795 ;;      Locals:         0       0       0       0       0
  8796 ;;      Temps:          1       0       0       0       0
  8797 ;;      Totals:         1       0       0       0       0
  8798 ;;Total ram usage:        1 bytes
  8799 ;; Hardware stack levels used:    1
  8800 ;; Hardware stack levels required when called:    3
  8801 ;; This function calls:
  8802 ;;		Nothing
  8803 ;; This function is called by:
  8804 ;;		_main
  8805 ;; This function uses a non-reentrant model
  8806 ;;
  8807                           
  8808                           
  8809                           ;psect for function _cfg_adc
  8810  1A7C                     _cfg_adc:
  8811  1A7C                     l3193:	
  8812                           ;incstack = 0
  8813                           ; Regs used in _cfg_adc: [wreg+status,2+status,0]
  8814                           
  8815                           
  8816                           ;main.c: 134:     ADCON1bits.ADFM = 0;
  8817  1A7C  1683               	bsf	3,5	;RP0=1, select bank1
  8818  1A7D  1303               	bcf	3,6	;RP1=0, select bank1
  8819  1A7E  139F               	bcf	31,7	;volatile
  8820                           
  8821                           ;main.c: 135:     ADCON1bits.VCFG0 = 0;
  8822  1A7F  121F               	bcf	31,4	;volatile
  8823                           
  8824                           ;main.c: 136:     ADCON1bits.VCFG1 = 0;
  8825  1A80  129F               	bcf	31,5	;volatile
  8826                           
  8827                           ;main.c: 138:     ADCON0bits.ADCS0 = 0;
  8828  1A81  1283               	bcf	3,5	;RP0=0, select bank0
  8829  1A82  1303               	bcf	3,6	;RP1=0, select bank0
  8830  1A83  131F               	bcf	31,6	;volatile
  8831                           
  8832                           ;main.c: 139:     ADCON0bits.ADCS1 = 0;
  8833  1A84  139F               	bcf	31,7	;volatile
  8834  1A85                     l3195:
  8835                           
  8836                           ;main.c: 140:     ADCON0bits.CHS = 5;
  8837  1A85  081F               	movf	31,w	;volatile
  8838  1A86  39C3               	andlw	-61
  8839  1A87  3814               	iorlw	20
  8840  1A88  009F               	movwf	31	;volatile
  8841  1A89                     l3197:
  8842                           
  8843                           ;main.c: 141:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8844  1A89  3042               	movlw	66
  8845  1A8A  00F5               	movwf	??_cfg_adc
  8846  1A8B                     u7747:
  8847  1A8B  0BF5               	decfsz	??_cfg_adc,f
  8848  1A8C  2A8B               	goto	u7747
  8849  1A8D  0000               	nop
  8850  1A8E                     l3199:
  8851                           
  8852                           ;main.c: 142:     ADCON0bits.ADON = 1;
  8853  1A8E  1283               	bcf	3,5	;RP0=0, select bank0
  8854  1A8F  1303               	bcf	3,6	;RP1=0, select bank0
  8855  1A90  141F               	bsf	31,0	;volatile
  8856  1A91                     l106:
  8857  1A91  0008               	return
  8858  1A92                     __end_of_cfg_adc:
  8859                           
  8860                           	psect	text28
  8861  1C36                     __ptext28:	
  8862 ;; *************** function _Lcd_Write_String *****************
  8863 ;; Defined at:
  8864 ;;		line 110 in file "LCD.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;  a               2    1[BANK0 ] PTR unsigned char 
  8867 ;;		 -> f(10), STR_1(12), 
  8868 ;; Auto vars:     Size  Location     Type
  8869 ;;  i               2    6[BANK0 ] int 
  8870 ;; Return value:  Size  Location     Type
  8871 ;;                  1    wreg      void 
  8872 ;; Registers used:
  8873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8874 ;; Tracked objects:
  8875 ;;		On entry : 0/0
  8876 ;;		On exit  : 0/0
  8877 ;;		Unchanged: 0/0
  8878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8879 ;;      Params:         0       2       0       0       0
  8880 ;;      Locals:         0       2       0       0       0
  8881 ;;      Temps:          0       3       0       0       0
  8882 ;;      Totals:         0       7       0       0       0
  8883 ;;Total ram usage:        7 bytes
  8884 ;; Hardware stack levels used:    1
  8885 ;; Hardware stack levels required when called:    5
  8886 ;; This function calls:
  8887 ;;		_Lcd_Write_Char
  8888 ;; This function is called by:
  8889 ;;		_main
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893                           
  8894                           ;psect for function _Lcd_Write_String
  8895  1C36                     _Lcd_Write_String:
  8896  1C36                     l4131:	
  8897                           ;incstack = 0
  8898                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8899                           
  8900                           
  8901                           ;LCD.c: 111:     int i;;LCD.c: 112:     for (i = 0; a[i] != '\0'; i++)
  8902  1C36  1283               	bcf	3,5	;RP0=0, select bank0
  8903  1C37  1303               	bcf	3,6	;RP1=0, select bank0
  8904  1C38  01A6               	clrf	Lcd_Write_String@i
  8905  1C39  01A7               	clrf	Lcd_Write_String@i+1
  8906  1C3A  2C5F               	goto	l4137
  8907  1C3B                     l4133:
  8908                           
  8909                           ;LCD.c: 113:         Lcd_Write_Char(a[i]);
  8910  1C3B  0826               	movf	Lcd_Write_String@i,w
  8911  1C3C  0721               	addwf	Lcd_Write_String@a,w
  8912  1C3D  00A4               	movwf	??_Lcd_Write_String+1
  8913  1C3E  0822               	movf	Lcd_Write_String@a+1,w
  8914  1C3F  00A3               	movwf	??_Lcd_Write_String
  8915  1C40  1803               	skipnc
  8916  1C41  0AA3               	incf	??_Lcd_Write_String,f
  8917  1C42  1FA6               	btfss	Lcd_Write_String@i,7
  8918  1C43  2C45               	goto	u7200
  8919  1C44  03A3               	decf	??_Lcd_Write_String,f
  8920  1C45                     u7200:
  8921  1C45  1283               	bcf	3,5	;RP0=0, select bank0
  8922  1C46  1303               	bcf	3,6	;RP1=0, select bank0
  8923  1C47  0823               	movf	??_Lcd_Write_String,w
  8924  1C48  00A5               	movwf	??_Lcd_Write_String+2
  8925  1C49  0825               	movf	??_Lcd_Write_String+2,w
  8926  1C4A  00FF               	movwf	btemp+1
  8927  1C4B  0824               	movf	??_Lcd_Write_String+1,w
  8928  1C4C  0084               	movwf	4
  8929  1C4D  160A  158A  2000  160A  158A  	fcall	stringtab
  8930  1C52  160A  158A  2292  160A  158A  	fcall	_Lcd_Write_Char
  8931  1C57                     l4135:
  8932  1C57  3001               	movlw	1
  8933  1C58  1283               	bcf	3,5	;RP0=0, select bank0
  8934  1C59  1303               	bcf	3,6	;RP1=0, select bank0
  8935  1C5A  07A6               	addwf	Lcd_Write_String@i,f
  8936  1C5B  1803               	skipnc
  8937  1C5C  0AA7               	incf	Lcd_Write_String@i+1,f
  8938  1C5D  3000               	movlw	0
  8939  1C5E  07A7               	addwf	Lcd_Write_String@i+1,f
  8940  1C5F                     l4137:
  8941  1C5F  0826               	movf	Lcd_Write_String@i,w
  8942  1C60  0721               	addwf	Lcd_Write_String@a,w
  8943  1C61  00A4               	movwf	??_Lcd_Write_String+1
  8944  1C62  0822               	movf	Lcd_Write_String@a+1,w
  8945  1C63  00A3               	movwf	??_Lcd_Write_String
  8946  1C64  1803               	skipnc
  8947  1C65  0AA3               	incf	??_Lcd_Write_String,f
  8948  1C66  1FA6               	btfss	Lcd_Write_String@i,7
  8949  1C67  2C69               	goto	u7210
  8950  1C68  03A3               	decf	??_Lcd_Write_String,f
  8951  1C69                     u7210:
  8952  1C69  1283               	bcf	3,5	;RP0=0, select bank0
  8953  1C6A  1303               	bcf	3,6	;RP1=0, select bank0
  8954  1C6B  0823               	movf	??_Lcd_Write_String,w
  8955  1C6C  00A5               	movwf	??_Lcd_Write_String+2
  8956  1C6D  0825               	movf	??_Lcd_Write_String+2,w
  8957  1C6E  00FF               	movwf	btemp+1
  8958  1C6F  0824               	movf	??_Lcd_Write_String+1,w
  8959  1C70  0084               	movwf	4
  8960  1C71  160A  158A  2000  160A  158A  	fcall	stringtab
  8961  1C76  3A00               	xorlw	0
  8962  1C77  1D03               	skipz
  8963  1C78  2C7A               	goto	u7221
  8964  1C79  2C7B               	goto	u7220
  8965  1C7A                     u7221:
  8966  1C7A  2C3B               	goto	l4133
  8967  1C7B                     u7220:
  8968  1C7B                     l189:
  8969  1C7B  0008               	return
  8970  1C7C                     __end_of_Lcd_Write_String:
  8971                           
  8972                           	psect	text29
  8973  1A92                     __ptext29:	
  8974 ;; *************** function _Lcd_Write_Char *****************
  8975 ;; Defined at:
  8976 ;;		line 94 in file "LCD.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;  a               1    wreg     unsigned char 
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;  a               1    0[BANK0 ] unsigned char 
  8981 ;; Return value:  Size  Location     Type
  8982 ;;                  1    wreg      void 
  8983 ;; Registers used:
  8984 ;;		wreg, status,2, status,0, pclath, cstack
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/0
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8990 ;;      Params:         0       0       0       0       0
  8991 ;;      Locals:         0       1       0       0       0
  8992 ;;      Temps:          1       0       0       0       0
  8993 ;;      Totals:         1       1       0       0       0
  8994 ;;Total ram usage:        2 bytes
  8995 ;; Hardware stack levels used:    1
  8996 ;; Hardware stack levels required when called:    4
  8997 ;; This function calls:
  8998 ;;		_Lcd_Port
  8999 ;; This function is called by:
  9000 ;;		_Lcd_Write_String
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           
  9005                           ;psect for function _Lcd_Write_Char
  9006  1A92                     _Lcd_Write_Char:
  9007                           
  9008                           ;incstack = 0
  9009                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9010                           ;Lcd_Write_Char@a stored from wreg
  9011  1A92  1283               	bcf	3,5	;RP0=0, select bank0
  9012  1A93  1303               	bcf	3,6	;RP1=0, select bank0
  9013  1A94  00A0               	movwf	Lcd_Write_Char@a
  9014  1A95                     l3887:
  9015                           
  9016                           ;LCD.c: 98:     PORTCbits.RC0 = 1;
  9017  1A95  1407               	bsf	7,0	;volatile
  9018  1A96                     l3889:
  9019                           
  9020                           ;LCD.c: 99:     Lcd_Port(a);
  9021  1A96  0820               	movf	Lcd_Write_Char@a,w
  9022  1A97  160A  158A  23B8  160A  158A  	fcall	_Lcd_Port
  9023  1A9C                     l3891:
  9024                           
  9025                           ;LCD.c: 100:     RC1 = 1;
  9026  1A9C  1283               	bcf	3,5	;RP0=0, select bank0
  9027  1A9D  1303               	bcf	3,6	;RP1=0, select bank0
  9028  1A9E  1487               	bsf	7,1	;volatile
  9029  1A9F                     l3893:
  9030                           
  9031                           ;LCD.c: 101:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9032  1A9F  301A               	movlw	26
  9033  1AA0  00F6               	movwf	??_Lcd_Write_Char
  9034  1AA1                     u7757:
  9035  1AA1  0BF6               	decfsz	??_Lcd_Write_Char,f
  9036  1AA2  2AA1               	goto	u7757
  9037  1AA3  0000               	nop
  9038  1AA4                     l3895:
  9039                           
  9040                           ;LCD.c: 102:     RC1 = 0;
  9041  1AA4  1283               	bcf	3,5	;RP0=0, select bank0
  9042  1AA5  1303               	bcf	3,6	;RP1=0, select bank0
  9043  1AA6  1087               	bcf	7,1	;volatile
  9044  1AA7                     l3897:
  9045                           
  9046                           ;LCD.c: 103:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9047  1AA7  301A               	movlw	26
  9048  1AA8  00F6               	movwf	??_Lcd_Write_Char
  9049  1AA9                     u7767:
  9050  1AA9  0BF6               	decfsz	??_Lcd_Write_Char,f
  9051  1AAA  2AA9               	goto	u7767
  9052  1AAB  0000               	nop
  9053  1AAC                     l183:
  9054  1AAC  0008               	return
  9055  1AAD                     __end_of_Lcd_Write_Char:
  9056                           
  9057                           	psect	text30
  9058  1AAD                     __ptext30:	
  9059 ;; *************** function _Lcd_Set_Cursor *****************
  9060 ;; Defined at:
  9061 ;;		line 69 in file "LCD.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  a               1    wreg     unsigned char 
  9064 ;;  b               1    2[BANK0 ] unsigned char 
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;  a               1    4[BANK0 ] unsigned char 
  9067 ;;  temp            1    5[BANK0 ] unsigned char 
  9068 ;; Return value:  Size  Location     Type
  9069 ;;                  1    wreg      void 
  9070 ;; Registers used:
  9071 ;;		wreg, status,2, status,0, pclath, cstack
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9077 ;;      Params:         0       1       0       0       0
  9078 ;;      Locals:         0       2       0       0       0
  9079 ;;      Temps:          0       1       0       0       0
  9080 ;;      Totals:         0       4       0       0       0
  9081 ;;Total ram usage:        4 bytes
  9082 ;; Hardware stack levels used:    1
  9083 ;; Hardware stack levels required when called:    5
  9084 ;; This function calls:
  9085 ;;		_Lcd_Cmd
  9086 ;; This function is called by:
  9087 ;;		_main
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           
  9092                           ;psect for function _Lcd_Set_Cursor
  9093  1AAD                     _Lcd_Set_Cursor:
  9094                           
  9095                           ;incstack = 0
  9096                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9097                           ;Lcd_Set_Cursor@a stored from wreg
  9098  1AAD  1283               	bcf	3,5	;RP0=0, select bank0
  9099  1AAE  1303               	bcf	3,6	;RP1=0, select bank0
  9100  1AAF  00A4               	movwf	Lcd_Set_Cursor@a
  9101  1AB0                     l4119:
  9102                           
  9103                           ;LCD.c: 70:     char temp;;LCD.c: 71:     if (a == 1) {
  9104  1AB0  0324               	decf	Lcd_Set_Cursor@a,w
  9105  1AB1  1D03               	btfss	3,2
  9106  1AB2  2AB4               	goto	u7181
  9107  1AB3  2AB5               	goto	u7180
  9108  1AB4                     u7181:
  9109  1AB4  2AC1               	goto	l4125
  9110  1AB5                     u7180:
  9111  1AB5                     l4121:
  9112                           
  9113                           ;LCD.c: 72:         temp = 0x80 + b - 1;
  9114  1AB5  0822               	movf	Lcd_Set_Cursor@b,w
  9115  1AB6  3E7F               	addlw	127
  9116  1AB7  00A3               	movwf	??_Lcd_Set_Cursor
  9117  1AB8  0823               	movf	??_Lcd_Set_Cursor,w
  9118  1AB9  00A5               	movwf	Lcd_Set_Cursor@temp
  9119  1ABA                     l4123:
  9120                           
  9121                           ;LCD.c: 73:         Lcd_Cmd(temp);
  9122  1ABA  0825               	movf	Lcd_Set_Cursor@temp,w
  9123  1ABB  120A  118A  27DF  160A  158A  	fcall	_Lcd_Cmd
  9124                           
  9125                           ;LCD.c: 74:     } else if (a == 2) {
  9126  1AC0  2AD2               	goto	l177
  9127  1AC1                     l4125:
  9128  1AC1  3002               	movlw	2
  9129  1AC2  0624               	xorwf	Lcd_Set_Cursor@a,w
  9130  1AC3  1D03               	btfss	3,2
  9131  1AC4  2AC6               	goto	u7191
  9132  1AC5  2AC7               	goto	u7190
  9133  1AC6                     u7191:
  9134  1AC6  2AD2               	goto	l177
  9135  1AC7                     u7190:
  9136  1AC7                     l4127:
  9137                           
  9138                           ;LCD.c: 75:         temp = 0xC0 + b - 1;
  9139  1AC7  0822               	movf	Lcd_Set_Cursor@b,w
  9140  1AC8  3EBF               	addlw	191
  9141  1AC9  00A3               	movwf	??_Lcd_Set_Cursor
  9142  1ACA  0823               	movf	??_Lcd_Set_Cursor,w
  9143  1ACB  00A5               	movwf	Lcd_Set_Cursor@temp
  9144  1ACC                     l4129:
  9145                           
  9146                           ;LCD.c: 76:         Lcd_Cmd(temp);
  9147  1ACC  0825               	movf	Lcd_Set_Cursor@temp,w
  9148  1ACD  120A  118A  27DF  160A  158A  	fcall	_Lcd_Cmd
  9149  1AD2                     l177:
  9150  1AD2  0008               	return
  9151  1AD3                     __end_of_Lcd_Set_Cursor:
  9152                           
  9153                           	psect	text31
  9154  1CC2                     __ptext31:	
  9155 ;; *************** function _Lcd_Init *****************
  9156 ;; Defined at:
  9157 ;;		line 80 in file "LCD.c"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;		None
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;		None
  9162 ;; Return value:  Size  Location     Type
  9163 ;;                  1    wreg      void 
  9164 ;; Registers used:
  9165 ;;		wreg, status,2, status,0, pclath, cstack
  9166 ;; Tracked objects:
  9167 ;;		On entry : 0/0
  9168 ;;		On exit  : 0/0
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9171 ;;      Params:         0       0       0       0       0
  9172 ;;      Locals:         0       0       0       0       0
  9173 ;;      Temps:          0       3       0       0       0
  9174 ;;      Totals:         0       3       0       0       0
  9175 ;;Total ram usage:        3 bytes
  9176 ;; Hardware stack levels used:    1
  9177 ;; Hardware stack levels required when called:    5
  9178 ;; This function calls:
  9179 ;;		_Lcd_Cmd
  9180 ;;		_Lcd_Port
  9181 ;; This function is called by:
  9182 ;;		_main
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186                           
  9187                           ;psect for function _Lcd_Init
  9188  1CC2                     _Lcd_Init:
  9189  1CC2                     l4107:	
  9190                           ;incstack = 0
  9191                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9192                           
  9193                           
  9194                           ;LCD.c: 81:     Lcd_Port(0x00);
  9195  1CC2  3000               	movlw	0
  9196  1CC3  160A  158A  23B8  160A  158A  	fcall	_Lcd_Port
  9197  1CC8                     l4109:
  9198                           
  9199                           ;LCD.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9200  1CC8  3034               	movlw	52
  9201  1CC9  1283               	bcf	3,5	;RP0=0, select bank0
  9202  1CCA  1303               	bcf	3,6	;RP1=0, select bank0
  9203  1CCB  00A3               	movwf	??_Lcd_Init+1
  9204  1CCC  30F1               	movlw	241
  9205  1CCD  00A2               	movwf	??_Lcd_Init
  9206  1CCE                     u7777:
  9207  1CCE  0BA2               	decfsz	??_Lcd_Init,f
  9208  1CCF  2CCE               	goto	u7777
  9209  1CD0  0BA3               	decfsz	??_Lcd_Init+1,f
  9210  1CD1  2CCE               	goto	u7777
  9211  1CD2                     l4111:
  9212                           
  9213                           ;LCD.c: 83:     Lcd_Cmd(0x3F);
  9214  1CD2  303F               	movlw	63
  9215  1CD3  120A  118A  27DF  160A  158A  	fcall	_Lcd_Cmd
  9216                           
  9217                           ;LCD.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9218  1CD8  300D               	movlw	13
  9219  1CD9  1283               	bcf	3,5	;RP0=0, select bank0
  9220  1CDA  1303               	bcf	3,6	;RP1=0, select bank0
  9221  1CDB  00A3               	movwf	??_Lcd_Init+1
  9222  1CDC  30FB               	movlw	251
  9223  1CDD  00A2               	movwf	??_Lcd_Init
  9224  1CDE                     u7787:
  9225  1CDE  0BA2               	decfsz	??_Lcd_Init,f
  9226  1CDF  2CDE               	goto	u7787
  9227  1CE0  0BA3               	decfsz	??_Lcd_Init+1,f
  9228  1CE1  2CDE               	goto	u7787
  9229  1CE2                     l4113:
  9230                           
  9231                           ;LCD.c: 85:     Lcd_Cmd(0x3F);
  9232  1CE2  303F               	movlw	63
  9233  1CE3  120A  118A  27DF  160A  158A  	fcall	_Lcd_Cmd
  9234  1CE8                     l4115:
  9235                           
  9236                           ;LCD.c: 86:     _delay((unsigned long)((110)*(8000000/4000.0)));
  9237  1CE8  3002               	movlw	2
  9238  1CE9  1283               	bcf	3,5	;RP0=0, select bank0
  9239  1CEA  1303               	bcf	3,6	;RP1=0, select bank0
  9240  1CEB  00A4               	movwf	??_Lcd_Init+2
  9241  1CEC  301E               	movlw	30
  9242  1CED  00A3               	movwf	??_Lcd_Init+1
  9243  1CEE  30B3               	movlw	179
  9244  1CEF  00A2               	movwf	??_Lcd_Init
  9245  1CF0                     u7797:
  9246  1CF0  0BA2               	decfsz	??_Lcd_Init,f
  9247  1CF1  2CF0               	goto	u7797
  9248  1CF2  0BA3               	decfsz	??_Lcd_Init+1,f
  9249  1CF3  2CF0               	goto	u7797
  9250  1CF4  0BA4               	decfsz	??_Lcd_Init+2,f
  9251  1CF5  2CF0               	goto	u7797
  9252                           
  9253                           ;LCD.c: 87:     Lcd_Cmd(0x3F);
  9254  1CF6  303F               	movlw	63
  9255  1CF7  120A  118A  27DF  160A  158A  	fcall	_Lcd_Cmd
  9256                           
  9257                           ;LCD.c: 89:     Lcd_Cmd(0x38);
  9258  1CFC  3038               	movlw	56
  9259  1CFD  120A  118A  27DF  160A  158A  	fcall	_Lcd_Cmd
  9260                           
  9261                           ;LCD.c: 90:     Lcd_Cmd(0x0C);
  9262  1D02  300C               	movlw	12
  9263  1D03  120A  118A  27DF  160A  158A  	fcall	_Lcd_Cmd
  9264                           
  9265                           ;LCD.c: 91:     Lcd_Cmd(0x06);
  9266  1D08  3006               	movlw	6
  9267  1D09  120A  118A  27DF  160A  158A  	fcall	_Lcd_Cmd
  9268  1D0E                     l180:
  9269  1D0E  0008               	return
  9270  1D0F                     __end_of_Lcd_Init:
  9271                           
  9272                           	psect	text32
  9273  1A4B                     __ptext32:	
  9274 ;; *************** function _Lcd_Clear *****************
  9275 ;; Defined at:
  9276 ;;		line 64 in file "LCD.c"
  9277 ;; Parameters:    Size  Location     Type
  9278 ;;		None
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;		None
  9281 ;; Return value:  Size  Location     Type
  9282 ;;                  1    wreg      void 
  9283 ;; Registers used:
  9284 ;;		wreg, status,2, status,0, pclath, cstack
  9285 ;; Tracked objects:
  9286 ;;		On entry : 0/0
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9290 ;;      Params:         0       0       0       0       0
  9291 ;;      Locals:         0       0       0       0       0
  9292 ;;      Temps:          0       0       0       0       0
  9293 ;;      Totals:         0       0       0       0       0
  9294 ;;Total ram usage:        0 bytes
  9295 ;; Hardware stack levels used:    1
  9296 ;; Hardware stack levels required when called:    5
  9297 ;; This function calls:
  9298 ;;		_Lcd_Cmd
  9299 ;; This function is called by:
  9300 ;;		_main
  9301 ;; This function uses a non-reentrant model
  9302 ;;
  9303                           
  9304                           
  9305                           ;psect for function _Lcd_Clear
  9306  1A4B                     _Lcd_Clear:
  9307  1A4B                     l4117:	
  9308                           ;incstack = 0
  9309                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9310                           
  9311                           
  9312                           ;LCD.c: 65:     Lcd_Cmd(0);
  9313  1A4B  3000               	movlw	0
  9314  1A4C  120A  118A  27DF  160A  158A  	fcall	_Lcd_Cmd
  9315                           
  9316                           ;LCD.c: 66:     Lcd_Cmd(1);
  9317  1A51  3001               	movlw	1
  9318  1A52  120A  118A  27DF  160A  158A  	fcall	_Lcd_Cmd
  9319  1A57                     l171:
  9320  1A57  0008               	return
  9321  1A58                     __end_of_Lcd_Clear:
  9322                           
  9323                           	psect	text33
  9324  07DF                     __ptext33:	
  9325 ;; *************** function _Lcd_Cmd *****************
  9326 ;; Defined at:
  9327 ;;		line 56 in file "LCD.c"
  9328 ;; Parameters:    Size  Location     Type
  9329 ;;  a               1    wreg     unsigned char 
  9330 ;; Auto vars:     Size  Location     Type
  9331 ;;  a               1    6[COMMON] unsigned char 
  9332 ;; Return value:  Size  Location     Type
  9333 ;;                  1    wreg      void 
  9334 ;; Registers used:
  9335 ;;		wreg, status,2, status,0, pclath, cstack
  9336 ;; Tracked objects:
  9337 ;;		On entry : 0/0
  9338 ;;		On exit  : 0/0
  9339 ;;		Unchanged: 0/0
  9340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9341 ;;      Params:         0       0       0       0       0
  9342 ;;      Locals:         1       0       0       0       0
  9343 ;;      Temps:          0       2       0       0       0
  9344 ;;      Totals:         1       2       0       0       0
  9345 ;;Total ram usage:        3 bytes
  9346 ;; Hardware stack levels used:    1
  9347 ;; Hardware stack levels required when called:    4
  9348 ;; This function calls:
  9349 ;;		_Lcd_Port
  9350 ;; This function is called by:
  9351 ;;		_Lcd_Clear
  9352 ;;		_Lcd_Set_Cursor
  9353 ;;		_Lcd_Init
  9354 ;;		_Lcd_Shift_Right
  9355 ;;		_Lcd_Shift_Left
  9356 ;; This function uses a non-reentrant model
  9357 ;;
  9358                           
  9359                           
  9360                           ;psect for function _Lcd_Cmd
  9361  07DF                     _Lcd_Cmd:
  9362                           
  9363                           ;incstack = 0
  9364                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9365                           ;Lcd_Cmd@a stored from wreg
  9366  07DF  00F6               	movwf	Lcd_Cmd@a
  9367  07E0                     l3877:
  9368                           
  9369                           ;LCD.c: 57:     PORTCbits.RC0 = 0;
  9370  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  9371  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  9372  07E2  1007               	bcf	7,0	;volatile
  9373  07E3                     l3879:
  9374                           
  9375                           ;LCD.c: 58:     Lcd_Port(a);
  9376  07E3  0876               	movf	Lcd_Cmd@a,w
  9377  07E4  160A  158A  23B8  120A  118A  	fcall	_Lcd_Port
  9378  07E9                     l3881:
  9379                           
  9380                           ;LCD.c: 59:     RC1 = 1;
  9381  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  9382  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  9383  07EB  1487               	bsf	7,1	;volatile
  9384  07EC                     l3883:
  9385                           
  9386                           ;LCD.c: 60:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9387  07EC  300B               	movlw	11
  9388  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  9389  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  9390  07EF  00A1               	movwf	??_Lcd_Cmd+1
  9391  07F0  3061               	movlw	97
  9392  07F1  00A0               	movwf	??_Lcd_Cmd
  9393  07F2                     u7807:
  9394  07F2  0BA0               	decfsz	??_Lcd_Cmd,f
  9395  07F3  2FF2               	goto	u7807
  9396  07F4  0BA1               	decfsz	??_Lcd_Cmd+1,f
  9397  07F5  2FF2               	goto	u7807
  9398  07F6  2FF7               	nop2
  9399  07F7                     l3885:
  9400                           
  9401                           ;LCD.c: 61:     RC1 = 0;
  9402  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  9403  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  9404  07F9  1087               	bcf	7,1	;volatile
  9405  07FA                     l168:
  9406  07FA  0008               	return
  9407  07FB                     __end_of_Lcd_Cmd:
  9408                           
  9409                           	psect	text34
  9410  1BB8                     __ptext34:	
  9411 ;; *************** function _Lcd_Port *****************
  9412 ;; Defined at:
  9413 ;;		line 13 in file "LCD.c"
  9414 ;; Parameters:    Size  Location     Type
  9415 ;;  a               1    wreg     unsigned char 
  9416 ;; Auto vars:     Size  Location     Type
  9417 ;;  a               1    5[COMMON] unsigned char 
  9418 ;; Return value:  Size  Location     Type
  9419 ;;                  1    wreg      void 
  9420 ;; Registers used:
  9421 ;;		wreg
  9422 ;; Tracked objects:
  9423 ;;		On entry : 0/0
  9424 ;;		On exit  : 0/0
  9425 ;;		Unchanged: 0/0
  9426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9427 ;;      Params:         0       0       0       0       0
  9428 ;;      Locals:         1       0       0       0       0
  9429 ;;      Temps:          0       0       0       0       0
  9430 ;;      Totals:         1       0       0       0       0
  9431 ;;Total ram usage:        1 bytes
  9432 ;; Hardware stack levels used:    1
  9433 ;; Hardware stack levels required when called:    3
  9434 ;; This function calls:
  9435 ;;		Nothing
  9436 ;; This function is called by:
  9437 ;;		_Lcd_Cmd
  9438 ;;		_Lcd_Init
  9439 ;;		_Lcd_Write_Char
  9440 ;; This function uses a non-reentrant model
  9441 ;;
  9442                           
  9443                           
  9444                           ;psect for function _Lcd_Port
  9445  1BB8                     _Lcd_Port:
  9446                           
  9447                           ;incstack = 0
  9448                           ; Regs used in _Lcd_Port: [wreg]
  9449                           ;Lcd_Port@a stored from wreg
  9450  1BB8  00F5               	movwf	Lcd_Port@a
  9451  1BB9                     l3611:
  9452                           
  9453                           ;LCD.c: 15:     if (a & 1)
  9454  1BB9  1C75               	btfss	Lcd_Port@a,0
  9455  1BBA  2BBC               	goto	u5801
  9456  1BBB  2BBD               	goto	u5800
  9457  1BBC                     u5801:
  9458  1BBC  2BC1               	goto	l149
  9459  1BBD                     u5800:
  9460  1BBD                     l3613:
  9461                           
  9462                           ;LCD.c: 16:         RD0 = 1;
  9463  1BBD  1283               	bcf	3,5	;RP0=0, select bank0
  9464  1BBE  1303               	bcf	3,6	;RP1=0, select bank0
  9465  1BBF  1408               	bsf	8,0	;volatile
  9466  1BC0  2BC4               	goto	l150
  9467  1BC1                     l149:	
  9468                           ;LCD.c: 17:     else
  9469                           
  9470                           
  9471                           ;LCD.c: 18:         RD0 = 0;
  9472  1BC1  1283               	bcf	3,5	;RP0=0, select bank0
  9473  1BC2  1303               	bcf	3,6	;RP1=0, select bank0
  9474  1BC3  1008               	bcf	8,0	;volatile
  9475  1BC4                     l150:
  9476                           
  9477                           ;LCD.c: 20:     if (a & 2)
  9478  1BC4  1CF5               	btfss	Lcd_Port@a,1
  9479  1BC5  2BC7               	goto	u5811
  9480  1BC6  2BC8               	goto	u5810
  9481  1BC7                     u5811:
  9482  1BC7  2BCA               	goto	l151
  9483  1BC8                     u5810:
  9484  1BC8                     l3615:
  9485                           
  9486                           ;LCD.c: 21:         RD1 = 1;
  9487  1BC8  1488               	bsf	8,1	;volatile
  9488  1BC9  2BCB               	goto	l152
  9489  1BCA                     l151:	
  9490                           ;LCD.c: 22:     else
  9491                           
  9492                           
  9493                           ;LCD.c: 23:         RD1 = 0;
  9494  1BCA  1088               	bcf	8,1	;volatile
  9495  1BCB                     l152:
  9496                           
  9497                           ;LCD.c: 25:     if (a & 4)
  9498  1BCB  1D75               	btfss	Lcd_Port@a,2
  9499  1BCC  2BCE               	goto	u5821
  9500  1BCD  2BCF               	goto	u5820
  9501  1BCE                     u5821:
  9502  1BCE  2BD1               	goto	l153
  9503  1BCF                     u5820:
  9504  1BCF                     l3617:
  9505                           
  9506                           ;LCD.c: 26:         RD2 = 1;
  9507  1BCF  1508               	bsf	8,2	;volatile
  9508  1BD0  2BD2               	goto	l154
  9509  1BD1                     l153:	
  9510                           ;LCD.c: 27:     else
  9511                           
  9512                           
  9513                           ;LCD.c: 28:         RD2 = 0;
  9514  1BD1  1108               	bcf	8,2	;volatile
  9515  1BD2                     l154:
  9516                           
  9517                           ;LCD.c: 30:     if (a & 8)
  9518  1BD2  1DF5               	btfss	Lcd_Port@a,3
  9519  1BD3  2BD5               	goto	u5831
  9520  1BD4  2BD6               	goto	u5830
  9521  1BD5                     u5831:
  9522  1BD5  2BD8               	goto	l155
  9523  1BD6                     u5830:
  9524  1BD6                     l3619:
  9525                           
  9526                           ;LCD.c: 31:         RD3 = 1;
  9527  1BD6  1588               	bsf	8,3	;volatile
  9528  1BD7  2BD9               	goto	l156
  9529  1BD8                     l155:	
  9530                           ;LCD.c: 32:     else
  9531                           
  9532                           
  9533                           ;LCD.c: 33:         RD3 = 0;
  9534  1BD8  1188               	bcf	8,3	;volatile
  9535  1BD9                     l156:
  9536                           
  9537                           ;LCD.c: 35:     if (a & 16)
  9538  1BD9  1E75               	btfss	Lcd_Port@a,4
  9539  1BDA  2BDC               	goto	u5841
  9540  1BDB  2BDD               	goto	u5840
  9541  1BDC                     u5841:
  9542  1BDC  2BDF               	goto	l157
  9543  1BDD                     u5840:
  9544  1BDD                     l3621:
  9545                           
  9546                           ;LCD.c: 36:         RD4 = 1;
  9547  1BDD  1608               	bsf	8,4	;volatile
  9548  1BDE  2BE0               	goto	l158
  9549  1BDF                     l157:	
  9550                           ;LCD.c: 37:     else
  9551                           
  9552                           
  9553                           ;LCD.c: 38:         RD4 = 0;
  9554  1BDF  1208               	bcf	8,4	;volatile
  9555  1BE0                     l158:
  9556                           
  9557                           ;LCD.c: 40:     if (a & 32)
  9558  1BE0  1EF5               	btfss	Lcd_Port@a,5
  9559  1BE1  2BE3               	goto	u5851
  9560  1BE2  2BE4               	goto	u5850
  9561  1BE3                     u5851:
  9562  1BE3  2BE6               	goto	l159
  9563  1BE4                     u5850:
  9564  1BE4                     l3623:
  9565                           
  9566                           ;LCD.c: 41:         RD5 = 1;
  9567  1BE4  1688               	bsf	8,5	;volatile
  9568  1BE5  2BE7               	goto	l160
  9569  1BE6                     l159:	
  9570                           ;LCD.c: 42:     else
  9571                           
  9572                           
  9573                           ;LCD.c: 43:         RD5 = 0;
  9574  1BE6  1288               	bcf	8,5	;volatile
  9575  1BE7                     l160:
  9576                           
  9577                           ;LCD.c: 45:     if (a & 64)
  9578  1BE7  1F75               	btfss	Lcd_Port@a,6
  9579  1BE8  2BEA               	goto	u5861
  9580  1BE9  2BEB               	goto	u5860
  9581  1BEA                     u5861:
  9582  1BEA  2BED               	goto	l161
  9583  1BEB                     u5860:
  9584  1BEB                     l3625:
  9585                           
  9586                           ;LCD.c: 46:         RD6 = 1;
  9587  1BEB  1708               	bsf	8,6	;volatile
  9588  1BEC  2BEE               	goto	l162
  9589  1BED                     l161:	
  9590                           ;LCD.c: 47:     else
  9591                           
  9592                           
  9593                           ;LCD.c: 48:         RD6 = 0;
  9594  1BED  1308               	bcf	8,6	;volatile
  9595  1BEE                     l162:
  9596                           
  9597                           ;LCD.c: 50:     if (a & 128)
  9598  1BEE  1FF5               	btfss	Lcd_Port@a,7
  9599  1BEF  2BF1               	goto	u5871
  9600  1BF0  2BF2               	goto	u5870
  9601  1BF1                     u5871:
  9602  1BF1  2BF4               	goto	l163
  9603  1BF2                     u5870:
  9604  1BF2                     l3627:
  9605                           
  9606                           ;LCD.c: 51:         RD7 = 1;
  9607  1BF2  1788               	bsf	8,7	;volatile
  9608  1BF3  2BF5               	goto	l165
  9609  1BF4                     l163:	
  9610                           ;LCD.c: 52:     else
  9611                           
  9612                           
  9613                           ;LCD.c: 53:         RD7 = 0;
  9614  1BF4  1388               	bcf	8,7	;volatile
  9615  1BF5                     l165:
  9616  1BF5  0008               	return
  9617  1BF6                     __end_of_Lcd_Port:
  9618                           
  9619                           	psect	text35
  9620  1A58                     __ptext35:	
  9621 ;; *************** function _isr *****************
  9622 ;; Defined at:
  9623 ;;		line 63 in file "main.c"
  9624 ;; Parameters:    Size  Location     Type
  9625 ;;		None
  9626 ;; Auto vars:     Size  Location     Type
  9627 ;;		None
  9628 ;; Return value:  Size  Location     Type
  9629 ;;                  1    wreg      void 
  9630 ;; Registers used:
  9631 ;;		wreg, status,2, status,0, pclath, cstack
  9632 ;; Tracked objects:
  9633 ;;		On entry : 0/0
  9634 ;;		On exit  : 0/0
  9635 ;;		Unchanged: 0/0
  9636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9637 ;;      Params:         0       0       0       0       0
  9638 ;;      Locals:         0       0       0       0       0
  9639 ;;      Temps:          2       0       0       0       0
  9640 ;;      Totals:         2       0       0       0       0
  9641 ;;Total ram usage:        2 bytes
  9642 ;; Hardware stack levels used:    1
  9643 ;; Hardware stack levels required when called:    2
  9644 ;; This function calls:
  9645 ;;		_int_adc
  9646 ;; This function is called by:
  9647 ;;		Interrupt level 1
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           
  9652                           ;psect for function _isr
  9653  1A58                     _isr:
  9654  1A58                     i1l3509:
  9655                           
  9656                           ;main.c: 65:     if (PIR1bits.ADIF){
  9657  1A58  1283               	bcf	3,5	;RP0=0, select bank0
  9658  1A59  1303               	bcf	3,6	;RP1=0, select bank0
  9659  1A5A  1F0C               	btfss	12,6	;volatile
  9660  1A5B  2A5D               	goto	u575_21
  9661  1A5C  2A5E               	goto	u575_20
  9662  1A5D                     u575_21:
  9663  1A5D  2A63               	goto	i1l86
  9664  1A5E                     u575_20:
  9665  1A5E                     i1l3511:
  9666                           
  9667                           ;main.c: 66:         int_adc();
  9668  1A5E  160A  158A  234C  160A  158A  	fcall	_int_adc
  9669  1A63                     i1l86:
  9670  1A63  0874               	movf	??_isr+1,w
  9671  1A64  008A               	movwf	10
  9672  1A65  0E73               	swapf	??_isr,w
  9673  1A66  0083               	movwf	3
  9674  1A67  0EFE               	swapf	btemp,f
  9675  1A68  0E7E               	swapf	btemp,w
  9676  1A69  0009               	retfie
  9677  1A6A                     __end_of_isr:
  9678                           
  9679                           	psect	intentry
  9680  0004                     __pintentry:	
  9681                           ;incstack = 0
  9682                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  9683                           
  9684  0004                     interrupt_function:
  9685  007E                     saved_w	set	btemp
  9686  0004  00FE               	movwf	btemp
  9687  0005  0E03               	swapf	3,w
  9688  0006  00F3               	movwf	??_isr
  9689  0007  080A               	movf	10,w
  9690  0008  00F4               	movwf	??_isr+1
  9691  0009  160A  158A  2A58   	ljmp	_isr
  9692                           
  9693                           	psect	text36
  9694  1B4C                     __ptext36:	
  9695 ;; *************** function _int_adc *****************
  9696 ;; Defined at:
  9697 ;;		line 70 in file "main.c"
  9698 ;; Parameters:    Size  Location     Type
  9699 ;;		None
  9700 ;; Auto vars:     Size  Location     Type
  9701 ;;		None
  9702 ;; Return value:  Size  Location     Type
  9703 ;;                  1    wreg      void 
  9704 ;; Registers used:
  9705 ;;		wreg, status,2, status,0, pclath, cstack
  9706 ;; Tracked objects:
  9707 ;;		On entry : 0/0
  9708 ;;		On exit  : 0/0
  9709 ;;		Unchanged: 0/0
  9710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9711 ;;      Params:         0       0       0       0       0
  9712 ;;      Locals:         0       0       0       0       0
  9713 ;;      Temps:          1       0       0       0       0
  9714 ;;      Totals:         1       0       0       0       0
  9715 ;;Total ram usage:        1 bytes
  9716 ;; Hardware stack levels used:    1
  9717 ;; Hardware stack levels required when called:    1
  9718 ;; This function calls:
  9719 ;;		_valadc
  9720 ;; This function is called by:
  9721 ;;		_isr
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724                           
  9725                           
  9726                           ;psect for function _int_adc
  9727  1B4C                     _int_adc:
  9728  1B4C                     i1l3173:	
  9729                           ;incstack = 0
  9730                           ; Regs used in _int_adc: [wreg+status,2+status,0+pclath+cstack]
  9731                           
  9732                           
  9733                           ;main.c: 71:     if(ADCON0bits.CHS == 5){
  9734  1B4C  1283               	bcf	3,5	;RP0=0, select bank0
  9735  1B4D  1303               	bcf	3,6	;RP1=0, select bank0
  9736  1B4E  0C1F               	rrf	31,w	;volatile
  9737  1B4F  00F2               	movwf	??_int_adc
  9738  1B50  0C72               	rrf	??_int_adc,w
  9739  1B51  390F               	andlw	15
  9740  1B52  3A05               	xorlw	5
  9741  1B53  1D03               	skipz
  9742  1B54  2B56               	goto	u521_21
  9743  1B55  2B57               	goto	u521_20
  9744  1B56                     u521_21:
  9745  1B56  2B69               	goto	i1l3179
  9746  1B57                     u521_20:
  9747  1B57                     i1l3175:
  9748                           
  9749                           ;main.c: 72:         V1 = valadc(val);
  9750  1B57  0877               	movf	_val,w
  9751  1B58  160A  158A  2231  160A  158A  	fcall	_valadc
  9752  1B5D  00F2               	movwf	??_int_adc
  9753  1B5E  0872               	movf	??_int_adc,w
  9754  1B5F  1683               	bsf	3,5	;RP0=1, select bank1
  9755  1B60  1303               	bcf	3,6	;RP1=0, select bank1
  9756  1B61  00DD               	movwf	_V1^(0+128)
  9757  1B62                     i1l3177:
  9758                           
  9759                           ;main.c: 73:         ADCON0bits.CHS = 6;
  9760  1B62  1283               	bcf	3,5	;RP0=0, select bank0
  9761  1B63  1303               	bcf	3,6	;RP1=0, select bank0
  9762  1B64  081F               	movf	31,w	;volatile
  9763  1B65  39C3               	andlw	-61
  9764  1B66  3818               	iorlw	24
  9765  1B67  009F               	movwf	31	;volatile
  9766                           
  9767                           ;main.c: 74:         }
  9768  1B68  2B7A               	goto	i1l3183
  9769  1B69                     i1l3179:
  9770                           
  9771                           ;main.c: 76:         V2 = valadc(val);
  9772  1B69  0877               	movf	_val,w
  9773  1B6A  160A  158A  2231  160A  158A  	fcall	_valadc
  9774  1B6F  00F2               	movwf	??_int_adc
  9775  1B70  0872               	movf	??_int_adc,w
  9776  1B71  1683               	bsf	3,5	;RP0=1, select bank1
  9777  1B72  1303               	bcf	3,6	;RP1=0, select bank1
  9778  1B73  00DC               	movwf	_V2^(0+128)
  9779  1B74                     i1l3181:
  9780                           
  9781                           ;main.c: 77:         ADCON0bits.CHS = 5;
  9782  1B74  1283               	bcf	3,5	;RP0=0, select bank0
  9783  1B75  1303               	bcf	3,6	;RP1=0, select bank0
  9784  1B76  081F               	movf	31,w	;volatile
  9785  1B77  39C3               	andlw	-61
  9786  1B78  3814               	iorlw	20
  9787  1B79  009F               	movwf	31	;volatile
  9788  1B7A                     i1l3183:
  9789                           
  9790                           ;main.c: 79:     PIR1bits.ADIF = 0;
  9791  1B7A  130C               	bcf	12,6	;volatile
  9792  1B7B                     i1l91:
  9793  1B7B  0008               	return
  9794  1B7C                     __end_of_int_adc:
  9795                           
  9796                           	psect	text37
  9797  1A31                     __ptext37:	
  9798 ;; *************** function _valadc *****************
  9799 ;; Defined at:
  9800 ;;		line 5 in file "adc.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;  aa              1    wreg     unsigned char 
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;  aa              1    1[COMMON] unsigned char 
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  1    wreg      unsigned char 
  9807 ;; Registers used:
  9808 ;;		wreg
  9809 ;; Tracked objects:
  9810 ;;		On entry : 0/0
  9811 ;;		On exit  : 0/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9814 ;;      Params:         0       0       0       0       0
  9815 ;;      Locals:         1       0       0       0       0
  9816 ;;      Temps:          1       0       0       0       0
  9817 ;;      Totals:         2       0       0       0       0
  9818 ;;Total ram usage:        2 bytes
  9819 ;; Hardware stack levels used:    1
  9820 ;; This function calls:
  9821 ;;		Nothing
  9822 ;; This function is called by:
  9823 ;;		_int_adc
  9824 ;; This function uses a non-reentrant model
  9825 ;;
  9826                           
  9827                           
  9828                           ;psect for function _valadc
  9829  1A31                     _valadc:
  9830  1A31                     i1l2785:	
  9831                           ;incstack = 0
  9832                           ; Regs used in _valadc: [wreg]
  9833                           
  9834                           
  9835                           ;adc.c: 6:     aa = ADRESH;
  9836  1A31  1283               	bcf	3,5	;RP0=0, select bank0
  9837  1A32  1303               	bcf	3,6	;RP1=0, select bank0
  9838  1A33  081E               	movf	30,w	;volatile
  9839  1A34  00F0               	movwf	??_valadc
  9840  1A35  0870               	movf	??_valadc,w
  9841  1A36  00F1               	movwf	valadc@aa
  9842                           
  9843                           ;adc.c: 7:     return aa;
  9844  1A37  0871               	movf	valadc@aa,w
  9845  1A38                     i1l202:
  9846  1A38  0008               	return
  9847  1A39                     __end_of_valadc:
  9848  007E                     btemp	set	126	;btemp
  9849  007E                     wtemp0	set	126
  9850                           
  9851                           	psect	config
  9852                           
  9853                           ;Config register CONFIG1 @ 0x2007
  9854                           ;	Oscillator Selection bits
  9855                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  9856                           ;	Watchdog Timer Enable bit
  9857                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9858                           ;	Power-up Timer Enable bit
  9859                           ;	PWRTE = OFF, PWRT disabled
  9860                           ;	RE3/MCLR pin function select bit
  9861                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9862                           ;	Code Protection bit
  9863                           ;	CP = OFF, Program memory code protection is disabled
  9864                           ;	Data Code Protection bit
  9865                           ;	CPD = OFF, Data memory code protection is disabled
  9866                           ;	Brown Out Reset Selection bits
  9867                           ;	BOREN = OFF, BOR disabled
  9868                           ;	Internal External Switchover bit
  9869                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9870                           ;	Fail-Safe Clock Monitor Enabled bit
  9871                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9872                           ;	Low Voltage Programming Enable bit
  9873                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9874                           ;	In-Circuit Debugger Mode bit
  9875                           ;	DEBUG = 0x1, unprogrammed default
  9876  2007                     	org	8199
  9877  2007  20D6               	dw	8406
  9878                           
  9879                           ;Config register CONFIG2 @ 0x2008
  9880                           ;	Brown-out Reset Selection bit
  9881                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9882                           ;	Flash Program Memory Self Write Enable bits
  9883                           ;	WRT = OFF, Write protection off
  9884  2008                     	org	8200
  9885  2008  3FFF               	dw	16383
  9886                           
  9887                           	psect	text1_split_1
  9888  001E                     u7360:
  9889  001E                     l4241:
  9890  001E  1683               	bsf	3,5	;RP0=1, select bank1
  9891  001F  1303               	bcf	3,6	;RP1=0, select bank1
  9892  0020  0848               	movf	(sprintf@fval+3)^(0+128),w
  9893  0021  1283               	bcf	3,5	;RP0=0, select bank0
  9894  0022  1303               	bcf	3,6	;RP1=0, select bank0
  9895  0023  00A3               	movwf	___fleq@ff1+3
  9896  0024  1683               	bsf	3,5	;RP0=1, select bank1
  9897  0025  1303               	bcf	3,6	;RP1=0, select bank1
  9898  0026  0847               	movf	(sprintf@fval+2)^(0+128),w
  9899  0027  1283               	bcf	3,5	;RP0=0, select bank0
  9900  0028  1303               	bcf	3,6	;RP1=0, select bank0
  9901  0029  00A2               	movwf	___fleq@ff1+2
  9902  002A  1683               	bsf	3,5	;RP0=1, select bank1
  9903  002B  1303               	bcf	3,6	;RP1=0, select bank1
  9904  002C  0846               	movf	(sprintf@fval+1)^(0+128),w
  9905  002D  1283               	bcf	3,5	;RP0=0, select bank0
  9906  002E  1303               	bcf	3,6	;RP1=0, select bank0
  9907  002F  00A1               	movwf	___fleq@ff1+1
  9908  0030  1683               	bsf	3,5	;RP0=1, select bank1
  9909  0031  1303               	bcf	3,6	;RP1=0, select bank1
  9910  0032  0845               	movf	sprintf@fval^(0+128),w
  9911  0033  1283               	bcf	3,5	;RP0=0, select bank0
  9912  0034  1303               	bcf	3,6	;RP1=0, select bank0
  9913  0035  00A0               	movwf	___fleq@ff1
  9914  0036  3000               	movlw	0
  9915  0037  00A7               	movwf	___fleq@ff2+3
  9916  0038  3000               	movlw	0
  9917  0039  00A6               	movwf	___fleq@ff2+2
  9918  003A  3000               	movlw	0
  9919  003B  00A5               	movwf	___fleq@ff2+1
  9920  003C  3000               	movlw	0
  9921  003D  00A4               	movwf	___fleq@ff2
  9922  003E  160A  158A  250F  120A  118A  	fcall	___fleq
  9923  0043  1803               	btfsc	3,0
  9924  0044  2846               	goto	u7371
  9925  0045  2847               	goto	u7370
  9926  0046                     u7371:
  9927  0046  2929               	goto	l4261
  9928  0047                     u7370:
  9929  0047                     l4243:
  9930  0047  1683               	bsf	3,5	;RP0=1, select bank1
  9931  0048  1303               	bcf	3,6	;RP1=0, select bank1
  9932  0049  0848               	movf	(sprintf@fval+3)^(0+128),w
  9933  004A  1283               	bcf	3,5	;RP0=0, select bank0
  9934  004B  1303               	bcf	3,6	;RP1=0, select bank0
  9935  004C  00DE               	movwf	___fltol@f1+3
  9936  004D  1683               	bsf	3,5	;RP0=1, select bank1
  9937  004E  1303               	bcf	3,6	;RP1=0, select bank1
  9938  004F  0847               	movf	(sprintf@fval+2)^(0+128),w
  9939  0050  1283               	bcf	3,5	;RP0=0, select bank0
  9940  0051  1303               	bcf	3,6	;RP1=0, select bank0
  9941  0052  00DD               	movwf	___fltol@f1+2
  9942  0053  1683               	bsf	3,5	;RP0=1, select bank1
  9943  0054  1303               	bcf	3,6	;RP1=0, select bank1
  9944  0055  0846               	movf	(sprintf@fval+1)^(0+128),w
  9945  0056  1283               	bcf	3,5	;RP0=0, select bank0
  9946  0057  1303               	bcf	3,6	;RP1=0, select bank0
  9947  0058  00DC               	movwf	___fltol@f1+1
  9948  0059  1683               	bsf	3,5	;RP0=1, select bank1
  9949  005A  1303               	bcf	3,6	;RP1=0, select bank1
  9950  005B  0845               	movf	sprintf@fval^(0+128),w
  9951  005C  1283               	bcf	3,5	;RP0=0, select bank0
  9952  005D  1303               	bcf	3,6	;RP1=0, select bank0
  9953  005E  00DB               	movwf	___fltol@f1
  9954  005F  160A  158A  26C8  120A  118A  	fcall	___fltol
  9955  0064  1283               	bcf	3,5	;RP0=0, select bank0
  9956  0065  1303               	bcf	3,6	;RP1=0, select bank0
  9957  0066  085E               	movf	?___fltol+3,w
  9958  0067  045D               	iorwf	?___fltol+2,w
  9959  0068  045C               	iorwf	?___fltol+1,w
  9960  0069  045B               	iorwf	?___fltol,w
  9961  006A  1D03               	skipz
  9962  006B  286D               	goto	u7381
  9963  006C  286E               	goto	u7380
  9964  006D                     u7381:
  9965  006D  2929               	goto	l4261
  9966  006E                     u7380:
  9967  006E                     l4245:
  9968  006E  1683               	bsf	3,5	;RP0=1, select bank1
  9969  006F  1303               	bcf	3,6	;RP1=0, select bank1
  9970  0070  0844               	movf	(sprintf@eexp+1)^(0+128),w
  9971  0071  3A80               	xorlw	128
  9972  0072  00FF               	movwf	btemp+1
  9973  0073  3080               	movlw	128
  9974  0074  027F               	subwf	btemp+1,w
  9975  0075  1D03               	skipz
  9976  0076  2879               	goto	u7395
  9977  0077  3002               	movlw	2
  9978  0078  0243               	subwf	sprintf@eexp^(0+128),w
  9979  0079                     u7395:
  9980  0079  1C03               	skipc
  9981  007A  287C               	goto	u7391
  9982  007B  287D               	goto	u7390
  9983  007C                     u7391:
  9984  007C  2929               	goto	l4261
  9985  007D                     u7390:
  9986  007D                     l4247:
  9987                           
  9988                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9989  007D  1683               	bsf	3,5	;RP0=1, select bank1
  9990  007E  1303               	bcf	3,6	;RP1=0, select bank1
  9991  007F  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  9992  0080  1283               	bcf	3,5	;RP0=0, select bank0
  9993  0081  1303               	bcf	3,6	;RP1=0, select bank0
  9994  0082  00A3               	movwf	___flge@ff1+3
  9995  0083  1683               	bsf	3,5	;RP0=1, select bank1
  9996  0084  1303               	bcf	3,6	;RP1=0, select bank1
  9997  0085  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  9998  0086  1283               	bcf	3,5	;RP0=0, select bank0
  9999  0087  1303               	bcf	3,6	;RP1=0, select bank0
 10000  0088  00A2               	movwf	___flge@ff1+2
 10001  0089  1683               	bsf	3,5	;RP0=1, select bank1
 10002  008A  1303               	bcf	3,6	;RP1=0, select bank1
 10003  008B  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 10004  008C  1283               	bcf	3,5	;RP0=0, select bank0
 10005  008D  1303               	bcf	3,6	;RP1=0, select bank0
 10006  008E  00A1               	movwf	___flge@ff1+1
 10007  008F  1683               	bsf	3,5	;RP0=1, select bank1
 10008  0090  1303               	bcf	3,6	;RP1=0, select bank1
 10009  0091  083F               	movf	sprintf@tmpval^(0+128),w
 10010  0092  1283               	bcf	3,5	;RP0=0, select bank0
 10011  0093  1303               	bcf	3,6	;RP1=0, select bank0
 10012  0094  00A0               	movwf	___flge@ff1
 10013  0095  3040               	movlw	64
 10014  0096  00A7               	movwf	___flge@ff2+3
 10015  0097  3089               	movlw	137
 10016  0098  00A6               	movwf	___flge@ff2+2
 10017  0099  3070               	movlw	112
 10018  009A  00A5               	movwf	___flge@ff2+1
 10019  009B  305F               	movlw	95
 10020  009C  00A4               	movwf	___flge@ff2
 10021  009D  160A  118A  200D  120A  118A  	fcall	___flge
 10022  00A2  1803               	btfsc	3,0
 10023  00A3  28A5               	goto	u7401
 10024  00A4  28A6               	goto	u7400
 10025  00A5                     u7401:
 10026  00A5  28AF               	goto	l4251
 10027  00A6                     u7400:
 10028  00A6                     l4249:
 10029                           
 10030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10031  00A6  30F7               	movlw	247
 10032  00A7  1683               	bsf	3,5	;RP0=1, select bank1
 10033  00A8  1303               	bcf	3,6	;RP1=0, select bank1
 10034  00A9  07C3               	addwf	sprintf@eexp^(0+128),f
 10035  00AA  1803               	skipnc
 10036  00AB  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10037  00AC  30FF               	movlw	255
 10038  00AD  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10039                           
 10040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10041  00AE  28B7               	goto	l4253
 10042  00AF                     l4251:
 10043                           
 10044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10045  00AF  30F8               	movlw	248
 10046  00B0  1683               	bsf	3,5	;RP0=1, select bank1
 10047  00B1  1303               	bcf	3,6	;RP1=0, select bank1
 10048  00B2  07C3               	addwf	sprintf@eexp^(0+128),f
 10049  00B3  1803               	skipnc
 10050  00B4  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10051  00B5  30FF               	movlw	255
 10052  00B6  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10053  00B7                     l4253:
 10054                           
 10055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10056  00B7  0843               	movf	sprintf@eexp^(0+128),w
 10057  00B8  120A  158A  249D  120A  118A  	fcall	_scale
 10058  00BD  1283               	bcf	3,5	;RP0=0, select bank0
 10059  00BE  1303               	bcf	3,6	;RP1=0, select bank0
 10060  00BF  084B               	movf	?_scale+3,w
 10061  00C0  1683               	bsf	3,5	;RP0=1, select bank1
 10062  00C1  1303               	bcf	3,6	;RP1=0, select bank1
 10063  00C2  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10064  00C3  1283               	bcf	3,5	;RP0=0, select bank0
 10065  00C4  1303               	bcf	3,6	;RP1=0, select bank0
 10066  00C5  084A               	movf	?_scale+2,w
 10067  00C6  1683               	bsf	3,5	;RP0=1, select bank1
 10068  00C7  1303               	bcf	3,6	;RP1=0, select bank1
 10069  00C8  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10070  00C9  1283               	bcf	3,5	;RP0=0, select bank0
 10071  00CA  1303               	bcf	3,6	;RP1=0, select bank0
 10072  00CB  0849               	movf	?_scale+1,w
 10073  00CC  1683               	bsf	3,5	;RP0=1, select bank1
 10074  00CD  1303               	bcf	3,6	;RP1=0, select bank1
 10075  00CE  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10076  00CF  1283               	bcf	3,5	;RP0=0, select bank0
 10077  00D0  1303               	bcf	3,6	;RP1=0, select bank0
 10078  00D1  0848               	movf	?_scale,w
 10079  00D2  1683               	bsf	3,5	;RP0=1, select bank1
 10080  00D3  1303               	bcf	3,6	;RP1=0, select bank1
 10081  00D4  00BF               	movwf	sprintf@tmpval^(0+128)
 10082  00D5                     l4255:
 10083  00D5  0848               	movf	(sprintf@fval+3)^(0+128),w
 10084  00D6  1283               	bcf	3,5	;RP0=0, select bank0
 10085  00D7  1303               	bcf	3,6	;RP1=0, select bank0
 10086  00D8  00A3               	movwf	__div_to_l_@f1+3
 10087  00D9  1683               	bsf	3,5	;RP0=1, select bank1
 10088  00DA  1303               	bcf	3,6	;RP1=0, select bank1
 10089  00DB  0847               	movf	(sprintf@fval+2)^(0+128),w
 10090  00DC  1283               	bcf	3,5	;RP0=0, select bank0
 10091  00DD  1303               	bcf	3,6	;RP1=0, select bank0
 10092  00DE  00A2               	movwf	__div_to_l_@f1+2
 10093  00DF  1683               	bsf	3,5	;RP0=1, select bank1
 10094  00E0  1303               	bcf	3,6	;RP1=0, select bank1
 10095  00E1  0846               	movf	(sprintf@fval+1)^(0+128),w
 10096  00E2  1283               	bcf	3,5	;RP0=0, select bank0
 10097  00E3  1303               	bcf	3,6	;RP1=0, select bank0
 10098  00E4  00A1               	movwf	__div_to_l_@f1+1
 10099  00E5  1683               	bsf	3,5	;RP0=1, select bank1
 10100  00E6  1303               	bcf	3,6	;RP1=0, select bank1
 10101  00E7  0845               	movf	sprintf@fval^(0+128),w
 10102  00E8  1283               	bcf	3,5	;RP0=0, select bank0
 10103  00E9  1303               	bcf	3,6	;RP1=0, select bank0
 10104  00EA  00A0               	movwf	__div_to_l_@f1
 10105  00EB  1683               	bsf	3,5	;RP0=1, select bank1
 10106  00EC  1303               	bcf	3,6	;RP1=0, select bank1
 10107  00ED  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 10108  00EE  1283               	bcf	3,5	;RP0=0, select bank0
 10109  00EF  1303               	bcf	3,6	;RP1=0, select bank0
 10110  00F0  00A7               	movwf	__div_to_l_@f2+3
 10111  00F1  1683               	bsf	3,5	;RP0=1, select bank1
 10112  00F2  1303               	bcf	3,6	;RP1=0, select bank1
 10113  00F3  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 10114  00F4  1283               	bcf	3,5	;RP0=0, select bank0
 10115  00F5  1303               	bcf	3,6	;RP1=0, select bank0
 10116  00F6  00A6               	movwf	__div_to_l_@f2+2
 10117  00F7  1683               	bsf	3,5	;RP0=1, select bank1
 10118  00F8  1303               	bcf	3,6	;RP1=0, select bank1
 10119  00F9  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 10120  00FA  1283               	bcf	3,5	;RP0=0, select bank0
 10121  00FB  1303               	bcf	3,6	;RP1=0, select bank0
 10122  00FC  00A5               	movwf	__div_to_l_@f2+1
 10123  00FD  1683               	bsf	3,5	;RP0=1, select bank1
 10124  00FE  1303               	bcf	3,6	;RP1=0, select bank1
 10125  00FF  083F               	movf	sprintf@tmpval^(0+128),w
 10126  0100  1283               	bcf	3,5	;RP0=0, select bank0
 10127  0101  1303               	bcf	3,6	;RP1=0, select bank0
 10128  0102  00A4               	movwf	__div_to_l_@f2
 10129  0103  160A  118A  216E  120A  118A  	fcall	__div_to_l_
 10130  0108  1283               	bcf	3,5	;RP0=0, select bank0
 10131  0109  1303               	bcf	3,6	;RP1=0, select bank0
 10132  010A  0823               	movf	?__div_to_l_+3,w
 10133  010B  1683               	bsf	3,5	;RP0=1, select bank1
 10134  010C  1303               	bcf	3,6	;RP1=0, select bank1
 10135  010D  00BA               	movwf	(sprintf@val+3)^(0+128)
 10136  010E  1283               	bcf	3,5	;RP0=0, select bank0
 10137  010F  1303               	bcf	3,6	;RP1=0, select bank0
 10138  0110  0822               	movf	?__div_to_l_+2,w
 10139  0111  1683               	bsf	3,5	;RP0=1, select bank1
 10140  0112  1303               	bcf	3,6	;RP1=0, select bank1
 10141  0113  00B9               	movwf	(sprintf@val+2)^(0+128)
 10142  0114  1283               	bcf	3,5	;RP0=0, select bank0
 10143  0115  1303               	bcf	3,6	;RP1=0, select bank0
 10144  0116  0821               	movf	?__div_to_l_+1,w
 10145  0117  1683               	bsf	3,5	;RP0=1, select bank1
 10146  0118  1303               	bcf	3,6	;RP1=0, select bank1
 10147  0119  00B8               	movwf	(sprintf@val+1)^(0+128)
 10148  011A  1283               	bcf	3,5	;RP0=0, select bank0
 10149  011B  1303               	bcf	3,6	;RP1=0, select bank0
 10150  011C  0820               	movf	?__div_to_l_,w
 10151  011D  1683               	bsf	3,5	;RP0=1, select bank1
 10152  011E  1303               	bcf	3,6	;RP1=0, select bank1
 10153  011F  00B7               	movwf	sprintf@val^(0+128)
 10154  0120                     l4259:
 10155                           
 10156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10157  0120  3000               	movlw	0
 10158  0121  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10159  0122  3000               	movlw	0
 10160  0123  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10161  0124  3000               	movlw	0
 10162  0125  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10163  0126  3000               	movlw	0
 10164  0127  00C5               	movwf	sprintf@fval^(0+128)
 10165                           
 10166                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10167  0128  29AB               	goto	l4267
 10168  0129                     l4261:
 10169                           
 10170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10171  0129  1683               	bsf	3,5	;RP0=1, select bank1
 10172  012A  1303               	bcf	3,6	;RP1=0, select bank1
 10173  012B  0848               	movf	(sprintf@fval+3)^(0+128),w
 10174  012C  1283               	bcf	3,5	;RP0=0, select bank0
 10175  012D  1303               	bcf	3,6	;RP1=0, select bank0
 10176  012E  00DE               	movwf	___fltol@f1+3
 10177  012F  1683               	bsf	3,5	;RP0=1, select bank1
 10178  0130  1303               	bcf	3,6	;RP1=0, select bank1
 10179  0131  0847               	movf	(sprintf@fval+2)^(0+128),w
 10180  0132  1283               	bcf	3,5	;RP0=0, select bank0
 10181  0133  1303               	bcf	3,6	;RP1=0, select bank0
 10182  0134  00DD               	movwf	___fltol@f1+2
 10183  0135  1683               	bsf	3,5	;RP0=1, select bank1
 10184  0136  1303               	bcf	3,6	;RP1=0, select bank1
 10185  0137  0846               	movf	(sprintf@fval+1)^(0+128),w
 10186  0138  1283               	bcf	3,5	;RP0=0, select bank0
 10187  0139  1303               	bcf	3,6	;RP1=0, select bank0
 10188  013A  00DC               	movwf	___fltol@f1+1
 10189  013B  1683               	bsf	3,5	;RP0=1, select bank1
 10190  013C  1303               	bcf	3,6	;RP1=0, select bank1
 10191  013D  0845               	movf	sprintf@fval^(0+128),w
 10192  013E  1283               	bcf	3,5	;RP0=0, select bank0
 10193  013F  1303               	bcf	3,6	;RP1=0, select bank0
 10194  0140  00DB               	movwf	___fltol@f1
 10195  0141  160A  158A  26C8  120A  118A  	fcall	___fltol
 10196  0146  1283               	bcf	3,5	;RP0=0, select bank0
 10197  0147  1303               	bcf	3,6	;RP1=0, select bank0
 10198  0148  085E               	movf	?___fltol+3,w
 10199  0149  1683               	bsf	3,5	;RP0=1, select bank1
 10200  014A  1303               	bcf	3,6	;RP1=0, select bank1
 10201  014B  00BA               	movwf	(sprintf@val+3)^(0+128)
 10202  014C  1283               	bcf	3,5	;RP0=0, select bank0
 10203  014D  1303               	bcf	3,6	;RP1=0, select bank0
 10204  014E  085D               	movf	?___fltol+2,w
 10205  014F  1683               	bsf	3,5	;RP0=1, select bank1
 10206  0150  1303               	bcf	3,6	;RP1=0, select bank1
 10207  0151  00B9               	movwf	(sprintf@val+2)^(0+128)
 10208  0152  1283               	bcf	3,5	;RP0=0, select bank0
 10209  0153  1303               	bcf	3,6	;RP1=0, select bank0
 10210  0154  085C               	movf	?___fltol+1,w
 10211  0155  1683               	bsf	3,5	;RP0=1, select bank1
 10212  0156  1303               	bcf	3,6	;RP1=0, select bank1
 10213  0157  00B8               	movwf	(sprintf@val+1)^(0+128)
 10214  0158  1283               	bcf	3,5	;RP0=0, select bank0
 10215  0159  1303               	bcf	3,6	;RP1=0, select bank0
 10216  015A  085B               	movf	?___fltol,w
 10217  015B  1683               	bsf	3,5	;RP0=1, select bank1
 10218  015C  1303               	bcf	3,6	;RP1=0, select bank1
 10219  015D  00B7               	movwf	sprintf@val^(0+128)
 10220  015E                     l4263:
 10221                           
 10222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10223  015E  083A               	movf	(sprintf@val+3)^(0+128),w
 10224  015F  1283               	bcf	3,5	;RP0=0, select bank0
 10225  0160  1303               	bcf	3,6	;RP1=0, select bank0
 10226  0161  00A3               	movwf	___xxtofl@val+3
 10227  0162  1683               	bsf	3,5	;RP0=1, select bank1
 10228  0163  1303               	bcf	3,6	;RP1=0, select bank1
 10229  0164  0839               	movf	(sprintf@val+2)^(0+128),w
 10230  0165  1283               	bcf	3,5	;RP0=0, select bank0
 10231  0166  1303               	bcf	3,6	;RP1=0, select bank0
 10232  0167  00A2               	movwf	___xxtofl@val+2
 10233  0168  1683               	bsf	3,5	;RP0=1, select bank1
 10234  0169  1303               	bcf	3,6	;RP1=0, select bank1
 10235  016A  0838               	movf	(sprintf@val+1)^(0+128),w
 10236  016B  1283               	bcf	3,5	;RP0=0, select bank0
 10237  016C  1303               	bcf	3,6	;RP1=0, select bank0
 10238  016D  00A1               	movwf	___xxtofl@val+1
 10239  016E  1683               	bsf	3,5	;RP0=1, select bank1
 10240  016F  1303               	bcf	3,6	;RP1=0, select bank1
 10241  0170  0837               	movf	sprintf@val^(0+128),w
 10242  0171  1283               	bcf	3,5	;RP0=0, select bank0
 10243  0172  1303               	bcf	3,6	;RP1=0, select bank0
 10244  0173  00A0               	movwf	___xxtofl@val
 10245  0174  3000               	movlw	0
 10246  0175  160A  158A  2744  120A  118A  	fcall	___xxtofl
 10247  017A  1283               	bcf	3,5	;RP0=0, select bank0
 10248  017B  1303               	bcf	3,6	;RP1=0, select bank0
 10249  017C  0823               	movf	?___xxtofl+3,w
 10250  017D  1683               	bsf	3,5	;RP0=1, select bank1
 10251  017E  1303               	bcf	3,6	;RP1=0, select bank1
 10252  017F  00A3               	movwf	(___flsub@a+3)^(0+128)
 10253  0180  1283               	bcf	3,5	;RP0=0, select bank0
 10254  0181  1303               	bcf	3,6	;RP1=0, select bank0
 10255  0182  0822               	movf	?___xxtofl+2,w
 10256  0183  1683               	bsf	3,5	;RP0=1, select bank1
 10257  0184  1303               	bcf	3,6	;RP1=0, select bank1
 10258  0185  00A2               	movwf	(___flsub@a+2)^(0+128)
 10259  0186  1283               	bcf	3,5	;RP0=0, select bank0
 10260  0187  1303               	bcf	3,6	;RP1=0, select bank0
 10261  0188  0821               	movf	?___xxtofl+1,w
 10262  0189  1683               	bsf	3,5	;RP0=1, select bank1
 10263  018A  1303               	bcf	3,6	;RP1=0, select bank1
 10264  018B  00A1               	movwf	(___flsub@a+1)^(0+128)
 10265  018C  1283               	bcf	3,5	;RP0=0, select bank0
 10266  018D  1303               	bcf	3,6	;RP1=0, select bank0
 10267  018E  0820               	movf	?___xxtofl,w
 10268  018F  1683               	bsf	3,5	;RP0=1, select bank1
 10269  0190  1303               	bcf	3,6	;RP1=0, select bank1
 10270  0191  00A0               	movwf	___flsub@a^(0+128)
 10271  0192  0848               	movf	(sprintf@fval+3)^(0+128),w
 10272  0193  00A7               	movwf	(___flsub@b+3)^(0+128)
 10273  0194  0847               	movf	(sprintf@fval+2)^(0+128),w
 10274  0195  00A6               	movwf	(___flsub@b+2)^(0+128)
 10275  0196  0846               	movf	(sprintf@fval+1)^(0+128),w
 10276  0197  00A5               	movwf	(___flsub@b+1)^(0+128)
 10277  0198  0845               	movf	sprintf@fval^(0+128),w
 10278  0199  00A4               	movwf	___flsub@b^(0+128)
 10279  019A  160A  158A  255F  120A  118A  	fcall	___flsub
 10280  019F  1683               	bsf	3,5	;RP0=1, select bank1
 10281  01A0  1303               	bcf	3,6	;RP1=0, select bank1
 10282  01A1  0823               	movf	(?___flsub+3)^(0+128),w
 10283  01A2  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10284  01A3  0822               	movf	(?___flsub+2)^(0+128),w
 10285  01A4  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10286  01A5  0821               	movf	(?___flsub+1)^(0+128),w
 10287  01A6  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10288  01A7  0820               	movf	?___flsub^(0+128),w
 10289  01A8  00C5               	movwf	sprintf@fval^(0+128)
 10290  01A9                     l4265:
 10291                           
 10292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10293  01A9  01C3               	clrf	sprintf@eexp^(0+128)
 10294  01AA  01C4               	clrf	(sprintf@eexp+1)^(0+128)
 10295  01AB                     l4267:
 10296                           
 10297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10298  01AB  01CC               	clrf	sprintf@c^(0+128)
 10299  01AC  0ACC               	incf	sprintf@c^(0+128),f
 10300  01AD                     l4273:
 10301                           
 10302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10303  01AD  084C               	movf	sprintf@c^(0+128),w
 10304  01AE  00AD               	movwf	??_sprintf^(0+128)
 10305  01AF  3001               	movlw	1
 10306  01B0                     u7415:
 10307  01B0  1003               	clrc
 10308  01B1  0DAD               	rlf	??_sprintf^(0+128),f
 10309  01B2  3EFF               	addlw	-1
 10310  01B3  1D03               	skipz
 10311  01B4  29B0               	goto	u7415
 10312  01B5  1003               	clrc
 10313  01B6  0D2D               	rlf	??_sprintf^(0+128),w
 10314  01B7  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10315  01B8  0084               	movwf	4
 10316  01B9  160A  158A  200A  120A  118A  	fcall	stringdir
 10317  01BE  00AE               	movwf	(??_sprintf+1)^(0+128)
 10318  01BF  160A  158A  200A  120A  118A  	fcall	stringdir
 10319  01C4  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
 10320  01C5  160A  158A  200A  120A  118A  	fcall	stringdir
 10321  01CA  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
 10322  01CB  160A  158A  200A  120A  118A  	fcall	stringdir
 10323  01D0  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
 10324  01D1  0831               	movf	(??_sprintf+4)^(0+128),w
 10325  01D2  023A               	subwf	(sprintf@val+3)^(0+128),w
 10326  01D3  1D03               	skipz
 10327  01D4  29DF               	goto	u7425
 10328  01D5  0830               	movf	(??_sprintf+3)^(0+128),w
 10329  01D6  0239               	subwf	(sprintf@val+2)^(0+128),w
 10330  01D7  1D03               	skipz
 10331  01D8  29DF               	goto	u7425
 10332  01D9  082F               	movf	(??_sprintf+2)^(0+128),w
 10333  01DA  0238               	subwf	(sprintf@val+1)^(0+128),w
 10334  01DB  1D03               	skipz
 10335  01DC  29DF               	goto	u7425
 10336  01DD  082E               	movf	(??_sprintf+1)^(0+128),w
 10337  01DE  0237               	subwf	sprintf@val^(0+128),w
 10338  01DF                     u7425:
 10339  01DF  1803               	skipnc
 10340  01E0  29E2               	goto	u7421
 10341  01E1  29E3               	goto	u7420
 10342  01E2                     u7421:
 10343  01E2  29E4               	goto	l4277
 10344  01E3                     u7420:
 10345  01E3  29EE               	goto	l4279
 10346  01E4                     l4277:
 10347  01E4  3001               	movlw	1
 10348  01E5  00AD               	movwf	??_sprintf^(0+128)
 10349  01E6  082D               	movf	??_sprintf^(0+128),w
 10350  01E7  07CC               	addwf	sprintf@c^(0+128),f
 10351  01E8  300A               	movlw	10
 10352  01E9  064C               	xorwf	sprintf@c^(0+128),w
 10353  01EA  1D03               	btfss	3,2
 10354  01EB  29ED               	goto	u7431
 10355  01EC  29EE               	goto	u7430
 10356  01ED                     u7431:
 10357  01ED  29AD               	goto	l4273
 10358  01EE                     u7430:
 10359  01EE                     l4279:
 10360                           
 10361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10362  01EE  084C               	movf	sprintf@c^(0+128),w
 10363  01EF  074A               	addwf	sprintf@prec^(0+128),w
 10364  01F0  00AD               	movwf	??_sprintf^(0+128)
 10365  01F1  084B               	movf	(sprintf@prec+1)^(0+128),w
 10366  01F2  1803               	skipnc
 10367  01F3  0A4B               	incf	(sprintf@prec+1)^(0+128),w
 10368  01F4  00AE               	movwf	(??_sprintf^(0+128)+1)
 10369  01F5  0843               	movf	sprintf@eexp^(0+128),w
 10370  01F6  072D               	addwf	??_sprintf^(0+128),w
 10371  01F7  00AF               	movwf	(??_sprintf+2)^(0+128)
 10372  01F8  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10373  01F9  1803               	skipnc
 10374  01FA  0A44               	incf	(sprintf@eexp+1)^(0+128),w
 10375  01FB  072E               	addwf	(??_sprintf+1)^(0+128),w
 10376  01FC  00B0               	movwf	(??_sprintf+3)^(0+128)
 10377  01FD  082F               	movf	(??_sprintf+2)^(0+128),w
 10378  01FE  02BD               	subwf	sprintf@width^(0+128),f
 10379  01FF  0830               	movf	(??_sprintf+3)^(0+128),w
 10380  0200  1C03               	skipc
 10381  0201  03BE               	decf	(sprintf@width+1)^(0+128),f
 10382  0202  02BE               	subwf	(sprintf@width+1)^(0+128),f
 10383                           
 10384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10385  0203  084A               	movf	sprintf@prec^(0+128),w
 10386  0204  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 10387  0205  1903               	btfsc	3,2
 10388  0206  2A08               	goto	u7441
 10389  0207  2A09               	goto	u7440
 10390  0208                     u7441:
 10391  0208  2A0F               	goto	l4283
 10392  0209                     u7440:
 10393  0209                     l4281:
 10394                           
 10395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10396  0209  30FF               	movlw	255
 10397  020A  07BD               	addwf	sprintf@width^(0+128),f
 10398  020B  1803               	skipnc
 10399  020C  0ABE               	incf	(sprintf@width+1)^(0+128),f
 10400  020D  30FF               	movlw	255
 10401  020E  07BE               	addwf	(sprintf@width+1)^(0+128),f
 10402  020F                     l4283:
 10403                           
 10404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10405  020F  3003               	movlw	3
 10406  0210  053B               	andwf	sprintf@flag^(0+128),w
 10407  0211  00AD               	movwf	??_sprintf^(0+128)
 10408  0212  3000               	movlw	0
 10409  0213  053C               	andwf	(sprintf@flag+1)^(0+128),w
 10410  0214  00AE               	movwf	(??_sprintf+1)^(0+128)
 10411  0215  082D               	movf	??_sprintf^(0+128),w
 10412  0216  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10413  0217  1903               	btfsc	3,2
 10414  0218  2A1A               	goto	u7451
 10415  0219  2A1B               	goto	u7450
 10416  021A                     u7451:
 10417  021A  2A30               	goto	l4293
 10418  021B                     u7450:
 10419  021B                     l4285:
 10420                           
 10421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10422  021B  30FF               	movlw	255
 10423  021C  07BD               	addwf	sprintf@width^(0+128),f
 10424  021D  1803               	skipnc
 10425  021E  0ABE               	incf	(sprintf@width+1)^(0+128),f
 10426  021F  30FF               	movlw	255
 10427  0220  07BE               	addwf	(sprintf@width+1)^(0+128),f
 10428  0221  2A30               	goto	l4293
 10429  0222                     l4287:
 10430                           
 10431                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10432  0222  3020               	movlw	32
 10433  0223  1683               	bsf	3,5	;RP0=1, select bank1
 10434  0224  1303               	bcf	3,6	;RP1=0, select bank1
 10435  0225  00AD               	movwf	??_sprintf^(0+128)
 10436  0226  0849               	movf	sprintf@sp^(0+128),w
 10437  0227  0084               	movwf	4
 10438  0228  082D               	movf	??_sprintf^(0+128),w
 10439  0229  1383               	bcf	3,7	;select IRP bank0
 10440  022A  0080               	movwf	0
 10441  022B                     l4289:
 10442  022B  3001               	movlw	1
 10443  022C  00AD               	movwf	??_sprintf^(0+128)
 10444  022D  082D               	movf	??_sprintf^(0+128),w
 10445  022E  07C9               	addwf	sprintf@sp^(0+128),f
 10446  022F  2A1B               	goto	l4285
 10447  0230                     l4293:
 10448                           
 10449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10450  0230  083E               	movf	(sprintf@width+1)^(0+128),w
 10451  0231  3A80               	xorlw	128
 10452  0232  00FF               	movwf	btemp+1
 10453  0233  3080               	movlw	128
 10454  0234  027F               	subwf	btemp+1,w
 10455  0235  1D03               	skipz
 10456  0236  2A39               	goto	u7465
 10457  0237  3001               	movlw	1
 10458  0238  023D               	subwf	sprintf@width^(0+128),w
 10459  0239                     u7465:
 10460  0239  1803               	skipnc
 10461  023A  2A3C               	goto	u7461
 10462  023B  2A3D               	goto	u7460
 10463  023C                     u7461:
 10464  023C  2A22               	goto	l4287
 10465  023D                     u7460:
 10466  023D                     l4295:
 10467                           
 10468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10469  023D  3003               	movlw	3
 10470  023E  1683               	bsf	3,5	;RP0=1, select bank1
 10471  023F  1303               	bcf	3,6	;RP1=0, select bank1
 10472  0240  053B               	andwf	sprintf@flag^(0+128),w
 10473  0241  00AD               	movwf	??_sprintf^(0+128)
 10474  0242  3000               	movlw	0
 10475  0243  053C               	andwf	(sprintf@flag+1)^(0+128),w
 10476  0244  00AE               	movwf	(??_sprintf+1)^(0+128)
 10477  0245  082D               	movf	??_sprintf^(0+128),w
 10478  0246  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10479  0247  1903               	btfsc	3,2
 10480  0248  2A4A               	goto	u7471
 10481  0249  2A4B               	goto	u7470
 10482  024A                     u7471:
 10483  024A  2AFD               	goto	l364
 10484  024B                     u7470:
 10485  024B                     l4297:
 10486                           
 10487                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10488  024B  302D               	movlw	45
 10489  024C  00AD               	movwf	??_sprintf^(0+128)
 10490  024D  0849               	movf	sprintf@sp^(0+128),w
 10491  024E  0084               	movwf	4
 10492  024F  082D               	movf	??_sprintf^(0+128),w
 10493  0250  1383               	bcf	3,7	;select IRP bank0
 10494  0251  0080               	movwf	0
 10495  0252                     l4299:
 10496  0252  3001               	movlw	1
 10497  0253  00AD               	movwf	??_sprintf^(0+128)
 10498  0254  082D               	movf	??_sprintf^(0+128),w
 10499  0255  07C9               	addwf	sprintf@sp^(0+128),f
 10500  0256  2AFD               	goto	l364
 10501  0257                     l4301:
 10502                           
 10503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10504  0257  084C               	movf	sprintf@c^(0+128),w
 10505  0258  00AD               	movwf	??_sprintf^(0+128)
 10506  0259  3001               	movlw	1
 10507  025A                     u7485:
 10508  025A  1003               	clrc
 10509  025B  0DAD               	rlf	??_sprintf^(0+128),f
 10510  025C  3EFF               	addlw	-1
 10511  025D  1D03               	skipz
 10512  025E  2A5A               	goto	u7485
 10513  025F  1003               	clrc
 10514  0260  0D2D               	rlf	??_sprintf^(0+128),w
 10515  0261  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10516  0262  0084               	movwf	4
 10517  0263  160A  158A  200A  120A  118A  	fcall	stringdir
 10518  0268  1283               	bcf	3,5	;RP0=0, select bank0
 10519  0269  1303               	bcf	3,6	;RP1=0, select bank0
 10520  026A  00A0               	movwf	___lldiv@divisor
 10521  026B  160A  158A  200A  120A  118A  	fcall	stringdir
 10522  0270  00A1               	movwf	___lldiv@divisor+1
 10523  0271  160A  158A  200A  120A  118A  	fcall	stringdir
 10524  0276  00A2               	movwf	___lldiv@divisor+2
 10525  0277  160A  158A  200A  120A  118A  	fcall	stringdir
 10526  027C  00A3               	movwf	___lldiv@divisor+3
 10527  027D  1683               	bsf	3,5	;RP0=1, select bank1
 10528  027E  1303               	bcf	3,6	;RP1=0, select bank1
 10529  027F  083A               	movf	(sprintf@val+3)^(0+128),w
 10530  0280  1283               	bcf	3,5	;RP0=0, select bank0
 10531  0281  1303               	bcf	3,6	;RP1=0, select bank0
 10532  0282  00A7               	movwf	___lldiv@dividend+3
 10533  0283  1683               	bsf	3,5	;RP0=1, select bank1
 10534  0284  1303               	bcf	3,6	;RP1=0, select bank1
 10535  0285  0839               	movf	(sprintf@val+2)^(0+128),w
 10536  0286  1283               	bcf	3,5	;RP0=0, select bank0
 10537  0287  1303               	bcf	3,6	;RP1=0, select bank0
 10538  0288  00A6               	movwf	___lldiv@dividend+2
 10539  0289  1683               	bsf	3,5	;RP0=1, select bank1
 10540  028A  1303               	bcf	3,6	;RP1=0, select bank1
 10541  028B  0838               	movf	(sprintf@val+1)^(0+128),w
 10542  028C  1283               	bcf	3,5	;RP0=0, select bank0
 10543  028D  1303               	bcf	3,6	;RP1=0, select bank0
 10544  028E  00A5               	movwf	___lldiv@dividend+1
 10545  028F  1683               	bsf	3,5	;RP0=1, select bank1
 10546  0290  1303               	bcf	3,6	;RP1=0, select bank1
 10547  0291  0837               	movf	sprintf@val^(0+128),w
 10548  0292  1283               	bcf	3,5	;RP0=0, select bank0
 10549  0293  1303               	bcf	3,6	;RP1=0, select bank0
 10550  0294  00A4               	movwf	___lldiv@dividend
 10551  0295  160A  158A  2660  120A  118A  	fcall	___lldiv
 10552  029A  1283               	bcf	3,5	;RP0=0, select bank0
 10553  029B  1303               	bcf	3,6	;RP1=0, select bank0
 10554  029C  0823               	movf	?___lldiv+3,w
 10555  029D  1683               	bsf	3,5	;RP0=1, select bank1
 10556  029E  1303               	bcf	3,6	;RP1=0, select bank1
 10557  029F  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10558  02A0  1283               	bcf	3,5	;RP0=0, select bank0
 10559  02A1  1303               	bcf	3,6	;RP1=0, select bank0
 10560  02A2  0822               	movf	?___lldiv+2,w
 10561  02A3  1683               	bsf	3,5	;RP0=1, select bank1
 10562  02A4  1303               	bcf	3,6	;RP1=0, select bank1
 10563  02A5  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10564  02A6  1283               	bcf	3,5	;RP0=0, select bank0
 10565  02A7  1303               	bcf	3,6	;RP1=0, select bank0
 10566  02A8  0821               	movf	?___lldiv+1,w
 10567  02A9  1683               	bsf	3,5	;RP0=1, select bank1
 10568  02AA  1303               	bcf	3,6	;RP1=0, select bank1
 10569  02AB  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10570  02AC  1283               	bcf	3,5	;RP0=0, select bank0
 10571  02AD  1303               	bcf	3,6	;RP1=0, select bank0
 10572  02AE  0820               	movf	?___lldiv,w
 10573  02AF  1683               	bsf	3,5	;RP0=1, select bank1
 10574  02B0  1303               	bcf	3,6	;RP1=0, select bank1
 10575  02B1  00BF               	movwf	sprintf@tmpval^(0+128)
 10576  02B2                     l4303:
 10577                           
 10578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10579  02B2  3000               	movlw	0
 10580  02B3  1283               	bcf	3,5	;RP0=0, select bank0
 10581  02B4  1303               	bcf	3,6	;RP1=0, select bank0
 10582  02B5  00A3               	movwf	___llmod@divisor+3
 10583  02B6  3000               	movlw	0
 10584  02B7  00A2               	movwf	___llmod@divisor+2
 10585  02B8  3000               	movlw	0
 10586  02B9  00A1               	movwf	___llmod@divisor+1
 10587  02BA  300A               	movlw	10
 10588  02BB  00A0               	movwf	___llmod@divisor
 10589  02BC  1683               	bsf	3,5	;RP0=1, select bank1
 10590  02BD  1303               	bcf	3,6	;RP1=0, select bank1
 10591  02BE  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 10592  02BF  1283               	bcf	3,5	;RP0=0, select bank0
 10593  02C0  1303               	bcf	3,6	;RP1=0, select bank0
 10594  02C1  00A7               	movwf	___llmod@dividend+3
 10595  02C2  1683               	bsf	3,5	;RP0=1, select bank1
 10596  02C3  1303               	bcf	3,6	;RP1=0, select bank1
 10597  02C4  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 10598  02C5  1283               	bcf	3,5	;RP0=0, select bank0
 10599  02C6  1303               	bcf	3,6	;RP1=0, select bank0
 10600  02C7  00A6               	movwf	___llmod@dividend+2
 10601  02C8  1683               	bsf	3,5	;RP0=1, select bank1
 10602  02C9  1303               	bcf	3,6	;RP1=0, select bank1
 10603  02CA  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 10604  02CB  1283               	bcf	3,5	;RP0=0, select bank0
 10605  02CC  1303               	bcf	3,6	;RP1=0, select bank0
 10606  02CD  00A5               	movwf	___llmod@dividend+1
 10607  02CE  1683               	bsf	3,5	;RP0=1, select bank1
 10608  02CF  1303               	bcf	3,6	;RP1=0, select bank1
 10609  02D0  083F               	movf	sprintf@tmpval^(0+128),w
 10610  02D1  1283               	bcf	3,5	;RP0=0, select bank0
 10611  02D2  1303               	bcf	3,6	;RP1=0, select bank0
 10612  02D3  00A4               	movwf	___llmod@dividend
 10613  02D4  160A  158A  25AF  120A  118A  	fcall	___llmod
 10614  02D9  1283               	bcf	3,5	;RP0=0, select bank0
 10615  02DA  1303               	bcf	3,6	;RP1=0, select bank0
 10616  02DB  0823               	movf	?___llmod+3,w
 10617  02DC  1683               	bsf	3,5	;RP0=1, select bank1
 10618  02DD  1303               	bcf	3,6	;RP1=0, select bank1
 10619  02DE  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10620  02DF  1283               	bcf	3,5	;RP0=0, select bank0
 10621  02E0  1303               	bcf	3,6	;RP1=0, select bank0
 10622  02E1  0822               	movf	?___llmod+2,w
 10623  02E2  1683               	bsf	3,5	;RP0=1, select bank1
 10624  02E3  1303               	bcf	3,6	;RP1=0, select bank1
 10625  02E4  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10626  02E5  1283               	bcf	3,5	;RP0=0, select bank0
 10627  02E6  1303               	bcf	3,6	;RP1=0, select bank0
 10628  02E7  0821               	movf	?___llmod+1,w
 10629  02E8  1683               	bsf	3,5	;RP0=1, select bank1
 10630  02E9  1303               	bcf	3,6	;RP1=0, select bank1
 10631  02EA  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10632  02EB  1283               	bcf	3,5	;RP0=0, select bank0
 10633  02EC  1303               	bcf	3,6	;RP1=0, select bank0
 10634  02ED  0820               	movf	?___llmod,w
 10635  02EE  1683               	bsf	3,5	;RP0=1, select bank1
 10636  02EF  1303               	bcf	3,6	;RP1=0, select bank1
 10637  02F0  00BF               	movwf	sprintf@tmpval^(0+128)
 10638  02F1                     l4305:
 10639                           
 10640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10641  02F1  083F               	movf	sprintf@tmpval^(0+128),w
 10642  02F2  3E30               	addlw	48
 10643  02F3  00AD               	movwf	??_sprintf^(0+128)
 10644  02F4  0849               	movf	sprintf@sp^(0+128),w
 10645  02F5  0084               	movwf	4
 10646  02F6  082D               	movf	??_sprintf^(0+128),w
 10647  02F7  1383               	bcf	3,7	;select IRP bank0
 10648  02F8  0080               	movwf	0
 10649  02F9  3001               	movlw	1
 10650  02FA  00AD               	movwf	??_sprintf^(0+128)
 10651  02FB  082D               	movf	??_sprintf^(0+128),w
 10652  02FC  07C9               	addwf	sprintf@sp^(0+128),f
 10653  02FD                     l364:	
 10654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10655                           
 10656                           
 10657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10658  02FD  3001               	movlw	1
 10659  02FE  02CC               	subwf	sprintf@c^(0+128),f
 10660  02FF  0A4C               	incf	sprintf@c^(0+128),w
 10661  0300  1D03               	btfss	3,2
 10662  0301  2B03               	goto	u7491
 10663  0302  2B04               	goto	u7490
 10664  0303                     u7491:
 10665  0303  2A57               	goto	l4301
 10666  0304                     u7490:
 10667  0304  2B18               	goto	l4313
 10668  0305                     l4307:
 10669                           
 10670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10671  0305  3030               	movlw	48
 10672  0306  1683               	bsf	3,5	;RP0=1, select bank1
 10673  0307  1303               	bcf	3,6	;RP1=0, select bank1
 10674  0308  00AD               	movwf	??_sprintf^(0+128)
 10675  0309  0849               	movf	sprintf@sp^(0+128),w
 10676  030A  0084               	movwf	4
 10677  030B  082D               	movf	??_sprintf^(0+128),w
 10678  030C  1383               	bcf	3,7	;select IRP bank0
 10679  030D  0080               	movwf	0
 10680  030E                     l4309:
 10681  030E  3001               	movlw	1
 10682  030F  00AD               	movwf	??_sprintf^(0+128)
 10683  0310  082D               	movf	??_sprintf^(0+128),w
 10684  0311  07C9               	addwf	sprintf@sp^(0+128),f
 10685  0312                     l4311:
 10686                           
 10687                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10688  0312  30FF               	movlw	255
 10689  0313  07C3               	addwf	sprintf@eexp^(0+128),f
 10690  0314  1803               	skipnc
 10691  0315  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10692  0316  30FF               	movlw	255
 10693  0317  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10694  0318                     l4313:
 10695                           
 10696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10697  0318  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10698  0319  3A80               	xorlw	128
 10699  031A  00FF               	movwf	btemp+1
 10700  031B  3080               	movlw	128
 10701  031C  027F               	subwf	btemp+1,w
 10702  031D  1D03               	skipz
 10703  031E  2B21               	goto	u7505
 10704  031F  3001               	movlw	1
 10705  0320  0243               	subwf	sprintf@eexp^(0+128),w
 10706  0321                     u7505:
 10707  0321  1803               	skipnc
 10708  0322  2B24               	goto	u7501
 10709  0323  2B25               	goto	u7500
 10710  0324                     u7501:
 10711  0324  2B05               	goto	l4307
 10712  0325                     u7500:
 10713  0325                     l4315:
 10714                           
 10715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10716  0325  1683               	bsf	3,5	;RP0=1, select bank1
 10717  0326  1303               	bcf	3,6	;RP1=0, select bank1
 10718  0327  084B               	movf	(sprintf@prec+1)^(0+128),w
 10719  0328  3A80               	xorlw	128
 10720  0329  00FF               	movwf	btemp+1
 10721  032A  3080               	movlw	128
 10722  032B  027F               	subwf	btemp+1,w
 10723  032C  1D03               	skipz
 10724  032D  2B30               	goto	u7515
 10725  032E  3009               	movlw	9
 10726  032F  024A               	subwf	sprintf@prec^(0+128),w
 10727  0330                     u7515:
 10728  0330  1C03               	skipc
 10729  0331  2B33               	goto	u7511
 10730  0332  2B34               	goto	u7510
 10731  0333                     u7511:
 10732  0333  2B3B               	goto	l4319
 10733  0334                     u7510:
 10734  0334                     l4317:
 10735                           
 10736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10737  0334  3008               	movlw	8
 10738  0335  1683               	bsf	3,5	;RP0=1, select bank1
 10739  0336  1303               	bcf	3,6	;RP1=0, select bank1
 10740  0337  00AD               	movwf	??_sprintf^(0+128)
 10741  0338  082D               	movf	??_sprintf^(0+128),w
 10742  0339  00CC               	movwf	sprintf@c^(0+128)
 10743  033A  2B41               	goto	l371
 10744  033B                     l4319:
 10745                           
 10746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10747  033B  1683               	bsf	3,5	;RP0=1, select bank1
 10748  033C  1303               	bcf	3,6	;RP1=0, select bank1
 10749  033D  084A               	movf	sprintf@prec^(0+128),w
 10750  033E  00AD               	movwf	??_sprintf^(0+128)
 10751  033F  082D               	movf	??_sprintf^(0+128),w
 10752  0340  00CC               	movwf	sprintf@c^(0+128)
 10753  0341                     l371:
 10754                           
 10755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10756  0341  084C               	movf	sprintf@c^(0+128),w
 10757  0342  00AD               	movwf	??_sprintf^(0+128)
 10758  0343  01AE               	clrf	(??_sprintf^(0+128)+1)
 10759  0344  082D               	movf	??_sprintf^(0+128),w
 10760  0345  02CA               	subwf	sprintf@prec^(0+128),f
 10761  0346  082E               	movf	(??_sprintf+1)^(0+128),w
 10762  0347  1C03               	skipc
 10763  0348  03CB               	decf	(sprintf@prec+1)^(0+128),f
 10764  0349  02CB               	subwf	(sprintf@prec+1)^(0+128),f
 10765  034A                     l4321:
 10766                           
 10767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10768  034A  084C               	movf	sprintf@c^(0+128),w
 10769  034B  1903               	btfsc	3,2
 10770  034C  2B4E               	goto	u7521
 10771  034D  2B4F               	goto	u7520
 10772  034E                     u7521:
 10773  034E  2B5A               	goto	l4327
 10774  034F                     u7520:
 10775  034F                     l4323:
 10776                           
 10777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10778  034F  302E               	movlw	46
 10779  0350  00AD               	movwf	??_sprintf^(0+128)
 10780  0351  0849               	movf	sprintf@sp^(0+128),w
 10781  0352  0084               	movwf	4
 10782  0353  082D               	movf	??_sprintf^(0+128),w
 10783  0354  1383               	bcf	3,7	;select IRP bank0
 10784  0355  0080               	movwf	0
 10785  0356                     l4325:
 10786  0356  3001               	movlw	1
 10787  0357  00AD               	movwf	??_sprintf^(0+128)
 10788  0358  082D               	movf	??_sprintf^(0+128),w
 10789  0359  07C9               	addwf	sprintf@sp^(0+128),f
 10790  035A                     l4327:
 10791                           
 10792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10793  035A  084C               	movf	sprintf@c^(0+128),w
 10794  035B  120A  158A  249D  120A  118A  	fcall	_scale
 10795  0360  1283               	bcf	3,5	;RP0=0, select bank0
 10796  0361  1303               	bcf	3,6	;RP1=0, select bank0
 10797  0362  084B               	movf	?_scale+3,w
 10798  0363  1683               	bsf	3,5	;RP0=1, select bank1
 10799  0364  1303               	bcf	3,6	;RP1=0, select bank1
 10800  0365  00B5               	movwf	(_sprintf$1181+3)^(0+128)
 10801  0366  1283               	bcf	3,5	;RP0=0, select bank0
 10802  0367  1303               	bcf	3,6	;RP1=0, select bank0
 10803  0368  084A               	movf	?_scale+2,w
 10804  0369  1683               	bsf	3,5	;RP0=1, select bank1
 10805  036A  1303               	bcf	3,6	;RP1=0, select bank1
 10806  036B  00B4               	movwf	(_sprintf$1181+2)^(0+128)
 10807  036C  1283               	bcf	3,5	;RP0=0, select bank0
 10808  036D  1303               	bcf	3,6	;RP1=0, select bank0
 10809  036E  0849               	movf	?_scale+1,w
 10810  036F  1683               	bsf	3,5	;RP0=1, select bank1
 10811  0370  1303               	bcf	3,6	;RP1=0, select bank1
 10812  0371  00B3               	movwf	(_sprintf$1181+1)^(0+128)
 10813  0372  1283               	bcf	3,5	;RP0=0, select bank0
 10814  0373  1303               	bcf	3,6	;RP1=0, select bank0
 10815  0374  0848               	movf	?_scale,w
 10816  0375  1683               	bsf	3,5	;RP0=1, select bank1
 10817  0376  1303               	bcf	3,6	;RP1=0, select bank1
 10818  0377  00B2               	movwf	_sprintf$1181^(0+128)
 10819  0378                     l4329:
 10820                           
 10821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10822  0378  0835               	movf	(_sprintf$1181+3)^(0+128),w
 10823  0379  1283               	bcf	3,5	;RP0=0, select bank0
 10824  037A  1303               	bcf	3,6	;RP1=0, select bank0
 10825  037B  00B5               	movwf	___flmul@a+3
 10826  037C  1683               	bsf	3,5	;RP0=1, select bank1
 10827  037D  1303               	bcf	3,6	;RP1=0, select bank1
 10828  037E  0834               	movf	(_sprintf$1181+2)^(0+128),w
 10829  037F  1283               	bcf	3,5	;RP0=0, select bank0
 10830  0380  1303               	bcf	3,6	;RP1=0, select bank0
 10831  0381  00B4               	movwf	___flmul@a+2
 10832  0382  1683               	bsf	3,5	;RP0=1, select bank1
 10833  0383  1303               	bcf	3,6	;RP1=0, select bank1
 10834  0384  0833               	movf	(_sprintf$1181+1)^(0+128),w
 10835  0385  1283               	bcf	3,5	;RP0=0, select bank0
 10836  0386  1303               	bcf	3,6	;RP1=0, select bank0
 10837  0387  00B3               	movwf	___flmul@a+1
 10838  0388  1683               	bsf	3,5	;RP0=1, select bank1
 10839  0389  1303               	bcf	3,6	;RP1=0, select bank1
 10840  038A  0832               	movf	_sprintf$1181^(0+128),w
 10841  038B  1283               	bcf	3,5	;RP0=0, select bank0
 10842  038C  1303               	bcf	3,6	;RP1=0, select bank0
 10843  038D  00B2               	movwf	___flmul@a
 10844  038E  1683               	bsf	3,5	;RP0=1, select bank1
 10845  038F  1303               	bcf	3,6	;RP1=0, select bank1
 10846  0390  0848               	movf	(sprintf@fval+3)^(0+128),w
 10847  0391  1283               	bcf	3,5	;RP0=0, select bank0
 10848  0392  1303               	bcf	3,6	;RP1=0, select bank0
 10849  0393  00B1               	movwf	___flmul@b+3
 10850  0394  1683               	bsf	3,5	;RP0=1, select bank1
 10851  0395  1303               	bcf	3,6	;RP1=0, select bank1
 10852  0396  0847               	movf	(sprintf@fval+2)^(0+128),w
 10853  0397  1283               	bcf	3,5	;RP0=0, select bank0
 10854  0398  1303               	bcf	3,6	;RP1=0, select bank0
 10855  0399  00B0               	movwf	___flmul@b+2
 10856  039A  1683               	bsf	3,5	;RP0=1, select bank1
 10857  039B  1303               	bcf	3,6	;RP1=0, select bank1
 10858  039C  0846               	movf	(sprintf@fval+1)^(0+128),w
 10859  039D  1283               	bcf	3,5	;RP0=0, select bank0
 10860  039E  1303               	bcf	3,6	;RP1=0, select bank0
 10861  039F  00AF               	movwf	___flmul@b+1
 10862  03A0  1683               	bsf	3,5	;RP0=1, select bank1
 10863  03A1  1303               	bcf	3,6	;RP1=0, select bank1
 10864  03A2  0845               	movf	sprintf@fval^(0+128),w
 10865  03A3  1283               	bcf	3,5	;RP0=0, select bank0
 10866  03A4  1303               	bcf	3,6	;RP1=0, select bank0
 10867  03A5  00AE               	movwf	___flmul@b
 10868  03A6  120A  158A  213C  120A  118A  	fcall	___flmul
 10869  03AB  1283               	bcf	3,5	;RP0=0, select bank0
 10870  03AC  1303               	bcf	3,6	;RP1=0, select bank0
 10871  03AD  0831               	movf	?___flmul+3,w
 10872  03AE  00DE               	movwf	___fltol@f1+3
 10873  03AF  0830               	movf	?___flmul+2,w
 10874  03B0  00DD               	movwf	___fltol@f1+2
 10875  03B1  082F               	movf	?___flmul+1,w
 10876  03B2  00DC               	movwf	___fltol@f1+1
 10877  03B3  082E               	movf	?___flmul,w
 10878  03B4  00DB               	movwf	___fltol@f1
 10879  03B5  160A  158A  26C8  120A  118A  	fcall	___fltol
 10880  03BA  1283               	bcf	3,5	;RP0=0, select bank0
 10881  03BB  1303               	bcf	3,6	;RP1=0, select bank0
 10882  03BC  085E               	movf	?___fltol+3,w
 10883  03BD  1683               	bsf	3,5	;RP0=1, select bank1
 10884  03BE  1303               	bcf	3,6	;RP1=0, select bank1
 10885  03BF  00BA               	movwf	(sprintf@val+3)^(0+128)
 10886  03C0  1283               	bcf	3,5	;RP0=0, select bank0
 10887  03C1  1303               	bcf	3,6	;RP1=0, select bank0
 10888  03C2  085D               	movf	?___fltol+2,w
 10889  03C3  1683               	bsf	3,5	;RP0=1, select bank1
 10890  03C4  1303               	bcf	3,6	;RP1=0, select bank1
 10891  03C5  00B9               	movwf	(sprintf@val+2)^(0+128)
 10892  03C6  1283               	bcf	3,5	;RP0=0, select bank0
 10893  03C7  1303               	bcf	3,6	;RP1=0, select bank0
 10894  03C8  085C               	movf	?___fltol+1,w
 10895  03C9  1683               	bsf	3,5	;RP0=1, select bank1
 10896  03CA  1303               	bcf	3,6	;RP1=0, select bank1
 10897  03CB  00B8               	movwf	(sprintf@val+1)^(0+128)
 10898  03CC  1283               	bcf	3,5	;RP0=0, select bank0
 10899  03CD  1303               	bcf	3,6	;RP1=0, select bank0
 10900  03CE  085B               	movf	?___fltol,w
 10901  03CF  1683               	bsf	3,5	;RP0=1, select bank1
 10902  03D0  1303               	bcf	3,6	;RP1=0, select bank1
 10903  03D1  00B7               	movwf	sprintf@val^(0+128)
 10904                           
 10905                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10906  03D2  2CD4               	goto	l4339
 10907  03D3                     l4331:
 10908                           
 10909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10910  03D3  084C               	movf	sprintf@c^(0+128),w
 10911  03D4  00AD               	movwf	??_sprintf^(0+128)
 10912  03D5  3001               	movlw	1
 10913  03D6                     u7535:
 10914  03D6  1003               	clrc
 10915  03D7  0DAD               	rlf	??_sprintf^(0+128),f
 10916  03D8  3EFF               	addlw	-1
 10917  03D9  1D03               	skipz
 10918  03DA  2BD6               	goto	u7535
 10919  03DB  1003               	clrc
 10920  03DC  0D2D               	rlf	??_sprintf^(0+128),w
 10921  03DD  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10922  03DE  0084               	movwf	4
 10923  03DF  160A  158A  200A  120A  118A  	fcall	stringdir
 10924  03E4  1283               	bcf	3,5	;RP0=0, select bank0
 10925  03E5  1303               	bcf	3,6	;RP1=0, select bank0
 10926  03E6  00A0               	movwf	___lldiv@divisor
 10927  03E7  160A  158A  200A  120A  118A  	fcall	stringdir
 10928  03EC  00A1               	movwf	___lldiv@divisor+1
 10929  03ED  160A  158A  200A  120A  118A  	fcall	stringdir
 10930  03F2  00A2               	movwf	___lldiv@divisor+2
 10931  03F3  160A  158A  200A  120A  118A  	fcall	stringdir
 10932  03F8  00A3               	movwf	___lldiv@divisor+3
 10933  03F9  1683               	bsf	3,5	;RP0=1, select bank1
 10934  03FA  1303               	bcf	3,6	;RP1=0, select bank1
 10935  03FB  083A               	movf	(sprintf@val+3)^(0+128),w
 10936  03FC  1283               	bcf	3,5	;RP0=0, select bank0
 10937  03FD  1303               	bcf	3,6	;RP1=0, select bank0
 10938  03FE  00A7               	movwf	___lldiv@dividend+3
 10939  03FF  1683               	bsf	3,5	;RP0=1, select bank1
 10940  0400  1303               	bcf	3,6	;RP1=0, select bank1
 10941  0401  0839               	movf	(sprintf@val+2)^(0+128),w
 10942  0402  1283               	bcf	3,5	;RP0=0, select bank0
 10943  0403  1303               	bcf	3,6	;RP1=0, select bank0
 10944  0404  00A6               	movwf	___lldiv@dividend+2
 10945  0405  1683               	bsf	3,5	;RP0=1, select bank1
 10946  0406  1303               	bcf	3,6	;RP1=0, select bank1
 10947  0407  0838               	movf	(sprintf@val+1)^(0+128),w
 10948  0408  1283               	bcf	3,5	;RP0=0, select bank0
 10949  0409  1303               	bcf	3,6	;RP1=0, select bank0
 10950  040A  00A5               	movwf	___lldiv@dividend+1
 10951  040B  1683               	bsf	3,5	;RP0=1, select bank1
 10952  040C  1303               	bcf	3,6	;RP1=0, select bank1
 10953  040D  0837               	movf	sprintf@val^(0+128),w
 10954  040E  1283               	bcf	3,5	;RP0=0, select bank0
 10955  040F  1303               	bcf	3,6	;RP1=0, select bank0
 10956  0410  00A4               	movwf	___lldiv@dividend
 10957  0411  160A  158A  2660  120A  118A  	fcall	___lldiv
 10958  0416  1283               	bcf	3,5	;RP0=0, select bank0
 10959  0417  1303               	bcf	3,6	;RP1=0, select bank0
 10960  0418  0823               	movf	?___lldiv+3,w
 10961  0419  1683               	bsf	3,5	;RP0=1, select bank1
 10962  041A  1303               	bcf	3,6	;RP1=0, select bank1
 10963  041B  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10964  041C  1283               	bcf	3,5	;RP0=0, select bank0
 10965  041D  1303               	bcf	3,6	;RP1=0, select bank0
 10966  041E  0822               	movf	?___lldiv+2,w
 10967  041F  1683               	bsf	3,5	;RP0=1, select bank1
 10968  0420  1303               	bcf	3,6	;RP1=0, select bank1
 10969  0421  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10970  0422  1283               	bcf	3,5	;RP0=0, select bank0
 10971  0423  1303               	bcf	3,6	;RP1=0, select bank0
 10972  0424  0821               	movf	?___lldiv+1,w
 10973  0425  1683               	bsf	3,5	;RP0=1, select bank1
 10974  0426  1303               	bcf	3,6	;RP1=0, select bank1
 10975  0427  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10976  0428  1283               	bcf	3,5	;RP0=0, select bank0
 10977  0429  1303               	bcf	3,6	;RP1=0, select bank0
 10978  042A  0820               	movf	?___lldiv,w
 10979  042B  1683               	bsf	3,5	;RP0=1, select bank1
 10980  042C  1303               	bcf	3,6	;RP1=0, select bank1
 10981  042D  00BF               	movwf	sprintf@tmpval^(0+128)
 10982  042E                     l4333:
 10983                           
 10984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10985  042E  3000               	movlw	0
 10986  042F  1283               	bcf	3,5	;RP0=0, select bank0
 10987  0430  1303               	bcf	3,6	;RP1=0, select bank0
 10988  0431  00A3               	movwf	___llmod@divisor+3
 10989  0432  3000               	movlw	0
 10990  0433  00A2               	movwf	___llmod@divisor+2
 10991  0434  3000               	movlw	0
 10992  0435  00A1               	movwf	___llmod@divisor+1
 10993  0436  300A               	movlw	10
 10994  0437  00A0               	movwf	___llmod@divisor
 10995  0438  1683               	bsf	3,5	;RP0=1, select bank1
 10996  0439  1303               	bcf	3,6	;RP1=0, select bank1
 10997  043A  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 10998  043B  1283               	bcf	3,5	;RP0=0, select bank0
 10999  043C  1303               	bcf	3,6	;RP1=0, select bank0
 11000  043D  00A7               	movwf	___llmod@dividend+3
 11001  043E  1683               	bsf	3,5	;RP0=1, select bank1
 11002  043F  1303               	bcf	3,6	;RP1=0, select bank1
 11003  0440  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 11004  0441  1283               	bcf	3,5	;RP0=0, select bank0
 11005  0442  1303               	bcf	3,6	;RP1=0, select bank0
 11006  0443  00A6               	movwf	___llmod@dividend+2
 11007  0444  1683               	bsf	3,5	;RP0=1, select bank1
 11008  0445  1303               	bcf	3,6	;RP1=0, select bank1
 11009  0446  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 11010  0447  1283               	bcf	3,5	;RP0=0, select bank0
 11011  0448  1303               	bcf	3,6	;RP1=0, select bank0
 11012  0449  00A5               	movwf	___llmod@dividend+1
 11013  044A  1683               	bsf	3,5	;RP0=1, select bank1
 11014  044B  1303               	bcf	3,6	;RP1=0, select bank1
 11015  044C  083F               	movf	sprintf@tmpval^(0+128),w
 11016  044D  1283               	bcf	3,5	;RP0=0, select bank0
 11017  044E  1303               	bcf	3,6	;RP1=0, select bank0
 11018  044F  00A4               	movwf	___llmod@dividend
 11019  0450  160A  158A  25AF  120A  118A  	fcall	___llmod
 11020  0455  1283               	bcf	3,5	;RP0=0, select bank0
 11021  0456  1303               	bcf	3,6	;RP1=0, select bank0
 11022  0457  0823               	movf	?___llmod+3,w
 11023  0458  1683               	bsf	3,5	;RP0=1, select bank1
 11024  0459  1303               	bcf	3,6	;RP1=0, select bank1
 11025  045A  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 11026  045B  1283               	bcf	3,5	;RP0=0, select bank0
 11027  045C  1303               	bcf	3,6	;RP1=0, select bank0
 11028  045D  0822               	movf	?___llmod+2,w
 11029  045E  1683               	bsf	3,5	;RP0=1, select bank1
 11030  045F  1303               	bcf	3,6	;RP1=0, select bank1
 11031  0460  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 11032  0461  1283               	bcf	3,5	;RP0=0, select bank0
 11033  0462  1303               	bcf	3,6	;RP1=0, select bank0
 11034  0463  0821               	movf	?___llmod+1,w
 11035  0464  1683               	bsf	3,5	;RP0=1, select bank1
 11036  0465  1303               	bcf	3,6	;RP1=0, select bank1
 11037  0466  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 11038  0467  1283               	bcf	3,5	;RP0=0, select bank0
 11039  0468  1303               	bcf	3,6	;RP1=0, select bank0
 11040  0469  0820               	movf	?___llmod,w
 11041  046A  1683               	bsf	3,5	;RP0=1, select bank1
 11042  046B  1303               	bcf	3,6	;RP1=0, select bank1
 11043  046C  00BF               	movwf	sprintf@tmpval^(0+128)
 11044  046D                     l4335:
 11045                           
 11046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11047  046D  083F               	movf	sprintf@tmpval^(0+128),w
 11048  046E  3E30               	addlw	48
 11049  046F  00AD               	movwf	??_sprintf^(0+128)
 11050  0470  0849               	movf	sprintf@sp^(0+128),w
 11051  0471  0084               	movwf	4
 11052  0472  082D               	movf	??_sprintf^(0+128),w
 11053  0473  1383               	bcf	3,7	;select IRP bank0
 11054  0474  0080               	movwf	0
 11055  0475  3001               	movlw	1
 11056  0476  00AD               	movwf	??_sprintf^(0+128)
 11057  0477  082D               	movf	??_sprintf^(0+128),w
 11058  0478  07C9               	addwf	sprintf@sp^(0+128),f
 11059  0479                     l4337:
 11060                           
 11061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11062  0479  084C               	movf	sprintf@c^(0+128),w
 11063  047A  00AD               	movwf	??_sprintf^(0+128)
 11064  047B  3001               	movlw	1
 11065  047C                     u7545:
 11066  047C  1003               	clrc
 11067  047D  0DAD               	rlf	??_sprintf^(0+128),f
 11068  047E  3EFF               	addlw	-1
 11069  047F  1D03               	skipz
 11070  0480  2C7C               	goto	u7545
 11071  0481  1003               	clrc
 11072  0482  0D2D               	rlf	??_sprintf^(0+128),w
 11073  0483  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11074  0484  0084               	movwf	4
 11075  0485  160A  158A  200A  120A  118A  	fcall	stringdir
 11076  048A  1283               	bcf	3,5	;RP0=0, select bank0
 11077  048B  1303               	bcf	3,6	;RP1=0, select bank0
 11078  048C  00A0               	movwf	___llmod@divisor
 11079  048D  160A  158A  200A  120A  118A  	fcall	stringdir
 11080  0492  00A1               	movwf	___llmod@divisor+1
 11081  0493  160A  158A  200A  120A  118A  	fcall	stringdir
 11082  0498  00A2               	movwf	___llmod@divisor+2
 11083  0499  160A  158A  200A  120A  118A  	fcall	stringdir
 11084  049E  00A3               	movwf	___llmod@divisor+3
 11085  049F  1683               	bsf	3,5	;RP0=1, select bank1
 11086  04A0  1303               	bcf	3,6	;RP1=0, select bank1
 11087  04A1  083A               	movf	(sprintf@val+3)^(0+128),w
 11088  04A2  1283               	bcf	3,5	;RP0=0, select bank0
 11089  04A3  1303               	bcf	3,6	;RP1=0, select bank0
 11090  04A4  00A7               	movwf	___llmod@dividend+3
 11091  04A5  1683               	bsf	3,5	;RP0=1, select bank1
 11092  04A6  1303               	bcf	3,6	;RP1=0, select bank1
 11093  04A7  0839               	movf	(sprintf@val+2)^(0+128),w
 11094  04A8  1283               	bcf	3,5	;RP0=0, select bank0
 11095  04A9  1303               	bcf	3,6	;RP1=0, select bank0
 11096  04AA  00A6               	movwf	___llmod@dividend+2
 11097  04AB  1683               	bsf	3,5	;RP0=1, select bank1
 11098  04AC  1303               	bcf	3,6	;RP1=0, select bank1
 11099  04AD  0838               	movf	(sprintf@val+1)^(0+128),w
 11100  04AE  1283               	bcf	3,5	;RP0=0, select bank0
 11101  04AF  1303               	bcf	3,6	;RP1=0, select bank0
 11102  04B0  00A5               	movwf	___llmod@dividend+1
 11103  04B1  1683               	bsf	3,5	;RP0=1, select bank1
 11104  04B2  1303               	bcf	3,6	;RP1=0, select bank1
 11105  04B3  0837               	movf	sprintf@val^(0+128),w
 11106  04B4  1283               	bcf	3,5	;RP0=0, select bank0
 11107  04B5  1303               	bcf	3,6	;RP1=0, select bank0
 11108  04B6  00A4               	movwf	___llmod@dividend
 11109  04B7  160A  158A  25AF  120A  118A  	fcall	___llmod
 11110  04BC  1283               	bcf	3,5	;RP0=0, select bank0
 11111  04BD  1303               	bcf	3,6	;RP1=0, select bank0
 11112  04BE  0823               	movf	?___llmod+3,w
 11113  04BF  1683               	bsf	3,5	;RP0=1, select bank1
 11114  04C0  1303               	bcf	3,6	;RP1=0, select bank1
 11115  04C1  00BA               	movwf	(sprintf@val+3)^(0+128)
 11116  04C2  1283               	bcf	3,5	;RP0=0, select bank0
 11117  04C3  1303               	bcf	3,6	;RP1=0, select bank0
 11118  04C4  0822               	movf	?___llmod+2,w
 11119  04C5  1683               	bsf	3,5	;RP0=1, select bank1
 11120  04C6  1303               	bcf	3,6	;RP1=0, select bank1
 11121  04C7  00B9               	movwf	(sprintf@val+2)^(0+128)
 11122  04C8  1283               	bcf	3,5	;RP0=0, select bank0
 11123  04C9  1303               	bcf	3,6	;RP1=0, select bank0
 11124  04CA  0821               	movf	?___llmod+1,w
 11125  04CB  1683               	bsf	3,5	;RP0=1, select bank1
 11126  04CC  1303               	bcf	3,6	;RP1=0, select bank1
 11127  04CD  00B8               	movwf	(sprintf@val+1)^(0+128)
 11128  04CE  1283               	bcf	3,5	;RP0=0, select bank0
 11129  04CF  1303               	bcf	3,6	;RP1=0, select bank0
 11130  04D0  0820               	movf	?___llmod,w
 11131  04D1  1683               	bsf	3,5	;RP0=1, select bank1
 11132  04D2  1303               	bcf	3,6	;RP1=0, select bank1
 11133  04D3  00B7               	movwf	sprintf@val^(0+128)
 11134  04D4                     l4339:
 11135                           
 11136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11137  04D4  3001               	movlw	1
 11138  04D5  02CC               	subwf	sprintf@c^(0+128),f
 11139  04D6  0A4C               	incf	sprintf@c^(0+128),w
 11140  04D7  1D03               	btfss	3,2
 11141  04D8  2CDA               	goto	u7551
 11142  04D9  2CDB               	goto	u7550
 11143  04DA                     u7551:
 11144  04DA  2BD3               	goto	l4331
 11145  04DB                     u7550:
 11146  04DB  2CED               	goto	l4347
 11147  04DC                     l4341:
 11148                           
 11149                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11150  04DC  3030               	movlw	48
 11151  04DD  00AD               	movwf	??_sprintf^(0+128)
 11152  04DE  0849               	movf	sprintf@sp^(0+128),w
 11153  04DF  0084               	movwf	4
 11154  04E0  082D               	movf	??_sprintf^(0+128),w
 11155  04E1  1383               	bcf	3,7	;select IRP bank0
 11156  04E2  0080               	movwf	0
 11157  04E3                     l4343:
 11158  04E3  3001               	movlw	1
 11159  04E4  00AD               	movwf	??_sprintf^(0+128)
 11160  04E5  082D               	movf	??_sprintf^(0+128),w
 11161  04E6  07C9               	addwf	sprintf@sp^(0+128),f
 11162  04E7                     l4345:
 11163                           
 11164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11165  04E7  30FF               	movlw	255
 11166  04E8  07CA               	addwf	sprintf@prec^(0+128),f
 11167  04E9  1803               	skipnc
 11168  04EA  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11169  04EB  30FF               	movlw	255
 11170  04EC  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11171  04ED                     l4347:
 11172                           
 11173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11174  04ED  084A               	movf	sprintf@prec^(0+128),w
 11175  04EE  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11176  04EF  1D03               	btfss	3,2
 11177  04F0  2CF2               	goto	u7561
 11178  04F1  2CF3               	goto	u7560
 11179  04F2                     u7561:
 11180  04F2  2CDC               	goto	l4341
 11181  04F3                     u7560:
 11182  04F3  2DB9               	goto	l4395
 11183  04F4                     l4349:
 11184                           
 11185                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 11186  04F4  084A               	movf	sprintf@prec^(0+128),w
 11187  04F5  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11188  04F6  1D03               	btfss	3,2
 11189  04F7  2CF9               	goto	u7571
 11190  04F8  2CFA               	goto	u7570
 11191  04F9                     u7571:
 11192  04F9  2D08               	goto	l379
 11193  04FA                     u7570:
 11194  04FA                     l4351:
 11195  04FA  083A               	movf	(sprintf@val+3)^(0+128),w
 11196  04FB  0439               	iorwf	(sprintf@val+2)^(0+128),w
 11197  04FC  0438               	iorwf	(sprintf@val+1)^(0+128),w
 11198  04FD  0437               	iorwf	sprintf@val^(0+128),w
 11199  04FE  1D03               	skipz
 11200  04FF  2D01               	goto	u7581
 11201  0500  2D02               	goto	u7580
 11202  0501                     u7581:
 11203  0501  2D08               	goto	l379
 11204  0502                     u7580:
 11205  0502                     l4353:
 11206                           
 11207                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11208  0502  3001               	movlw	1
 11209  0503  07CA               	addwf	sprintf@prec^(0+128),f
 11210  0504  1803               	skipnc
 11211  0505  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11212  0506  3000               	movlw	0
 11213  0507  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11214  0508                     l379:
 11215                           
 11216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11217  0508  084B               	movf	(sprintf@prec+1)^(0+128),w
 11218  0509  3A80               	xorlw	128
 11219  050A  3C80               	sublw	128
 11220  050B  1D03               	skipz
 11221  050C  2D0F               	goto	u7595
 11222  050D  084A               	movf	sprintf@prec^(0+128),w
 11223  050E  024C               	subwf	sprintf@c^(0+128),w
 11224  050F                     u7595:
 11225  050F  1803               	skipnc
 11226  0510  2D12               	goto	u7591
 11227  0511  2D13               	goto	u7590
 11228  0512                     u7591:
 11229  0512  2D1A               	goto	l4357
 11230  0513                     u7590:
 11231  0513                     l4355:
 11232                           
 11233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11234  0513  1683               	bsf	3,5	;RP0=1, select bank1
 11235  0514  1303               	bcf	3,6	;RP1=0, select bank1
 11236  0515  084A               	movf	sprintf@prec^(0+128),w
 11237  0516  00AD               	movwf	??_sprintf^(0+128)
 11238  0517  082D               	movf	??_sprintf^(0+128),w
 11239  0518  00CC               	movwf	sprintf@c^(0+128)
 11240  0519  2D32               	goto	l4361
 11241  051A                     l4357:
 11242  051A  1683               	bsf	3,5	;RP0=1, select bank1
 11243  051B  1303               	bcf	3,6	;RP1=0, select bank1
 11244  051C  084B               	movf	(sprintf@prec+1)^(0+128),w
 11245  051D  3A80               	xorlw	128
 11246  051E  00AD               	movwf	??_sprintf^(0+128)
 11247  051F  3080               	movlw	128
 11248  0520  022D               	subwf	??_sprintf^(0+128),w
 11249  0521  1D03               	skipz
 11250  0522  2D25               	goto	u7605
 11251  0523  084C               	movf	sprintf@c^(0+128),w
 11252  0524  024A               	subwf	sprintf@prec^(0+128),w
 11253  0525                     u7605:
 11254  0525  1803               	skipnc
 11255  0526  2D28               	goto	u7601
 11256  0527  2D29               	goto	u7600
 11257  0528                     u7601:
 11258  0528  2D32               	goto	l4361
 11259  0529                     u7600:
 11260  0529                     l4359:
 11261                           
 11262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11263  0529  1683               	bsf	3,5	;RP0=1, select bank1
 11264  052A  1303               	bcf	3,6	;RP1=0, select bank1
 11265  052B  084C               	movf	sprintf@c^(0+128),w
 11266  052C  00AD               	movwf	??_sprintf^(0+128)
 11267  052D  01AE               	clrf	(??_sprintf^(0+128)+1)
 11268  052E  082D               	movf	??_sprintf^(0+128),w
 11269  052F  00CA               	movwf	sprintf@prec^(0+128)
 11270  0530  082E               	movf	(??_sprintf+1)^(0+128),w
 11271  0531  00CB               	movwf	(sprintf@prec+1)^(0+128)
 11272  0532                     l4361:
 11273                           
 11274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11275  0532  1683               	bsf	3,5	;RP0=1, select bank1
 11276  0533  1303               	bcf	3,6	;RP1=0, select bank1
 11277  0534  083D               	movf	sprintf@width^(0+128),w
 11278  0535  043E               	iorwf	(sprintf@width+1)^(0+128),w
 11279  0536  1903               	btfsc	3,2
 11280  0537  2D39               	goto	u7611
 11281  0538  2D3A               	goto	u7610
 11282  0539                     u7611:
 11283  0539  2D4C               	goto	l4367
 11284  053A                     u7610:
 11285  053A                     l4363:
 11286  053A  3003               	movlw	3
 11287  053B  053B               	andwf	sprintf@flag^(0+128),w
 11288  053C  00AD               	movwf	??_sprintf^(0+128)
 11289  053D  3000               	movlw	0
 11290  053E  053C               	andwf	(sprintf@flag+1)^(0+128),w
 11291  053F  00AE               	movwf	(??_sprintf+1)^(0+128)
 11292  0540  082D               	movf	??_sprintf^(0+128),w
 11293  0541  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11294  0542  1903               	btfsc	3,2
 11295  0543  2D45               	goto	u7621
 11296  0544  2D46               	goto	u7620
 11297  0545                     u7621:
 11298  0545  2D4C               	goto	l4367
 11299  0546                     u7620:
 11300  0546                     l4365:
 11301                           
 11302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11303  0546  30FF               	movlw	255
 11304  0547  07BD               	addwf	sprintf@width^(0+128),f
 11305  0548  1803               	skipnc
 11306  0549  0ABE               	incf	(sprintf@width+1)^(0+128),f
 11307  054A  30FF               	movlw	255
 11308  054B  07BE               	addwf	(sprintf@width+1)^(0+128),f
 11309  054C                     l4367:
 11310                           
 11311                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11312  054C  1F3C               	btfss	(sprintf@flag+1)^(0+128),6
 11313  054D  2D4F               	goto	u7631
 11314  054E  2D50               	goto	u7630
 11315  054F                     u7631:
 11316  054F  2D6B               	goto	l4375
 11317  0550                     u7630:
 11318  0550                     l4369:
 11319                           
 11320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11321  0550  084B               	movf	(sprintf@prec+1)^(0+128),w
 11322  0551  3A80               	xorlw	128
 11323  0552  00AD               	movwf	??_sprintf^(0+128)
 11324  0553  083E               	movf	(sprintf@width+1)^(0+128),w
 11325  0554  3A80               	xorlw	128
 11326  0555  022D               	subwf	??_sprintf^(0+128),w
 11327  0556  1D03               	skipz
 11328  0557  2D5A               	goto	u7645
 11329  0558  083D               	movf	sprintf@width^(0+128),w
 11330  0559  024A               	subwf	sprintf@prec^(0+128),w
 11331  055A                     u7645:
 11332  055A  1803               	skipnc
 11333  055B  2D5D               	goto	u7641
 11334  055C  2D5E               	goto	u7640
 11335  055D                     u7641:
 11336  055D  2D67               	goto	l4373
 11337  055E                     u7640:
 11338  055E                     l4371:
 11339                           
 11340                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11341  055E  1683               	bsf	3,5	;RP0=1, select bank1
 11342  055F  1303               	bcf	3,6	;RP1=0, select bank1
 11343  0560  084A               	movf	sprintf@prec^(0+128),w
 11344  0561  02BD               	subwf	sprintf@width^(0+128),f
 11345  0562  084B               	movf	(sprintf@prec+1)^(0+128),w
 11346  0563  1C03               	skipc
 11347  0564  03BE               	decf	(sprintf@width+1)^(0+128),f
 11348  0565  02BE               	subwf	(sprintf@width+1)^(0+128),f
 11349  0566  2D6B               	goto	l4375
 11350  0567                     l4373:
 11351                           
 11352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11353  0567  1683               	bsf	3,5	;RP0=1, select bank1
 11354  0568  1303               	bcf	3,6	;RP1=0, select bank1
 11355  0569  01BD               	clrf	sprintf@width^(0+128)
 11356  056A  01BE               	clrf	(sprintf@width+1)^(0+128)
 11357  056B                     l4375:
 11358                           
 11359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11360  056B  083E               	movf	(sprintf@width+1)^(0+128),w
 11361  056C  3A80               	xorlw	128
 11362  056D  3C80               	sublw	128
 11363  056E  1D03               	skipz
 11364  056F  2D72               	goto	u7655
 11365  0570  083D               	movf	sprintf@width^(0+128),w
 11366  0571  024C               	subwf	sprintf@c^(0+128),w
 11367  0572                     u7655:
 11368  0572  1803               	skipnc
 11369  0573  2D75               	goto	u7651
 11370  0574  2D76               	goto	u7650
 11371  0575                     u7651:
 11372  0575  2D82               	goto	l4379
 11373  0576                     u7650:
 11374  0576                     l4377:
 11375                           
 11376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11377  0576  1683               	bsf	3,5	;RP0=1, select bank1
 11378  0577  1303               	bcf	3,6	;RP1=0, select bank1
 11379  0578  084C               	movf	sprintf@c^(0+128),w
 11380  0579  00AD               	movwf	??_sprintf^(0+128)
 11381  057A  01AE               	clrf	(??_sprintf^(0+128)+1)
 11382  057B  082D               	movf	??_sprintf^(0+128),w
 11383  057C  02BD               	subwf	sprintf@width^(0+128),f
 11384  057D  082E               	movf	(??_sprintf+1)^(0+128),w
 11385  057E  1C03               	skipc
 11386  057F  03BE               	decf	(sprintf@width+1)^(0+128),f
 11387  0580  02BE               	subwf	(sprintf@width+1)^(0+128),f
 11388  0581  2D86               	goto	l4381
 11389  0582                     l4379:
 11390                           
 11391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11392  0582  1683               	bsf	3,5	;RP0=1, select bank1
 11393  0583  1303               	bcf	3,6	;RP1=0, select bank1
 11394  0584  01BD               	clrf	sprintf@width^(0+128)
 11395  0585  01BE               	clrf	(sprintf@width+1)^(0+128)
 11396  0586                     l4381:
 11397                           
 11398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11399  0586  083D               	movf	sprintf@width^(0+128),w
 11400  0587  043E               	iorwf	(sprintf@width+1)^(0+128),w
 11401  0588  1903               	btfsc	3,2
 11402  0589  2D8B               	goto	u7661
 11403  058A  2D8C               	goto	u7660
 11404  058B                     u7661:
 11405  058B  2DA3               	goto	l4389
 11406  058C                     u7660:
 11407  058C                     l4383:
 11408                           
 11409                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11410  058C  3020               	movlw	32
 11411  058D  00AD               	movwf	??_sprintf^(0+128)
 11412  058E  0849               	movf	sprintf@sp^(0+128),w
 11413  058F  0084               	movwf	4
 11414  0590  082D               	movf	??_sprintf^(0+128),w
 11415  0591  1383               	bcf	3,7	;select IRP bank0
 11416  0592  0080               	movwf	0
 11417  0593                     l4385:
 11418  0593  3001               	movlw	1
 11419  0594  00AD               	movwf	??_sprintf^(0+128)
 11420  0595  082D               	movf	??_sprintf^(0+128),w
 11421  0596  07C9               	addwf	sprintf@sp^(0+128),f
 11422  0597                     l4387:
 11423  0597  30FF               	movlw	255
 11424  0598  07BD               	addwf	sprintf@width^(0+128),f
 11425  0599  1803               	skipnc
 11426  059A  0ABE               	incf	(sprintf@width+1)^(0+128),f
 11427  059B  30FF               	movlw	255
 11428  059C  07BE               	addwf	(sprintf@width+1)^(0+128),f
 11429  059D  083D               	movf	sprintf@width^(0+128),w
 11430  059E  043E               	iorwf	(sprintf@width+1)^(0+128),w
 11431  059F  1D03               	btfss	3,2
 11432  05A0  2DA2               	goto	u7671
 11433  05A1  2DA3               	goto	u7670
 11434  05A2                     u7671:
 11435  05A2  2D8C               	goto	l4383
 11436  05A3                     u7670:
 11437  05A3                     l4389:
 11438                           
 11439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11440  05A3  3003               	movlw	3
 11441  05A4  053B               	andwf	sprintf@flag^(0+128),w
 11442  05A5  00AD               	movwf	??_sprintf^(0+128)
 11443  05A6  3000               	movlw	0
 11444  05A7  053C               	andwf	(sprintf@flag+1)^(0+128),w
 11445  05A8  00AE               	movwf	(??_sprintf+1)^(0+128)
 11446  05A9  082D               	movf	??_sprintf^(0+128),w
 11447  05AA  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11448  05AB  1903               	btfsc	3,2
 11449  05AC  2DAE               	goto	u7681
 11450  05AD  2DAF               	goto	u7680
 11451  05AE                     u7681:
 11452  05AE  2DB9               	goto	l4395
 11453  05AF                     u7680:
 11454  05AF                     l4391:
 11455                           
 11456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11457  05AF  302D               	movlw	45
 11458  05B0  00AD               	movwf	??_sprintf^(0+128)
 11459  05B1  0849               	movf	sprintf@sp^(0+128),w
 11460  05B2  0084               	movwf	4
 11461  05B3  082D               	movf	??_sprintf^(0+128),w
 11462  05B4  1383               	bcf	3,7	;select IRP bank0
 11463  05B5  0080               	movwf	0
 11464  05B6  160A  118A  2CCB   	goto	l4151
 11465  05B9                     l4395:
 11466                           
 11467                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11468  05B9  3001               	movlw	1
 11469  05BA  07A8               	addwf	sprintf@f^(0+128),f
 11470  05BB  30FF               	movlw	-1
 11471  05BC  0728               	addwf	sprintf@f^(0+128),w
 11472  05BD  0084               	movwf	4
 11473  05BE  160A  158A  200A  120A  118A  	fcall	stringdir
 11474  05C3  00AD               	movwf	??_sprintf^(0+128)
 11475  05C4  082D               	movf	??_sprintf^(0+128),w
 11476  05C5  00CC               	movwf	sprintf@c^(0+128)
 11477  05C6  084C               	movf	sprintf@c^(0+128),w
 11478  05C7  1D03               	btfss	3,2
 11479  05C8  2DCA               	goto	u7691
 11480  05C9  2DCD               	goto	u7690
 11481  05CA                     u7691:
 11482  05CA  160A  118A  2CBE   	goto	l4147
 11483  05CD                     u7690:
 11484  05CD                     l4397:
 11485                           
 11486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11487  05CD  0849               	movf	sprintf@sp^(0+128),w
 11488  05CE  0084               	movwf	4
 11489  05CF  1383               	bcf	3,7	;select IRP bank0
 11490  05D0  0180               	clrf	0
 11491  05D1                     l394:
 11492  05D1  0008               	return
 11493  05D2                     __end_of_sprintf:

Data Sizes:
    Strings     24
    Constant    144
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80     80      80
    BANK1            80     48      72
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> f(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 12
		 -> f(BANK1[10]), STR_1(CODE[12]), 

    send_crct@st	PTR unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), 


Critical Paths under _main in COMMON

    _sprintf->___awdiv
    _sprintf->___llmod
    _sprintf->___wmul
    _sprintf->_isdigit
    _scale->___awdiv
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    _send_crct->_send_char
    ___flmul->__Umul8_16
    ___flmul->___awdiv
    ___flmul->___lwmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    _isr->_int_adc
    _int_adc->_valadc

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conv->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   47828
                                             45 BANK1      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _cfg_adc
                             _cfg_io
                               _conv
                          _send_crct
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   38991
                                              8 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    9720
                                             40 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              5 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              6 COMMON     1     1      0
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    7613
                                             40 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              4 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              0 BANK0     18    10      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              5 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              5 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              5 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             59 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             60 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _send_crct                                            3     3      0     197
                                              0 BANK0      3     3      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      31
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conv                                                13     9      4    6594
                                             40 BANK0     13     9      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    5873
                                             14 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              5 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _cfg_io                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cfg_adc                                              1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     589
                                              1 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     279
                                              6 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     651
                                              2 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0     527
                                              2 BANK0      3     3      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     279
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     279
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     248
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0      23
                                              3 COMMON     2     2      0
                            _int_adc
 ---------------------------------------------------------------------------------
 (6) _int_adc                                              1     1      0      23
                                              2 COMMON     1     1      0
                             _valadc
 ---------------------------------------------------------------------------------
 (7) _valadc                                               2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _cfg_adc
   _cfg_io
   _conv
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _send_crct
     _send_char
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _isr (ROOT)
   _int_adc
     _valadc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A1       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     30      48       7       90.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A1      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jul 23 18:29:34 2021

                        _f 00DE                          _g 00D0                          pc 0002  
                       _V1 00DD                         l98 0939                         _V2 00DC  
             ___awdiv@sign 002B                         fsr 0004        ___wmul@multiplicand 0022  
      __Umul8_16@word_mpld 0024                        l103 080E                        l121 1A42  
                      l106 1A91                        l124 1A4A                        l109 1C35  
                      l150 1BC4                        l118 1B4B                        l151 1BCA  
                      l311 0FFF                        l160 1BE7                        l152 1BCB  
                      l400 1AF9                        l304 07DE                        l161 1BED  
                      l153 1BD1                        l162 1BEE                        l154 1BD2  
                      l163 1BF4                        l155 1BD8                        l171 1A57  
                      l156 1BD9                        l180 1D0E                        l165 1BF5  
                      l157 1BDF                        l149 1BC1                        l333 1597  
                      l158 1BE0                        l159 1BE6                        l183 1AAC  
                      l168 07FA                        l177 1AD2                        l601 1F43  
                      l434 1EC7                        l611 1F43                        l371 0341  
                      l364 02FD                        l189 1C7B                        l615 116D  
                      l551 0877                        l608 1F2E                        l616 10DF  
                      l704 1CC1                        l626 1160                        l714 1BB7  
                      l394 05D1                        l731 130D                        l619 1130  
                      l379 0508                        l572 11EE                        l564 1E5F  
                      l821 0C9C                        l725 128F                        l750 1425  
                      l654 1E04                        l398 1AE1                        l840 1B10  
                      l584 1D2D                        l592 1097                        l568 122B  
                      l833 0C90                        l585 1D49                        l593 10B0  
                      l729 1336                        l569 1190                        l842 1B22  
                      l586 1D5E                        l746 1401                        l738 14B3  
                      l827 0C08                        l771 1DAE                        l579 121E  
                      l756 1447                        l589 102B                        l597 100C  
                      l871 1FAD                        l767 14A7                        l759 1485  
                      l768 14B3                        l865 1F68                        l867 1FFF  
                      l885 1A7B                        l878 1FC9                        l879 1FD5  
                      _RC1 0039                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      _v11 00D8                        _v22 00D4                        _isr 1A58  
                      _val 0077                        _num 0078                        fsr0 0004  
                      indf 0000               ___awmod@sign 0025               ___flmul@aexp 003C  
             ___flmul@bexp 0041               ___flmul@sign 003B               ___flmul@temp 0046  
             ___flmul@prod 0042               ___fltol@exp1 0065                       l3011 1E86  
                     l3003 1E60                       l3101 1F38                       l3021 1EB9  
                     l3013 1E8F                       l3005 1E72                       l3015 1EA1  
                     l3007 1E75                       l3023 1EBF                       l3111 1DCD  
                     l3103 1DAF                       l3017 1EAF                       l3009 1E82  
                     l3113 1DDF                       l3105 1DB9                       l3123 1D5F  
                     l3019 1EB0                       l3115 1DED                       l3107 1DBC  
                     l4011 1AD5                       l4003 1155                       l2411 1C90  
                     l2403 1C7C                       l4101 1FF6                       l2501 12A1  
                     l3125 1D63                       l3117 1DF6                       l3109 1DC9  
                     l4013 1ADB                       l4005 1165                       l2421 1CB0  
                     l2413 1C94                       l2405 1C80                       l4111 1CD2  
                     l4103 1FF7                       l4031 1D5D                       l4023 1D0F  
                     l2511 12B5                       l2503 12A5                       l3119 1DFC  
                     l4015 1AE8                       l2423 1CB7                       l2415 1C98  
                     l2407 1C86                       l4113 1CE2                       l4121 1AB5  
                     l4025 1D25                       l4041 1047                       l2601 142E  
                     l2521 12C9                       l2513 12B9                       l2505 12A9  
                     l3081 1EFE                       l3073 1EDE                       l4017 1AEF  
                     l4009 1AD3                       l2417 1CA9                       l2409 1C89  
                     l2425 1CBD                       l4201 15DD                       l4115 1CE8  
                     l4107 1CC2                       l4123 1ABA                       l4131 1C36  
                     l4027 1D41                       l4051 10AF                       l4043 104B  
                     l4035 100D                       l2611 143E                       l2603 1433  
                     l2531 12DA                       l2523 12CD                       l2515 12BD  
                     l2507 12AD                       l2451 122C                       l3083 1F02  
                     l3091 1F1C                       l3075 1EF3                       l3067 1EC8  
                     l4019 1AF5                       l2419 1CAF                       l4211 1668  
                     l4203 1604                       l4117 1A4B                       l4109 1CC8  
                     l4125 1AC1                       l4133 1C3B                       l4141 1C2D  
                     l4029 1D5B                       l4045 106F                       l4037 1023  
                     l2621 145F                       l2613 1444                       l2605 1435  
                     l2541 1320                       l2533 12F1                       l2525 12D1  
                     l2517 12C1                       l2509 12B1                       l2461 1243  
                     l2453 1233                       l3077 1EF4                       l3069 1ED5  
                     l4301 0257                       l4221 16C3                       l4213 1673  
                     l4205 1639                       l4127 1AC7                       l4119 1AB0  
                     l4135 1C57                       l3191 080C                       l4071 1F70  
                     l4063 1F47                       l4047 1073                       l4039 103F  
                     l4055 1000                       l2631 1497                       l2623 1463  
                     l2607 1439                       l2551 133F                       l2543 1321  
                     l2535 1311                       l2527 12D5                       l2519 12C5  
                     l2471 125B                       l2463 1248                       l2455 1239  
                     l3079 1EFC                       l4311 0312                       l4303 02B2  
                     l4231 1763                       l4223 16C9                       l4215 1679  
                     l4207 163D                       l4151 14CB                       l4129 1ACC  
                     l4137 1C5F                       l3193 1A7C                       l3185 0800  
                     l3601 1B06                       l4081 1F92                       l4065 1F4C  
                     l4049 10AD                       l4057 100A                       l2641 14AE  
                     l2633 149C                       l2625 1481                       l2617 144C  
                     l2609 143A                       l2561 1367                       l2545 132A  
                     l2537 131A                       l2529 12D9                       l2481 1271  
                     l2473 1260                       l2465 1250                       l2457 123D  
                     l3097 1F23                       l3089 1F0A                       l4321 034A  
                     l4313 0318                       l4305 02F1                       l4241 001E  
                     l4233 178C                       l4225 16E8                       l4217 169C  
                     l4209 1641                       l4161 150B                       l4153 14D0  
                     l4145 14B7                       l3611 1BB9                       l3195 1A85  
                     l3187 0803                       l3603 1B0A                       l4091 1FC3  
                     l4083 1F96                       l4075 1F79                       l4067 1F50  
                     l4139 1BF9                       l4411 1B36                       l4059 100C  
                     l2643 14B2                       l2635 149D                       l2627 148A  
                     l2619 1451                       l2571 1380                       l2563 1370  
                     l2555 1348                       l2539 131C                       l2547 132E  
                     l2491 1285                       l2483 1272                       l2475 1266  
                     l2467 1251                       l2459 123E                       l3099 1F33  
                     l4331 03D3                       l4323 034F                       l4315 0325  
                     l4307 0305                       l4251 00AF                       l4243 0047  
                     l4227 1733                       l4219 16BF                       l4235 1794  
                     l4171 1541                       l4163 151E                       l4155 14D4  
                     l4147 14BE                       l3621 1BDD                       l3613 1BBD  
                     l3197 1A89                       l3189 0805                       l3605 1B19  
                     l4093 1FCD                       l4085 1FA4                       l4077 1F7E  
                     l4069 1F60                       l4413 1B3E                       l2637 14A1  
                     l2629 148F                       l2581 13E4                       l2565 1372  
                     l2557 135F                       l2549 133A                       l2573 1385  
                     l2485 1277                       l2493 1287                       l2477 1267  
                     l2469 1253                       l3701 1E4B                       l4341 04DC  
                     l4333 042E                       l4325 0356                       l4317 0334  
                     l4309 030E                       l4253 00B7                       l4245 006E  
                     l4261 0129                       l4237 17A3                       l4229 175A  
                     l4181 1582                       l4173 1545                       l4165 1522  
                     l4157 14E4                       l4149 14C4                       l4421 0886  
                     l3623 1BE4                       l3615 1BC8                       l3199 1A8E  
                     l3607 1B1E                       l4095 1FD7                       l4087 1FB4  
                     l4079 1F8B                       l4407 1B26                       l2639 14A3  
                     l2591 1417                       l2575 139B                       l2583 13F3  
                     l2567 1376                       l2559 1363                       l2495 1295  
                     l2487 127C                       l2479 126D                       l3711 1B7C  
                     l3631 0812                       l3703 1E51                       l4351 04FA  
                     l4343 04E3                       l4335 046D                       l4327 035A  
                     l4319 033B                       l4263 015E                       l4255 00D5  
                     l4247 007D                       l4239 17EA                       l4191 15B5  
                     l4175 1548                       l4183 1593                       l4159 14E8  
                     l4167 1532                       l4431 089E                       l4423 0887  
                     l4415 0878                       l3625 1BEB                       l3617 1BCF  
                     l3801 0AC6                       l4097 1FED                       l4089 1FBF  
                     l4409 1B29                       l2593 1420                       l2585 1409  
                     l2577 13D9                       l2569 1377                       l2497 1299  
                     l2489 1284                       l3721 1B96                       l3713 1B84  
                     l3641 0826                       l3633 0816                       l3705 1E56  
                     l4361 0532                       l4353 0502                       l4345 04E7  
                     l4337 0479                       l4329 0378                       l4281 0209  
                     l4273 01AD                       l4265 01A9                       l4249 00A6  
                     l4193 15C3                       l4185 1595                       l4177 156B  
                     l4169 1540                       l4441 0905                       l4433 08A9  
                     l4425 088C                       l4417 0882                       l3627 1BF2  
                     l3619 1BD6                       l3811 0B66                       l3803 0ADF  
                     l4099 1FF2                       l2595 1424                       l2587 140E  
                     l2579 13DF                       l2499 129D                       l3723 1BA0  
                     l3715 1B87                       l3651 083C                       l3643 082A  
                     l3635 081B                       l3707 1E5B                       l4371 055E  
                     l4363 053A                       l4355 0513                       l4347 04ED  
                     l4339 04D4                       l4283 020F                       l4267 01AB  
                     l4259 0120                       l4195 15C7                       l4179 157E  
                     l4451 092F                       l4443 0910                       l4435 08C9  
                     l4427 088F                       l4419 0885                       l3821 0BD4  
                     l3813 0B8C                       l3805 0AFC                       l3741 094E  
                     l3733 093C                       l2597 1429                       l3725 1BA6  
                     l3717 1B8E                       l3901 05DB                       l3661 085C  
                     l3653 0840                       l3645 082C                       l3637 081D  
                     l3629 080F                       l4381 0586                       l4373 0567  
                     l4365 0546                       l4357 051A                       l4285 021B  
                     l4293 0230                       l4277 01E4                       l4197 15CB  
                     l4349 04F4                       l4189 1599                       l4453 0936  
                     l4445 0914                       l4437 08E7                       l4429 0894  
                     l3831 0BEC                       l3823 0BD8                       l3815 0BB4  
                     l3807 0B29                       l3751 096A                       l3743 0953  
                     l3735 0943                       l2599 142C                       l2951 1199  
                     l2943 1184                       l3727 1BAD                       l3719 1B92  
                     l3663 0863                       l3655 0844                       l3647 0832  
                     l3639 0821                       l4391 05AF                       l4383 058C  
                     l4375 056B                       l4367 054C                       l4359 0529  
                     l4295 023D                       l4287 0222                       l4279 01EE  
                     l4199 15D9                       l4447 091A                       l4439 08F1  
                     l3841 0C0D                       l3833 0BED                       l3825 0BD9  
                     l3817 0BBD                       l3809 0B39                       l3761 097F  
                     l3753 096F                       l3745 0958                       l3737 0949  
                     l2961 11D0                       l2953 11AA                       l2937 116E  
                     l3729 1BB3                       l3913 079B                       l2881 1A7A  
                     l2873 1A6B                       l3657 0855                       l3649 0835  
                     l3665 0869                       l3681 1E13                       l3673 1E05  
                     l3921 0CA6                       l4385 0593                       l4377 0576  
                     l4369 0550                       l4297 024B                       l4289 022B  
                     l4449 0929                       l3843 0C12                       l3851 0C43  
                     l3835 0BF1                       l3827 0BE2                       l3819 0BCB  
                     l3771 099B                       l3763 0984                       l3755 0975  
                     l3747 0960                       l3739 094D                       l2963 11DE  
                     l2955 11AC                       l2939 117B                       l3907 06EA  
                     l2875 1A6C                       l3667 086E                       l3659 085B  
                     l3691 1E2C                       l3683 1E17                       l3675 1E08  
                     l3931 0D9E                       l3923 0CAD                       l4387 0597  
                     l4379 0582                       l4299 0252                       l4491 15AD  
                     l4395 05B9                       l3597 1AFD                       l3861 0C76  
                     l3853 0C50                       l3845 0C20                       l3837 0C05  
                     l3829 0BE8                       l3781 09C6                       l3773 09A0  
                     l3765 098C                       l3757 0979                       l3749 0962  
                     l2965 11DF                       l2957 11B5                       l2949 1191  
                     l3909 06F0                       l2877 1A72                       l3669 0873  
                     l3693 1E30                       l3685 1E1C                       l3677 1E0C  
                     l3941 0E5A                       l3917 0CA0                       l4389 05A3  
                     l4397 05CD                       l3599 1AFF                       l3863 0C84  
                     l3855 0C5B                       l3847 0C24                       l3791 0A63  
                     l3783 09E3                       l3767 098E                       l3759 097A  
                     l2983 1213                       l2975 11FA                       l2967 11E8  
                     l2959 11BE                       l2879 1A78                       l3695 1E34  
                     l3687 1E22                       l3679 1E11                       l3935 0E26  
                     l3919 0CA4                       l3881 07E9                       l3865 0C88  
                     l3857 0C6A                       l3849 0C3D                       l3793 0A6C  
                     l3785 09FF                       l3777 09A9                       l3769 0996  
                     l3873 1A42                       l2985 1223                       l2969 11F2  
                     l2977 120C                       l3697 1E3E                       l3689 1E25  
                     l3953 0FD3                       l3929 0D97                       l3883 07EC  
                     l3891 1A9C                       l3867 0C89                       l3859 0C74  
                     l3795 0A7C                       l3787 0A2B                       l3779 09B9  
                     l3875 1A48                       l3971 10E6                       l3963 10CD  
                     l3699 1E44                       l3947 0F44                       l3939 0E53  
                     l3885 07F7                       l3877 07E0                       l3893 1A9F  
                     l3869 0C94                       l3797 0A99                       l3789 0A47  
                     l3981 1117                       l3973 10F5                       l3957 10B1  
                     l3949 0F4B                       l3879 07E3                       l3895 1AA4  
                     l3887 1A95                       l3799 0AA9                       l3983 1121  
                     l3975 10F7                       l3959 10C4                       l3897 1AA7  
                     l3889 1A96                       l3985 1122                       l3977 1100  
                     l3969 10E0                       l3995 113C                       l3987 112A  
                     l3979 1109                       l3899 05D5                       ?_isr 0070  
                     l3989 1134                       l3997 114E                       STR_1 18A0  
                     STR_2 18AC                       STR_3 18B3                       u3210 1C98  
                     u3211 1C97                       u3205 1C8A                       u3230 1CA9  
                     u3231 1CA8                       u3400 1299                       u3320 123D  
                     u5000 1F38                       u3401 1298                       u3321 123C  
                     u5001 1F37                       u3225 1C99                       u3410 12F1  
                     u3330 1243                       u5010 1DB9                       u3250 1CBD  
                     u3411 12F0                       u3331 1242                       u5011 1DB8  
                     u3251 1CBC                       u3235 1CA5                       u3420 12FC  
                     u3340 1248                       u3501 1351                       u3421 12FA  
                     u3341 1247                       u3245 1CB1                       u3510 1363  
                     u3502 1358                       u3430 12FD                       u3350 1266  
                     u5030 1DCD                       u3190 1C86                       u3511 1362  
                     u3503 135F                       u3415 12ED                       u3351 1265  
                     u5031 1DCC                       u3191 1C85                       u3600 140E  
                     u3520 1367                       u3440 1311                       u3360 1271  
                     u5040 1DDF                       u6000 1E22                       u3601 140D  
                     u3521 1366                       u3441 1310                       u3361 1270  
                     u5041 1DDE                       u5025 1DBE                       u6001 1E21  
                     u3530 1376                       u3450 1320                       u3370 1277  
                     u4410 1A72                       u3531 1375                       u3451 131F  
                     u3371 1276                       u4411 1A71                       u3700 1463  
                     u3620 1424                       u3380 127C                       u5060 1DFC  
                     u6100 1BA0                       u4420 1A78                       u6020 1E34  
                     u3701 1462                       u3621 1423                       u3381 127B  
                     u5061 1DFB                       u5045 1DDB                       u6101 1B9F  
                     u4421 1A77                       u6021 1E33                       u3710 1472  
                     u3630 1429                       u3550 139B                       u3470 1336  
                     u3390 1295                       u6030 1E3E                       u3631 1428  
                     u3615 1419                       u3551 139A                       u3471 1335  
                     u3391 1294                       u5055 1DEE                       u6031 1E3D  
                     u6015 1E26                       u6200 09A0                       u7000 1073  
                     u3720 1481                       u3640 1433                       u3480 133A  
                     u6120 1BB3                       u6201 099F                       u7001 1072  
                     u3721 1480                       u3641 1432                       u3561 13B2  
                     u3553 1397                       u3545 1379                       u3481 1339  
                     u3465 1323                       u6121 1BB2                       u6105 1B9C  
                     u6130 094D                       u3730 148A                       u3650 1439  
                     u3570 13C6                       u3562 13B3                       u3490 133F  
                     u4610 11EE                       u6050 1E51                       u6211 09F1  
                     u6131 094C                       u7011 1082                       u3731 1489  
                     u3715 146D                       u3651 1438                       u3571 13C7  
                     u3563 13B8                       u3491 133E                       u4611 11ED  
                     u6115 1BA7                       u6051 1E50                       u6035 1E3A  
                     u6212 09F8                       u6140 0953                       u7100 1FB3  
                     u7020 10AD                       u7012 1083                       u3740 148F  
                     u3660 143E                       u3580 13E4                       u3572 13CC  
                     u3564 13B9                       u4620 11F2                       u6060 1E56  
                     u6301 0B1B                       u6221 0A0D                       u6213 09FF  
                     u6141 0952                       u7101 1FB2                       u7021 10AC  
                     u7013 1088                       u3741 148E                       u3661 143D  
                     u3581 13E3                       u3573 13CD                       u3565 13BE  
                     u4621 11F1                       u4605 11E1                       u6061 1E55  
                     u6045 1E45                       u6302 0B22                       u6222 0A14  
                     u6150 0958                       u7014 1089                       u7030 100A  
                     u3750 149C                       u3670 1444                       u3590 1409  
                     u3566 13BF                       u4630 11F9                       u6070 1B84  
                     u6311 0B48                       u6303 0B29                       u6231 0A39  
                     u6223 0A1B                       u6151 0957                       u7015 108E  
                     u7031 1009                       u3751 149B                       u3671 1443  
                     u3591 1408                       u4631 11F8                       u6071 1B83  
                     u7200 1C45                       u6400 0BEC                       u6320 0B72  
                     u6312 0B4F                       u6232 0A40                       u6160 0979  
                     u7120 1FC3                       u7040 1F4C                       u7016 108F  
                     u3760 14A1                       u3680 144B                       u4560 117B  
                     u6401 0BEB                       u6313 0B56                       u6241 0A55  
                     u6233 0A47                       u6161 0978                       u7121 1FC2  
                     u7041 1F4B                       u7025 10A9                       u3761 14A0  
                     u3681 144A                       u4561 117A                       u7210 1C69  
                     u6410 0BF1                       u6242 0A5C                       u6170 097F  
                     u7130 1FC9                       u7050 1F50                       u3770 14B2  
                     u3690 1451                       u4730 1E72                       u4650 120B  
                     u4570 118F                       u6090 1B96                       u6411 0BF0  
                     u6331 0B7E                       u6243 0A63                       u6171 097E  
                     u7131 1FC8                       u7115 1FB8                       u7051 1F4F  
                     u3771 14B1                       u3691 1450                       u4731 1E71  
                     u4651 120A                       u4571 118E                       u6091 1B95  
                     u7220 1C7B                       u6420 0C05                       u6340 0B9A  
                     u6332 0B85                       u6180 0984                       u7140 1FCD  
                     u7060 1F70                       u6500 1A48                       u4660 1212  
                     u7300 1604                       u7221 1C7A                       u6421 0C04  
                     u6333 0B8C                       u6325 0B6D                       u6261 0A8B  
                     u6181 0983                       u7141 1FCC                       u7061 1F6F  
                     u6501 1A47                       u4661 1211                       u4645 11FB  
                     u6085 1B88                       u7301 1603                       u6430 0C0C  
                     u6262 0A92                       u6190 099B                       u7150 1FE2  
                     u4910 1ED5                       u4750 1E86                       u4590 11D0  
                     u6510 05DB                       u7310 1668                       u7230 14C4  
                     u6431 0C0B                       u6351 0BA6                       u6271 0AB8  
                     u6263 0A99                       u6255 0A65                       u6191 099A  
                     u4911 1ED4                       u4751 1E85                       u4591 11CF  
                     u6511 05DA                       u7311 1667                       u7231 14C3  
                     u5800 1BBD                       u6440 0C12                       u6352 0BAD  
                     u6272 0ABF                       u7160 1FF2                       u7080 1F91  
                     u4920 1EEC                       u4680 1223                       u6600 0CAD  
                     u7400 00A6                       u7320 16C3                       u7240 14E4  
                     u5801 1BBC                       u6441 0C11                       u6353 0BB4  
                     u6345 0B95                       u6273 0AC6                       u7161 1FF1  
                     u7081 1F90                       u4745 1E77                       u4681 1222  
                     u4585 11B7                       u6601 0CAC                       u7401 00A5  
                     u7321 16C2                       u7241 14E3                       u5810 1BC8  
                     u6450 0C24                       u7170 1FF6                       u4930 1F02  
                     u4770 1EA1                       u7330 175A                       u7250 1532  
                     i1l91 1B7B                       u5811 1BC7                       u6451 0C23  
                     u6291 0AEE                       u7171 1FF5                       u7155 1FDD  
                     u7075 1F83                       u4931 1F01                       u4771 1EA0  
                     u4675 1215                       u4595 11CC                       u7331 1759  
                     u7251 1531                       u5820 1BCF                       u7180 1AB5  
                     u6460 0C33                       u6380 0BD8                       u6292 0AF5  
                     u4940 1F09                       u5900 0832                       u7500 0325  
                     u7420 01E3                       u7340 178C                       u7260 1540  
                     u5821 1BCE                       u7181 1AB4                       u6381 0BD7  
                     u6365 0BB6                       u6293 0AFC                       u6285 0AC8  
                     u4941 1F08                       u4925 1EE7                       u4765 1E88  
                     u6525 05F8                       u5901 0831                       u7501 0324  
                     u7421 01E2                       u7341 178B                       u7261 153F  
                     i1l86 1A63                       u5830 1BD6                       u7190 1AC7  
                     u6470 0C50                       u4790 1EBF                       u6550 06F0  
                     u7510 0334                       u7430 01EE                       u7350 17A3  
                     u7270 1592                       u5831 1BD5                       u7191 1AC6  
                     u6471 0C4F                       u6375 0BCD                       u7095 1FA5  
                     u4791 1EBE                       u4775 1E9D                       u6551 06EF  
                     u6535 0654                       u6615 0CCF                       u7511 0333  
                     u7431 01ED                       u7415 01B0                       u7351 17A2  
                     u7271 1591                       u5840 1BDD                       u6480 0C6A  
                     u4960 1F1B                       u5920 0844                       u6720 0F4B  
                     u6640 0D9E                       u7600 0529                       u7520 034F  
                     u7440 0209                       u7360 001E                       u7280 15C3  
                     u5841 1BDC                       u6481 0C69                       u6465 0C2E  
                     u4961 1F1A                       u4785 1EB1                       u6545 06A9  
                     u5921 0843                       u6721 0F4A                       u6705 0EB8  
                     u6641 0D9D                       u6625 0D0B                       u7601 0528  
                     u7521 034E                       u7505 0321                       u7441 0208  
                     u7425 01DF                       u7361 17FA                       u7281 15C0  
                     u5850 1BE4                       u5770 1B0A                       u6490 0C88  
                     u4970 1F22                       u6810 1130                       u7610 053A  
                     u7450 021B                       u7370 0047                       u7290 15C7  
                     u5851 1BE3                       u5771 1B09                       u6491 0C87  
                     u6475 0C4C                       u6395 0BDB                       u4971 1F21  
                     u4955 1F0B                       u6811 112F                       u5915 0836  
                     u6715 0F03                       u6635 0D56                       u7611 0539  
                     u7515 0330                       u7451 021A                       u7371 0046  
                     u7355 179F                       u7291 15C6                       u5860 1BEB  
                     u7700 1B4B                       u6820 1134                       u5940 0855  
                     u7620 0546                       u7460 023D                       u7380 006E  
                     u5861 1BEA                       u6485 0C66                       u7701 1B4A  
                     u6821 1133                       u6805 1123                       u6565 070D  
                     u5941 0854                       u7621 0545                       u7605 0525  
                     u7461 023C                       u7381 006D                       u7365 17F5  
                     u5870 1BF2                       u5790 1B1E                       u4990 1F33  
                     u6830 113B                       u6590 0CA4                       u7630 0550  
                     u7550 04DB                       u7470 024B                       u7390 007D  
                     u7710 092F                       u5871 1BF1                       u5791 1B1D  
                     u4991 1F32                       u6831 113A                       u6575 075A  
                     u5935 0845                       u6735 0F5E                       u6655 0DB1  
                     u6591 0CA3                       u7631 054F                       u7551 04DA  
                     u7535 03D6                       u7471 024A                       u7391 007C  
                     u7711 092E                       u6920 1AF5                       u6760 10C4  
                     u5960 0869                       u5880 0816                       u6680 0E5A  
                     u7640 055E                       u7560 04F3                       u5785 1B11  
                     u4985 1F25                       u6921 1AF4                       u6905 1AE2  
                     u6761 10C3                       u6585 07A6                       u5961 0868  
                     u5945 0851                       u5881 0815                       u6745 0F9A  
                     u6681 0E59                       u6665 0DED                       u7641 055D  
                     u7561 04F2                       u7545 047C                       u7465 0239  
                     u6930 1D25                       u6850 114D                       u6770 10DE  
                     u5970 086E                       u5890 0821                       u7650 0576  
                     u7570 04FA                       u7490 0304                       u6931 1D24  
                     u6915 1AE9                       u6851 114C                       u6771 10DD  
                     u5971 086D                       u5955 085D                       u5891 0820  
                     u6755 0FD6                       u6675 0E29                       u7651 0575  
                     u7571 04F9                       u7491 0303                       u7395 0079  
                     u6940 1D41                       u6860 1154                       u5980 1E0C  
                     u7660 058C                       u7580 0502                       u6941 1D40  
                     u6861 1153                       u6845 113D                       u5981 1E0B  
                     u7661 058B                       u7645 055A                       u7581 0501  
                     u7485 025A                       u6950 1D5B                       u6790 1117  
                     u5990 1E17                       u7670 05A3                       u7590 0513  
                     u7807 07F2                       u6951 1D5A                       u6791 1116  
                     u5991 1E16                       u6695 0E7C                       u7671 05A2  
                     u7655 0572                       u7591 0512                       u7727 0922  
                     u6960 1023                       u6880 1165                       u7680 05AF  
                     u6961 1022                       u6881 1164                       u6785 1102  
                     u7681 05AE                       u7737 0933                       u6970 103F  
                     u6890 1ADB                       u7690 05CD                       u7747 1A8B  
                     u6955 1D57                       u6971 103E                       u6891 1ADA  
                     u6875 1157                       u6795 1113                       u7691 05CA  
                     u7595 050F                       u6980 104B                       u7757 1AA1  
                     u6981 104A                       u7767 1AA9                       u6991 105A  
                     u6992 105B                       u7777 1CCE                       u6993 1060  
                     u6994 1061                       u7787 1CDE                       u6995 1066  
                     u6996 1067                       u7797 1CF0                       _TXIF 0064  
        ?_Lcd_Write_String 0021                       _conv 1BF6                       _main 0878  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0023  
             _sprintf$1181 00B2            __end_of_Lcd_Cmd 07FB                      ??_isr 0073  
            ___fltol@sign1 0064                      ?_conv 0048            __end_of___fladd 14B4  
                    ?_main 0070            __end_of___awdiv 0878            __end_of___flneg 100D  
          __end_of___awmod 1E60            __end_of___flmul 0C9D            __end_of___flsub 1DAF  
          __end_of___fltol 1F44                      _ANSEL 0188            __end_of___lldiv 1EC8  
          ___awdiv@divisor 0026            __end_of___llmod 1E05            __end_of___lwdiv 1CC2  
                    i1l202 1A38            __end_of___lwmod 1BB8            ___awdiv@counter 002A  
          __end_of_cfg_adc 1A92                      _SPBRG 0099    __size_of_Lcd_Set_Cursor 0026  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
          __end_of_dpowers 18A0            __end_of_int_adc 1B7C                      _scale 0C9D  
          __end_of_isdigit 1A7C                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 05D2           __end_of_Lcd_Init 1D0F  
         __end_of_Lcd_Port 1BF6            __initialization 000F               __end_of_conv 1C36  
             __end_of_main 093C                     ??_conv 004C                     ??_main 00CD  
       __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0024  
                   ?_scale 0048                     _ADRESH 001E           ___awdiv@dividend 0028  
                   _ANSELH 0189                     i1l3181 1B74                     i1l3173 1B4C  
                   i1l3183 1B7A                     i1l3175 1B57                     i1l3511 1A5E  
                   i1l3177 1B62                     i1l3179 1B69                     i1l3509 1A58  
                   i1l2785 1A31                     u521_20 1B57                     u521_21 1B56  
                   u575_20 1A5E                     u575_21 1A5D                  ??_Lcd_Cmd 0020  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 001B           __end_of___xxtofl 2000  
         __end_of__powers_ 1844                     ___flge 100D                     ___fleq 1D0F  
                ??___fladd 0064                     ___wmul 1AD3                  ??___awdiv 0076  
                   _cfg_io 0800                  ??___flneg 0075                  ??___awmod 0075  
                ??___flmul 0036                  ??___flsub 0077                  ??___fltol 005F  
                ??___lldiv 0075                  ??___llmod 0075                  ??___lwdiv 0028  
                ??___lwmod 0075                  ??_cfg_adc 0075                     _fround 05D2  
         ___awdiv@quotient 002C            ___awmod@divisor 0020                     _valadc 1A31  
          ___awmod@counter 0024                     conv@aa 0054                  ??_int_adc 0072  
                ??_isdigit 0075         __size_of__Umul8_16 0029                     saved_w 007E  
                ??_sprintf 00AD            Lcd_Set_Cursor@a 0024            Lcd_Set_Cursor@b 0022  
               ___flge@ff1 0020                 ___flge@ff2 0024               ___xxtofl@arg 002A  
             ___xxtofl@exp 0029               ___xxtofl@val 0020                 ___fleq@ff1 0020  
               ___fleq@ff2 0024    __end_of__initialization 001A                 ___flneg@f1 0020  
        __end_of_Lcd_Clear 1A58                 ___fltol@f1 005B             __pcstackCOMMON 0070  
            __end_of_scale 1000             _Lcd_Set_Cursor 1AAD                 __div_to_l_ 116E  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070            __div_to_l_@exp1 002D  
          __div_to_l_@cntr 002C                    ??_scale 004C            __div_to_l_@quot 0028  
             sprintf@width 00BD                 __pbssBANK1 00D0              __div_to_l_@f1 0020  
            __div_to_l_@f2 0024          __end_of__Umul8_16 1B23                 __pmaintext 0878  
                  ?___flge 0020                    ?___fleq 0020                    ?___wmul 0020  
                  ?_cfg_io 0070                 __pintentry 0004         __size_of_send_char 000A  
       __size_of_send_crct 0029                    ?_fround 0048  __size_of_Lcd_Write_String 0046  
                  ?_valadc 0070     __end_of_Lcd_Set_Cursor 1AD3                  ?___xxtofl 0020  
               ??_Lcd_Init 0022                 ??_Lcd_Port 0075                send_crct@st 0020  
               __stringtab 1800             _Lcd_Write_Char 1A92                    _Lcd_Cmd 07DF  
        __end_of__npowers_ 1878                 _scale$1180 0056            __size_of___flge 00A4  
          __size_of___fleq 0050                    ___fladd 122C                    ___awdiv 080F  
                  ___flneg 1000                    ___awmod 1E05                    ___flmul 093C  
                  ___flsub 1D5F                    ___fltol 1EC8                    ___lldiv 1E60  
          __size_of___wmul 0027                    ___llmod 1DAF            __size_of_cfg_io 000F  
                  ___lwdiv 1C7C                    ___lwmod 1B7C                    _cfg_adc 1A7C  
          __size_of_fround 020D            ?_Lcd_Set_Cursor 0022            __size_of_valadc 0008  
                  __ptext1 14B4                    __ptext2 0C9D                    __ptext3 1E05  
                  __ptext4 080F                    __ptext5 1A6A                    __ptext6 05D2  
                  __ptext7 1B7C                    __ptext8 1C7C                    __ptext9 10B1  
              ?__div_to_l_ 0020                    _dpowers 1878                    _int_adc 1B4C  
                  _isdigit 1A6A               __size_of_isr 0012                 ??___xxtofl 0024  
         ___awmod@dividend 0022                    _sprintf 14B4                    clrloop0 1A3A  
   __end_of_Lcd_Write_Char 1AAD       end_of_initialization 001A          __end_of_send_char 1A4B  
        __end_of_send_crct 1B4C            ___lldiv@divisor 0020            ___lldiv@counter 002C  
                _RCSTAbits 0018                    psplit$0 B0032                  Lcd_Port@a 0075  
           __tdiv_to_l_@f1 0020             __tdiv_to_l_@f2 0024              send_char@dato 0075  
            ??__tdiv_to_l_ 0028                  _PORTCbits 0007                ___fladd@grs 006F  
            ___xxtofl@sign 0028                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0021          Lcd_Write_String@i 0026                 conv@result 0050  
              ___flmul@grs 003D                  _TXSTAbits 0098        __size_of__div_to_l_ 00BE  
                _Lcd_Clear 1A4B             __end_of___flge 10B1             __end_of___fleq 1D5F  
           __end_of___wmul 1AFA             __end_of_cfg_io 080F           _Lcd_Write_String 1C36  
        pnum$text1_split_1 0032                _BAUDCTLbits 0187             __end_of_fround 07DF  
           __end_of_valadc 1A39        start_initialization 000F        __end_of__tdiv_to_l_ 116E  
              __end_of_isr 1A6A          __size_of_Lcd_Init 004D          __size_of_Lcd_Port 003E  
          ___llmod@divisor 0020            ___llmod@counter 0076                 ?_Lcd_Clear 0070  
                 ??___flge 0028                   ??___fleq 0028                   ??___wmul 0075  
                 ??_cfg_io 0075                  __Umul8_16 1AFA            Lcd_Write_Char@a 0020  
                 ??_fround 004C                   ??_valadc 0070              sprintf@tmpval 00BF  
                ___fladd@a 0060                  ___fladd@b 005C                 fround@prec 005B  
                ___flmul@a 0032                  ___flmul@b 002E                __pbssCOMMON 0077  
                ___flsub@a 00A0                  ___flsub@b 00A4                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0          __size_of___xxtofl 00BC  
                 ?_Lcd_Cmd 0070                sprintf@flag 00BB                sprintf@eexp 00C3  
              sprintf@fval 00C5                sprintf@prec 00CA           ___lwdiv@dividend 0026  
         ??_Lcd_Set_Cursor 0023                   ?___fladd 005C                   ?___awdiv 0026  
                 ?___flneg 0020                   ?___awmod 0020                   ?___flmul 002E  
                 ?___flsub 00A0                   ?___fltol 005B                   ?___lldiv 0020  
                 ?___llmod 0020                  __npowers_ 1844                 ?__Umul8_16 0075  
                 ?___lwdiv 0024                   ?___lwmod 0020                   ?_cfg_adc 0070  
                __pstrings 1800                __tdiv_to_l_ 10B1                 send_crct@i 0021  
             ??__div_to_l_ 0075                   ?_int_adc 0070                   ?_isdigit 0070  
         ___lwdiv@quotient 0029                   ?_sprintf 00A8             __size_of_scale 0363  
        interrupt_function 0004             ___wmul@product 0075                  clear_ram0 1A39  
                _send_char 1A41                  _send_crct 1B23                   Lcd_Cmd@a 0076  
                 _PIR1bits 000C         __end_of__div_to_l_ 122C                ??_Lcd_Clear 0077  
               _ADCON0bits 001F                __stringbase 180F                 _ADCON1bits 009F  
        ___wmul@multiplier 0020           ??_Lcd_Write_Char 0076                   _Lcd_Init 1CC2  
                 _Lcd_Port 1BB8   __end_of_Lcd_Write_String 1C7C           __size_of_Lcd_Cmd 001C  
               ?_send_char 0070                 ?_send_crct 0070                ??__Umul8_16 0020  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000D  
         __size_of___awmod 005B           __size_of___flmul 0361           __size_of___flsub 0050  
         __size_of___fltol 007C           __size_of___lldiv 0068           __size_of___llmod 0056  
         __size_of___lwdiv 0046           __size_of___lwmod 003C           __size_of_cfg_adc 0016  
              _fround$1178 0057                _fround$1179 0053         __end_of__stringtab 1810  
              _isdigit$994 0075                 sprintf@val 00B7                   ___xxtofl 1F44  
         __size_of_int_adc 0030           __size_of_isdigit 0012            ___lwdiv@divisor 0024  
          ___lwdiv@counter 002B                   __ptext10 116E                   __ptext11 1AD3  
                 __ptext20 1B23                   __ptext12 1DAF                   __ptext21 1A41  
                 __ptext13 1E60                   __ptext30 1AAD                   __ptext22 1BF6  
                 __ptext14 1EC8                   __ptext31 1CC2                   __ptext23 1F44  
                 __ptext15 1D5F                   __ptext32 1A4B                   __ptext24 093C  
                 __ptext16 122C                   __ptext33 07DF                   __ptext25 1AFA  
                 __ptext17 1000                   __ptext34 1BB8                   __ptext26 0800  
                 __ptext18 100D                   __ptext35 1A58                   __ptext27 1A7C  
                 __ptext19 1D0F                   __ptext36 1B4C                   __ptext28 1C36  
                 __ptext37 1A31                   __ptext29 1A92                   __powers_ 1810  
         __size_of_sprintf F11E              __size_of_conv 0040              __size_of_main 00C4  
                pnum$text1 000B                   isdigit@c 0076                   scale@scl 005A  
                 intlevel1 0000                  sprintf@ap 00B6           __tdiv_to_l_@exp1 0031  
         __tdiv_to_l_@cntr 0030                  sprintf@sp 00C9           __tdiv_to_l_@quot 002C  
         ___lwmod@dividend 0022           ___lldiv@dividend 0024                   valadc@aa 0071  
              ??_send_char 0075                ??_send_crct 0076                  stringcode 180A  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 0025               ?__tdiv_to_l_ 0020  
   __Umul8_16@multiplicand 0075                   sprintf@c 00CC                   sprintf@f 00A8  
         ___lldiv@quotient 0028            ___lwmod@divisor 0020            ___lwmod@counter 0076  
                 stringdir 180A                   stringtab 1800              ___fladd@signs 006C  
             ___fladd@aexp 006D               ___fladd@bexp 006E       __Umul8_16@multiplier 0026  
        __Umul8_16@product 0022  
