

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jul 23 15:40:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0007                     _PORTCbits	set	7
   289  003F                     _RC7	set	63
   290  0047                     _RD7	set	71
   291  0046                     _RD6	set	70
   292  0045                     _RD5	set	69
   293  0044                     _RD4	set	68
   294  0043                     _RD3	set	67
   295  0042                     _RD2	set	66
   296  0041                     _RD1	set	65
   297  0040                     _RD0	set	64
   298  0087                     _TRISCbits	set	135
   299  0088                     _TRISD	set	136
   300                           
   301                           	psect	strings
   302  0003                     __pstrings:
   303  0003                     stringtab:
   304  0003                     __stringtab:
   305  0003                     stringcode:	
   306                           ;	String table - string pointers are 1 byte each
   307                           
   308  0003                     stringdir:
   309  0003  3000               	movlw	high stringdir
   310  0004  008A               	movwf	10
   311  0005  0804               	movf	4,w
   312  0006  0A84               	incf	4,f
   313  0007  0782               	addwf	2,f
   314  0008                     __stringbase:
   315  0008  3400               	retlw	0
   316  0009                     __end_of__stringtab:
   317  0009                     STR_5:
   318  0009  3477               	retlw	119	;'w'
   319  000A  3477               	retlw	119	;'w'
   320  000B  3477               	retlw	119	;'w'
   321  000C  342E               	retlw	46	;'.'
   322  000D  3465               	retlw	101	;'e'
   323  000E  346C               	retlw	108	;'l'
   324  000F  3465               	retlw	101	;'e'
   325  0010  3463               	retlw	99	;'c'
   326  0011  3474               	retlw	116	;'t'
   327  0012  3472               	retlw	114	;'r'
   328  0013  346F               	retlw	111	;'o'
   329  0014  3453               	retlw	83	;'S'
   330  0015  346F               	retlw	111	;'o'
   331  0016  346D               	retlw	109	;'m'
   332  0017  3465               	retlw	101	;'e'
   333  0018  342E               	retlw	46	;'.'
   334  0019  3463               	retlw	99	;'c'
   335  001A  346F               	retlw	111	;'o'
   336  001B  346D               	retlw	109	;'m'
   337  001C  3400               	retlw	0
   338  001D                     STR_1:
   339  001D  344C               	retlw	76	;'L'
   340  001E  3443               	retlw	67	;'C'
   341  001F  3444               	retlw	68	;'D'
   342  0020  3420               	retlw	32	;' '
   343  0021  344C               	retlw	76	;'L'
   344  0022  3469               	retlw	105	;'i'
   345  0023  3462               	retlw	98	;'b'
   346  0024  3472               	retlw	114	;'r'
   347  0025  3461               	retlw	97	;'a'
   348  0026  3472               	retlw	114	;'r'
   349  0027  3479               	retlw	121	;'y'
   350  0028  3420               	retlw	32	;' '
   351  0029  3466               	retlw	102	;'f'
   352  002A  346F               	retlw	111	;'o'
   353  002B  3472               	retlw	114	;'r'
   354  002C  3400               	retlw	0
   355  002D                     STR_3:
   356  002D  3444               	retlw	68	;'D'
   357  002E  3465               	retlw	101	;'e'
   358  002F  3476               	retlw	118	;'v'
   359  0030  3465               	retlw	101	;'e'
   360  0031  346C               	retlw	108	;'l'
   361  0032  346F               	retlw	111	;'o'
   362  0033  3470               	retlw	112	;'p'
   363  0034  3465               	retlw	101	;'e'
   364  0035  3464               	retlw	100	;'d'
   365  0036  3420               	retlw	32	;' '
   366  0037  3442               	retlw	66	;'B'
   367  0038  3479               	retlw	121	;'y'
   368  0039  3400               	retlw	0
   369  003A                     STR_4:
   370  003A  3465               	retlw	101	;'e'
   371  003B  346C               	retlw	108	;'l'
   372  003C  3465               	retlw	101	;'e'
   373  003D  3463               	retlw	99	;'c'
   374  003E  3474               	retlw	116	;'t'
   375  003F  3472               	retlw	114	;'r'
   376  0040  346F               	retlw	111	;'o'
   377  0041  3453               	retlw	83	;'S'
   378  0042  346F               	retlw	111	;'o'
   379  0043  346D               	retlw	109	;'m'
   380  0044  3465               	retlw	101	;'e'
   381  0045  3400               	retlw	0
   382  0046                     STR_6:
   383  0046  3448               	retlw	72	;'H'
   384  0047  346F               	retlw	111	;'o'
   385  0048  346C               	retlw	108	;'l'
   386  0049  3461               	retlw	97	;'a'
   387  004A  3420               	retlw	32	;' '
   388  004B  344D               	retlw	77	;'M'
   389  004C  3475               	retlw	117	;'u'
   390  004D  346E               	retlw	110	;'n'
   391  004E  3464               	retlw	100	;'d'
   392  004F  346F               	retlw	111	;'o'
   393  0050  3400               	retlw	0
   394  0051                     STR_2:
   395  0051  344D               	retlw	77	;'M'
   396  0052  3450               	retlw	80	;'P'
   397  0053  344C               	retlw	76	;'L'
   398  0054  3441               	retlw	65	;'A'
   399  0055  3442               	retlw	66	;'B'
   400  0056  3420               	retlw	32	;' '
   401  0057  3458               	retlw	88	;'X'
   402  0058  3443               	retlw	67	;'C'
   403  0059  3438               	retlw	56	;'8'
   404  005A  3400               	retlw	0
   405                           
   406                           	psect	cinit
   407  07FC                     start_initialization:	
   408                           ; #config settings
   409                           
   410  07FC                     __initialization:
   411  07FC                     end_of_initialization:	
   412                           ;End of C runtime variable initialization code
   413                           
   414  07FC                     __end_of__initialization:
   415  07FC  0183               	clrf	3
   416  07FD  120A  118A  2EF9   	ljmp	_main	;jump to C main() function
   417                           
   418                           	psect	cstackCOMMON
   419  0070                     __pcstackCOMMON:
   420  0070                     ?_Lcd_Init:
   421  0070                     ?_Lcd_Clear:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_Lcd_Write_String:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_Lcd_Shift_Left:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_Lcd_Shift_Right:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_Lcd_Write_Char:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_main:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_Lcd_Port:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ??_Lcd_Port:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_Lcd_Cmd:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     Lcd_Port@a:	
   449                           ; 1 bytes @ 0x0
   450                           
   451                           
   452                           ; 1 bytes @ 0x0
   453  0070                     	ds	1
   454  0071                     ??_Lcd_Write_Char:
   455  0071                     ??_Lcd_Cmd:	
   456                           ; 1 bytes @ 0x1
   457                           
   458                           
   459                           ; 1 bytes @ 0x1
   460  0071                     	ds	1
   461  0072                     Lcd_Write_Char@a:
   462                           
   463                           ; 1 bytes @ 0x2
   464  0072                     	ds	1
   465  0073                     ??_Lcd_Write_String:
   466  0073                     Lcd_Cmd@a:	
   467                           ; 1 bytes @ 0x3
   468                           
   469  0073                     Lcd_Write_String@i:	
   470                           ; 1 bytes @ 0x3
   471                           
   472                           
   473                           ; 2 bytes @ 0x3
   474  0073                     	ds	1
   475  0074                     ??_Lcd_Init:
   476  0074                     ??_Lcd_Clear:	
   477                           ; 1 bytes @ 0x4
   478                           
   479  0074                     ?_Lcd_Set_Cursor:	
   480                           ; 1 bytes @ 0x4
   481                           
   482  0074                     ??_Lcd_Shift_Left:	
   483                           ; 1 bytes @ 0x4
   484                           
   485  0074                     ??_Lcd_Shift_Right:	
   486                           ; 1 bytes @ 0x4
   487                           
   488  0074                     Lcd_Set_Cursor@b:	
   489                           ; 1 bytes @ 0x4
   490                           
   491                           
   492                           ; 1 bytes @ 0x4
   493  0074                     	ds	1
   494  0075                     ??_Lcd_Set_Cursor:
   495  0075                     Lcd_Write_String@a:	
   496                           ; 1 bytes @ 0x5
   497                           
   498                           
   499                           ; 1 bytes @ 0x5
   500  0075                     	ds	1
   501  0076                     Lcd_Set_Cursor@a:
   502                           
   503                           ; 1 bytes @ 0x6
   504  0076                     	ds	1
   505  0077                     Lcd_Set_Cursor@temp:
   506                           
   507                           ; 1 bytes @ 0x7
   508  0077                     	ds	1
   509  0078                     ??_main:
   510                           
   511                           ; 1 bytes @ 0x8
   512  0078                     	ds	3
   513  007B                     main@a:
   514                           
   515                           ; 2 bytes @ 0xB
   516  007B                     	ds	2
   517                           
   518                           	psect	maintext
   519  06F9                     __pmaintext:	
   520 ;;
   521 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   522 ;;
   523 ;; *************** function _main *****************
   524 ;; Defined at:
   525 ;;		line 39 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;  a               2   11[COMMON] unsigned int 
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : B00/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         0       0       0       0       0
   540 ;;      Locals:         2       0       0       0       0
   541 ;;      Temps:          3       0       0       0       0
   542 ;;      Totals:         5       0       0       0       0
   543 ;;Total ram usage:        5 bytes
   544 ;; Hardware stack levels required when called:    3
   545 ;; This function calls:
   546 ;;		_Lcd_Clear
   547 ;;		_Lcd_Init
   548 ;;		_Lcd_Set_Cursor
   549 ;;		_Lcd_Shift_Left
   550 ;;		_Lcd_Shift_Right
   551 ;;		_Lcd_Write_Char
   552 ;;		_Lcd_Write_String
   553 ;; This function is called by:
   554 ;;		Startup code after reset
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           
   559                           ;psect for function _main
   560  06F9                     _main:
   561  06F9                     l863:	
   562                           ;incstack = 0
   563                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   564                           
   565                           
   566                           ;main.c: 40:   unsigned int a;;main.c: 41:   TRISD = 0x00;
   567  06F9  1683               	bsf	3,5	;RP0=1, select bank1
   568  06FA  1303               	bcf	3,6	;RP1=0, select bank1
   569  06FB  0188               	clrf	8	;volatile
   570  06FC                     l865:
   571                           
   572                           ;main.c: 42:   TRISCbits.TRISC6 = 0;
   573  06FC  1307               	bcf	7,6	;volatile
   574  06FD                     l867:
   575                           
   576                           ;main.c: 43:   TRISCbits.TRISC7 = 0;
   577  06FD  1387               	bcf	7,7	;volatile
   578  06FE                     l869:
   579                           
   580                           ;main.c: 44:   Lcd_Init();
   581  06FE  120A  118A  26AF  120A  118A  	fcall	_Lcd_Init
   582  0703                     l871:
   583                           
   584                           ;main.c: 46:   {;main.c: 47:     Lcd_Clear();
   585  0703  120A  118A  25CC  120A  118A  	fcall	_Lcd_Clear
   586  0708                     l873:
   587                           
   588                           ;main.c: 48:     Lcd_Set_Cursor(1,1);
   589  0708  01F4               	clrf	Lcd_Set_Cursor@b
   590  0709  0AF4               	incf	Lcd_Set_Cursor@b,f
   591  070A  3001               	movlw	1
   592  070B  120A  118A  2628  120A  118A  	fcall	_Lcd_Set_Cursor
   593  0710                     l875:
   594                           
   595                           ;main.c: 49:     Lcd_Write_String("LCD Library for");
   596  0710  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   597  0711  120A  118A  264C  120A  118A  	fcall	_Lcd_Write_String
   598  0716                     l877:
   599                           
   600                           ;main.c: 50:     Lcd_Set_Cursor(2,1);
   601  0716  01F4               	clrf	Lcd_Set_Cursor@b
   602  0717  0AF4               	incf	Lcd_Set_Cursor@b,f
   603  0718  3002               	movlw	2
   604  0719  120A  118A  2628  120A  118A  	fcall	_Lcd_Set_Cursor
   605  071E                     l879:
   606                           
   607                           ;main.c: 51:     Lcd_Write_String("MPLAB XC8");
   608  071E  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   609  071F  120A  118A  264C  120A  118A  	fcall	_Lcd_Write_String
   610  0724                     l881:
   611                           
   612                           ;main.c: 52:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   613  0724  3015               	movlw	21
   614  0725  00FA               	movwf	??_main+2
   615  0726  304B               	movlw	75
   616  0727  00F9               	movwf	??_main+1
   617  0728  30BE               	movlw	190
   618  0729  00F8               	movwf	??_main
   619  072A                     u197:
   620  072A  0BF8               	decfsz	??_main,f
   621  072B  2F2A               	goto	u197
   622  072C  0BF9               	decfsz	??_main+1,f
   623  072D  2F2A               	goto	u197
   624  072E  0BFA               	decfsz	??_main+2,f
   625  072F  2F2A               	goto	u197
   626  0730  0000               	nop
   627  0731                     l883:
   628                           
   629                           ;main.c: 53:     Lcd_Clear();
   630  0731  120A  118A  25CC  120A  118A  	fcall	_Lcd_Clear
   631  0736                     l885:
   632                           
   633                           ;main.c: 54:     Lcd_Set_Cursor(1,1);
   634  0736  01F4               	clrf	Lcd_Set_Cursor@b
   635  0737  0AF4               	incf	Lcd_Set_Cursor@b,f
   636  0738  3001               	movlw	1
   637  0739  120A  118A  2628  120A  118A  	fcall	_Lcd_Set_Cursor
   638  073E                     l887:
   639                           
   640                           ;main.c: 55:     Lcd_Write_String("Developed By");
   641  073E  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   642  073F  120A  118A  264C  120A  118A  	fcall	_Lcd_Write_String
   643  0744                     l889:
   644                           
   645                           ;main.c: 56:     Lcd_Set_Cursor(2,1);
   646  0744  01F4               	clrf	Lcd_Set_Cursor@b
   647  0745  0AF4               	incf	Lcd_Set_Cursor@b,f
   648  0746  3002               	movlw	2
   649  0747  120A  118A  2628  120A  118A  	fcall	_Lcd_Set_Cursor
   650  074C                     l891:
   651                           
   652                           ;main.c: 57:     Lcd_Write_String("electroSome");
   653  074C  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   654  074D  120A  118A  264C  120A  118A  	fcall	_Lcd_Write_String
   655  0752                     l893:
   656                           
   657                           ;main.c: 58:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   658  0752  3015               	movlw	21
   659  0753  00FA               	movwf	??_main+2
   660  0754  304B               	movlw	75
   661  0755  00F9               	movwf	??_main+1
   662  0756  30BE               	movlw	190
   663  0757  00F8               	movwf	??_main
   664  0758                     u207:
   665  0758  0BF8               	decfsz	??_main,f
   666  0759  2F58               	goto	u207
   667  075A  0BF9               	decfsz	??_main+1,f
   668  075B  2F58               	goto	u207
   669  075C  0BFA               	decfsz	??_main+2,f
   670  075D  2F58               	goto	u207
   671  075E  0000               	nop
   672  075F                     l895:
   673                           
   674                           ;main.c: 59:     Lcd_Clear();
   675  075F  120A  118A  25CC  120A  118A  	fcall	_Lcd_Clear
   676  0764                     l897:
   677                           
   678                           ;main.c: 60:     Lcd_Set_Cursor(1,1);
   679  0764  01F4               	clrf	Lcd_Set_Cursor@b
   680  0765  0AF4               	incf	Lcd_Set_Cursor@b,f
   681  0766  3001               	movlw	1
   682  0767  120A  118A  2628  120A  118A  	fcall	_Lcd_Set_Cursor
   683  076C                     l899:
   684                           
   685                           ;main.c: 61:     Lcd_Write_String("www.electroSome.com");
   686  076C  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   687  076D  120A  118A  264C  120A  118A  	fcall	_Lcd_Write_String
   688  0772                     l901:
   689                           
   690                           ;main.c: 63:     for(a=0;a<15;a++)
   691  0772  01FB               	clrf	main@a
   692  0773  01FC               	clrf	main@a+1
   693  0774                     l907:
   694                           
   695                           ;main.c: 64:     {;main.c: 65:         _delay((unsigned long)((300)*(8000000/4000.0)));
   696  0774  3004               	movlw	4
   697  0775  00FA               	movwf	??_main+2
   698  0776  300C               	movlw	12
   699  0777  00F9               	movwf	??_main+1
   700  0778  3033               	movlw	51
   701  0779  00F8               	movwf	??_main
   702  077A                     u217:
   703  077A  0BF8               	decfsz	??_main,f
   704  077B  2F7A               	goto	u217
   705  077C  0BF9               	decfsz	??_main+1,f
   706  077D  2F7A               	goto	u217
   707  077E  0BFA               	decfsz	??_main+2,f
   708  077F  2F7A               	goto	u217
   709  0780  2F81               	nop2
   710  0781                     l909:
   711                           
   712                           ;main.c: 66:         Lcd_Shift_Left();
   713  0781  120A  118A  25D9  120A  118A  	fcall	_Lcd_Shift_Left
   714  0786                     l911:
   715                           
   716                           ;main.c: 67:     }
   717  0786  3001               	movlw	1
   718  0787  07FB               	addwf	main@a,f
   719  0788  1803               	skipnc
   720  0789  0AFC               	incf	main@a+1,f
   721  078A  3000               	movlw	0
   722  078B  07FC               	addwf	main@a+1,f
   723  078C                     l913:
   724  078C  3000               	movlw	0
   725  078D  027C               	subwf	main@a+1,w
   726  078E  300F               	movlw	15
   727  078F  1903               	skipnz
   728  0790  027B               	subwf	main@a,w
   729  0791  1C03               	skipc
   730  0792  2F94               	goto	u171
   731  0793  2F95               	goto	u170
   732  0794                     u171:
   733  0794  2F74               	goto	l907
   734  0795                     u170:
   735  0795                     l915:
   736                           
   737                           ;main.c: 69:     for(a=0;a<15;a++)
   738  0795  01FB               	clrf	main@a
   739  0796  01FC               	clrf	main@a+1
   740  0797                     l921:
   741                           
   742                           ;main.c: 70:     {;main.c: 71:         _delay((unsigned long)((300)*(8000000/4000.0)));
   743  0797  3004               	movlw	4
   744  0798  00FA               	movwf	??_main+2
   745  0799  300C               	movlw	12
   746  079A  00F9               	movwf	??_main+1
   747  079B  3033               	movlw	51
   748  079C  00F8               	movwf	??_main
   749  079D                     u227:
   750  079D  0BF8               	decfsz	??_main,f
   751  079E  2F9D               	goto	u227
   752  079F  0BF9               	decfsz	??_main+1,f
   753  07A0  2F9D               	goto	u227
   754  07A1  0BFA               	decfsz	??_main+2,f
   755  07A2  2F9D               	goto	u227
   756  07A3  2FA4               	nop2
   757  07A4                     l923:
   758                           
   759                           ;main.c: 72:         Lcd_Shift_Right();
   760  07A4  120A  118A  25E6  120A  118A  	fcall	_Lcd_Shift_Right
   761  07A9                     l925:
   762                           
   763                           ;main.c: 73:     }
   764  07A9  3001               	movlw	1
   765  07AA  07FB               	addwf	main@a,f
   766  07AB  1803               	skipnc
   767  07AC  0AFC               	incf	main@a+1,f
   768  07AD  3000               	movlw	0
   769  07AE  07FC               	addwf	main@a+1,f
   770  07AF                     l927:
   771  07AF  3000               	movlw	0
   772  07B0  027C               	subwf	main@a+1,w
   773  07B1  300F               	movlw	15
   774  07B2  1903               	skipnz
   775  07B3  027B               	subwf	main@a,w
   776  07B4  1C03               	skipc
   777  07B5  2FB7               	goto	u181
   778  07B6  2FB8               	goto	u180
   779  07B7                     u181:
   780  07B7  2F97               	goto	l921
   781  07B8                     u180:
   782  07B8                     l929:
   783                           
   784                           ;main.c: 75:     Lcd_Clear();
   785  07B8  120A  118A  25CC  120A  118A  	fcall	_Lcd_Clear
   786                           
   787                           ;main.c: 76:     Lcd_Set_Cursor(2,1);
   788  07BD  01F4               	clrf	Lcd_Set_Cursor@b
   789  07BE  0AF4               	incf	Lcd_Set_Cursor@b,f
   790  07BF  3002               	movlw	2
   791  07C0  120A  118A  2628  120A  118A  	fcall	_Lcd_Set_Cursor
   792                           
   793                           ;main.c: 77:     Lcd_Write_Char('H');
   794  07C5  3048               	movlw	72
   795  07C6  120A  118A  260D  120A  118A  	fcall	_Lcd_Write_Char
   796                           
   797                           ;main.c: 78:     Lcd_Write_Char('o');
   798  07CB  306F               	movlw	111
   799  07CC  120A  118A  260D  120A  118A  	fcall	_Lcd_Write_Char
   800                           
   801                           ;main.c: 79:     Lcd_Write_Char('l');
   802  07D1  306C               	movlw	108
   803  07D2  120A  118A  260D  120A  118A  	fcall	_Lcd_Write_Char
   804                           
   805                           ;main.c: 80:     Lcd_Write_Char('a');
   806  07D7  3061               	movlw	97
   807  07D8  120A  118A  260D  120A  118A  	fcall	_Lcd_Write_Char
   808                           
   809                           ;main.c: 81:     Lcd_Set_Cursor(1,1);
   810  07DD  01F4               	clrf	Lcd_Set_Cursor@b
   811  07DE  0AF4               	incf	Lcd_Set_Cursor@b,f
   812  07DF  3001               	movlw	1
   813  07E0  120A  118A  2628  120A  118A  	fcall	_Lcd_Set_Cursor
   814  07E5                     l931:
   815                           
   816                           ;main.c: 82:     Lcd_Write_String("Hola Mundo");
   817  07E5  303E               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   818  07E6  120A  118A  264C  120A  118A  	fcall	_Lcd_Write_String
   819  07EB                     l933:
   820                           
   821                           ;main.c: 83:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   822  07EB  3015               	movlw	21
   823  07EC  00FA               	movwf	??_main+2
   824  07ED  304B               	movlw	75
   825  07EE  00F9               	movwf	??_main+1
   826  07EF  30BE               	movlw	190
   827  07F0  00F8               	movwf	??_main
   828  07F1                     u237:
   829  07F1  0BF8               	decfsz	??_main,f
   830  07F2  2FF1               	goto	u237
   831  07F3  0BF9               	decfsz	??_main+1,f
   832  07F4  2FF1               	goto	u237
   833  07F5  0BFA               	decfsz	??_main+2,f
   834  07F6  2FF1               	goto	u237
   835  07F7  0000               	nop
   836  07F8  2F03               	goto	l871
   837  07F9  120A  118A  2800   	ljmp	start
   838  07FC                     __end_of_main:
   839                           
   840                           	psect	text1
   841  064C                     __ptext1:	
   842 ;; *************** function _Lcd_Write_String *****************
   843 ;; Defined at:
   844 ;;		line 110 in file "LCD.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  a               1    wreg     PTR unsigned char 
   847 ;;		 -> STR_6(11), STR_5(20), STR_4(12), STR_3(13), 
   848 ;;		 -> STR_2(10), STR_1(16), 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  a               1    5[COMMON] PTR unsigned char 
   851 ;;		 -> STR_6(11), STR_5(20), STR_4(12), STR_3(13), 
   852 ;;		 -> STR_2(10), STR_1(16), 
   853 ;;  i               2    3[COMMON] int 
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   863 ;;      Params:         0       0       0       0       0
   864 ;;      Locals:         3       0       0       0       0
   865 ;;      Temps:          0       0       0       0       0
   866 ;;      Totals:         3       0       0       0       0
   867 ;;Total ram usage:        3 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; Hardware stack levels required when called:    2
   870 ;; This function calls:
   871 ;;		_Lcd_Write_Char
   872 ;; This function is called by:
   873 ;;		_main
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           
   878                           ;psect for function _Lcd_Write_String
   879  064C                     _Lcd_Write_String:
   880                           
   881                           ;incstack = 0
   882                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   883                           ;Lcd_Write_String@a stored from wreg
   884  064C  00F5               	movwf	Lcd_Write_String@a
   885  064D                     l855:
   886                           
   887                           ;LCD.c: 111:     int i;;LCD.c: 112:     for (i = 0; a[i] != '\0'; i++)
   888  064D  01F3               	clrf	Lcd_Write_String@i
   889  064E  01F4               	clrf	Lcd_Write_String@i+1
   890  064F  2E63               	goto	l861
   891  0650                     l857:
   892                           
   893                           ;LCD.c: 113:         Lcd_Write_Char(a[i]);
   894  0650  0873               	movf	Lcd_Write_String@i,w
   895  0651  0775               	addwf	Lcd_Write_String@a,w
   896  0652  0084               	movwf	4
   897  0653  120A  118A  2003  120A  118A  	fcall	stringdir
   898  0658  120A  118A  260D  120A  118A  	fcall	_Lcd_Write_Char
   899  065D                     l859:
   900  065D  3001               	movlw	1
   901  065E  07F3               	addwf	Lcd_Write_String@i,f
   902  065F  1803               	skipnc
   903  0660  0AF4               	incf	Lcd_Write_String@i+1,f
   904  0661  3000               	movlw	0
   905  0662  07F4               	addwf	Lcd_Write_String@i+1,f
   906  0663                     l861:
   907  0663  0873               	movf	Lcd_Write_String@i,w
   908  0664  0775               	addwf	Lcd_Write_String@a,w
   909  0665  0084               	movwf	4
   910  0666  120A  118A  2003  120A  118A  	fcall	stringdir
   911  066B  3A00               	xorlw	0
   912  066C  1D03               	skipz
   913  066D  2E6F               	goto	u161
   914  066E  2E70               	goto	u160
   915  066F                     u161:
   916  066F  2E50               	goto	l857
   917  0670                     u160:
   918  0670                     l97:
   919  0670  0008               	return
   920  0671                     __end_of_Lcd_Write_String:
   921                           
   922                           	psect	text2
   923  060D                     __ptext2:	
   924 ;; *************** function _Lcd_Write_Char *****************
   925 ;; Defined at:
   926 ;;		line 94 in file "LCD.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  a               1    wreg     unsigned char 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  a               1    2[COMMON] unsigned char 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, status,2, status,0, pclath, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   940 ;;      Params:         0       0       0       0       0
   941 ;;      Locals:         1       0       0       0       0
   942 ;;      Temps:          1       0       0       0       0
   943 ;;      Totals:         2       0       0       0       0
   944 ;;Total ram usage:        2 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    1
   947 ;; This function calls:
   948 ;;		_Lcd_Port
   949 ;; This function is called by:
   950 ;;		_main
   951 ;;		_Lcd_Write_String
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           
   956                           ;psect for function _Lcd_Write_Char
   957  060D                     _Lcd_Write_Char:
   958                           
   959                           ;incstack = 0
   960                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   961                           ;Lcd_Write_Char@a stored from wreg
   962  060D  00F2               	movwf	Lcd_Write_Char@a
   963  060E                     l713:
   964                           
   965                           ;LCD.c: 98:     PORTCbits.RC6 = 1;
   966  060E  1283               	bcf	3,5	;RP0=0, select bank0
   967  060F  1303               	bcf	3,6	;RP1=0, select bank0
   968  0610  1707               	bsf	7,6	;volatile
   969  0611                     l715:
   970                           
   971                           ;LCD.c: 99:     Lcd_Port(a);
   972  0611  0872               	movf	Lcd_Write_Char@a,w
   973  0612  120A  118A  2671  120A  118A  	fcall	_Lcd_Port
   974  0617                     l717:
   975                           
   976                           ;LCD.c: 100:     RC7 = 1;
   977  0617  1283               	bcf	3,5	;RP0=0, select bank0
   978  0618  1303               	bcf	3,6	;RP1=0, select bank0
   979  0619  1787               	bsf	7,7	;volatile
   980  061A                     l719:
   981                           
   982                           ;LCD.c: 101:     _delay((unsigned long)((40)*(8000000/4000000.0)));
   983  061A  301A               	movlw	26
   984  061B  00F1               	movwf	??_Lcd_Write_Char
   985  061C                     u247:
   986  061C  0BF1               	decfsz	??_Lcd_Write_Char,f
   987  061D  2E1C               	goto	u247
   988  061E  0000               	nop
   989  061F                     l721:
   990                           
   991                           ;LCD.c: 102:     RC7 = 0;
   992  061F  1283               	bcf	3,5	;RP0=0, select bank0
   993  0620  1303               	bcf	3,6	;RP1=0, select bank0
   994  0621  1387               	bcf	7,7	;volatile
   995  0622                     l723:
   996                           
   997                           ;LCD.c: 103:     _delay((unsigned long)((40)*(8000000/4000000.0)));
   998  0622  301A               	movlw	26
   999  0623  00F1               	movwf	??_Lcd_Write_Char
  1000  0624                     u257:
  1001  0624  0BF1               	decfsz	??_Lcd_Write_Char,f
  1002  0625  2E24               	goto	u257
  1003  0626  0000               	nop
  1004  0627                     l91:
  1005  0627  0008               	return
  1006  0628                     __end_of_Lcd_Write_Char:
  1007                           
  1008                           	psect	text3
  1009  05E6                     __ptext3:	
  1010 ;; *************** function _Lcd_Shift_Right *****************
  1011 ;; Defined at:
  1012 ;;		line 116 in file "LCD.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0, pclath, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0
  1029 ;;      Totals:         0       0       0       0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    2
  1033 ;; This function calls:
  1034 ;;		_Lcd_Cmd
  1035 ;; This function is called by:
  1036 ;;		_main
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           
  1041                           ;psect for function _Lcd_Shift_Right
  1042  05E6                     _Lcd_Shift_Right:
  1043  05E6                     l769:	
  1044                           ;incstack = 0
  1045                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
  1046                           
  1047                           
  1048                           ;LCD.c: 117:     Lcd_Cmd(0x01);
  1049  05E6  3001               	movlw	1
  1050  05E7  120A  118A  25F3  120A  118A  	fcall	_Lcd_Cmd
  1051                           
  1052                           ;LCD.c: 118:     Lcd_Cmd(0x0C);
  1053  05EC  300C               	movlw	12
  1054  05ED  120A  118A  25F3  120A  118A  	fcall	_Lcd_Cmd
  1055  05F2                     l100:
  1056  05F2  0008               	return
  1057  05F3                     __end_of_Lcd_Shift_Right:
  1058                           
  1059                           	psect	text4
  1060  05D9                     __ptext4:	
  1061 ;; *************** function _Lcd_Shift_Left *****************
  1062 ;; Defined at:
  1063 ;;		line 121 in file "LCD.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2, status,0, pclath, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1077 ;;      Params:         0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0
  1080 ;;      Totals:         0       0       0       0       0
  1081 ;;Total ram usage:        0 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:    2
  1084 ;; This function calls:
  1085 ;;		_Lcd_Cmd
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           
  1092                           ;psect for function _Lcd_Shift_Left
  1093  05D9                     _Lcd_Shift_Left:
  1094  05D9                     l767:	
  1095                           ;incstack = 0
  1096                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
  1097                           
  1098                           
  1099                           ;LCD.c: 122:     Lcd_Cmd(0x01);
  1100  05D9  3001               	movlw	1
  1101  05DA  120A  118A  25F3  120A  118A  	fcall	_Lcd_Cmd
  1102                           
  1103                           ;LCD.c: 123:     Lcd_Cmd(0x08);
  1104  05DF  3008               	movlw	8
  1105  05E0  120A  118A  25F3  120A  118A  	fcall	_Lcd_Cmd
  1106  05E5                     l103:
  1107  05E5  0008               	return
  1108  05E6                     __end_of_Lcd_Shift_Left:
  1109                           
  1110                           	psect	text5
  1111  0628                     __ptext5:	
  1112 ;; *************** function _Lcd_Set_Cursor *****************
  1113 ;; Defined at:
  1114 ;;		line 69 in file "LCD.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  a               1    wreg     unsigned char 
  1117 ;;  b               1    4[COMMON] unsigned char 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  a               1    6[COMMON] unsigned char 
  1120 ;;  temp            1    7[COMMON] unsigned char 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2, status,0, pclath, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1130 ;;      Params:         1       0       0       0       0
  1131 ;;      Locals:         2       0       0       0       0
  1132 ;;      Temps:          1       0       0       0       0
  1133 ;;      Totals:         4       0       0       0       0
  1134 ;;Total ram usage:        4 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; Hardware stack levels required when called:    2
  1137 ;; This function calls:
  1138 ;;		_Lcd_Cmd
  1139 ;; This function is called by:
  1140 ;;		_main
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           
  1145                           ;psect for function _Lcd_Set_Cursor
  1146  0628                     _Lcd_Set_Cursor:
  1147                           
  1148                           ;incstack = 0
  1149                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1150                           ;Lcd_Set_Cursor@a stored from wreg
  1151  0628  00F6               	movwf	Lcd_Set_Cursor@a
  1152  0629                     l843:
  1153                           
  1154                           ;LCD.c: 70:     char temp;;LCD.c: 71:     if (a == 1) {
  1155  0629  0376               	decf	Lcd_Set_Cursor@a,w
  1156  062A  1D03               	btfss	3,2
  1157  062B  2E2D               	goto	u141
  1158  062C  2E2E               	goto	u140
  1159  062D                     u141:
  1160  062D  2E3A               	goto	l849
  1161  062E                     u140:
  1162  062E                     l845:
  1163                           
  1164                           ;LCD.c: 72:         temp = 0x80 + b - 1;
  1165  062E  0874               	movf	Lcd_Set_Cursor@b,w
  1166  062F  3E7F               	addlw	127
  1167  0630  00F5               	movwf	??_Lcd_Set_Cursor
  1168  0631  0875               	movf	??_Lcd_Set_Cursor,w
  1169  0632  00F7               	movwf	Lcd_Set_Cursor@temp
  1170  0633                     l847:
  1171                           
  1172                           ;LCD.c: 73:         Lcd_Cmd(temp);
  1173  0633  0877               	movf	Lcd_Set_Cursor@temp,w
  1174  0634  120A  118A  25F3  120A  118A  	fcall	_Lcd_Cmd
  1175                           
  1176                           ;LCD.c: 74:     } else if (a == 2) {
  1177  0639  2E4B               	goto	l85
  1178  063A                     l849:
  1179  063A  3002               	movlw	2
  1180  063B  0676               	xorwf	Lcd_Set_Cursor@a,w
  1181  063C  1D03               	btfss	3,2
  1182  063D  2E3F               	goto	u151
  1183  063E  2E40               	goto	u150
  1184  063F                     u151:
  1185  063F  2E4B               	goto	l85
  1186  0640                     u150:
  1187  0640                     l851:
  1188                           
  1189                           ;LCD.c: 75:         temp = 0xC0 + b - 1;
  1190  0640  0874               	movf	Lcd_Set_Cursor@b,w
  1191  0641  3EBF               	addlw	191
  1192  0642  00F5               	movwf	??_Lcd_Set_Cursor
  1193  0643  0875               	movf	??_Lcd_Set_Cursor,w
  1194  0644  00F7               	movwf	Lcd_Set_Cursor@temp
  1195  0645                     l853:
  1196                           
  1197                           ;LCD.c: 76:         Lcd_Cmd(temp);
  1198  0645  0877               	movf	Lcd_Set_Cursor@temp,w
  1199  0646  120A  118A  25F3  120A  118A  	fcall	_Lcd_Cmd
  1200  064B                     l85:
  1201  064B  0008               	return
  1202  064C                     __end_of_Lcd_Set_Cursor:
  1203                           
  1204                           	psect	text6
  1205  06AF                     __ptext6:	
  1206 ;; *************** function _Lcd_Init *****************
  1207 ;; Defined at:
  1208 ;;		line 80 in file "LCD.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;		None
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;		None
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		wreg, status,2, status,0, pclath, cstack
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1222 ;;      Params:         0       0       0       0       0
  1223 ;;      Locals:         0       0       0       0       0
  1224 ;;      Temps:          3       0       0       0       0
  1225 ;;      Totals:         3       0       0       0       0
  1226 ;;Total ram usage:        3 bytes
  1227 ;; Hardware stack levels used:    1
  1228 ;; Hardware stack levels required when called:    2
  1229 ;; This function calls:
  1230 ;;		_Lcd_Cmd
  1231 ;;		_Lcd_Port
  1232 ;; This function is called by:
  1233 ;;		_main
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           
  1238                           ;psect for function _Lcd_Init
  1239  06AF                     _Lcd_Init:
  1240  06AF                     l735:	
  1241                           ;incstack = 0
  1242                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1243                           
  1244                           
  1245                           ;LCD.c: 81:     Lcd_Port(0x00);
  1246  06AF  3000               	movlw	0
  1247  06B0  120A  118A  2671  120A  118A  	fcall	_Lcd_Port
  1248  06B5                     l737:
  1249                           
  1250                           ;LCD.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1251  06B5  3034               	movlw	52
  1252  06B6  00F5               	movwf	??_Lcd_Init+1
  1253  06B7  30F1               	movlw	241
  1254  06B8  00F4               	movwf	??_Lcd_Init
  1255  06B9                     u267:
  1256  06B9  0BF4               	decfsz	??_Lcd_Init,f
  1257  06BA  2EB9               	goto	u267
  1258  06BB  0BF5               	decfsz	??_Lcd_Init+1,f
  1259  06BC  2EB9               	goto	u267
  1260  06BD  2EBE               	nop2
  1261  06BE                     l739:
  1262                           
  1263                           ;LCD.c: 83:     Lcd_Cmd(0x3F);
  1264  06BE  303F               	movlw	63
  1265  06BF  120A  118A  25F3  120A  118A  	fcall	_Lcd_Cmd
  1266                           
  1267                           ;LCD.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1268  06C4  300D               	movlw	13
  1269  06C5  00F5               	movwf	??_Lcd_Init+1
  1270  06C6  30FB               	movlw	251
  1271  06C7  00F4               	movwf	??_Lcd_Init
  1272  06C8                     u277:
  1273  06C8  0BF4               	decfsz	??_Lcd_Init,f
  1274  06C9  2EC8               	goto	u277
  1275  06CA  0BF5               	decfsz	??_Lcd_Init+1,f
  1276  06CB  2EC8               	goto	u277
  1277  06CC  2ECD               	nop2
  1278  06CD                     l741:
  1279                           
  1280                           ;LCD.c: 85:     Lcd_Cmd(0x3F);
  1281  06CD  303F               	movlw	63
  1282  06CE  120A  118A  25F3  120A  118A  	fcall	_Lcd_Cmd
  1283  06D3                     l743:
  1284                           
  1285                           ;LCD.c: 86:     _delay((unsigned long)((110)*(8000000/4000.0)));
  1286  06D3  3002               	movlw	2
  1287  06D4  00F6               	movwf	??_Lcd_Init+2
  1288  06D5  301E               	movlw	30
  1289  06D6  00F5               	movwf	??_Lcd_Init+1
  1290  06D7  30B3               	movlw	179
  1291  06D8  00F4               	movwf	??_Lcd_Init
  1292  06D9                     u287:
  1293  06D9  0BF4               	decfsz	??_Lcd_Init,f
  1294  06DA  2ED9               	goto	u287
  1295  06DB  0BF5               	decfsz	??_Lcd_Init+1,f
  1296  06DC  2ED9               	goto	u287
  1297  06DD  0BF6               	decfsz	??_Lcd_Init+2,f
  1298  06DE  2ED9               	goto	u287
  1299  06DF  2EE0               	nop2
  1300                           
  1301                           ;LCD.c: 87:     Lcd_Cmd(0x3F);
  1302  06E0  303F               	movlw	63
  1303  06E1  120A  118A  25F3  120A  118A  	fcall	_Lcd_Cmd
  1304                           
  1305                           ;LCD.c: 89:     Lcd_Cmd(0x38);
  1306  06E6  3038               	movlw	56
  1307  06E7  120A  118A  25F3  120A  118A  	fcall	_Lcd_Cmd
  1308                           
  1309                           ;LCD.c: 90:     Lcd_Cmd(0x0C);
  1310  06EC  300C               	movlw	12
  1311  06ED  120A  118A  25F3  120A  118A  	fcall	_Lcd_Cmd
  1312                           
  1313                           ;LCD.c: 91:     Lcd_Cmd(0x06);
  1314  06F2  3006               	movlw	6
  1315  06F3  120A  118A  25F3  120A  118A  	fcall	_Lcd_Cmd
  1316  06F8                     l88:
  1317  06F8  0008               	return
  1318  06F9                     __end_of_Lcd_Init:
  1319                           
  1320                           	psect	text7
  1321  05CC                     __ptext7:	
  1322 ;; *************** function _Lcd_Clear *****************
  1323 ;; Defined at:
  1324 ;;		line 64 in file "LCD.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      void 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2, status,0, pclath, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1338 ;;      Params:         0       0       0       0       0
  1339 ;;      Locals:         0       0       0       0       0
  1340 ;;      Temps:          0       0       0       0       0
  1341 ;;      Totals:         0       0       0       0       0
  1342 ;;Total ram usage:        0 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    2
  1345 ;; This function calls:
  1346 ;;		_Lcd_Cmd
  1347 ;; This function is called by:
  1348 ;;		_main
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           
  1353                           ;psect for function _Lcd_Clear
  1354  05CC                     _Lcd_Clear:
  1355  05CC                     l745:	
  1356                           ;incstack = 0
  1357                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1358                           
  1359                           
  1360                           ;LCD.c: 65:     Lcd_Cmd(0);
  1361  05CC  3000               	movlw	0
  1362  05CD  120A  118A  25F3  120A  118A  	fcall	_Lcd_Cmd
  1363                           
  1364                           ;LCD.c: 66:     Lcd_Cmd(1);
  1365  05D2  3001               	movlw	1
  1366  05D3  120A  118A  25F3  120A  118A  	fcall	_Lcd_Cmd
  1367  05D8                     l79:
  1368  05D8  0008               	return
  1369  05D9                     __end_of_Lcd_Clear:
  1370                           
  1371                           	psect	text8
  1372  05F3                     __ptext8:	
  1373 ;; *************** function _Lcd_Cmd *****************
  1374 ;; Defined at:
  1375 ;;		line 56 in file "LCD.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  a               1    wreg     unsigned char 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  a               1    3[COMMON] unsigned char 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, status,2, status,0, pclath, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1389 ;;      Params:         0       0       0       0       0
  1390 ;;      Locals:         1       0       0       0       0
  1391 ;;      Temps:          2       0       0       0       0
  1392 ;;      Totals:         3       0       0       0       0
  1393 ;;Total ram usage:        3 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    1
  1396 ;; This function calls:
  1397 ;;		_Lcd_Port
  1398 ;; This function is called by:
  1399 ;;		_Lcd_Clear
  1400 ;;		_Lcd_Set_Cursor
  1401 ;;		_Lcd_Init
  1402 ;;		_Lcd_Shift_Right
  1403 ;;		_Lcd_Shift_Left
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           
  1408                           ;psect for function _Lcd_Cmd
  1409  05F3                     _Lcd_Cmd:
  1410                           
  1411                           ;incstack = 0
  1412                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1413                           ;Lcd_Cmd@a stored from wreg
  1414  05F3  00F3               	movwf	Lcd_Cmd@a
  1415  05F4                     l725:
  1416                           
  1417                           ;LCD.c: 57:     PORTCbits.RC6 = 0;
  1418  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  1419  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  1420  05F6  1307               	bcf	7,6	;volatile
  1421  05F7                     l727:
  1422                           
  1423                           ;LCD.c: 58:     Lcd_Port(a);
  1424  05F7  0873               	movf	Lcd_Cmd@a,w
  1425  05F8  120A  118A  2671  120A  118A  	fcall	_Lcd_Port
  1426  05FD                     l729:
  1427                           
  1428                           ;LCD.c: 59:     RC7 = 1;
  1429  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  1430  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  1431  05FF  1787               	bsf	7,7	;volatile
  1432  0600                     l731:
  1433                           
  1434                           ;LCD.c: 60:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1435  0600  300B               	movlw	11
  1436  0601  00F2               	movwf	??_Lcd_Cmd+1
  1437  0602  3062               	movlw	98
  1438  0603  00F1               	movwf	??_Lcd_Cmd
  1439  0604                     u297:
  1440  0604  0BF1               	decfsz	??_Lcd_Cmd,f
  1441  0605  2E04               	goto	u297
  1442  0606  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1443  0607  2E04               	goto	u297
  1444  0608  0000               	nop
  1445  0609                     l733:
  1446                           
  1447                           ;LCD.c: 61:     RC7 = 0;
  1448  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1449  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1450  060B  1387               	bcf	7,7	;volatile
  1451  060C                     l76:
  1452  060C  0008               	return
  1453  060D                     __end_of_Lcd_Cmd:
  1454                           
  1455                           	psect	text9
  1456  0671                     __ptext9:	
  1457 ;; *************** function _Lcd_Port *****************
  1458 ;; Defined at:
  1459 ;;		line 13 in file "LCD.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  a               1    wreg     unsigned char 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  a               1    0[COMMON] unsigned char 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1473 ;;      Params:         0       0       0       0       0
  1474 ;;      Locals:         1       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0
  1476 ;;      Totals:         1       0       0       0       0
  1477 ;;Total ram usage:        1 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_Lcd_Cmd
  1483 ;;		_Lcd_Init
  1484 ;;		_Lcd_Write_Char
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           
  1489                           ;psect for function _Lcd_Port
  1490  0671                     _Lcd_Port:
  1491                           
  1492                           ;incstack = 0
  1493                           ; Regs used in _Lcd_Port: [wreg]
  1494                           ;Lcd_Port@a stored from wreg
  1495  0671  00F0               	movwf	Lcd_Port@a
  1496  0672                     l695:
  1497                           
  1498                           ;LCD.c: 15:     if (a & 1)
  1499  0672  1C70               	btfss	Lcd_Port@a,0
  1500  0673  2E75               	goto	u11
  1501  0674  2E76               	goto	u10
  1502  0675                     u11:
  1503  0675  2E7A               	goto	l57
  1504  0676                     u10:
  1505  0676                     l697:
  1506                           
  1507                           ;LCD.c: 16:         RD0 = 1;
  1508  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0678  1408               	bsf	8,0	;volatile
  1511  0679  2E7D               	goto	l58
  1512  067A                     l57:	
  1513                           ;LCD.c: 17:     else
  1514                           
  1515                           
  1516                           ;LCD.c: 18:         RD0 = 0;
  1517  067A  1283               	bcf	3,5	;RP0=0, select bank0
  1518  067B  1303               	bcf	3,6	;RP1=0, select bank0
  1519  067C  1008               	bcf	8,0	;volatile
  1520  067D                     l58:
  1521                           
  1522                           ;LCD.c: 20:     if (a & 2)
  1523  067D  1CF0               	btfss	Lcd_Port@a,1
  1524  067E  2E80               	goto	u21
  1525  067F  2E81               	goto	u20
  1526  0680                     u21:
  1527  0680  2E83               	goto	l59
  1528  0681                     u20:
  1529  0681                     l699:
  1530                           
  1531                           ;LCD.c: 21:         RD1 = 1;
  1532  0681  1488               	bsf	8,1	;volatile
  1533  0682  2E84               	goto	l60
  1534  0683                     l59:	
  1535                           ;LCD.c: 22:     else
  1536                           
  1537                           
  1538                           ;LCD.c: 23:         RD1 = 0;
  1539  0683  1088               	bcf	8,1	;volatile
  1540  0684                     l60:
  1541                           
  1542                           ;LCD.c: 25:     if (a & 4)
  1543  0684  1D70               	btfss	Lcd_Port@a,2
  1544  0685  2E87               	goto	u31
  1545  0686  2E88               	goto	u30
  1546  0687                     u31:
  1547  0687  2E8A               	goto	l61
  1548  0688                     u30:
  1549  0688                     l701:
  1550                           
  1551                           ;LCD.c: 26:         RD2 = 1;
  1552  0688  1508               	bsf	8,2	;volatile
  1553  0689  2E8B               	goto	l62
  1554  068A                     l61:	
  1555                           ;LCD.c: 27:     else
  1556                           
  1557                           
  1558                           ;LCD.c: 28:         RD2 = 0;
  1559  068A  1108               	bcf	8,2	;volatile
  1560  068B                     l62:
  1561                           
  1562                           ;LCD.c: 30:     if (a & 8)
  1563  068B  1DF0               	btfss	Lcd_Port@a,3
  1564  068C  2E8E               	goto	u41
  1565  068D  2E8F               	goto	u40
  1566  068E                     u41:
  1567  068E  2E91               	goto	l63
  1568  068F                     u40:
  1569  068F                     l703:
  1570                           
  1571                           ;LCD.c: 31:         RD3 = 1;
  1572  068F  1588               	bsf	8,3	;volatile
  1573  0690  2E92               	goto	l64
  1574  0691                     l63:	
  1575                           ;LCD.c: 32:     else
  1576                           
  1577                           
  1578                           ;LCD.c: 33:         RD3 = 0;
  1579  0691  1188               	bcf	8,3	;volatile
  1580  0692                     l64:
  1581                           
  1582                           ;LCD.c: 35:     if (a & 16)
  1583  0692  1E70               	btfss	Lcd_Port@a,4
  1584  0693  2E95               	goto	u51
  1585  0694  2E96               	goto	u50
  1586  0695                     u51:
  1587  0695  2E98               	goto	l65
  1588  0696                     u50:
  1589  0696                     l705:
  1590                           
  1591                           ;LCD.c: 36:         RD4 = 1;
  1592  0696  1608               	bsf	8,4	;volatile
  1593  0697  2E99               	goto	l66
  1594  0698                     l65:	
  1595                           ;LCD.c: 37:     else
  1596                           
  1597                           
  1598                           ;LCD.c: 38:         RD4 = 0;
  1599  0698  1208               	bcf	8,4	;volatile
  1600  0699                     l66:
  1601                           
  1602                           ;LCD.c: 40:     if (a & 32)
  1603  0699  1EF0               	btfss	Lcd_Port@a,5
  1604  069A  2E9C               	goto	u61
  1605  069B  2E9D               	goto	u60
  1606  069C                     u61:
  1607  069C  2E9F               	goto	l67
  1608  069D                     u60:
  1609  069D                     l707:
  1610                           
  1611                           ;LCD.c: 41:         RD5 = 1;
  1612  069D  1688               	bsf	8,5	;volatile
  1613  069E  2EA0               	goto	l68
  1614  069F                     l67:	
  1615                           ;LCD.c: 42:     else
  1616                           
  1617                           
  1618                           ;LCD.c: 43:         RD5 = 0;
  1619  069F  1288               	bcf	8,5	;volatile
  1620  06A0                     l68:
  1621                           
  1622                           ;LCD.c: 45:     if (a & 64)
  1623  06A0  1F70               	btfss	Lcd_Port@a,6
  1624  06A1  2EA3               	goto	u71
  1625  06A2  2EA4               	goto	u70
  1626  06A3                     u71:
  1627  06A3  2EA6               	goto	l69
  1628  06A4                     u70:
  1629  06A4                     l709:
  1630                           
  1631                           ;LCD.c: 46:         RD6 = 1;
  1632  06A4  1708               	bsf	8,6	;volatile
  1633  06A5  2EA7               	goto	l70
  1634  06A6                     l69:	
  1635                           ;LCD.c: 47:     else
  1636                           
  1637                           
  1638                           ;LCD.c: 48:         RD6 = 0;
  1639  06A6  1308               	bcf	8,6	;volatile
  1640  06A7                     l70:
  1641                           
  1642                           ;LCD.c: 50:     if (a & 128)
  1643  06A7  1FF0               	btfss	Lcd_Port@a,7
  1644  06A8  2EAA               	goto	u81
  1645  06A9  2EAB               	goto	u80
  1646  06AA                     u81:
  1647  06AA  2EAD               	goto	l71
  1648  06AB                     u80:
  1649  06AB                     l711:
  1650                           
  1651                           ;LCD.c: 51:         RD7 = 1;
  1652  06AB  1788               	bsf	8,7	;volatile
  1653  06AC  2EAE               	goto	l73
  1654  06AD                     l71:	
  1655                           ;LCD.c: 52:     else
  1656                           
  1657                           
  1658                           ;LCD.c: 53:         RD7 = 0;
  1659  06AD  1388               	bcf	8,7	;volatile
  1660  06AE                     l73:
  1661  06AE  0008               	return
  1662  06AF                     __end_of_Lcd_Port:
  1663  007E                     btemp	set	126	;btemp
  1664  007E                     wtemp0	set	126
  1665                           
  1666                           	psect	config
  1667                           
  1668                           ;Config register CONFIG1 @ 0x2007
  1669                           ;	Oscillator Selection bits
  1670                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1671                           ;	Watchdog Timer Enable bit
  1672                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1673                           ;	Power-up Timer Enable bit
  1674                           ;	PWRTE = OFF, PWRT disabled
  1675                           ;	RE3/MCLR pin function select bit
  1676                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1677                           ;	Code Protection bit
  1678                           ;	CP = OFF, Program memory code protection is disabled
  1679                           ;	Data Code Protection bit
  1680                           ;	CPD = OFF, Data memory code protection is disabled
  1681                           ;	Brown Out Reset Selection bits
  1682                           ;	BOREN = OFF, BOR disabled
  1683                           ;	Internal External Switchover bit
  1684                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1685                           ;	Fail-Safe Clock Monitor Enabled bit
  1686                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1687                           ;	Low Voltage Programming Enable bit
  1688                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1689                           ;	In-Circuit Debugger Mode bit
  1690                           ;	DEBUG = 0x1, unprogrammed default
  1691  2007                     	org	8199
  1692  2007  20D6               	dw	8406
  1693                           
  1694                           ;Config register CONFIG2 @ 0x2008
  1695                           ;	Brown-out Reset Selection bit
  1696                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1697                           ;	Flash Program Memory Self Write Enable bits
  1698                           ;	WRT = OFF, Write protection off
  1699  2008                     	org	8200
  1700  2008  3FFF               	dw	16383

Data Sizes:
    Strings     82
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_6(CODE[11]), STR_5(CODE[20]), STR_4(CODE[12]), STR_3(CODE[13]), 
		 -> STR_2(CODE[10]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2111
                                              8 COMMON     5     5      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     423
                                              3 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     135
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0     135
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0     135
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     801
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0     255
                                              4 COMMON     3     3      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     135
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     135
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     120
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Left
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Right
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jul 23 15:40:43 2021

                        pc 0002                         l60 0684                         l61 068A  
                       l70 06A7                         l62 068B                         l71 06AD  
                       l63 0691                         l64 0692                         l73 06AE  
                       l65 0698                         l57 067A                         l66 0699  
                       l58 067D                         l67 069F                         l59 0683  
                       l91 0627                         l68 06A0                         l76 060C  
                       l69 06A6                         l85 064B                         l79 05D8  
                       l88 06F8                         l97 0670                         u10 0676  
                       u11 0675                         u20 0681                         u21 0680  
                       u30 0688                         u31 0687                         u40 068F  
                       u41 068E                         u50 0696                         u51 0695  
                       u60 069D                         u61 069C                         u70 06A4  
                       u71 06A3                         u80 06AB                         u81 06AA  
                       fsr 0004                        l100 05F2                        l103 05E5  
                      l701 0688                        l711 06AB                        l703 068F  
                      l705 0696                        l721 061F                        l713 060E  
                      l707 069D                        l731 0600                        l723 0622  
                      l715 0611                        l709 06A4                        l733 0609  
                      l725 05F4                        l741 06CD                        l717 0617  
                      l901 0772                        l727 05F7                        l743 06D3  
                      l735 06AF                        l719 061A                        l911 0786  
                      l729 05FD                        l745 05CC                        l737 06B5  
                      l921 0797                        l913 078C                        l739 06BE  
                      l851 0640                        l843 0629                        l931 07E5  
                      l923 07A4                        l915 0795                        l907 0774  
                      l853 0645                        l845 062E                        l861 0663  
                      l933 07EB                        l925 07A9                        l909 0781  
                      l695 0672                        l847 0633                        l767 05D9  
                      l855 064D                        l927 07AF                        l871 0703  
                      l863 06F9                        l697 0676                        l849 063A  
                      l769 05E6                        l857 0650                        l929 07B8  
                      l881 0724                        l873 0708                        l865 06FC  
                      l699 0681                        l859 065D                        l891 074C  
                      l883 0731                        l875 0710                        l867 06FD  
                      l893 0752                        l885 0736                        l877 0716  
                      l869 06FE                        l895 075F                        l887 073E  
                      l879 071E                        l897 0764                        l889 0744  
                      l899 076C                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RC7 003F                        _RD6 0046  
                      _RD7 0047                        u140 062E                        u141 062D  
                      u150 0640                        u151 063F                        u207 0758  
                      u160 0670                        u161 066F                        u217 077A  
                      u170 0795                        u227 079D                        u171 0794  
                      u180 07B8                        u237 07F1                        u181 07B7  
                      u247 061C                        u257 0624                        u267 06B9  
                      u277 06C8                        u197 072A                        u287 06D9  
                      u297 0604                        fsr0 0004                       STR_1 001D  
                     STR_2 0051                       STR_3 002D                       STR_4 003A  
                     STR_5 0009                       STR_6 0046          ?_Lcd_Write_String 0070  
                     _main 06F9                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0073            __end_of_Lcd_Cmd 060D                      ?_main 0070  
  __size_of_Lcd_Set_Cursor 0024                      _TRISD 0088    __size_of_Lcd_Shift_Left 000D  
                    main@a 007B                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 06F9           __end_of_Lcd_Port 06AF  
          __initialization 07FC               __end_of_main 07FC                     ??_main 0078  
       __size_of_Lcd_Clear 000D                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 001B  
 __size_of_Lcd_Shift_Right 000D            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074  
  __end_of__initialization 07FC          __end_of_Lcd_Clear 05D9             __pcstackCOMMON 0070  
           _Lcd_Set_Cursor 0628             _Lcd_Shift_Left 05D9                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pmaintext 06F9  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 064C     __end_of_Lcd_Shift_Left 05E6          ??_Lcd_Shift_Right 0074  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 0003  
           _Lcd_Write_Char 060D                    _Lcd_Cmd 05F3            ?_Lcd_Set_Cursor 0074  
                  __ptext1 064C                    __ptext2 060D                    __ptext3 05E6  
                  __ptext4 05D9                    __ptext5 0628                    __ptext6 06AF  
                  __ptext7 05CC                    __ptext8 05F3                    __ptext9 0671  
          ?_Lcd_Shift_Left 0070     __end_of_Lcd_Write_Char 0628       end_of_initialization 07FC  
                Lcd_Port@a 0070                  _PORTCbits 0007                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0075          Lcd_Write_String@i 0073  
                _Lcd_Clear 05CC           _Lcd_Write_String 064C        start_initialization 07FC  
        __size_of_Lcd_Init 004A          __size_of_Lcd_Port 003E                 ?_Lcd_Clear 0070  
          _Lcd_Shift_Right 05E6            Lcd_Write_Char@a 0072                  ___latbits 0002  
                 ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0075           ??_Lcd_Shift_Left 0074  
                __pstrings 0003    __end_of_Lcd_Shift_Right 05F3                   Lcd_Cmd@a 0073  
              ??_Lcd_Clear 0074                __stringbase 0008           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 06AF                   _Lcd_Port 0671   __end_of_Lcd_Write_String 0671  
         __size_of_Lcd_Cmd 001A         __end_of__stringtab 0009              __size_of_main 0103  
         ?_Lcd_Shift_Right 0070                  stringcode 0003         Lcd_Set_Cursor@temp 0077  
                 stringdir 0003                   stringtab 0003  
